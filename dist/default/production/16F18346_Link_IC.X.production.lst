

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Mon May 14 10:56:13 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F18346
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	eeprom_data,global,class=EEDATA,space=3,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	stringtext1,global,class=STRCODE,delta=2
     7                           	psect	stringtext2,global,class=STRCODE,delta=2
     8                           	psect	bitnvCOMMON,global,bit,class=COMMON,space=1,delta=1
     9                           	psect	cinit,global,class=CODE,merge=1,delta=2
    10                           	psect	bitbssCOMMON,global,bit,class=COMMON,space=1,delta=1
    11                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	clrtext,global,class=CODE,delta=2
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    19                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    20                           	psect	text1,local,class=CODE,merge=1,delta=2
    21                           	psect	text2,local,class=CODE,merge=1,delta=2
    22                           	psect	text3,local,class=CODE,merge=1,delta=2
    23                           	psect	text4,local,class=CODE,merge=1,delta=2
    24                           	psect	text5,local,class=CODE,merge=1,delta=2
    25                           	psect	text6,local,class=CODE,merge=1,delta=2
    26                           	psect	swtext1,local,class=CONST,delta=2
    27                           	psect	text7,local,class=CODE,merge=1,delta=2
    28                           	psect	text8,local,class=CODE,merge=1,delta=2
    29                           	psect	text9,local,class=CODE,merge=1,delta=2
    30                           	psect	swtext2,local,class=CONST,delta=2
    31                           	psect	text10,local,class=CODE,merge=1,delta=2
    32                           	psect	text11,local,class=CODE,merge=1,delta=2
    33                           	psect	text12,local,class=CODE,merge=1,delta=2
    34                           	psect	text13,local,class=CODE,merge=1,delta=2
    35                           	psect	text14,local,class=CODE,merge=1,delta=2
    36                           	psect	text15,local,class=CODE,merge=1,delta=2
    37                           	psect	text16,local,class=CODE,merge=1,delta=2
    38                           	psect	text17,local,class=CODE,merge=1,delta=2
    39                           	psect	text18,local,class=CODE,merge=1,delta=2
    40                           	psect	text19,local,class=CODE,merge=1,delta=2
    41                           	psect	text20,local,class=CODE,merge=1,delta=2
    42                           	psect	text21,local,class=CODE,merge=1,delta=2
    43                           	psect	text22,local,class=CODE,merge=1,delta=2
    44                           	psect	text23,local,class=CODE,merge=1,delta=2
    45                           	psect	text24,local,class=CODE,merge=1,delta=2
    46                           	psect	text25,local,class=CODE,merge=1,delta=2
    47                           	psect	intentry,global,class=CODE,delta=2
    48                           	psect	text27,local,class=CODE,merge=1,delta=2
    49                           	psect	text28,local,class=CODE,merge=1,delta=2
    50                           	psect	text29,local,class=CODE,merge=1,delta=2
    51                           	psect	text30,local,class=CODE,merge=1,delta=2
    52                           	dabs	1,0xCA0,32
    53                           	dabs	1,0xC20,80
    54                           	dabs	1,0xBA0,80
    55                           	dabs	1,0xB30,64
    56                           	dabs	1,0xB20,16
    57                           	dabs	1,0xAA0,80
    58                           	dabs	1,0xA20,80
    59                           	dabs	1,0x9A0,80
    60                           	dabs	1,0x920,80
    61                           	dabs	1,0x8A0,80
    62                           	dabs	1,0x820,80
    63                           	dabs	1,0x7E0,16
    64                           	dabs	1,0x24F0,0,_spi1_send_buffer_data
    65                           	dabs	1,0x25F0,0,_spi2_buffer_data
    66                           	dabs	1,0x26F0,0,_spi1_buffer_data
    67                           	dabs	1,0x7E,2
    68  0000                     
    69                           ; Version 1.45
    70                           ; Generated 16/11/2017 GMT
    71                           ; 
    72                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    73                           ; All rights reserved.
    74                           ; 
    75                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    76                           ; 
    77                           ; Redistribution and use in source and binary forms, with or without modification, are
    78                           ; permitted provided that the following conditions are met:
    79                           ; 
    80                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    81                           ;        conditions and the following disclaimer.
    82                           ; 
    83                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    84                           ;        of conditions and the following disclaimer in the documentation and/or other
    85                           ;        materials provided with the distribution.
    86                           ; 
    87                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    88                           ;        software without specific prior written permission.
    89                           ; 
    90                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    91                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    92                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    93                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    94                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    95                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    96                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    97                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    98                           ; 
    99                           ; 
   100                           ; Code-generator required, PIC16F18346 Definitions
   101                           ; 
   102                           ; SFR Addresses
   103  0000                     	;# 
   104  0001                     	;# 
   105  0002                     	;# 
   106  0003                     	;# 
   107  0004                     	;# 
   108  0005                     	;# 
   109  0006                     	;# 
   110  0007                     	;# 
   111  0008                     	;# 
   112  0009                     	;# 
   113  000A                     	;# 
   114  000B                     	;# 
   115  000C                     	;# 
   116  000D                     	;# 
   117  000E                     	;# 
   118  0010                     	;# 
   119  0011                     	;# 
   120  0012                     	;# 
   121  0013                     	;# 
   122  0014                     	;# 
   123  0015                     	;# 
   124  0015                     	;# 
   125  0016                     	;# 
   126  0016                     	;# 
   127  0017                     	;# 
   128  0018                     	;# 
   129  0019                     	;# 
   130  0019                     	;# 
   131  001A                     	;# 
   132  001B                     	;# 
   133  001C                     	;# 
   134  001D                     	;# 
   135  001E                     	;# 
   136  001F                     	;# 
   137  008C                     	;# 
   138  008D                     	;# 
   139  008E                     	;# 
   140  0090                     	;# 
   141  0091                     	;# 
   142  0092                     	;# 
   143  0093                     	;# 
   144  0094                     	;# 
   145  0097                     	;# 
   146  009B                     	;# 
   147  009B                     	;# 
   148  009C                     	;# 
   149  009D                     	;# 
   150  009E                     	;# 
   151  009F                     	;# 
   152  010C                     	;# 
   153  010D                     	;# 
   154  010E                     	;# 
   155  0111                     	;# 
   156  0112                     	;# 
   157  0113                     	;# 
   158  0114                     	;# 
   159  0115                     	;# 
   160  0116                     	;# 
   161  0117                     	;# 
   162  0118                     	;# 
   163  0119                     	;# 
   164  018C                     	;# 
   165  018D                     	;# 
   166  018E                     	;# 
   167  0197                     	;# 
   168  0199                     	;# 
   169  0199                     	;# 
   170  0199                     	;# 
   171  019A                     	;# 
   172  019A                     	;# 
   173  019A                     	;# 
   174  019B                     	;# 
   175  019B                     	;# 
   176  019B                     	;# 
   177  019B                     	;# 
   178  019B                     	;# 
   179  019C                     	;# 
   180  019C                     	;# 
   181  019C                     	;# 
   182  019D                     	;# 
   183  019D                     	;# 
   184  019D                     	;# 
   185  019E                     	;# 
   186  019E                     	;# 
   187  019E                     	;# 
   188  019F                     	;# 
   189  019F                     	;# 
   190  019F                     	;# 
   191  019F                     	;# 
   192  019F                     	;# 
   193  020C                     	;# 
   194  020D                     	;# 
   195  020E                     	;# 
   196  0211                     	;# 
   197  0211                     	;# 
   198  0212                     	;# 
   199  0212                     	;# 
   200  0213                     	;# 
   201  0213                     	;# 
   202  0214                     	;# 
   203  0214                     	;# 
   204  0215                     	;# 
   205  0215                     	;# 
   206  0215                     	;# 
   207  0215                     	;# 
   208  0216                     	;# 
   209  0216                     	;# 
   210  0217                     	;# 
   211  0217                     	;# 
   212  0219                     	;# 
   213  021A                     	;# 
   214  021B                     	;# 
   215  021C                     	;# 
   216  021D                     	;# 
   217  021D                     	;# 
   218  021E                     	;# 
   219  021F                     	;# 
   220  028C                     	;# 
   221  028D                     	;# 
   222  028E                     	;# 
   223  0291                     	;# 
   224  0291                     	;# 
   225  0292                     	;# 
   226  0293                     	;# 
   227  0294                     	;# 
   228  0295                     	;# 
   229  0295                     	;# 
   230  0296                     	;# 
   231  0297                     	;# 
   232  0298                     	;# 
   233  029F                     	;# 
   234  030C                     	;# 
   235  030D                     	;# 
   236  030E                     	;# 
   237  0311                     	;# 
   238  0311                     	;# 
   239  0312                     	;# 
   240  0313                     	;# 
   241  0314                     	;# 
   242  0315                     	;# 
   243  0315                     	;# 
   244  0316                     	;# 
   245  0317                     	;# 
   246  0318                     	;# 
   247  038C                     	;# 
   248  038D                     	;# 
   249  038E                     	;# 
   250  0391                     	;# 
   251  0392                     	;# 
   252  0393                     	;# 
   253  0394                     	;# 
   254  0395                     	;# 
   255  0396                     	;# 
   256  0397                     	;# 
   257  0398                     	;# 
   258  0399                     	;# 
   259  039A                     	;# 
   260  039C                     	;# 
   261  039D                     	;# 
   262  039E                     	;# 
   263  039F                     	;# 
   264  0411                     	;# 
   265  0411                     	;# 
   266  0412                     	;# 
   267  0413                     	;# 
   268  0414                     	;# 
   269  0415                     	;# 
   270  0416                     	;# 
   271  0417                     	;# 
   272  0418                     	;# 
   273  0418                     	;# 
   274  0419                     	;# 
   275  041A                     	;# 
   276  041B                     	;# 
   277  041C                     	;# 
   278  041D                     	;# 
   279  041E                     	;# 
   280  041F                     	;# 
   281  0498                     	;# 
   282  0498                     	;# 
   283  0499                     	;# 
   284  049A                     	;# 
   285  049B                     	;# 
   286  049B                     	;# 
   287  049C                     	;# 
   288  049D                     	;# 
   289  049E                     	;# 
   290  049F                     	;# 
   291  0617                     	;# 
   292  0618                     	;# 
   293  0619                     	;# 
   294  0619                     	;# 
   295  061A                     	;# 
   296  061B                     	;# 
   297  061C                     	;# 
   298  061C                     	;# 
   299  061F                     	;# 
   300  0691                     	;# 
   301  0692                     	;# 
   302  0693                     	;# 
   303  0694                     	;# 
   304  0695                     	;# 
   305  0696                     	;# 
   306  0697                     	;# 
   307  0698                     	;# 
   308  0699                     	;# 
   309  0711                     	;# 
   310  0712                     	;# 
   311  0713                     	;# 
   312  0714                     	;# 
   313  0715                     	;# 
   314  0716                     	;# 
   315  0717                     	;# 
   316  0718                     	;# 
   317  0719                     	;# 
   318  0891                     	;# 
   319  0891                     	;# 
   320  0891                     	;# 
   321  0891                     	;# 
   322  0891                     	;# 
   323  0891                     	;# 
   324  0892                     	;# 
   325  0892                     	;# 
   326  0892                     	;# 
   327  0893                     	;# 
   328  0893                     	;# 
   329  0893                     	;# 
   330  0893                     	;# 
   331  0893                     	;# 
   332  0893                     	;# 
   333  0894                     	;# 
   334  0894                     	;# 
   335  0894                     	;# 
   336  0895                     	;# 
   337  0895                     	;# 
   338  0895                     	;# 
   339  0896                     	;# 
   340  0896                     	;# 
   341  0896                     	;# 
   342  089B                     	;# 
   343  0911                     	;# 
   344  0912                     	;# 
   345  0913                     	;# 
   346  0914                     	;# 
   347  0915                     	;# 
   348  0916                     	;# 
   349  0918                     	;# 
   350  0919                     	;# 
   351  091A                     	;# 
   352  091B                     	;# 
   353  091C                     	;# 
   354  091D                     	;# 
   355  091E                     	;# 
   356  091F                     	;# 
   357  0E0F                     	;# 
   358  0E10                     	;# 
   359  0E11                     	;# 
   360  0E12                     	;# 
   361  0E13                     	;# 
   362  0E14                     	;# 
   363  0E15                     	;# 
   364  0E16                     	;# 
   365  0E17                     	;# 
   366  0E18                     	;# 
   367  0E19                     	;# 
   368  0E1A                     	;# 
   369  0E1B                     	;# 
   370  0E1C                     	;# 
   371  0E1D                     	;# 
   372  0E1E                     	;# 
   373  0E1F                     	;# 
   374  0E20                     	;# 
   375  0E21                     	;# 
   376  0E22                     	;# 
   377  0E24                     	;# 
   378  0E25                     	;# 
   379  0E28                     	;# 
   380  0E29                     	;# 
   381  0E2A                     	;# 
   382  0E2B                     	;# 
   383  0E2C                     	;# 
   384  0E2D                     	;# 
   385  0E2E                     	;# 
   386  0E2F                     	;# 
   387  0E90                     	;# 
   388  0E91                     	;# 
   389  0E92                     	;# 
   390  0E94                     	;# 
   391  0E95                     	;# 
   392  0E9C                     	;# 
   393  0E9D                     	;# 
   394  0E9E                     	;# 
   395  0E9F                     	;# 
   396  0EA0                     	;# 
   397  0EA1                     	;# 
   398  0EA2                     	;# 
   399  0EA3                     	;# 
   400  0EA4                     	;# 
   401  0EA5                     	;# 
   402  0EA6                     	;# 
   403  0EA7                     	;# 
   404  0F0F                     	;# 
   405  0F10                     	;# 
   406  0F11                     	;# 
   407  0F12                     	;# 
   408  0F13                     	;# 
   409  0F14                     	;# 
   410  0F15                     	;# 
   411  0F16                     	;# 
   412  0F17                     	;# 
   413  0F18                     	;# 
   414  0F19                     	;# 
   415  0F1A                     	;# 
   416  0F1B                     	;# 
   417  0F1C                     	;# 
   418  0F1D                     	;# 
   419  0F1E                     	;# 
   420  0F1F                     	;# 
   421  0F20                     	;# 
   422  0F21                     	;# 
   423  0F22                     	;# 
   424  0F23                     	;# 
   425  0F24                     	;# 
   426  0F25                     	;# 
   427  0F26                     	;# 
   428  0F27                     	;# 
   429  0F28                     	;# 
   430  0F29                     	;# 
   431  0F2A                     	;# 
   432  0F2B                     	;# 
   433  0F2C                     	;# 
   434  0F2D                     	;# 
   435  0F2E                     	;# 
   436  0F2F                     	;# 
   437  0F30                     	;# 
   438  0F31                     	;# 
   439  0F32                     	;# 
   440  0F33                     	;# 
   441  0F34                     	;# 
   442  0F35                     	;# 
   443  0F36                     	;# 
   444  0F37                     	;# 
   445  0FE4                     	;# 
   446  0FE5                     	;# 
   447  0FE6                     	;# 
   448  0FE7                     	;# 
   449  0FE8                     	;# 
   450  0FE9                     	;# 
   451  0FEA                     	;# 
   452  0FEB                     	;# 
   453  0FED                     	;# 
   454  0FEE                     	;# 
   455  0FEF                     	;# 
   456  0000                     	;# 
   457  0001                     	;# 
   458  0002                     	;# 
   459  0003                     	;# 
   460  0004                     	;# 
   461  0005                     	;# 
   462  0006                     	;# 
   463  0007                     	;# 
   464  0008                     	;# 
   465  0009                     	;# 
   466  000A                     	;# 
   467  000B                     	;# 
   468  000C                     	;# 
   469  000D                     	;# 
   470  000E                     	;# 
   471  0010                     	;# 
   472  0011                     	;# 
   473  0012                     	;# 
   474  0013                     	;# 
   475  0014                     	;# 
   476  0015                     	;# 
   477  0015                     	;# 
   478  0016                     	;# 
   479  0016                     	;# 
   480  0017                     	;# 
   481  0018                     	;# 
   482  0019                     	;# 
   483  0019                     	;# 
   484  001A                     	;# 
   485  001B                     	;# 
   486  001C                     	;# 
   487  001D                     	;# 
   488  001E                     	;# 
   489  001F                     	;# 
   490  008C                     	;# 
   491  008D                     	;# 
   492  008E                     	;# 
   493  0090                     	;# 
   494  0091                     	;# 
   495  0092                     	;# 
   496  0093                     	;# 
   497  0094                     	;# 
   498  0097                     	;# 
   499  009B                     	;# 
   500  009B                     	;# 
   501  009C                     	;# 
   502  009D                     	;# 
   503  009E                     	;# 
   504  009F                     	;# 
   505  010C                     	;# 
   506  010D                     	;# 
   507  010E                     	;# 
   508  0111                     	;# 
   509  0112                     	;# 
   510  0113                     	;# 
   511  0114                     	;# 
   512  0115                     	;# 
   513  0116                     	;# 
   514  0117                     	;# 
   515  0118                     	;# 
   516  0119                     	;# 
   517  018C                     	;# 
   518  018D                     	;# 
   519  018E                     	;# 
   520  0197                     	;# 
   521  0199                     	;# 
   522  0199                     	;# 
   523  0199                     	;# 
   524  019A                     	;# 
   525  019A                     	;# 
   526  019A                     	;# 
   527  019B                     	;# 
   528  019B                     	;# 
   529  019B                     	;# 
   530  019B                     	;# 
   531  019B                     	;# 
   532  019C                     	;# 
   533  019C                     	;# 
   534  019C                     	;# 
   535  019D                     	;# 
   536  019D                     	;# 
   537  019D                     	;# 
   538  019E                     	;# 
   539  019E                     	;# 
   540  019E                     	;# 
   541  019F                     	;# 
   542  019F                     	;# 
   543  019F                     	;# 
   544  019F                     	;# 
   545  019F                     	;# 
   546  020C                     	;# 
   547  020D                     	;# 
   548  020E                     	;# 
   549  0211                     	;# 
   550  0211                     	;# 
   551  0212                     	;# 
   552  0212                     	;# 
   553  0213                     	;# 
   554  0213                     	;# 
   555  0214                     	;# 
   556  0214                     	;# 
   557  0215                     	;# 
   558  0215                     	;# 
   559  0215                     	;# 
   560  0215                     	;# 
   561  0216                     	;# 
   562  0216                     	;# 
   563  0217                     	;# 
   564  0217                     	;# 
   565  0219                     	;# 
   566  021A                     	;# 
   567  021B                     	;# 
   568  021C                     	;# 
   569  021D                     	;# 
   570  021D                     	;# 
   571  021E                     	;# 
   572  021F                     	;# 
   573  028C                     	;# 
   574  028D                     	;# 
   575  028E                     	;# 
   576  0291                     	;# 
   577  0291                     	;# 
   578  0292                     	;# 
   579  0293                     	;# 
   580  0294                     	;# 
   581  0295                     	;# 
   582  0295                     	;# 
   583  0296                     	;# 
   584  0297                     	;# 
   585  0298                     	;# 
   586  029F                     	;# 
   587  030C                     	;# 
   588  030D                     	;# 
   589  030E                     	;# 
   590  0311                     	;# 
   591  0311                     	;# 
   592  0312                     	;# 
   593  0313                     	;# 
   594  0314                     	;# 
   595  0315                     	;# 
   596  0315                     	;# 
   597  0316                     	;# 
   598  0317                     	;# 
   599  0318                     	;# 
   600  038C                     	;# 
   601  038D                     	;# 
   602  038E                     	;# 
   603  0391                     	;# 
   604  0392                     	;# 
   605  0393                     	;# 
   606  0394                     	;# 
   607  0395                     	;# 
   608  0396                     	;# 
   609  0397                     	;# 
   610  0398                     	;# 
   611  0399                     	;# 
   612  039A                     	;# 
   613  039C                     	;# 
   614  039D                     	;# 
   615  039E                     	;# 
   616  039F                     	;# 
   617  0411                     	;# 
   618  0411                     	;# 
   619  0412                     	;# 
   620  0413                     	;# 
   621  0414                     	;# 
   622  0415                     	;# 
   623  0416                     	;# 
   624  0417                     	;# 
   625  0418                     	;# 
   626  0418                     	;# 
   627  0419                     	;# 
   628  041A                     	;# 
   629  041B                     	;# 
   630  041C                     	;# 
   631  041D                     	;# 
   632  041E                     	;# 
   633  041F                     	;# 
   634  0498                     	;# 
   635  0498                     	;# 
   636  0499                     	;# 
   637  049A                     	;# 
   638  049B                     	;# 
   639  049B                     	;# 
   640  049C                     	;# 
   641  049D                     	;# 
   642  049E                     	;# 
   643  049F                     	;# 
   644  0617                     	;# 
   645  0618                     	;# 
   646  0619                     	;# 
   647  0619                     	;# 
   648  061A                     	;# 
   649  061B                     	;# 
   650  061C                     	;# 
   651  061C                     	;# 
   652  061F                     	;# 
   653  0691                     	;# 
   654  0692                     	;# 
   655  0693                     	;# 
   656  0694                     	;# 
   657  0695                     	;# 
   658  0696                     	;# 
   659  0697                     	;# 
   660  0698                     	;# 
   661  0699                     	;# 
   662  0711                     	;# 
   663  0712                     	;# 
   664  0713                     	;# 
   665  0714                     	;# 
   666  0715                     	;# 
   667  0716                     	;# 
   668  0717                     	;# 
   669  0718                     	;# 
   670  0719                     	;# 
   671  0891                     	;# 
   672  0891                     	;# 
   673  0891                     	;# 
   674  0891                     	;# 
   675  0891                     	;# 
   676  0891                     	;# 
   677  0892                     	;# 
   678  0892                     	;# 
   679  0892                     	;# 
   680  0893                     	;# 
   681  0893                     	;# 
   682  0893                     	;# 
   683  0893                     	;# 
   684  0893                     	;# 
   685  0893                     	;# 
   686  0894                     	;# 
   687  0894                     	;# 
   688  0894                     	;# 
   689  0895                     	;# 
   690  0895                     	;# 
   691  0895                     	;# 
   692  0896                     	;# 
   693  0896                     	;# 
   694  0896                     	;# 
   695  089B                     	;# 
   696  0911                     	;# 
   697  0912                     	;# 
   698  0913                     	;# 
   699  0914                     	;# 
   700  0915                     	;# 
   701  0916                     	;# 
   702  0918                     	;# 
   703  0919                     	;# 
   704  091A                     	;# 
   705  091B                     	;# 
   706  091C                     	;# 
   707  091D                     	;# 
   708  091E                     	;# 
   709  091F                     	;# 
   710  0E0F                     	;# 
   711  0E10                     	;# 
   712  0E11                     	;# 
   713  0E12                     	;# 
   714  0E13                     	;# 
   715  0E14                     	;# 
   716  0E15                     	;# 
   717  0E16                     	;# 
   718  0E17                     	;# 
   719  0E18                     	;# 
   720  0E19                     	;# 
   721  0E1A                     	;# 
   722  0E1B                     	;# 
   723  0E1C                     	;# 
   724  0E1D                     	;# 
   725  0E1E                     	;# 
   726  0E1F                     	;# 
   727  0E20                     	;# 
   728  0E21                     	;# 
   729  0E22                     	;# 
   730  0E24                     	;# 
   731  0E25                     	;# 
   732  0E28                     	;# 
   733  0E29                     	;# 
   734  0E2A                     	;# 
   735  0E2B                     	;# 
   736  0E2C                     	;# 
   737  0E2D                     	;# 
   738  0E2E                     	;# 
   739  0E2F                     	;# 
   740  0E90                     	;# 
   741  0E91                     	;# 
   742  0E92                     	;# 
   743  0E94                     	;# 
   744  0E95                     	;# 
   745  0E9C                     	;# 
   746  0E9D                     	;# 
   747  0E9E                     	;# 
   748  0E9F                     	;# 
   749  0EA0                     	;# 
   750  0EA1                     	;# 
   751  0EA2                     	;# 
   752  0EA3                     	;# 
   753  0EA4                     	;# 
   754  0EA5                     	;# 
   755  0EA6                     	;# 
   756  0EA7                     	;# 
   757  0F0F                     	;# 
   758  0F10                     	;# 
   759  0F11                     	;# 
   760  0F12                     	;# 
   761  0F13                     	;# 
   762  0F14                     	;# 
   763  0F15                     	;# 
   764  0F16                     	;# 
   765  0F17                     	;# 
   766  0F18                     	;# 
   767  0F19                     	;# 
   768  0F1A                     	;# 
   769  0F1B                     	;# 
   770  0F1C                     	;# 
   771  0F1D                     	;# 
   772  0F1E                     	;# 
   773  0F1F                     	;# 
   774  0F20                     	;# 
   775  0F21                     	;# 
   776  0F22                     	;# 
   777  0F23                     	;# 
   778  0F24                     	;# 
   779  0F25                     	;# 
   780  0F26                     	;# 
   781  0F27                     	;# 
   782  0F28                     	;# 
   783  0F29                     	;# 
   784  0F2A                     	;# 
   785  0F2B                     	;# 
   786  0F2C                     	;# 
   787  0F2D                     	;# 
   788  0F2E                     	;# 
   789  0F2F                     	;# 
   790  0F30                     	;# 
   791  0F31                     	;# 
   792  0F32                     	;# 
   793  0F33                     	;# 
   794  0F34                     	;# 
   795  0F35                     	;# 
   796  0F36                     	;# 
   797  0F37                     	;# 
   798  0FE4                     	;# 
   799  0FE5                     	;# 
   800  0FE6                     	;# 
   801  0FE7                     	;# 
   802  0FE8                     	;# 
   803  0FE9                     	;# 
   804  0FEA                     	;# 
   805  0FEB                     	;# 
   806  0FED                     	;# 
   807  0FEE                     	;# 
   808  0FEF                     	;# 
   809  0000                     	;# 
   810  0001                     	;# 
   811  0002                     	;# 
   812  0003                     	;# 
   813  0004                     	;# 
   814  0005                     	;# 
   815  0006                     	;# 
   816  0007                     	;# 
   817  0008                     	;# 
   818  0009                     	;# 
   819  000A                     	;# 
   820  000B                     	;# 
   821  000C                     	;# 
   822  000D                     	;# 
   823  000E                     	;# 
   824  0010                     	;# 
   825  0011                     	;# 
   826  0012                     	;# 
   827  0013                     	;# 
   828  0014                     	;# 
   829  0015                     	;# 
   830  0015                     	;# 
   831  0016                     	;# 
   832  0016                     	;# 
   833  0017                     	;# 
   834  0018                     	;# 
   835  0019                     	;# 
   836  0019                     	;# 
   837  001A                     	;# 
   838  001B                     	;# 
   839  001C                     	;# 
   840  001D                     	;# 
   841  001E                     	;# 
   842  001F                     	;# 
   843  008C                     	;# 
   844  008D                     	;# 
   845  008E                     	;# 
   846  0090                     	;# 
   847  0091                     	;# 
   848  0092                     	;# 
   849  0093                     	;# 
   850  0094                     	;# 
   851  0097                     	;# 
   852  009B                     	;# 
   853  009B                     	;# 
   854  009C                     	;# 
   855  009D                     	;# 
   856  009E                     	;# 
   857  009F                     	;# 
   858  010C                     	;# 
   859  010D                     	;# 
   860  010E                     	;# 
   861  0111                     	;# 
   862  0112                     	;# 
   863  0113                     	;# 
   864  0114                     	;# 
   865  0115                     	;# 
   866  0116                     	;# 
   867  0117                     	;# 
   868  0118                     	;# 
   869  0119                     	;# 
   870  018C                     	;# 
   871  018D                     	;# 
   872  018E                     	;# 
   873  0197                     	;# 
   874  0199                     	;# 
   875  0199                     	;# 
   876  0199                     	;# 
   877  019A                     	;# 
   878  019A                     	;# 
   879  019A                     	;# 
   880  019B                     	;# 
   881  019B                     	;# 
   882  019B                     	;# 
   883  019B                     	;# 
   884  019B                     	;# 
   885  019C                     	;# 
   886  019C                     	;# 
   887  019C                     	;# 
   888  019D                     	;# 
   889  019D                     	;# 
   890  019D                     	;# 
   891  019E                     	;# 
   892  019E                     	;# 
   893  019E                     	;# 
   894  019F                     	;# 
   895  019F                     	;# 
   896  019F                     	;# 
   897  019F                     	;# 
   898  019F                     	;# 
   899  020C                     	;# 
   900  020D                     	;# 
   901  020E                     	;# 
   902  0211                     	;# 
   903  0211                     	;# 
   904  0212                     	;# 
   905  0212                     	;# 
   906  0213                     	;# 
   907  0213                     	;# 
   908  0214                     	;# 
   909  0214                     	;# 
   910  0215                     	;# 
   911  0215                     	;# 
   912  0215                     	;# 
   913  0215                     	;# 
   914  0216                     	;# 
   915  0216                     	;# 
   916  0217                     	;# 
   917  0217                     	;# 
   918  0219                     	;# 
   919  021A                     	;# 
   920  021B                     	;# 
   921  021C                     	;# 
   922  021D                     	;# 
   923  021D                     	;# 
   924  021E                     	;# 
   925  021F                     	;# 
   926  028C                     	;# 
   927  028D                     	;# 
   928  028E                     	;# 
   929  0291                     	;# 
   930  0291                     	;# 
   931  0292                     	;# 
   932  0293                     	;# 
   933  0294                     	;# 
   934  0295                     	;# 
   935  0295                     	;# 
   936  0296                     	;# 
   937  0297                     	;# 
   938  0298                     	;# 
   939  029F                     	;# 
   940  030C                     	;# 
   941  030D                     	;# 
   942  030E                     	;# 
   943  0311                     	;# 
   944  0311                     	;# 
   945  0312                     	;# 
   946  0313                     	;# 
   947  0314                     	;# 
   948  0315                     	;# 
   949  0315                     	;# 
   950  0316                     	;# 
   951  0317                     	;# 
   952  0318                     	;# 
   953  038C                     	;# 
   954  038D                     	;# 
   955  038E                     	;# 
   956  0391                     	;# 
   957  0392                     	;# 
   958  0393                     	;# 
   959  0394                     	;# 
   960  0395                     	;# 
   961  0396                     	;# 
   962  0397                     	;# 
   963  0398                     	;# 
   964  0399                     	;# 
   965  039A                     	;# 
   966  039C                     	;# 
   967  039D                     	;# 
   968  039E                     	;# 
   969  039F                     	;# 
   970  0411                     	;# 
   971  0411                     	;# 
   972  0412                     	;# 
   973  0413                     	;# 
   974  0414                     	;# 
   975  0415                     	;# 
   976  0416                     	;# 
   977  0417                     	;# 
   978  0418                     	;# 
   979  0418                     	;# 
   980  0419                     	;# 
   981  041A                     	;# 
   982  041B                     	;# 
   983  041C                     	;# 
   984  041D                     	;# 
   985  041E                     	;# 
   986  041F                     	;# 
   987  0498                     	;# 
   988  0498                     	;# 
   989  0499                     	;# 
   990  049A                     	;# 
   991  049B                     	;# 
   992  049B                     	;# 
   993  049C                     	;# 
   994  049D                     	;# 
   995  049E                     	;# 
   996  049F                     	;# 
   997  0617                     	;# 
   998  0618                     	;# 
   999  0619                     	;# 
  1000  0619                     	;# 
  1001  061A                     	;# 
  1002  061B                     	;# 
  1003  061C                     	;# 
  1004  061C                     	;# 
  1005  061F                     	;# 
  1006  0691                     	;# 
  1007  0692                     	;# 
  1008  0693                     	;# 
  1009  0694                     	;# 
  1010  0695                     	;# 
  1011  0696                     	;# 
  1012  0697                     	;# 
  1013  0698                     	;# 
  1014  0699                     	;# 
  1015  0711                     	;# 
  1016  0712                     	;# 
  1017  0713                     	;# 
  1018  0714                     	;# 
  1019  0715                     	;# 
  1020  0716                     	;# 
  1021  0717                     	;# 
  1022  0718                     	;# 
  1023  0719                     	;# 
  1024  0891                     	;# 
  1025  0891                     	;# 
  1026  0891                     	;# 
  1027  0891                     	;# 
  1028  0891                     	;# 
  1029  0891                     	;# 
  1030  0892                     	;# 
  1031  0892                     	;# 
  1032  0892                     	;# 
  1033  0893                     	;# 
  1034  0893                     	;# 
  1035  0893                     	;# 
  1036  0893                     	;# 
  1037  0893                     	;# 
  1038  0893                     	;# 
  1039  0894                     	;# 
  1040  0894                     	;# 
  1041  0894                     	;# 
  1042  0895                     	;# 
  1043  0895                     	;# 
  1044  0895                     	;# 
  1045  0896                     	;# 
  1046  0896                     	;# 
  1047  0896                     	;# 
  1048  089B                     	;# 
  1049  0911                     	;# 
  1050  0912                     	;# 
  1051  0913                     	;# 
  1052  0914                     	;# 
  1053  0915                     	;# 
  1054  0916                     	;# 
  1055  0918                     	;# 
  1056  0919                     	;# 
  1057  091A                     	;# 
  1058  091B                     	;# 
  1059  091C                     	;# 
  1060  091D                     	;# 
  1061  091E                     	;# 
  1062  091F                     	;# 
  1063  0E0F                     	;# 
  1064  0E10                     	;# 
  1065  0E11                     	;# 
  1066  0E12                     	;# 
  1067  0E13                     	;# 
  1068  0E14                     	;# 
  1069  0E15                     	;# 
  1070  0E16                     	;# 
  1071  0E17                     	;# 
  1072  0E18                     	;# 
  1073  0E19                     	;# 
  1074  0E1A                     	;# 
  1075  0E1B                     	;# 
  1076  0E1C                     	;# 
  1077  0E1D                     	;# 
  1078  0E1E                     	;# 
  1079  0E1F                     	;# 
  1080  0E20                     	;# 
  1081  0E21                     	;# 
  1082  0E22                     	;# 
  1083  0E24                     	;# 
  1084  0E25                     	;# 
  1085  0E28                     	;# 
  1086  0E29                     	;# 
  1087  0E2A                     	;# 
  1088  0E2B                     	;# 
  1089  0E2C                     	;# 
  1090  0E2D                     	;# 
  1091  0E2E                     	;# 
  1092  0E2F                     	;# 
  1093  0E90                     	;# 
  1094  0E91                     	;# 
  1095  0E92                     	;# 
  1096  0E94                     	;# 
  1097  0E95                     	;# 
  1098  0E9C                     	;# 
  1099  0E9D                     	;# 
  1100  0E9E                     	;# 
  1101  0E9F                     	;# 
  1102  0EA0                     	;# 
  1103  0EA1                     	;# 
  1104  0EA2                     	;# 
  1105  0EA3                     	;# 
  1106  0EA4                     	;# 
  1107  0EA5                     	;# 
  1108  0EA6                     	;# 
  1109  0EA7                     	;# 
  1110  0F0F                     	;# 
  1111  0F10                     	;# 
  1112  0F11                     	;# 
  1113  0F12                     	;# 
  1114  0F13                     	;# 
  1115  0F14                     	;# 
  1116  0F15                     	;# 
  1117  0F16                     	;# 
  1118  0F17                     	;# 
  1119  0F18                     	;# 
  1120  0F19                     	;# 
  1121  0F1A                     	;# 
  1122  0F1B                     	;# 
  1123  0F1C                     	;# 
  1124  0F1D                     	;# 
  1125  0F1E                     	;# 
  1126  0F1F                     	;# 
  1127  0F20                     	;# 
  1128  0F21                     	;# 
  1129  0F22                     	;# 
  1130  0F23                     	;# 
  1131  0F24                     	;# 
  1132  0F25                     	;# 
  1133  0F26                     	;# 
  1134  0F27                     	;# 
  1135  0F28                     	;# 
  1136  0F29                     	;# 
  1137  0F2A                     	;# 
  1138  0F2B                     	;# 
  1139  0F2C                     	;# 
  1140  0F2D                     	;# 
  1141  0F2E                     	;# 
  1142  0F2F                     	;# 
  1143  0F30                     	;# 
  1144  0F31                     	;# 
  1145  0F32                     	;# 
  1146  0F33                     	;# 
  1147  0F34                     	;# 
  1148  0F35                     	;# 
  1149  0F36                     	;# 
  1150  0F37                     	;# 
  1151  0FE4                     	;# 
  1152  0FE5                     	;# 
  1153  0FE6                     	;# 
  1154  0FE7                     	;# 
  1155  0FE8                     	;# 
  1156  0FE9                     	;# 
  1157  0FEA                     	;# 
  1158  0FEB                     	;# 
  1159  0FED                     	;# 
  1160  0FEE                     	;# 
  1161  0FEF                     	;# 
  1162  0000                     	;# 
  1163  0001                     	;# 
  1164  0002                     	;# 
  1165  0003                     	;# 
  1166  0004                     	;# 
  1167  0005                     	;# 
  1168  0006                     	;# 
  1169  0007                     	;# 
  1170  0008                     	;# 
  1171  0009                     	;# 
  1172  000A                     	;# 
  1173  000B                     	;# 
  1174  000C                     	;# 
  1175  000D                     	;# 
  1176  000E                     	;# 
  1177  0010                     	;# 
  1178  0011                     	;# 
  1179  0012                     	;# 
  1180  0013                     	;# 
  1181  0014                     	;# 
  1182  0015                     	;# 
  1183  0015                     	;# 
  1184  0016                     	;# 
  1185  0016                     	;# 
  1186  0017                     	;# 
  1187  0018                     	;# 
  1188  0019                     	;# 
  1189  0019                     	;# 
  1190  001A                     	;# 
  1191  001B                     	;# 
  1192  001C                     	;# 
  1193  001D                     	;# 
  1194  001E                     	;# 
  1195  001F                     	;# 
  1196  008C                     	;# 
  1197  008D                     	;# 
  1198  008E                     	;# 
  1199  0090                     	;# 
  1200  0091                     	;# 
  1201  0092                     	;# 
  1202  0093                     	;# 
  1203  0094                     	;# 
  1204  0097                     	;# 
  1205  009B                     	;# 
  1206  009B                     	;# 
  1207  009C                     	;# 
  1208  009D                     	;# 
  1209  009E                     	;# 
  1210  009F                     	;# 
  1211  010C                     	;# 
  1212  010D                     	;# 
  1213  010E                     	;# 
  1214  0111                     	;# 
  1215  0112                     	;# 
  1216  0113                     	;# 
  1217  0114                     	;# 
  1218  0115                     	;# 
  1219  0116                     	;# 
  1220  0117                     	;# 
  1221  0118                     	;# 
  1222  0119                     	;# 
  1223  018C                     	;# 
  1224  018D                     	;# 
  1225  018E                     	;# 
  1226  0197                     	;# 
  1227  0199                     	;# 
  1228  0199                     	;# 
  1229  0199                     	;# 
  1230  019A                     	;# 
  1231  019A                     	;# 
  1232  019A                     	;# 
  1233  019B                     	;# 
  1234  019B                     	;# 
  1235  019B                     	;# 
  1236  019B                     	;# 
  1237  019B                     	;# 
  1238  019C                     	;# 
  1239  019C                     	;# 
  1240  019C                     	;# 
  1241  019D                     	;# 
  1242  019D                     	;# 
  1243  019D                     	;# 
  1244  019E                     	;# 
  1245  019E                     	;# 
  1246  019E                     	;# 
  1247  019F                     	;# 
  1248  019F                     	;# 
  1249  019F                     	;# 
  1250  019F                     	;# 
  1251  019F                     	;# 
  1252  020C                     	;# 
  1253  020D                     	;# 
  1254  020E                     	;# 
  1255  0211                     	;# 
  1256  0211                     	;# 
  1257  0212                     	;# 
  1258  0212                     	;# 
  1259  0213                     	;# 
  1260  0213                     	;# 
  1261  0214                     	;# 
  1262  0214                     	;# 
  1263  0215                     	;# 
  1264  0215                     	;# 
  1265  0215                     	;# 
  1266  0215                     	;# 
  1267  0216                     	;# 
  1268  0216                     	;# 
  1269  0217                     	;# 
  1270  0217                     	;# 
  1271  0219                     	;# 
  1272  021A                     	;# 
  1273  021B                     	;# 
  1274  021C                     	;# 
  1275  021D                     	;# 
  1276  021D                     	;# 
  1277  021E                     	;# 
  1278  021F                     	;# 
  1279  028C                     	;# 
  1280  028D                     	;# 
  1281  028E                     	;# 
  1282  0291                     	;# 
  1283  0291                     	;# 
  1284  0292                     	;# 
  1285  0293                     	;# 
  1286  0294                     	;# 
  1287  0295                     	;# 
  1288  0295                     	;# 
  1289  0296                     	;# 
  1290  0297                     	;# 
  1291  0298                     	;# 
  1292  029F                     	;# 
  1293  030C                     	;# 
  1294  030D                     	;# 
  1295  030E                     	;# 
  1296  0311                     	;# 
  1297  0311                     	;# 
  1298  0312                     	;# 
  1299  0313                     	;# 
  1300  0314                     	;# 
  1301  0315                     	;# 
  1302  0315                     	;# 
  1303  0316                     	;# 
  1304  0317                     	;# 
  1305  0318                     	;# 
  1306  038C                     	;# 
  1307  038D                     	;# 
  1308  038E                     	;# 
  1309  0391                     	;# 
  1310  0392                     	;# 
  1311  0393                     	;# 
  1312  0394                     	;# 
  1313  0395                     	;# 
  1314  0396                     	;# 
  1315  0397                     	;# 
  1316  0398                     	;# 
  1317  0399                     	;# 
  1318  039A                     	;# 
  1319  039C                     	;# 
  1320  039D                     	;# 
  1321  039E                     	;# 
  1322  039F                     	;# 
  1323  0411                     	;# 
  1324  0411                     	;# 
  1325  0412                     	;# 
  1326  0413                     	;# 
  1327  0414                     	;# 
  1328  0415                     	;# 
  1329  0416                     	;# 
  1330  0417                     	;# 
  1331  0418                     	;# 
  1332  0418                     	;# 
  1333  0419                     	;# 
  1334  041A                     	;# 
  1335  041B                     	;# 
  1336  041C                     	;# 
  1337  041D                     	;# 
  1338  041E                     	;# 
  1339  041F                     	;# 
  1340  0498                     	;# 
  1341  0498                     	;# 
  1342  0499                     	;# 
  1343  049A                     	;# 
  1344  049B                     	;# 
  1345  049B                     	;# 
  1346  049C                     	;# 
  1347  049D                     	;# 
  1348  049E                     	;# 
  1349  049F                     	;# 
  1350  0617                     	;# 
  1351  0618                     	;# 
  1352  0619                     	;# 
  1353  0619                     	;# 
  1354  061A                     	;# 
  1355  061B                     	;# 
  1356  061C                     	;# 
  1357  061C                     	;# 
  1358  061F                     	;# 
  1359  0691                     	;# 
  1360  0692                     	;# 
  1361  0693                     	;# 
  1362  0694                     	;# 
  1363  0695                     	;# 
  1364  0696                     	;# 
  1365  0697                     	;# 
  1366  0698                     	;# 
  1367  0699                     	;# 
  1368  0711                     	;# 
  1369  0712                     	;# 
  1370  0713                     	;# 
  1371  0714                     	;# 
  1372  0715                     	;# 
  1373  0716                     	;# 
  1374  0717                     	;# 
  1375  0718                     	;# 
  1376  0719                     	;# 
  1377  0891                     	;# 
  1378  0891                     	;# 
  1379  0891                     	;# 
  1380  0891                     	;# 
  1381  0891                     	;# 
  1382  0891                     	;# 
  1383  0892                     	;# 
  1384  0892                     	;# 
  1385  0892                     	;# 
  1386  0893                     	;# 
  1387  0893                     	;# 
  1388  0893                     	;# 
  1389  0893                     	;# 
  1390  0893                     	;# 
  1391  0893                     	;# 
  1392  0894                     	;# 
  1393  0894                     	;# 
  1394  0894                     	;# 
  1395  0895                     	;# 
  1396  0895                     	;# 
  1397  0895                     	;# 
  1398  0896                     	;# 
  1399  0896                     	;# 
  1400  0896                     	;# 
  1401  089B                     	;# 
  1402  0911                     	;# 
  1403  0912                     	;# 
  1404  0913                     	;# 
  1405  0914                     	;# 
  1406  0915                     	;# 
  1407  0916                     	;# 
  1408  0918                     	;# 
  1409  0919                     	;# 
  1410  091A                     	;# 
  1411  091B                     	;# 
  1412  091C                     	;# 
  1413  091D                     	;# 
  1414  091E                     	;# 
  1415  091F                     	;# 
  1416  0E0F                     	;# 
  1417  0E10                     	;# 
  1418  0E11                     	;# 
  1419  0E12                     	;# 
  1420  0E13                     	;# 
  1421  0E14                     	;# 
  1422  0E15                     	;# 
  1423  0E16                     	;# 
  1424  0E17                     	;# 
  1425  0E18                     	;# 
  1426  0E19                     	;# 
  1427  0E1A                     	;# 
  1428  0E1B                     	;# 
  1429  0E1C                     	;# 
  1430  0E1D                     	;# 
  1431  0E1E                     	;# 
  1432  0E1F                     	;# 
  1433  0E20                     	;# 
  1434  0E21                     	;# 
  1435  0E22                     	;# 
  1436  0E24                     	;# 
  1437  0E25                     	;# 
  1438  0E28                     	;# 
  1439  0E29                     	;# 
  1440  0E2A                     	;# 
  1441  0E2B                     	;# 
  1442  0E2C                     	;# 
  1443  0E2D                     	;# 
  1444  0E2E                     	;# 
  1445  0E2F                     	;# 
  1446  0E90                     	;# 
  1447  0E91                     	;# 
  1448  0E92                     	;# 
  1449  0E94                     	;# 
  1450  0E95                     	;# 
  1451  0E9C                     	;# 
  1452  0E9D                     	;# 
  1453  0E9E                     	;# 
  1454  0E9F                     	;# 
  1455  0EA0                     	;# 
  1456  0EA1                     	;# 
  1457  0EA2                     	;# 
  1458  0EA3                     	;# 
  1459  0EA4                     	;# 
  1460  0EA5                     	;# 
  1461  0EA6                     	;# 
  1462  0EA7                     	;# 
  1463  0F0F                     	;# 
  1464  0F10                     	;# 
  1465  0F11                     	;# 
  1466  0F12                     	;# 
  1467  0F13                     	;# 
  1468  0F14                     	;# 
  1469  0F15                     	;# 
  1470  0F16                     	;# 
  1471  0F17                     	;# 
  1472  0F18                     	;# 
  1473  0F19                     	;# 
  1474  0F1A                     	;# 
  1475  0F1B                     	;# 
  1476  0F1C                     	;# 
  1477  0F1D                     	;# 
  1478  0F1E                     	;# 
  1479  0F1F                     	;# 
  1480  0F20                     	;# 
  1481  0F21                     	;# 
  1482  0F22                     	;# 
  1483  0F23                     	;# 
  1484  0F24                     	;# 
  1485  0F25                     	;# 
  1486  0F26                     	;# 
  1487  0F27                     	;# 
  1488  0F28                     	;# 
  1489  0F29                     	;# 
  1490  0F2A                     	;# 
  1491  0F2B                     	;# 
  1492  0F2C                     	;# 
  1493  0F2D                     	;# 
  1494  0F2E                     	;# 
  1495  0F2F                     	;# 
  1496  0F30                     	;# 
  1497  0F31                     	;# 
  1498  0F32                     	;# 
  1499  0F33                     	;# 
  1500  0F34                     	;# 
  1501  0F35                     	;# 
  1502  0F36                     	;# 
  1503  0F37                     	;# 
  1504  0FE4                     	;# 
  1505  0FE5                     	;# 
  1506  0FE6                     	;# 
  1507  0FE7                     	;# 
  1508  0FE8                     	;# 
  1509  0FE9                     	;# 
  1510  0FEA                     	;# 
  1511  0FEB                     	;# 
  1512  0FED                     	;# 
  1513  0FEE                     	;# 
  1514  0FEF                     	;# 
  1515  0000                     	;# 
  1516  0001                     	;# 
  1517  0002                     	;# 
  1518  0003                     	;# 
  1519  0004                     	;# 
  1520  0005                     	;# 
  1521  0006                     	;# 
  1522  0007                     	;# 
  1523  0008                     	;# 
  1524  0009                     	;# 
  1525  000A                     	;# 
  1526  000B                     	;# 
  1527  000C                     	;# 
  1528  000D                     	;# 
  1529  000E                     	;# 
  1530  0010                     	;# 
  1531  0011                     	;# 
  1532  0012                     	;# 
  1533  0013                     	;# 
  1534  0014                     	;# 
  1535  0015                     	;# 
  1536  0015                     	;# 
  1537  0016                     	;# 
  1538  0016                     	;# 
  1539  0017                     	;# 
  1540  0018                     	;# 
  1541  0019                     	;# 
  1542  0019                     	;# 
  1543  001A                     	;# 
  1544  001B                     	;# 
  1545  001C                     	;# 
  1546  001D                     	;# 
  1547  001E                     	;# 
  1548  001F                     	;# 
  1549  008C                     	;# 
  1550  008D                     	;# 
  1551  008E                     	;# 
  1552  0090                     	;# 
  1553  0091                     	;# 
  1554  0092                     	;# 
  1555  0093                     	;# 
  1556  0094                     	;# 
  1557  0097                     	;# 
  1558  009B                     	;# 
  1559  009B                     	;# 
  1560  009C                     	;# 
  1561  009D                     	;# 
  1562  009E                     	;# 
  1563  009F                     	;# 
  1564  010C                     	;# 
  1565  010D                     	;# 
  1566  010E                     	;# 
  1567  0111                     	;# 
  1568  0112                     	;# 
  1569  0113                     	;# 
  1570  0114                     	;# 
  1571  0115                     	;# 
  1572  0116                     	;# 
  1573  0117                     	;# 
  1574  0118                     	;# 
  1575  0119                     	;# 
  1576  018C                     	;# 
  1577  018D                     	;# 
  1578  018E                     	;# 
  1579  0197                     	;# 
  1580  0199                     	;# 
  1581  0199                     	;# 
  1582  0199                     	;# 
  1583  019A                     	;# 
  1584  019A                     	;# 
  1585  019A                     	;# 
  1586  019B                     	;# 
  1587  019B                     	;# 
  1588  019B                     	;# 
  1589  019B                     	;# 
  1590  019B                     	;# 
  1591  019C                     	;# 
  1592  019C                     	;# 
  1593  019C                     	;# 
  1594  019D                     	;# 
  1595  019D                     	;# 
  1596  019D                     	;# 
  1597  019E                     	;# 
  1598  019E                     	;# 
  1599  019E                     	;# 
  1600  019F                     	;# 
  1601  019F                     	;# 
  1602  019F                     	;# 
  1603  019F                     	;# 
  1604  019F                     	;# 
  1605  020C                     	;# 
  1606  020D                     	;# 
  1607  020E                     	;# 
  1608  0211                     	;# 
  1609  0211                     	;# 
  1610  0212                     	;# 
  1611  0212                     	;# 
  1612  0213                     	;# 
  1613  0213                     	;# 
  1614  0214                     	;# 
  1615  0214                     	;# 
  1616  0215                     	;# 
  1617  0215                     	;# 
  1618  0215                     	;# 
  1619  0215                     	;# 
  1620  0216                     	;# 
  1621  0216                     	;# 
  1622  0217                     	;# 
  1623  0217                     	;# 
  1624  0219                     	;# 
  1625  021A                     	;# 
  1626  021B                     	;# 
  1627  021C                     	;# 
  1628  021D                     	;# 
  1629  021D                     	;# 
  1630  021E                     	;# 
  1631  021F                     	;# 
  1632  028C                     	;# 
  1633  028D                     	;# 
  1634  028E                     	;# 
  1635  0291                     	;# 
  1636  0291                     	;# 
  1637  0292                     	;# 
  1638  0293                     	;# 
  1639  0294                     	;# 
  1640  0295                     	;# 
  1641  0295                     	;# 
  1642  0296                     	;# 
  1643  0297                     	;# 
  1644  0298                     	;# 
  1645  029F                     	;# 
  1646  030C                     	;# 
  1647  030D                     	;# 
  1648  030E                     	;# 
  1649  0311                     	;# 
  1650  0311                     	;# 
  1651  0312                     	;# 
  1652  0313                     	;# 
  1653  0314                     	;# 
  1654  0315                     	;# 
  1655  0315                     	;# 
  1656  0316                     	;# 
  1657  0317                     	;# 
  1658  0318                     	;# 
  1659  038C                     	;# 
  1660  038D                     	;# 
  1661  038E                     	;# 
  1662  0391                     	;# 
  1663  0392                     	;# 
  1664  0393                     	;# 
  1665  0394                     	;# 
  1666  0395                     	;# 
  1667  0396                     	;# 
  1668  0397                     	;# 
  1669  0398                     	;# 
  1670  0399                     	;# 
  1671  039A                     	;# 
  1672  039C                     	;# 
  1673  039D                     	;# 
  1674  039E                     	;# 
  1675  039F                     	;# 
  1676  0411                     	;# 
  1677  0411                     	;# 
  1678  0412                     	;# 
  1679  0413                     	;# 
  1680  0414                     	;# 
  1681  0415                     	;# 
  1682  0416                     	;# 
  1683  0417                     	;# 
  1684  0418                     	;# 
  1685  0418                     	;# 
  1686  0419                     	;# 
  1687  041A                     	;# 
  1688  041B                     	;# 
  1689  041C                     	;# 
  1690  041D                     	;# 
  1691  041E                     	;# 
  1692  041F                     	;# 
  1693  0498                     	;# 
  1694  0498                     	;# 
  1695  0499                     	;# 
  1696  049A                     	;# 
  1697  049B                     	;# 
  1698  049B                     	;# 
  1699  049C                     	;# 
  1700  049D                     	;# 
  1701  049E                     	;# 
  1702  049F                     	;# 
  1703  0617                     	;# 
  1704  0618                     	;# 
  1705  0619                     	;# 
  1706  0619                     	;# 
  1707  061A                     	;# 
  1708  061B                     	;# 
  1709  061C                     	;# 
  1710  061C                     	;# 
  1711  061F                     	;# 
  1712  0691                     	;# 
  1713  0692                     	;# 
  1714  0693                     	;# 
  1715  0694                     	;# 
  1716  0695                     	;# 
  1717  0696                     	;# 
  1718  0697                     	;# 
  1719  0698                     	;# 
  1720  0699                     	;# 
  1721  0711                     	;# 
  1722  0712                     	;# 
  1723  0713                     	;# 
  1724  0714                     	;# 
  1725  0715                     	;# 
  1726  0716                     	;# 
  1727  0717                     	;# 
  1728  0718                     	;# 
  1729  0719                     	;# 
  1730  0891                     	;# 
  1731  0891                     	;# 
  1732  0891                     	;# 
  1733  0891                     	;# 
  1734  0891                     	;# 
  1735  0891                     	;# 
  1736  0892                     	;# 
  1737  0892                     	;# 
  1738  0892                     	;# 
  1739  0893                     	;# 
  1740  0893                     	;# 
  1741  0893                     	;# 
  1742  0893                     	;# 
  1743  0893                     	;# 
  1744  0893                     	;# 
  1745  0894                     	;# 
  1746  0894                     	;# 
  1747  0894                     	;# 
  1748  0895                     	;# 
  1749  0895                     	;# 
  1750  0895                     	;# 
  1751  0896                     	;# 
  1752  0896                     	;# 
  1753  0896                     	;# 
  1754  089B                     	;# 
  1755  0911                     	;# 
  1756  0912                     	;# 
  1757  0913                     	;# 
  1758  0914                     	;# 
  1759  0915                     	;# 
  1760  0916                     	;# 
  1761  0918                     	;# 
  1762  0919                     	;# 
  1763  091A                     	;# 
  1764  091B                     	;# 
  1765  091C                     	;# 
  1766  091D                     	;# 
  1767  091E                     	;# 
  1768  091F                     	;# 
  1769  0E0F                     	;# 
  1770  0E10                     	;# 
  1771  0E11                     	;# 
  1772  0E12                     	;# 
  1773  0E13                     	;# 
  1774  0E14                     	;# 
  1775  0E15                     	;# 
  1776  0E16                     	;# 
  1777  0E17                     	;# 
  1778  0E18                     	;# 
  1779  0E19                     	;# 
  1780  0E1A                     	;# 
  1781  0E1B                     	;# 
  1782  0E1C                     	;# 
  1783  0E1D                     	;# 
  1784  0E1E                     	;# 
  1785  0E1F                     	;# 
  1786  0E20                     	;# 
  1787  0E21                     	;# 
  1788  0E22                     	;# 
  1789  0E24                     	;# 
  1790  0E25                     	;# 
  1791  0E28                     	;# 
  1792  0E29                     	;# 
  1793  0E2A                     	;# 
  1794  0E2B                     	;# 
  1795  0E2C                     	;# 
  1796  0E2D                     	;# 
  1797  0E2E                     	;# 
  1798  0E2F                     	;# 
  1799  0E90                     	;# 
  1800  0E91                     	;# 
  1801  0E92                     	;# 
  1802  0E94                     	;# 
  1803  0E95                     	;# 
  1804  0E9C                     	;# 
  1805  0E9D                     	;# 
  1806  0E9E                     	;# 
  1807  0E9F                     	;# 
  1808  0EA0                     	;# 
  1809  0EA1                     	;# 
  1810  0EA2                     	;# 
  1811  0EA3                     	;# 
  1812  0EA4                     	;# 
  1813  0EA5                     	;# 
  1814  0EA6                     	;# 
  1815  0EA7                     	;# 
  1816  0F0F                     	;# 
  1817  0F10                     	;# 
  1818  0F11                     	;# 
  1819  0F12                     	;# 
  1820  0F13                     	;# 
  1821  0F14                     	;# 
  1822  0F15                     	;# 
  1823  0F16                     	;# 
  1824  0F17                     	;# 
  1825  0F18                     	;# 
  1826  0F19                     	;# 
  1827  0F1A                     	;# 
  1828  0F1B                     	;# 
  1829  0F1C                     	;# 
  1830  0F1D                     	;# 
  1831  0F1E                     	;# 
  1832  0F1F                     	;# 
  1833  0F20                     	;# 
  1834  0F21                     	;# 
  1835  0F22                     	;# 
  1836  0F23                     	;# 
  1837  0F24                     	;# 
  1838  0F25                     	;# 
  1839  0F26                     	;# 
  1840  0F27                     	;# 
  1841  0F28                     	;# 
  1842  0F29                     	;# 
  1843  0F2A                     	;# 
  1844  0F2B                     	;# 
  1845  0F2C                     	;# 
  1846  0F2D                     	;# 
  1847  0F2E                     	;# 
  1848  0F2F                     	;# 
  1849  0F30                     	;# 
  1850  0F31                     	;# 
  1851  0F32                     	;# 
  1852  0F33                     	;# 
  1853  0F34                     	;# 
  1854  0F35                     	;# 
  1855  0F36                     	;# 
  1856  0F37                     	;# 
  1857  0FE4                     	;# 
  1858  0FE5                     	;# 
  1859  0FE6                     	;# 
  1860  0FE7                     	;# 
  1861  0FE8                     	;# 
  1862  0FE9                     	;# 
  1863  0FEA                     	;# 
  1864  0FEB                     	;# 
  1865  0FED                     	;# 
  1866  0FEE                     	;# 
  1867  0FEF                     	;# 
  1868  0000                     	;# 
  1869  0001                     	;# 
  1870  0002                     	;# 
  1871  0003                     	;# 
  1872  0004                     	;# 
  1873  0005                     	;# 
  1874  0006                     	;# 
  1875  0007                     	;# 
  1876  0008                     	;# 
  1877  0009                     	;# 
  1878  000A                     	;# 
  1879  000B                     	;# 
  1880  000C                     	;# 
  1881  000D                     	;# 
  1882  000E                     	;# 
  1883  0010                     	;# 
  1884  0011                     	;# 
  1885  0012                     	;# 
  1886  0013                     	;# 
  1887  0014                     	;# 
  1888  0015                     	;# 
  1889  0015                     	;# 
  1890  0016                     	;# 
  1891  0016                     	;# 
  1892  0017                     	;# 
  1893  0018                     	;# 
  1894  0019                     	;# 
  1895  0019                     	;# 
  1896  001A                     	;# 
  1897  001B                     	;# 
  1898  001C                     	;# 
  1899  001D                     	;# 
  1900  001E                     	;# 
  1901  001F                     	;# 
  1902  008C                     	;# 
  1903  008D                     	;# 
  1904  008E                     	;# 
  1905  0090                     	;# 
  1906  0091                     	;# 
  1907  0092                     	;# 
  1908  0093                     	;# 
  1909  0094                     	;# 
  1910  0097                     	;# 
  1911  009B                     	;# 
  1912  009B                     	;# 
  1913  009C                     	;# 
  1914  009D                     	;# 
  1915  009E                     	;# 
  1916  009F                     	;# 
  1917  010C                     	;# 
  1918  010D                     	;# 
  1919  010E                     	;# 
  1920  0111                     	;# 
  1921  0112                     	;# 
  1922  0113                     	;# 
  1923  0114                     	;# 
  1924  0115                     	;# 
  1925  0116                     	;# 
  1926  0117                     	;# 
  1927  0118                     	;# 
  1928  0119                     	;# 
  1929  018C                     	;# 
  1930  018D                     	;# 
  1931  018E                     	;# 
  1932  0197                     	;# 
  1933  0199                     	;# 
  1934  0199                     	;# 
  1935  0199                     	;# 
  1936  019A                     	;# 
  1937  019A                     	;# 
  1938  019A                     	;# 
  1939  019B                     	;# 
  1940  019B                     	;# 
  1941  019B                     	;# 
  1942  019B                     	;# 
  1943  019B                     	;# 
  1944  019C                     	;# 
  1945  019C                     	;# 
  1946  019C                     	;# 
  1947  019D                     	;# 
  1948  019D                     	;# 
  1949  019D                     	;# 
  1950  019E                     	;# 
  1951  019E                     	;# 
  1952  019E                     	;# 
  1953  019F                     	;# 
  1954  019F                     	;# 
  1955  019F                     	;# 
  1956  019F                     	;# 
  1957  019F                     	;# 
  1958  020C                     	;# 
  1959  020D                     	;# 
  1960  020E                     	;# 
  1961  0211                     	;# 
  1962  0211                     	;# 
  1963  0212                     	;# 
  1964  0212                     	;# 
  1965  0213                     	;# 
  1966  0213                     	;# 
  1967  0214                     	;# 
  1968  0214                     	;# 
  1969  0215                     	;# 
  1970  0215                     	;# 
  1971  0215                     	;# 
  1972  0215                     	;# 
  1973  0216                     	;# 
  1974  0216                     	;# 
  1975  0217                     	;# 
  1976  0217                     	;# 
  1977  0219                     	;# 
  1978  021A                     	;# 
  1979  021B                     	;# 
  1980  021C                     	;# 
  1981  021D                     	;# 
  1982  021D                     	;# 
  1983  021E                     	;# 
  1984  021F                     	;# 
  1985  028C                     	;# 
  1986  028D                     	;# 
  1987  028E                     	;# 
  1988  0291                     	;# 
  1989  0291                     	;# 
  1990  0292                     	;# 
  1991  0293                     	;# 
  1992  0294                     	;# 
  1993  0295                     	;# 
  1994  0295                     	;# 
  1995  0296                     	;# 
  1996  0297                     	;# 
  1997  0298                     	;# 
  1998  029F                     	;# 
  1999  030C                     	;# 
  2000  030D                     	;# 
  2001  030E                     	;# 
  2002  0311                     	;# 
  2003  0311                     	;# 
  2004  0312                     	;# 
  2005  0313                     	;# 
  2006  0314                     	;# 
  2007  0315                     	;# 
  2008  0315                     	;# 
  2009  0316                     	;# 
  2010  0317                     	;# 
  2011  0318                     	;# 
  2012  038C                     	;# 
  2013  038D                     	;# 
  2014  038E                     	;# 
  2015  0391                     	;# 
  2016  0392                     	;# 
  2017  0393                     	;# 
  2018  0394                     	;# 
  2019  0395                     	;# 
  2020  0396                     	;# 
  2021  0397                     	;# 
  2022  0398                     	;# 
  2023  0399                     	;# 
  2024  039A                     	;# 
  2025  039C                     	;# 
  2026  039D                     	;# 
  2027  039E                     	;# 
  2028  039F                     	;# 
  2029  0411                     	;# 
  2030  0411                     	;# 
  2031  0412                     	;# 
  2032  0413                     	;# 
  2033  0414                     	;# 
  2034  0415                     	;# 
  2035  0416                     	;# 
  2036  0417                     	;# 
  2037  0418                     	;# 
  2038  0418                     	;# 
  2039  0419                     	;# 
  2040  041A                     	;# 
  2041  041B                     	;# 
  2042  041C                     	;# 
  2043  041D                     	;# 
  2044  041E                     	;# 
  2045  041F                     	;# 
  2046  0498                     	;# 
  2047  0498                     	;# 
  2048  0499                     	;# 
  2049  049A                     	;# 
  2050  049B                     	;# 
  2051  049B                     	;# 
  2052  049C                     	;# 
  2053  049D                     	;# 
  2054  049E                     	;# 
  2055  049F                     	;# 
  2056  0617                     	;# 
  2057  0618                     	;# 
  2058  0619                     	;# 
  2059  0619                     	;# 
  2060  061A                     	;# 
  2061  061B                     	;# 
  2062  061C                     	;# 
  2063  061C                     	;# 
  2064  061F                     	;# 
  2065  0691                     	;# 
  2066  0692                     	;# 
  2067  0693                     	;# 
  2068  0694                     	;# 
  2069  0695                     	;# 
  2070  0696                     	;# 
  2071  0697                     	;# 
  2072  0698                     	;# 
  2073  0699                     	;# 
  2074  0711                     	;# 
  2075  0712                     	;# 
  2076  0713                     	;# 
  2077  0714                     	;# 
  2078  0715                     	;# 
  2079  0716                     	;# 
  2080  0717                     	;# 
  2081  0718                     	;# 
  2082  0719                     	;# 
  2083  0891                     	;# 
  2084  0891                     	;# 
  2085  0891                     	;# 
  2086  0891                     	;# 
  2087  0891                     	;# 
  2088  0891                     	;# 
  2089  0892                     	;# 
  2090  0892                     	;# 
  2091  0892                     	;# 
  2092  0893                     	;# 
  2093  0893                     	;# 
  2094  0893                     	;# 
  2095  0893                     	;# 
  2096  0893                     	;# 
  2097  0893                     	;# 
  2098  0894                     	;# 
  2099  0894                     	;# 
  2100  0894                     	;# 
  2101  0895                     	;# 
  2102  0895                     	;# 
  2103  0895                     	;# 
  2104  0896                     	;# 
  2105  0896                     	;# 
  2106  0896                     	;# 
  2107  089B                     	;# 
  2108  0911                     	;# 
  2109  0912                     	;# 
  2110  0913                     	;# 
  2111  0914                     	;# 
  2112  0915                     	;# 
  2113  0916                     	;# 
  2114  0918                     	;# 
  2115  0919                     	;# 
  2116  091A                     	;# 
  2117  091B                     	;# 
  2118  091C                     	;# 
  2119  091D                     	;# 
  2120  091E                     	;# 
  2121  091F                     	;# 
  2122  0E0F                     	;# 
  2123  0E10                     	;# 
  2124  0E11                     	;# 
  2125  0E12                     	;# 
  2126  0E13                     	;# 
  2127  0E14                     	;# 
  2128  0E15                     	;# 
  2129  0E16                     	;# 
  2130  0E17                     	;# 
  2131  0E18                     	;# 
  2132  0E19                     	;# 
  2133  0E1A                     	;# 
  2134  0E1B                     	;# 
  2135  0E1C                     	;# 
  2136  0E1D                     	;# 
  2137  0E1E                     	;# 
  2138  0E1F                     	;# 
  2139  0E20                     	;# 
  2140  0E21                     	;# 
  2141  0E22                     	;# 
  2142  0E24                     	;# 
  2143  0E25                     	;# 
  2144  0E28                     	;# 
  2145  0E29                     	;# 
  2146  0E2A                     	;# 
  2147  0E2B                     	;# 
  2148  0E2C                     	;# 
  2149  0E2D                     	;# 
  2150  0E2E                     	;# 
  2151  0E2F                     	;# 
  2152  0E90                     	;# 
  2153  0E91                     	;# 
  2154  0E92                     	;# 
  2155  0E94                     	;# 
  2156  0E95                     	;# 
  2157  0E9C                     	;# 
  2158  0E9D                     	;# 
  2159  0E9E                     	;# 
  2160  0E9F                     	;# 
  2161  0EA0                     	;# 
  2162  0EA1                     	;# 
  2163  0EA2                     	;# 
  2164  0EA3                     	;# 
  2165  0EA4                     	;# 
  2166  0EA5                     	;# 
  2167  0EA6                     	;# 
  2168  0EA7                     	;# 
  2169  0F0F                     	;# 
  2170  0F10                     	;# 
  2171  0F11                     	;# 
  2172  0F12                     	;# 
  2173  0F13                     	;# 
  2174  0F14                     	;# 
  2175  0F15                     	;# 
  2176  0F16                     	;# 
  2177  0F17                     	;# 
  2178  0F18                     	;# 
  2179  0F19                     	;# 
  2180  0F1A                     	;# 
  2181  0F1B                     	;# 
  2182  0F1C                     	;# 
  2183  0F1D                     	;# 
  2184  0F1E                     	;# 
  2185  0F1F                     	;# 
  2186  0F20                     	;# 
  2187  0F21                     	;# 
  2188  0F22                     	;# 
  2189  0F23                     	;# 
  2190  0F24                     	;# 
  2191  0F25                     	;# 
  2192  0F26                     	;# 
  2193  0F27                     	;# 
  2194  0F28                     	;# 
  2195  0F29                     	;# 
  2196  0F2A                     	;# 
  2197  0F2B                     	;# 
  2198  0F2C                     	;# 
  2199  0F2D                     	;# 
  2200  0F2E                     	;# 
  2201  0F2F                     	;# 
  2202  0F30                     	;# 
  2203  0F31                     	;# 
  2204  0F32                     	;# 
  2205  0F33                     	;# 
  2206  0F34                     	;# 
  2207  0F35                     	;# 
  2208  0F36                     	;# 
  2209  0F37                     	;# 
  2210  0FE4                     	;# 
  2211  0FE5                     	;# 
  2212  0FE6                     	;# 
  2213  0FE7                     	;# 
  2214  0FE8                     	;# 
  2215  0FE9                     	;# 
  2216  0FEA                     	;# 
  2217  0FEB                     	;# 
  2218  0FED                     	;# 
  2219  0FEE                     	;# 
  2220  0FEF                     	;# 
  2221  0000                     	;# 
  2222  0001                     	;# 
  2223  0002                     	;# 
  2224  0003                     	;# 
  2225  0004                     	;# 
  2226  0005                     	;# 
  2227  0006                     	;# 
  2228  0007                     	;# 
  2229  0008                     	;# 
  2230  0009                     	;# 
  2231  000A                     	;# 
  2232  000B                     	;# 
  2233  000C                     	;# 
  2234  000D                     	;# 
  2235  000E                     	;# 
  2236  0010                     	;# 
  2237  0011                     	;# 
  2238  0012                     	;# 
  2239  0013                     	;# 
  2240  0014                     	;# 
  2241  0015                     	;# 
  2242  0015                     	;# 
  2243  0016                     	;# 
  2244  0016                     	;# 
  2245  0017                     	;# 
  2246  0018                     	;# 
  2247  0019                     	;# 
  2248  0019                     	;# 
  2249  001A                     	;# 
  2250  001B                     	;# 
  2251  001C                     	;# 
  2252  001D                     	;# 
  2253  001E                     	;# 
  2254  001F                     	;# 
  2255  008C                     	;# 
  2256  008D                     	;# 
  2257  008E                     	;# 
  2258  0090                     	;# 
  2259  0091                     	;# 
  2260  0092                     	;# 
  2261  0093                     	;# 
  2262  0094                     	;# 
  2263  0097                     	;# 
  2264  009B                     	;# 
  2265  009B                     	;# 
  2266  009C                     	;# 
  2267  009D                     	;# 
  2268  009E                     	;# 
  2269  009F                     	;# 
  2270  010C                     	;# 
  2271  010D                     	;# 
  2272  010E                     	;# 
  2273  0111                     	;# 
  2274  0112                     	;# 
  2275  0113                     	;# 
  2276  0114                     	;# 
  2277  0115                     	;# 
  2278  0116                     	;# 
  2279  0117                     	;# 
  2280  0118                     	;# 
  2281  0119                     	;# 
  2282  018C                     	;# 
  2283  018D                     	;# 
  2284  018E                     	;# 
  2285  0197                     	;# 
  2286  0199                     	;# 
  2287  0199                     	;# 
  2288  0199                     	;# 
  2289  019A                     	;# 
  2290  019A                     	;# 
  2291  019A                     	;# 
  2292  019B                     	;# 
  2293  019B                     	;# 
  2294  019B                     	;# 
  2295  019B                     	;# 
  2296  019B                     	;# 
  2297  019C                     	;# 
  2298  019C                     	;# 
  2299  019C                     	;# 
  2300  019D                     	;# 
  2301  019D                     	;# 
  2302  019D                     	;# 
  2303  019E                     	;# 
  2304  019E                     	;# 
  2305  019E                     	;# 
  2306  019F                     	;# 
  2307  019F                     	;# 
  2308  019F                     	;# 
  2309  019F                     	;# 
  2310  019F                     	;# 
  2311  020C                     	;# 
  2312  020D                     	;# 
  2313  020E                     	;# 
  2314  0211                     	;# 
  2315  0211                     	;# 
  2316  0212                     	;# 
  2317  0212                     	;# 
  2318  0213                     	;# 
  2319  0213                     	;# 
  2320  0214                     	;# 
  2321  0214                     	;# 
  2322  0215                     	;# 
  2323  0215                     	;# 
  2324  0215                     	;# 
  2325  0215                     	;# 
  2326  0216                     	;# 
  2327  0216                     	;# 
  2328  0217                     	;# 
  2329  0217                     	;# 
  2330  0219                     	;# 
  2331  021A                     	;# 
  2332  021B                     	;# 
  2333  021C                     	;# 
  2334  021D                     	;# 
  2335  021D                     	;# 
  2336  021E                     	;# 
  2337  021F                     	;# 
  2338  028C                     	;# 
  2339  028D                     	;# 
  2340  028E                     	;# 
  2341  0291                     	;# 
  2342  0291                     	;# 
  2343  0292                     	;# 
  2344  0293                     	;# 
  2345  0294                     	;# 
  2346  0295                     	;# 
  2347  0295                     	;# 
  2348  0296                     	;# 
  2349  0297                     	;# 
  2350  0298                     	;# 
  2351  029F                     	;# 
  2352  030C                     	;# 
  2353  030D                     	;# 
  2354  030E                     	;# 
  2355  0311                     	;# 
  2356  0311                     	;# 
  2357  0312                     	;# 
  2358  0313                     	;# 
  2359  0314                     	;# 
  2360  0315                     	;# 
  2361  0315                     	;# 
  2362  0316                     	;# 
  2363  0317                     	;# 
  2364  0318                     	;# 
  2365  038C                     	;# 
  2366  038D                     	;# 
  2367  038E                     	;# 
  2368  0391                     	;# 
  2369  0392                     	;# 
  2370  0393                     	;# 
  2371  0394                     	;# 
  2372  0395                     	;# 
  2373  0396                     	;# 
  2374  0397                     	;# 
  2375  0398                     	;# 
  2376  0399                     	;# 
  2377  039A                     	;# 
  2378  039C                     	;# 
  2379  039D                     	;# 
  2380  039E                     	;# 
  2381  039F                     	;# 
  2382  0411                     	;# 
  2383  0411                     	;# 
  2384  0412                     	;# 
  2385  0413                     	;# 
  2386  0414                     	;# 
  2387  0415                     	;# 
  2388  0416                     	;# 
  2389  0417                     	;# 
  2390  0418                     	;# 
  2391  0418                     	;# 
  2392  0419                     	;# 
  2393  041A                     	;# 
  2394  041B                     	;# 
  2395  041C                     	;# 
  2396  041D                     	;# 
  2397  041E                     	;# 
  2398  041F                     	;# 
  2399  0498                     	;# 
  2400  0498                     	;# 
  2401  0499                     	;# 
  2402  049A                     	;# 
  2403  049B                     	;# 
  2404  049B                     	;# 
  2405  049C                     	;# 
  2406  049D                     	;# 
  2407  049E                     	;# 
  2408  049F                     	;# 
  2409  0617                     	;# 
  2410  0618                     	;# 
  2411  0619                     	;# 
  2412  0619                     	;# 
  2413  061A                     	;# 
  2414  061B                     	;# 
  2415  061C                     	;# 
  2416  061C                     	;# 
  2417  061F                     	;# 
  2418  0691                     	;# 
  2419  0692                     	;# 
  2420  0693                     	;# 
  2421  0694                     	;# 
  2422  0695                     	;# 
  2423  0696                     	;# 
  2424  0697                     	;# 
  2425  0698                     	;# 
  2426  0699                     	;# 
  2427  0711                     	;# 
  2428  0712                     	;# 
  2429  0713                     	;# 
  2430  0714                     	;# 
  2431  0715                     	;# 
  2432  0716                     	;# 
  2433  0717                     	;# 
  2434  0718                     	;# 
  2435  0719                     	;# 
  2436  0891                     	;# 
  2437  0891                     	;# 
  2438  0891                     	;# 
  2439  0891                     	;# 
  2440  0891                     	;# 
  2441  0891                     	;# 
  2442  0892                     	;# 
  2443  0892                     	;# 
  2444  0892                     	;# 
  2445  0893                     	;# 
  2446  0893                     	;# 
  2447  0893                     	;# 
  2448  0893                     	;# 
  2449  0893                     	;# 
  2450  0893                     	;# 
  2451  0894                     	;# 
  2452  0894                     	;# 
  2453  0894                     	;# 
  2454  0895                     	;# 
  2455  0895                     	;# 
  2456  0895                     	;# 
  2457  0896                     	;# 
  2458  0896                     	;# 
  2459  0896                     	;# 
  2460  089B                     	;# 
  2461  0911                     	;# 
  2462  0912                     	;# 
  2463  0913                     	;# 
  2464  0914                     	;# 
  2465  0915                     	;# 
  2466  0916                     	;# 
  2467  0918                     	;# 
  2468  0919                     	;# 
  2469  091A                     	;# 
  2470  091B                     	;# 
  2471  091C                     	;# 
  2472  091D                     	;# 
  2473  091E                     	;# 
  2474  091F                     	;# 
  2475  0E0F                     	;# 
  2476  0E10                     	;# 
  2477  0E11                     	;# 
  2478  0E12                     	;# 
  2479  0E13                     	;# 
  2480  0E14                     	;# 
  2481  0E15                     	;# 
  2482  0E16                     	;# 
  2483  0E17                     	;# 
  2484  0E18                     	;# 
  2485  0E19                     	;# 
  2486  0E1A                     	;# 
  2487  0E1B                     	;# 
  2488  0E1C                     	;# 
  2489  0E1D                     	;# 
  2490  0E1E                     	;# 
  2491  0E1F                     	;# 
  2492  0E20                     	;# 
  2493  0E21                     	;# 
  2494  0E22                     	;# 
  2495  0E24                     	;# 
  2496  0E25                     	;# 
  2497  0E28                     	;# 
  2498  0E29                     	;# 
  2499  0E2A                     	;# 
  2500  0E2B                     	;# 
  2501  0E2C                     	;# 
  2502  0E2D                     	;# 
  2503  0E2E                     	;# 
  2504  0E2F                     	;# 
  2505  0E90                     	;# 
  2506  0E91                     	;# 
  2507  0E92                     	;# 
  2508  0E94                     	;# 
  2509  0E95                     	;# 
  2510  0E9C                     	;# 
  2511  0E9D                     	;# 
  2512  0E9E                     	;# 
  2513  0E9F                     	;# 
  2514  0EA0                     	;# 
  2515  0EA1                     	;# 
  2516  0EA2                     	;# 
  2517  0EA3                     	;# 
  2518  0EA4                     	;# 
  2519  0EA5                     	;# 
  2520  0EA6                     	;# 
  2521  0EA7                     	;# 
  2522  0F0F                     	;# 
  2523  0F10                     	;# 
  2524  0F11                     	;# 
  2525  0F12                     	;# 
  2526  0F13                     	;# 
  2527  0F14                     	;# 
  2528  0F15                     	;# 
  2529  0F16                     	;# 
  2530  0F17                     	;# 
  2531  0F18                     	;# 
  2532  0F19                     	;# 
  2533  0F1A                     	;# 
  2534  0F1B                     	;# 
  2535  0F1C                     	;# 
  2536  0F1D                     	;# 
  2537  0F1E                     	;# 
  2538  0F1F                     	;# 
  2539  0F20                     	;# 
  2540  0F21                     	;# 
  2541  0F22                     	;# 
  2542  0F23                     	;# 
  2543  0F24                     	;# 
  2544  0F25                     	;# 
  2545  0F26                     	;# 
  2546  0F27                     	;# 
  2547  0F28                     	;# 
  2548  0F29                     	;# 
  2549  0F2A                     	;# 
  2550  0F2B                     	;# 
  2551  0F2C                     	;# 
  2552  0F2D                     	;# 
  2553  0F2E                     	;# 
  2554  0F2F                     	;# 
  2555  0F30                     	;# 
  2556  0F31                     	;# 
  2557  0F32                     	;# 
  2558  0F33                     	;# 
  2559  0F34                     	;# 
  2560  0F35                     	;# 
  2561  0F36                     	;# 
  2562  0F37                     	;# 
  2563  0FE4                     	;# 
  2564  0FE5                     	;# 
  2565  0FE6                     	;# 
  2566  0FE7                     	;# 
  2567  0FE8                     	;# 
  2568  0FE9                     	;# 
  2569  0FEA                     	;# 
  2570  0FEB                     	;# 
  2571  0FED                     	;# 
  2572  0FEE                     	;# 
  2573  0FEF                     	;# 
  2574  0000                     	;# 
  2575  0001                     	;# 
  2576  0002                     	;# 
  2577  0003                     	;# 
  2578  0004                     	;# 
  2579  0005                     	;# 
  2580  0006                     	;# 
  2581  0007                     	;# 
  2582  0008                     	;# 
  2583  0009                     	;# 
  2584  000A                     	;# 
  2585  000B                     	;# 
  2586  000C                     	;# 
  2587  000D                     	;# 
  2588  000E                     	;# 
  2589  0010                     	;# 
  2590  0011                     	;# 
  2591  0012                     	;# 
  2592  0013                     	;# 
  2593  0014                     	;# 
  2594  0015                     	;# 
  2595  0015                     	;# 
  2596  0016                     	;# 
  2597  0016                     	;# 
  2598  0017                     	;# 
  2599  0018                     	;# 
  2600  0019                     	;# 
  2601  0019                     	;# 
  2602  001A                     	;# 
  2603  001B                     	;# 
  2604  001C                     	;# 
  2605  001D                     	;# 
  2606  001E                     	;# 
  2607  001F                     	;# 
  2608  008C                     	;# 
  2609  008D                     	;# 
  2610  008E                     	;# 
  2611  0090                     	;# 
  2612  0091                     	;# 
  2613  0092                     	;# 
  2614  0093                     	;# 
  2615  0094                     	;# 
  2616  0097                     	;# 
  2617  009B                     	;# 
  2618  009B                     	;# 
  2619  009C                     	;# 
  2620  009D                     	;# 
  2621  009E                     	;# 
  2622  009F                     	;# 
  2623  010C                     	;# 
  2624  010D                     	;# 
  2625  010E                     	;# 
  2626  0111                     	;# 
  2627  0112                     	;# 
  2628  0113                     	;# 
  2629  0114                     	;# 
  2630  0115                     	;# 
  2631  0116                     	;# 
  2632  0117                     	;# 
  2633  0118                     	;# 
  2634  0119                     	;# 
  2635  018C                     	;# 
  2636  018D                     	;# 
  2637  018E                     	;# 
  2638  0197                     	;# 
  2639  0199                     	;# 
  2640  0199                     	;# 
  2641  0199                     	;# 
  2642  019A                     	;# 
  2643  019A                     	;# 
  2644  019A                     	;# 
  2645  019B                     	;# 
  2646  019B                     	;# 
  2647  019B                     	;# 
  2648  019B                     	;# 
  2649  019B                     	;# 
  2650  019C                     	;# 
  2651  019C                     	;# 
  2652  019C                     	;# 
  2653  019D                     	;# 
  2654  019D                     	;# 
  2655  019D                     	;# 
  2656  019E                     	;# 
  2657  019E                     	;# 
  2658  019E                     	;# 
  2659  019F                     	;# 
  2660  019F                     	;# 
  2661  019F                     	;# 
  2662  019F                     	;# 
  2663  019F                     	;# 
  2664  020C                     	;# 
  2665  020D                     	;# 
  2666  020E                     	;# 
  2667  0211                     	;# 
  2668  0211                     	;# 
  2669  0212                     	;# 
  2670  0212                     	;# 
  2671  0213                     	;# 
  2672  0213                     	;# 
  2673  0214                     	;# 
  2674  0214                     	;# 
  2675  0215                     	;# 
  2676  0215                     	;# 
  2677  0215                     	;# 
  2678  0215                     	;# 
  2679  0216                     	;# 
  2680  0216                     	;# 
  2681  0217                     	;# 
  2682  0217                     	;# 
  2683  0219                     	;# 
  2684  021A                     	;# 
  2685  021B                     	;# 
  2686  021C                     	;# 
  2687  021D                     	;# 
  2688  021D                     	;# 
  2689  021E                     	;# 
  2690  021F                     	;# 
  2691  028C                     	;# 
  2692  028D                     	;# 
  2693  028E                     	;# 
  2694  0291                     	;# 
  2695  0291                     	;# 
  2696  0292                     	;# 
  2697  0293                     	;# 
  2698  0294                     	;# 
  2699  0295                     	;# 
  2700  0295                     	;# 
  2701  0296                     	;# 
  2702  0297                     	;# 
  2703  0298                     	;# 
  2704  029F                     	;# 
  2705  030C                     	;# 
  2706  030D                     	;# 
  2707  030E                     	;# 
  2708  0311                     	;# 
  2709  0311                     	;# 
  2710  0312                     	;# 
  2711  0313                     	;# 
  2712  0314                     	;# 
  2713  0315                     	;# 
  2714  0315                     	;# 
  2715  0316                     	;# 
  2716  0317                     	;# 
  2717  0318                     	;# 
  2718  038C                     	;# 
  2719  038D                     	;# 
  2720  038E                     	;# 
  2721  0391                     	;# 
  2722  0392                     	;# 
  2723  0393                     	;# 
  2724  0394                     	;# 
  2725  0395                     	;# 
  2726  0396                     	;# 
  2727  0397                     	;# 
  2728  0398                     	;# 
  2729  0399                     	;# 
  2730  039A                     	;# 
  2731  039C                     	;# 
  2732  039D                     	;# 
  2733  039E                     	;# 
  2734  039F                     	;# 
  2735  0411                     	;# 
  2736  0411                     	;# 
  2737  0412                     	;# 
  2738  0413                     	;# 
  2739  0414                     	;# 
  2740  0415                     	;# 
  2741  0416                     	;# 
  2742  0417                     	;# 
  2743  0418                     	;# 
  2744  0418                     	;# 
  2745  0419                     	;# 
  2746  041A                     	;# 
  2747  041B                     	;# 
  2748  041C                     	;# 
  2749  041D                     	;# 
  2750  041E                     	;# 
  2751  041F                     	;# 
  2752  0498                     	;# 
  2753  0498                     	;# 
  2754  0499                     	;# 
  2755  049A                     	;# 
  2756  049B                     	;# 
  2757  049B                     	;# 
  2758  049C                     	;# 
  2759  049D                     	;# 
  2760  049E                     	;# 
  2761  049F                     	;# 
  2762  0617                     	;# 
  2763  0618                     	;# 
  2764  0619                     	;# 
  2765  0619                     	;# 
  2766  061A                     	;# 
  2767  061B                     	;# 
  2768  061C                     	;# 
  2769  061C                     	;# 
  2770  061F                     	;# 
  2771  0691                     	;# 
  2772  0692                     	;# 
  2773  0693                     	;# 
  2774  0694                     	;# 
  2775  0695                     	;# 
  2776  0696                     	;# 
  2777  0697                     	;# 
  2778  0698                     	;# 
  2779  0699                     	;# 
  2780  0711                     	;# 
  2781  0712                     	;# 
  2782  0713                     	;# 
  2783  0714                     	;# 
  2784  0715                     	;# 
  2785  0716                     	;# 
  2786  0717                     	;# 
  2787  0718                     	;# 
  2788  0719                     	;# 
  2789  0891                     	;# 
  2790  0891                     	;# 
  2791  0891                     	;# 
  2792  0891                     	;# 
  2793  0891                     	;# 
  2794  0891                     	;# 
  2795  0892                     	;# 
  2796  0892                     	;# 
  2797  0892                     	;# 
  2798  0893                     	;# 
  2799  0893                     	;# 
  2800  0893                     	;# 
  2801  0893                     	;# 
  2802  0893                     	;# 
  2803  0893                     	;# 
  2804  0894                     	;# 
  2805  0894                     	;# 
  2806  0894                     	;# 
  2807  0895                     	;# 
  2808  0895                     	;# 
  2809  0895                     	;# 
  2810  0896                     	;# 
  2811  0896                     	;# 
  2812  0896                     	;# 
  2813  089B                     	;# 
  2814  0911                     	;# 
  2815  0912                     	;# 
  2816  0913                     	;# 
  2817  0914                     	;# 
  2818  0915                     	;# 
  2819  0916                     	;# 
  2820  0918                     	;# 
  2821  0919                     	;# 
  2822  091A                     	;# 
  2823  091B                     	;# 
  2824  091C                     	;# 
  2825  091D                     	;# 
  2826  091E                     	;# 
  2827  091F                     	;# 
  2828  0E0F                     	;# 
  2829  0E10                     	;# 
  2830  0E11                     	;# 
  2831  0E12                     	;# 
  2832  0E13                     	;# 
  2833  0E14                     	;# 
  2834  0E15                     	;# 
  2835  0E16                     	;# 
  2836  0E17                     	;# 
  2837  0E18                     	;# 
  2838  0E19                     	;# 
  2839  0E1A                     	;# 
  2840  0E1B                     	;# 
  2841  0E1C                     	;# 
  2842  0E1D                     	;# 
  2843  0E1E                     	;# 
  2844  0E1F                     	;# 
  2845  0E20                     	;# 
  2846  0E21                     	;# 
  2847  0E22                     	;# 
  2848  0E24                     	;# 
  2849  0E25                     	;# 
  2850  0E28                     	;# 
  2851  0E29                     	;# 
  2852  0E2A                     	;# 
  2853  0E2B                     	;# 
  2854  0E2C                     	;# 
  2855  0E2D                     	;# 
  2856  0E2E                     	;# 
  2857  0E2F                     	;# 
  2858  0E90                     	;# 
  2859  0E91                     	;# 
  2860  0E92                     	;# 
  2861  0E94                     	;# 
  2862  0E95                     	;# 
  2863  0E9C                     	;# 
  2864  0E9D                     	;# 
  2865  0E9E                     	;# 
  2866  0E9F                     	;# 
  2867  0EA0                     	;# 
  2868  0EA1                     	;# 
  2869  0EA2                     	;# 
  2870  0EA3                     	;# 
  2871  0EA4                     	;# 
  2872  0EA5                     	;# 
  2873  0EA6                     	;# 
  2874  0EA7                     	;# 
  2875  0F0F                     	;# 
  2876  0F10                     	;# 
  2877  0F11                     	;# 
  2878  0F12                     	;# 
  2879  0F13                     	;# 
  2880  0F14                     	;# 
  2881  0F15                     	;# 
  2882  0F16                     	;# 
  2883  0F17                     	;# 
  2884  0F18                     	;# 
  2885  0F19                     	;# 
  2886  0F1A                     	;# 
  2887  0F1B                     	;# 
  2888  0F1C                     	;# 
  2889  0F1D                     	;# 
  2890  0F1E                     	;# 
  2891  0F1F                     	;# 
  2892  0F20                     	;# 
  2893  0F21                     	;# 
  2894  0F22                     	;# 
  2895  0F23                     	;# 
  2896  0F24                     	;# 
  2897  0F25                     	;# 
  2898  0F26                     	;# 
  2899  0F27                     	;# 
  2900  0F28                     	;# 
  2901  0F29                     	;# 
  2902  0F2A                     	;# 
  2903  0F2B                     	;# 
  2904  0F2C                     	;# 
  2905  0F2D                     	;# 
  2906  0F2E                     	;# 
  2907  0F2F                     	;# 
  2908  0F30                     	;# 
  2909  0F31                     	;# 
  2910  0F32                     	;# 
  2911  0F33                     	;# 
  2912  0F34                     	;# 
  2913  0F35                     	;# 
  2914  0F36                     	;# 
  2915  0F37                     	;# 
  2916  0FE4                     	;# 
  2917  0FE5                     	;# 
  2918  0FE6                     	;# 
  2919  0FE7                     	;# 
  2920  0FE8                     	;# 
  2921  0FE9                     	;# 
  2922  0FEA                     	;# 
  2923  0FEB                     	;# 
  2924  0FED                     	;# 
  2925  0FEE                     	;# 
  2926  0FEF                     	;# 
  2927  0000                     	;# 
  2928  0001                     	;# 
  2929  0002                     	;# 
  2930  0003                     	;# 
  2931  0004                     	;# 
  2932  0005                     	;# 
  2933  0006                     	;# 
  2934  0007                     	;# 
  2935  0008                     	;# 
  2936  0009                     	;# 
  2937  000A                     	;# 
  2938  000B                     	;# 
  2939  000C                     	;# 
  2940  000D                     	;# 
  2941  000E                     	;# 
  2942  0010                     	;# 
  2943  0011                     	;# 
  2944  0012                     	;# 
  2945  0013                     	;# 
  2946  0014                     	;# 
  2947  0015                     	;# 
  2948  0015                     	;# 
  2949  0016                     	;# 
  2950  0016                     	;# 
  2951  0017                     	;# 
  2952  0018                     	;# 
  2953  0019                     	;# 
  2954  0019                     	;# 
  2955  001A                     	;# 
  2956  001B                     	;# 
  2957  001C                     	;# 
  2958  001D                     	;# 
  2959  001E                     	;# 
  2960  001F                     	;# 
  2961  008C                     	;# 
  2962  008D                     	;# 
  2963  008E                     	;# 
  2964  0090                     	;# 
  2965  0091                     	;# 
  2966  0092                     	;# 
  2967  0093                     	;# 
  2968  0094                     	;# 
  2969  0097                     	;# 
  2970  009B                     	;# 
  2971  009B                     	;# 
  2972  009C                     	;# 
  2973  009D                     	;# 
  2974  009E                     	;# 
  2975  009F                     	;# 
  2976  010C                     	;# 
  2977  010D                     	;# 
  2978  010E                     	;# 
  2979  0111                     	;# 
  2980  0112                     	;# 
  2981  0113                     	;# 
  2982  0114                     	;# 
  2983  0115                     	;# 
  2984  0116                     	;# 
  2985  0117                     	;# 
  2986  0118                     	;# 
  2987  0119                     	;# 
  2988  018C                     	;# 
  2989  018D                     	;# 
  2990  018E                     	;# 
  2991  0197                     	;# 
  2992  0199                     	;# 
  2993  0199                     	;# 
  2994  0199                     	;# 
  2995  019A                     	;# 
  2996  019A                     	;# 
  2997  019A                     	;# 
  2998  019B                     	;# 
  2999  019B                     	;# 
  3000  019B                     	;# 
  3001  019B                     	;# 
  3002  019B                     	;# 
  3003  019C                     	;# 
  3004  019C                     	;# 
  3005  019C                     	;# 
  3006  019D                     	;# 
  3007  019D                     	;# 
  3008  019D                     	;# 
  3009  019E                     	;# 
  3010  019E                     	;# 
  3011  019E                     	;# 
  3012  019F                     	;# 
  3013  019F                     	;# 
  3014  019F                     	;# 
  3015  019F                     	;# 
  3016  019F                     	;# 
  3017  020C                     	;# 
  3018  020D                     	;# 
  3019  020E                     	;# 
  3020  0211                     	;# 
  3021  0211                     	;# 
  3022  0212                     	;# 
  3023  0212                     	;# 
  3024  0213                     	;# 
  3025  0213                     	;# 
  3026  0214                     	;# 
  3027  0214                     	;# 
  3028  0215                     	;# 
  3029  0215                     	;# 
  3030  0215                     	;# 
  3031  0215                     	;# 
  3032  0216                     	;# 
  3033  0216                     	;# 
  3034  0217                     	;# 
  3035  0217                     	;# 
  3036  0219                     	;# 
  3037  021A                     	;# 
  3038  021B                     	;# 
  3039  021C                     	;# 
  3040  021D                     	;# 
  3041  021D                     	;# 
  3042  021E                     	;# 
  3043  021F                     	;# 
  3044  028C                     	;# 
  3045  028D                     	;# 
  3046  028E                     	;# 
  3047  0291                     	;# 
  3048  0291                     	;# 
  3049  0292                     	;# 
  3050  0293                     	;# 
  3051  0294                     	;# 
  3052  0295                     	;# 
  3053  0295                     	;# 
  3054  0296                     	;# 
  3055  0297                     	;# 
  3056  0298                     	;# 
  3057  029F                     	;# 
  3058  030C                     	;# 
  3059  030D                     	;# 
  3060  030E                     	;# 
  3061  0311                     	;# 
  3062  0311                     	;# 
  3063  0312                     	;# 
  3064  0313                     	;# 
  3065  0314                     	;# 
  3066  0315                     	;# 
  3067  0315                     	;# 
  3068  0316                     	;# 
  3069  0317                     	;# 
  3070  0318                     	;# 
  3071  038C                     	;# 
  3072  038D                     	;# 
  3073  038E                     	;# 
  3074  0391                     	;# 
  3075  0392                     	;# 
  3076  0393                     	;# 
  3077  0394                     	;# 
  3078  0395                     	;# 
  3079  0396                     	;# 
  3080  0397                     	;# 
  3081  0398                     	;# 
  3082  0399                     	;# 
  3083  039A                     	;# 
  3084  039C                     	;# 
  3085  039D                     	;# 
  3086  039E                     	;# 
  3087  039F                     	;# 
  3088  0411                     	;# 
  3089  0411                     	;# 
  3090  0412                     	;# 
  3091  0413                     	;# 
  3092  0414                     	;# 
  3093  0415                     	;# 
  3094  0416                     	;# 
  3095  0417                     	;# 
  3096  0418                     	;# 
  3097  0418                     	;# 
  3098  0419                     	;# 
  3099  041A                     	;# 
  3100  041B                     	;# 
  3101  041C                     	;# 
  3102  041D                     	;# 
  3103  041E                     	;# 
  3104  041F                     	;# 
  3105  0498                     	;# 
  3106  0498                     	;# 
  3107  0499                     	;# 
  3108  049A                     	;# 
  3109  049B                     	;# 
  3110  049B                     	;# 
  3111  049C                     	;# 
  3112  049D                     	;# 
  3113  049E                     	;# 
  3114  049F                     	;# 
  3115  0617                     	;# 
  3116  0618                     	;# 
  3117  0619                     	;# 
  3118  0619                     	;# 
  3119  061A                     	;# 
  3120  061B                     	;# 
  3121  061C                     	;# 
  3122  061C                     	;# 
  3123  061F                     	;# 
  3124  0691                     	;# 
  3125  0692                     	;# 
  3126  0693                     	;# 
  3127  0694                     	;# 
  3128  0695                     	;# 
  3129  0696                     	;# 
  3130  0697                     	;# 
  3131  0698                     	;# 
  3132  0699                     	;# 
  3133  0711                     	;# 
  3134  0712                     	;# 
  3135  0713                     	;# 
  3136  0714                     	;# 
  3137  0715                     	;# 
  3138  0716                     	;# 
  3139  0717                     	;# 
  3140  0718                     	;# 
  3141  0719                     	;# 
  3142  0891                     	;# 
  3143  0891                     	;# 
  3144  0891                     	;# 
  3145  0891                     	;# 
  3146  0891                     	;# 
  3147  0891                     	;# 
  3148  0892                     	;# 
  3149  0892                     	;# 
  3150  0892                     	;# 
  3151  0893                     	;# 
  3152  0893                     	;# 
  3153  0893                     	;# 
  3154  0893                     	;# 
  3155  0893                     	;# 
  3156  0893                     	;# 
  3157  0894                     	;# 
  3158  0894                     	;# 
  3159  0894                     	;# 
  3160  0895                     	;# 
  3161  0895                     	;# 
  3162  0895                     	;# 
  3163  0896                     	;# 
  3164  0896                     	;# 
  3165  0896                     	;# 
  3166  089B                     	;# 
  3167  0911                     	;# 
  3168  0912                     	;# 
  3169  0913                     	;# 
  3170  0914                     	;# 
  3171  0915                     	;# 
  3172  0916                     	;# 
  3173  0918                     	;# 
  3174  0919                     	;# 
  3175  091A                     	;# 
  3176  091B                     	;# 
  3177  091C                     	;# 
  3178  091D                     	;# 
  3179  091E                     	;# 
  3180  091F                     	;# 
  3181  0E0F                     	;# 
  3182  0E10                     	;# 
  3183  0E11                     	;# 
  3184  0E12                     	;# 
  3185  0E13                     	;# 
  3186  0E14                     	;# 
  3187  0E15                     	;# 
  3188  0E16                     	;# 
  3189  0E17                     	;# 
  3190  0E18                     	;# 
  3191  0E19                     	;# 
  3192  0E1A                     	;# 
  3193  0E1B                     	;# 
  3194  0E1C                     	;# 
  3195  0E1D                     	;# 
  3196  0E1E                     	;# 
  3197  0E1F                     	;# 
  3198  0E20                     	;# 
  3199  0E21                     	;# 
  3200  0E22                     	;# 
  3201  0E24                     	;# 
  3202  0E25                     	;# 
  3203  0E28                     	;# 
  3204  0E29                     	;# 
  3205  0E2A                     	;# 
  3206  0E2B                     	;# 
  3207  0E2C                     	;# 
  3208  0E2D                     	;# 
  3209  0E2E                     	;# 
  3210  0E2F                     	;# 
  3211  0E90                     	;# 
  3212  0E91                     	;# 
  3213  0E92                     	;# 
  3214  0E94                     	;# 
  3215  0E95                     	;# 
  3216  0E9C                     	;# 
  3217  0E9D                     	;# 
  3218  0E9E                     	;# 
  3219  0E9F                     	;# 
  3220  0EA0                     	;# 
  3221  0EA1                     	;# 
  3222  0EA2                     	;# 
  3223  0EA3                     	;# 
  3224  0EA4                     	;# 
  3225  0EA5                     	;# 
  3226  0EA6                     	;# 
  3227  0EA7                     	;# 
  3228  0F0F                     	;# 
  3229  0F10                     	;# 
  3230  0F11                     	;# 
  3231  0F12                     	;# 
  3232  0F13                     	;# 
  3233  0F14                     	;# 
  3234  0F15                     	;# 
  3235  0F16                     	;# 
  3236  0F17                     	;# 
  3237  0F18                     	;# 
  3238  0F19                     	;# 
  3239  0F1A                     	;# 
  3240  0F1B                     	;# 
  3241  0F1C                     	;# 
  3242  0F1D                     	;# 
  3243  0F1E                     	;# 
  3244  0F1F                     	;# 
  3245  0F20                     	;# 
  3246  0F21                     	;# 
  3247  0F22                     	;# 
  3248  0F23                     	;# 
  3249  0F24                     	;# 
  3250  0F25                     	;# 
  3251  0F26                     	;# 
  3252  0F27                     	;# 
  3253  0F28                     	;# 
  3254  0F29                     	;# 
  3255  0F2A                     	;# 
  3256  0F2B                     	;# 
  3257  0F2C                     	;# 
  3258  0F2D                     	;# 
  3259  0F2E                     	;# 
  3260  0F2F                     	;# 
  3261  0F30                     	;# 
  3262  0F31                     	;# 
  3263  0F32                     	;# 
  3264  0F33                     	;# 
  3265  0F34                     	;# 
  3266  0F35                     	;# 
  3267  0F36                     	;# 
  3268  0F37                     	;# 
  3269  0FE4                     	;# 
  3270  0FE5                     	;# 
  3271  0FE6                     	;# 
  3272  0FE7                     	;# 
  3273  0FE8                     	;# 
  3274  0FE9                     	;# 
  3275  0FEA                     	;# 
  3276  0FEB                     	;# 
  3277  0FED                     	;# 
  3278  0FEE                     	;# 
  3279  0FEF                     	;# 
  3280  0000                     	;# 
  3281  0001                     	;# 
  3282  0002                     	;# 
  3283  0003                     	;# 
  3284  0004                     	;# 
  3285  0005                     	;# 
  3286  0006                     	;# 
  3287  0007                     	;# 
  3288  0008                     	;# 
  3289  0009                     	;# 
  3290  000A                     	;# 
  3291  000B                     	;# 
  3292  000C                     	;# 
  3293  000D                     	;# 
  3294  000E                     	;# 
  3295  0010                     	;# 
  3296  0011                     	;# 
  3297  0012                     	;# 
  3298  0013                     	;# 
  3299  0014                     	;# 
  3300  0015                     	;# 
  3301  0015                     	;# 
  3302  0016                     	;# 
  3303  0016                     	;# 
  3304  0017                     	;# 
  3305  0018                     	;# 
  3306  0019                     	;# 
  3307  0019                     	;# 
  3308  001A                     	;# 
  3309  001B                     	;# 
  3310  001C                     	;# 
  3311  001D                     	;# 
  3312  001E                     	;# 
  3313  001F                     	;# 
  3314  008C                     	;# 
  3315  008D                     	;# 
  3316  008E                     	;# 
  3317  0090                     	;# 
  3318  0091                     	;# 
  3319  0092                     	;# 
  3320  0093                     	;# 
  3321  0094                     	;# 
  3322  0097                     	;# 
  3323  009B                     	;# 
  3324  009B                     	;# 
  3325  009C                     	;# 
  3326  009D                     	;# 
  3327  009E                     	;# 
  3328  009F                     	;# 
  3329  010C                     	;# 
  3330  010D                     	;# 
  3331  010E                     	;# 
  3332  0111                     	;# 
  3333  0112                     	;# 
  3334  0113                     	;# 
  3335  0114                     	;# 
  3336  0115                     	;# 
  3337  0116                     	;# 
  3338  0117                     	;# 
  3339  0118                     	;# 
  3340  0119                     	;# 
  3341  018C                     	;# 
  3342  018D                     	;# 
  3343  018E                     	;# 
  3344  0197                     	;# 
  3345  0199                     	;# 
  3346  0199                     	;# 
  3347  0199                     	;# 
  3348  019A                     	;# 
  3349  019A                     	;# 
  3350  019A                     	;# 
  3351  019B                     	;# 
  3352  019B                     	;# 
  3353  019B                     	;# 
  3354  019B                     	;# 
  3355  019B                     	;# 
  3356  019C                     	;# 
  3357  019C                     	;# 
  3358  019C                     	;# 
  3359  019D                     	;# 
  3360  019D                     	;# 
  3361  019D                     	;# 
  3362  019E                     	;# 
  3363  019E                     	;# 
  3364  019E                     	;# 
  3365  019F                     	;# 
  3366  019F                     	;# 
  3367  019F                     	;# 
  3368  019F                     	;# 
  3369  019F                     	;# 
  3370  020C                     	;# 
  3371  020D                     	;# 
  3372  020E                     	;# 
  3373  0211                     	;# 
  3374  0211                     	;# 
  3375  0212                     	;# 
  3376  0212                     	;# 
  3377  0213                     	;# 
  3378  0213                     	;# 
  3379  0214                     	;# 
  3380  0214                     	;# 
  3381  0215                     	;# 
  3382  0215                     	;# 
  3383  0215                     	;# 
  3384  0215                     	;# 
  3385  0216                     	;# 
  3386  0216                     	;# 
  3387  0217                     	;# 
  3388  0217                     	;# 
  3389  0219                     	;# 
  3390  021A                     	;# 
  3391  021B                     	;# 
  3392  021C                     	;# 
  3393  021D                     	;# 
  3394  021D                     	;# 
  3395  021E                     	;# 
  3396  021F                     	;# 
  3397  028C                     	;# 
  3398  028D                     	;# 
  3399  028E                     	;# 
  3400  0291                     	;# 
  3401  0291                     	;# 
  3402  0292                     	;# 
  3403  0293                     	;# 
  3404  0294                     	;# 
  3405  0295                     	;# 
  3406  0295                     	;# 
  3407  0296                     	;# 
  3408  0297                     	;# 
  3409  0298                     	;# 
  3410  029F                     	;# 
  3411  030C                     	;# 
  3412  030D                     	;# 
  3413  030E                     	;# 
  3414  0311                     	;# 
  3415  0311                     	;# 
  3416  0312                     	;# 
  3417  0313                     	;# 
  3418  0314                     	;# 
  3419  0315                     	;# 
  3420  0315                     	;# 
  3421  0316                     	;# 
  3422  0317                     	;# 
  3423  0318                     	;# 
  3424  038C                     	;# 
  3425  038D                     	;# 
  3426  038E                     	;# 
  3427  0391                     	;# 
  3428  0392                     	;# 
  3429  0393                     	;# 
  3430  0394                     	;# 
  3431  0395                     	;# 
  3432  0396                     	;# 
  3433  0397                     	;# 
  3434  0398                     	;# 
  3435  0399                     	;# 
  3436  039A                     	;# 
  3437  039C                     	;# 
  3438  039D                     	;# 
  3439  039E                     	;# 
  3440  039F                     	;# 
  3441  0411                     	;# 
  3442  0411                     	;# 
  3443  0412                     	;# 
  3444  0413                     	;# 
  3445  0414                     	;# 
  3446  0415                     	;# 
  3447  0416                     	;# 
  3448  0417                     	;# 
  3449  0418                     	;# 
  3450  0418                     	;# 
  3451  0419                     	;# 
  3452  041A                     	;# 
  3453  041B                     	;# 
  3454  041C                     	;# 
  3455  041D                     	;# 
  3456  041E                     	;# 
  3457  041F                     	;# 
  3458  0498                     	;# 
  3459  0498                     	;# 
  3460  0499                     	;# 
  3461  049A                     	;# 
  3462  049B                     	;# 
  3463  049B                     	;# 
  3464  049C                     	;# 
  3465  049D                     	;# 
  3466  049E                     	;# 
  3467  049F                     	;# 
  3468  0617                     	;# 
  3469  0618                     	;# 
  3470  0619                     	;# 
  3471  0619                     	;# 
  3472  061A                     	;# 
  3473  061B                     	;# 
  3474  061C                     	;# 
  3475  061C                     	;# 
  3476  061F                     	;# 
  3477  0691                     	;# 
  3478  0692                     	;# 
  3479  0693                     	;# 
  3480  0694                     	;# 
  3481  0695                     	;# 
  3482  0696                     	;# 
  3483  0697                     	;# 
  3484  0698                     	;# 
  3485  0699                     	;# 
  3486  0711                     	;# 
  3487  0712                     	;# 
  3488  0713                     	;# 
  3489  0714                     	;# 
  3490  0715                     	;# 
  3491  0716                     	;# 
  3492  0717                     	;# 
  3493  0718                     	;# 
  3494  0719                     	;# 
  3495  0891                     	;# 
  3496  0891                     	;# 
  3497  0891                     	;# 
  3498  0891                     	;# 
  3499  0891                     	;# 
  3500  0891                     	;# 
  3501  0892                     	;# 
  3502  0892                     	;# 
  3503  0892                     	;# 
  3504  0893                     	;# 
  3505  0893                     	;# 
  3506  0893                     	;# 
  3507  0893                     	;# 
  3508  0893                     	;# 
  3509  0893                     	;# 
  3510  0894                     	;# 
  3511  0894                     	;# 
  3512  0894                     	;# 
  3513  0895                     	;# 
  3514  0895                     	;# 
  3515  0895                     	;# 
  3516  0896                     	;# 
  3517  0896                     	;# 
  3518  0896                     	;# 
  3519  089B                     	;# 
  3520  0911                     	;# 
  3521  0912                     	;# 
  3522  0913                     	;# 
  3523  0914                     	;# 
  3524  0915                     	;# 
  3525  0916                     	;# 
  3526  0918                     	;# 
  3527  0919                     	;# 
  3528  091A                     	;# 
  3529  091B                     	;# 
  3530  091C                     	;# 
  3531  091D                     	;# 
  3532  091E                     	;# 
  3533  091F                     	;# 
  3534  0E0F                     	;# 
  3535  0E10                     	;# 
  3536  0E11                     	;# 
  3537  0E12                     	;# 
  3538  0E13                     	;# 
  3539  0E14                     	;# 
  3540  0E15                     	;# 
  3541  0E16                     	;# 
  3542  0E17                     	;# 
  3543  0E18                     	;# 
  3544  0E19                     	;# 
  3545  0E1A                     	;# 
  3546  0E1B                     	;# 
  3547  0E1C                     	;# 
  3548  0E1D                     	;# 
  3549  0E1E                     	;# 
  3550  0E1F                     	;# 
  3551  0E20                     	;# 
  3552  0E21                     	;# 
  3553  0E22                     	;# 
  3554  0E24                     	;# 
  3555  0E25                     	;# 
  3556  0E28                     	;# 
  3557  0E29                     	;# 
  3558  0E2A                     	;# 
  3559  0E2B                     	;# 
  3560  0E2C                     	;# 
  3561  0E2D                     	;# 
  3562  0E2E                     	;# 
  3563  0E2F                     	;# 
  3564  0E90                     	;# 
  3565  0E91                     	;# 
  3566  0E92                     	;# 
  3567  0E94                     	;# 
  3568  0E95                     	;# 
  3569  0E9C                     	;# 
  3570  0E9D                     	;# 
  3571  0E9E                     	;# 
  3572  0E9F                     	;# 
  3573  0EA0                     	;# 
  3574  0EA1                     	;# 
  3575  0EA2                     	;# 
  3576  0EA3                     	;# 
  3577  0EA4                     	;# 
  3578  0EA5                     	;# 
  3579  0EA6                     	;# 
  3580  0EA7                     	;# 
  3581  0F0F                     	;# 
  3582  0F10                     	;# 
  3583  0F11                     	;# 
  3584  0F12                     	;# 
  3585  0F13                     	;# 
  3586  0F14                     	;# 
  3587  0F15                     	;# 
  3588  0F16                     	;# 
  3589  0F17                     	;# 
  3590  0F18                     	;# 
  3591  0F19                     	;# 
  3592  0F1A                     	;# 
  3593  0F1B                     	;# 
  3594  0F1C                     	;# 
  3595  0F1D                     	;# 
  3596  0F1E                     	;# 
  3597  0F1F                     	;# 
  3598  0F20                     	;# 
  3599  0F21                     	;# 
  3600  0F22                     	;# 
  3601  0F23                     	;# 
  3602  0F24                     	;# 
  3603  0F25                     	;# 
  3604  0F26                     	;# 
  3605  0F27                     	;# 
  3606  0F28                     	;# 
  3607  0F29                     	;# 
  3608  0F2A                     	;# 
  3609  0F2B                     	;# 
  3610  0F2C                     	;# 
  3611  0F2D                     	;# 
  3612  0F2E                     	;# 
  3613  0F2F                     	;# 
  3614  0F30                     	;# 
  3615  0F31                     	;# 
  3616  0F32                     	;# 
  3617  0F33                     	;# 
  3618  0F34                     	;# 
  3619  0F35                     	;# 
  3620  0F36                     	;# 
  3621  0F37                     	;# 
  3622  0FE4                     	;# 
  3623  0FE5                     	;# 
  3624  0FE6                     	;# 
  3625  0FE7                     	;# 
  3626  0FE8                     	;# 
  3627  0FE9                     	;# 
  3628  0FEA                     	;# 
  3629  0FEB                     	;# 
  3630  0FED                     	;# 
  3631  0FEE                     	;# 
  3632  0FEF                     	;# 
  3633                           
  3634                           	psect	eeprom_data
  3635  0000  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3636  0008  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3637  0010  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3638  0018  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3639  0020  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3640  0028  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3641  0030  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3642  0038  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3643  0040  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3644  0048  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3645  0050  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3646  0058  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3647  0060  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3648  0068  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3649  0070  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3650  0078  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3651  0080  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3652  0088  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3653  0090  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3654  0098  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3655  00A0  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3656  00A8  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3657  00B0  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3658  00B8  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3659  00C0  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3660  00C8  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3661  00D0  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3662  00D8  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3663  00E0  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3664  00E8  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3665  00F0  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3666  00F8  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3667  0000                     	;# 
  3668  0001                     	;# 
  3669  0002                     	;# 
  3670  0003                     	;# 
  3671  0004                     	;# 
  3672  0005                     	;# 
  3673  0006                     	;# 
  3674  0007                     	;# 
  3675  0008                     	;# 
  3676  0009                     	;# 
  3677  000A                     	;# 
  3678  000B                     	;# 
  3679  000C                     	;# 
  3680  000D                     	;# 
  3681  000E                     	;# 
  3682  0010                     	;# 
  3683  0011                     	;# 
  3684  0012                     	;# 
  3685  0013                     	;# 
  3686  0014                     	;# 
  3687  0015                     	;# 
  3688  0015                     	;# 
  3689  0016                     	;# 
  3690  0016                     	;# 
  3691  0017                     	;# 
  3692  0018                     	;# 
  3693  0019                     	;# 
  3694  0019                     	;# 
  3695  001A                     	;# 
  3696  001B                     	;# 
  3697  001C                     	;# 
  3698  001D                     	;# 
  3699  001E                     	;# 
  3700  001F                     	;# 
  3701  008C                     	;# 
  3702  008D                     	;# 
  3703  008E                     	;# 
  3704  0090                     	;# 
  3705  0091                     	;# 
  3706  0092                     	;# 
  3707  0093                     	;# 
  3708  0094                     	;# 
  3709  0097                     	;# 
  3710  009B                     	;# 
  3711  009B                     	;# 
  3712  009C                     	;# 
  3713  009D                     	;# 
  3714  009E                     	;# 
  3715  009F                     	;# 
  3716  010C                     	;# 
  3717  010D                     	;# 
  3718  010E                     	;# 
  3719  0111                     	;# 
  3720  0112                     	;# 
  3721  0113                     	;# 
  3722  0114                     	;# 
  3723  0115                     	;# 
  3724  0116                     	;# 
  3725  0117                     	;# 
  3726  0118                     	;# 
  3727  0119                     	;# 
  3728  018C                     	;# 
  3729  018D                     	;# 
  3730  018E                     	;# 
  3731  0197                     	;# 
  3732  0199                     	;# 
  3733  0199                     	;# 
  3734  0199                     	;# 
  3735  019A                     	;# 
  3736  019A                     	;# 
  3737  019A                     	;# 
  3738  019B                     	;# 
  3739  019B                     	;# 
  3740  019B                     	;# 
  3741  019B                     	;# 
  3742  019B                     	;# 
  3743  019C                     	;# 
  3744  019C                     	;# 
  3745  019C                     	;# 
  3746  019D                     	;# 
  3747  019D                     	;# 
  3748  019D                     	;# 
  3749  019E                     	;# 
  3750  019E                     	;# 
  3751  019E                     	;# 
  3752  019F                     	;# 
  3753  019F                     	;# 
  3754  019F                     	;# 
  3755  019F                     	;# 
  3756  019F                     	;# 
  3757  020C                     	;# 
  3758  020D                     	;# 
  3759  020E                     	;# 
  3760  0211                     	;# 
  3761  0211                     	;# 
  3762  0212                     	;# 
  3763  0212                     	;# 
  3764  0213                     	;# 
  3765  0213                     	;# 
  3766  0214                     	;# 
  3767  0214                     	;# 
  3768  0215                     	;# 
  3769  0215                     	;# 
  3770  0215                     	;# 
  3771  0215                     	;# 
  3772  0216                     	;# 
  3773  0216                     	;# 
  3774  0217                     	;# 
  3775  0217                     	;# 
  3776  0219                     	;# 
  3777  021A                     	;# 
  3778  021B                     	;# 
  3779  021C                     	;# 
  3780  021D                     	;# 
  3781  021D                     	;# 
  3782  021E                     	;# 
  3783  021F                     	;# 
  3784  028C                     	;# 
  3785  028D                     	;# 
  3786  028E                     	;# 
  3787  0291                     	;# 
  3788  0291                     	;# 
  3789  0292                     	;# 
  3790  0293                     	;# 
  3791  0294                     	;# 
  3792  0295                     	;# 
  3793  0295                     	;# 
  3794  0296                     	;# 
  3795  0297                     	;# 
  3796  0298                     	;# 
  3797  029F                     	;# 
  3798  030C                     	;# 
  3799  030D                     	;# 
  3800  030E                     	;# 
  3801  0311                     	;# 
  3802  0311                     	;# 
  3803  0312                     	;# 
  3804  0313                     	;# 
  3805  0314                     	;# 
  3806  0315                     	;# 
  3807  0315                     	;# 
  3808  0316                     	;# 
  3809  0317                     	;# 
  3810  0318                     	;# 
  3811  038C                     	;# 
  3812  038D                     	;# 
  3813  038E                     	;# 
  3814  0391                     	;# 
  3815  0392                     	;# 
  3816  0393                     	;# 
  3817  0394                     	;# 
  3818  0395                     	;# 
  3819  0396                     	;# 
  3820  0397                     	;# 
  3821  0398                     	;# 
  3822  0399                     	;# 
  3823  039A                     	;# 
  3824  039C                     	;# 
  3825  039D                     	;# 
  3826  039E                     	;# 
  3827  039F                     	;# 
  3828  0411                     	;# 
  3829  0411                     	;# 
  3830  0412                     	;# 
  3831  0413                     	;# 
  3832  0414                     	;# 
  3833  0415                     	;# 
  3834  0416                     	;# 
  3835  0417                     	;# 
  3836  0418                     	;# 
  3837  0418                     	;# 
  3838  0419                     	;# 
  3839  041A                     	;# 
  3840  041B                     	;# 
  3841  041C                     	;# 
  3842  041D                     	;# 
  3843  041E                     	;# 
  3844  041F                     	;# 
  3845  0498                     	;# 
  3846  0498                     	;# 
  3847  0499                     	;# 
  3848  049A                     	;# 
  3849  049B                     	;# 
  3850  049B                     	;# 
  3851  049C                     	;# 
  3852  049D                     	;# 
  3853  049E                     	;# 
  3854  049F                     	;# 
  3855  0617                     	;# 
  3856  0618                     	;# 
  3857  0619                     	;# 
  3858  0619                     	;# 
  3859  061A                     	;# 
  3860  061B                     	;# 
  3861  061C                     	;# 
  3862  061C                     	;# 
  3863  061F                     	;# 
  3864  0691                     	;# 
  3865  0692                     	;# 
  3866  0693                     	;# 
  3867  0694                     	;# 
  3868  0695                     	;# 
  3869  0696                     	;# 
  3870  0697                     	;# 
  3871  0698                     	;# 
  3872  0699                     	;# 
  3873  0711                     	;# 
  3874  0712                     	;# 
  3875  0713                     	;# 
  3876  0714                     	;# 
  3877  0715                     	;# 
  3878  0716                     	;# 
  3879  0717                     	;# 
  3880  0718                     	;# 
  3881  0719                     	;# 
  3882  0891                     	;# 
  3883  0891                     	;# 
  3884  0891                     	;# 
  3885  0891                     	;# 
  3886  0891                     	;# 
  3887  0891                     	;# 
  3888  0892                     	;# 
  3889  0892                     	;# 
  3890  0892                     	;# 
  3891  0893                     	;# 
  3892  0893                     	;# 
  3893  0893                     	;# 
  3894  0893                     	;# 
  3895  0893                     	;# 
  3896  0893                     	;# 
  3897  0894                     	;# 
  3898  0894                     	;# 
  3899  0894                     	;# 
  3900  0895                     	;# 
  3901  0895                     	;# 
  3902  0895                     	;# 
  3903  0896                     	;# 
  3904  0896                     	;# 
  3905  0896                     	;# 
  3906  089B                     	;# 
  3907  0911                     	;# 
  3908  0912                     	;# 
  3909  0913                     	;# 
  3910  0914                     	;# 
  3911  0915                     	;# 
  3912  0916                     	;# 
  3913  0918                     	;# 
  3914  0919                     	;# 
  3915  091A                     	;# 
  3916  091B                     	;# 
  3917  091C                     	;# 
  3918  091D                     	;# 
  3919  091E                     	;# 
  3920  091F                     	;# 
  3921  0E0F                     	;# 
  3922  0E10                     	;# 
  3923  0E11                     	;# 
  3924  0E12                     	;# 
  3925  0E13                     	;# 
  3926  0E14                     	;# 
  3927  0E15                     	;# 
  3928  0E16                     	;# 
  3929  0E17                     	;# 
  3930  0E18                     	;# 
  3931  0E19                     	;# 
  3932  0E1A                     	;# 
  3933  0E1B                     	;# 
  3934  0E1C                     	;# 
  3935  0E1D                     	;# 
  3936  0E1E                     	;# 
  3937  0E1F                     	;# 
  3938  0E20                     	;# 
  3939  0E21                     	;# 
  3940  0E22                     	;# 
  3941  0E24                     	;# 
  3942  0E25                     	;# 
  3943  0E28                     	;# 
  3944  0E29                     	;# 
  3945  0E2A                     	;# 
  3946  0E2B                     	;# 
  3947  0E2C                     	;# 
  3948  0E2D                     	;# 
  3949  0E2E                     	;# 
  3950  0E2F                     	;# 
  3951  0E90                     	;# 
  3952  0E91                     	;# 
  3953  0E92                     	;# 
  3954  0E94                     	;# 
  3955  0E95                     	;# 
  3956  0E9C                     	;# 
  3957  0E9D                     	;# 
  3958  0E9E                     	;# 
  3959  0E9F                     	;# 
  3960  0EA0                     	;# 
  3961  0EA1                     	;# 
  3962  0EA2                     	;# 
  3963  0EA3                     	;# 
  3964  0EA4                     	;# 
  3965  0EA5                     	;# 
  3966  0EA6                     	;# 
  3967  0EA7                     	;# 
  3968  0F0F                     	;# 
  3969  0F10                     	;# 
  3970  0F11                     	;# 
  3971  0F12                     	;# 
  3972  0F13                     	;# 
  3973  0F14                     	;# 
  3974  0F15                     	;# 
  3975  0F16                     	;# 
  3976  0F17                     	;# 
  3977  0F18                     	;# 
  3978  0F19                     	;# 
  3979  0F1A                     	;# 
  3980  0F1B                     	;# 
  3981  0F1C                     	;# 
  3982  0F1D                     	;# 
  3983  0F1E                     	;# 
  3984  0F1F                     	;# 
  3985  0F20                     	;# 
  3986  0F21                     	;# 
  3987  0F22                     	;# 
  3988  0F23                     	;# 
  3989  0F24                     	;# 
  3990  0F25                     	;# 
  3991  0F26                     	;# 
  3992  0F27                     	;# 
  3993  0F28                     	;# 
  3994  0F29                     	;# 
  3995  0F2A                     	;# 
  3996  0F2B                     	;# 
  3997  0F2C                     	;# 
  3998  0F2D                     	;# 
  3999  0F2E                     	;# 
  4000  0F2F                     	;# 
  4001  0F30                     	;# 
  4002  0F31                     	;# 
  4003  0F32                     	;# 
  4004  0F33                     	;# 
  4005  0F34                     	;# 
  4006  0F35                     	;# 
  4007  0F36                     	;# 
  4008  0F37                     	;# 
  4009  0FE4                     	;# 
  4010  0FE5                     	;# 
  4011  0FE6                     	;# 
  4012  0FE7                     	;# 
  4013  0FE8                     	;# 
  4014  0FE9                     	;# 
  4015  0FEA                     	;# 
  4016  0FEB                     	;# 
  4017  0FED                     	;# 
  4018  0FEE                     	;# 
  4019  0FEF                     	;_spi1_send_buffer_data
  4020                           
  4021                           	psect	idataBANK0
  4022  068C                     __pidataBANK0:	
  4023                           
  4024                           ;initializer for _direction
  4025  068C  3401               	retlw	1
  4026  068D  3400               	retlw	0
  4027                           
  4028                           ;initializer for _st_dataLength
  4029  068E  34FF               	retlw	255
  4030  068F  34FF               	retlw	255
  4031                           
  4032                           	psect	stringtext1
  4033  0690                     __pstringtext1:	
  4034  0690                     _MACHINE_ID:	
  4035  0690  3401               	retlw	1
  4036  0691  3400               	retlw	0
  4037  0692                     __end_of_MACHINE_ID:	
  4038                           
  4039                           	psect	stringtext2
  4040  0692                     __pstringtext2:	
  4041  0692                     _VENDER_ID:	
  4042  0692  3401               	retlw	1
  4043  0693  3400               	retlw	0
  4044  0694                     __end_of_VENDER_ID:	
  4045                           
  4046                           	psect	bitnvCOMMON
  4047  03C0                     __pbitnvCOMMON:	
  4048  03C0                     _isEndPointTrig:	
  4049  03C0                     	ds	1
  4050  03C1                     _isMycargo:	
  4051  03C1                     	ds	1
  4052  000E                     _PORTC	set	14
  4053  000D                     _PORTB	set	13
  4054  000C                     _PORTA	set	12
  4055  000B                     _INTCONbits	set	11
  4056  0010                     _PIR0bits	set	16
  4057  0012                     _PIR2bits	set	18
  4058  0011                     _PIR1bits	set	17
  4059  008E                     _TRISC	set	142
  4060  008D                     _TRISB	set	141
  4061  008C                     _TRISA	set	140
  4062  0092                     _PIE2bits	set	146
  4063  0091                     _PIE1bits	set	145
  4064  0090                     _PIE0bits	set	144
  4065  008E                     _TRISCbits	set	142
  4066  008D                     _TRISBbits	set	141
  4067  010C                     _LATAbits	set	268
  4068  018E                     _ANSELC	set	398
  4069  018D                     _ANSELB	set	397
  4070  018C                     _ANSELA	set	396
  4071  021C                     _SSP2STATbits	set	540
  4072  021D                     _SSP2CON1bits	set	541
  4073  021F                     _SSP2CON3bits	set	543
  4074  0214                     _SSP1STATbits	set	532
  4075  0215                     _SSP1CON1bits	set	533
  4076  0217                     _SSP1CON3bits	set	535
  4077  020C                     _WPUA	set	524
  4078  020D                     _WPUB	set	525
  4079  020E                     _WPUC	set	526
  4080  0219                     _SSP2BUF	set	537
  4081  0211                     _SSP1BUF	set	529
  4082  0392                     _IOCANbits	set	914
  4083  0391                     _IOCAPbits	set	913
  4084  038C                     _INLVLAbits	set	908
  4085  038E                     _INLVLCbits	set	910
  4086  038D                     _INLVLBbits	set	909
  4087  0393                     _IOCAFbits	set	915
  4088  091E                     _OSCTUNEbits	set	2334
  4089  091F                     _OSCFRQbits	set	2335
  4090  0E1F                     _SSP2SSPPSbits	set	3615
  4091  0E22                     _SSP1SSPPSbits	set	3618
  4092  0E9F                     _RB7PPS	set	3743
  4093  0E92                     _RA2PPS	set	3730
  4094  0EA2                     _RC2PPS	set	3746
  4095                           
  4096                           ; #config settings
  4097  0000                     
  4098                           	psect	cinit
  4099  005C                     start_initialization:	
  4100  005C                     __initialization:		;BIGRAM
  4101                           
  4102                           ; Initialize objects allocated to BANK0
  4103  005C  3186  268C  3180   	fcall	__pidataBANK0	;fetch initializer
  4104  005F  00EC               	movwf	__pdataBANK0& (0+127)
  4105  0060  3186  268D  3180   	fcall	__pidataBANK0+1	;fetch initializer
  4106  0063  00ED               	movwf	(__pdataBANK0+1)& (0+127)
  4107  0064  3186  268E  3180   	fcall	__pidataBANK0+2	;fetch initializer
  4108  0067  00EE               	movwf	(__pdataBANK0+2)& (0+127)
  4109  0068  3186  268F  3180   	fcall	__pidataBANK0+3	;fetch initializer
  4110  006B  00EF               	movwf	(__pdataBANK0+3)& (0+127)
  4111                           
  4112                           ; Clear objects allocated to BIGRAM
  4113  006C  30F0               	movlw	low (0+9456)
  4114  006D  0084               	movwf	4
  4115  006E  3024               	movlw	high (0+9456)
  4116  006F  0085               	movwf	5
  4117  0070  3000               	movlw	0
  4118  0071  00FE               	movwf	btemp
  4119  0072  3003               	movlw	3
  4120  0073  00FF               	movwf	btemp+1
  4121  0074  3186  2641  3180   	fcall	clear_ram0
  4122                           
  4123                           ; Clear objects allocated to BITCOMMON
  4124  0077  01F0               	clrf	(__pbitbssCOMMON/(0+8))& (0+127)
  4125                           
  4126                           ; Clear objects allocated to COMMON
  4127  0078  01F9               	clrf	__pbssCOMMON& (0+127)
  4128                           
  4129                           ; Clear objects allocated to BANK0
  4130  0079  3020               	movlw	low __pbssBANK0
  4131  007A  0084               	movwf	4
  4132  007B  3000               	movlw	high __pbssBANK0
  4133  007C  0085               	movwf	5
  4134  007D  3032               	movlw	50
  4135  007E  00FE               	movwf	btemp
  4136  007F  3000               	movlw	0
  4137  0080  00FF               	movwf	btemp+1
  4138  0081  3186  2641  3180   	fcall	clear_ram0
  4139                           
  4140                           ; Clear objects allocated to BANK1
  4141  0084  30A0               	movlw	low __pbssBANK1
  4142  0085  0084               	movwf	4
  4143  0086  3000               	movlw	high __pbssBANK1
  4144  0087  0085               	movwf	5
  4145  0088  3047               	movlw	71
  4146  0089  00FE               	movwf	btemp
  4147  008A  3000               	movlw	0
  4148  008B  00FF               	movwf	btemp+1
  4149  008C  3186  2641         	fcall	clear_ram0
  4150  008E                     end_of_initialization:	
  4151                           ;End of C runtime variable initialization code
  4152                           
  4153  008E                     __end_of__initialization:	
  4154  008E  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  4155  008F  0020               	movlb	0
  4156  0090  3184  2C8F         	ljmp	_main	;jump to C main() function
  4157                           
  4158                           	psect	bitbssCOMMON
  4159  0380                     __pbitbssCOMMON:	
  4160  0380                     _workingcounta3:	
  4161  0380                     	ds	1
  4162  0381                     _workingcounta2:	
  4163  0381                     	ds	1
  4164  0382                     _workingcounta1:	
  4165  0382                     	ds	1
  4166  0383                     _workingcounta0:	
  4167  0383                     	ds	1
  4168  0384                     _ra3condision:	
  4169  0384                     	ds	1
  4170  0385                     _isreadTrain:	
  4171  0385                     	ds	1
  4172  0386                     _isCalibrated:	
  4173  0386                     	ds	1
  4174                           
  4175                           	psect	bssCOMMON
  4176  0079                     __pbssCOMMON:	
  4177  0079                     _spi1_Read_data:	
  4178  0079                     	ds	1
  4179                           
  4180                           	psect	bssBANK0
  4181  0020                     __pbssBANK0:	
  4182  0020                     _cargoData:	
  4183  0020                     	ds	16
  4184  0030                     _linkInfo:	
  4185  0030                     	ds	6
  4186  0036                     _cargoLengthnuf:	
  4187  0036                     	ds	2
  4188  0038                     _linkAngle:	
  4189  0038                     	ds	2
  4190  003A                     _send_count1:	
  4191  003A                     	ds	2
  4192  003C                     _spi1_send_count:	
  4193  003C                     	ds	2
  4194  003E                     _counta2:	
  4195  003E                     	ds	2
  4196  0040                     _trainPos:	
  4197  0040                     	ds	2
  4198  0042                     _read_count2:	
  4199  0042                     	ds	2
  4200  0044                     _countabuf:	
  4201  0044                     	ds	2
  4202  0046                     _read_count1:	
  4203  0046                     	ds	2
  4204  0048                     _count2:	
  4205  0048                     	ds	2
  4206  004A                     _count1:	
  4207  004A                     	ds	2
  4208  004C                     _readNG:	
  4209  004C                     	ds	1
  4210  004D                     _readOK:	
  4211  004D                     	ds	1
  4212  004E                     _spi2_Read_data:	
  4213  004E                     	ds	1
  4214  004F                     _send_data:	
  4215  004F                     	ds	1
  4216  0050                     _st_type:	
  4217  0050                     	ds	1
  4218  0051                     _spi2_Send_data:	
  4219  0051                     	ds	1
  4220                           
  4221                           	psect	dataBANK0
  4222  006C                     __pdataBANK0:	
  4223  006C                     _direction:	
  4224  006C                     	ds	2
  4225  006E                     _st_dataLength:	
  4226  006E                     	ds	2
  4227                           
  4228                           	psect	bssBANK1
  4229  00A0                     __pbssBANK1:	
  4230  00A0                     _cargo_index:	
  4231  00A0                     	ds	18
  4232  00B2                     _comu_types:	
  4233  00B2                     	ds	18
  4234  00C4                     _command:	
  4235  00C4                     	ds	18
  4236  00D6                     _calibdata:	
  4237  00D6                     	ds	9
  4238  00DF                     _cargoWorkingCount:	
  4239  00DF                     	ds	4
  4240  00E3                     _startTrainBytes:	
  4241  00E3                     	ds	4
  4242                           
  4243                           	psect	clrtext
  4244  0641                     clear_ram0:	
  4245                           ;	Called with FSR0 containing the base address, and
  4246                           ;	btemp/btemp+1 has the size to clear
  4247                           
  4248  0641  0064               	clrwdt	;clear the watchdog before getting into this loop
  4249  0642                     clrloop0:	
  4250  0642  0180               	clrf	0	;clear RAM location pointed to by FSR
  4251  0643  3101               	addfsr 0,1
  4252  0644  3001               	movlw	1
  4253  0645  02FE               	subwf	126,f
  4254  0646  3000               	movlw	0
  4255  0647  3BFF               	subwfb	127,f
  4256  0648  087F               	movf	127,w
  4257  0649  047E               	iorwf	126,w
  4258  064A  1903               	btfsc	3,2
  4259  064B  3400               	retlw	0	;all done for this memory range, return
  4260  064C  2E42               	goto	clrloop0	;have we reached the end yet?
  4261                           
  4262                           	psect	cstackBANK1
  4263  00E7                     __pcstackBANK1:	
  4264  00E7                     readCargo@buflong:	
  4265                           
  4266                           ; 4 bytes @ 0x0
  4267  00E7                     	ds	4
  4268  00EB                     readCargo@bufint:	
  4269                           
  4270                           ; 2 bytes @ 0x4
  4271  00EB                     	ds	2
  4272  00ED                     readCargo@spi1_Read_data:	
  4273                           
  4274                           ; 1 bytes @ 0x6
  4275  00ED                     	ds	1
  4276                           
  4277                           	psect	cstackCOMMON
  4278  0071                     __pcstackCOMMON:	
  4279  0071                     ?_isTrainSt:	
  4280  0071                     ?_isSPI1read:	
  4281                           ; 1 bit 
  4282                           
  4283  0071                     ?_setComunicateMode:	
  4284                           ; 1 bit 
  4285                           
  4286  0071                     ?_isSPI2read:	
  4287                           ; 1 bit 
  4288                           
  4289  0071                     ?_clutchaction:	
  4290                           ; 1 bit 
  4291                           
  4292  0071                     ?_isEndpoint:	
  4293                           ; 1 bit 
  4294                           
  4295  0071                     ?_setSPI1sendData:	
  4296                           ; 1 bit 
  4297                           
  4298  0071                     ??_setSPI1sendData:	
  4299                           ; 1 bytes @ 0x0
  4300                           
  4301  0071                     ?_addAngle:	
  4302                           ; 1 bytes @ 0x0
  4303                           
  4304  0071                     ?_clear:	
  4305                           ; 1 bytes @ 0x0
  4306                           
  4307  0071                     ?_resetTrainData:	
  4308                           ; 1 bytes @ 0x0
  4309                           
  4310  0071                     ?_initComand:	
  4311                           ; 1 bytes @ 0x0
  4312                           
  4313  0071                     ?_initComu_types:	
  4314                           ; 1 bytes @ 0x0
  4315                           
  4316  0071                     ?_InitCalibrate:	
  4317                           ; 1 bytes @ 0x0
  4318                           
  4319  0071                     ?_spi_init:	
  4320                           ; 1 bytes @ 0x0
  4321                           
  4322  0071                     ?_initCargo:	
  4323                           ; 1 bytes @ 0x0
  4324                           
  4325  0071                     ?_read_train:	
  4326                           ; 1 bytes @ 0x0
  4327                           
  4328  0071                     ?_setSPI2sendData:	
  4329                           ; 1 bytes @ 0x0
  4330                           
  4331  0071                     ?_restartCargo:	
  4332                           ; 1 bytes @ 0x0
  4333                           
  4334  0071                     ?_spi1_init:	
  4335                           ; 1 bytes @ 0x0
  4336                           
  4337  0071                     ?_spi2_init:	
  4338                           ; 1 bytes @ 0x0
  4339                           
  4340  0071                     ?_readCargo:	
  4341                           ; 1 bytes @ 0x0
  4342                           
  4343  0071                     ?_setCargoAngle:	
  4344                           ; 1 bytes @ 0x0
  4345                           
  4346  0071                     ?_InterMSSP:	
  4347                           ; 1 bytes @ 0x0
  4348                           
  4349  0071                     ?_initbuffer:	
  4350                           ; 1 bytes @ 0x0
  4351                           
  4352  0071                     ?_init:	
  4353                           ; 1 bytes @ 0x0
  4354                           
  4355  0071                     ?_io_init:	
  4356                           ; 1 bytes @ 0x0
  4357                           
  4358  0071                     ?_initTrain:	
  4359                           ; 1 bytes @ 0x0
  4360                           
  4361  0071                     ?_main:	
  4362                           ; 1 bytes @ 0x0
  4363                           
  4364  0071                     ??_isSPI2read:	
  4365                           ; 1 bytes @ 0x0
  4366                           
  4367  0071                     ?_setSPI1sendDataManual:	
  4368                           ; 1 bytes @ 0x0
  4369                           
  4370  0071                     ?_Calibrate_download:	
  4371                           ; 1 bytes @ 0x0
  4372                           
  4373  0071                     setCargoAngle@m_linkAngleTo:	
  4374                           ; 1 bytes @ 0x0
  4375                           
  4376                           
  4377                           ; 2 bytes @ 0x0
  4378  0071                     	ds	2
  4379  0073                     ??_addAngle:	
  4380  0073                     ??_setCargoAngle:	
  4381                           ; 1 bytes @ 0x2
  4382                           
  4383  0073                     ??_InterMSSP:	
  4384                           ; 1 bytes @ 0x2
  4385                           
  4386                           
  4387                           ; 1 bytes @ 0x2
  4388  0073                     	ds	5
  4389                           
  4390                           	psect	cstackBANK0
  4391  0052                     __pcstackBANK0:	
  4392  0052                     ??_clear:	
  4393  0052                     ??_isTrainSt:	
  4394                           ; 1 bytes @ 0x0
  4395                           
  4396  0052                     ??_resetTrainData:	
  4397                           ; 1 bytes @ 0x0
  4398                           
  4399  0052                     ??_initComand:	
  4400                           ; 1 bytes @ 0x0
  4401                           
  4402  0052                     ??_initComu_types:	
  4403                           ; 1 bytes @ 0x0
  4404                           
  4405  0052                     ??_InitCalibrate:	
  4406                           ; 1 bytes @ 0x0
  4407                           
  4408  0052                     ??_initCargo:	
  4409                           ; 1 bytes @ 0x0
  4410                           
  4411  0052                     ??_isSPI1read:	
  4412                           ; 1 bytes @ 0x0
  4413                           
  4414  0052                     ??_read_train:	
  4415                           ; 1 bytes @ 0x0
  4416                           
  4417  0052                     ??_setSPI2sendData:	
  4418                           ; 1 bytes @ 0x0
  4419                           
  4420  0052                     ??_restartCargo:	
  4421                           ; 1 bytes @ 0x0
  4422                           
  4423  0052                     ??_spi1_init:	
  4424                           ; 1 bytes @ 0x0
  4425                           
  4426  0052                     ??_spi2_init:	
  4427                           ; 1 bytes @ 0x0
  4428                           
  4429  0052                     ??_initbuffer:	
  4430                           ; 1 bytes @ 0x0
  4431                           
  4432  0052                     ??_io_init:	
  4433                           ; 1 bytes @ 0x0
  4434                           
  4435  0052                     ??_setSPI1sendDataManual:	
  4436                           ; 1 bytes @ 0x0
  4437                           
  4438  0052                     ??_clutchaction:	
  4439                           ; 1 bytes @ 0x0
  4440                           
  4441  0052                     ?_getCargoData:	
  4442                           ; 1 bytes @ 0x0
  4443                           
  4444  0052                     setSPI1sendDataManual@data:	
  4445                           ; 16 bytes @ 0x0
  4446                           
  4447  0052                     clutchaction@comannd:	
  4448                           ; 1 bytes @ 0x0
  4449                           
  4450                           
  4451                           ; 1 bytes @ 0x0
  4452  0052                     	ds	1
  4453  0053                     ??_isEndpoint:	
  4454  0053                     spi1_init@dummy:	
  4455                           ; 1 bytes @ 0x1
  4456                           
  4457  0053                     spi2_init@dummy:	
  4458                           ; 1 bytes @ 0x1
  4459                           
  4460                           
  4461                           ; 1 bytes @ 0x1
  4462  0053                     	ds	1
  4463  0054                     ??_spi_init:	
  4464  0054                     initbuffer@i:	
  4465                           ; 1 bytes @ 0x2
  4466                           
  4467  0054                     read_train@bufint:	
  4468                           ; 2 bytes @ 0x2
  4469                           
  4470                           
  4471                           ; 2 bytes @ 0x2
  4472  0054                     	ds	2
  4473  0056                     ??_init:	
  4474                           
  4475                           ; 1 bytes @ 0x4
  4476  0056                     	ds	2
  4477  0058                     isEndpoint@spi2data:	
  4478                           
  4479                           ; 1 bytes @ 0x6
  4480  0058                     	ds	1
  4481  0059                     ??_Calibrate_download:	
  4482                           
  4483                           ; 1 bytes @ 0x7
  4484  0059                     	ds	1
  4485  005A                     isTrainSt@buf:	
  4486                           
  4487                           ; 1 bytes @ 0x8
  4488  005A                     	ds	1
  4489  005B                     ??_initTrain:	
  4490                           
  4491                           ; 1 bytes @ 0x9
  4492  005B                     	ds	3
  4493  005E                     Calibrate_download@buflong:	
  4494                           
  4495                           ; 4 bytes @ 0xC
  4496  005E                     	ds	4
  4497  0062                     ??_getCargoData:	
  4498  0062                     Calibrate_download@buf:	
  4499                           ; 1 bytes @ 0x10
  4500                           
  4501                           
  4502                           ; 1 bytes @ 0x10
  4503  0062                     	ds	1
  4504  0063                     ??_readCargo:	
  4505  0063                     Calibrate_download@bufint:	
  4506                           ; 1 bytes @ 0x11
  4507                           
  4508                           
  4509                           ; 2 bytes @ 0x11
  4510  0063                     	ds	2
  4511  0065                     Calibrate_download@spi_Read_data:	
  4512                           
  4513                           ; 1 bytes @ 0x13
  4514  0065                     	ds	3
  4515  0068                     ??_setComunicateMode:	
  4516                           
  4517                           ; 1 bytes @ 0x16
  4518  0068                     	ds	1
  4519  0069                     setComunicateMode@m_type:	
  4520                           
  4521                           ; 1 bytes @ 0x17
  4522  0069                     	ds	1
  4523  006A                     setComunicateMode@i:	
  4524                           
  4525                           ; 2 bytes @ 0x18
  4526  006A                     	ds	2
  4527  006C                     ??_main:	
  4528                           
  4529                           	psect	maintext
  4530  048F                     __pmaintext:	
  4531                           ; 1 bytes @ 0x1A
  4532 ;;
  4533 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  4534 ;;
  4535 ;; *************** function _main *****************
  4536 ;; Defined at:
  4537 ;;		line 164 in file "D:/programdata/16F18346_Link_IC.X/main.c"
  4538 ;; Parameters:    Size  Location     Type
  4539 ;;		None
  4540 ;; Auto vars:     Size  Location     Type
  4541 ;;		None
  4542 ;; Return value:  Size  Location     Type
  4543 ;;                  1    wreg      void 
  4544 ;; Registers used:
  4545 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4546 ;; Tracked objects:
  4547 ;;		On entry : B1F/0
  4548 ;;		On exit  : 0/0
  4549 ;;		Unchanged: 0/0
  4550 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4551 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4552 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4553 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4554 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4555 ;;Total ram usage:        0 bytes
  4556 ;; Hardware stack levels required when called:    7
  4557 ;; This function calls:
  4558 ;;		_InitCalibrate
  4559 ;;		_init
  4560 ;;		_initCargo
  4561 ;;		_initComand
  4562 ;;		_initComu_types
  4563 ;;		_initTrain
  4564 ;;		_io_init
  4565 ;;		_isSPI1read
  4566 ;;		_read_train
  4567 ;;		_setComunicateMode
  4568 ;;		_setSPI2sendData
  4569 ;;		_spi_init
  4570 ;; This function is called by:
  4571 ;;		Startup code after reset
  4572 ;; This function uses a non-reentrant model
  4573 ;;
  4574                           
  4575                           
  4576                           ;psect for function _main
  4577  048F                     _main:	
  4578                           
  4579                           ;main.c: 165: initComand();
  4580                           
  4581                           ;incstack = 0
  4582                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4583  048F  3182  22DC  3184   	fcall	_initComand
  4584                           
  4585                           ;main.c: 166: initComu_types();
  4586  0492  3182  226F  3184   	fcall	_initComu_types
  4587                           
  4588                           ;main.c: 167: InitCalibrate();
  4589  0495  3185  25B7  3184   	fcall	_InitCalibrate
  4590                           
  4591                           ;main.c: 168: init();
  4592  0498  3184  24E7  3184   	fcall	_init
  4593                           
  4594                           ;main.c: 169: io_init();
  4595  049B  3186  266E  3184   	fcall	_io_init
  4596                           
  4597                           ;main.c: 170: spi_init();
  4598  049E  3186  2664  3184   	fcall	_spi_init
  4599                           
  4600                           ;main.c: 171: initCargo();
  4601  04A1  3185  25CE  3184   	fcall	_initCargo
  4602                           
  4603                           ;main.c: 172: LATAbits.LATA0 = 1;
  4604  04A4  0022               	movlb	2	; select bank2
  4605  04A5  140C               	bsf	12,0	;volatile
  4606  04A6                     l2902:	
  4607                           ;main.c: 173: while(1){
  4608                           
  4609                           
  4610                           ;main.c: 174: if(!isSPI1read()){
  4611  04A6  3186  261A  3184   	fcall	_isSPI1read
  4612  04A9  1803               	btfsc	3,0
  4613  04AA  2CA6               	goto	l2902
  4614                           
  4615                           ;main.c: 175: initTrain();
  4616  04AB  3183  2349  3184   	fcall	_initTrain
  4617                           
  4618                           ;main.c: 176: if(isreadTrain){
  4619  04AE  1EF0               	btfss	_isreadTrain/(0+8),_isreadTrain& (0+7)
  4620  04AF  2CB6               	goto	l2910
  4621                           
  4622                           ;main.c: 177: setComunicateMode(st_type);
  4623  04B0  0020               	movlb	0	; select bank0
  4624  04B1  0850               	movf	_st_type,w
  4625  04B2  3184  241B  3184   	fcall	_setComunicateMode
  4626                           
  4627                           ;main.c: 178: }else{
  4628  04B5  2CB9               	goto	l2912
  4629  04B6                     l2910:	
  4630                           
  4631                           ;main.c: 179: read_train();
  4632  04B6  3183  2391  3184   	fcall	_read_train
  4633  04B9                     l2912:	
  4634                           
  4635                           ;main.c: 180: }
  4636                           ;main.c: 181: setSPI2sendData();
  4637  04B9  3185  250F  3184   	fcall	_setSPI2sendData
  4638  04BC  2CA6               	goto	l2902
  4639  04BD                     __end_of_main:	
  4640                           ;main.c: 182: }
  4641                           ;main.c: 183: };
  4642                           ;main.c: 184: return;
  4643                           
  4644                           
  4645                           	psect	text1
  4646  0664                     __ptext1:	
  4647 ;; *************** function _spi_init *****************
  4648 ;; Defined at:
  4649 ;;		line 22 in file "D:/programdata/16F18346_Link_IC.X/spiControl.c"
  4650 ;; Parameters:    Size  Location     Type
  4651 ;;		None
  4652 ;; Auto vars:     Size  Location     Type
  4653 ;;		None
  4654 ;; Return value:  Size  Location     Type
  4655 ;;                  1    wreg      void 
  4656 ;; Registers used:
  4657 ;;		wreg, status,2, status,0, pclath, cstack
  4658 ;; Tracked objects:
  4659 ;;		On entry : 0/0
  4660 ;;		On exit  : 0/0
  4661 ;;		Unchanged: 0/0
  4662 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4663 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4664 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4665 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4666 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4667 ;;Total ram usage:        0 bytes
  4668 ;; Hardware stack levels used:    1
  4669 ;; Hardware stack levels required when called:    4
  4670 ;; This function calls:
  4671 ;;		_spi1_init
  4672 ;;		_spi2_init
  4673 ;; This function is called by:
  4674 ;;		_main
  4675 ;; This function uses a non-reentrant model
  4676 ;;
  4677                           
  4678                           
  4679                           ;psect for function _spi_init
  4680  0664                     _spi_init:	
  4681                           
  4682                           ;spiControl.c: 23: INTCONbits.PEIE = 0;
  4683                           
  4684                           ;incstack = 0
  4685                           ; Regs used in _spi_init: [wreg+status,2+status,0+pclath+cstack]
  4686  0664  130B               	bcf	11,6	;volatile
  4687                           
  4688                           ;spiControl.c: 24: INTCONbits.GIE = 0;
  4689  0665  138B               	bcf	11,7	;volatile
  4690                           
  4691                           ;spiControl.c: 25: spi1_init();
  4692  0666  3185  2577  3186   	fcall	_spi1_init
  4693                           
  4694                           ;spiControl.c: 26: spi2_init();
  4695  0669  3185  2533         	fcall	_spi2_init
  4696                           
  4697                           ;spiControl.c: 27: INTCONbits.PEIE = 1;
  4698  066B  170B               	bsf	11,6	;volatile
  4699                           
  4700                           ;spiControl.c: 28: INTCONbits.GIE = 1;
  4701  066C  178B               	bsf	11,7	;volatile
  4702  066D  0008               	return
  4703  066E                     __end_of_spi_init:	
  4704                           
  4705                           	psect	text2
  4706  0533                     __ptext2:	
  4707 ;; *************** function _spi2_init *****************
  4708 ;; Defined at:
  4709 ;;		line 49 in file "D:/programdata/16F18346_Link_IC.X/spiControl.c"
  4710 ;; Parameters:    Size  Location     Type
  4711 ;;		None
  4712 ;; Auto vars:     Size  Location     Type
  4713 ;;  dummy           1    1[BANK0 ] unsigned char 
  4714 ;; Return value:  Size  Location     Type
  4715 ;;                  1    wreg      void 
  4716 ;; Registers used:
  4717 ;;		wreg, status,2, status,0
  4718 ;; Tracked objects:
  4719 ;;		On entry : 0/0
  4720 ;;		On exit  : 0/0
  4721 ;;		Unchanged: 0/0
  4722 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4723 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4724 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4725 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4726 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4727 ;;Total ram usage:        2 bytes
  4728 ;; Hardware stack levels used:    1
  4729 ;; Hardware stack levels required when called:    3
  4730 ;; This function calls:
  4731 ;;		Nothing
  4732 ;; This function is called by:
  4733 ;;		_spi_init
  4734 ;; This function uses a non-reentrant model
  4735 ;;
  4736                           
  4737                           
  4738                           ;psect for function _spi2_init
  4739  0533                     _spi2_init:	
  4740                           
  4741                           ;spiControl.c: 50: unsigned char dummy;
  4742                           ;spiControl.c: 51: SSP2CON3bits.PCIE = 0;
  4743                           
  4744                           ;incstack = 0
  4745                           ; Regs used in _spi2_init: [wreg+status,2+status,0]
  4746  0533  0024               	movlb	4	; select bank4
  4747  0534  131F               	bcf	31,6	;volatile
  4748                           
  4749                           ;spiControl.c: 52: RA2PPS = 0b11011;
  4750  0535  301B               	movlw	27
  4751  0536  003D               	movlb	29	; select bank29
  4752  0537  0092               	movwf	18	;volatile
  4753                           
  4754                           ;spiControl.c: 53: RB7PPS = 0b11010;
  4755  0538  301A               	movlw	26
  4756  0539  009F               	movwf	31	;volatile
  4757                           
  4758                           ;spiControl.c: 54: SSP2SSPPSbits.SSP2SSPPS = 0b01111;
  4759  053A  003C               	movlb	28	; select bank28
  4760  053B  081F               	movf	31,w	;volatile
  4761  053C  39E0               	andlw	-32
  4762  053D  380F               	iorlw	15
  4763  053E  009F               	movwf	31	;volatile
  4764                           
  4765                           ;spiControl.c: 55: SSP2CON1bits.SSPOV = 1;
  4766  053F  0024               	movlb	4	; select bank4
  4767  0540  171D               	bsf	29,6	;volatile
  4768                           
  4769                           ;spiControl.c: 56: SSP2CON1bits.SSPEN = 1;
  4770  0541  169D               	bsf	29,5	;volatile
  4771                           
  4772                           ;spiControl.c: 57: SSP2CON1bits.SSPM = 0b0001;
  4773  0542  081D               	movf	29,w	;volatile
  4774  0543  39F0               	andlw	-16
  4775  0544  3801               	iorlw	1
  4776  0545  009D               	movwf	29	;volatile
  4777                           
  4778                           ;spiControl.c: 58: SSP2CON3bits.BOEN = 1;
  4779  0546  161F               	bsf	31,4	;volatile
  4780                           
  4781                           ;spiControl.c: 59: SSP2STATbits.SMP = 0;
  4782  0547  139C               	bcf	28,7	;volatile
  4783                           
  4784                           ;spiControl.c: 60: SSP2STATbits.CKE = 0;
  4785  0548  131C               	bcf	28,6	;volatile
  4786                           
  4787                           ;spiControl.c: 61: SSP2CON1bits.CKP = 0;
  4788  0549  121D               	bcf	29,4	;volatile
  4789                           
  4790                           ;spiControl.c: 62: PIE2bits.SSP2IE = 1;
  4791  054A  0021               	movlb	1	; select bank1
  4792  054B  1592               	bsf	18,3	;volatile
  4793                           
  4794                           ;spiControl.c: 63: PIR2bits.SSP2IF = 0;
  4795  054C  0020               	movlb	0	; select bank0
  4796  054D  1192               	bcf	18,3	;volatile
  4797                           
  4798                           ;spiControl.c: 64: dummy = SSP2BUF;
  4799  054E  0024               	movlb	4	; select bank4
  4800  054F  0819               	movf	25,w	;volatile
  4801  0550  0020               	movlb	0	; select bank0
  4802  0551  00D2               	movwf	??_spi2_init
  4803  0552  0852               	movf	??_spi2_init,w
  4804  0553  00D3               	movwf	spi2_init@dummy
  4805  0554  0008               	return
  4806  0555                     __end_of_spi2_init:	
  4807                           
  4808                           	psect	text3
  4809  0577                     __ptext3:	
  4810 ;; *************** function _spi1_init *****************
  4811 ;; Defined at:
  4812 ;;		line 33 in file "D:/programdata/16F18346_Link_IC.X/spiControl.c"
  4813 ;; Parameters:    Size  Location     Type
  4814 ;;		None
  4815 ;; Auto vars:     Size  Location     Type
  4816 ;;  dummy           1    1[BANK0 ] unsigned char 
  4817 ;; Return value:  Size  Location     Type
  4818 ;;                  1    wreg      void 
  4819 ;; Registers used:
  4820 ;;		wreg, status,2, status,0
  4821 ;; Tracked objects:
  4822 ;;		On entry : 0/0
  4823 ;;		On exit  : 0/0
  4824 ;;		Unchanged: 0/0
  4825 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4826 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4827 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4828 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4829 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4830 ;;Total ram usage:        2 bytes
  4831 ;; Hardware stack levels used:    1
  4832 ;; Hardware stack levels required when called:    3
  4833 ;; This function calls:
  4834 ;;		Nothing
  4835 ;; This function is called by:
  4836 ;;		_spi_init
  4837 ;; This function uses a non-reentrant model
  4838 ;;
  4839                           
  4840                           
  4841                           ;psect for function _spi1_init
  4842  0577                     _spi1_init:	
  4843                           
  4844                           ;spiControl.c: 34: unsigned char dummy;
  4845                           ;spiControl.c: 35: SSP1CON3bits.PCIE = 0;
  4846                           
  4847                           ;incstack = 0
  4848                           ; Regs used in _spi1_init: [wreg+status,2+status,0]
  4849  0577  0024               	movlb	4	; select bank4
  4850  0578  1317               	bcf	23,6	;volatile
  4851                           
  4852                           ;spiControl.c: 36: RC2PPS = 0b11001;
  4853  0579  3019               	movlw	25
  4854  057A  003D               	movlb	29	; select bank29
  4855  057B  00A2               	movwf	34	;volatile
  4856                           
  4857                           ;spiControl.c: 37: SSP1SSPPSbits.SSP1SSPPS = 0b10110;
  4858  057C  003C               	movlb	28	; select bank28
  4859  057D  0822               	movf	34,w	;volatile
  4860  057E  39E0               	andlw	-32
  4861  057F  3816               	iorlw	22
  4862  0580  00A2               	movwf	34	;volatile
  4863                           
  4864                           ;spiControl.c: 38: SSP1CON1bits.SSPOV = 1;
  4865  0581  0024               	movlb	4	; select bank4
  4866  0582  1715               	bsf	21,6	;volatile
  4867                           
  4868                           ;spiControl.c: 39: SSP1CON1bits.SSPEN = 1;
  4869  0583  1695               	bsf	21,5	;volatile
  4870                           
  4871                           ;spiControl.c: 40: SSP1CON1bits.SSPM = 0b0100;
  4872  0584  0815               	movf	21,w	;volatile
  4873  0585  39F0               	andlw	-16
  4874  0586  3804               	iorlw	4
  4875  0587  0095               	movwf	21	;volatile
  4876                           
  4877                           ;spiControl.c: 41: SSP1CON3bits.BOEN = 1;
  4878  0588  1617               	bsf	23,4	;volatile
  4879                           
  4880                           ;spiControl.c: 42: SSP1STATbits.SMP = 0;
  4881  0589  1394               	bcf	20,7	;volatile
  4882                           
  4883                           ;spiControl.c: 43: SSP1STATbits.CKE = 0;
  4884  058A  1314               	bcf	20,6	;volatile
  4885                           
  4886                           ;spiControl.c: 44: SSP1CON1bits.CKP = 0;
  4887  058B  1215               	bcf	21,4	;volatile
  4888                           
  4889                           ;spiControl.c: 45: PIE1bits.SSP1IE = 1;
  4890  058C  0021               	movlb	1	; select bank1
  4891  058D  1591               	bsf	17,3	;volatile
  4892                           
  4893                           ;spiControl.c: 46: PIR1bits.SSP1IF = 0;
  4894  058E  0020               	movlb	0	; select bank0
  4895  058F  1191               	bcf	17,3	;volatile
  4896                           
  4897                           ;spiControl.c: 47: dummy = SSP1BUF;
  4898  0590  0024               	movlb	4	; select bank4
  4899  0591  0811               	movf	17,w	;volatile
  4900  0592  0020               	movlb	0	; select bank0
  4901  0593  00D2               	movwf	??_spi1_init
  4902  0594  0852               	movf	??_spi1_init,w
  4903  0595  00D3               	movwf	spi1_init@dummy
  4904  0596  0008               	return
  4905  0597                     __end_of_spi1_init:	
  4906                           
  4907                           	psect	text4
  4908  050F                     __ptext4:	
  4909 ;; *************** function _setSPI2sendData *****************
  4910 ;; Defined at:
  4911 ;;		line 106 in file "D:/programdata/16F18346_Link_IC.X/spiControl.c"
  4912 ;; Parameters:    Size  Location     Type
  4913 ;;		None
  4914 ;; Auto vars:     Size  Location     Type
  4915 ;;		None
  4916 ;; Return value:  Size  Location     Type
  4917 ;;                  1    wreg      void 
  4918 ;; Registers used:
  4919 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4920 ;; Tracked objects:
  4921 ;;		On entry : 0/0
  4922 ;;		On exit  : 0/0
  4923 ;;		Unchanged: 0/0
  4924 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4925 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4926 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4927 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4928 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4929 ;;Total ram usage:        4 bytes
  4930 ;; Hardware stack levels used:    1
  4931 ;; Hardware stack levels required when called:    3
  4932 ;; This function calls:
  4933 ;;		Nothing
  4934 ;; This function is called by:
  4935 ;;		_main
  4936 ;; This function uses a non-reentrant model
  4937 ;;
  4938                           
  4939                           
  4940                           ;psect for function _setSPI2sendData
  4941  050F                     _setSPI2sendData:	
  4942                           
  4943                           ;spiControl.c: 107: if(linkInfo.endpoint == 0){
  4944                           
  4945                           ;incstack = 0
  4946                           ; Regs used in _setSPI2sendData: [wreg+fsr1l+fsr1h+status,2+status,0]
  4947  050F  0020               	movlb	0	; select bank0
  4948  0510  0835               	movf	_linkInfo+5,w
  4949  0511  1D03               	btfss	3,2
  4950  0512  2D17               	goto	l2882
  4951                           
  4952                           ;spiControl.c: 108: SSP2BUF = spi2_Send_data;
  4953  0513  0851               	movf	_spi2_Send_data,w
  4954  0514  0024               	movlb	4	; select bank4
  4955  0515  0099               	movwf	25	;volatile
  4956                           
  4957                           ;spiControl.c: 109: }else{
  4958  0516  0008               	return
  4959  0517                     l2882:	
  4960                           
  4961                           ;spiControl.c: 110: spi2_buffer_data[count2] = spi2_Send_data;
  4962  0517  30F0               	movlw	240
  4963  0518  0020               	movlb	0	; select bank0
  4964  0519  00D2               	movwf	??_setSPI2sendData
  4965  051A  3025               	movlw	37
  4966  051B  00D3               	movwf	??_setSPI2sendData+1
  4967  051C  0848               	movf	_count2,w
  4968  051D  0752               	addwf	??_setSPI2sendData,w
  4969  051E  00D4               	movwf	??_setSPI2sendData+2
  4970  051F  0849               	movf	_count2+1,w
  4971  0520  3D53               	addwfc	??_setSPI2sendData+1,w
  4972  0521  00D5               	movwf	??_setSPI2sendData+3
  4973  0522  0854               	movf	??_setSPI2sendData+2,w
  4974  0523  0086               	movwf	6
  4975  0524  0855               	movf	??_setSPI2sendData+3,w
  4976  0525  0087               	movwf	7
  4977  0526  0851               	movf	_spi2_Send_data,w
  4978  0527  0081               	movwf	1
  4979                           
  4980                           ;spiControl.c: 111: count2++;
  4981  0528  3001               	movlw	1
  4982  0529  07C8               	addwf	_count2,f
  4983  052A  3000               	movlw	0
  4984  052B  3DC9               	addwfc	_count2+1,f
  4985                           
  4986                           ;spiControl.c: 112: if(count2 == 256){
  4987  052C  0349               	decf	_count2+1,w
  4988  052D  0448               	iorwf	_count2,w
  4989  052E  1D03               	btfss	3,2
  4990  052F  0008               	return
  4991                           
  4992                           ;spiControl.c: 113: count2 = 0;
  4993  0530  01C8               	clrf	_count2
  4994  0531  01C9               	clrf	_count2+1
  4995  0532  0008               	return
  4996  0533                     __end_of_setSPI2sendData:	
  4997                           
  4998                           	psect	text5
  4999  041B                     __ptext5:	
  5000 ;; *************** function _setComunicateMode *****************
  5001 ;; Defined at:
  5002 ;;		line 38 in file "D:/programdata/16F18346_Link_IC.X/comu_type.c"
  5003 ;; Parameters:    Size  Location     Type
  5004 ;;  m_type          1    wreg     unsigned char 
  5005 ;; Auto vars:     Size  Location     Type
  5006 ;;  m_type          1   23[BANK0 ] unsigned char 
  5007 ;;  i               2   24[BANK0 ] int 
  5008 ;; Return value:  Size  Location     Type
  5009 ;;		None               void
  5010 ;; Registers used:
  5011 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5012 ;; Tracked objects:
  5013 ;;		On entry : 0/0
  5014 ;;		On exit  : 0/0
  5015 ;;		Unchanged: 0/0
  5016 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5017 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5018 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5019 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5020 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5021 ;;Total ram usage:        4 bytes
  5022 ;; Hardware stack levels used:    1
  5023 ;; Hardware stack levels required when called:    6
  5024 ;; This function calls:
  5025 ;;		_Calibrate_download
  5026 ;;		_readCargo
  5027 ;; This function is called by:
  5028 ;;		_main
  5029 ;; This function uses a non-reentrant model
  5030 ;;
  5031                           
  5032                           
  5033                           ;psect for function _setComunicateMode
  5034  041B                     _setComunicateMode:	
  5035                           
  5036                           ;incstack = 0
  5037                           ; Regs used in _setComunicateMode: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5038                           ;setComunicateMode@m_type stored from wreg
  5039  041B  0020               	movlb	0	; select bank0
  5040  041C  00E9               	movwf	setComunicateMode@m_type
  5041                           
  5042                           ;comu_type.c: 39: for(int i = 0; i < 18; i++){
  5043  041D  01EA               	clrf	setComunicateMode@i
  5044  041E  01EB               	clrf	setComunicateMode@i+1
  5045  041F                     L1:	
  5046  041F  086B               	movf	setComunicateMode@i+1,w
  5047  0420  3A80               	xorlw	128
  5048  0421  00E8               	movwf	??_setComunicateMode
  5049  0422  3080               	movlw	128
  5050  0423  0268               	subwf	??_setComunicateMode,w
  5051  0424  1D03               	skipz
  5052  0425  2C28               	goto	u1275
  5053  0426  3012               	movlw	18
  5054  0427  026A               	subwf	setComunicateMode@i,w
  5055  0428                     u1275:	
  5056  0428  1803               	btfsc	3,0
  5057  0429  0008               	return
  5058                           
  5059                           ;comu_type.c: 40: if(comu_types[i] == m_type){
  5060  042A  0020               	movlb	0	; select bank0
  5061  042B  086A               	movf	setComunicateMode@i,w
  5062  042C  3EB2               	addlw	(low (_comu_types| 0))& (0+255)
  5063  042D  0086               	movwf	6
  5064  042E  0187               	clrf	7
  5065  042F  0801               	movf	1,w
  5066  0430  0669               	xorwf	setComunicateMode@m_type,w
  5067  0431  1903               	btfsc	3,2
  5068  0432  2C3C               	goto	l2844
  5069  0433  2C50               	goto	l2846
  5070  0434                     l2834:	
  5071                           ;comu_type.c: 42: case 0:
  5072                           
  5073                           ;comu_type.c: 41: switch(i){
  5074                           
  5075                           
  5076                           ;comu_type.c: 43: Calibrate_download(spi1_Read_data);
  5077  0434  0879               	movf	_spi1_Read_data,w
  5078  0435  3181  2188         	fcall	_Calibrate_download
  5079                           
  5080                           ;comu_type.c: 44: return 1;
  5081                           ;	Return value of _setComunicateMode is never used
  5082  0437  0008               	return
  5083  0438                     l2838:	
  5084                           ;comu_type.c: 45: case 1:
  5085                           
  5086                           
  5087                           ;comu_type.c: 46: readCargo(spi1_Read_data);
  5088  0438  0879               	movf	_spi1_Read_data,w
  5089  0439  3180  2092         	fcall	_readCargo
  5090                           
  5091                           ;comu_type.c: 51: return 1;
  5092                           ;	Return value of _setComunicateMode is never used
  5093                           
  5094                           ;comu_type.c: 50: case 3:
  5095                           
  5096                           ;comu_type.c: 49: return 1;
  5097                           ;	Return value of _setComunicateMode is never used
  5098                           
  5099                           ;comu_type.c: 48: case 2:
  5100                           
  5101                           ;comu_type.c: 47: return 1;
  5102                           ;	Return value of _setComunicateMode is never used
  5103  043B  0008               	return
  5104  043C                     l2844:	
  5105                           ;comu_type.c: 52: }
  5106                           
  5107                           
  5108                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5109                           ; Switch size 1, requested type "space"
  5110                           ; Number of cases is 1, Range of values is 0 to 0
  5111                           ; switch strategies available:
  5112                           ; Name         Instructions Cycles
  5113                           ; simple_byte            4     3 (average)
  5114                           ; direct_byte            8     6 (fixed)
  5115                           ; jumptable            260     6 (fixed)
  5116                           ;	Chosen strategy is simple_byte
  5117  043C  0020               	movlb	0	; select bank0
  5118  043D  086B               	movf	setComunicateMode@i+1,w
  5119  043E  3A00               	xorlw	0	; case 0
  5120  043F  1903               	skipnz
  5121  0440  2C42               	goto	l3040
  5122  0441  2C50               	goto	l2846
  5123  0442                     l3040:	
  5124                           
  5125                           ; Switch size 1, requested type "space"
  5126                           ; Number of cases is 4, Range of values is 0 to 3
  5127                           ; switch strategies available:
  5128                           ; Name         Instructions Cycles
  5129                           ; simple_byte           13     7 (average)
  5130                           ; direct_byte           14     6 (fixed)
  5131                           ; jumptable            260     6 (fixed)
  5132                           ;	Chosen strategy is simple_byte
  5133  0442  086A               	movf	setComunicateMode@i,w
  5134  0443  3A00               	xorlw	0	; case 0
  5135  0444  1903               	skipnz
  5136  0445  2C34               	goto	l2834
  5137  0446  3A01               	xorlw	1	; case 1
  5138  0447  1903               	skipnz
  5139  0448  2C38               	goto	l2838
  5140  0449  3A03               	xorlw	3	; case 2
  5141  044A  1903               	skipnz
  5142  044B  2C56               	goto	l448
  5143  044C  3A01               	xorlw	1	; case 3
  5144  044D  1903               	skipnz
  5145  044E  2C56               	goto	l448
  5146  044F  2C50               	goto	l2846
  5147  0450                     l2846:	
  5148  0450  3001               	movlw	1
  5149  0451  0020               	movlb	0	; select bank0
  5150  0452  07EA               	addwf	setComunicateMode@i,f
  5151  0453  3000               	movlw	0
  5152  0454  3DEB               	addwfc	setComunicateMode@i+1,f
  5153  0455  2C1F               	goto	L1
  5154  0456                     l448:	
  5155                           ;comu_type.c: 53: }
  5156                           ;comu_type.c: 54: }
  5157                           ;comu_type.c: 55: return 0;
  5158                           ;	Return value of _setComunicateMode is never used
  5159                           
  5160  0456  0008               	return
  5161  0457                     __end_of_setComunicateMode:	
  5162                           
  5163                           	psect	text6
  5164  0092                     __ptext6:	
  5165 ;; *************** function _readCargo *****************
  5166 ;; Defined at:
  5167 ;;		line 46 in file "D:/programdata/16F18346_Link_IC.X/normal_mode.c"
  5168 ;; Parameters:    Size  Location     Type
  5169 ;;  spi1_Read_da    1    wreg     unsigned char 
  5170 ;; Auto vars:     Size  Location     Type
  5171 ;;  spi1_Read_da    1    6[BANK1 ] unsigned char 
  5172 ;;  buflong         4    0[BANK1 ] unsigned long 
  5173 ;;  bufint          2    4[BANK1 ] unsigned int 
  5174 ;; Return value:  Size  Location     Type
  5175 ;;                  1    wreg      void 
  5176 ;; Registers used:
  5177 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5178 ;; Tracked objects:
  5179 ;;		On entry : 0/0
  5180 ;;		On exit  : 0/0
  5181 ;;		Unchanged: 0/0
  5182 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5183 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5184 ;;      Locals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5185 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5186 ;;      Totals:         0       5       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5187 ;;Total ram usage:       12 bytes
  5188 ;; Hardware stack levels used:    1
  5189 ;; Hardware stack levels required when called:    4
  5190 ;; This function calls:
  5191 ;;		_clutchaction
  5192 ;;		_getCargoData
  5193 ;;		_restartCargo
  5194 ;; This function is called by:
  5195 ;;		_setComunicateMode
  5196 ;; This function uses a non-reentrant model
  5197 ;;
  5198                           
  5199                           
  5200                           ;psect for function _readCargo
  5201  0092                     _readCargo:	
  5202                           
  5203                           ;incstack = 0
  5204                           ; Regs used in _readCargo: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5205                           ;readCargo@spi1_Read_data stored from wreg
  5206  0092  0021               	movlb	1	; select bank1
  5207  0093  00ED               	movwf	readCargo@spi1_Read_data^(0+128)
  5208                           
  5209                           ;normal_mode.c: 47: unsigned int bufint = spi1_Read_data;
  5210  0094  086D               	movf	readCargo@spi1_Read_data^(0+128),w
  5211  0095  0020               	movlb	0	; select bank0
  5212  0096  00E3               	movwf	??_readCargo
  5213  0097  01E4               	clrf	??_readCargo+1
  5214  0098  0863               	movf	??_readCargo,w
  5215  0099  0021               	movlb	1	; select bank1
  5216  009A  00EB               	movwf	readCargo@bufint^(0+128)
  5217  009B  0020               	movlb	0	; select bank0
  5218  009C  0864               	movf	??_readCargo+1,w
  5219  009D  0021               	movlb	1	; select bank1
  5220  009E  00EC               	movwf	(readCargo@bufint+1)^(0+128)
  5221                           
  5222                           ;normal_mode.c: 48: unsigned long buflong = spi1_Read_data;
  5223  009F  086D               	movf	readCargo@spi1_Read_data^(0+128),w
  5224  00A0  0020               	movlb	0	; select bank0
  5225  00A1  00E3               	movwf	??_readCargo
  5226  00A2  01E4               	clrf	??_readCargo+1
  5227  00A3  01E5               	clrf	??_readCargo+2
  5228  00A4  01E6               	clrf	??_readCargo+3
  5229  00A5  0866               	movf	??_readCargo+3,w
  5230  00A6  0021               	movlb	1	; select bank1
  5231  00A7  00EA               	movwf	(readCargo@buflong+3)^(0+128)
  5232  00A8  0020               	movlb	0	; select bank0
  5233  00A9  0865               	movf	??_readCargo+2,w
  5234  00AA  0021               	movlb	1	; select bank1
  5235  00AB  00E9               	movwf	(readCargo@buflong+2)^(0+128)
  5236  00AC  0020               	movlb	0	; select bank0
  5237  00AD  0864               	movf	??_readCargo+1,w
  5238  00AE  0021               	movlb	1	; select bank1
  5239  00AF  00E8               	movwf	(readCargo@buflong+1)^(0+128)
  5240  00B0  0020               	movlb	0	; select bank0
  5241  00B1  0863               	movf	??_readCargo,w
  5242  00B2  0021               	movlb	1	; select bank1
  5243  00B3  00E7               	movwf	readCargo@buflong^(0+128)
  5244                           
  5245                           ;normal_mode.c: 49: cargoData = getCargoData();
  5246  00B4  3186  260A  3180   	fcall	_getCargoData
  5247  00B7  0020               	movlb	0	; select bank0
  5248  00B8  3052               	movlw	low ?_getCargoData
  5249  00B9  0086               	movwf	6
  5250  00BA  3000               	movlw	high ?_getCargoData
  5251  00BB  0087               	movwf	7
  5252  00BC  3020               	movlw	low _cargoData
  5253  00BD  0084               	movwf	4
  5254  00BE  3000               	movlw	high _cargoData
  5255  00BF  0085               	movwf	5
  5256  00C0  3010               	movlw	16
  5257  00C1  00E3               	movwf	??_readCargo
  5258  00C2                     u1170:	
  5259  00C2  0016               	moviw fsr1++
  5260  00C3  001A               	movwi fsr0++
  5261  00C4  0BE3               	decfsz	??_readCargo,f
  5262  00C5  28C2               	goto	u1170
  5263                           
  5264                           ;normal_mode.c: 50: if(isMycargo){
  5265  00C6  18F8               	btfsc	_isMycargo/(0+8),_isMycargo& (0+7)
  5266  00C7  2958               	goto	l2698
  5267  00C8  2967               	goto	l2700
  5268  00C9                     l485:	
  5269                           ;normal_mode.c: 52: case 0:
  5270                           
  5271                           ;normal_mode.c: 51: switch(countabuf){
  5272                           
  5273                           
  5274                           ;normal_mode.c: 53: LATAbits.LATA0 = 1;
  5275  00C9  0022               	movlb	2	; select bank2
  5276  00CA  140C               	bsf	12,0	;volatile
  5277                           
  5278                           ;normal_mode.c: 54: cargoLengthnuf = (bufint << 8);
  5279  00CB  0021               	movlb	1	; select bank1
  5280  00CC  086B               	movf	readCargo@bufint^(0+128),w
  5281  00CD  0020               	movlb	0	; select bank0
  5282  00CE  00E4               	movwf	??_readCargo+1
  5283  00CF  01E3               	clrf	??_readCargo
  5284  00D0  0863               	movf	??_readCargo,w
  5285  00D1  00B6               	movwf	_cargoLengthnuf
  5286  00D2  0864               	movf	??_readCargo+1,w
  5287  00D3  00B7               	movwf	_cargoLengthnuf+1
  5288                           
  5289                           ;normal_mode.c: 55: break;
  5290  00D4  2967               	goto	l2700
  5291  00D5                     l487:	
  5292                           ;normal_mode.c: 56: case 1:
  5293                           
  5294                           
  5295                           ;normal_mode.c: 57: LATAbits.LATA0 = 0;
  5296  00D5  0022               	movlb	2	; select bank2
  5297  00D6  100C               	bcf	12,0	;volatile
  5298                           
  5299                           ;normal_mode.c: 58: cargoData.cargoLength = (cargoLengthnuf | bufint);
  5300  00D7  0021               	movlb	1	; select bank1
  5301  00D8  086B               	movf	readCargo@bufint^(0+128),w
  5302  00D9  0020               	movlb	0	; select bank0
  5303  00DA  0436               	iorwf	_cargoLengthnuf,w
  5304  00DB  00A0               	movwf	_cargoData
  5305  00DC  0021               	movlb	1	; select bank1
  5306  00DD  086C               	movf	(readCargo@bufint+1)^(0+128),w
  5307  00DE  0020               	movlb	0	; select bank0
  5308  00DF  0437               	iorwf	_cargoLengthnuf+1,w
  5309  00E0  00A1               	movwf	_cargoData+1
  5310                           
  5311                           ;normal_mode.c: 59: break;
  5312  00E1  2967               	goto	l2700
  5313  00E2                     l2660:	
  5314                           ;normal_mode.c: 60: case 2:
  5315                           
  5316                           
  5317                           ;normal_mode.c: 61: cargoData.command = spi1_Read_data;
  5318  00E2  0021               	movlb	1	; select bank1
  5319  00E3  086D               	movf	readCargo@spi1_Read_data^(0+128),w
  5320  00E4  0020               	movlb	0	; select bank0
  5321  00E5  00E3               	movwf	??_readCargo
  5322  00E6  0863               	movf	??_readCargo,w
  5323  00E7  00A2               	movwf	_cargoData+2
  5324                           
  5325                           ;normal_mode.c: 62: break;
  5326  00E8  2967               	goto	l2700
  5327  00E9                     l2662:	
  5328                           ;normal_mode.c: 63: case 3:
  5329                           
  5330                           
  5331                           ;normal_mode.c: 64: cargoData.index = spi1_Read_data;
  5332  00E9  0021               	movlb	1	; select bank1
  5333  00EA  086D               	movf	readCargo@spi1_Read_data^(0+128),w
  5334  00EB  0020               	movlb	0	; select bank0
  5335  00EC  00E3               	movwf	??_readCargo
  5336  00ED  0863               	movf	??_readCargo,w
  5337  00EE  00A3               	movwf	_cargoData+3
  5338                           
  5339                           ;normal_mode.c: 65: break;
  5340  00EF  2967               	goto	l2700
  5341  00F0                     l2664:	
  5342                           ;normal_mode.c: 66: case 4:
  5343                           
  5344                           
  5345                           ;normal_mode.c: 67: cargoData.address = spi1_Read_data;
  5346  00F0  0021               	movlb	1	; select bank1
  5347  00F1  086D               	movf	readCargo@spi1_Read_data^(0+128),w
  5348  00F2  0020               	movlb	0	; select bank0
  5349  00F3  00E3               	movwf	??_readCargo
  5350  00F4  0863               	movf	??_readCargo,w
  5351  00F5  00A4               	movwf	_cargoData+4
  5352                           
  5353                           ;normal_mode.c: 68: if(cargoData.address != linkInfo.My_address){
  5354  00F6  0824               	movf	_cargoData+4,w
  5355  00F7  0630               	xorwf	_linkInfo,w
  5356  00F8  1903               	skipnz
  5357  00F9  2967               	goto	l2700
  5358                           
  5359                           ;normal_mode.c: 69: restartCargo();
  5360  00FA  3185  25F9  3180   	fcall	_restartCargo
  5361                           
  5362                           ;normal_mode.c: 70: isMycargo = 0;
  5363  00FD  10F8               	bcf	_isMycargo/(0+8),_isMycargo& (0+7)
  5364                           
  5365                           ;normal_mode.c: 72: }
  5366                           ;normal_mode.c: 73: break;
  5367                           
  5368                           ;normal_mode.c: 71: }else{
  5369  00FE  2967               	goto	l2700
  5370  00FF                     l2670:	
  5371                           ;normal_mode.c: 74: case 5:
  5372                           
  5373                           
  5374                           ;normal_mode.c: 76: spi2_Send_data = (cargoData.linkAngleTo >> 8 & 0x00ff);
  5375  00FF  0020               	movlb	0	; select bank0
  5376  0100  0826               	movf	_cargoData+6,w
  5377  0101  2954               	goto	L11
  5378  0102                     l2672:	
  5379                           ;normal_mode.c: 78: case 6:
  5380                           
  5381                           ;normal_mode.c: 77: break;
  5382                           
  5383                           
  5384                           ;normal_mode.c: 79: spi2_Send_data = (cargoData.linkAngleTo & 0x00ff);
  5385  0102  0825               	movf	_cargoData+5,w
  5386  0103  2954               	goto	L11
  5387  0104                     l2674:	
  5388                           ;normal_mode.c: 81: case 7:
  5389                           
  5390                           ;normal_mode.c: 80: break;
  5391                           
  5392                           
  5393                           ;normal_mode.c: 82: spi2_Send_data = (cargoData.linkAngleBack >> 8 & 0x00ff);
  5394  0104  0828               	movf	_cargoData+8,w
  5395  0105  2954               	goto	L11
  5396  0106                     l2676:	
  5397                           ;normal_mode.c: 84: case 8:
  5398                           
  5399                           ;normal_mode.c: 83: break;
  5400                           
  5401                           
  5402                           ;normal_mode.c: 85: spi2_Send_data = (cargoData.linkAngleBack & 0x00ff);
  5403  0106  0827               	movf	_cargoData+7,w
  5404  0107  2954               	goto	L11
  5405  0108                     l2678:	
  5406                           ;normal_mode.c: 87: case 9:
  5407                           
  5408                           ;normal_mode.c: 86: break;
  5409                           
  5410                           
  5411                           ;normal_mode.c: 88: spi2_Send_data = (cargoData.passedTime >> 8 & 0x00ff);
  5412  0108  082A               	movf	_cargoData+10,w
  5413  0109  2954               	goto	L11
  5414  010A                     l2680:	
  5415                           ;normal_mode.c: 90: case 10:
  5416                           
  5417                           ;normal_mode.c: 89: break;
  5418                           
  5419                           
  5420                           ;normal_mode.c: 91: spi2_Send_data = (cargoData.passedTime & 0x00ff);
  5421  010A  0829               	movf	_cargoData+9,w
  5422  010B  2954               	goto	L11
  5423  010C                     l2682:	
  5424                           ;normal_mode.c: 93: case 11:
  5425                           
  5426                           ;normal_mode.c: 92: break;
  5427                           
  5428                           
  5429                           ;normal_mode.c: 94: cargoData.clutchMode = spi1_Read_data;
  5430  010C  0021               	movlb	1	; select bank1
  5431  010D  086D               	movf	readCargo@spi1_Read_data^(0+128),w
  5432  010E  0020               	movlb	0	; select bank0
  5433  010F  00E3               	movwf	??_readCargo
  5434  0110  0863               	movf	??_readCargo,w
  5435  0111  00AB               	movwf	_cargoData+11
  5436                           
  5437                           ;normal_mode.c: 95: clutchaction(cargoData.clutchMode);
  5438  0112  082B               	movf	_cargoData+11,w
  5439  0113  3186  2659  3180   	fcall	_clutchaction
  5440                           
  5441                           ;normal_mode.c: 96: break;
  5442  0116  2967               	goto	l2700
  5443  0117                     l2686:	
  5444                           ;normal_mode.c: 97: case 12:
  5445                           
  5446                           
  5447                           ;normal_mode.c: 98: cargoData.WorkingCount++;
  5448  0117  3001               	movlw	1
  5449  0118  0020               	movlb	0	; select bank0
  5450  0119  07AC               	addwf	_cargoData+12,f
  5451  011A  3000               	movlw	0
  5452  011B  3DAD               	addwfc	_cargoData+13,f
  5453  011C  3000               	movlw	0
  5454  011D  3DAE               	addwfc	_cargoData+14,f
  5455  011E  3000               	movlw	0
  5456  011F  3DAF               	addwfc	_cargoData+15,f
  5457                           
  5458                           ;normal_mode.c: 99: spi2_Send_data = (cargoData.WorkingCount >> 24 & 0x000000ff);
  5459  0120  082C               	movf	_cargoData+12,w
  5460  0121  00E3               	movwf	??_readCargo
  5461  0122  082D               	movf	_cargoData+13,w
  5462  0123  00E4               	movwf	??_readCargo+1
  5463  0124  082E               	movf	_cargoData+14,w
  5464  0125  00E5               	movwf	??_readCargo+2
  5465  0126  082F               	movf	_cargoData+15,w
  5466  0127  00E6               	movwf	??_readCargo+3
  5467  0128  3018               	movlw	24
  5468  0129                     u1205:	
  5469  0129  36E6               	lsrf	??_readCargo+3,f
  5470  012A  0CE5               	rrf	??_readCargo+2,f
  5471  012B  0CE4               	rrf	??_readCargo+1,f
  5472  012C  0CE3               	rrf	??_readCargo,f
  5473  012D  0B89               	decfsz	9,f
  5474  012E  2929               	goto	u1205
  5475  012F  294F               	goto	L13
  5476  0130                     l2690:	
  5477                           ;normal_mode.c: 101: case 13:
  5478                           
  5479                           ;normal_mode.c: 100: break;
  5480                           
  5481                           
  5482                           ;normal_mode.c: 102: spi2_Send_data = (cargoData.WorkingCount >> 16 & 0x000000ff);
  5483  0130  082C               	movf	_cargoData+12,w
  5484  0131  00E3               	movwf	??_readCargo
  5485  0132  082D               	movf	_cargoData+13,w
  5486  0133  00E4               	movwf	??_readCargo+1
  5487  0134  082E               	movf	_cargoData+14,w
  5488  0135  00E5               	movwf	??_readCargo+2
  5489  0136  082F               	movf	_cargoData+15,w
  5490  0137  00E6               	movwf	??_readCargo+3
  5491  0138  3010               	movlw	16
  5492  0139                     u1215:	
  5493  0139  36E6               	lsrf	??_readCargo+3,f
  5494  013A  0CE5               	rrf	??_readCargo+2,f
  5495  013B  0CE4               	rrf	??_readCargo+1,f
  5496  013C  0CE3               	rrf	??_readCargo,f
  5497  013D  0B89               	decfsz	9,f
  5498  013E  2939               	goto	u1215
  5499  013F  294F               	goto	L13
  5500  0140                     l2692:	
  5501                           ;normal_mode.c: 104: case 14:
  5502                           
  5503                           ;normal_mode.c: 103: break;
  5504                           
  5505                           
  5506                           ;normal_mode.c: 105: spi2_Send_data = (cargoData.WorkingCount >> 8 & 0x000000ff);
  5507  0140  082C               	movf	_cargoData+12,w
  5508  0141  00E3               	movwf	??_readCargo
  5509  0142  082D               	movf	_cargoData+13,w
  5510  0143  00E4               	movwf	??_readCargo+1
  5511  0144  082E               	movf	_cargoData+14,w
  5512  0145  00E5               	movwf	??_readCargo+2
  5513  0146  082F               	movf	_cargoData+15,w
  5514  0147  00E6               	movwf	??_readCargo+3
  5515  0148  3008               	movlw	8
  5516  0149                     u1225:	
  5517  0149  36E6               	lsrf	??_readCargo+3,f
  5518  014A  0CE5               	rrf	??_readCargo+2,f
  5519  014B  0CE4               	rrf	??_readCargo+1,f
  5520  014C  0CE3               	rrf	??_readCargo,f
  5521  014D  0B89               	decfsz	9,f
  5522  014E  2949               	goto	u1225
  5523  014F                     L13:	
  5524  014F  0863               	movf	??_readCargo,w
  5525  0150  00E7               	movwf	??_readCargo+4
  5526  0151  0867               	movf	??_readCargo+4,w
  5527  0152  2956               	goto	L10
  5528  0153                     l2694:	
  5529                           ;normal_mode.c: 107: case 15:
  5530                           
  5531                           ;normal_mode.c: 106: break;
  5532                           
  5533                           
  5534                           ;normal_mode.c: 108: spi2_Send_data = (cargoData.WorkingCount & 0x000000ff);
  5535  0153  082C               	movf	_cargoData+12,w
  5536  0154                     L11:	
  5537  0154  00E3               	movwf	??_readCargo
  5538  0155  0863               	movf	??_readCargo,w
  5539  0156                     L10:	
  5540  0156  00D1               	movwf	_spi2_Send_data
  5541                           
  5542                           ;normal_mode.c: 110: }
  5543                           
  5544                           ;normal_mode.c: 109: break;
  5545  0157  2967               	goto	l2700
  5546  0158                     l2698:	
  5547                           
  5548                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5549                           ; Switch size 1, requested type "space"
  5550                           ; Number of cases is 1, Range of values is 0 to 0
  5551                           ; switch strategies available:
  5552                           ; Name         Instructions Cycles
  5553                           ; simple_byte            4     3 (average)
  5554                           ; direct_byte            8     6 (fixed)
  5555                           ; jumptable            260     6 (fixed)
  5556                           ;	Chosen strategy is simple_byte
  5557  0158  0845               	movf	_countabuf+1,w
  5558  0159  3A00               	xorlw	0	; case 0
  5559  015A  1903               	skipnz
  5560  015B  295D               	goto	l3042
  5561  015C  2967               	goto	l2700
  5562  015D                     l3042:	
  5563                           
  5564                           ; Switch size 1, requested type "space"
  5565                           ; Number of cases is 16, Range of values is 0 to 15
  5566                           ; switch strategies available:
  5567                           ; Name         Instructions Cycles
  5568                           ; direct_byte           38     6 (fixed)
  5569                           ; simple_byte           49    25 (average)
  5570                           ; jumptable            260     6 (fixed)
  5571                           ;	Chosen strategy is direct_byte
  5572  015D  0844               	movf	_countabuf,w
  5573  015E  0084               	movwf	4
  5574  015F  3010               	movlw	16
  5575  0160  0204               	subwf	4,w
  5576  0161  1803               	skipnc
  5577  0162  2967               	goto	l2700
  5578  0163  3185               	movlp	high S3044
  5579  0164  3504               	lslf	4,w
  5580  0165  3E97               	addlw	low S3044
  5581  0166  0082               	movwf	2
  5582  0167                     l2700:	
  5583                           
  5584                           ;normal_mode.c: 111: }
  5585                           ;normal_mode.c: 113: countabuf++;
  5586  0167  3001               	movlw	1
  5587  0168  0020               	movlb	0	; select bank0
  5588  0169  07C4               	addwf	_countabuf,f
  5589  016A  3000               	movlw	0
  5590  016B  3DC5               	addwfc	_countabuf+1,f
  5591                           
  5592                           ;normal_mode.c: 114: if(cargoData.cargoLength <= countabuf){
  5593  016C  0821               	movf	_cargoData+1,w
  5594  016D  0245               	subwf	_countabuf+1,w
  5595  016E  1D03               	skipz
  5596  016F  2972               	goto	u1235
  5597  0170  0820               	movf	_cargoData,w
  5598  0171  0244               	subwf	_countabuf,w
  5599  0172                     u1235:	
  5600  0172  1C03               	skipc
  5601  0173  0008               	return
  5602                           
  5603                           ;normal_mode.c: 115: cargoLengthnuf = 0;
  5604  0174  01B6               	clrf	_cargoLengthnuf
  5605  0175  01B7               	clrf	_cargoLengthnuf+1
  5606                           
  5607                           ;normal_mode.c: 116: cargoWorkingCount = 0;
  5608  0176  3000               	movlw	0
  5609  0177  0021               	movlb	1	; select bank1
  5610  0178  00E2               	movwf	(_cargoWorkingCount+3)^(0+128)
  5611  0179  3000               	movlw	0
  5612  017A  00E1               	movwf	(_cargoWorkingCount+2)^(0+128)
  5613  017B  3000               	movlw	0
  5614  017C  00E0               	movwf	(_cargoWorkingCount+1)^(0+128)
  5615  017D  3000               	movlw	0
  5616  017E  00DF               	movwf	_cargoWorkingCount^(0+128)
  5617                           
  5618                           ;normal_mode.c: 117: cargoData.cargoLength = 0xFFFF;
  5619  017F  30FF               	movlw	255
  5620  0180  0020               	movlb	0	; select bank0
  5621  0181  00A0               	movwf	_cargoData
  5622  0182  30FF               	movlw	255
  5623  0183  00A1               	movwf	_cargoData+1
  5624                           
  5625                           ;normal_mode.c: 118: countabuf = 0;
  5626  0184  01C4               	clrf	_countabuf
  5627  0185  01C5               	clrf	_countabuf+1
  5628                           
  5629                           ;normal_mode.c: 119: isMycargo = 1;
  5630  0186  14F8               	bsf	_isMycargo/(0+8),_isMycargo& (0+7)
  5631  0187  0008               	return
  5632  0188                     __end_of_readCargo:	
  5633                           
  5634                           	psect	swtext1
  5635  0597                     __pswtext1:	
  5636  0597                     S3044:	
  5637  0597  3180  28C9         	ljmp	l485
  5638  0599  3180  28D5         	ljmp	l487
  5639  059B  3180  28E2         	ljmp	l2660
  5640  059D  3180  28E9         	ljmp	l2662
  5641  059F  3180  28F0         	ljmp	l2664
  5642  05A1  3180  28FF         	ljmp	l2670
  5643  05A3  3181  2902         	ljmp	l2672
  5644  05A5  3181  2904         	ljmp	l2674
  5645  05A7  3181  2906         	ljmp	l2676
  5646  05A9  3181  2908         	ljmp	l2678
  5647  05AB  3181  290A         	ljmp	l2680
  5648  05AD  3181  290C         	ljmp	l2682
  5649  05AF  3181  2917         	ljmp	l2686
  5650  05B1  3181  2930         	ljmp	l2690
  5651  05B3  3181  2940         	ljmp	l2692
  5652  05B5  3181  2953         	ljmp	l2694
  5653                           
  5654                           	psect	text7
  5655  060A                     __ptext7:	
  5656 ;; *************** function _getCargoData *****************
  5657 ;; Defined at:
  5658 ;;		line 8 in file "struct.c"
  5659 ;; Parameters:    Size  Location     Type
  5660 ;;		None
  5661 ;; Auto vars:     Size  Location     Type
  5662 ;;		None
  5663 ;; Return value:  Size  Location     Type
  5664 ;;                  16    0[BANK0 ] struct .
  5665 ;; Registers used:
  5666 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  5667 ;; Tracked objects:
  5668 ;;		On entry : 0/0
  5669 ;;		On exit  : 0/0
  5670 ;;		Unchanged: 0/0
  5671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5672 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5673 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5674 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5675 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5676 ;;Total ram usage:       17 bytes
  5677 ;; Hardware stack levels used:    1
  5678 ;; Hardware stack levels required when called:    3
  5679 ;; This function calls:
  5680 ;;		Nothing
  5681 ;; This function is called by:
  5682 ;;		_readCargo
  5683 ;;		_setCargo_Angle
  5684 ;; This function uses a non-reentrant model
  5685 ;;
  5686                           
  5687                           
  5688                           ;psect for function _getCargoData
  5689  060A                     _getCargoData:	
  5690                           
  5691                           ;struct.c: 9: return cargoData;
  5692                           
  5693                           ;incstack = 0
  5694                           ; Regs used in _getCargoData: [wreg-fsr1h+status,2+status,0]
  5695  060A  3020               	movlw	low _cargoData
  5696  060B  0086               	movwf	6
  5697  060C  3000               	movlw	high _cargoData
  5698  060D  0087               	movwf	7
  5699  060E  3052               	movlw	low ?_getCargoData
  5700  060F  0084               	movwf	4
  5701  0610  3000               	movlw	high ?_getCargoData
  5702  0611  0085               	movwf	5
  5703  0612  3010               	movlw	16
  5704  0613  0020               	movlb	0	; select bank0
  5705  0614  00E2               	movwf	??_getCargoData
  5706  0615                     u1060:	
  5707  0615  0016               	moviw fsr1++
  5708  0616  001A               	movwi fsr0++
  5709  0617  0BE2               	decfsz	??_getCargoData,f
  5710  0618  2E15               	goto	u1060
  5711  0619  0008               	return
  5712  061A                     __end_of_getCargoData:	
  5713                           
  5714                           	psect	text8
  5715  0659                     __ptext8:	
  5716 ;; *************** function _clutchaction *****************
  5717 ;; Defined at:
  5718 ;;		line 68 in file "D:/programdata/16F18346_Link_IC.X/command.c"
  5719 ;; Parameters:    Size  Location     Type
  5720 ;;  comannd         1    wreg     unsigned char 
  5721 ;; Auto vars:     Size  Location     Type
  5722 ;;  comannd         1    0[BANK0 ] unsigned char 
  5723 ;; Return value:  Size  Location     Type
  5724 ;;		None               void
  5725 ;; Registers used:
  5726 ;;		wreg, status,2, status,0
  5727 ;; Tracked objects:
  5728 ;;		On entry : 0/0
  5729 ;;		On exit  : 0/0
  5730 ;;		Unchanged: 0/0
  5731 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5732 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5733 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5734 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5735 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5736 ;;Total ram usage:        1 bytes
  5737 ;; Hardware stack levels used:    1
  5738 ;; Hardware stack levels required when called:    3
  5739 ;; This function calls:
  5740 ;;		Nothing
  5741 ;; This function is called by:
  5742 ;;		_readCargo
  5743 ;; This function uses a non-reentrant model
  5744 ;;
  5745                           
  5746                           
  5747                           ;psect for function _clutchaction
  5748  0659                     _clutchaction:	
  5749                           
  5750                           ;incstack = 0
  5751                           ; Regs used in _clutchaction: [wreg+status,2+status,0]
  5752                           ;clutchaction@comannd stored from wreg
  5753  0659  0020               	movlb	0	; select bank0
  5754  065A  00D2               	movwf	clutchaction@comannd
  5755                           
  5756                           ;command.c: 69: if(comannd == 1){
  5757  065B  0352               	decf	clutchaction@comannd,w
  5758  065C  1D03               	btfss	3,2
  5759  065D  2E61               	goto	l341
  5760                           
  5761                           ;command.c: 70: LATAbits.LATA0 = 1;
  5762  065E  0022               	movlb	2	; select bank2
  5763  065F  140C               	bsf	12,0	;volatile
  5764                           
  5765                           ;command.c: 71: }else{
  5766  0660  0008               	return
  5767  0661                     l341:	
  5768                           
  5769                           ;command.c: 72: LATAbits.LATA0 = 0;
  5770  0661  0022               	movlb	2	; select bank2
  5771  0662  100C               	bcf	12,0	;volatile
  5772  0663  0008               	return
  5773  0664                     __end_of_clutchaction:	
  5774                           
  5775                           	psect	text9
  5776  0188                     __ptext9:	
  5777 ;; *************** function _Calibrate_download *****************
  5778 ;; Defined at:
  5779 ;;		line 73 in file "D:/programdata/16F18346_Link_IC.X/calibrate_mode.c"
  5780 ;; Parameters:    Size  Location     Type
  5781 ;;  spi_Read_dat    1    wreg     unsigned char 
  5782 ;; Auto vars:     Size  Location     Type
  5783 ;;  spi_Read_dat    1   19[BANK0 ] unsigned char 
  5784 ;;  buflong         4   12[BANK0 ] unsigned long 
  5785 ;;  bufint          2   17[BANK0 ] unsigned int 
  5786 ;;  buf             1   16[BANK0 ] unsigned char 
  5787 ;; Return value:  Size  Location     Type
  5788 ;;                  1    wreg      void 
  5789 ;; Registers used:
  5790 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5791 ;; Tracked objects:
  5792 ;;		On entry : 0/0
  5793 ;;		On exit  : 0/0
  5794 ;;		Unchanged: 0/0
  5795 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5796 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5797 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5798 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5799 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5800 ;;Total ram usage:       13 bytes
  5801 ;; Hardware stack levels used:    1
  5802 ;; Hardware stack levels required when called:    5
  5803 ;; This function calls:
  5804 ;;		_InitCalibrate
  5805 ;;		_isEndpoint
  5806 ;; This function is called by:
  5807 ;;		_setComunicateMode
  5808 ;; This function uses a non-reentrant model
  5809 ;;
  5810                           
  5811                           
  5812                           ;psect for function _Calibrate_download
  5813  0188                     _Calibrate_download:	
  5814                           
  5815                           ;incstack = 0
  5816                           ; Regs used in _Calibrate_download: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5817                           ;Calibrate_download@spi_Read_data stored from wreg
  5818  0188  0020               	movlb	0	; select bank0
  5819  0189  00E5               	movwf	Calibrate_download@spi_Read_data
  5820                           
  5821                           ;calibrate_mode.c: 75: unsigned int bufint = spi_Read_data;
  5822  018A  0865               	movf	Calibrate_download@spi_Read_data,w
  5823  018B  00D9               	movwf	??_Calibrate_download
  5824  018C  01DA               	clrf	??_Calibrate_download+1
  5825  018D  0859               	movf	??_Calibrate_download,w
  5826  018E  00E3               	movwf	Calibrate_download@bufint
  5827  018F  085A               	movf	??_Calibrate_download+1,w
  5828  0190  00E4               	movwf	Calibrate_download@bufint+1
  5829                           
  5830                           ;calibrate_mode.c: 76: unsigned long buflong = spi_Read_data;
  5831  0191  0865               	movf	Calibrate_download@spi_Read_data,w
  5832  0192  00D9               	movwf	??_Calibrate_download
  5833  0193  01DA               	clrf	??_Calibrate_download+1
  5834  0194  01DB               	clrf	??_Calibrate_download+2
  5835  0195  01DC               	clrf	??_Calibrate_download+3
  5836  0196  085C               	movf	??_Calibrate_download+3,w
  5837  0197  00E1               	movwf	Calibrate_download@buflong+3
  5838  0198  085B               	movf	??_Calibrate_download+2,w
  5839  0199  00E0               	movwf	Calibrate_download@buflong+2
  5840  019A  085A               	movf	??_Calibrate_download+1,w
  5841  019B  00DF               	movwf	Calibrate_download@buflong+1
  5842  019C  0859               	movf	??_Calibrate_download,w
  5843  019D  00DE               	movwf	Calibrate_download@buflong
  5844                           
  5845                           ;calibrate_mode.c: 77: isEndpoint();
  5846  019E  3184  2457  3181   	fcall	_isEndpoint
  5847                           
  5848                           ;calibrate_mode.c: 78: if(isMycargo){
  5849  01A1  18F8               	btfsc	_isMycargo/(0+8),_isMycargo& (0+7)
  5850  01A2  2A3E               	goto	l2630
  5851  01A3  2A4E               	goto	l2632
  5852  01A4                     l2594:	
  5853                           ;calibrate_mode.c: 80: case 0:
  5854                           
  5855                           ;calibrate_mode.c: 79: switch(countabuf){
  5856                           
  5857                           
  5858                           ;calibrate_mode.c: 81: InitCalibrate();
  5859  01A4  3185  25B7  3181   	fcall	_InitCalibrate
  5860                           
  5861                           ;calibrate_mode.c: 82: calibdata.cargoLength = (bufint << 8 | 0x00FF);
  5862  01A7  0020               	movlb	0	; select bank0
  5863  01A8  0863               	movf	Calibrate_download@bufint,w
  5864  01A9  00DA               	movwf	??_Calibrate_download+1
  5865  01AA  01D9               	clrf	??_Calibrate_download
  5866  01AB  30FF               	movlw	255
  5867  01AC  0459               	iorwf	??_Calibrate_download,w
  5868  01AD  0021               	movlb	1	; select bank1
  5869  01AE  00D6               	movwf	_calibdata^(0+128)
  5870  01AF  3000               	movlw	0
  5871  01B0  0020               	movlb	0	; select bank0
  5872  01B1  045A               	iorwf	??_Calibrate_download+1,w
  5873  01B2  29C2               	goto	L14
  5874  01B3                     l2600:	
  5875                           ;calibrate_mode.c: 85: case 1:
  5876                           
  5877                           ;calibrate_mode.c: 84: break;
  5878                           
  5879                           ;calibrate_mode.c: 83: spi2_Send_data = spi_Read_data;
  5880                           
  5881                           
  5882                           ;calibrate_mode.c: 86: calibdata.cargoLength = calibdata.cargoLength & (bufint | 0xFF00)
      +                          ;
  5883  01B3  3000               	movlw	0
  5884  01B4  0463               	iorwf	Calibrate_download@bufint,w
  5885  01B5  00D9               	movwf	??_Calibrate_download
  5886  01B6  30FF               	movlw	255
  5887  01B7  0464               	iorwf	Calibrate_download@bufint+1,w
  5888  01B8  00DA               	movwf	??_Calibrate_download+1
  5889  01B9  0021               	movlb	1	; select bank1
  5890  01BA  0856               	movf	_calibdata^(0+128),w
  5891  01BB  0020               	movlb	0	; select bank0
  5892  01BC  0559               	andwf	??_Calibrate_download,w
  5893  01BD  0021               	movlb	1	; select bank1
  5894  01BE  00D6               	movwf	_calibdata^(0+128)
  5895  01BF  0857               	movf	(_calibdata+1)^(0+128),w
  5896  01C0  0020               	movlb	0	; select bank0
  5897  01C1  055A               	andwf	??_Calibrate_download+1,w
  5898  01C2                     L14:	
  5899  01C2  0021               	movlb	1	; select bank1
  5900  01C3  00D7               	movwf	(_calibdata+1)^(0+128)
  5901  01C4  29D0               	goto	L16
  5902  01C5                     l2602:	
  5903                           ;calibrate_mode.c: 89: case 2:
  5904                           
  5905                           ;calibrate_mode.c: 88: break;
  5906                           
  5907                           ;calibrate_mode.c: 87: spi2_Send_data = spi_Read_data;
  5908                           
  5909                           
  5910                           ;calibrate_mode.c: 90: calibdata.command = spi_Read_data;
  5911  01C5  0865               	movf	Calibrate_download@spi_Read_data,w
  5912  01C6  00D9               	movwf	??_Calibrate_download
  5913  01C7  0859               	movf	??_Calibrate_download,w
  5914  01C8  0021               	movlb	1	; select bank1
  5915  01C9  00D8               	movwf	(_calibdata^(0+128)+2)
  5916  01CA  29D0               	goto	L16
  5917  01CB                     l2604:	
  5918                           ;calibrate_mode.c: 93: case 3:
  5919                           
  5920                           ;calibrate_mode.c: 92: break;
  5921                           
  5922                           ;calibrate_mode.c: 91: spi2_Send_data = spi_Read_data;
  5923                           
  5924                           
  5925                           ;calibrate_mode.c: 94: calibdata.index = spi_Read_data;
  5926  01CB  0865               	movf	Calibrate_download@spi_Read_data,w
  5927  01CC  00D9               	movwf	??_Calibrate_download
  5928  01CD  0859               	movf	??_Calibrate_download,w
  5929  01CE  0021               	movlb	1	; select bank1
  5930  01CF  00D9               	movwf	(_calibdata^(0+128)+3)
  5931  01D0                     L16:	
  5932                           
  5933                           ;calibrate_mode.c: 95: spi2_Send_data = spi_Read_data;
  5934  01D0  0020               	movlb	0	; select bank0
  5935  01D1  0865               	movf	Calibrate_download@spi_Read_data,w
  5936  01D2  2A3A               	goto	L25
  5937  01D3                     l2606:	
  5938                           ;calibrate_mode.c: 97: case 4:
  5939                           
  5940                           ;calibrate_mode.c: 96: break;
  5941                           
  5942                           
  5943                           ;calibrate_mode.c: 98: linkInfo.My_address = spi_Read_data +1;
  5944  01D3  0865               	movf	Calibrate_download@spi_Read_data,w
  5945  01D4  3E01               	addlw	1
  5946  01D5  00D9               	movwf	??_Calibrate_download
  5947  01D6  0859               	movf	??_Calibrate_download,w
  5948  01D7  00B0               	movwf	_linkInfo
  5949  01D8  2A39               	goto	L26
  5950  01D9                     l2610:	
  5951                           ;calibrate_mode.c: 101: case 5:
  5952                           
  5953                           ;calibrate_mode.c: 100: break;
  5954                           
  5955                           ;calibrate_mode.c: 99: spi2_Send_data = linkInfo.My_address;
  5956                           
  5957                           
  5958                           ;calibrate_mode.c: 102: calibdata.WorkingCount++;
  5959  01D9  3001               	movlw	1
  5960  01DA  0021               	movlb	1	; select bank1
  5961  01DB  07DA               	addwf	(_calibdata^(0+128)+4),f
  5962  01DC  3000               	movlw	0
  5963  01DD  3DDB               	addwfc	((_calibdata+1)^(0+128)+4),f
  5964  01DE  3000               	movlw	0
  5965  01DF  3DDC               	addwfc	((_calibdata+2)^(0+128)+4),f
  5966  01E0  3000               	movlw	0
  5967  01E1  3DDD               	addwfc	((_calibdata+3)^(0+128)+4),f
  5968                           
  5969                           ;calibrate_mode.c: 103: spi2_Send_data = (calibdata.WorkingCount >> 24 & 0x000000ff);
  5970  01E2  085A               	movf	(_calibdata^(0+128)+4),w
  5971  01E3  0020               	movlb	0	; select bank0
  5972  01E4  00D9               	movwf	??_Calibrate_download
  5973  01E5  0021               	movlb	1	; select bank1
  5974  01E6  085B               	movf	((_calibdata+1)^(0+128)+4),w
  5975  01E7  0020               	movlb	0	; select bank0
  5976  01E8  00DA               	movwf	??_Calibrate_download+1
  5977  01E9  0021               	movlb	1	; select bank1
  5978  01EA  085C               	movf	((_calibdata+2)^(0+128)+4),w
  5979  01EB  0020               	movlb	0	; select bank0
  5980  01EC  00DB               	movwf	??_Calibrate_download+2
  5981  01ED  0021               	movlb	1	; select bank1
  5982  01EE  085D               	movf	((_calibdata+3)^(0+128)+4),w
  5983  01EF  0020               	movlb	0	; select bank0
  5984  01F0  00DC               	movwf	??_Calibrate_download+3
  5985  01F1  3018               	movlw	24
  5986  01F2                     u1125:	
  5987  01F2  36DC               	lsrf	??_Calibrate_download+3,f
  5988  01F3  0CDB               	rrf	??_Calibrate_download+2,f
  5989  01F4  0CDA               	rrf	??_Calibrate_download+1,f
  5990  01F5  0CD9               	rrf	??_Calibrate_download,f
  5991  01F6  0B89               	decfsz	9,f
  5992  01F7  29F2               	goto	u1125
  5993  01F8  2A28               	goto	L24
  5994  01F9                     l2614:	
  5995                           ;calibrate_mode.c: 105: case 6:
  5996                           
  5997                           ;calibrate_mode.c: 104: break;
  5998                           
  5999                           
  6000                           ;calibrate_mode.c: 106: spi2_Send_data = (calibdata.WorkingCount >> 16 & 0x000000ff);
  6001  01F9  0021               	movlb	1	; select bank1
  6002  01FA  085A               	movf	(_calibdata^(0+128)+4),w
  6003  01FB  0020               	movlb	0	; select bank0
  6004  01FC  00D9               	movwf	??_Calibrate_download
  6005  01FD  0021               	movlb	1	; select bank1
  6006  01FE  085B               	movf	((_calibdata+1)^(0+128)+4),w
  6007  01FF  0020               	movlb	0	; select bank0
  6008  0200  00DA               	movwf	??_Calibrate_download+1
  6009  0201  0021               	movlb	1	; select bank1
  6010  0202  085C               	movf	((_calibdata+2)^(0+128)+4),w
  6011  0203  0020               	movlb	0	; select bank0
  6012  0204  00DB               	movwf	??_Calibrate_download+2
  6013  0205  0021               	movlb	1	; select bank1
  6014  0206  085D               	movf	((_calibdata+3)^(0+128)+4),w
  6015  0207  0020               	movlb	0	; select bank0
  6016  0208  00DC               	movwf	??_Calibrate_download+3
  6017  0209  3010               	movlw	16
  6018  020A                     u1135:	
  6019  020A  36DC               	lsrf	??_Calibrate_download+3,f
  6020  020B  0CDB               	rrf	??_Calibrate_download+2,f
  6021  020C  0CDA               	rrf	??_Calibrate_download+1,f
  6022  020D  0CD9               	rrf	??_Calibrate_download,f
  6023  020E  0B89               	decfsz	9,f
  6024  020F  2A0A               	goto	u1135
  6025  0210  2A28               	goto	L24
  6026  0211                     l2616:	
  6027                           ;calibrate_mode.c: 108: case 7:
  6028                           
  6029                           ;calibrate_mode.c: 107: break;
  6030                           
  6031                           
  6032                           ;calibrate_mode.c: 109: spi2_Send_data = (calibdata.WorkingCount >> 8 & 0x000000ff);
  6033  0211  0021               	movlb	1	; select bank1
  6034  0212  085A               	movf	(_calibdata^(0+128)+4),w
  6035  0213  0020               	movlb	0	; select bank0
  6036  0214  00D9               	movwf	??_Calibrate_download
  6037  0215  0021               	movlb	1	; select bank1
  6038  0216  085B               	movf	((_calibdata+1)^(0+128)+4),w
  6039  0217  0020               	movlb	0	; select bank0
  6040  0218  00DA               	movwf	??_Calibrate_download+1
  6041  0219  0021               	movlb	1	; select bank1
  6042  021A  085C               	movf	((_calibdata+2)^(0+128)+4),w
  6043  021B  0020               	movlb	0	; select bank0
  6044  021C  00DB               	movwf	??_Calibrate_download+2
  6045  021D  0021               	movlb	1	; select bank1
  6046  021E  085D               	movf	((_calibdata+3)^(0+128)+4),w
  6047  021F  0020               	movlb	0	; select bank0
  6048  0220  00DC               	movwf	??_Calibrate_download+3
  6049  0221  3008               	movlw	8
  6050  0222                     u1145:	
  6051  0222  36DC               	lsrf	??_Calibrate_download+3,f
  6052  0223  0CDB               	rrf	??_Calibrate_download+2,f
  6053  0224  0CDA               	rrf	??_Calibrate_download+1,f
  6054  0225  0CD9               	rrf	??_Calibrate_download,f
  6055  0226  0B89               	decfsz	9,f
  6056  0227  2A22               	goto	u1145
  6057  0228                     L24:	
  6058  0228  0859               	movf	??_Calibrate_download,w
  6059  0229  00DD               	movwf	??_Calibrate_download+4
  6060  022A  085D               	movf	??_Calibrate_download+4,w
  6061  022B  2A3C               	goto	L22
  6062  022C                     l2618:	
  6063                           ;calibrate_mode.c: 111: case 8:
  6064                           
  6065                           ;calibrate_mode.c: 110: break;
  6066                           
  6067                           
  6068                           ;calibrate_mode.c: 112: spi2_Send_data = (calibdata.WorkingCount & 0x000000ff);
  6069  022C  0021               	movlb	1	; select bank1
  6070  022D  085A               	movf	(_calibdata^(0+128)+4),w
  6071  022E  0020               	movlb	0	; select bank0
  6072  022F  2A3A               	goto	L25
  6073  0230                     l414:	
  6074                           ;calibrate_mode.c: 114: case 9:
  6075                           
  6076                           ;calibrate_mode.c: 113: break;
  6077                           
  6078                           
  6079                           ;calibrate_mode.c: 115: if(isEndPointTrig == 1){
  6080  0230  1C78               	btfss	_isEndPointTrig/(0+8),_isEndPointTrig& (0+7)
  6081  0231  2A35               	goto	l2622
  6082                           
  6083                           ;calibrate_mode.c: 117: linkInfo.endpoint = 1;
  6084  0232  01B5               	clrf	_linkInfo+5
  6085  0233  0AB5               	incf	_linkInfo+5,f
  6086                           
  6087                           ;calibrate_mode.c: 118: }else{
  6088  0234  2A36               	goto	l2624
  6089  0235                     l2622:	
  6090                           
  6091                           ;calibrate_mode.c: 119: linkInfo.endpoint = 0;
  6092  0235  01B5               	clrf	_linkInfo+5
  6093  0236                     l2624:	
  6094                           
  6095                           ;calibrate_mode.c: 120: }
  6096                           ;calibrate_mode.c: 121: LATAbits.LATA0 = 0;
  6097  0236  0022               	movlb	2	; select bank2
  6098  0237  100C               	bcf	12,0	;volatile
  6099                           
  6100                           ;calibrate_mode.c: 122: spi2_Send_data = linkInfo.My_address;
  6101  0238  0020               	movlb	0	; select bank0
  6102  0239                     L26:	
  6103  0239  0830               	movf	_linkInfo,w
  6104  023A                     L25:	
  6105  023A  00D9               	movwf	??_Calibrate_download
  6106  023B  0859               	movf	??_Calibrate_download,w
  6107  023C                     L22:	
  6108  023C  00D1               	movwf	_spi2_Send_data
  6109                           
  6110                           ;calibrate_mode.c: 124: }
  6111                           
  6112                           ;calibrate_mode.c: 123: break;
  6113  023D  2A4E               	goto	l2632
  6114  023E                     l2630:	
  6115                           
  6116                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6117                           ; Switch size 1, requested type "space"
  6118                           ; Number of cases is 1, Range of values is 0 to 0
  6119                           ; switch strategies available:
  6120                           ; Name         Instructions Cycles
  6121                           ; simple_byte            4     3 (average)
  6122                           ; direct_byte            8     6 (fixed)
  6123                           ; jumptable            260     6 (fixed)
  6124                           ;	Chosen strategy is simple_byte
  6125  023E  0020               	movlb	0	; select bank0
  6126  023F  0845               	movf	_countabuf+1,w
  6127  0240  3A00               	xorlw	0	; case 0
  6128  0241  1903               	skipnz
  6129  0242  2A44               	goto	l3046
  6130  0243  2A4E               	goto	l2632
  6131  0244                     l3046:	
  6132                           
  6133                           ; Switch size 1, requested type "space"
  6134                           ; Number of cases is 10, Range of values is 0 to 9
  6135                           ; switch strategies available:
  6136                           ; Name         Instructions Cycles
  6137                           ; direct_byte           26     6 (fixed)
  6138                           ; simple_byte           31    16 (average)
  6139                           ; jumptable            260     6 (fixed)
  6140                           ;	Chosen strategy is direct_byte
  6141  0244  0844               	movf	_countabuf,w
  6142  0245  0084               	movwf	4
  6143  0246  300A               	movlw	10
  6144  0247  0204               	subwf	4,w
  6145  0248  1803               	skipnc
  6146  0249  2A4E               	goto	l2632
  6147  024A  3185               	movlp	high S3048
  6148  024B  3504               	lslf	4,w
  6149  024C  3EE5               	addlw	low S3048
  6150  024D  0082               	movwf	2
  6151  024E                     l2632:	
  6152                           
  6153                           ;calibrate_mode.c: 125: }
  6154                           ;calibrate_mode.c: 127: countabuf++;
  6155  024E  3001               	movlw	1
  6156  024F  0020               	movlb	0	; select bank0
  6157  0250  07C4               	addwf	_countabuf,f
  6158  0251  3000               	movlw	0
  6159  0252  3DC5               	addwfc	_countabuf+1,f
  6160                           
  6161                           ;calibrate_mode.c: 128: unsigned char buf = calibdata.cargoLength & 0x00FF;
  6162  0253  0021               	movlb	1	; select bank1
  6163  0254  0856               	movf	_calibdata^(0+128),w
  6164  0255  0020               	movlb	0	; select bank0
  6165  0256  00D9               	movwf	??_Calibrate_download
  6166  0257  0859               	movf	??_Calibrate_download,w
  6167  0258  00E2               	movwf	Calibrate_download@buf
  6168                           
  6169                           ;calibrate_mode.c: 129: if(calibdata.cargoLength <= countabuf){
  6170  0259  0021               	movlb	1	; select bank1
  6171  025A  0857               	movf	(_calibdata+1)^(0+128),w
  6172  025B  0020               	movlb	0	; select bank0
  6173  025C  0245               	subwf	_countabuf+1,w
  6174  025D  1D03               	skipz
  6175  025E  2A63               	goto	u1165
  6176  025F  0021               	movlb	1	; select bank1
  6177  0260  0856               	movf	_calibdata^(0+128),w
  6178  0261  0020               	movlb	0	; select bank0
  6179  0262  0244               	subwf	_countabuf,w
  6180  0263                     u1165:	
  6181  0263  1C03               	skipc
  6182  0264  0008               	return
  6183                           
  6184                           ;calibrate_mode.c: 130: calibdata.cargoLength = 0xFFFF;
  6185  0265  30FF               	movlw	255
  6186  0266  0021               	movlb	1	; select bank1
  6187  0267  00D6               	movwf	_calibdata^(0+128)
  6188  0268  30FF               	movlw	255
  6189  0269  00D7               	movwf	(_calibdata^(0+128)+1)
  6190                           
  6191                           ;calibrate_mode.c: 131: countabuf = 0;
  6192  026A  0020               	movlb	0	; select bank0
  6193  026B  01C4               	clrf	_countabuf
  6194  026C  01C5               	clrf	_countabuf+1
  6195                           
  6196                           ;calibrate_mode.c: 132: isMycargo = 1;
  6197  026D  14F8               	bsf	_isMycargo/(0+8),_isMycargo& (0+7)
  6198  026E  0008               	return
  6199  026F                     __end_of_Calibrate_download:	
  6200                           
  6201                           	psect	swtext2
  6202  05E5                     __pswtext2:	
  6203  05E5                     S3048:	
  6204  05E5  3181  29A4         	ljmp	l2594
  6205  05E7  3181  29B3         	ljmp	l2600
  6206  05E9  3181  29C5         	ljmp	l2602
  6207  05EB  3181  29CB         	ljmp	l2604
  6208  05ED  3181  29D3         	ljmp	l2606
  6209  05EF  3181  29D9         	ljmp	l2610
  6210  05F1  3181  29F9         	ljmp	l2614
  6211  05F3  3182  2A11         	ljmp	l2616
  6212  05F5  3182  2A2C         	ljmp	l2618
  6213  05F7  3182  2A30         	ljmp	l414
  6214                           
  6215                           	psect	text10
  6216  0457                     __ptext10:	
  6217 ;; *************** function _isEndpoint *****************
  6218 ;; Defined at:
  6219 ;;		line 30 in file "D:/programdata/16F18346_Link_IC.X/calibrate_mode.c"
  6220 ;; Parameters:    Size  Location     Type
  6221 ;;		None
  6222 ;; Auto vars:     Size  Location     Type
  6223 ;;  spi2data        1    6[BANK0 ] unsigned char 
  6224 ;; Return value:  Size  Location     Type
  6225 ;;		None               void
  6226 ;; Registers used:
  6227 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6228 ;; Tracked objects:
  6229 ;;		On entry : 0/0
  6230 ;;		On exit  : 0/0
  6231 ;;		Unchanged: 0/0
  6232 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6233 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6234 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6235 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6236 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6237 ;;Total ram usage:        6 bytes
  6238 ;; Hardware stack levels used:    1
  6239 ;; Hardware stack levels required when called:    4
  6240 ;; This function calls:
  6241 ;;		_setSPI1sendDataManual
  6242 ;; This function is called by:
  6243 ;;		_Calibrate_download
  6244 ;; This function uses a non-reentrant model
  6245 ;;
  6246                           
  6247                           
  6248                           ;psect for function _isEndpoint
  6249  0457                     _isEndpoint:	
  6250                           
  6251                           ;calibrate_mode.c: 31: unsigned char spi2data = 0;
  6252                           
  6253                           ;incstack = 0
  6254                           ; Regs used in _isEndpoint: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6255  0457  0020               	movlb	0	; select bank0
  6256  0458  01D8               	clrf	isEndpoint@spi2data
  6257                           
  6258                           ;calibrate_mode.c: 32: if(count2 > 1){
  6259  0459  3000               	movlw	0
  6260  045A  0249               	subwf	_count2+1,w
  6261  045B  3002               	movlw	2
  6262  045C  1903               	skipnz
  6263  045D  0248               	subwf	_count2,w
  6264  045E  1C03               	skipc
  6265  045F  2C74               	goto	l2492
  6266                           
  6267                           ;calibrate_mode.c: 33: spi2data = spi2_buffer_data[count2 -1];
  6268  0460  0848               	movf	_count2,w
  6269  0461  3EFF               	addlw	255
  6270  0462  00D3               	movwf	??_isEndpoint
  6271  0463  30FF               	movlw	255
  6272  0464  3D49               	addwfc	_count2+1,w
  6273  0465  00D4               	movwf	??_isEndpoint+1
  6274  0466  30F0               	movlw	240
  6275  0467  00D5               	movwf	??_isEndpoint+2
  6276  0468  3025               	movlw	37
  6277  0469  00D6               	movwf	??_isEndpoint+3
  6278  046A  0853               	movf	??_isEndpoint,w
  6279  046B  0755               	addwf	??_isEndpoint+2,w
  6280  046C  0086               	movwf	6
  6281  046D  0854               	movf	??_isEndpoint+1,w
  6282  046E  3D56               	addwfc	??_isEndpoint+3,w
  6283  046F  0087               	movwf	7
  6284  0470  0801               	movf	1,w
  6285  0471  00D7               	movwf	??_isEndpoint+4
  6286  0472  0857               	movf	??_isEndpoint+4,w
  6287  0473  2C81               	goto	L27
  6288  0474                     l2492:	
  6289                           ;calibrate_mode.c: 34: }else{
  6290                           
  6291                           
  6292                           ;calibrate_mode.c: 35: spi2data = spi2_buffer_data[count2];
  6293  0474  30F0               	movlw	240
  6294  0475  00D3               	movwf	??_isEndpoint
  6295  0476  3025               	movlw	37
  6296  0477  00D4               	movwf	??_isEndpoint+1
  6297  0478  0848               	movf	_count2,w
  6298  0479  0753               	addwf	??_isEndpoint,w
  6299  047A  0086               	movwf	6
  6300  047B  0849               	movf	_count2+1,w
  6301  047C  3D54               	addwfc	??_isEndpoint+1,w
  6302  047D  0087               	movwf	7
  6303  047E  0801               	movf	1,w
  6304  047F  00D5               	movwf	??_isEndpoint+2
  6305  0480  0855               	movf	??_isEndpoint+2,w
  6306  0481                     L27:	
  6307  0481  00D8               	movwf	isEndpoint@spi2data
  6308                           
  6309                           ;calibrate_mode.c: 36: }
  6310                           ;calibrate_mode.c: 37: if(spi2data < 255){
  6311  0482  0A58               	incf	isEndpoint@spi2data,w
  6312  0483  1903               	btfsc	3,2
  6313  0484  2C89               	goto	l382
  6314                           
  6315                           ;calibrate_mode.c: 38: LATAbits.LATA0 = 1;
  6316  0485  0022               	movlb	2	; select bank2
  6317  0486  140C               	bsf	12,0	;volatile
  6318                           
  6319                           ;calibrate_mode.c: 39: isEndPointTrig = 0;
  6320  0487  1078               	bcf	_isEndPointTrig/(0+8),_isEndPointTrig& (0+7)
  6321                           
  6322                           ;calibrate_mode.c: 40: }else{
  6323  0488  0008               	return
  6324  0489                     l382:	
  6325                           
  6326                           ;calibrate_mode.c: 41: LATAbits.LATA0 = 0;
  6327  0489  0022               	movlb	2	; select bank2
  6328  048A  100C               	bcf	12,0	;volatile
  6329                           
  6330                           ;calibrate_mode.c: 42: setSPI1sendDataManual(0x00);
  6331  048B  3000               	movlw	0
  6332  048C  3186  2680         	fcall	_setSPI1sendDataManual
  6333  048E  0008               	return
  6334  048F                     __end_of_isEndpoint:	
  6335                           ;calibrate_mode.c: 43: }
  6336                           ;calibrate_mode.c: 44: return isEndPointTrig;
  6337                           ;	Return value of _isEndpoint is never used
  6338                           
  6339                           
  6340                           	psect	text11
  6341  0680                     __ptext11:	
  6342 ;; *************** function _setSPI1sendDataManual *****************
  6343 ;; Defined at:
  6344 ;;		line 103 in file "D:/programdata/16F18346_Link_IC.X/spiControl.c"
  6345 ;; Parameters:    Size  Location     Type
  6346 ;;  data            1    wreg     unsigned char 
  6347 ;; Auto vars:     Size  Location     Type
  6348 ;;  data            1    0[BANK0 ] unsigned char 
  6349 ;; Return value:  Size  Location     Type
  6350 ;;                  1    wreg      void 
  6351 ;; Registers used:
  6352 ;;		wreg
  6353 ;; Tracked objects:
  6354 ;;		On entry : 0/0
  6355 ;;		On exit  : 0/0
  6356 ;;		Unchanged: 0/0
  6357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6358 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6359 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6361 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6362 ;;Total ram usage:        1 bytes
  6363 ;; Hardware stack levels used:    1
  6364 ;; Hardware stack levels required when called:    3
  6365 ;; This function calls:
  6366 ;;		Nothing
  6367 ;; This function is called by:
  6368 ;;		_isEndpoint
  6369 ;; This function uses a non-reentrant model
  6370 ;;
  6371                           
  6372                           
  6373                           ;psect for function _setSPI1sendDataManual
  6374  0680                     _setSPI1sendDataManual:	
  6375                           
  6376                           ;incstack = 0
  6377                           ; Regs used in _setSPI1sendDataManual: [wreg]
  6378                           ;setSPI1sendDataManual@data stored from wreg
  6379  0680  0020               	movlb	0	; select bank0
  6380  0681  00D2               	movwf	setSPI1sendDataManual@data
  6381                           
  6382                           ;spiControl.c: 104: SSP1BUF = data;
  6383  0682  0852               	movf	setSPI1sendDataManual@data,w
  6384  0683  0024               	movlb	4	; select bank4
  6385  0684  0091               	movwf	17	;volatile
  6386  0685  0008               	return
  6387  0686                     __end_of_setSPI1sendDataManual:	
  6388                           
  6389                           	psect	text12
  6390  05B7                     __ptext12:	
  6391 ;; *************** function _InitCalibrate *****************
  6392 ;; Defined at:
  6393 ;;		line 62 in file "D:/programdata/16F18346_Link_IC.X/calibrate_mode.c"
  6394 ;; Parameters:    Size  Location     Type
  6395 ;;		None
  6396 ;; Auto vars:     Size  Location     Type
  6397 ;;		None
  6398 ;; Return value:  Size  Location     Type
  6399 ;;                  1    wreg      void 
  6400 ;; Registers used:
  6401 ;;		wreg, status,2
  6402 ;; Tracked objects:
  6403 ;;		On entry : 0/0
  6404 ;;		On exit  : 0/0
  6405 ;;		Unchanged: 0/0
  6406 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6407 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6408 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6409 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6410 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6411 ;;Total ram usage:        0 bytes
  6412 ;; Hardware stack levels used:    1
  6413 ;; Hardware stack levels required when called:    3
  6414 ;; This function calls:
  6415 ;;		Nothing
  6416 ;; This function is called by:
  6417 ;;		_main
  6418 ;;		_Calibrate_download
  6419 ;; This function uses a non-reentrant model
  6420 ;;
  6421                           
  6422                           
  6423                           ;psect for function _InitCalibrate
  6424  05B7                     _InitCalibrate:	
  6425                           
  6426                           ;calibrate_mode.c: 63: isEndPointTrig = 1;
  6427                           
  6428                           ;incstack = 0
  6429                           ; Regs used in _InitCalibrate: [wreg+status,2]
  6430  05B7  1478               	bsf	_isEndPointTrig/(0+8),_isEndPointTrig& (0+7)
  6431                           
  6432                           ;calibrate_mode.c: 64: calibdata.cargoLength = 0xFFFF;
  6433  05B8  30FF               	movlw	255
  6434  05B9  0021               	movlb	1	; select bank1
  6435  05BA  00D6               	movwf	_calibdata^(0+128)
  6436  05BB  30FF               	movlw	255
  6437  05BC  00D7               	movwf	(_calibdata^(0+128)+1)
  6438                           
  6439                           ;calibrate_mode.c: 65: calibdata.index = 0x00;
  6440  05BD  01D9               	clrf	(_calibdata^(0+128)+3)
  6441                           
  6442                           ;calibrate_mode.c: 66: calibdata.command =0x00;
  6443  05BE  01D8               	clrf	(_calibdata^(0+128)+2)
  6444                           
  6445                           ;calibrate_mode.c: 67: calibdata.WorkingCount = 0;
  6446  05BF  3000               	movlw	0
  6447  05C0  00DD               	movwf	((_calibdata+3)^(0+128)+4)
  6448  05C1  3000               	movlw	0
  6449  05C2  00DC               	movwf	((_calibdata+2)^(0+128)+4)
  6450  05C3  3000               	movlw	0
  6451  05C4  00DB               	movwf	((_calibdata+1)^(0+128)+4)
  6452  05C5  3000               	movlw	0
  6453  05C6  00DA               	movwf	(_calibdata^(0+128)+4)
  6454                           
  6455                           ;calibrate_mode.c: 68: linkInfo.endpoint = 0;
  6456  05C7  0020               	movlb	0	; select bank0
  6457  05C8  01B5               	clrf	_linkInfo+5
  6458                           
  6459                           ;calibrate_mode.c: 69: linkInfo.My_address = 0;
  6460  05C9  01B0               	clrf	_linkInfo
  6461                           
  6462                           ;calibrate_mode.c: 70: countabuf = 0;
  6463  05CA  01C4               	clrf	_countabuf
  6464  05CB  01C5               	clrf	_countabuf+1
  6465                           
  6466                           ;calibrate_mode.c: 71: isMycargo = 1;
  6467  05CC  14F8               	bsf	_isMycargo/(0+8),_isMycargo& (0+7)
  6468  05CD  0008               	return
  6469  05CE                     __end_of_InitCalibrate:	
  6470                           
  6471                           	psect	text13
  6472  0391                     __ptext13:	
  6473 ;; *************** function _read_train *****************
  6474 ;; Defined at:
  6475 ;;		line 204 in file "D:/programdata/16F18346_Link_IC.X/main.c"
  6476 ;; Parameters:    Size  Location     Type
  6477 ;;		None
  6478 ;; Auto vars:     Size  Location     Type
  6479 ;;  bufint          2    2[BANK0 ] unsigned int 
  6480 ;; Return value:  Size  Location     Type
  6481 ;;                  1    wreg      void 
  6482 ;; Registers used:
  6483 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6484 ;; Tracked objects:
  6485 ;;		On entry : 0/0
  6486 ;;		On exit  : 0/0
  6487 ;;		Unchanged: 0/0
  6488 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6489 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6490 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6491 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6492 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6493 ;;Total ram usage:        4 bytes
  6494 ;; Hardware stack levels used:    1
  6495 ;; Hardware stack levels required when called:    3
  6496 ;; This function calls:
  6497 ;;		Nothing
  6498 ;; This function is called by:
  6499 ;;		_main
  6500 ;; This function uses a non-reentrant model
  6501 ;;
  6502                           
  6503                           
  6504                           ;psect for function _read_train
  6505  0391                     _read_train:	
  6506                           
  6507                           ;main.c: 205: unsigned int bufint = spi1_Read_data;
  6508                           
  6509                           ;incstack = 0
  6510                           ; Regs used in _read_train: [wreg-fsr0h+status,2+status,0]
  6511  0391  0879               	movf	_spi1_Read_data,w
  6512  0392  0020               	movlb	0	; select bank0
  6513  0393  00D2               	movwf	??_read_train
  6514  0394  01D3               	clrf	??_read_train+1
  6515  0395  0852               	movf	??_read_train,w
  6516  0396  00D4               	movwf	read_train@bufint
  6517  0397  0853               	movf	??_read_train+1,w
  6518  0398  00D5               	movwf	read_train@bufint+1
  6519                           
  6520                           ;main.c: 206: switch(trainPos){
  6521  0399  2BB6               	goto	l2864
  6522  039A                     l2854:	
  6523                           ;main.c: 209: case 1:
  6524                           
  6525                           ;main.c: 208: break;
  6526                           
  6527                           ;main.c: 207: case 0:
  6528                           
  6529                           
  6530                           ;main.c: 210: st_dataLength = (bufint << 8 | 0x00FF);
  6531  039A  0854               	movf	read_train@bufint,w
  6532  039B  00D3               	movwf	??_read_train+1
  6533  039C  01D2               	clrf	??_read_train
  6534  039D  30FF               	movlw	255
  6535  039E  0452               	iorwf	??_read_train,w
  6536  039F  00EE               	movwf	_st_dataLength
  6537  03A0  3000               	movlw	0
  6538  03A1  0453               	iorwf	??_read_train+1,w
  6539  03A2  2BAE               	goto	L28
  6540  03A3                     l2856:	
  6541                           ;main.c: 212: case 2:
  6542                           
  6543                           ;main.c: 211: break;
  6544                           
  6545                           
  6546                           ;main.c: 213: st_dataLength = st_dataLength & (bufint | 0xFF00);
  6547  03A3  3000               	movlw	0
  6548  03A4  0454               	iorwf	read_train@bufint,w
  6549  03A5  00D2               	movwf	??_read_train
  6550  03A6  30FF               	movlw	255
  6551  03A7  0455               	iorwf	read_train@bufint+1,w
  6552  03A8  00D3               	movwf	??_read_train+1
  6553  03A9  086E               	movf	_st_dataLength,w
  6554  03AA  0552               	andwf	??_read_train,w
  6555  03AB  00EE               	movwf	_st_dataLength
  6556  03AC  086F               	movf	_st_dataLength+1,w
  6557  03AD  0553               	andwf	??_read_train+1,w
  6558  03AE                     L28:	
  6559  03AE  00EF               	movwf	_st_dataLength+1
  6560                           
  6561                           ;main.c: 214: break;
  6562  03AF  2BC9               	goto	l2866
  6563  03B0                     l2858:	
  6564                           ;main.c: 215: case 3:
  6565                           
  6566                           
  6567                           ;main.c: 216: st_type = spi1_Read_data;
  6568  03B0  0879               	movf	_spi1_Read_data,w
  6569  03B1  00D2               	movwf	??_read_train
  6570  03B2  0852               	movf	??_read_train,w
  6571  03B3  00D0               	movwf	_st_type
  6572                           
  6573                           ;main.c: 217: isreadTrain = 1;
  6574  03B4  16F0               	bsf	_isreadTrain/(0+8),_isreadTrain& (0+7)
  6575                           
  6576                           ;main.c: 221: }
  6577                           
  6578                           ;main.c: 220: break;
  6579                           
  6580                           ;main.c: 219: default :
  6581                           
  6582                           ;main.c: 218: break;
  6583  03B5  2BC9               	goto	l2866
  6584  03B6                     l2864:	
  6585                           
  6586                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6587                           ; Switch size 1, requested type "space"
  6588                           ; Number of cases is 1, Range of values is 0 to 0
  6589                           ; switch strategies available:
  6590                           ; Name         Instructions Cycles
  6591                           ; simple_byte            4     3 (average)
  6592                           ; direct_byte            8     6 (fixed)
  6593                           ; jumptable            260     6 (fixed)
  6594                           ;	Chosen strategy is simple_byte
  6595  03B6  0841               	movf	_trainPos+1,w
  6596  03B7  3A00               	xorlw	0	; case 0
  6597  03B8  1903               	skipnz
  6598  03B9  2BBB               	goto	l3050
  6599  03BA  2BC9               	goto	l2866
  6600  03BB                     l3050:	
  6601                           
  6602                           ; Switch size 1, requested type "space"
  6603                           ; Number of cases is 4, Range of values is 0 to 3
  6604                           ; switch strategies available:
  6605                           ; Name         Instructions Cycles
  6606                           ; simple_byte           13     7 (average)
  6607                           ; direct_byte           14     6 (fixed)
  6608                           ; jumptable            260     6 (fixed)
  6609                           ;	Chosen strategy is simple_byte
  6610  03BB  0840               	movf	_trainPos,w
  6611  03BC  3A00               	xorlw	0	; case 0
  6612  03BD  1903               	skipnz
  6613  03BE  2BC9               	goto	l2866
  6614  03BF  3A01               	xorlw	1	; case 1
  6615  03C0  1903               	skipnz
  6616  03C1  2B9A               	goto	l2854
  6617  03C2  3A03               	xorlw	3	; case 2
  6618  03C3  1903               	skipnz
  6619  03C4  2BA3               	goto	l2856
  6620  03C5  3A01               	xorlw	1	; case 3
  6621  03C6  1903               	skipnz
  6622  03C7  2BB0               	goto	l2858
  6623  03C8  2BC9               	goto	l2866
  6624  03C9                     l2866:	
  6625                           
  6626                           ;main.c: 223: if(read_count1 == 256){
  6627  03C9  0347               	decf	_read_count1+1,w
  6628  03CA  0446               	iorwf	_read_count1,w
  6629  03CB  1D03               	btfss	3,2
  6630  03CC  2BCF               	goto	l2870
  6631                           
  6632                           ;main.c: 224: read_count1 = 0;
  6633  03CD  01C6               	clrf	_read_count1
  6634  03CE  01C7               	clrf	_read_count1+1
  6635  03CF                     l2870:	
  6636                           
  6637                           ;main.c: 225: }
  6638                           ;main.c: 226: if(read_count2 == 256){
  6639  03CF  0343               	decf	_read_count2+1,w
  6640  03D0  0442               	iorwf	_read_count2,w
  6641  03D1  1D03               	btfss	3,2
  6642  03D2  0008               	return
  6643                           
  6644                           ;main.c: 227: read_count2 = 0;
  6645  03D3  01C2               	clrf	_read_count2
  6646  03D4  01C3               	clrf	_read_count2+1
  6647  03D5  0008               	return
  6648  03D6                     __end_of_read_train:	
  6649                           
  6650                           	psect	text14
  6651  061A                     __ptext14:	
  6652 ;; *************** function _isSPI1read *****************
  6653 ;; Defined at:
  6654 ;;		line 67 in file "D:/programdata/16F18346_Link_IC.X/spiControl.c"
  6655 ;; Parameters:    Size  Location     Type
  6656 ;;		None
  6657 ;; Auto vars:     Size  Location     Type
  6658 ;;		None
  6659 ;; Return value:  Size  Location     Type
  6660 ;;		None               void
  6661 ;; Registers used:
  6662 ;;		wreg, status,2, status,0
  6663 ;; Tracked objects:
  6664 ;;		On entry : 0/0
  6665 ;;		On exit  : 0/0
  6666 ;;		Unchanged: 0/0
  6667 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6668 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6669 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6670 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6671 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6672 ;;Total ram usage:        0 bytes
  6673 ;; Hardware stack levels used:    1
  6674 ;; Hardware stack levels required when called:    3
  6675 ;; This function calls:
  6676 ;;		Nothing
  6677 ;; This function is called by:
  6678 ;;		_main
  6679 ;; This function uses a non-reentrant model
  6680 ;;
  6681                           
  6682                           
  6683                           ;psect for function _isSPI1read
  6684  061A                     _isSPI1read:	
  6685                           
  6686                           ;spiControl.c: 68: if(read_count1 == count1){
  6687                           
  6688                           ;incstack = 0
  6689                           ; Regs used in _isSPI1read: [wreg+status,2+status,0]
  6690  061A  0020               	movlb	0	; select bank0
  6691  061B  084B               	movf	_count1+1,w
  6692  061C  0647               	xorwf	_read_count1+1,w
  6693  061D  1D03               	skipz
  6694  061E  2E21               	goto	u1265
  6695  061F  084A               	movf	_count1,w
  6696  0620  0646               	xorwf	_read_count1,w
  6697  0621                     u1265:	
  6698  0621  1D03               	skipz
  6699  0622  2E25               	goto	l2820
  6700                           
  6701                           ;spiControl.c: 69: return 1;
  6702  0623  1403               	setc
  6703                           
  6704                           ;spiControl.c: 70: }else{
  6705  0624  0008               	return
  6706  0625                     l2820:	
  6707                           
  6708                           ;spiControl.c: 71: return 0;
  6709  0625  1003               	clrc
  6710  0626  0008               	return
  6711  0627                     __end_of_isSPI1read:	
  6712                           
  6713                           	psect	text15
  6714  066E                     __ptext15:	
  6715 ;; *************** function _io_init *****************
  6716 ;; Defined at:
  6717 ;;		line 132 in file "D:/programdata/16F18346_Link_IC.X/main.c"
  6718 ;; Parameters:    Size  Location     Type
  6719 ;;		None
  6720 ;; Auto vars:     Size  Location     Type
  6721 ;;		None
  6722 ;; Return value:  Size  Location     Type
  6723 ;;                  1    wreg      void 
  6724 ;; Registers used:
  6725 ;;		None
  6726 ;; Tracked objects:
  6727 ;;		On entry : 0/0
  6728 ;;		On exit  : 0/0
  6729 ;;		Unchanged: 0/0
  6730 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6731 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6732 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6733 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6734 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6735 ;;Total ram usage:        0 bytes
  6736 ;; Hardware stack levels used:    1
  6737 ;; Hardware stack levels required when called:    3
  6738 ;; This function calls:
  6739 ;;		Nothing
  6740 ;; This function is called by:
  6741 ;;		_main
  6742 ;; This function uses a non-reentrant model
  6743 ;;
  6744                           
  6745                           
  6746                           ;psect for function _io_init
  6747  066E                     _io_init:	
  6748                           
  6749                           ;main.c: 133: PIE0bits.IOCIE = 1;
  6750                           
  6751                           ;incstack = 0
  6752                           ; Regs used in _io_init: []
  6753  066E  0021               	movlb	1	; select bank1
  6754  066F  1610               	bsf	16,4	;volatile
  6755                           
  6756                           ;main.c: 134: IOCAPbits.IOCAP3 = 1;
  6757  0670  0027               	movlb	7	; select bank7
  6758  0671  1591               	bsf	17,3	;volatile
  6759                           
  6760                           ;main.c: 135: IOCANbits.IOCAN3 = 1;
  6761  0672  1592               	bsf	18,3	;volatile
  6762                           
  6763                           ;main.c: 136: PIE0bits.INTE = 1;
  6764  0673  0021               	movlb	1	; select bank1
  6765  0674  1410               	bsf	16,0	;volatile
  6766                           
  6767                           ;main.c: 137: INTCONbits.INTEDG = 1;
  6768  0675  140B               	bsf	11,0	;volatile
  6769  0676  0008               	return
  6770  0677                     __end_of_io_init:	
  6771                           
  6772                           	psect	text16
  6773  0349                     __ptext16:	
  6774 ;; *************** function _initTrain *****************
  6775 ;; Defined at:
  6776 ;;		line 140 in file "D:/programdata/16F18346_Link_IC.X/main.c"
  6777 ;; Parameters:    Size  Location     Type
  6778 ;;		None
  6779 ;; Auto vars:     Size  Location     Type
  6780 ;;		None
  6781 ;; Return value:  Size  Location     Type
  6782 ;;                  1    wreg      void 
  6783 ;; Registers used:
  6784 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6785 ;; Tracked objects:
  6786 ;;		On entry : 0/0
  6787 ;;		On exit  : 0/0
  6788 ;;		Unchanged: 0/0
  6789 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6790 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6791 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6792 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6793 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6794 ;;Total ram usage:        3 bytes
  6795 ;; Hardware stack levels used:    1
  6796 ;; Hardware stack levels required when called:    5
  6797 ;; This function calls:
  6798 ;;		_isTrainSt
  6799 ;;		_resetTrainData
  6800 ;; This function is called by:
  6801 ;;		_main
  6802 ;; This function uses a non-reentrant model
  6803 ;;
  6804                           
  6805                           
  6806                           ;psect for function _initTrain
  6807  0349                     _initTrain:	
  6808                           
  6809                           ;main.c: 141: spi1_Read_data = spi1_buffer_data[read_count1];
  6810                           
  6811                           ;incstack = 0
  6812                           ; Regs used in _initTrain: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6813  0349  30F0               	movlw	240
  6814  034A  0020               	movlb	0	; select bank0
  6815  034B  00DB               	movwf	??_initTrain
  6816  034C  3026               	movlw	38
  6817  034D  00DC               	movwf	??_initTrain+1
  6818  034E  0846               	movf	_read_count1,w
  6819  034F  075B               	addwf	??_initTrain,w
  6820  0350  0086               	movwf	6
  6821  0351  0847               	movf	_read_count1+1,w
  6822  0352  3D5C               	addwfc	??_initTrain+1,w
  6823  0353  0087               	movwf	7
  6824  0354  0801               	movf	1,w
  6825  0355  00DD               	movwf	??_initTrain+2
  6826  0356  085D               	movf	??_initTrain+2,w
  6827  0357  00F9               	movwf	_spi1_Read_data
  6828                           
  6829                           ;main.c: 142: spi2_Send_data = spi1_Read_data;
  6830  0358  0879               	movf	_spi1_Read_data,w
  6831  0359  00DB               	movwf	??_initTrain
  6832  035A  085B               	movf	??_initTrain,w
  6833  035B  00D1               	movwf	_spi2_Send_data
  6834                           
  6835                           ;main.c: 143: read_count1++;
  6836  035C  3001               	movlw	1
  6837  035D  07C6               	addwf	_read_count1,f
  6838  035E  3000               	movlw	0
  6839  035F  3DC7               	addwfc	_read_count1+1,f
  6840                           
  6841                           ;main.c: 144: if(isTrainSt(spi1_Read_data)){
  6842  0360  0879               	movf	_spi1_Read_data,w
  6843  0361  3183  23D6  3183   	fcall	_isTrainSt
  6844  0364  1C03               	btfss	3,0
  6845  0365  2B77               	goto	l2780
  6846                           
  6847                           ;main.c: 145: LATAbits.LATA0 = 0;
  6848  0366  0022               	movlb	2	; select bank2
  6849  0367  100C               	bcf	12,0	;volatile
  6850                           
  6851                           ;main.c: 146: trainPos = 0;
  6852  0368  0020               	movlb	0	; select bank0
  6853  0369  01C0               	clrf	_trainPos
  6854  036A  01C1               	clrf	_trainPos+1
  6855                           
  6856                           ;main.c: 147: read_count1 = 0;
  6857  036B  01C6               	clrf	_read_count1
  6858  036C  01C7               	clrf	_read_count1+1
  6859                           
  6860                           ;main.c: 148: resetTrainData();
  6861  036D  3186  2677  3183   	fcall	_resetTrainData
  6862                           
  6863                           ;main.c: 149: isreadTrain = 0;
  6864  0370  12F0               	bcf	_isreadTrain/(0+8),_isreadTrain& (0+7)
  6865                           
  6866                           ;main.c: 150: count1 = 0;
  6867  0371  0020               	movlb	0	; select bank0
  6868  0372  01CA               	clrf	_count1
  6869  0373  01CB               	clrf	_count1+1
  6870                           
  6871                           ;main.c: 151: countabuf = 0;
  6872  0374  01C4               	clrf	_countabuf
  6873  0375  01C5               	clrf	_countabuf+1
  6874                           
  6875                           ;main.c: 152: }else{
  6876  0376  2B7C               	goto	l134
  6877  0377                     l2780:	
  6878                           
  6879                           ;main.c: 153: trainPos++;
  6880  0377  3001               	movlw	1
  6881  0378  0020               	movlb	0	; select bank0
  6882  0379  07C0               	addwf	_trainPos,f
  6883  037A  3000               	movlw	0
  6884  037B  3DC1               	addwfc	_trainPos+1,f
  6885  037C                     l134:	
  6886                           
  6887                           ;main.c: 154: }
  6888                           ;main.c: 155: if(st_dataLength < trainPos){
  6889  037C  0841               	movf	_trainPos+1,w
  6890  037D  026F               	subwf	_st_dataLength+1,w
  6891  037E  1D03               	skipz
  6892  037F  2B82               	goto	u1255
  6893  0380  0840               	movf	_trainPos,w
  6894  0381  026E               	subwf	_st_dataLength,w
  6895  0382                     u1255:	
  6896  0382  1803               	skipnc
  6897  0383  0008               	return
  6898                           
  6899                           ;main.c: 156: trainPos = 0;
  6900  0384  01C0               	clrf	_trainPos
  6901  0385  01C1               	clrf	_trainPos+1
  6902                           
  6903                           ;main.c: 157: read_count1 = 0;
  6904  0386  01C6               	clrf	_read_count1
  6905  0387  01C7               	clrf	_read_count1+1
  6906                           
  6907                           ;main.c: 158: resetTrainData();
  6908  0388  3186  2677         	fcall	_resetTrainData
  6909                           
  6910                           ;main.c: 159: isreadTrain = 0;
  6911  038A  12F0               	bcf	_isreadTrain/(0+8),_isreadTrain& (0+7)
  6912                           
  6913                           ;main.c: 160: count1 = 0;
  6914  038B  0020               	movlb	0	; select bank0
  6915  038C  01CA               	clrf	_count1
  6916  038D  01CB               	clrf	_count1+1
  6917                           
  6918                           ;main.c: 161: countabuf = 0;
  6919  038E  01C4               	clrf	_countabuf
  6920  038F  01C5               	clrf	_countabuf+1
  6921  0390  0008               	return
  6922  0391                     __end_of_initTrain:	
  6923                           
  6924                           	psect	text17
  6925  0677                     __ptext17:	
  6926 ;; *************** function _resetTrainData *****************
  6927 ;; Defined at:
  6928 ;;		line 186 in file "D:/programdata/16F18346_Link_IC.X/main.c"
  6929 ;; Parameters:    Size  Location     Type
  6930 ;;		None
  6931 ;; Auto vars:     Size  Location     Type
  6932 ;;		None
  6933 ;; Return value:  Size  Location     Type
  6934 ;;                  1    wreg      void 
  6935 ;; Registers used:
  6936 ;;		wreg, status,2, status,0, pclath, cstack
  6937 ;; Tracked objects:
  6938 ;;		On entry : 0/0
  6939 ;;		On exit  : 0/0
  6940 ;;		Unchanged: 0/0
  6941 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6942 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6943 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6944 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6945 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6946 ;;Total ram usage:        0 bytes
  6947 ;; Hardware stack levels used:    1
  6948 ;; Hardware stack levels required when called:    4
  6949 ;; This function calls:
  6950 ;;		_restartCargo
  6951 ;; This function is called by:
  6952 ;;		_initTrain
  6953 ;; This function uses a non-reentrant model
  6954 ;;
  6955                           
  6956                           
  6957                           ;psect for function _resetTrainData
  6958  0677                     _resetTrainData:	
  6959                           
  6960                           ;main.c: 187: st_dataLength = 0xFFFF;
  6961                           
  6962                           ;incstack = 0
  6963                           ; Regs used in _resetTrainData: [wreg+status,2+status,0+pclath+cstack]
  6964  0677  30FF               	movlw	255
  6965  0678  0020               	movlb	0	; select bank0
  6966  0679  00EE               	movwf	_st_dataLength
  6967  067A  30FF               	movlw	255
  6968  067B  00EF               	movwf	_st_dataLength+1
  6969                           
  6970                           ;main.c: 188: st_type = 0;
  6971  067C  01D0               	clrf	_st_type
  6972                           
  6973                           ;main.c: 189: restartCargo();
  6974  067D  3185  25F9         	fcall	_restartCargo
  6975  067F  0008               	return
  6976  0680                     __end_of_resetTrainData:	
  6977                           
  6978                           	psect	text18
  6979  05F9                     __ptext18:	
  6980 ;; *************** function _restartCargo *****************
  6981 ;; Defined at:
  6982 ;;		line 33 in file "struct.c"
  6983 ;; Parameters:    Size  Location     Type
  6984 ;;		None
  6985 ;; Auto vars:     Size  Location     Type
  6986 ;;		None
  6987 ;; Return value:  Size  Location     Type
  6988 ;;                  1    wreg      void 
  6989 ;; Registers used:
  6990 ;;		wreg, status,2
  6991 ;; Tracked objects:
  6992 ;;		On entry : 0/0
  6993 ;;		On exit  : 0/0
  6994 ;;		Unchanged: 0/0
  6995 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6996 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6997 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6998 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6999 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7000 ;;Total ram usage:        0 bytes
  7001 ;; Hardware stack levels used:    1
  7002 ;; Hardware stack levels required when called:    3
  7003 ;; This function calls:
  7004 ;;		Nothing
  7005 ;; This function is called by:
  7006 ;;		_resetTrainData
  7007 ;;		_readCargo
  7008 ;; This function uses a non-reentrant model
  7009 ;;
  7010                           
  7011                           
  7012                           ;psect for function _restartCargo
  7013  05F9                     _restartCargo:	
  7014                           
  7015                           ;struct.c: 34: cargoData.WorkingCount = 0;
  7016                           
  7017                           ;incstack = 0
  7018                           ; Regs used in _restartCargo: [wreg+status,2]
  7019  05F9  3000               	movlw	0
  7020  05FA  0020               	movlb	0	; select bank0
  7021  05FB  00AF               	movwf	_cargoData+15
  7022  05FC  3000               	movlw	0
  7023  05FD  00AE               	movwf	_cargoData+14
  7024  05FE  3000               	movlw	0
  7025  05FF  00AD               	movwf	_cargoData+13
  7026  0600  3000               	movlw	0
  7027  0601  00AC               	movwf	_cargoData+12
  7028                           
  7029                           ;struct.c: 35: cargoData.address = 0;
  7030  0602  01A4               	clrf	_cargoData+4
  7031                           
  7032                           ;struct.c: 36: cargoData.cargoLength = 0xFFFF;
  7033  0603  30FF               	movlw	255
  7034  0604  00A0               	movwf	_cargoData
  7035  0605  30FF               	movlw	255
  7036  0606  00A1               	movwf	_cargoData+1
  7037                           
  7038                           ;struct.c: 37: cargoData.command = 0;
  7039  0607  01A2               	clrf	_cargoData+2
  7040                           
  7041                           ;struct.c: 38: cargoData.index = 0;
  7042  0608  01A3               	clrf	_cargoData+3
  7043  0609  0008               	return
  7044  060A                     __end_of_restartCargo:	
  7045                           
  7046                           	psect	text19
  7047  03D6                     __ptext19:	
  7048 ;; *************** function _isTrainSt *****************
  7049 ;; Defined at:
  7050 ;;		line 192 in file "D:/programdata/16F18346_Link_IC.X/main.c"
  7051 ;; Parameters:    Size  Location     Type
  7052 ;;  buf             1    wreg     unsigned char 
  7053 ;; Auto vars:     Size  Location     Type
  7054 ;;  buf             1    8[BANK0 ] unsigned char 
  7055 ;; Return value:  Size  Location     Type
  7056 ;;		None               void
  7057 ;; Registers used:
  7058 ;;		wreg, status,2, status,0
  7059 ;; Tracked objects:
  7060 ;;		On entry : 0/0
  7061 ;;		On exit  : 0/0
  7062 ;;		Unchanged: 0/0
  7063 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7064 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7065 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7066 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7067 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7068 ;;Total ram usage:        9 bytes
  7069 ;; Hardware stack levels used:    1
  7070 ;; Hardware stack levels required when called:    3
  7071 ;; This function calls:
  7072 ;;		Nothing
  7073 ;; This function is called by:
  7074 ;;		_initTrain
  7075 ;; This function uses a non-reentrant model
  7076 ;;
  7077                           
  7078                           
  7079                           ;psect for function _isTrainSt
  7080  03D6                     _isTrainSt:	
  7081                           
  7082                           ;incstack = 0
  7083                           ; Regs used in _isTrainSt: [wreg+status,2+status,0]
  7084                           ;isTrainSt@buf stored from wreg
  7085  03D6  0020               	movlb	0	; select bank0
  7086  03D7  00DA               	movwf	isTrainSt@buf
  7087                           
  7088                           ;main.c: 193: startTrainBytes = startTrainBytes << 8 | buf;
  7089  03D8  085A               	movf	isTrainSt@buf,w
  7090  03D9  00D2               	movwf	??_isTrainSt
  7091  03DA  01D3               	clrf	??_isTrainSt+1
  7092  03DB  01D4               	clrf	??_isTrainSt+2
  7093  03DC  01D5               	clrf	??_isTrainSt+3
  7094  03DD  0021               	movlb	1	; select bank1
  7095  03DE  0863               	movf	_startTrainBytes^(0+128),w
  7096  03DF  0020               	movlb	0	; select bank0
  7097  03E0  00D6               	movwf	??_isTrainSt+4
  7098  03E1  0021               	movlb	1	; select bank1
  7099  03E2  0864               	movf	(_startTrainBytes+1)^(0+128),w
  7100  03E3  0020               	movlb	0	; select bank0
  7101  03E4  00D7               	movwf	??_isTrainSt+5
  7102  03E5  0021               	movlb	1	; select bank1
  7103  03E6  0865               	movf	(_startTrainBytes+2)^(0+128),w
  7104  03E7  0020               	movlb	0	; select bank0
  7105  03E8  00D8               	movwf	??_isTrainSt+6
  7106  03E9  0021               	movlb	1	; select bank1
  7107  03EA  0866               	movf	(_startTrainBytes+3)^(0+128),w
  7108  03EB  0020               	movlb	0	; select bank0
  7109  03EC  00D9               	movwf	??_isTrainSt+7
  7110  03ED  3008               	movlw	8
  7111  03EE                     u1095:	
  7112  03EE  35D6               	lslf	??_isTrainSt+4,f
  7113  03EF  0DD7               	rlf	??_isTrainSt+5,f
  7114  03F0  0DD8               	rlf	??_isTrainSt+6,f
  7115  03F1  0DD9               	rlf	??_isTrainSt+7,f
  7116  03F2  0B89               	decfsz	9,f
  7117  03F3  2BEE               	goto	u1095
  7118  03F4  0856               	movf	??_isTrainSt+4,w
  7119  03F5  04D2               	iorwf	??_isTrainSt,f
  7120  03F6  0857               	movf	??_isTrainSt+5,w
  7121  03F7  04D3               	iorwf	??_isTrainSt+1,f
  7122  03F8  0858               	movf	??_isTrainSt+6,w
  7123  03F9  04D4               	iorwf	??_isTrainSt+2,f
  7124  03FA  0859               	movf	??_isTrainSt+7,w
  7125  03FB  04D5               	iorwf	??_isTrainSt+3,f
  7126  03FC  0855               	movf	??_isTrainSt+3,w
  7127  03FD  0021               	movlb	1	; select bank1
  7128  03FE  00E6               	movwf	(_startTrainBytes+3)^(0+128)
  7129  03FF  0020               	movlb	0	; select bank0
  7130  0400  0854               	movf	??_isTrainSt+2,w
  7131  0401  0021               	movlb	1	; select bank1
  7132  0402  00E5               	movwf	(_startTrainBytes+2)^(0+128)
  7133  0403  0020               	movlb	0	; select bank0
  7134  0404  0853               	movf	??_isTrainSt+1,w
  7135  0405  0021               	movlb	1	; select bank1
  7136  0406  00E4               	movwf	(_startTrainBytes+1)^(0+128)
  7137  0407  0020               	movlb	0	; select bank0
  7138  0408  0852               	movf	??_isTrainSt,w
  7139  0409  0021               	movlb	1	; select bank1
  7140  040A  00E3               	movwf	_startTrainBytes^(0+128)
  7141                           
  7142                           ;main.c: 194: if(startTrainBytes == 0xFFFFFFFF){
  7143  040B  0A63               	incf	_startTrainBytes^(0+128),w
  7144  040C  1D03               	skipz
  7145  040D  2C19               	goto	l2528
  7146  040E  0A64               	incf	(_startTrainBytes+1)^(0+128),w
  7147  040F  1D03               	skipz
  7148  0410  2C19               	goto	l2528
  7149  0411  0A65               	incf	(_startTrainBytes+2)^(0+128),w
  7150  0412  1D03               	skipz
  7151  0413  2C19               	goto	l2528
  7152  0414  0A66               	incf	(_startTrainBytes+3)^(0+128),w
  7153  0415  1D03               	btfss	3,2
  7154  0416  2C19               	goto	l2528
  7155                           
  7156                           ;main.c: 195: return 1;
  7157  0417  1403               	setc
  7158                           
  7159                           ;main.c: 196: }else{
  7160  0418  0008               	return
  7161  0419                     l2528:	
  7162                           
  7163                           ;main.c: 197: return 0;
  7164  0419  1003               	clrc
  7165  041A  0008               	return
  7166  041B                     __end_of_isTrainSt:	
  7167                           
  7168                           	psect	text20
  7169  026F                     __ptext20:	
  7170 ;; *************** function _initComu_types *****************
  7171 ;; Defined at:
  7172 ;;		line 18 in file "D:/programdata/16F18346_Link_IC.X/comu_type.c"
  7173 ;; Parameters:    Size  Location     Type
  7174 ;;		None
  7175 ;; Auto vars:     Size  Location     Type
  7176 ;;		None
  7177 ;; Return value:  Size  Location     Type
  7178 ;;                  1    wreg      void 
  7179 ;; Registers used:
  7180 ;;		wreg
  7181 ;; Tracked objects:
  7182 ;;		On entry : 0/0
  7183 ;;		On exit  : 0/0
  7184 ;;		Unchanged: 0/0
  7185 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7186 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7187 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7188 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7189 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7190 ;;Total ram usage:        1 bytes
  7191 ;; Hardware stack levels used:    1
  7192 ;; Hardware stack levels required when called:    3
  7193 ;; This function calls:
  7194 ;;		Nothing
  7195 ;; This function is called by:
  7196 ;;		_main
  7197 ;; This function uses a non-reentrant model
  7198 ;;
  7199                           
  7200                           
  7201                           ;psect for function _initComu_types
  7202  026F                     _initComu_types:	
  7203                           
  7204                           ;comu_type.c: 19: comu_types[0] = 0b00111111;
  7205                           
  7206                           ;incstack = 0
  7207                           ; Regs used in _initComu_types: [wreg]
  7208  026F  303F               	movlw	63
  7209  0270  0020               	movlb	0	; select bank0
  7210  0271  00D2               	movwf	??_initComu_types
  7211  0272  0852               	movf	??_initComu_types,w
  7212  0273  0021               	movlb	1	; select bank1
  7213  0274  00B2               	movwf	_comu_types^(0+128)
  7214                           
  7215                           ;comu_type.c: 20: comu_types[1] = 0b01111111;
  7216  0275  307F               	movlw	127
  7217  0276  0020               	movlb	0	; select bank0
  7218  0277  00D2               	movwf	??_initComu_types
  7219  0278  0852               	movf	??_initComu_types,w
  7220  0279  0021               	movlb	1	; select bank1
  7221  027A  00B3               	movwf	(_comu_types^(0+128)+1)
  7222                           
  7223                           ;comu_type.c: 21: comu_types[2] = 0b10011111;
  7224  027B  309F               	movlw	159
  7225  027C  0020               	movlb	0	; select bank0
  7226  027D  00D2               	movwf	??_initComu_types
  7227  027E  0852               	movf	??_initComu_types,w
  7228  027F  0021               	movlb	1	; select bank1
  7229  0280  00B4               	movwf	(_comu_types^(0+128)+2)
  7230                           
  7231                           ;comu_type.c: 22: comu_types[3] = 0b10101111;
  7232  0281  30AF               	movlw	175
  7233  0282  0020               	movlb	0	; select bank0
  7234  0283  00D2               	movwf	??_initComu_types
  7235  0284  0852               	movf	??_initComu_types,w
  7236  0285  0021               	movlb	1	; select bank1
  7237  0286  00B5               	movwf	(_comu_types^(0+128)+3)
  7238                           
  7239                           ;comu_type.c: 23: comu_types[4] = 0b10111111;
  7240  0287  30BF               	movlw	191
  7241  0288  0020               	movlb	0	; select bank0
  7242  0289  00D2               	movwf	??_initComu_types
  7243  028A  0852               	movf	??_initComu_types,w
  7244  028B  0021               	movlb	1	; select bank1
  7245  028C  00B6               	movwf	(_comu_types^(0+128)+4)
  7246                           
  7247                           ;comu_type.c: 24: comu_types[5] = 0b11001111;
  7248  028D  30CF               	movlw	207
  7249  028E  0020               	movlb	0	; select bank0
  7250  028F  00D2               	movwf	??_initComu_types
  7251  0290  0852               	movf	??_initComu_types,w
  7252  0291  0021               	movlb	1	; select bank1
  7253  0292  00B7               	movwf	(_comu_types^(0+128)+5)
  7254                           
  7255                           ;comu_type.c: 25: comu_types[6] = 0b11010111;
  7256  0293  30D7               	movlw	215
  7257  0294  0020               	movlb	0	; select bank0
  7258  0295  00D2               	movwf	??_initComu_types
  7259  0296  0852               	movf	??_initComu_types,w
  7260  0297  0021               	movlb	1	; select bank1
  7261  0298  00B8               	movwf	(_comu_types^(0+128)+6)
  7262                           
  7263                           ;comu_type.c: 26: comu_types[7] = 0b11011111;
  7264  0299  30DF               	movlw	223
  7265  029A  0020               	movlb	0	; select bank0
  7266  029B  00D2               	movwf	??_initComu_types
  7267  029C  0852               	movf	??_initComu_types,w
  7268  029D  0021               	movlb	1	; select bank1
  7269  029E  00B9               	movwf	(_comu_types^(0+128)+7)
  7270                           
  7271                           ;comu_type.c: 27: comu_types[8] = 0b11100111;
  7272  029F  30E7               	movlw	231
  7273  02A0  0020               	movlb	0	; select bank0
  7274  02A1  00D2               	movwf	??_initComu_types
  7275  02A2  0852               	movf	??_initComu_types,w
  7276  02A3  0021               	movlb	1	; select bank1
  7277  02A4  00BA               	movwf	(_comu_types^(0+128)+8)
  7278                           
  7279                           ;comu_type.c: 28: comu_types[9] = 0b11101011;
  7280  02A5  30EB               	movlw	235
  7281  02A6  0020               	movlb	0	; select bank0
  7282  02A7  00D2               	movwf	??_initComu_types
  7283  02A8  0852               	movf	??_initComu_types,w
  7284  02A9  0021               	movlb	1	; select bank1
  7285  02AA  00BB               	movwf	(_comu_types^(0+128)+9)
  7286                           
  7287                           ;comu_type.c: 29: comu_types[10] = 0b11101111;
  7288  02AB  30EF               	movlw	239
  7289  02AC  0020               	movlb	0	; select bank0
  7290  02AD  00D2               	movwf	??_initComu_types
  7291  02AE  0852               	movf	??_initComu_types,w
  7292  02AF  0021               	movlb	1	; select bank1
  7293  02B0  00BC               	movwf	(_comu_types^(0+128)+10)
  7294                           
  7295                           ;comu_type.c: 30: comu_types[11] = 0b11110001;
  7296  02B1  30F1               	movlw	241
  7297  02B2  0020               	movlb	0	; select bank0
  7298  02B3  00D2               	movwf	??_initComu_types
  7299  02B4  0852               	movf	??_initComu_types,w
  7300  02B5  0021               	movlb	1	; select bank1
  7301  02B6  00BD               	movwf	(_comu_types^(0+128)+11)
  7302                           
  7303                           ;comu_type.c: 31: comu_types[12] = 0b11110011;
  7304  02B7  30F3               	movlw	243
  7305  02B8  0020               	movlb	0	; select bank0
  7306  02B9  00D2               	movwf	??_initComu_types
  7307  02BA  0852               	movf	??_initComu_types,w
  7308  02BB  0021               	movlb	1	; select bank1
  7309  02BC  00BE               	movwf	(_comu_types^(0+128)+12)
  7310                           
  7311                           ;comu_type.c: 32: comu_types[13] = 0b11110101;
  7312  02BD  30F5               	movlw	245
  7313  02BE  0020               	movlb	0	; select bank0
  7314  02BF  00D2               	movwf	??_initComu_types
  7315  02C0  0852               	movf	??_initComu_types,w
  7316  02C1  0021               	movlb	1	; select bank1
  7317  02C2  00BF               	movwf	(_comu_types^(0+128)+13)
  7318                           
  7319                           ;comu_type.c: 33: comu_types[14] = 0b11110111;
  7320  02C3  30F7               	movlw	247
  7321  02C4  0020               	movlb	0	; select bank0
  7322  02C5  00D2               	movwf	??_initComu_types
  7323  02C6  0852               	movf	??_initComu_types,w
  7324  02C7  0021               	movlb	1	; select bank1
  7325  02C8  00C0               	movwf	(_comu_types^(0+128)+14)
  7326                           
  7327                           ;comu_type.c: 34: comu_types[15] = 0b11111000;
  7328  02C9  30F8               	movlw	248
  7329  02CA  0020               	movlb	0	; select bank0
  7330  02CB  00D2               	movwf	??_initComu_types
  7331  02CC  0852               	movf	??_initComu_types,w
  7332  02CD  0021               	movlb	1	; select bank1
  7333  02CE  00C1               	movwf	(_comu_types^(0+128)+15)
  7334                           
  7335                           ;comu_type.c: 35: comu_types[16] = 0b11111001;
  7336  02CF  30F9               	movlw	249
  7337  02D0  0020               	movlb	0	; select bank0
  7338  02D1  00D2               	movwf	??_initComu_types
  7339  02D2  0852               	movf	??_initComu_types,w
  7340  02D3  0021               	movlb	1	; select bank1
  7341  02D4  00C2               	movwf	(_comu_types^(0+128)+16)
  7342                           
  7343                           ;comu_type.c: 36: comu_types[17] = 0b11111010;
  7344  02D5  30FA               	movlw	250
  7345  02D6  0020               	movlb	0	; select bank0
  7346  02D7  00D2               	movwf	??_initComu_types
  7347  02D8  0852               	movf	??_initComu_types,w
  7348  02D9  0021               	movlb	1	; select bank1
  7349  02DA  00C3               	movwf	(_comu_types^(0+128)+17)
  7350  02DB  0008               	return
  7351  02DC                     __end_of_initComu_types:	
  7352                           
  7353                           	psect	text21
  7354  02DC                     __ptext21:	
  7355 ;; *************** function _initComand *****************
  7356 ;; Defined at:
  7357 ;;		line 12 in file "D:/programdata/16F18346_Link_IC.X/command.c"
  7358 ;; Parameters:    Size  Location     Type
  7359 ;;		None
  7360 ;; Auto vars:     Size  Location     Type
  7361 ;;		None
  7362 ;; Return value:  Size  Location     Type
  7363 ;;                  1    wreg      void 
  7364 ;; Registers used:
  7365 ;;		wreg
  7366 ;; Tracked objects:
  7367 ;;		On entry : 0/0
  7368 ;;		On exit  : 0/0
  7369 ;;		Unchanged: 0/0
  7370 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7371 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7372 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7373 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7374 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7375 ;;Total ram usage:        1 bytes
  7376 ;; Hardware stack levels used:    1
  7377 ;; Hardware stack levels required when called:    3
  7378 ;; This function calls:
  7379 ;;		Nothing
  7380 ;; This function is called by:
  7381 ;;		_main
  7382 ;; This function uses a non-reentrant model
  7383 ;;
  7384                           
  7385                           
  7386                           ;psect for function _initComand
  7387  02DC                     _initComand:	
  7388                           
  7389                           ;command.c: 13: command[0] = 0b00111111;
  7390                           
  7391                           ;incstack = 0
  7392                           ; Regs used in _initComand: [wreg]
  7393  02DC  303F               	movlw	63
  7394  02DD  0020               	movlb	0	; select bank0
  7395  02DE  00D2               	movwf	??_initComand
  7396  02DF  0852               	movf	??_initComand,w
  7397  02E0  0021               	movlb	1	; select bank1
  7398  02E1  00C4               	movwf	_command^(0+128)
  7399                           
  7400                           ;command.c: 14: command[1] = 0b01111111;
  7401  02E2  307F               	movlw	127
  7402  02E3  0020               	movlb	0	; select bank0
  7403  02E4  00D2               	movwf	??_initComand
  7404  02E5  0852               	movf	??_initComand,w
  7405  02E6  0021               	movlb	1	; select bank1
  7406  02E7  00C5               	movwf	(_command^(0+128)+1)
  7407                           
  7408                           ;command.c: 15: command[2] = 0b10011111;
  7409  02E8  309F               	movlw	159
  7410  02E9  0020               	movlb	0	; select bank0
  7411  02EA  00D2               	movwf	??_initComand
  7412  02EB  0852               	movf	??_initComand,w
  7413  02EC  0021               	movlb	1	; select bank1
  7414  02ED  00C6               	movwf	(_command^(0+128)+2)
  7415                           
  7416                           ;command.c: 16: command[3] = 0b10101111;
  7417  02EE  30AF               	movlw	175
  7418  02EF  0020               	movlb	0	; select bank0
  7419  02F0  00D2               	movwf	??_initComand
  7420  02F1  0852               	movf	??_initComand,w
  7421  02F2  0021               	movlb	1	; select bank1
  7422  02F3  00C7               	movwf	(_command^(0+128)+3)
  7423                           
  7424                           ;command.c: 17: command[4] = 0b10111111;
  7425  02F4  30BF               	movlw	191
  7426  02F5  0020               	movlb	0	; select bank0
  7427  02F6  00D2               	movwf	??_initComand
  7428  02F7  0852               	movf	??_initComand,w
  7429  02F8  0021               	movlb	1	; select bank1
  7430  02F9  00C8               	movwf	(_command^(0+128)+4)
  7431                           
  7432                           ;command.c: 18: command[5] = 0b11001111;
  7433  02FA  30CF               	movlw	207
  7434  02FB  0020               	movlb	0	; select bank0
  7435  02FC  00D2               	movwf	??_initComand
  7436  02FD  0852               	movf	??_initComand,w
  7437  02FE  0021               	movlb	1	; select bank1
  7438  02FF  00C9               	movwf	(_command^(0+128)+5)
  7439                           
  7440                           ;command.c: 19: command[6] = 0b11010111;
  7441  0300  30D7               	movlw	215
  7442  0301  0020               	movlb	0	; select bank0
  7443  0302  00D2               	movwf	??_initComand
  7444  0303  0852               	movf	??_initComand,w
  7445  0304  0021               	movlb	1	; select bank1
  7446  0305  00CA               	movwf	(_command^(0+128)+6)
  7447                           
  7448                           ;command.c: 20: command[7] = 0b11011111;
  7449  0306  30DF               	movlw	223
  7450  0307  0020               	movlb	0	; select bank0
  7451  0308  00D2               	movwf	??_initComand
  7452  0309  0852               	movf	??_initComand,w
  7453  030A  0021               	movlb	1	; select bank1
  7454  030B  00CB               	movwf	(_command^(0+128)+7)
  7455                           
  7456                           ;command.c: 21: command[8] = 0b11100111;
  7457  030C  30E7               	movlw	231
  7458  030D  0020               	movlb	0	; select bank0
  7459  030E  00D2               	movwf	??_initComand
  7460  030F  0852               	movf	??_initComand,w
  7461  0310  0021               	movlb	1	; select bank1
  7462  0311  00CC               	movwf	(_command^(0+128)+8)
  7463                           
  7464                           ;command.c: 22: command[9] = 0b11101011;
  7465  0312  30EB               	movlw	235
  7466  0313  0020               	movlb	0	; select bank0
  7467  0314  00D2               	movwf	??_initComand
  7468  0315  0852               	movf	??_initComand,w
  7469  0316  0021               	movlb	1	; select bank1
  7470  0317  00CD               	movwf	(_command^(0+128)+9)
  7471                           
  7472                           ;command.c: 23: command[10] = 0b11101111;
  7473  0318  30EF               	movlw	239
  7474  0319  0020               	movlb	0	; select bank0
  7475  031A  00D2               	movwf	??_initComand
  7476  031B  0852               	movf	??_initComand,w
  7477  031C  0021               	movlb	1	; select bank1
  7478  031D  00CE               	movwf	(_command^(0+128)+10)
  7479                           
  7480                           ;command.c: 24: command[11] = 0b11110001;
  7481  031E  30F1               	movlw	241
  7482  031F  0020               	movlb	0	; select bank0
  7483  0320  00D2               	movwf	??_initComand
  7484  0321  0852               	movf	??_initComand,w
  7485  0322  0021               	movlb	1	; select bank1
  7486  0323  00CF               	movwf	(_command^(0+128)+11)
  7487                           
  7488                           ;command.c: 25: command[12] = 0b11110011;
  7489  0324  30F3               	movlw	243
  7490  0325  0020               	movlb	0	; select bank0
  7491  0326  00D2               	movwf	??_initComand
  7492  0327  0852               	movf	??_initComand,w
  7493  0328  0021               	movlb	1	; select bank1
  7494  0329  00D0               	movwf	(_command^(0+128)+12)
  7495                           
  7496                           ;command.c: 26: command[13] = 0b11110101;
  7497  032A  30F5               	movlw	245
  7498  032B  0020               	movlb	0	; select bank0
  7499  032C  00D2               	movwf	??_initComand
  7500  032D  0852               	movf	??_initComand,w
  7501  032E  0021               	movlb	1	; select bank1
  7502  032F  00D1               	movwf	(_command^(0+128)+13)
  7503                           
  7504                           ;command.c: 27: command[14] = 0b11110111;
  7505  0330  30F7               	movlw	247
  7506  0331  0020               	movlb	0	; select bank0
  7507  0332  00D2               	movwf	??_initComand
  7508  0333  0852               	movf	??_initComand,w
  7509  0334  0021               	movlb	1	; select bank1
  7510  0335  00D2               	movwf	(_command^(0+128)+14)
  7511                           
  7512                           ;command.c: 28: command[15] = 0b11111000;
  7513  0336  30F8               	movlw	248
  7514  0337  0020               	movlb	0	; select bank0
  7515  0338  00D2               	movwf	??_initComand
  7516  0339  0852               	movf	??_initComand,w
  7517  033A  0021               	movlb	1	; select bank1
  7518  033B  00D3               	movwf	(_command^(0+128)+15)
  7519                           
  7520                           ;command.c: 29: command[16] = 0b11111001;
  7521  033C  30F9               	movlw	249
  7522  033D  0020               	movlb	0	; select bank0
  7523  033E  00D2               	movwf	??_initComand
  7524  033F  0852               	movf	??_initComand,w
  7525  0340  0021               	movlb	1	; select bank1
  7526  0341  00D4               	movwf	(_command^(0+128)+16)
  7527                           
  7528                           ;command.c: 30: command[17] = 0b11111010;
  7529  0342  30FA               	movlw	250
  7530  0343  0020               	movlb	0	; select bank0
  7531  0344  00D2               	movwf	??_initComand
  7532  0345  0852               	movf	??_initComand,w
  7533  0346  0021               	movlb	1	; select bank1
  7534  0347  00D5               	movwf	(_command^(0+128)+17)
  7535  0348  0008               	return
  7536  0349                     __end_of_initComand:	
  7537                           
  7538                           	psect	text22
  7539  05CE                     __ptext22:	
  7540 ;; *************** function _initCargo *****************
  7541 ;; Defined at:
  7542 ;;		line 14 in file "struct.c"
  7543 ;; Parameters:    Size  Location     Type
  7544 ;;		None
  7545 ;; Auto vars:     Size  Location     Type
  7546 ;;		None
  7547 ;; Return value:  Size  Location     Type
  7548 ;;                  1    wreg      void 
  7549 ;; Registers used:
  7550 ;;		wreg, status,2
  7551 ;; Tracked objects:
  7552 ;;		On entry : 0/0
  7553 ;;		On exit  : 0/0
  7554 ;;		Unchanged: 0/0
  7555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7556 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7557 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7559 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7560 ;;Total ram usage:        0 bytes
  7561 ;; Hardware stack levels used:    1
  7562 ;; Hardware stack levels required when called:    3
  7563 ;; This function calls:
  7564 ;;		Nothing
  7565 ;; This function is called by:
  7566 ;;		_main
  7567 ;; This function uses a non-reentrant model
  7568 ;;
  7569                           
  7570                           
  7571                           ;psect for function _initCargo
  7572  05CE                     _initCargo:	
  7573                           
  7574                           ;struct.c: 15: isMycargo = 1;
  7575                           
  7576                           ;incstack = 0
  7577                           ; Regs used in _initCargo: [wreg+status,2]
  7578  05CE  14F8               	bsf	_isMycargo/(0+8),_isMycargo& (0+7)
  7579                           
  7580                           ;struct.c: 16: cargoData.WorkingCount = 0;
  7581  05CF  3000               	movlw	0
  7582  05D0  0020               	movlb	0	; select bank0
  7583  05D1  00AF               	movwf	_cargoData+15
  7584  05D2  3000               	movlw	0
  7585  05D3  00AE               	movwf	_cargoData+14
  7586  05D4  3000               	movlw	0
  7587  05D5  00AD               	movwf	_cargoData+13
  7588  05D6  3000               	movlw	0
  7589  05D7  00AC               	movwf	_cargoData+12
  7590                           
  7591                           ;struct.c: 17: cargoData.address = 0;
  7592  05D8  01A4               	clrf	_cargoData+4
  7593                           
  7594                           ;struct.c: 18: cargoData.cargoLength = 0xFFFF;
  7595  05D9  30FF               	movlw	255
  7596  05DA  00A0               	movwf	_cargoData
  7597  05DB  30FF               	movlw	255
  7598  05DC  00A1               	movwf	_cargoData+1
  7599                           
  7600                           ;struct.c: 19: cargoData.clutchMode = 0;
  7601  05DD  01AB               	clrf	_cargoData+11
  7602                           
  7603                           ;struct.c: 20: cargoData.command = 0;
  7604  05DE  01A2               	clrf	_cargoData+2
  7605                           
  7606                           ;struct.c: 21: cargoData.index = 0;
  7607  05DF  01A3               	clrf	_cargoData+3
  7608                           
  7609                           ;struct.c: 22: cargoData.linkAngleTo = 0;
  7610  05E0  01A5               	clrf	_cargoData+5
  7611  05E1  01A6               	clrf	_cargoData+6
  7612                           
  7613                           ;struct.c: 23: cargoData.passedTime = 0;
  7614  05E2  01A9               	clrf	_cargoData+9
  7615  05E3  01AA               	clrf	_cargoData+10
  7616  05E4  0008               	return
  7617  05E5                     __end_of_initCargo:	
  7618                           
  7619                           	psect	text23
  7620  04E7                     __ptext23:	
  7621 ;; *************** function _init *****************
  7622 ;; Defined at:
  7623 ;;		line 105 in file "D:/programdata/16F18346_Link_IC.X/main.c"
  7624 ;; Parameters:    Size  Location     Type
  7625 ;;		None
  7626 ;; Auto vars:     Size  Location     Type
  7627 ;;		None
  7628 ;; Return value:  Size  Location     Type
  7629 ;;                  1    wreg      void 
  7630 ;; Registers used:
  7631 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7632 ;; Tracked objects:
  7633 ;;		On entry : 0/0
  7634 ;;		On exit  : 0/0
  7635 ;;		Unchanged: 0/0
  7636 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7637 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7638 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7639 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7640 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7641 ;;Total ram usage:        0 bytes
  7642 ;; Hardware stack levels used:    1
  7643 ;; Hardware stack levels required when called:    4
  7644 ;; This function calls:
  7645 ;;		_clear
  7646 ;;		_initbuffer
  7647 ;; This function is called by:
  7648 ;;		_main
  7649 ;; This function uses a non-reentrant model
  7650 ;;
  7651                           
  7652                           
  7653                           ;psect for function _init
  7654  04E7                     _init:	
  7655                           
  7656                           ;main.c: 106: count1 = 0;
  7657                           
  7658                           ;incstack = 0
  7659                           ; Regs used in _init: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7660  04E7  0020               	movlb	0	; select bank0
  7661  04E8  01CA               	clrf	_count1
  7662  04E9  01CB               	clrf	_count1+1
  7663                           
  7664                           ;main.c: 107: count2 = 0;
  7665  04EA  01C8               	clrf	_count2
  7666  04EB  01C9               	clrf	_count2+1
  7667                           
  7668                           ;main.c: 108: initbuffer();
  7669  04EC  3184  24BD  3184   	fcall	_initbuffer
  7670                           
  7671                           ;main.c: 110: OSCFRQbits.HFFRQ = 0b0111;
  7672  04EF  0032               	movlb	18	; select bank18
  7673  04F0  081F               	movf	31,w	;volatile
  7674  04F1  39F0               	andlw	-16
  7675  04F2  3807               	iorlw	7
  7676  04F3  009F               	movwf	31	;volatile
  7677                           
  7678                           ;main.c: 111: OSCTUNEbits.HFTUN = 0b000000;
  7679  04F4  30C0               	movlw	-64
  7680  04F5  059E               	andwf	30,f	;volatile
  7681                           
  7682                           ;main.c: 112: clear();
  7683  04F6  3186  2627         	fcall	_clear
  7684                           
  7685                           ;main.c: 113: WPUC = 0b11111111;
  7686  04F8  30FF               	movlw	255
  7687  04F9  0024               	movlb	4	; select bank4
  7688  04FA  008E               	movwf	14	;volatile
  7689                           
  7690                           ;main.c: 114: WPUB = 0b11111111;
  7691  04FB  30FF               	movlw	255
  7692  04FC  008D               	movwf	13	;volatile
  7693                           
  7694                           ;main.c: 115: WPUA = 0b11111111;
  7695  04FD  30FF               	movlw	255
  7696  04FE  008C               	movwf	12	;volatile
  7697                           
  7698                           ;main.c: 116: TRISBbits.TRISB6 = 1;
  7699  04FF  0021               	movlb	1	; select bank1
  7700  0500  170D               	bsf	13,6	;volatile
  7701                           
  7702                           ;main.c: 117: TRISBbits.TRISB4 = 1;
  7703  0501  160D               	bsf	13,4	;volatile
  7704                           
  7705                           ;main.c: 118: TRISCbits.TRISC6 = 1;
  7706  0502  170E               	bsf	14,6	;volatile
  7707                           
  7708                           ;main.c: 119: INLVLBbits.INLVLB4 = 0;
  7709  0503  0027               	movlb	7	; select bank7
  7710  0504  120D               	bcf	13,4	;volatile
  7711                           
  7712                           ;main.c: 120: INLVLBbits.INLVLB6 = 0;
  7713  0505  130D               	bcf	13,6	;volatile
  7714                           
  7715                           ;main.c: 121: INLVLCbits.INLVLC5 = 0;
  7716  0506  128E               	bcf	14,5	;volatile
  7717                           
  7718                           ;main.c: 123: TRISBbits.TRISB5 = 1;
  7719  0507  0021               	movlb	1	; select bank1
  7720  0508  168D               	bsf	13,5	;volatile
  7721                           
  7722                           ;main.c: 124: INLVLBbits.INLVLB5 = 0;
  7723  0509  0027               	movlb	7	; select bank7
  7724  050A  128D               	bcf	13,5	;volatile
  7725                           
  7726                           ;main.c: 125: INLVLBbits.INLVLB7 = 0;
  7727  050B  138D               	bcf	13,7	;volatile
  7728                           
  7729                           ;main.c: 126: INLVLAbits.INLVLA1 = 0;
  7730  050C  108C               	bcf	12,1	;volatile
  7731                           
  7732                           ;main.c: 127: INLVLAbits.INLVLA2 = 0;
  7733  050D  110C               	bcf	12,2	;volatile
  7734  050E  0008               	return
  7735  050F                     __end_of_init:	
  7736                           ;main.c: 129: return;
  7737                           
  7738                           
  7739                           	psect	text24
  7740  04BD                     __ptext24:	
  7741 ;; *************** function _initbuffer *****************
  7742 ;; Defined at:
  7743 ;;		line 99 in file "D:/programdata/16F18346_Link_IC.X/main.c"
  7744 ;; Parameters:    Size  Location     Type
  7745 ;;		None
  7746 ;; Auto vars:     Size  Location     Type
  7747 ;;  i               2    2[BANK0 ] int 
  7748 ;; Return value:  Size  Location     Type
  7749 ;;                  1    wreg      void 
  7750 ;; Registers used:
  7751 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7752 ;; Tracked objects:
  7753 ;;		On entry : 0/0
  7754 ;;		On exit  : 0/0
  7755 ;;		Unchanged: 0/0
  7756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7757 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7758 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7759 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7760 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7761 ;;Total ram usage:        4 bytes
  7762 ;; Hardware stack levels used:    1
  7763 ;; Hardware stack levels required when called:    3
  7764 ;; This function calls:
  7765 ;;		Nothing
  7766 ;; This function is called by:
  7767 ;;		_init
  7768 ;; This function uses a non-reentrant model
  7769 ;;
  7770                           
  7771                           
  7772                           ;psect for function _initbuffer
  7773  04BD                     _initbuffer:	
  7774                           
  7775                           ;main.c: 100: for(int i = 0; i < 256; i++){
  7776                           
  7777                           ;incstack = 0
  7778                           ; Regs used in _initbuffer: [wreg+fsr1l+fsr1h+status,2+status,0]
  7779  04BD  0020               	movlb	0	; select bank0
  7780  04BE  01D4               	clrf	initbuffer@i
  7781  04BF  01D5               	clrf	initbuffer@i+1
  7782  04C0                     L29:	
  7783  04C0  0855               	movf	initbuffer@i+1,w
  7784  04C1  3A80               	xorlw	128
  7785  04C2  00D2               	movwf	??_initbuffer
  7786  04C3  3081               	movlw	129
  7787  04C4  0252               	subwf	??_initbuffer,w
  7788  04C5  1D03               	skipz
  7789  04C6  2CC9               	goto	u1075
  7790  04C7  3000               	movlw	0
  7791  04C8  0254               	subwf	initbuffer@i,w
  7792  04C9                     u1075:	
  7793  04C9  1803               	btfsc	3,0
  7794  04CA  0008               	return
  7795                           
  7796                           ;main.c: 101: spi1_buffer_data[i] = 0;
  7797  04CB  30F0               	movlw	240
  7798  04CC  0020               	movlb	0	; select bank0
  7799  04CD  00D2               	movwf	??_initbuffer
  7800  04CE  3026               	movlw	38
  7801  04CF  00D3               	movwf	??_initbuffer+1
  7802  04D0  0854               	movf	initbuffer@i,w
  7803  04D1  0752               	addwf	??_initbuffer,w
  7804  04D2  0086               	movwf	6
  7805  04D3  0855               	movf	initbuffer@i+1,w
  7806  04D4  3D53               	addwfc	??_initbuffer+1,w
  7807  04D5  0087               	movwf	7
  7808  04D6  0181               	clrf	1
  7809                           
  7810                           ;main.c: 102: spi2_buffer_data[i] = 0;
  7811  04D7  30F0               	movlw	240
  7812  04D8  00D2               	movwf	??_initbuffer
  7813  04D9  3025               	movlw	37
  7814  04DA  00D3               	movwf	??_initbuffer+1
  7815  04DB  0854               	movf	initbuffer@i,w
  7816  04DC  0752               	addwf	??_initbuffer,w
  7817  04DD  0086               	movwf	6
  7818  04DE  0855               	movf	initbuffer@i+1,w
  7819  04DF  3D53               	addwfc	??_initbuffer+1,w
  7820  04E0  0087               	movwf	7
  7821  04E1  0181               	clrf	1
  7822  04E2  3001               	movlw	1
  7823  04E3  07D4               	addwf	initbuffer@i,f
  7824  04E4  3000               	movlw	0
  7825  04E5  3DD5               	addwfc	initbuffer@i+1,f
  7826  04E6  2CC0               	goto	L29
  7827  04E7                     __end_of_initbuffer:	
  7828                           
  7829                           	psect	text25
  7830  0627                     __ptext25:	
  7831 ;; *************** function _clear *****************
  7832 ;; Defined at:
  7833 ;;		line 9 in file "D:/programdata/16F18346_Link_IC.X/util.c"
  7834 ;; Parameters:    Size  Location     Type
  7835 ;;		None
  7836 ;; Auto vars:     Size  Location     Type
  7837 ;;		None
  7838 ;; Return value:  Size  Location     Type
  7839 ;;                  1    wreg      void 
  7840 ;; Registers used:
  7841 ;;		status,2
  7842 ;; Tracked objects:
  7843 ;;		On entry : 0/0
  7844 ;;		On exit  : 0/0
  7845 ;;		Unchanged: 0/0
  7846 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7847 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7848 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7849 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7850 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7851 ;;Total ram usage:        0 bytes
  7852 ;; Hardware stack levels used:    1
  7853 ;; Hardware stack levels required when called:    3
  7854 ;; This function calls:
  7855 ;;		Nothing
  7856 ;; This function is called by:
  7857 ;;		_init
  7858 ;; This function uses a non-reentrant model
  7859 ;;
  7860                           
  7861                           
  7862                           ;psect for function _clear
  7863  0627                     _clear:	
  7864                           
  7865                           ;util.c: 10: ANSELA = 0x00;
  7866                           
  7867                           ;incstack = 0
  7868                           ; Regs used in _clear: [status,2]
  7869  0627  0023               	movlb	3	; select bank3
  7870  0628  018C               	clrf	12	;volatile
  7871                           
  7872                           ;util.c: 11: ANSELB = 0x00;
  7873  0629  018D               	clrf	13	;volatile
  7874                           
  7875                           ;util.c: 12: ANSELC = 0x00;
  7876  062A  018E               	clrf	14	;volatile
  7877                           
  7878                           ;util.c: 13: PORTA = 0x00;
  7879  062B  0020               	movlb	0	; select bank0
  7880  062C  018C               	clrf	12	;volatile
  7881                           
  7882                           ;util.c: 14: PORTB = 0x00;
  7883  062D  018D               	clrf	13	;volatile
  7884                           
  7885                           ;util.c: 15: PORTC = 0x00;
  7886  062E  018E               	clrf	14	;volatile
  7887                           
  7888                           ;util.c: 16: TRISA = 0x00;
  7889  062F  0021               	movlb	1	; select bank1
  7890  0630  018C               	clrf	12	;volatile
  7891                           
  7892                           ;util.c: 17: TRISB = 0x00;
  7893  0631  018D               	clrf	13	;volatile
  7894                           
  7895                           ;util.c: 18: TRISC = 0x00;
  7896  0632  018E               	clrf	14	;volatile
  7897  0633  0008               	return
  7898  0634                     __end_of_clear:	
  7899                           
  7900                           	psect	intentry
  7901  0004                     __pintentry:	
  7902 ;; *************** function _InterMSSP *****************
  7903 ;; Defined at:
  7904 ;;		line 69 in file "D:/programdata/16F18346_Link_IC.X/main.c"
  7905 ;; Parameters:    Size  Location     Type
  7906 ;;		None
  7907 ;; Auto vars:     Size  Location     Type
  7908 ;;		None
  7909 ;; Return value:  Size  Location     Type
  7910 ;;                  1    wreg      void 
  7911 ;; Registers used:
  7912 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7913 ;; Tracked objects:
  7914 ;;		On entry : 0/0
  7915 ;;		On exit  : 0/0
  7916 ;;		Unchanged: 0/0
  7917 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7918 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7919 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7920 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7921 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7922 ;;Total ram usage:        5 bytes
  7923 ;; Hardware stack levels used:    1
  7924 ;; Hardware stack levels required when called:    2
  7925 ;; This function calls:
  7926 ;;		_addAngle
  7927 ;;		_setSPI1sendData
  7928 ;; This function is called by:
  7929 ;;		Interrupt level 1
  7930 ;; This function uses a non-reentrant model
  7931 ;;
  7932                           
  7933  0004                     _InterMSSP:	
  7934                           
  7935                           ;incstack = 0
  7936  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  7937                           
  7938                           ; Regs used in _InterMSSP: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7939  0005  3180               	pagesel	$
  7940  0006  0020               	movlb	0	; select bank0
  7941  0007  087F               	movf	127,w
  7942  0008  00F7               	movwf	??_InterMSSP+4
  7943                           
  7944                           ;main.c: 71: if (PIR1bits.SSP1IF == 1) {
  7945  0009  1D91               	btfss	17,3	;volatile
  7946  000A  282A               	goto	i1l2190
  7947                           
  7948                           ;main.c: 72: spi1_buffer_data[count1] = SSP1BUF;
  7949  000B  30F0               	movlw	240
  7950  000C  00F3               	movwf	??_InterMSSP
  7951  000D  3026               	movlw	38
  7952  000E  00F4               	movwf	??_InterMSSP+1
  7953  000F  084A               	movf	_count1,w
  7954  0010  0773               	addwf	??_InterMSSP,w
  7955  0011  00F5               	movwf	??_InterMSSP+2
  7956  0012  084B               	movf	_count1+1,w
  7957  0013  3D74               	addwfc	??_InterMSSP+1,w
  7958  0014  00F6               	movwf	??_InterMSSP+3
  7959  0015  0875               	movf	??_InterMSSP+2,w
  7960  0016  0086               	movwf	6
  7961  0017  0876               	movf	??_InterMSSP+3,w
  7962  0018  0087               	movwf	7
  7963  0019  0024               	movlb	4	; select bank4
  7964  001A  0811               	movf	17,w	;volatile
  7965  001B  0081               	movwf	1
  7966                           
  7967                           ;main.c: 73: setSPI1sendData();
  7968  001C  3185  2555  3180   	fcall	_setSPI1sendData
  7969                           
  7970                           ;main.c: 74: count1++;
  7971  001F  3001               	movlw	1
  7972  0020  0020               	movlb	0	; select bank0
  7973  0021  07CA               	addwf	_count1,f
  7974  0022  3000               	movlw	0
  7975  0023  3DCB               	addwfc	_count1+1,f
  7976                           
  7977                           ;main.c: 75: if(count1 == 256){
  7978  0024  034B               	decf	_count1+1,w
  7979  0025  044A               	iorwf	_count1,w
  7980  0026  1D03               	btfss	3,2
  7981  0027  282A               	goto	i1l2190
  7982                           
  7983                           ;main.c: 76: count1 = 0;
  7984  0028  01CA               	clrf	_count1
  7985  0029  01CB               	clrf	_count1+1
  7986  002A                     i1l2190:	
  7987                           
  7988                           ;main.c: 77: }
  7989                           ;main.c: 78: }
  7990                           ;main.c: 79: if(linkInfo.endpoint == 0){
  7991  002A  0835               	movf	_linkInfo+5,w
  7992  002B  1903               	btfsc	3,2
  7993                           
  7994                           ;main.c: 80: if (PIR2bits.SSP2IF == 1) {
  7995  002C  1D92               	btfss	18,3	;volatile
  7996  002D  284A               	goto	i1l2202
  7997                           
  7998                           ;main.c: 81: spi2_buffer_data[count2] = SSP2BUF;
  7999  002E  30F0               	movlw	240
  8000  002F  00F3               	movwf	??_InterMSSP
  8001  0030  3025               	movlw	37
  8002  0031  00F4               	movwf	??_InterMSSP+1
  8003  0032  0848               	movf	_count2,w
  8004  0033  0773               	addwf	??_InterMSSP,w
  8005  0034  00F5               	movwf	??_InterMSSP+2
  8006  0035  0849               	movf	_count2+1,w
  8007  0036  3D74               	addwfc	??_InterMSSP+1,w
  8008  0037  00F6               	movwf	??_InterMSSP+3
  8009  0038  0875               	movf	??_InterMSSP+2,w
  8010  0039  0086               	movwf	6
  8011  003A  0876               	movf	??_InterMSSP+3,w
  8012  003B  0087               	movwf	7
  8013  003C  0024               	movlb	4	; select bank4
  8014  003D  0819               	movf	25,w	;volatile
  8015  003E  0081               	movwf	1
  8016                           
  8017                           ;main.c: 82: count2++;
  8018  003F  3001               	movlw	1
  8019  0040  0020               	movlb	0	; select bank0
  8020  0041  07C8               	addwf	_count2,f
  8021  0042  3000               	movlw	0
  8022  0043  3DC9               	addwfc	_count2+1,f
  8023                           
  8024                           ;main.c: 83: if(count2 == 256){
  8025  0044  0349               	decf	_count2+1,w
  8026  0045  0448               	iorwf	_count2,w
  8027  0046  1D03               	btfss	3,2
  8028  0047  284A               	goto	i1l2202
  8029                           
  8030                           ;main.c: 84: count2 = 0;
  8031  0048  01C8               	clrf	_count2
  8032  0049  01C9               	clrf	_count2+1
  8033  004A                     i1l2202:	
  8034                           
  8035                           ;main.c: 85: }
  8036                           ;main.c: 86: }
  8037                           ;main.c: 87: }
  8038                           ;main.c: 89: if(IOCAFbits.IOCAF3 == 1){
  8039  004A  0027               	movlb	7	; select bank7
  8040  004B  1D93               	btfss	19,3	;volatile
  8041  004C  284F               	goto	i1l2206
  8042                           
  8043                           ;main.c: 90: addAngle();
  8044  004D  3186  264D         	fcall	_addAngle
  8045  004F                     i1l2206:	
  8046                           
  8047                           ;main.c: 91: }
  8048                           ;main.c: 92: IOCAFbits.IOCAF3 = 0;
  8049  004F  0027               	movlb	7	; select bank7
  8050  0050  1193               	bcf	19,3	;volatile
  8051                           
  8052                           ;main.c: 94: PIR1bits.SSP1IF = 0 ;
  8053  0051  0020               	movlb	0	; select bank0
  8054  0052  1191               	bcf	17,3	;volatile
  8055                           
  8056                           ;main.c: 95: PIR2bits.SSP2IF = 0 ;
  8057  0053  1192               	bcf	18,3	;volatile
  8058                           
  8059                           ;main.c: 96: PIR0bits.INTF = 0;
  8060  0054  1010               	bcf	16,0	;volatile
  8061                           
  8062                           ;main.c: 97: PIR0bits.IOCIF = 0;
  8063  0055  1210               	bcf	16,4	;volatile
  8064  0056  0877               	movf	??_InterMSSP+4,w
  8065  0057  00FF               	movwf	127
  8066  0058  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  8067  0059  0009               	retfie
  8068  005A                     __end_of_InterMSSP:	
  8069                           
  8070                           	psect	text27
  8071  0555                     __ptext27:	
  8072 ;; *************** function _setSPI1sendData *****************
  8073 ;; Defined at:
  8074 ;;		line 92 in file "D:/programdata/16F18346_Link_IC.X/spiControl.c"
  8075 ;; Parameters:    Size  Location     Type
  8076 ;;		None
  8077 ;; Auto vars:     Size  Location     Type
  8078 ;;		None
  8079 ;; Return value:  Size  Location     Type
  8080 ;;                  1    wreg      void 
  8081 ;; Registers used:
  8082 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8083 ;; Tracked objects:
  8084 ;;		On entry : 0/0
  8085 ;;		On exit  : 0/0
  8086 ;;		Unchanged: 0/0
  8087 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8088 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8089 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8090 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8091 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8092 ;;Total ram usage:        2 bytes
  8093 ;; Hardware stack levels used:    1
  8094 ;; Hardware stack levels required when called:    1
  8095 ;; This function calls:
  8096 ;;		_isSPI2read
  8097 ;; This function is called by:
  8098 ;;		_InterMSSP
  8099 ;; This function uses a non-reentrant model
  8100 ;;
  8101                           
  8102                           
  8103                           ;psect for function _setSPI1sendData
  8104  0555                     _setSPI1sendData:	
  8105                           
  8106                           ;spiControl.c: 93: if(!(isSPI2read() == 1)){
  8107                           
  8108                           ;incstack = 0
  8109                           ; Regs used in _setSPI1sendData: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8110  0555  3186  2634  3185   	fcall	_isSPI2read
  8111  0558  1803               	btfsc	3,0
  8112  0559  2D74               	goto	i1l1986
  8113                           
  8114                           ;spiControl.c: 94: SSP1BUF = spi2_buffer_data[read_count2];
  8115  055A  30F0               	movlw	240
  8116  055B  00F1               	movwf	??_setSPI1sendData
  8117  055C  3025               	movlw	37
  8118  055D  00F2               	movwf	??_setSPI1sendData+1
  8119  055E  0020               	movlb	0	; select bank0
  8120  055F  0842               	movf	_read_count2,w
  8121  0560  0771               	addwf	??_setSPI1sendData,w
  8122  0561  0086               	movwf	6
  8123  0562  0843               	movf	_read_count2+1,w
  8124  0563  3D72               	addwfc	??_setSPI1sendData+1,w
  8125  0564  0087               	movwf	7
  8126  0565  0801               	movf	1,w
  8127  0566  0024               	movlb	4	; select bank4
  8128  0567  0091               	movwf	17	;volatile
  8129                           
  8130                           ;spiControl.c: 95: read_count2++;
  8131  0568  3001               	movlw	1
  8132  0569  0020               	movlb	0	; select bank0
  8133  056A  07C2               	addwf	_read_count2,f
  8134  056B  3000               	movlw	0
  8135  056C  3DC3               	addwfc	_read_count2+1,f
  8136                           
  8137                           ;spiControl.c: 96: if(read_count2 == 256){
  8138  056D  0343               	decf	_read_count2+1,w
  8139  056E  0442               	iorwf	_read_count2,w
  8140  056F  1D03               	btfss	3,2
  8141  0570  0008               	return
  8142                           
  8143                           ;spiControl.c: 97: read_count2 = 0;
  8144  0571  01C2               	clrf	_read_count2
  8145  0572  01C3               	clrf	_read_count2+1
  8146                           
  8147                           ;spiControl.c: 98: }
  8148                           ;spiControl.c: 99: }else{
  8149  0573  0008               	return
  8150  0574                     i1l1986:	
  8151                           
  8152                           ;spiControl.c: 100: SSP1BUF = 0x00;
  8153  0574  0024               	movlb	4	; select bank4
  8154  0575  0191               	clrf	17	;volatile
  8155  0576  0008               	return
  8156  0577                     __end_of_setSPI1sendData:	
  8157                           
  8158                           	psect	text28
  8159  0634                     __ptext28:	
  8160 ;; *************** function _isSPI2read *****************
  8161 ;; Defined at:
  8162 ;;		line 76 in file "D:/programdata/16F18346_Link_IC.X/spiControl.c"
  8163 ;; Parameters:    Size  Location     Type
  8164 ;;		None
  8165 ;; Auto vars:     Size  Location     Type
  8166 ;;		None
  8167 ;; Return value:  Size  Location     Type
  8168 ;;		None               void
  8169 ;; Registers used:
  8170 ;;		wreg, status,2, status,0
  8171 ;; Tracked objects:
  8172 ;;		On entry : 0/0
  8173 ;;		On exit  : 0/0
  8174 ;;		Unchanged: 0/0
  8175 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8176 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8177 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8178 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8179 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8180 ;;Total ram usage:        0 bytes
  8181 ;; Hardware stack levels used:    1
  8182 ;; This function calls:
  8183 ;;		Nothing
  8184 ;; This function is called by:
  8185 ;;		_setSPI1sendData
  8186 ;; This function uses a non-reentrant model
  8187 ;;
  8188                           
  8189                           
  8190                           ;psect for function _isSPI2read
  8191  0634                     _isSPI2read:	
  8192                           
  8193                           ;spiControl.c: 77: if(read_count2 == count2){
  8194                           
  8195                           ;incstack = 0
  8196                           ; Regs used in _isSPI2read: [wreg+status,2+status,0]
  8197  0634  0020               	movlb	0	; select bank0
  8198  0635  0849               	movf	_count2+1,w
  8199  0636  0643               	xorwf	_read_count2+1,w
  8200  0637  1D03               	skipz
  8201  0638  2E3B               	goto	u55_25
  8202  0639  0848               	movf	_count2,w
  8203  063A  0642               	xorwf	_read_count2,w
  8204  063B                     u55_25:	
  8205  063B  1D03               	skipz
  8206  063C  2E3F               	goto	i1l1838
  8207                           
  8208                           ;spiControl.c: 78: return 1;
  8209  063D  1403               	setc
  8210                           
  8211                           ;spiControl.c: 79: }else{
  8212  063E  0008               	return
  8213  063F                     i1l1838:	
  8214                           
  8215                           ;spiControl.c: 80: return 0;
  8216  063F  1003               	clrc
  8217  0640  0008               	return
  8218  0641                     __end_of_isSPI2read:	
  8219                           
  8220                           	psect	text29
  8221  064D                     __ptext29:	
  8222 ;; *************** function _addAngle *****************
  8223 ;; Defined at:
  8224 ;;		line 29 in file "D:/programdata/16F18346_Link_IC.X/IO_control.c"
  8225 ;; Parameters:    Size  Location     Type
  8226 ;;		None
  8227 ;; Auto vars:     Size  Location     Type
  8228 ;;		None
  8229 ;; Return value:  Size  Location     Type
  8230 ;;                  1    wreg      void 
  8231 ;; Registers used:
  8232 ;;		wreg, status,2, status,0, pclath, cstack
  8233 ;; Tracked objects:
  8234 ;;		On entry : 0/0
  8235 ;;		On exit  : 0/0
  8236 ;;		Unchanged: 0/0
  8237 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8238 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8239 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8240 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8241 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8242 ;;Total ram usage:        0 bytes
  8243 ;; Hardware stack levels used:    1
  8244 ;; Hardware stack levels required when called:    1
  8245 ;; This function calls:
  8246 ;;		_setCargoAngle
  8247 ;; This function is called by:
  8248 ;;		_InterMSSP
  8249 ;; This function uses a non-reentrant model
  8250 ;;
  8251                           
  8252                           
  8253                           ;psect for function _addAngle
  8254  064D                     _addAngle:	
  8255                           
  8256                           ;IO_control.c: 30: linkAngle += direction;
  8257                           
  8258                           ;incstack = 0
  8259                           ; Regs used in _addAngle: [wreg+status,2+status,0+pclath+cstack]
  8260  064D  0020               	movlb	0	; select bank0
  8261  064E  086C               	movf	_direction,w
  8262  064F  07B8               	addwf	_linkAngle,f
  8263  0650  086D               	movf	_direction+1,w
  8264  0651  3DB9               	addwfc	_linkAngle+1,f
  8265                           
  8266                           ;IO_control.c: 31: setCargoAngle(linkAngle);
  8267  0652  0839               	movf	_linkAngle+1,w
  8268  0653  00F2               	movwf	setCargoAngle@m_linkAngleTo+1
  8269  0654  0838               	movf	_linkAngle,w
  8270  0655  00F1               	movwf	setCargoAngle@m_linkAngleTo
  8271  0656  3186  2686         	fcall	_setCargoAngle
  8272  0658  0008               	return
  8273  0659                     __end_of_addAngle:	
  8274                           
  8275                           	psect	text30
  8276  0686                     __ptext30:	
  8277 ;; *************** function _setCargoAngle *****************
  8278 ;; Defined at:
  8279 ;;		line 40 in file "struct.c"
  8280 ;; Parameters:    Size  Location     Type
  8281 ;;  m_linkAngleT    2    0[COMMON] int 
  8282 ;; Auto vars:     Size  Location     Type
  8283 ;;		None
  8284 ;; Return value:  Size  Location     Type
  8285 ;;                  1    wreg      void 
  8286 ;; Registers used:
  8287 ;;		wreg
  8288 ;; Tracked objects:
  8289 ;;		On entry : 0/0
  8290 ;;		On exit  : 0/0
  8291 ;;		Unchanged: 0/0
  8292 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8293 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8294 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8295 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8296 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8297 ;;Total ram usage:        2 bytes
  8298 ;; Hardware stack levels used:    1
  8299 ;; This function calls:
  8300 ;;		Nothing
  8301 ;; This function is called by:
  8302 ;;		_addAngle
  8303 ;; This function uses a non-reentrant model
  8304 ;;
  8305                           
  8306                           
  8307                           ;psect for function _setCargoAngle
  8308  0686                     _setCargoAngle:	
  8309                           
  8310                           ;struct.c: 41: cargoData.linkAngleTo = m_linkAngleTo;
  8311                           
  8312                           ;incstack = 0
  8313                           ; Regs used in _setCargoAngle: [wreg]
  8314  0686  0872               	movf	setCargoAngle@m_linkAngleTo+1,w
  8315  0687  0020               	movlb	0	; select bank0
  8316  0688  00A6               	movwf	_cargoData+6
  8317  0689  0871               	movf	setCargoAngle@m_linkAngleTo,w
  8318  068A  00A5               	movwf	_cargoData+5
  8319  068B  0008               	return
  8320  068C                     __end_of_setCargoAngle:	
  8321  007E                     btemp	set	126	;btemp
  8322  007E                     int$flags	set	126
  8323  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    4
    Data        4
    BSS         122
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      10
    BANK0            80     26      80
    BANK1            80      7      78
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           64      0       0
    BANK16            0      0       0
    BANK17            0      0       0
    BANK18            0      0       0
    BANK19            0      0       0
    BANK20            0      0       0
    BANK21            0      0       0
    BANK22            0      0       0
    BANK23            0      0       0
    BANK24            0      0       0
    BANK25            0      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _InterMSSP in COMMON

    _InterMSSP->_setSPI1sendData
    _addAngle->_setCargoAngle

Critical Paths under _main in BANK0

    _main->_setComunicateMode
    _spi_init->_spi1_init
    _spi_init->_spi2_init
    _setComunicateMode->_readCargo
    _readCargo->_getCargoData
    _Calibrate_download->_isEndpoint
    _isEndpoint->_setSPI1sendDataManual
    _initTrain->_isTrainSt
    _init->_initbuffer

Critical Paths under _InterMSSP in BANK0

    None.

Critical Paths under _main in BANK1

    _setComunicateMode->_readCargo

Critical Paths under _InterMSSP in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterMSSP in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterMSSP in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _InterMSSP in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _InterMSSP in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _InterMSSP in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _InterMSSP in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _InterMSSP in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _InterMSSP in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _InterMSSP in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _InterMSSP in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _InterMSSP in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _InterMSSP in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _InterMSSP in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _InterMSSP in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _InterMSSP in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _InterMSSP in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _InterMSSP in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _InterMSSP in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _InterMSSP in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _InterMSSP in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _InterMSSP in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _InterMSSP in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _InterMSSP in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _InterMSSP in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1099
                      _InitCalibrate
                               _init
                          _initCargo
                         _initComand
                     _initComu_types
                          _initTrain
                            _io_init
                         _isSPI1read
                         _read_train
                  _setComunicateMode
                    _setSPI2sendData
                           _spi_init
 ---------------------------------------------------------------------------------
 (1) _spi_init                                             0     0      0       6
                          _spi1_init
                          _spi2_init
 ---------------------------------------------------------------------------------
 (2) _spi2_init                                            2     2      0       3
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _spi1_init                                            2     2      0       3
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _setSPI2sendData                                      4     4      0       0
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _setComunicateMode                                    4     4      0     867
                                             22 BANK0      4     4      0
                 _Calibrate_download
                          _readCargo
 ---------------------------------------------------------------------------------
 (2) _readCargo                                           12    12      0     285
                                             17 BANK0      5     5      0
                                              0 BANK1      7     7      0
                       _clutchaction
                       _getCargoData
                       _restartCargo
 ---------------------------------------------------------------------------------
 (3) _getCargoData                                        17     1     16       0
                                              0 BANK0     17     1     16
 ---------------------------------------------------------------------------------
 (3) _clutchaction                                         1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _Calibrate_download                                  13    13      0     421
                                              7 BANK0     13    13      0
                      _InitCalibrate
                         _isEndpoint
 ---------------------------------------------------------------------------------
 (3) _isEndpoint                                           6     6      0      71
                                              1 BANK0      6     6      0
              _setSPI1sendDataManual
 ---------------------------------------------------------------------------------
 (4) _setSPI1sendDataManual                                1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _InitCalibrate                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _read_train                                           4     4      0      65
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _isSPI1read                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _io_init                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initTrain                                            3     3      0      31
                                              9 BANK0      3     3      0
                          _isTrainSt
                     _resetTrainData
 ---------------------------------------------------------------------------------
 (2) _resetTrainData                                       0     0      0       0
                       _restartCargo
 ---------------------------------------------------------------------------------
 (3) _restartCargo                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _isTrainSt                                            9     9      0      31
                                              0 BANK0      9     9      0
 ---------------------------------------------------------------------------------
 (1) _initComu_types                                       1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _initComand                                           1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _initCargo                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0     130
                              _clear
                         _initbuffer
 ---------------------------------------------------------------------------------
 (2) _initbuffer                                           4     4      0     130
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) _clear                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _InterMSSP                                            5     5      0      75
                                              2 COMMON     5     5      0
                           _addAngle
                    _setSPI1sendData
 ---------------------------------------------------------------------------------
 (6) _setSPI1sendData                                      2     2      0       0
                                              0 COMMON     2     2      0
                         _isSPI2read
 ---------------------------------------------------------------------------------
 (7) _isSPI2read                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _addAngle                                             0     0      0      75
                      _setCargoAngle
 ---------------------------------------------------------------------------------
 (7) _setCargoAngle                                        2     0      2      75
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _InitCalibrate
   _init
     _clear
     _initbuffer
   _initCargo
   _initComand
   _initComu_types
   _initTrain
     _isTrainSt
     _resetTrainData
       _restartCargo
   _io_init
   _isSPI1read
   _read_train
   _setComunicateMode
     _Calibrate_download
       _InitCalibrate
       _isEndpoint
         _setSPI1sendDataManual
     _readCargo
       _clutchaction
       _getCargoData
       _restartCargo
   _setSPI2sendData
   _spi_init
     _spi1_init
     _spi2_init

 _InterMSSP (ROOT)
   _addAngle
     _setCargoAngle
   _setSPI1sendData
     _isSPI2read

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       2       1       14.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      7       A       2       71.4%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     1A      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      7      4E       7       97.5%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
ABS                  0      0      A8      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
DATA                 0      0      A8      28        0.0%
BANK11              50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITBANK12           50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12              50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITBANK13           50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13              50      0       0      33        0.0%
BITBANK14           50      0       0      34        0.0%
BANK14              50      0       0      35        0.0%
BITBANK15           50      0       0      36        0.0%
BANK15              40      0       0      37        0.0%
BITBANK16           50      0       0      38        0.0%
BANK16               0      0       0      39        0.0%
BITBANK17           50      0       0      40        0.0%
BANK17               0      0       0      41        0.0%
BITBANK18           50      0       0      42        0.0%
BANK18               0      0       0      43        0.0%
BITBANK19           50      0       0      44        0.0%
BANK19               0      0       0      45        0.0%
BITBANK20           50      0       0      46        0.0%
BANK20               0      0       0      47        0.0%
BITBANK21           50      0       0      48        0.0%
BANK21               0      0       0      49        0.0%
BITBANK22           50      0       0      50        0.0%
BANK22               0      0       0      51        0.0%
BITBANK23           50      0       0      52        0.0%
BANK23               0      0       0      53        0.0%
BITBANK24           50      0       0      54        0.0%
BANK24               0      0       0      55        0.0%
BITBANK25           20      0       0      56        0.0%
BANK25               0      0       0      57        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Mon May 14 10:56:13 2018

                  _InitCalibrate 05B7                                pc 0002                      __CFG_CP$OFF 0000  
                 _cargoLengthnuf 0036                              l134 037C                              l341 0661  
                            l414 0230                              l382 0489                              l448 0456  
                            l485 00C9                              l487 00D5                     __CFG_CPD$OFF 0000  
                            wreg 0009          setComunicateMode@m_type 0069                             S3044 0597  
                           S3048 05E5         Calibrate_download@bufint 0063                     __CFG_LVP$OFF 0000  
                           l3040 0442                             l3050 03BB                             l3042 015D  
                           l3046 0244                             l2600 01B3                             l2610 01D9  
                           l2602 01C5                             l2604 01CB                             l2700 0167  
                           l2622 0235                             l2614 01F9                             l2606 01D3  
                           l2630 023E                             l2528 0419                             l2624 0236  
                           l2616 0211                             l2632 024E                             l2618 022C  
                           l2820 0625                             l2492 0474                             l2660 00E2  
                           l2670 00FF                             l2662 00E9                             l2910 04B6  
                           l2902 04A6                             l2680 010A                             l2672 0102  
                           l2664 00F0                             l2912 04B9                             l2594 01A4  
                           l2690 0130                             l2682 010C                             l2674 0104  
                           l2834 0434                             l2780 0377                             l2692 0140  
                           l2676 0106                             l2844 043C                             l2870 03CF  
                           l2854 039A                             l2694 0153                             l2686 0117  
                           l2678 0108                             l2838 0438                             l2846 0450  
                           l2856 03A3                             l2864 03B6                             l2858 03B0  
                           l2866 03C9                             l2698 0158                             l2882 0517  
                           u1060 0615                             u1125 01F2                             u1205 0129  
                           u1135 020A                             u1215 0139                             u1145 0222  
                           u1225 0149                             u1170 00C2                             u1075 04C9  
                           u1235 0172                             u1165 0263                             u1095 03EE  
                           u1255 0382                             u1265 0621                             u1275 0428  
                           _WPUA 020C                             _WPUB 020D                             _WPUC 020E  
                   __CFG_WRT$OFF 0000                    __CFG_FCMEN$ON 0000                    ?_clutchaction 0071  
                           _main 048F                             _init 04E7                             fsr0h 0005  
                           fsr1h 0007                             indf0 0000                             fsr0l 0004  
                           indf1 0001                             fsr1l 0006                             btemp 007E  
                  __CFG_BOREN$ON 0000                             start 005A                    __CFG_CSWEN$ON 0000  
                 ?_InitCalibrate 0071                            ?_main 0071                            ?_init 0071  
                  __CFG_WDTE$OFF 0000                   __CFG_DEBUG$OFF 0000             __end_of_getCargoData 061A  
                          _PORTA 000C                            _PORTB 000D                            _PORTC 000E  
                          u55_25 063B                            _TRISA 008C                            _TRISB 008D  
                          _TRISC 008E               setComunicateMode@i 006A   __size_of_setSPI1sendDataManual 0006  
  __end_of_setSPI1sendDataManual 0686                            _clear 0627                  __end_of_io_init 0677  
                 __pbitbssCOMMON 0380                   ??_clutchaction 0052                   __CFG_BORV$HIGH 0000  
                          status 0003                            wtemp0 007E                   __CFG_MCLRE$OFF 0000  
                __initialization 005C                     __end_of_main 04BD                     __end_of_init 050F  
                         ??_main 006C                           ??_init 0056                           ?_clear 0071  
               __end_of_addAngle 0659                           _ANSELA 018C                           _ANSELB 018D  
                         _ANSELC 018E                           _RA2PPS 0E92                           _RC2PPS 0EA2  
                         i1l2202 004A                           _RB7PPS 0E9F                           i1l2206 004F  
                         i1l2190 002A                           i1l1838 063F                           i1l1986 0574  
       __size_of_setSPI1sendData 0022               __size_of_InterMSSP 0056                  ??_InitCalibrate 0052  
              __end_of_VENDER_ID 0694                   __CFG_PWRTE$OFF 0000         __size_of_setSPI2sendData 0024  
        __size_of_resetTrainData 0009      __size_of_Calibrate_download 00E7                   __CFG_STVREN$ON 0000  
                         _count1 004A                           _count2 0048                           _readNG 004C  
                         _readOK 004D          __size_of_initComu_types 006D                        ??_io_init 0052  
               __end_of_spi_init 066E                      initbuffer@i 0054                     isTrainSt@buf 005A  
                   _ra3condision 0384          __end_of__initialization 008E            Calibrate_download@buf 0062  
                 __pcstackCOMMON 0071                     __pidataBANK0 068C               __end_of_MACHINE_ID 0692  
                  __end_of_clear 0634            __size_of_getCargoData 0010             __end_of_clutchaction 0664  
              __end_of_InterMSSP 005A                  __CFG_LPBOREN$ON 0000                          ??_clear 0052  
                     __pbssBANK0 0020                       __pbssBANK1 00A0               __size_of_isTrainSt 0045  
            clutchaction@comannd 0052               __size_of_initCargo 0017               __size_of_readCargo 00F6  
                _startTrainBytes 00E3               __size_of_initTrain 0048                       _isSPI1read 061A  
                     _isSPI2read 0634                     _getCargoData 060A                       __pmaintext 048F  
             __size_of_spi1_init 0020               __size_of_spi2_init 0022                  __CFG_PPS1WAY$ON 0000  
              ??_setSPI1sendData 0071                       __pintentry 0004  Calibrate_download@spi_Read_data 0065  
                      ?_addAngle 0071                ??_setSPI2sendData 0052              __CFG_RSTOSC$HFINT32 0000  
                     _isEndpoint 0457                     _isCalibrated 0386           __size_of_setCargoAngle 0006  
                        _SSP1BUF 0211                          _SSP2BUF 0219                       _comu_types 00B2  
                 _resetTrainData 0677                       _initComand 02DC                        ?_spi_init 0071  
                     ??_addAngle 0073                __end_of_isTrainSt 041B                       _initbuffer 04BD  
                 _initComu_types 026F               isEndpoint@spi2data 0058                          __ptext1 0664  
                        __ptext2 0533                          __ptext3 0577                          __ptext4 050F  
                        __ptext5 041B                          __ptext6 0092                          __ptext7 060A  
                        __ptext8 0659                __end_of_initCargo 05E5                          __ptext9 0188  
                     _read_train 0391                          _command 00C4                __end_of_readCargo 0188  
                        _counta2 003E                          _io_init 066E                __end_of_initTrain 0391  
                  ?_restartCargo 0071                        _IOCAFbits 0393                        _IOCANbits 0392  
                      _IOCAPbits 0391                __end_of_spi1_init 0597                __end_of_spi2_init 0555  
                        _st_type 0050                          clrloop0 0642            _setSPI1sendDataManual 0680  
           end_of_initialization 008E           __end_of_resetTrainData 0680                      ?_isSPI1read 0071  
                    ?_isSPI2read 0071                    _setCargoAngle 0686            __size_of_clutchaction 000B  
                     ??_spi_init 0054                        _VENDER_ID 0692                 readCargo@buflong 00E7  
         __end_of_initComu_types 02DC                   spi1_init@dummy 0053                      ?_isEndpoint 0071  
                 ??_restartCargo 0052                        _TRISBbits 008D                        _TRISCbits 008E  
               __CFG_FEXTOSC$OFF 0000                   spi2_init@dummy 0053                     _clutchaction 0659  
                ?_resetTrainData 0071       __end_of_Calibrate_download 026F                   ?_setCargoAngle 0071  
                    ?_initComand 0071            __end_of_InitCalibrate 05CE                  ?_initComu_types 0071  
                    ?_initbuffer 0071                      ?_read_train 0071              __size_of_isSPI1read 000D  
            __size_of_isSPI2read 000D                    __pbitnvCOMMON 03C0              start_initialization 005C  
         ?_setSPI1sendDataManual 0071                        _InterMSSP 0004                   _isEndPointTrig 03C0  
                _setSPI1sendData 0555                  _setSPI2sendData 050F              __size_of_isEndpoint 0038  
                    __pdataBANK0 006C                _setComunicateMode 041B                __size_of_addAngle 000C  
             ?_setComunicateMode 0071                      __pbssBIGRAM 24F0                      __pbssCOMMON 0079  
                      ___latbits 0003                    __pcstackBANK0 0052                    __pcstackBANK1 00E7  
                    _cargo_index 00A0              ??_setComunicateMode 0068              __size_of_initComand 006D  
                     ?_InterMSSP 0071                        _calibdata 00D6              __size_of_initbuffer 002A  
                      _cargoData 0020                  ??_setCargoAngle 0073                _cargoWorkingCount 00DF  
            __size_of_read_train 0045             __end_of_restartCargo 060A            _spi1_send_buffer_data 24F0  
      Calibrate_download@buflong 005E        __end_of_setComunicateMode 0457                        _direction 006C  
        readCargo@spi1_Read_data 00ED                __size_of_spi_init 000A                        __pswtext1 0597  
                      __pswtext2 05E5                        _isMycargo 03C1                         ?_io_init 0071  
                      _isTrainSt 03D6                        _countabuf 0044                        _initCargo 05CE  
                      _readCargo 0092                        _linkAngle 0038          __end_of_setSPI1sendData 0577  
                      _initTrain 0349                   __size_of_clear 000D          __end_of_setSPI2sendData 0533  
                      _spi1_init 0577                        _spi2_init 0533                         _LATAbits 010C  
                   ??_isSPI1read 0052                     ??_isSPI2read 0071                        clear_ram0 0641  
     setCargoAngle@m_linkAngleTo 0071                         _PIE0bits 0090                         _PIE1bits 0091  
                       _PIE2bits 0092                        _send_data 004F                         _PIR0bits 0010  
                       _PIR1bits 0011                         _PIR2bits 0012                  readCargo@bufint 00EB  
                   ??_isEndpoint 0053                       ?_isTrainSt 0071               __end_of_isSPI1read 0627  
             __end_of_isSPI2read 0641                       ?_initCargo 0071                    _SSP1SSPPSbits 0E22  
                     ?_readCargo 0071                       ?_initTrain 0071                      ??_InterMSSP 0073  
                  _SSP2SSPPSbits 0E1F                 ??_resetTrainData 0052                       ?_spi1_init 0071  
                     ?_spi2_init 0071                 ??_initComu_types 0052               __end_of_isEndpoint 048F  
                   ??_initComand 0052       __size_of_setComunicateMode 003C                         _addAngle 064D  
                   ??_initbuffer 0052                 _spi1_buffer_data 26F0                     ??_read_train 0052  
             _Calibrate_download 0188          ??_setSPI1sendDataManual 0052                   _workingcounta0 0383  
                 _workingcounta1 0382                   _workingcounta2 0381                   _workingcounta3 0380  
               __size_of_io_init 0009                       _MACHINE_ID 0690                      _read_count1 0046  
                    _read_count2 0042              ?_Calibrate_download 0071                 ?_setSPI1sendData 0071  
                       __ptext10 0457                         __ptext11 0680                         __ptext20 026F  
                       __ptext12 05B7                         __ptext21 02DC                         __ptext13 0391  
                       __ptext30 0686                         __ptext22 05CE                         __ptext14 061A  
                       __ptext23 04E7                         __ptext15 066E                         __ptext24 04BD  
                       __ptext16 0349                         __ptext25 0627                         __ptext17 0677  
                       __ptext18 05F9                         __ptext27 0555                         __ptext19 03D6  
                       __ptext28 0634                         __ptext29 064D                     _SSP1CON1bits 0215  
                   _SSP1CON3bits 0217               __end_of_initComand 0349                 ?_setSPI2sendData 0071  
                   _SSP2CON1bits 021D                   _spi1_Read_data 0079                     _SSP2CON3bits 021F  
          __size_of_restartCargo 0011                         _linkInfo 0030                    __size_of_main 002E  
                  __size_of_init 0028               __end_of_initbuffer 04E7                    ?_getCargoData 0052  
                 _spi2_Read_data 004E               __end_of_read_train 03D6             ??_Calibrate_download 0059  
                    _isreadTrain 0385                         _spi_init 0664                         int$flags 007E  
                       _trainPos 0040                   _spi2_Send_data 0051                     _SSP1STATbits 0214  
               _spi2_buffer_data 25F0                     _SSP2STATbits 021C                    _st_dataLength 006E  
                     _INLVLAbits 038C                       _INLVLBbits 038D                       _INLVLCbits 038E  
                    ??_isTrainSt 0052                      _OSCTUNEbits 091E                       _INTCONbits 000B  
                    ??_initCargo 0052                     _restartCargo 05F9                      ??_readCargo 0063  
                    ??_initTrain 005B           __size_of_InitCalibrate 0017                      _send_count1 003A  
                       intlevel1 0000                      ??_spi1_init 0052                      ??_spi2_init 0052  
                 ??_getCargoData 0062                __CFG_CLKOUTEN$OFF 0000                       _OSCFRQbits 091F  
                  __pstringtext1 0690                    __pstringtext2 0692        setSPI1sendDataManual@data 0052  
               read_train@bufint 0054                  _spi1_send_count 003C            __end_of_setCargoAngle 068C  

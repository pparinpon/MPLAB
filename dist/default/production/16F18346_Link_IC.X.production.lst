

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Wed Jun 06 20:08:10 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F18346
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	eeprom_data,global,class=EEDATA,space=3,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	idataBANK1,global,class=CODE,delta=2
     7                           	psect	stringtext1,global,class=STRCODE,delta=2
     8                           	psect	stringtext2,global,class=STRCODE,delta=2
     9                           	psect	bitnvCOMMON,global,bit,class=COMMON,space=1,delta=1
    10                           	psect	cinit,global,class=CODE,merge=1,delta=2
    11                           	psect	bitbssCOMMON,global,bit,class=COMMON,space=1,delta=1
    12                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    18                           	psect	clrtext,global,class=CODE,delta=2
    19                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    20                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    21                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    22                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    23                           	psect	text1,local,class=CODE,merge=1,delta=2
    24                           	psect	text2,local,class=CODE,merge=1,delta=2
    25                           	psect	text3,local,class=CODE,merge=1,delta=2
    26                           	psect	text4,local,class=CODE,merge=1,delta=2
    27                           	psect	text5,local,class=CODE,merge=1,delta=2
    28                           	psect	text6,local,class=CODE,merge=1,delta=2
    29                           	psect	swtext1,local,class=CONST,delta=2
    30                           	psect	text7,local,class=CODE,merge=1,delta=2
    31                           	psect	text8,local,class=CODE,merge=1,delta=2
    32                           	psect	swtext2,local,class=CONST,delta=2
    33                           	psect	text9,local,class=CODE,merge=1,delta=2
    34                           	psect	text10,local,class=CODE,merge=1,delta=2
    35                           	psect	text11,local,class=CODE,merge=1,delta=2
    36                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text15,local,class=CODE,merge=1,delta=2
    40                           	psect	text16,local,class=CODE,merge=1,delta=2
    41                           	psect	text17,local,class=CODE,merge=1,delta=2
    42                           	psect	text18,local,class=CODE,merge=1,delta=2
    43                           	psect	text19,local,class=CODE,merge=1,delta=2
    44                           	psect	text20,local,class=CODE,merge=1,delta=2
    45                           	psect	text21,local,class=CODE,merge=1,delta=2
    46                           	psect	text22,local,class=CODE,merge=1,delta=2
    47                           	psect	text23,local,class=CODE,merge=1,delta=2
    48                           	psect	text24,local,class=CODE,merge=1,delta=2
    49                           	psect	text25,local,class=CODE,merge=1,delta=2
    50                           	psect	text26,local,class=CODE,merge=1,delta=2
    51                           	psect	text27,local,class=CODE,merge=1,delta=2
    52                           	psect	text28,local,class=CODE,merge=1,delta=2
    53                           	psect	text29,local,class=CODE,merge=1,delta=2
    54                           	psect	intentry,global,class=CODE,delta=2
    55                           	psect	text31,local,class=CODE,merge=1,delta=2
    56                           	psect	text32,local,class=CODE,merge=1,delta=2
    57                           	psect	text33,local,class=CODE,merge=1,delta=2
    58                           	psect	text34,local,class=CODE,merge=1,delta=2
    59                           	dabs	1,0xCA0,32
    60                           	dabs	1,0xC20,80
    61                           	dabs	1,0xBA0,80
    62                           	dabs	1,0xB30,64
    63                           	dabs	1,0xB20,16
    64                           	dabs	1,0xAA0,80
    65                           	dabs	1,0xA20,80
    66                           	dabs	1,0x9A0,80
    67                           	dabs	1,0x920,80
    68                           	dabs	1,0x8A0,80
    69                           	dabs	1,0x820,80
    70                           	dabs	1,0x7E0,16
    71                           	dabs	1,0x24F0,0,_spi1_send_buffer_data
    72                           	dabs	1,0x25F0,0,_spi2_buffer_data
    73                           	dabs	1,0x26F0,0,_spi1_buffer_data
    74                           	dabs	1,0x7E,2
    75  0000                     
    76                           ; Version 1.45
    77                           ; Generated 16/11/2017 GMT
    78                           ; 
    79                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    80                           ; All rights reserved.
    81                           ; 
    82                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    83                           ; 
    84                           ; Redistribution and use in source and binary forms, with or without modification, are
    85                           ; permitted provided that the following conditions are met:
    86                           ; 
    87                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    88                           ;        conditions and the following disclaimer.
    89                           ; 
    90                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    91                           ;        of conditions and the following disclaimer in the documentation and/or other
    92                           ;        materials provided with the distribution.
    93                           ; 
    94                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    95                           ;        software without specific prior written permission.
    96                           ; 
    97                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    98                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    99                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   100                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   101                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   102                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   103                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   104                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   105                           ; 
   106                           ; 
   107                           ; Code-generator required, PIC16F18346 Definitions
   108                           ; 
   109                           ; SFR Addresses
   110  0000                     	;# 
   111  0001                     	;# 
   112  0002                     	;# 
   113  0003                     	;# 
   114  0004                     	;# 
   115  0005                     	;# 
   116  0006                     	;# 
   117  0007                     	;# 
   118  0008                     	;# 
   119  0009                     	;# 
   120  000A                     	;# 
   121  000B                     	;# 
   122  000C                     	;# 
   123  000D                     	;# 
   124  000E                     	;# 
   125  0010                     	;# 
   126  0011                     	;# 
   127  0012                     	;# 
   128  0013                     	;# 
   129  0014                     	;# 
   130  0015                     	;# 
   131  0015                     	;# 
   132  0016                     	;# 
   133  0016                     	;# 
   134  0017                     	;# 
   135  0018                     	;# 
   136  0019                     	;# 
   137  0019                     	;# 
   138  001A                     	;# 
   139  001B                     	;# 
   140  001C                     	;# 
   141  001D                     	;# 
   142  001E                     	;# 
   143  001F                     	;# 
   144  008C                     	;# 
   145  008D                     	;# 
   146  008E                     	;# 
   147  0090                     	;# 
   148  0091                     	;# 
   149  0092                     	;# 
   150  0093                     	;# 
   151  0094                     	;# 
   152  0097                     	;# 
   153  009B                     	;# 
   154  009B                     	;# 
   155  009C                     	;# 
   156  009D                     	;# 
   157  009E                     	;# 
   158  009F                     	;# 
   159  010C                     	;# 
   160  010D                     	;# 
   161  010E                     	;# 
   162  0111                     	;# 
   163  0112                     	;# 
   164  0113                     	;# 
   165  0114                     	;# 
   166  0115                     	;# 
   167  0116                     	;# 
   168  0117                     	;# 
   169  0118                     	;# 
   170  0119                     	;# 
   171  018C                     	;# 
   172  018D                     	;# 
   173  018E                     	;# 
   174  0197                     	;# 
   175  0199                     	;# 
   176  0199                     	;# 
   177  0199                     	;# 
   178  019A                     	;# 
   179  019A                     	;# 
   180  019A                     	;# 
   181  019B                     	;# 
   182  019B                     	;# 
   183  019B                     	;# 
   184  019B                     	;# 
   185  019B                     	;# 
   186  019C                     	;# 
   187  019C                     	;# 
   188  019C                     	;# 
   189  019D                     	;# 
   190  019D                     	;# 
   191  019D                     	;# 
   192  019E                     	;# 
   193  019E                     	;# 
   194  019E                     	;# 
   195  019F                     	;# 
   196  019F                     	;# 
   197  019F                     	;# 
   198  019F                     	;# 
   199  019F                     	;# 
   200  020C                     	;# 
   201  020D                     	;# 
   202  020E                     	;# 
   203  0211                     	;# 
   204  0211                     	;# 
   205  0212                     	;# 
   206  0212                     	;# 
   207  0213                     	;# 
   208  0213                     	;# 
   209  0214                     	;# 
   210  0214                     	;# 
   211  0215                     	;# 
   212  0215                     	;# 
   213  0215                     	;# 
   214  0215                     	;# 
   215  0216                     	;# 
   216  0216                     	;# 
   217  0217                     	;# 
   218  0217                     	;# 
   219  0219                     	;# 
   220  021A                     	;# 
   221  021B                     	;# 
   222  021C                     	;# 
   223  021D                     	;# 
   224  021D                     	;# 
   225  021E                     	;# 
   226  021F                     	;# 
   227  028C                     	;# 
   228  028D                     	;# 
   229  028E                     	;# 
   230  0291                     	;# 
   231  0291                     	;# 
   232  0292                     	;# 
   233  0293                     	;# 
   234  0294                     	;# 
   235  0295                     	;# 
   236  0295                     	;# 
   237  0296                     	;# 
   238  0297                     	;# 
   239  0298                     	;# 
   240  029F                     	;# 
   241  030C                     	;# 
   242  030D                     	;# 
   243  030E                     	;# 
   244  0311                     	;# 
   245  0311                     	;# 
   246  0312                     	;# 
   247  0313                     	;# 
   248  0314                     	;# 
   249  0315                     	;# 
   250  0315                     	;# 
   251  0316                     	;# 
   252  0317                     	;# 
   253  0318                     	;# 
   254  038C                     	;# 
   255  038D                     	;# 
   256  038E                     	;# 
   257  0391                     	;# 
   258  0392                     	;# 
   259  0393                     	;# 
   260  0394                     	;# 
   261  0395                     	;# 
   262  0396                     	;# 
   263  0397                     	;# 
   264  0398                     	;# 
   265  0399                     	;# 
   266  039A                     	;# 
   267  039C                     	;# 
   268  039D                     	;# 
   269  039E                     	;# 
   270  039F                     	;# 
   271  0411                     	;# 
   272  0411                     	;# 
   273  0412                     	;# 
   274  0413                     	;# 
   275  0414                     	;# 
   276  0415                     	;# 
   277  0416                     	;# 
   278  0417                     	;# 
   279  0418                     	;# 
   280  0418                     	;# 
   281  0419                     	;# 
   282  041A                     	;# 
   283  041B                     	;# 
   284  041C                     	;# 
   285  041D                     	;# 
   286  041E                     	;# 
   287  041F                     	;# 
   288  0498                     	;# 
   289  0498                     	;# 
   290  0499                     	;# 
   291  049A                     	;# 
   292  049B                     	;# 
   293  049B                     	;# 
   294  049C                     	;# 
   295  049D                     	;# 
   296  049E                     	;# 
   297  049F                     	;# 
   298  0617                     	;# 
   299  0618                     	;# 
   300  0619                     	;# 
   301  0619                     	;# 
   302  061A                     	;# 
   303  061B                     	;# 
   304  061C                     	;# 
   305  061C                     	;# 
   306  061F                     	;# 
   307  0691                     	;# 
   308  0692                     	;# 
   309  0693                     	;# 
   310  0694                     	;# 
   311  0695                     	;# 
   312  0696                     	;# 
   313  0697                     	;# 
   314  0698                     	;# 
   315  0699                     	;# 
   316  0711                     	;# 
   317  0712                     	;# 
   318  0713                     	;# 
   319  0714                     	;# 
   320  0715                     	;# 
   321  0716                     	;# 
   322  0717                     	;# 
   323  0718                     	;# 
   324  0719                     	;# 
   325  0891                     	;# 
   326  0891                     	;# 
   327  0891                     	;# 
   328  0891                     	;# 
   329  0891                     	;# 
   330  0891                     	;# 
   331  0892                     	;# 
   332  0892                     	;# 
   333  0892                     	;# 
   334  0893                     	;# 
   335  0893                     	;# 
   336  0893                     	;# 
   337  0893                     	;# 
   338  0893                     	;# 
   339  0893                     	;# 
   340  0894                     	;# 
   341  0894                     	;# 
   342  0894                     	;# 
   343  0895                     	;# 
   344  0895                     	;# 
   345  0895                     	;# 
   346  0896                     	;# 
   347  0896                     	;# 
   348  0896                     	;# 
   349  089B                     	;# 
   350  0911                     	;# 
   351  0912                     	;# 
   352  0913                     	;# 
   353  0914                     	;# 
   354  0915                     	;# 
   355  0916                     	;# 
   356  0918                     	;# 
   357  0919                     	;# 
   358  091A                     	;# 
   359  091B                     	;# 
   360  091C                     	;# 
   361  091D                     	;# 
   362  091E                     	;# 
   363  091F                     	;# 
   364  0E0F                     	;# 
   365  0E10                     	;# 
   366  0E11                     	;# 
   367  0E12                     	;# 
   368  0E13                     	;# 
   369  0E14                     	;# 
   370  0E15                     	;# 
   371  0E16                     	;# 
   372  0E17                     	;# 
   373  0E18                     	;# 
   374  0E19                     	;# 
   375  0E1A                     	;# 
   376  0E1B                     	;# 
   377  0E1C                     	;# 
   378  0E1D                     	;# 
   379  0E1E                     	;# 
   380  0E1F                     	;# 
   381  0E20                     	;# 
   382  0E21                     	;# 
   383  0E22                     	;# 
   384  0E24                     	;# 
   385  0E25                     	;# 
   386  0E28                     	;# 
   387  0E29                     	;# 
   388  0E2A                     	;# 
   389  0E2B                     	;# 
   390  0E2C                     	;# 
   391  0E2D                     	;# 
   392  0E2E                     	;# 
   393  0E2F                     	;# 
   394  0E90                     	;# 
   395  0E91                     	;# 
   396  0E92                     	;# 
   397  0E94                     	;# 
   398  0E95                     	;# 
   399  0E9C                     	;# 
   400  0E9D                     	;# 
   401  0E9E                     	;# 
   402  0E9F                     	;# 
   403  0EA0                     	;# 
   404  0EA1                     	;# 
   405  0EA2                     	;# 
   406  0EA3                     	;# 
   407  0EA4                     	;# 
   408  0EA5                     	;# 
   409  0EA6                     	;# 
   410  0EA7                     	;# 
   411  0F0F                     	;# 
   412  0F10                     	;# 
   413  0F11                     	;# 
   414  0F12                     	;# 
   415  0F13                     	;# 
   416  0F14                     	;# 
   417  0F15                     	;# 
   418  0F16                     	;# 
   419  0F17                     	;# 
   420  0F18                     	;# 
   421  0F19                     	;# 
   422  0F1A                     	;# 
   423  0F1B                     	;# 
   424  0F1C                     	;# 
   425  0F1D                     	;# 
   426  0F1E                     	;# 
   427  0F1F                     	;# 
   428  0F20                     	;# 
   429  0F21                     	;# 
   430  0F22                     	;# 
   431  0F23                     	;# 
   432  0F24                     	;# 
   433  0F25                     	;# 
   434  0F26                     	;# 
   435  0F27                     	;# 
   436  0F28                     	;# 
   437  0F29                     	;# 
   438  0F2A                     	;# 
   439  0F2B                     	;# 
   440  0F2C                     	;# 
   441  0F2D                     	;# 
   442  0F2E                     	;# 
   443  0F2F                     	;# 
   444  0F30                     	;# 
   445  0F31                     	;# 
   446  0F32                     	;# 
   447  0F33                     	;# 
   448  0F34                     	;# 
   449  0F35                     	;# 
   450  0F36                     	;# 
   451  0F37                     	;# 
   452  0FE4                     	;# 
   453  0FE5                     	;# 
   454  0FE6                     	;# 
   455  0FE7                     	;# 
   456  0FE8                     	;# 
   457  0FE9                     	;# 
   458  0FEA                     	;# 
   459  0FEB                     	;# 
   460  0FED                     	;# 
   461  0FEE                     	;# 
   462  0FEF                     	;# 
   463  0000                     	;# 
   464  0001                     	;# 
   465  0002                     	;# 
   466  0003                     	;# 
   467  0004                     	;# 
   468  0005                     	;# 
   469  0006                     	;# 
   470  0007                     	;# 
   471  0008                     	;# 
   472  0009                     	;# 
   473  000A                     	;# 
   474  000B                     	;# 
   475  000C                     	;# 
   476  000D                     	;# 
   477  000E                     	;# 
   478  0010                     	;# 
   479  0011                     	;# 
   480  0012                     	;# 
   481  0013                     	;# 
   482  0014                     	;# 
   483  0015                     	;# 
   484  0015                     	;# 
   485  0016                     	;# 
   486  0016                     	;# 
   487  0017                     	;# 
   488  0018                     	;# 
   489  0019                     	;# 
   490  0019                     	;# 
   491  001A                     	;# 
   492  001B                     	;# 
   493  001C                     	;# 
   494  001D                     	;# 
   495  001E                     	;# 
   496  001F                     	;# 
   497  008C                     	;# 
   498  008D                     	;# 
   499  008E                     	;# 
   500  0090                     	;# 
   501  0091                     	;# 
   502  0092                     	;# 
   503  0093                     	;# 
   504  0094                     	;# 
   505  0097                     	;# 
   506  009B                     	;# 
   507  009B                     	;# 
   508  009C                     	;# 
   509  009D                     	;# 
   510  009E                     	;# 
   511  009F                     	;# 
   512  010C                     	;# 
   513  010D                     	;# 
   514  010E                     	;# 
   515  0111                     	;# 
   516  0112                     	;# 
   517  0113                     	;# 
   518  0114                     	;# 
   519  0115                     	;# 
   520  0116                     	;# 
   521  0117                     	;# 
   522  0118                     	;# 
   523  0119                     	;# 
   524  018C                     	;# 
   525  018D                     	;# 
   526  018E                     	;# 
   527  0197                     	;# 
   528  0199                     	;# 
   529  0199                     	;# 
   530  0199                     	;# 
   531  019A                     	;# 
   532  019A                     	;# 
   533  019A                     	;# 
   534  019B                     	;# 
   535  019B                     	;# 
   536  019B                     	;# 
   537  019B                     	;# 
   538  019B                     	;# 
   539  019C                     	;# 
   540  019C                     	;# 
   541  019C                     	;# 
   542  019D                     	;# 
   543  019D                     	;# 
   544  019D                     	;# 
   545  019E                     	;# 
   546  019E                     	;# 
   547  019E                     	;# 
   548  019F                     	;# 
   549  019F                     	;# 
   550  019F                     	;# 
   551  019F                     	;# 
   552  019F                     	;# 
   553  020C                     	;# 
   554  020D                     	;# 
   555  020E                     	;# 
   556  0211                     	;# 
   557  0211                     	;# 
   558  0212                     	;# 
   559  0212                     	;# 
   560  0213                     	;# 
   561  0213                     	;# 
   562  0214                     	;# 
   563  0214                     	;# 
   564  0215                     	;# 
   565  0215                     	;# 
   566  0215                     	;# 
   567  0215                     	;# 
   568  0216                     	;# 
   569  0216                     	;# 
   570  0217                     	;# 
   571  0217                     	;# 
   572  0219                     	;# 
   573  021A                     	;# 
   574  021B                     	;# 
   575  021C                     	;# 
   576  021D                     	;# 
   577  021D                     	;# 
   578  021E                     	;# 
   579  021F                     	;# 
   580  028C                     	;# 
   581  028D                     	;# 
   582  028E                     	;# 
   583  0291                     	;# 
   584  0291                     	;# 
   585  0292                     	;# 
   586  0293                     	;# 
   587  0294                     	;# 
   588  0295                     	;# 
   589  0295                     	;# 
   590  0296                     	;# 
   591  0297                     	;# 
   592  0298                     	;# 
   593  029F                     	;# 
   594  030C                     	;# 
   595  030D                     	;# 
   596  030E                     	;# 
   597  0311                     	;# 
   598  0311                     	;# 
   599  0312                     	;# 
   600  0313                     	;# 
   601  0314                     	;# 
   602  0315                     	;# 
   603  0315                     	;# 
   604  0316                     	;# 
   605  0317                     	;# 
   606  0318                     	;# 
   607  038C                     	;# 
   608  038D                     	;# 
   609  038E                     	;# 
   610  0391                     	;# 
   611  0392                     	;# 
   612  0393                     	;# 
   613  0394                     	;# 
   614  0395                     	;# 
   615  0396                     	;# 
   616  0397                     	;# 
   617  0398                     	;# 
   618  0399                     	;# 
   619  039A                     	;# 
   620  039C                     	;# 
   621  039D                     	;# 
   622  039E                     	;# 
   623  039F                     	;# 
   624  0411                     	;# 
   625  0411                     	;# 
   626  0412                     	;# 
   627  0413                     	;# 
   628  0414                     	;# 
   629  0415                     	;# 
   630  0416                     	;# 
   631  0417                     	;# 
   632  0418                     	;# 
   633  0418                     	;# 
   634  0419                     	;# 
   635  041A                     	;# 
   636  041B                     	;# 
   637  041C                     	;# 
   638  041D                     	;# 
   639  041E                     	;# 
   640  041F                     	;# 
   641  0498                     	;# 
   642  0498                     	;# 
   643  0499                     	;# 
   644  049A                     	;# 
   645  049B                     	;# 
   646  049B                     	;# 
   647  049C                     	;# 
   648  049D                     	;# 
   649  049E                     	;# 
   650  049F                     	;# 
   651  0617                     	;# 
   652  0618                     	;# 
   653  0619                     	;# 
   654  0619                     	;# 
   655  061A                     	;# 
   656  061B                     	;# 
   657  061C                     	;# 
   658  061C                     	;# 
   659  061F                     	;# 
   660  0691                     	;# 
   661  0692                     	;# 
   662  0693                     	;# 
   663  0694                     	;# 
   664  0695                     	;# 
   665  0696                     	;# 
   666  0697                     	;# 
   667  0698                     	;# 
   668  0699                     	;# 
   669  0711                     	;# 
   670  0712                     	;# 
   671  0713                     	;# 
   672  0714                     	;# 
   673  0715                     	;# 
   674  0716                     	;# 
   675  0717                     	;# 
   676  0718                     	;# 
   677  0719                     	;# 
   678  0891                     	;# 
   679  0891                     	;# 
   680  0891                     	;# 
   681  0891                     	;# 
   682  0891                     	;# 
   683  0891                     	;# 
   684  0892                     	;# 
   685  0892                     	;# 
   686  0892                     	;# 
   687  0893                     	;# 
   688  0893                     	;# 
   689  0893                     	;# 
   690  0893                     	;# 
   691  0893                     	;# 
   692  0893                     	;# 
   693  0894                     	;# 
   694  0894                     	;# 
   695  0894                     	;# 
   696  0895                     	;# 
   697  0895                     	;# 
   698  0895                     	;# 
   699  0896                     	;# 
   700  0896                     	;# 
   701  0896                     	;# 
   702  089B                     	;# 
   703  0911                     	;# 
   704  0912                     	;# 
   705  0913                     	;# 
   706  0914                     	;# 
   707  0915                     	;# 
   708  0916                     	;# 
   709  0918                     	;# 
   710  0919                     	;# 
   711  091A                     	;# 
   712  091B                     	;# 
   713  091C                     	;# 
   714  091D                     	;# 
   715  091E                     	;# 
   716  091F                     	;# 
   717  0E0F                     	;# 
   718  0E10                     	;# 
   719  0E11                     	;# 
   720  0E12                     	;# 
   721  0E13                     	;# 
   722  0E14                     	;# 
   723  0E15                     	;# 
   724  0E16                     	;# 
   725  0E17                     	;# 
   726  0E18                     	;# 
   727  0E19                     	;# 
   728  0E1A                     	;# 
   729  0E1B                     	;# 
   730  0E1C                     	;# 
   731  0E1D                     	;# 
   732  0E1E                     	;# 
   733  0E1F                     	;# 
   734  0E20                     	;# 
   735  0E21                     	;# 
   736  0E22                     	;# 
   737  0E24                     	;# 
   738  0E25                     	;# 
   739  0E28                     	;# 
   740  0E29                     	;# 
   741  0E2A                     	;# 
   742  0E2B                     	;# 
   743  0E2C                     	;# 
   744  0E2D                     	;# 
   745  0E2E                     	;# 
   746  0E2F                     	;# 
   747  0E90                     	;# 
   748  0E91                     	;# 
   749  0E92                     	;# 
   750  0E94                     	;# 
   751  0E95                     	;# 
   752  0E9C                     	;# 
   753  0E9D                     	;# 
   754  0E9E                     	;# 
   755  0E9F                     	;# 
   756  0EA0                     	;# 
   757  0EA1                     	;# 
   758  0EA2                     	;# 
   759  0EA3                     	;# 
   760  0EA4                     	;# 
   761  0EA5                     	;# 
   762  0EA6                     	;# 
   763  0EA7                     	;# 
   764  0F0F                     	;# 
   765  0F10                     	;# 
   766  0F11                     	;# 
   767  0F12                     	;# 
   768  0F13                     	;# 
   769  0F14                     	;# 
   770  0F15                     	;# 
   771  0F16                     	;# 
   772  0F17                     	;# 
   773  0F18                     	;# 
   774  0F19                     	;# 
   775  0F1A                     	;# 
   776  0F1B                     	;# 
   777  0F1C                     	;# 
   778  0F1D                     	;# 
   779  0F1E                     	;# 
   780  0F1F                     	;# 
   781  0F20                     	;# 
   782  0F21                     	;# 
   783  0F22                     	;# 
   784  0F23                     	;# 
   785  0F24                     	;# 
   786  0F25                     	;# 
   787  0F26                     	;# 
   788  0F27                     	;# 
   789  0F28                     	;# 
   790  0F29                     	;# 
   791  0F2A                     	;# 
   792  0F2B                     	;# 
   793  0F2C                     	;# 
   794  0F2D                     	;# 
   795  0F2E                     	;# 
   796  0F2F                     	;# 
   797  0F30                     	;# 
   798  0F31                     	;# 
   799  0F32                     	;# 
   800  0F33                     	;# 
   801  0F34                     	;# 
   802  0F35                     	;# 
   803  0F36                     	;# 
   804  0F37                     	;# 
   805  0FE4                     	;# 
   806  0FE5                     	;# 
   807  0FE6                     	;# 
   808  0FE7                     	;# 
   809  0FE8                     	;# 
   810  0FE9                     	;# 
   811  0FEA                     	;# 
   812  0FEB                     	;# 
   813  0FED                     	;# 
   814  0FEE                     	;# 
   815  0FEF                     	;# 
   816  0000                     	;# 
   817  0001                     	;# 
   818  0002                     	;# 
   819  0003                     	;# 
   820  0004                     	;# 
   821  0005                     	;# 
   822  0006                     	;# 
   823  0007                     	;# 
   824  0008                     	;# 
   825  0009                     	;# 
   826  000A                     	;# 
   827  000B                     	;# 
   828  000C                     	;# 
   829  000D                     	;# 
   830  000E                     	;# 
   831  0010                     	;# 
   832  0011                     	;# 
   833  0012                     	;# 
   834  0013                     	;# 
   835  0014                     	;# 
   836  0015                     	;# 
   837  0015                     	;# 
   838  0016                     	;# 
   839  0016                     	;# 
   840  0017                     	;# 
   841  0018                     	;# 
   842  0019                     	;# 
   843  0019                     	;# 
   844  001A                     	;# 
   845  001B                     	;# 
   846  001C                     	;# 
   847  001D                     	;# 
   848  001E                     	;# 
   849  001F                     	;# 
   850  008C                     	;# 
   851  008D                     	;# 
   852  008E                     	;# 
   853  0090                     	;# 
   854  0091                     	;# 
   855  0092                     	;# 
   856  0093                     	;# 
   857  0094                     	;# 
   858  0097                     	;# 
   859  009B                     	;# 
   860  009B                     	;# 
   861  009C                     	;# 
   862  009D                     	;# 
   863  009E                     	;# 
   864  009F                     	;# 
   865  010C                     	;# 
   866  010D                     	;# 
   867  010E                     	;# 
   868  0111                     	;# 
   869  0112                     	;# 
   870  0113                     	;# 
   871  0114                     	;# 
   872  0115                     	;# 
   873  0116                     	;# 
   874  0117                     	;# 
   875  0118                     	;# 
   876  0119                     	;# 
   877  018C                     	;# 
   878  018D                     	;# 
   879  018E                     	;# 
   880  0197                     	;# 
   881  0199                     	;# 
   882  0199                     	;# 
   883  0199                     	;# 
   884  019A                     	;# 
   885  019A                     	;# 
   886  019A                     	;# 
   887  019B                     	;# 
   888  019B                     	;# 
   889  019B                     	;# 
   890  019B                     	;# 
   891  019B                     	;# 
   892  019C                     	;# 
   893  019C                     	;# 
   894  019C                     	;# 
   895  019D                     	;# 
   896  019D                     	;# 
   897  019D                     	;# 
   898  019E                     	;# 
   899  019E                     	;# 
   900  019E                     	;# 
   901  019F                     	;# 
   902  019F                     	;# 
   903  019F                     	;# 
   904  019F                     	;# 
   905  019F                     	;# 
   906  020C                     	;# 
   907  020D                     	;# 
   908  020E                     	;# 
   909  0211                     	;# 
   910  0211                     	;# 
   911  0212                     	;# 
   912  0212                     	;# 
   913  0213                     	;# 
   914  0213                     	;# 
   915  0214                     	;# 
   916  0214                     	;# 
   917  0215                     	;# 
   918  0215                     	;# 
   919  0215                     	;# 
   920  0215                     	;# 
   921  0216                     	;# 
   922  0216                     	;# 
   923  0217                     	;# 
   924  0217                     	;# 
   925  0219                     	;# 
   926  021A                     	;# 
   927  021B                     	;# 
   928  021C                     	;# 
   929  021D                     	;# 
   930  021D                     	;# 
   931  021E                     	;# 
   932  021F                     	;# 
   933  028C                     	;# 
   934  028D                     	;# 
   935  028E                     	;# 
   936  0291                     	;# 
   937  0291                     	;# 
   938  0292                     	;# 
   939  0293                     	;# 
   940  0294                     	;# 
   941  0295                     	;# 
   942  0295                     	;# 
   943  0296                     	;# 
   944  0297                     	;# 
   945  0298                     	;# 
   946  029F                     	;# 
   947  030C                     	;# 
   948  030D                     	;# 
   949  030E                     	;# 
   950  0311                     	;# 
   951  0311                     	;# 
   952  0312                     	;# 
   953  0313                     	;# 
   954  0314                     	;# 
   955  0315                     	;# 
   956  0315                     	;# 
   957  0316                     	;# 
   958  0317                     	;# 
   959  0318                     	;# 
   960  038C                     	;# 
   961  038D                     	;# 
   962  038E                     	;# 
   963  0391                     	;# 
   964  0392                     	;# 
   965  0393                     	;# 
   966  0394                     	;# 
   967  0395                     	;# 
   968  0396                     	;# 
   969  0397                     	;# 
   970  0398                     	;# 
   971  0399                     	;# 
   972  039A                     	;# 
   973  039C                     	;# 
   974  039D                     	;# 
   975  039E                     	;# 
   976  039F                     	;# 
   977  0411                     	;# 
   978  0411                     	;# 
   979  0412                     	;# 
   980  0413                     	;# 
   981  0414                     	;# 
   982  0415                     	;# 
   983  0416                     	;# 
   984  0417                     	;# 
   985  0418                     	;# 
   986  0418                     	;# 
   987  0419                     	;# 
   988  041A                     	;# 
   989  041B                     	;# 
   990  041C                     	;# 
   991  041D                     	;# 
   992  041E                     	;# 
   993  041F                     	;# 
   994  0498                     	;# 
   995  0498                     	;# 
   996  0499                     	;# 
   997  049A                     	;# 
   998  049B                     	;# 
   999  049B                     	;# 
  1000  049C                     	;# 
  1001  049D                     	;# 
  1002  049E                     	;# 
  1003  049F                     	;# 
  1004  0617                     	;# 
  1005  0618                     	;# 
  1006  0619                     	;# 
  1007  0619                     	;# 
  1008  061A                     	;# 
  1009  061B                     	;# 
  1010  061C                     	;# 
  1011  061C                     	;# 
  1012  061F                     	;# 
  1013  0691                     	;# 
  1014  0692                     	;# 
  1015  0693                     	;# 
  1016  0694                     	;# 
  1017  0695                     	;# 
  1018  0696                     	;# 
  1019  0697                     	;# 
  1020  0698                     	;# 
  1021  0699                     	;# 
  1022  0711                     	;# 
  1023  0712                     	;# 
  1024  0713                     	;# 
  1025  0714                     	;# 
  1026  0715                     	;# 
  1027  0716                     	;# 
  1028  0717                     	;# 
  1029  0718                     	;# 
  1030  0719                     	;# 
  1031  0891                     	;# 
  1032  0891                     	;# 
  1033  0891                     	;# 
  1034  0891                     	;# 
  1035  0891                     	;# 
  1036  0891                     	;# 
  1037  0892                     	;# 
  1038  0892                     	;# 
  1039  0892                     	;# 
  1040  0893                     	;# 
  1041  0893                     	;# 
  1042  0893                     	;# 
  1043  0893                     	;# 
  1044  0893                     	;# 
  1045  0893                     	;# 
  1046  0894                     	;# 
  1047  0894                     	;# 
  1048  0894                     	;# 
  1049  0895                     	;# 
  1050  0895                     	;# 
  1051  0895                     	;# 
  1052  0896                     	;# 
  1053  0896                     	;# 
  1054  0896                     	;# 
  1055  089B                     	;# 
  1056  0911                     	;# 
  1057  0912                     	;# 
  1058  0913                     	;# 
  1059  0914                     	;# 
  1060  0915                     	;# 
  1061  0916                     	;# 
  1062  0918                     	;# 
  1063  0919                     	;# 
  1064  091A                     	;# 
  1065  091B                     	;# 
  1066  091C                     	;# 
  1067  091D                     	;# 
  1068  091E                     	;# 
  1069  091F                     	;# 
  1070  0E0F                     	;# 
  1071  0E10                     	;# 
  1072  0E11                     	;# 
  1073  0E12                     	;# 
  1074  0E13                     	;# 
  1075  0E14                     	;# 
  1076  0E15                     	;# 
  1077  0E16                     	;# 
  1078  0E17                     	;# 
  1079  0E18                     	;# 
  1080  0E19                     	;# 
  1081  0E1A                     	;# 
  1082  0E1B                     	;# 
  1083  0E1C                     	;# 
  1084  0E1D                     	;# 
  1085  0E1E                     	;# 
  1086  0E1F                     	;# 
  1087  0E20                     	;# 
  1088  0E21                     	;# 
  1089  0E22                     	;# 
  1090  0E24                     	;# 
  1091  0E25                     	;# 
  1092  0E28                     	;# 
  1093  0E29                     	;# 
  1094  0E2A                     	;# 
  1095  0E2B                     	;# 
  1096  0E2C                     	;# 
  1097  0E2D                     	;# 
  1098  0E2E                     	;# 
  1099  0E2F                     	;# 
  1100  0E90                     	;# 
  1101  0E91                     	;# 
  1102  0E92                     	;# 
  1103  0E94                     	;# 
  1104  0E95                     	;# 
  1105  0E9C                     	;# 
  1106  0E9D                     	;# 
  1107  0E9E                     	;# 
  1108  0E9F                     	;# 
  1109  0EA0                     	;# 
  1110  0EA1                     	;# 
  1111  0EA2                     	;# 
  1112  0EA3                     	;# 
  1113  0EA4                     	;# 
  1114  0EA5                     	;# 
  1115  0EA6                     	;# 
  1116  0EA7                     	;# 
  1117  0F0F                     	;# 
  1118  0F10                     	;# 
  1119  0F11                     	;# 
  1120  0F12                     	;# 
  1121  0F13                     	;# 
  1122  0F14                     	;# 
  1123  0F15                     	;# 
  1124  0F16                     	;# 
  1125  0F17                     	;# 
  1126  0F18                     	;# 
  1127  0F19                     	;# 
  1128  0F1A                     	;# 
  1129  0F1B                     	;# 
  1130  0F1C                     	;# 
  1131  0F1D                     	;# 
  1132  0F1E                     	;# 
  1133  0F1F                     	;# 
  1134  0F20                     	;# 
  1135  0F21                     	;# 
  1136  0F22                     	;# 
  1137  0F23                     	;# 
  1138  0F24                     	;# 
  1139  0F25                     	;# 
  1140  0F26                     	;# 
  1141  0F27                     	;# 
  1142  0F28                     	;# 
  1143  0F29                     	;# 
  1144  0F2A                     	;# 
  1145  0F2B                     	;# 
  1146  0F2C                     	;# 
  1147  0F2D                     	;# 
  1148  0F2E                     	;# 
  1149  0F2F                     	;# 
  1150  0F30                     	;# 
  1151  0F31                     	;# 
  1152  0F32                     	;# 
  1153  0F33                     	;# 
  1154  0F34                     	;# 
  1155  0F35                     	;# 
  1156  0F36                     	;# 
  1157  0F37                     	;# 
  1158  0FE4                     	;# 
  1159  0FE5                     	;# 
  1160  0FE6                     	;# 
  1161  0FE7                     	;# 
  1162  0FE8                     	;# 
  1163  0FE9                     	;# 
  1164  0FEA                     	;# 
  1165  0FEB                     	;# 
  1166  0FED                     	;# 
  1167  0FEE                     	;# 
  1168  0FEF                     	;# 
  1169  0000                     	;# 
  1170  0001                     	;# 
  1171  0002                     	;# 
  1172  0003                     	;# 
  1173  0004                     	;# 
  1174  0005                     	;# 
  1175  0006                     	;# 
  1176  0007                     	;# 
  1177  0008                     	;# 
  1178  0009                     	;# 
  1179  000A                     	;# 
  1180  000B                     	;# 
  1181  000C                     	;# 
  1182  000D                     	;# 
  1183  000E                     	;# 
  1184  0010                     	;# 
  1185  0011                     	;# 
  1186  0012                     	;# 
  1187  0013                     	;# 
  1188  0014                     	;# 
  1189  0015                     	;# 
  1190  0015                     	;# 
  1191  0016                     	;# 
  1192  0016                     	;# 
  1193  0017                     	;# 
  1194  0018                     	;# 
  1195  0019                     	;# 
  1196  0019                     	;# 
  1197  001A                     	;# 
  1198  001B                     	;# 
  1199  001C                     	;# 
  1200  001D                     	;# 
  1201  001E                     	;# 
  1202  001F                     	;# 
  1203  008C                     	;# 
  1204  008D                     	;# 
  1205  008E                     	;# 
  1206  0090                     	;# 
  1207  0091                     	;# 
  1208  0092                     	;# 
  1209  0093                     	;# 
  1210  0094                     	;# 
  1211  0097                     	;# 
  1212  009B                     	;# 
  1213  009B                     	;# 
  1214  009C                     	;# 
  1215  009D                     	;# 
  1216  009E                     	;# 
  1217  009F                     	;# 
  1218  010C                     	;# 
  1219  010D                     	;# 
  1220  010E                     	;# 
  1221  0111                     	;# 
  1222  0112                     	;# 
  1223  0113                     	;# 
  1224  0114                     	;# 
  1225  0115                     	;# 
  1226  0116                     	;# 
  1227  0117                     	;# 
  1228  0118                     	;# 
  1229  0119                     	;# 
  1230  018C                     	;# 
  1231  018D                     	;# 
  1232  018E                     	;# 
  1233  0197                     	;# 
  1234  0199                     	;# 
  1235  0199                     	;# 
  1236  0199                     	;# 
  1237  019A                     	;# 
  1238  019A                     	;# 
  1239  019A                     	;# 
  1240  019B                     	;# 
  1241  019B                     	;# 
  1242  019B                     	;# 
  1243  019B                     	;# 
  1244  019B                     	;# 
  1245  019C                     	;# 
  1246  019C                     	;# 
  1247  019C                     	;# 
  1248  019D                     	;# 
  1249  019D                     	;# 
  1250  019D                     	;# 
  1251  019E                     	;# 
  1252  019E                     	;# 
  1253  019E                     	;# 
  1254  019F                     	;# 
  1255  019F                     	;# 
  1256  019F                     	;# 
  1257  019F                     	;# 
  1258  019F                     	;# 
  1259  020C                     	;# 
  1260  020D                     	;# 
  1261  020E                     	;# 
  1262  0211                     	;# 
  1263  0211                     	;# 
  1264  0212                     	;# 
  1265  0212                     	;# 
  1266  0213                     	;# 
  1267  0213                     	;# 
  1268  0214                     	;# 
  1269  0214                     	;# 
  1270  0215                     	;# 
  1271  0215                     	;# 
  1272  0215                     	;# 
  1273  0215                     	;# 
  1274  0216                     	;# 
  1275  0216                     	;# 
  1276  0217                     	;# 
  1277  0217                     	;# 
  1278  0219                     	;# 
  1279  021A                     	;# 
  1280  021B                     	;# 
  1281  021C                     	;# 
  1282  021D                     	;# 
  1283  021D                     	;# 
  1284  021E                     	;# 
  1285  021F                     	;# 
  1286  028C                     	;# 
  1287  028D                     	;# 
  1288  028E                     	;# 
  1289  0291                     	;# 
  1290  0291                     	;# 
  1291  0292                     	;# 
  1292  0293                     	;# 
  1293  0294                     	;# 
  1294  0295                     	;# 
  1295  0295                     	;# 
  1296  0296                     	;# 
  1297  0297                     	;# 
  1298  0298                     	;# 
  1299  029F                     	;# 
  1300  030C                     	;# 
  1301  030D                     	;# 
  1302  030E                     	;# 
  1303  0311                     	;# 
  1304  0311                     	;# 
  1305  0312                     	;# 
  1306  0313                     	;# 
  1307  0314                     	;# 
  1308  0315                     	;# 
  1309  0315                     	;# 
  1310  0316                     	;# 
  1311  0317                     	;# 
  1312  0318                     	;# 
  1313  038C                     	;# 
  1314  038D                     	;# 
  1315  038E                     	;# 
  1316  0391                     	;# 
  1317  0392                     	;# 
  1318  0393                     	;# 
  1319  0394                     	;# 
  1320  0395                     	;# 
  1321  0396                     	;# 
  1322  0397                     	;# 
  1323  0398                     	;# 
  1324  0399                     	;# 
  1325  039A                     	;# 
  1326  039C                     	;# 
  1327  039D                     	;# 
  1328  039E                     	;# 
  1329  039F                     	;# 
  1330  0411                     	;# 
  1331  0411                     	;# 
  1332  0412                     	;# 
  1333  0413                     	;# 
  1334  0414                     	;# 
  1335  0415                     	;# 
  1336  0416                     	;# 
  1337  0417                     	;# 
  1338  0418                     	;# 
  1339  0418                     	;# 
  1340  0419                     	;# 
  1341  041A                     	;# 
  1342  041B                     	;# 
  1343  041C                     	;# 
  1344  041D                     	;# 
  1345  041E                     	;# 
  1346  041F                     	;# 
  1347  0498                     	;# 
  1348  0498                     	;# 
  1349  0499                     	;# 
  1350  049A                     	;# 
  1351  049B                     	;# 
  1352  049B                     	;# 
  1353  049C                     	;# 
  1354  049D                     	;# 
  1355  049E                     	;# 
  1356  049F                     	;# 
  1357  0617                     	;# 
  1358  0618                     	;# 
  1359  0619                     	;# 
  1360  0619                     	;# 
  1361  061A                     	;# 
  1362  061B                     	;# 
  1363  061C                     	;# 
  1364  061C                     	;# 
  1365  061F                     	;# 
  1366  0691                     	;# 
  1367  0692                     	;# 
  1368  0693                     	;# 
  1369  0694                     	;# 
  1370  0695                     	;# 
  1371  0696                     	;# 
  1372  0697                     	;# 
  1373  0698                     	;# 
  1374  0699                     	;# 
  1375  0711                     	;# 
  1376  0712                     	;# 
  1377  0713                     	;# 
  1378  0714                     	;# 
  1379  0715                     	;# 
  1380  0716                     	;# 
  1381  0717                     	;# 
  1382  0718                     	;# 
  1383  0719                     	;# 
  1384  0891                     	;# 
  1385  0891                     	;# 
  1386  0891                     	;# 
  1387  0891                     	;# 
  1388  0891                     	;# 
  1389  0891                     	;# 
  1390  0892                     	;# 
  1391  0892                     	;# 
  1392  0892                     	;# 
  1393  0893                     	;# 
  1394  0893                     	;# 
  1395  0893                     	;# 
  1396  0893                     	;# 
  1397  0893                     	;# 
  1398  0893                     	;# 
  1399  0894                     	;# 
  1400  0894                     	;# 
  1401  0894                     	;# 
  1402  0895                     	;# 
  1403  0895                     	;# 
  1404  0895                     	;# 
  1405  0896                     	;# 
  1406  0896                     	;# 
  1407  0896                     	;# 
  1408  089B                     	;# 
  1409  0911                     	;# 
  1410  0912                     	;# 
  1411  0913                     	;# 
  1412  0914                     	;# 
  1413  0915                     	;# 
  1414  0916                     	;# 
  1415  0918                     	;# 
  1416  0919                     	;# 
  1417  091A                     	;# 
  1418  091B                     	;# 
  1419  091C                     	;# 
  1420  091D                     	;# 
  1421  091E                     	;# 
  1422  091F                     	;# 
  1423  0E0F                     	;# 
  1424  0E10                     	;# 
  1425  0E11                     	;# 
  1426  0E12                     	;# 
  1427  0E13                     	;# 
  1428  0E14                     	;# 
  1429  0E15                     	;# 
  1430  0E16                     	;# 
  1431  0E17                     	;# 
  1432  0E18                     	;# 
  1433  0E19                     	;# 
  1434  0E1A                     	;# 
  1435  0E1B                     	;# 
  1436  0E1C                     	;# 
  1437  0E1D                     	;# 
  1438  0E1E                     	;# 
  1439  0E1F                     	;# 
  1440  0E20                     	;# 
  1441  0E21                     	;# 
  1442  0E22                     	;# 
  1443  0E24                     	;# 
  1444  0E25                     	;# 
  1445  0E28                     	;# 
  1446  0E29                     	;# 
  1447  0E2A                     	;# 
  1448  0E2B                     	;# 
  1449  0E2C                     	;# 
  1450  0E2D                     	;# 
  1451  0E2E                     	;# 
  1452  0E2F                     	;# 
  1453  0E90                     	;# 
  1454  0E91                     	;# 
  1455  0E92                     	;# 
  1456  0E94                     	;# 
  1457  0E95                     	;# 
  1458  0E9C                     	;# 
  1459  0E9D                     	;# 
  1460  0E9E                     	;# 
  1461  0E9F                     	;# 
  1462  0EA0                     	;# 
  1463  0EA1                     	;# 
  1464  0EA2                     	;# 
  1465  0EA3                     	;# 
  1466  0EA4                     	;# 
  1467  0EA5                     	;# 
  1468  0EA6                     	;# 
  1469  0EA7                     	;# 
  1470  0F0F                     	;# 
  1471  0F10                     	;# 
  1472  0F11                     	;# 
  1473  0F12                     	;# 
  1474  0F13                     	;# 
  1475  0F14                     	;# 
  1476  0F15                     	;# 
  1477  0F16                     	;# 
  1478  0F17                     	;# 
  1479  0F18                     	;# 
  1480  0F19                     	;# 
  1481  0F1A                     	;# 
  1482  0F1B                     	;# 
  1483  0F1C                     	;# 
  1484  0F1D                     	;# 
  1485  0F1E                     	;# 
  1486  0F1F                     	;# 
  1487  0F20                     	;# 
  1488  0F21                     	;# 
  1489  0F22                     	;# 
  1490  0F23                     	;# 
  1491  0F24                     	;# 
  1492  0F25                     	;# 
  1493  0F26                     	;# 
  1494  0F27                     	;# 
  1495  0F28                     	;# 
  1496  0F29                     	;# 
  1497  0F2A                     	;# 
  1498  0F2B                     	;# 
  1499  0F2C                     	;# 
  1500  0F2D                     	;# 
  1501  0F2E                     	;# 
  1502  0F2F                     	;# 
  1503  0F30                     	;# 
  1504  0F31                     	;# 
  1505  0F32                     	;# 
  1506  0F33                     	;# 
  1507  0F34                     	;# 
  1508  0F35                     	;# 
  1509  0F36                     	;# 
  1510  0F37                     	;# 
  1511  0FE4                     	;# 
  1512  0FE5                     	;# 
  1513  0FE6                     	;# 
  1514  0FE7                     	;# 
  1515  0FE8                     	;# 
  1516  0FE9                     	;# 
  1517  0FEA                     	;# 
  1518  0FEB                     	;# 
  1519  0FED                     	;# 
  1520  0FEE                     	;# 
  1521  0FEF                     	;# 
  1522  0000                     	;# 
  1523  0001                     	;# 
  1524  0002                     	;# 
  1525  0003                     	;# 
  1526  0004                     	;# 
  1527  0005                     	;# 
  1528  0006                     	;# 
  1529  0007                     	;# 
  1530  0008                     	;# 
  1531  0009                     	;# 
  1532  000A                     	;# 
  1533  000B                     	;# 
  1534  000C                     	;# 
  1535  000D                     	;# 
  1536  000E                     	;# 
  1537  0010                     	;# 
  1538  0011                     	;# 
  1539  0012                     	;# 
  1540  0013                     	;# 
  1541  0014                     	;# 
  1542  0015                     	;# 
  1543  0015                     	;# 
  1544  0016                     	;# 
  1545  0016                     	;# 
  1546  0017                     	;# 
  1547  0018                     	;# 
  1548  0019                     	;# 
  1549  0019                     	;# 
  1550  001A                     	;# 
  1551  001B                     	;# 
  1552  001C                     	;# 
  1553  001D                     	;# 
  1554  001E                     	;# 
  1555  001F                     	;# 
  1556  008C                     	;# 
  1557  008D                     	;# 
  1558  008E                     	;# 
  1559  0090                     	;# 
  1560  0091                     	;# 
  1561  0092                     	;# 
  1562  0093                     	;# 
  1563  0094                     	;# 
  1564  0097                     	;# 
  1565  009B                     	;# 
  1566  009B                     	;# 
  1567  009C                     	;# 
  1568  009D                     	;# 
  1569  009E                     	;# 
  1570  009F                     	;# 
  1571  010C                     	;# 
  1572  010D                     	;# 
  1573  010E                     	;# 
  1574  0111                     	;# 
  1575  0112                     	;# 
  1576  0113                     	;# 
  1577  0114                     	;# 
  1578  0115                     	;# 
  1579  0116                     	;# 
  1580  0117                     	;# 
  1581  0118                     	;# 
  1582  0119                     	;# 
  1583  018C                     	;# 
  1584  018D                     	;# 
  1585  018E                     	;# 
  1586  0197                     	;# 
  1587  0199                     	;# 
  1588  0199                     	;# 
  1589  0199                     	;# 
  1590  019A                     	;# 
  1591  019A                     	;# 
  1592  019A                     	;# 
  1593  019B                     	;# 
  1594  019B                     	;# 
  1595  019B                     	;# 
  1596  019B                     	;# 
  1597  019B                     	;# 
  1598  019C                     	;# 
  1599  019C                     	;# 
  1600  019C                     	;# 
  1601  019D                     	;# 
  1602  019D                     	;# 
  1603  019D                     	;# 
  1604  019E                     	;# 
  1605  019E                     	;# 
  1606  019E                     	;# 
  1607  019F                     	;# 
  1608  019F                     	;# 
  1609  019F                     	;# 
  1610  019F                     	;# 
  1611  019F                     	;# 
  1612  020C                     	;# 
  1613  020D                     	;# 
  1614  020E                     	;# 
  1615  0211                     	;# 
  1616  0211                     	;# 
  1617  0212                     	;# 
  1618  0212                     	;# 
  1619  0213                     	;# 
  1620  0213                     	;# 
  1621  0214                     	;# 
  1622  0214                     	;# 
  1623  0215                     	;# 
  1624  0215                     	;# 
  1625  0215                     	;# 
  1626  0215                     	;# 
  1627  0216                     	;# 
  1628  0216                     	;# 
  1629  0217                     	;# 
  1630  0217                     	;# 
  1631  0219                     	;# 
  1632  021A                     	;# 
  1633  021B                     	;# 
  1634  021C                     	;# 
  1635  021D                     	;# 
  1636  021D                     	;# 
  1637  021E                     	;# 
  1638  021F                     	;# 
  1639  028C                     	;# 
  1640  028D                     	;# 
  1641  028E                     	;# 
  1642  0291                     	;# 
  1643  0291                     	;# 
  1644  0292                     	;# 
  1645  0293                     	;# 
  1646  0294                     	;# 
  1647  0295                     	;# 
  1648  0295                     	;# 
  1649  0296                     	;# 
  1650  0297                     	;# 
  1651  0298                     	;# 
  1652  029F                     	;# 
  1653  030C                     	;# 
  1654  030D                     	;# 
  1655  030E                     	;# 
  1656  0311                     	;# 
  1657  0311                     	;# 
  1658  0312                     	;# 
  1659  0313                     	;# 
  1660  0314                     	;# 
  1661  0315                     	;# 
  1662  0315                     	;# 
  1663  0316                     	;# 
  1664  0317                     	;# 
  1665  0318                     	;# 
  1666  038C                     	;# 
  1667  038D                     	;# 
  1668  038E                     	;# 
  1669  0391                     	;# 
  1670  0392                     	;# 
  1671  0393                     	;# 
  1672  0394                     	;# 
  1673  0395                     	;# 
  1674  0396                     	;# 
  1675  0397                     	;# 
  1676  0398                     	;# 
  1677  0399                     	;# 
  1678  039A                     	;# 
  1679  039C                     	;# 
  1680  039D                     	;# 
  1681  039E                     	;# 
  1682  039F                     	;# 
  1683  0411                     	;# 
  1684  0411                     	;# 
  1685  0412                     	;# 
  1686  0413                     	;# 
  1687  0414                     	;# 
  1688  0415                     	;# 
  1689  0416                     	;# 
  1690  0417                     	;# 
  1691  0418                     	;# 
  1692  0418                     	;# 
  1693  0419                     	;# 
  1694  041A                     	;# 
  1695  041B                     	;# 
  1696  041C                     	;# 
  1697  041D                     	;# 
  1698  041E                     	;# 
  1699  041F                     	;# 
  1700  0498                     	;# 
  1701  0498                     	;# 
  1702  0499                     	;# 
  1703  049A                     	;# 
  1704  049B                     	;# 
  1705  049B                     	;# 
  1706  049C                     	;# 
  1707  049D                     	;# 
  1708  049E                     	;# 
  1709  049F                     	;# 
  1710  0617                     	;# 
  1711  0618                     	;# 
  1712  0619                     	;# 
  1713  0619                     	;# 
  1714  061A                     	;# 
  1715  061B                     	;# 
  1716  061C                     	;# 
  1717  061C                     	;# 
  1718  061F                     	;# 
  1719  0691                     	;# 
  1720  0692                     	;# 
  1721  0693                     	;# 
  1722  0694                     	;# 
  1723  0695                     	;# 
  1724  0696                     	;# 
  1725  0697                     	;# 
  1726  0698                     	;# 
  1727  0699                     	;# 
  1728  0711                     	;# 
  1729  0712                     	;# 
  1730  0713                     	;# 
  1731  0714                     	;# 
  1732  0715                     	;# 
  1733  0716                     	;# 
  1734  0717                     	;# 
  1735  0718                     	;# 
  1736  0719                     	;# 
  1737  0891                     	;# 
  1738  0891                     	;# 
  1739  0891                     	;# 
  1740  0891                     	;# 
  1741  0891                     	;# 
  1742  0891                     	;# 
  1743  0892                     	;# 
  1744  0892                     	;# 
  1745  0892                     	;# 
  1746  0893                     	;# 
  1747  0893                     	;# 
  1748  0893                     	;# 
  1749  0893                     	;# 
  1750  0893                     	;# 
  1751  0893                     	;# 
  1752  0894                     	;# 
  1753  0894                     	;# 
  1754  0894                     	;# 
  1755  0895                     	;# 
  1756  0895                     	;# 
  1757  0895                     	;# 
  1758  0896                     	;# 
  1759  0896                     	;# 
  1760  0896                     	;# 
  1761  089B                     	;# 
  1762  0911                     	;# 
  1763  0912                     	;# 
  1764  0913                     	;# 
  1765  0914                     	;# 
  1766  0915                     	;# 
  1767  0916                     	;# 
  1768  0918                     	;# 
  1769  0919                     	;# 
  1770  091A                     	;# 
  1771  091B                     	;# 
  1772  091C                     	;# 
  1773  091D                     	;# 
  1774  091E                     	;# 
  1775  091F                     	;# 
  1776  0E0F                     	;# 
  1777  0E10                     	;# 
  1778  0E11                     	;# 
  1779  0E12                     	;# 
  1780  0E13                     	;# 
  1781  0E14                     	;# 
  1782  0E15                     	;# 
  1783  0E16                     	;# 
  1784  0E17                     	;# 
  1785  0E18                     	;# 
  1786  0E19                     	;# 
  1787  0E1A                     	;# 
  1788  0E1B                     	;# 
  1789  0E1C                     	;# 
  1790  0E1D                     	;# 
  1791  0E1E                     	;# 
  1792  0E1F                     	;# 
  1793  0E20                     	;# 
  1794  0E21                     	;# 
  1795  0E22                     	;# 
  1796  0E24                     	;# 
  1797  0E25                     	;# 
  1798  0E28                     	;# 
  1799  0E29                     	;# 
  1800  0E2A                     	;# 
  1801  0E2B                     	;# 
  1802  0E2C                     	;# 
  1803  0E2D                     	;# 
  1804  0E2E                     	;# 
  1805  0E2F                     	;# 
  1806  0E90                     	;# 
  1807  0E91                     	;# 
  1808  0E92                     	;# 
  1809  0E94                     	;# 
  1810  0E95                     	;# 
  1811  0E9C                     	;# 
  1812  0E9D                     	;# 
  1813  0E9E                     	;# 
  1814  0E9F                     	;# 
  1815  0EA0                     	;# 
  1816  0EA1                     	;# 
  1817  0EA2                     	;# 
  1818  0EA3                     	;# 
  1819  0EA4                     	;# 
  1820  0EA5                     	;# 
  1821  0EA6                     	;# 
  1822  0EA7                     	;# 
  1823  0F0F                     	;# 
  1824  0F10                     	;# 
  1825  0F11                     	;# 
  1826  0F12                     	;# 
  1827  0F13                     	;# 
  1828  0F14                     	;# 
  1829  0F15                     	;# 
  1830  0F16                     	;# 
  1831  0F17                     	;# 
  1832  0F18                     	;# 
  1833  0F19                     	;# 
  1834  0F1A                     	;# 
  1835  0F1B                     	;# 
  1836  0F1C                     	;# 
  1837  0F1D                     	;# 
  1838  0F1E                     	;# 
  1839  0F1F                     	;# 
  1840  0F20                     	;# 
  1841  0F21                     	;# 
  1842  0F22                     	;# 
  1843  0F23                     	;# 
  1844  0F24                     	;# 
  1845  0F25                     	;# 
  1846  0F26                     	;# 
  1847  0F27                     	;# 
  1848  0F28                     	;# 
  1849  0F29                     	;# 
  1850  0F2A                     	;# 
  1851  0F2B                     	;# 
  1852  0F2C                     	;# 
  1853  0F2D                     	;# 
  1854  0F2E                     	;# 
  1855  0F2F                     	;# 
  1856  0F30                     	;# 
  1857  0F31                     	;# 
  1858  0F32                     	;# 
  1859  0F33                     	;# 
  1860  0F34                     	;# 
  1861  0F35                     	;# 
  1862  0F36                     	;# 
  1863  0F37                     	;# 
  1864  0FE4                     	;# 
  1865  0FE5                     	;# 
  1866  0FE6                     	;# 
  1867  0FE7                     	;# 
  1868  0FE8                     	;# 
  1869  0FE9                     	;# 
  1870  0FEA                     	;# 
  1871  0FEB                     	;# 
  1872  0FED                     	;# 
  1873  0FEE                     	;# 
  1874  0FEF                     	;# 
  1875  0000                     	;# 
  1876  0001                     	;# 
  1877  0002                     	;# 
  1878  0003                     	;# 
  1879  0004                     	;# 
  1880  0005                     	;# 
  1881  0006                     	;# 
  1882  0007                     	;# 
  1883  0008                     	;# 
  1884  0009                     	;# 
  1885  000A                     	;# 
  1886  000B                     	;# 
  1887  000C                     	;# 
  1888  000D                     	;# 
  1889  000E                     	;# 
  1890  0010                     	;# 
  1891  0011                     	;# 
  1892  0012                     	;# 
  1893  0013                     	;# 
  1894  0014                     	;# 
  1895  0015                     	;# 
  1896  0015                     	;# 
  1897  0016                     	;# 
  1898  0016                     	;# 
  1899  0017                     	;# 
  1900  0018                     	;# 
  1901  0019                     	;# 
  1902  0019                     	;# 
  1903  001A                     	;# 
  1904  001B                     	;# 
  1905  001C                     	;# 
  1906  001D                     	;# 
  1907  001E                     	;# 
  1908  001F                     	;# 
  1909  008C                     	;# 
  1910  008D                     	;# 
  1911  008E                     	;# 
  1912  0090                     	;# 
  1913  0091                     	;# 
  1914  0092                     	;# 
  1915  0093                     	;# 
  1916  0094                     	;# 
  1917  0097                     	;# 
  1918  009B                     	;# 
  1919  009B                     	;# 
  1920  009C                     	;# 
  1921  009D                     	;# 
  1922  009E                     	;# 
  1923  009F                     	;# 
  1924  010C                     	;# 
  1925  010D                     	;# 
  1926  010E                     	;# 
  1927  0111                     	;# 
  1928  0112                     	;# 
  1929  0113                     	;# 
  1930  0114                     	;# 
  1931  0115                     	;# 
  1932  0116                     	;# 
  1933  0117                     	;# 
  1934  0118                     	;# 
  1935  0119                     	;# 
  1936  018C                     	;# 
  1937  018D                     	;# 
  1938  018E                     	;# 
  1939  0197                     	;# 
  1940  0199                     	;# 
  1941  0199                     	;# 
  1942  0199                     	;# 
  1943  019A                     	;# 
  1944  019A                     	;# 
  1945  019A                     	;# 
  1946  019B                     	;# 
  1947  019B                     	;# 
  1948  019B                     	;# 
  1949  019B                     	;# 
  1950  019B                     	;# 
  1951  019C                     	;# 
  1952  019C                     	;# 
  1953  019C                     	;# 
  1954  019D                     	;# 
  1955  019D                     	;# 
  1956  019D                     	;# 
  1957  019E                     	;# 
  1958  019E                     	;# 
  1959  019E                     	;# 
  1960  019F                     	;# 
  1961  019F                     	;# 
  1962  019F                     	;# 
  1963  019F                     	;# 
  1964  019F                     	;# 
  1965  020C                     	;# 
  1966  020D                     	;# 
  1967  020E                     	;# 
  1968  0211                     	;# 
  1969  0211                     	;# 
  1970  0212                     	;# 
  1971  0212                     	;# 
  1972  0213                     	;# 
  1973  0213                     	;# 
  1974  0214                     	;# 
  1975  0214                     	;# 
  1976  0215                     	;# 
  1977  0215                     	;# 
  1978  0215                     	;# 
  1979  0215                     	;# 
  1980  0216                     	;# 
  1981  0216                     	;# 
  1982  0217                     	;# 
  1983  0217                     	;# 
  1984  0219                     	;# 
  1985  021A                     	;# 
  1986  021B                     	;# 
  1987  021C                     	;# 
  1988  021D                     	;# 
  1989  021D                     	;# 
  1990  021E                     	;# 
  1991  021F                     	;# 
  1992  028C                     	;# 
  1993  028D                     	;# 
  1994  028E                     	;# 
  1995  0291                     	;# 
  1996  0291                     	;# 
  1997  0292                     	;# 
  1998  0293                     	;# 
  1999  0294                     	;# 
  2000  0295                     	;# 
  2001  0295                     	;# 
  2002  0296                     	;# 
  2003  0297                     	;# 
  2004  0298                     	;# 
  2005  029F                     	;# 
  2006  030C                     	;# 
  2007  030D                     	;# 
  2008  030E                     	;# 
  2009  0311                     	;# 
  2010  0311                     	;# 
  2011  0312                     	;# 
  2012  0313                     	;# 
  2013  0314                     	;# 
  2014  0315                     	;# 
  2015  0315                     	;# 
  2016  0316                     	;# 
  2017  0317                     	;# 
  2018  0318                     	;# 
  2019  038C                     	;# 
  2020  038D                     	;# 
  2021  038E                     	;# 
  2022  0391                     	;# 
  2023  0392                     	;# 
  2024  0393                     	;# 
  2025  0394                     	;# 
  2026  0395                     	;# 
  2027  0396                     	;# 
  2028  0397                     	;# 
  2029  0398                     	;# 
  2030  0399                     	;# 
  2031  039A                     	;# 
  2032  039C                     	;# 
  2033  039D                     	;# 
  2034  039E                     	;# 
  2035  039F                     	;# 
  2036  0411                     	;# 
  2037  0411                     	;# 
  2038  0412                     	;# 
  2039  0413                     	;# 
  2040  0414                     	;# 
  2041  0415                     	;# 
  2042  0416                     	;# 
  2043  0417                     	;# 
  2044  0418                     	;# 
  2045  0418                     	;# 
  2046  0419                     	;# 
  2047  041A                     	;# 
  2048  041B                     	;# 
  2049  041C                     	;# 
  2050  041D                     	;# 
  2051  041E                     	;# 
  2052  041F                     	;# 
  2053  0498                     	;# 
  2054  0498                     	;# 
  2055  0499                     	;# 
  2056  049A                     	;# 
  2057  049B                     	;# 
  2058  049B                     	;# 
  2059  049C                     	;# 
  2060  049D                     	;# 
  2061  049E                     	;# 
  2062  049F                     	;# 
  2063  0617                     	;# 
  2064  0618                     	;# 
  2065  0619                     	;# 
  2066  0619                     	;# 
  2067  061A                     	;# 
  2068  061B                     	;# 
  2069  061C                     	;# 
  2070  061C                     	;# 
  2071  061F                     	;# 
  2072  0691                     	;# 
  2073  0692                     	;# 
  2074  0693                     	;# 
  2075  0694                     	;# 
  2076  0695                     	;# 
  2077  0696                     	;# 
  2078  0697                     	;# 
  2079  0698                     	;# 
  2080  0699                     	;# 
  2081  0711                     	;# 
  2082  0712                     	;# 
  2083  0713                     	;# 
  2084  0714                     	;# 
  2085  0715                     	;# 
  2086  0716                     	;# 
  2087  0717                     	;# 
  2088  0718                     	;# 
  2089  0719                     	;# 
  2090  0891                     	;# 
  2091  0891                     	;# 
  2092  0891                     	;# 
  2093  0891                     	;# 
  2094  0891                     	;# 
  2095  0891                     	;# 
  2096  0892                     	;# 
  2097  0892                     	;# 
  2098  0892                     	;# 
  2099  0893                     	;# 
  2100  0893                     	;# 
  2101  0893                     	;# 
  2102  0893                     	;# 
  2103  0893                     	;# 
  2104  0893                     	;# 
  2105  0894                     	;# 
  2106  0894                     	;# 
  2107  0894                     	;# 
  2108  0895                     	;# 
  2109  0895                     	;# 
  2110  0895                     	;# 
  2111  0896                     	;# 
  2112  0896                     	;# 
  2113  0896                     	;# 
  2114  089B                     	;# 
  2115  0911                     	;# 
  2116  0912                     	;# 
  2117  0913                     	;# 
  2118  0914                     	;# 
  2119  0915                     	;# 
  2120  0916                     	;# 
  2121  0918                     	;# 
  2122  0919                     	;# 
  2123  091A                     	;# 
  2124  091B                     	;# 
  2125  091C                     	;# 
  2126  091D                     	;# 
  2127  091E                     	;# 
  2128  091F                     	;# 
  2129  0E0F                     	;# 
  2130  0E10                     	;# 
  2131  0E11                     	;# 
  2132  0E12                     	;# 
  2133  0E13                     	;# 
  2134  0E14                     	;# 
  2135  0E15                     	;# 
  2136  0E16                     	;# 
  2137  0E17                     	;# 
  2138  0E18                     	;# 
  2139  0E19                     	;# 
  2140  0E1A                     	;# 
  2141  0E1B                     	;# 
  2142  0E1C                     	;# 
  2143  0E1D                     	;# 
  2144  0E1E                     	;# 
  2145  0E1F                     	;# 
  2146  0E20                     	;# 
  2147  0E21                     	;# 
  2148  0E22                     	;# 
  2149  0E24                     	;# 
  2150  0E25                     	;# 
  2151  0E28                     	;# 
  2152  0E29                     	;# 
  2153  0E2A                     	;# 
  2154  0E2B                     	;# 
  2155  0E2C                     	;# 
  2156  0E2D                     	;# 
  2157  0E2E                     	;# 
  2158  0E2F                     	;# 
  2159  0E90                     	;# 
  2160  0E91                     	;# 
  2161  0E92                     	;# 
  2162  0E94                     	;# 
  2163  0E95                     	;# 
  2164  0E9C                     	;# 
  2165  0E9D                     	;# 
  2166  0E9E                     	;# 
  2167  0E9F                     	;# 
  2168  0EA0                     	;# 
  2169  0EA1                     	;# 
  2170  0EA2                     	;# 
  2171  0EA3                     	;# 
  2172  0EA4                     	;# 
  2173  0EA5                     	;# 
  2174  0EA6                     	;# 
  2175  0EA7                     	;# 
  2176  0F0F                     	;# 
  2177  0F10                     	;# 
  2178  0F11                     	;# 
  2179  0F12                     	;# 
  2180  0F13                     	;# 
  2181  0F14                     	;# 
  2182  0F15                     	;# 
  2183  0F16                     	;# 
  2184  0F17                     	;# 
  2185  0F18                     	;# 
  2186  0F19                     	;# 
  2187  0F1A                     	;# 
  2188  0F1B                     	;# 
  2189  0F1C                     	;# 
  2190  0F1D                     	;# 
  2191  0F1E                     	;# 
  2192  0F1F                     	;# 
  2193  0F20                     	;# 
  2194  0F21                     	;# 
  2195  0F22                     	;# 
  2196  0F23                     	;# 
  2197  0F24                     	;# 
  2198  0F25                     	;# 
  2199  0F26                     	;# 
  2200  0F27                     	;# 
  2201  0F28                     	;# 
  2202  0F29                     	;# 
  2203  0F2A                     	;# 
  2204  0F2B                     	;# 
  2205  0F2C                     	;# 
  2206  0F2D                     	;# 
  2207  0F2E                     	;# 
  2208  0F2F                     	;# 
  2209  0F30                     	;# 
  2210  0F31                     	;# 
  2211  0F32                     	;# 
  2212  0F33                     	;# 
  2213  0F34                     	;# 
  2214  0F35                     	;# 
  2215  0F36                     	;# 
  2216  0F37                     	;# 
  2217  0FE4                     	;# 
  2218  0FE5                     	;# 
  2219  0FE6                     	;# 
  2220  0FE7                     	;# 
  2221  0FE8                     	;# 
  2222  0FE9                     	;# 
  2223  0FEA                     	;# 
  2224  0FEB                     	;# 
  2225  0FED                     	;# 
  2226  0FEE                     	;# 
  2227  0FEF                     	;# 
  2228  0000                     	;# 
  2229  0001                     	;# 
  2230  0002                     	;# 
  2231  0003                     	;# 
  2232  0004                     	;# 
  2233  0005                     	;# 
  2234  0006                     	;# 
  2235  0007                     	;# 
  2236  0008                     	;# 
  2237  0009                     	;# 
  2238  000A                     	;# 
  2239  000B                     	;# 
  2240  000C                     	;# 
  2241  000D                     	;# 
  2242  000E                     	;# 
  2243  0010                     	;# 
  2244  0011                     	;# 
  2245  0012                     	;# 
  2246  0013                     	;# 
  2247  0014                     	;# 
  2248  0015                     	;# 
  2249  0015                     	;# 
  2250  0016                     	;# 
  2251  0016                     	;# 
  2252  0017                     	;# 
  2253  0018                     	;# 
  2254  0019                     	;# 
  2255  0019                     	;# 
  2256  001A                     	;# 
  2257  001B                     	;# 
  2258  001C                     	;# 
  2259  001D                     	;# 
  2260  001E                     	;# 
  2261  001F                     	;# 
  2262  008C                     	;# 
  2263  008D                     	;# 
  2264  008E                     	;# 
  2265  0090                     	;# 
  2266  0091                     	;# 
  2267  0092                     	;# 
  2268  0093                     	;# 
  2269  0094                     	;# 
  2270  0097                     	;# 
  2271  009B                     	;# 
  2272  009B                     	;# 
  2273  009C                     	;# 
  2274  009D                     	;# 
  2275  009E                     	;# 
  2276  009F                     	;# 
  2277  010C                     	;# 
  2278  010D                     	;# 
  2279  010E                     	;# 
  2280  0111                     	;# 
  2281  0112                     	;# 
  2282  0113                     	;# 
  2283  0114                     	;# 
  2284  0115                     	;# 
  2285  0116                     	;# 
  2286  0117                     	;# 
  2287  0118                     	;# 
  2288  0119                     	;# 
  2289  018C                     	;# 
  2290  018D                     	;# 
  2291  018E                     	;# 
  2292  0197                     	;# 
  2293  0199                     	;# 
  2294  0199                     	;# 
  2295  0199                     	;# 
  2296  019A                     	;# 
  2297  019A                     	;# 
  2298  019A                     	;# 
  2299  019B                     	;# 
  2300  019B                     	;# 
  2301  019B                     	;# 
  2302  019B                     	;# 
  2303  019B                     	;# 
  2304  019C                     	;# 
  2305  019C                     	;# 
  2306  019C                     	;# 
  2307  019D                     	;# 
  2308  019D                     	;# 
  2309  019D                     	;# 
  2310  019E                     	;# 
  2311  019E                     	;# 
  2312  019E                     	;# 
  2313  019F                     	;# 
  2314  019F                     	;# 
  2315  019F                     	;# 
  2316  019F                     	;# 
  2317  019F                     	;# 
  2318  020C                     	;# 
  2319  020D                     	;# 
  2320  020E                     	;# 
  2321  0211                     	;# 
  2322  0211                     	;# 
  2323  0212                     	;# 
  2324  0212                     	;# 
  2325  0213                     	;# 
  2326  0213                     	;# 
  2327  0214                     	;# 
  2328  0214                     	;# 
  2329  0215                     	;# 
  2330  0215                     	;# 
  2331  0215                     	;# 
  2332  0215                     	;# 
  2333  0216                     	;# 
  2334  0216                     	;# 
  2335  0217                     	;# 
  2336  0217                     	;# 
  2337  0219                     	;# 
  2338  021A                     	;# 
  2339  021B                     	;# 
  2340  021C                     	;# 
  2341  021D                     	;# 
  2342  021D                     	;# 
  2343  021E                     	;# 
  2344  021F                     	;# 
  2345  028C                     	;# 
  2346  028D                     	;# 
  2347  028E                     	;# 
  2348  0291                     	;# 
  2349  0291                     	;# 
  2350  0292                     	;# 
  2351  0293                     	;# 
  2352  0294                     	;# 
  2353  0295                     	;# 
  2354  0295                     	;# 
  2355  0296                     	;# 
  2356  0297                     	;# 
  2357  0298                     	;# 
  2358  029F                     	;# 
  2359  030C                     	;# 
  2360  030D                     	;# 
  2361  030E                     	;# 
  2362  0311                     	;# 
  2363  0311                     	;# 
  2364  0312                     	;# 
  2365  0313                     	;# 
  2366  0314                     	;# 
  2367  0315                     	;# 
  2368  0315                     	;# 
  2369  0316                     	;# 
  2370  0317                     	;# 
  2371  0318                     	;# 
  2372  038C                     	;# 
  2373  038D                     	;# 
  2374  038E                     	;# 
  2375  0391                     	;# 
  2376  0392                     	;# 
  2377  0393                     	;# 
  2378  0394                     	;# 
  2379  0395                     	;# 
  2380  0396                     	;# 
  2381  0397                     	;# 
  2382  0398                     	;# 
  2383  0399                     	;# 
  2384  039A                     	;# 
  2385  039C                     	;# 
  2386  039D                     	;# 
  2387  039E                     	;# 
  2388  039F                     	;# 
  2389  0411                     	;# 
  2390  0411                     	;# 
  2391  0412                     	;# 
  2392  0413                     	;# 
  2393  0414                     	;# 
  2394  0415                     	;# 
  2395  0416                     	;# 
  2396  0417                     	;# 
  2397  0418                     	;# 
  2398  0418                     	;# 
  2399  0419                     	;# 
  2400  041A                     	;# 
  2401  041B                     	;# 
  2402  041C                     	;# 
  2403  041D                     	;# 
  2404  041E                     	;# 
  2405  041F                     	;# 
  2406  0498                     	;# 
  2407  0498                     	;# 
  2408  0499                     	;# 
  2409  049A                     	;# 
  2410  049B                     	;# 
  2411  049B                     	;# 
  2412  049C                     	;# 
  2413  049D                     	;# 
  2414  049E                     	;# 
  2415  049F                     	;# 
  2416  0617                     	;# 
  2417  0618                     	;# 
  2418  0619                     	;# 
  2419  0619                     	;# 
  2420  061A                     	;# 
  2421  061B                     	;# 
  2422  061C                     	;# 
  2423  061C                     	;# 
  2424  061F                     	;# 
  2425  0691                     	;# 
  2426  0692                     	;# 
  2427  0693                     	;# 
  2428  0694                     	;# 
  2429  0695                     	;# 
  2430  0696                     	;# 
  2431  0697                     	;# 
  2432  0698                     	;# 
  2433  0699                     	;# 
  2434  0711                     	;# 
  2435  0712                     	;# 
  2436  0713                     	;# 
  2437  0714                     	;# 
  2438  0715                     	;# 
  2439  0716                     	;# 
  2440  0717                     	;# 
  2441  0718                     	;# 
  2442  0719                     	;# 
  2443  0891                     	;# 
  2444  0891                     	;# 
  2445  0891                     	;# 
  2446  0891                     	;# 
  2447  0891                     	;# 
  2448  0891                     	;# 
  2449  0892                     	;# 
  2450  0892                     	;# 
  2451  0892                     	;# 
  2452  0893                     	;# 
  2453  0893                     	;# 
  2454  0893                     	;# 
  2455  0893                     	;# 
  2456  0893                     	;# 
  2457  0893                     	;# 
  2458  0894                     	;# 
  2459  0894                     	;# 
  2460  0894                     	;# 
  2461  0895                     	;# 
  2462  0895                     	;# 
  2463  0895                     	;# 
  2464  0896                     	;# 
  2465  0896                     	;# 
  2466  0896                     	;# 
  2467  089B                     	;# 
  2468  0911                     	;# 
  2469  0912                     	;# 
  2470  0913                     	;# 
  2471  0914                     	;# 
  2472  0915                     	;# 
  2473  0916                     	;# 
  2474  0918                     	;# 
  2475  0919                     	;# 
  2476  091A                     	;# 
  2477  091B                     	;# 
  2478  091C                     	;# 
  2479  091D                     	;# 
  2480  091E                     	;# 
  2481  091F                     	;# 
  2482  0E0F                     	;# 
  2483  0E10                     	;# 
  2484  0E11                     	;# 
  2485  0E12                     	;# 
  2486  0E13                     	;# 
  2487  0E14                     	;# 
  2488  0E15                     	;# 
  2489  0E16                     	;# 
  2490  0E17                     	;# 
  2491  0E18                     	;# 
  2492  0E19                     	;# 
  2493  0E1A                     	;# 
  2494  0E1B                     	;# 
  2495  0E1C                     	;# 
  2496  0E1D                     	;# 
  2497  0E1E                     	;# 
  2498  0E1F                     	;# 
  2499  0E20                     	;# 
  2500  0E21                     	;# 
  2501  0E22                     	;# 
  2502  0E24                     	;# 
  2503  0E25                     	;# 
  2504  0E28                     	;# 
  2505  0E29                     	;# 
  2506  0E2A                     	;# 
  2507  0E2B                     	;# 
  2508  0E2C                     	;# 
  2509  0E2D                     	;# 
  2510  0E2E                     	;# 
  2511  0E2F                     	;# 
  2512  0E90                     	;# 
  2513  0E91                     	;# 
  2514  0E92                     	;# 
  2515  0E94                     	;# 
  2516  0E95                     	;# 
  2517  0E9C                     	;# 
  2518  0E9D                     	;# 
  2519  0E9E                     	;# 
  2520  0E9F                     	;# 
  2521  0EA0                     	;# 
  2522  0EA1                     	;# 
  2523  0EA2                     	;# 
  2524  0EA3                     	;# 
  2525  0EA4                     	;# 
  2526  0EA5                     	;# 
  2527  0EA6                     	;# 
  2528  0EA7                     	;# 
  2529  0F0F                     	;# 
  2530  0F10                     	;# 
  2531  0F11                     	;# 
  2532  0F12                     	;# 
  2533  0F13                     	;# 
  2534  0F14                     	;# 
  2535  0F15                     	;# 
  2536  0F16                     	;# 
  2537  0F17                     	;# 
  2538  0F18                     	;# 
  2539  0F19                     	;# 
  2540  0F1A                     	;# 
  2541  0F1B                     	;# 
  2542  0F1C                     	;# 
  2543  0F1D                     	;# 
  2544  0F1E                     	;# 
  2545  0F1F                     	;# 
  2546  0F20                     	;# 
  2547  0F21                     	;# 
  2548  0F22                     	;# 
  2549  0F23                     	;# 
  2550  0F24                     	;# 
  2551  0F25                     	;# 
  2552  0F26                     	;# 
  2553  0F27                     	;# 
  2554  0F28                     	;# 
  2555  0F29                     	;# 
  2556  0F2A                     	;# 
  2557  0F2B                     	;# 
  2558  0F2C                     	;# 
  2559  0F2D                     	;# 
  2560  0F2E                     	;# 
  2561  0F2F                     	;# 
  2562  0F30                     	;# 
  2563  0F31                     	;# 
  2564  0F32                     	;# 
  2565  0F33                     	;# 
  2566  0F34                     	;# 
  2567  0F35                     	;# 
  2568  0F36                     	;# 
  2569  0F37                     	;# 
  2570  0FE4                     	;# 
  2571  0FE5                     	;# 
  2572  0FE6                     	;# 
  2573  0FE7                     	;# 
  2574  0FE8                     	;# 
  2575  0FE9                     	;# 
  2576  0FEA                     	;# 
  2577  0FEB                     	;# 
  2578  0FED                     	;# 
  2579  0FEE                     	;# 
  2580  0FEF                     	;# 
  2581  0000                     	;# 
  2582  0001                     	;# 
  2583  0002                     	;# 
  2584  0003                     	;# 
  2585  0004                     	;# 
  2586  0005                     	;# 
  2587  0006                     	;# 
  2588  0007                     	;# 
  2589  0008                     	;# 
  2590  0009                     	;# 
  2591  000A                     	;# 
  2592  000B                     	;# 
  2593  000C                     	;# 
  2594  000D                     	;# 
  2595  000E                     	;# 
  2596  0010                     	;# 
  2597  0011                     	;# 
  2598  0012                     	;# 
  2599  0013                     	;# 
  2600  0014                     	;# 
  2601  0015                     	;# 
  2602  0015                     	;# 
  2603  0016                     	;# 
  2604  0016                     	;# 
  2605  0017                     	;# 
  2606  0018                     	;# 
  2607  0019                     	;# 
  2608  0019                     	;# 
  2609  001A                     	;# 
  2610  001B                     	;# 
  2611  001C                     	;# 
  2612  001D                     	;# 
  2613  001E                     	;# 
  2614  001F                     	;# 
  2615  008C                     	;# 
  2616  008D                     	;# 
  2617  008E                     	;# 
  2618  0090                     	;# 
  2619  0091                     	;# 
  2620  0092                     	;# 
  2621  0093                     	;# 
  2622  0094                     	;# 
  2623  0097                     	;# 
  2624  009B                     	;# 
  2625  009B                     	;# 
  2626  009C                     	;# 
  2627  009D                     	;# 
  2628  009E                     	;# 
  2629  009F                     	;# 
  2630  010C                     	;# 
  2631  010D                     	;# 
  2632  010E                     	;# 
  2633  0111                     	;# 
  2634  0112                     	;# 
  2635  0113                     	;# 
  2636  0114                     	;# 
  2637  0115                     	;# 
  2638  0116                     	;# 
  2639  0117                     	;# 
  2640  0118                     	;# 
  2641  0119                     	;# 
  2642  018C                     	;# 
  2643  018D                     	;# 
  2644  018E                     	;# 
  2645  0197                     	;# 
  2646  0199                     	;# 
  2647  0199                     	;# 
  2648  0199                     	;# 
  2649  019A                     	;# 
  2650  019A                     	;# 
  2651  019A                     	;# 
  2652  019B                     	;# 
  2653  019B                     	;# 
  2654  019B                     	;# 
  2655  019B                     	;# 
  2656  019B                     	;# 
  2657  019C                     	;# 
  2658  019C                     	;# 
  2659  019C                     	;# 
  2660  019D                     	;# 
  2661  019D                     	;# 
  2662  019D                     	;# 
  2663  019E                     	;# 
  2664  019E                     	;# 
  2665  019E                     	;# 
  2666  019F                     	;# 
  2667  019F                     	;# 
  2668  019F                     	;# 
  2669  019F                     	;# 
  2670  019F                     	;# 
  2671  020C                     	;# 
  2672  020D                     	;# 
  2673  020E                     	;# 
  2674  0211                     	;# 
  2675  0211                     	;# 
  2676  0212                     	;# 
  2677  0212                     	;# 
  2678  0213                     	;# 
  2679  0213                     	;# 
  2680  0214                     	;# 
  2681  0214                     	;# 
  2682  0215                     	;# 
  2683  0215                     	;# 
  2684  0215                     	;# 
  2685  0215                     	;# 
  2686  0216                     	;# 
  2687  0216                     	;# 
  2688  0217                     	;# 
  2689  0217                     	;# 
  2690  0219                     	;# 
  2691  021A                     	;# 
  2692  021B                     	;# 
  2693  021C                     	;# 
  2694  021D                     	;# 
  2695  021D                     	;# 
  2696  021E                     	;# 
  2697  021F                     	;# 
  2698  028C                     	;# 
  2699  028D                     	;# 
  2700  028E                     	;# 
  2701  0291                     	;# 
  2702  0291                     	;# 
  2703  0292                     	;# 
  2704  0293                     	;# 
  2705  0294                     	;# 
  2706  0295                     	;# 
  2707  0295                     	;# 
  2708  0296                     	;# 
  2709  0297                     	;# 
  2710  0298                     	;# 
  2711  029F                     	;# 
  2712  030C                     	;# 
  2713  030D                     	;# 
  2714  030E                     	;# 
  2715  0311                     	;# 
  2716  0311                     	;# 
  2717  0312                     	;# 
  2718  0313                     	;# 
  2719  0314                     	;# 
  2720  0315                     	;# 
  2721  0315                     	;# 
  2722  0316                     	;# 
  2723  0317                     	;# 
  2724  0318                     	;# 
  2725  038C                     	;# 
  2726  038D                     	;# 
  2727  038E                     	;# 
  2728  0391                     	;# 
  2729  0392                     	;# 
  2730  0393                     	;# 
  2731  0394                     	;# 
  2732  0395                     	;# 
  2733  0396                     	;# 
  2734  0397                     	;# 
  2735  0398                     	;# 
  2736  0399                     	;# 
  2737  039A                     	;# 
  2738  039C                     	;# 
  2739  039D                     	;# 
  2740  039E                     	;# 
  2741  039F                     	;# 
  2742  0411                     	;# 
  2743  0411                     	;# 
  2744  0412                     	;# 
  2745  0413                     	;# 
  2746  0414                     	;# 
  2747  0415                     	;# 
  2748  0416                     	;# 
  2749  0417                     	;# 
  2750  0418                     	;# 
  2751  0418                     	;# 
  2752  0419                     	;# 
  2753  041A                     	;# 
  2754  041B                     	;# 
  2755  041C                     	;# 
  2756  041D                     	;# 
  2757  041E                     	;# 
  2758  041F                     	;# 
  2759  0498                     	;# 
  2760  0498                     	;# 
  2761  0499                     	;# 
  2762  049A                     	;# 
  2763  049B                     	;# 
  2764  049B                     	;# 
  2765  049C                     	;# 
  2766  049D                     	;# 
  2767  049E                     	;# 
  2768  049F                     	;# 
  2769  0617                     	;# 
  2770  0618                     	;# 
  2771  0619                     	;# 
  2772  0619                     	;# 
  2773  061A                     	;# 
  2774  061B                     	;# 
  2775  061C                     	;# 
  2776  061C                     	;# 
  2777  061F                     	;# 
  2778  0691                     	;# 
  2779  0692                     	;# 
  2780  0693                     	;# 
  2781  0694                     	;# 
  2782  0695                     	;# 
  2783  0696                     	;# 
  2784  0697                     	;# 
  2785  0698                     	;# 
  2786  0699                     	;# 
  2787  0711                     	;# 
  2788  0712                     	;# 
  2789  0713                     	;# 
  2790  0714                     	;# 
  2791  0715                     	;# 
  2792  0716                     	;# 
  2793  0717                     	;# 
  2794  0718                     	;# 
  2795  0719                     	;# 
  2796  0891                     	;# 
  2797  0891                     	;# 
  2798  0891                     	;# 
  2799  0891                     	;# 
  2800  0891                     	;# 
  2801  0891                     	;# 
  2802  0892                     	;# 
  2803  0892                     	;# 
  2804  0892                     	;# 
  2805  0893                     	;# 
  2806  0893                     	;# 
  2807  0893                     	;# 
  2808  0893                     	;# 
  2809  0893                     	;# 
  2810  0893                     	;# 
  2811  0894                     	;# 
  2812  0894                     	;# 
  2813  0894                     	;# 
  2814  0895                     	;# 
  2815  0895                     	;# 
  2816  0895                     	;# 
  2817  0896                     	;# 
  2818  0896                     	;# 
  2819  0896                     	;# 
  2820  089B                     	;# 
  2821  0911                     	;# 
  2822  0912                     	;# 
  2823  0913                     	;# 
  2824  0914                     	;# 
  2825  0915                     	;# 
  2826  0916                     	;# 
  2827  0918                     	;# 
  2828  0919                     	;# 
  2829  091A                     	;# 
  2830  091B                     	;# 
  2831  091C                     	;# 
  2832  091D                     	;# 
  2833  091E                     	;# 
  2834  091F                     	;# 
  2835  0E0F                     	;# 
  2836  0E10                     	;# 
  2837  0E11                     	;# 
  2838  0E12                     	;# 
  2839  0E13                     	;# 
  2840  0E14                     	;# 
  2841  0E15                     	;# 
  2842  0E16                     	;# 
  2843  0E17                     	;# 
  2844  0E18                     	;# 
  2845  0E19                     	;# 
  2846  0E1A                     	;# 
  2847  0E1B                     	;# 
  2848  0E1C                     	;# 
  2849  0E1D                     	;# 
  2850  0E1E                     	;# 
  2851  0E1F                     	;# 
  2852  0E20                     	;# 
  2853  0E21                     	;# 
  2854  0E22                     	;# 
  2855  0E24                     	;# 
  2856  0E25                     	;# 
  2857  0E28                     	;# 
  2858  0E29                     	;# 
  2859  0E2A                     	;# 
  2860  0E2B                     	;# 
  2861  0E2C                     	;# 
  2862  0E2D                     	;# 
  2863  0E2E                     	;# 
  2864  0E2F                     	;# 
  2865  0E90                     	;# 
  2866  0E91                     	;# 
  2867  0E92                     	;# 
  2868  0E94                     	;# 
  2869  0E95                     	;# 
  2870  0E9C                     	;# 
  2871  0E9D                     	;# 
  2872  0E9E                     	;# 
  2873  0E9F                     	;# 
  2874  0EA0                     	;# 
  2875  0EA1                     	;# 
  2876  0EA2                     	;# 
  2877  0EA3                     	;# 
  2878  0EA4                     	;# 
  2879  0EA5                     	;# 
  2880  0EA6                     	;# 
  2881  0EA7                     	;# 
  2882  0F0F                     	;# 
  2883  0F10                     	;# 
  2884  0F11                     	;# 
  2885  0F12                     	;# 
  2886  0F13                     	;# 
  2887  0F14                     	;# 
  2888  0F15                     	;# 
  2889  0F16                     	;# 
  2890  0F17                     	;# 
  2891  0F18                     	;# 
  2892  0F19                     	;# 
  2893  0F1A                     	;# 
  2894  0F1B                     	;# 
  2895  0F1C                     	;# 
  2896  0F1D                     	;# 
  2897  0F1E                     	;# 
  2898  0F1F                     	;# 
  2899  0F20                     	;# 
  2900  0F21                     	;# 
  2901  0F22                     	;# 
  2902  0F23                     	;# 
  2903  0F24                     	;# 
  2904  0F25                     	;# 
  2905  0F26                     	;# 
  2906  0F27                     	;# 
  2907  0F28                     	;# 
  2908  0F29                     	;# 
  2909  0F2A                     	;# 
  2910  0F2B                     	;# 
  2911  0F2C                     	;# 
  2912  0F2D                     	;# 
  2913  0F2E                     	;# 
  2914  0F2F                     	;# 
  2915  0F30                     	;# 
  2916  0F31                     	;# 
  2917  0F32                     	;# 
  2918  0F33                     	;# 
  2919  0F34                     	;# 
  2920  0F35                     	;# 
  2921  0F36                     	;# 
  2922  0F37                     	;# 
  2923  0FE4                     	;# 
  2924  0FE5                     	;# 
  2925  0FE6                     	;# 
  2926  0FE7                     	;# 
  2927  0FE8                     	;# 
  2928  0FE9                     	;# 
  2929  0FEA                     	;# 
  2930  0FEB                     	;# 
  2931  0FED                     	;# 
  2932  0FEE                     	;# 
  2933  0FEF                     	;# 
  2934  0000                     	;# 
  2935  0001                     	;# 
  2936  0002                     	;# 
  2937  0003                     	;# 
  2938  0004                     	;# 
  2939  0005                     	;# 
  2940  0006                     	;# 
  2941  0007                     	;# 
  2942  0008                     	;# 
  2943  0009                     	;# 
  2944  000A                     	;# 
  2945  000B                     	;# 
  2946  000C                     	;# 
  2947  000D                     	;# 
  2948  000E                     	;# 
  2949  0010                     	;# 
  2950  0011                     	;# 
  2951  0012                     	;# 
  2952  0013                     	;# 
  2953  0014                     	;# 
  2954  0015                     	;# 
  2955  0015                     	;# 
  2956  0016                     	;# 
  2957  0016                     	;# 
  2958  0017                     	;# 
  2959  0018                     	;# 
  2960  0019                     	;# 
  2961  0019                     	;# 
  2962  001A                     	;# 
  2963  001B                     	;# 
  2964  001C                     	;# 
  2965  001D                     	;# 
  2966  001E                     	;# 
  2967  001F                     	;# 
  2968  008C                     	;# 
  2969  008D                     	;# 
  2970  008E                     	;# 
  2971  0090                     	;# 
  2972  0091                     	;# 
  2973  0092                     	;# 
  2974  0093                     	;# 
  2975  0094                     	;# 
  2976  0097                     	;# 
  2977  009B                     	;# 
  2978  009B                     	;# 
  2979  009C                     	;# 
  2980  009D                     	;# 
  2981  009E                     	;# 
  2982  009F                     	;# 
  2983  010C                     	;# 
  2984  010D                     	;# 
  2985  010E                     	;# 
  2986  0111                     	;# 
  2987  0112                     	;# 
  2988  0113                     	;# 
  2989  0114                     	;# 
  2990  0115                     	;# 
  2991  0116                     	;# 
  2992  0117                     	;# 
  2993  0118                     	;# 
  2994  0119                     	;# 
  2995  018C                     	;# 
  2996  018D                     	;# 
  2997  018E                     	;# 
  2998  0197                     	;# 
  2999  0199                     	;# 
  3000  0199                     	;# 
  3001  0199                     	;# 
  3002  019A                     	;# 
  3003  019A                     	;# 
  3004  019A                     	;# 
  3005  019B                     	;# 
  3006  019B                     	;# 
  3007  019B                     	;# 
  3008  019B                     	;# 
  3009  019B                     	;# 
  3010  019C                     	;# 
  3011  019C                     	;# 
  3012  019C                     	;# 
  3013  019D                     	;# 
  3014  019D                     	;# 
  3015  019D                     	;# 
  3016  019E                     	;# 
  3017  019E                     	;# 
  3018  019E                     	;# 
  3019  019F                     	;# 
  3020  019F                     	;# 
  3021  019F                     	;# 
  3022  019F                     	;# 
  3023  019F                     	;# 
  3024  020C                     	;# 
  3025  020D                     	;# 
  3026  020E                     	;# 
  3027  0211                     	;# 
  3028  0211                     	;# 
  3029  0212                     	;# 
  3030  0212                     	;# 
  3031  0213                     	;# 
  3032  0213                     	;# 
  3033  0214                     	;# 
  3034  0214                     	;# 
  3035  0215                     	;# 
  3036  0215                     	;# 
  3037  0215                     	;# 
  3038  0215                     	;# 
  3039  0216                     	;# 
  3040  0216                     	;# 
  3041  0217                     	;# 
  3042  0217                     	;# 
  3043  0219                     	;# 
  3044  021A                     	;# 
  3045  021B                     	;# 
  3046  021C                     	;# 
  3047  021D                     	;# 
  3048  021D                     	;# 
  3049  021E                     	;# 
  3050  021F                     	;# 
  3051  028C                     	;# 
  3052  028D                     	;# 
  3053  028E                     	;# 
  3054  0291                     	;# 
  3055  0291                     	;# 
  3056  0292                     	;# 
  3057  0293                     	;# 
  3058  0294                     	;# 
  3059  0295                     	;# 
  3060  0295                     	;# 
  3061  0296                     	;# 
  3062  0297                     	;# 
  3063  0298                     	;# 
  3064  029F                     	;# 
  3065  030C                     	;# 
  3066  030D                     	;# 
  3067  030E                     	;# 
  3068  0311                     	;# 
  3069  0311                     	;# 
  3070  0312                     	;# 
  3071  0313                     	;# 
  3072  0314                     	;# 
  3073  0315                     	;# 
  3074  0315                     	;# 
  3075  0316                     	;# 
  3076  0317                     	;# 
  3077  0318                     	;# 
  3078  038C                     	;# 
  3079  038D                     	;# 
  3080  038E                     	;# 
  3081  0391                     	;# 
  3082  0392                     	;# 
  3083  0393                     	;# 
  3084  0394                     	;# 
  3085  0395                     	;# 
  3086  0396                     	;# 
  3087  0397                     	;# 
  3088  0398                     	;# 
  3089  0399                     	;# 
  3090  039A                     	;# 
  3091  039C                     	;# 
  3092  039D                     	;# 
  3093  039E                     	;# 
  3094  039F                     	;# 
  3095  0411                     	;# 
  3096  0411                     	;# 
  3097  0412                     	;# 
  3098  0413                     	;# 
  3099  0414                     	;# 
  3100  0415                     	;# 
  3101  0416                     	;# 
  3102  0417                     	;# 
  3103  0418                     	;# 
  3104  0418                     	;# 
  3105  0419                     	;# 
  3106  041A                     	;# 
  3107  041B                     	;# 
  3108  041C                     	;# 
  3109  041D                     	;# 
  3110  041E                     	;# 
  3111  041F                     	;# 
  3112  0498                     	;# 
  3113  0498                     	;# 
  3114  0499                     	;# 
  3115  049A                     	;# 
  3116  049B                     	;# 
  3117  049B                     	;# 
  3118  049C                     	;# 
  3119  049D                     	;# 
  3120  049E                     	;# 
  3121  049F                     	;# 
  3122  0617                     	;# 
  3123  0618                     	;# 
  3124  0619                     	;# 
  3125  0619                     	;# 
  3126  061A                     	;# 
  3127  061B                     	;# 
  3128  061C                     	;# 
  3129  061C                     	;# 
  3130  061F                     	;# 
  3131  0691                     	;# 
  3132  0692                     	;# 
  3133  0693                     	;# 
  3134  0694                     	;# 
  3135  0695                     	;# 
  3136  0696                     	;# 
  3137  0697                     	;# 
  3138  0698                     	;# 
  3139  0699                     	;# 
  3140  0711                     	;# 
  3141  0712                     	;# 
  3142  0713                     	;# 
  3143  0714                     	;# 
  3144  0715                     	;# 
  3145  0716                     	;# 
  3146  0717                     	;# 
  3147  0718                     	;# 
  3148  0719                     	;# 
  3149  0891                     	;# 
  3150  0891                     	;# 
  3151  0891                     	;# 
  3152  0891                     	;# 
  3153  0891                     	;# 
  3154  0891                     	;# 
  3155  0892                     	;# 
  3156  0892                     	;# 
  3157  0892                     	;# 
  3158  0893                     	;# 
  3159  0893                     	;# 
  3160  0893                     	;# 
  3161  0893                     	;# 
  3162  0893                     	;# 
  3163  0893                     	;# 
  3164  0894                     	;# 
  3165  0894                     	;# 
  3166  0894                     	;# 
  3167  0895                     	;# 
  3168  0895                     	;# 
  3169  0895                     	;# 
  3170  0896                     	;# 
  3171  0896                     	;# 
  3172  0896                     	;# 
  3173  089B                     	;# 
  3174  0911                     	;# 
  3175  0912                     	;# 
  3176  0913                     	;# 
  3177  0914                     	;# 
  3178  0915                     	;# 
  3179  0916                     	;# 
  3180  0918                     	;# 
  3181  0919                     	;# 
  3182  091A                     	;# 
  3183  091B                     	;# 
  3184  091C                     	;# 
  3185  091D                     	;# 
  3186  091E                     	;# 
  3187  091F                     	;# 
  3188  0E0F                     	;# 
  3189  0E10                     	;# 
  3190  0E11                     	;# 
  3191  0E12                     	;# 
  3192  0E13                     	;# 
  3193  0E14                     	;# 
  3194  0E15                     	;# 
  3195  0E16                     	;# 
  3196  0E17                     	;# 
  3197  0E18                     	;# 
  3198  0E19                     	;# 
  3199  0E1A                     	;# 
  3200  0E1B                     	;# 
  3201  0E1C                     	;# 
  3202  0E1D                     	;# 
  3203  0E1E                     	;# 
  3204  0E1F                     	;# 
  3205  0E20                     	;# 
  3206  0E21                     	;# 
  3207  0E22                     	;# 
  3208  0E24                     	;# 
  3209  0E25                     	;# 
  3210  0E28                     	;# 
  3211  0E29                     	;# 
  3212  0E2A                     	;# 
  3213  0E2B                     	;# 
  3214  0E2C                     	;# 
  3215  0E2D                     	;# 
  3216  0E2E                     	;# 
  3217  0E2F                     	;# 
  3218  0E90                     	;# 
  3219  0E91                     	;# 
  3220  0E92                     	;# 
  3221  0E94                     	;# 
  3222  0E95                     	;# 
  3223  0E9C                     	;# 
  3224  0E9D                     	;# 
  3225  0E9E                     	;# 
  3226  0E9F                     	;# 
  3227  0EA0                     	;# 
  3228  0EA1                     	;# 
  3229  0EA2                     	;# 
  3230  0EA3                     	;# 
  3231  0EA4                     	;# 
  3232  0EA5                     	;# 
  3233  0EA6                     	;# 
  3234  0EA7                     	;# 
  3235  0F0F                     	;# 
  3236  0F10                     	;# 
  3237  0F11                     	;# 
  3238  0F12                     	;# 
  3239  0F13                     	;# 
  3240  0F14                     	;# 
  3241  0F15                     	;# 
  3242  0F16                     	;# 
  3243  0F17                     	;# 
  3244  0F18                     	;# 
  3245  0F19                     	;# 
  3246  0F1A                     	;# 
  3247  0F1B                     	;# 
  3248  0F1C                     	;# 
  3249  0F1D                     	;# 
  3250  0F1E                     	;# 
  3251  0F1F                     	;# 
  3252  0F20                     	;# 
  3253  0F21                     	;# 
  3254  0F22                     	;# 
  3255  0F23                     	;# 
  3256  0F24                     	;# 
  3257  0F25                     	;# 
  3258  0F26                     	;# 
  3259  0F27                     	;# 
  3260  0F28                     	;# 
  3261  0F29                     	;# 
  3262  0F2A                     	;# 
  3263  0F2B                     	;# 
  3264  0F2C                     	;# 
  3265  0F2D                     	;# 
  3266  0F2E                     	;# 
  3267  0F2F                     	;# 
  3268  0F30                     	;# 
  3269  0F31                     	;# 
  3270  0F32                     	;# 
  3271  0F33                     	;# 
  3272  0F34                     	;# 
  3273  0F35                     	;# 
  3274  0F36                     	;# 
  3275  0F37                     	;# 
  3276  0FE4                     	;# 
  3277  0FE5                     	;# 
  3278  0FE6                     	;# 
  3279  0FE7                     	;# 
  3280  0FE8                     	;# 
  3281  0FE9                     	;# 
  3282  0FEA                     	;# 
  3283  0FEB                     	;# 
  3284  0FED                     	;# 
  3285  0FEE                     	;# 
  3286  0FEF                     	;# 
  3287  0000                     	;# 
  3288  0001                     	;# 
  3289  0002                     	;# 
  3290  0003                     	;# 
  3291  0004                     	;# 
  3292  0005                     	;# 
  3293  0006                     	;# 
  3294  0007                     	;# 
  3295  0008                     	;# 
  3296  0009                     	;# 
  3297  000A                     	;# 
  3298  000B                     	;# 
  3299  000C                     	;# 
  3300  000D                     	;# 
  3301  000E                     	;# 
  3302  0010                     	;# 
  3303  0011                     	;# 
  3304  0012                     	;# 
  3305  0013                     	;# 
  3306  0014                     	;# 
  3307  0015                     	;# 
  3308  0015                     	;# 
  3309  0016                     	;# 
  3310  0016                     	;# 
  3311  0017                     	;# 
  3312  0018                     	;# 
  3313  0019                     	;# 
  3314  0019                     	;# 
  3315  001A                     	;# 
  3316  001B                     	;# 
  3317  001C                     	;# 
  3318  001D                     	;# 
  3319  001E                     	;# 
  3320  001F                     	;# 
  3321  008C                     	;# 
  3322  008D                     	;# 
  3323  008E                     	;# 
  3324  0090                     	;# 
  3325  0091                     	;# 
  3326  0092                     	;# 
  3327  0093                     	;# 
  3328  0094                     	;# 
  3329  0097                     	;# 
  3330  009B                     	;# 
  3331  009B                     	;# 
  3332  009C                     	;# 
  3333  009D                     	;# 
  3334  009E                     	;# 
  3335  009F                     	;# 
  3336  010C                     	;# 
  3337  010D                     	;# 
  3338  010E                     	;# 
  3339  0111                     	;# 
  3340  0112                     	;# 
  3341  0113                     	;# 
  3342  0114                     	;# 
  3343  0115                     	;# 
  3344  0116                     	;# 
  3345  0117                     	;# 
  3346  0118                     	;# 
  3347  0119                     	;# 
  3348  018C                     	;# 
  3349  018D                     	;# 
  3350  018E                     	;# 
  3351  0197                     	;# 
  3352  0199                     	;# 
  3353  0199                     	;# 
  3354  0199                     	;# 
  3355  019A                     	;# 
  3356  019A                     	;# 
  3357  019A                     	;# 
  3358  019B                     	;# 
  3359  019B                     	;# 
  3360  019B                     	;# 
  3361  019B                     	;# 
  3362  019B                     	;# 
  3363  019C                     	;# 
  3364  019C                     	;# 
  3365  019C                     	;# 
  3366  019D                     	;# 
  3367  019D                     	;# 
  3368  019D                     	;# 
  3369  019E                     	;# 
  3370  019E                     	;# 
  3371  019E                     	;# 
  3372  019F                     	;# 
  3373  019F                     	;# 
  3374  019F                     	;# 
  3375  019F                     	;# 
  3376  019F                     	;# 
  3377  020C                     	;# 
  3378  020D                     	;# 
  3379  020E                     	;# 
  3380  0211                     	;# 
  3381  0211                     	;# 
  3382  0212                     	;# 
  3383  0212                     	;# 
  3384  0213                     	;# 
  3385  0213                     	;# 
  3386  0214                     	;# 
  3387  0214                     	;# 
  3388  0215                     	;# 
  3389  0215                     	;# 
  3390  0215                     	;# 
  3391  0215                     	;# 
  3392  0216                     	;# 
  3393  0216                     	;# 
  3394  0217                     	;# 
  3395  0217                     	;# 
  3396  0219                     	;# 
  3397  021A                     	;# 
  3398  021B                     	;# 
  3399  021C                     	;# 
  3400  021D                     	;# 
  3401  021D                     	;# 
  3402  021E                     	;# 
  3403  021F                     	;# 
  3404  028C                     	;# 
  3405  028D                     	;# 
  3406  028E                     	;# 
  3407  0291                     	;# 
  3408  0291                     	;# 
  3409  0292                     	;# 
  3410  0293                     	;# 
  3411  0294                     	;# 
  3412  0295                     	;# 
  3413  0295                     	;# 
  3414  0296                     	;# 
  3415  0297                     	;# 
  3416  0298                     	;# 
  3417  029F                     	;# 
  3418  030C                     	;# 
  3419  030D                     	;# 
  3420  030E                     	;# 
  3421  0311                     	;# 
  3422  0311                     	;# 
  3423  0312                     	;# 
  3424  0313                     	;# 
  3425  0314                     	;# 
  3426  0315                     	;# 
  3427  0315                     	;# 
  3428  0316                     	;# 
  3429  0317                     	;# 
  3430  0318                     	;# 
  3431  038C                     	;# 
  3432  038D                     	;# 
  3433  038E                     	;# 
  3434  0391                     	;# 
  3435  0392                     	;# 
  3436  0393                     	;# 
  3437  0394                     	;# 
  3438  0395                     	;# 
  3439  0396                     	;# 
  3440  0397                     	;# 
  3441  0398                     	;# 
  3442  0399                     	;# 
  3443  039A                     	;# 
  3444  039C                     	;# 
  3445  039D                     	;# 
  3446  039E                     	;# 
  3447  039F                     	;# 
  3448  0411                     	;# 
  3449  0411                     	;# 
  3450  0412                     	;# 
  3451  0413                     	;# 
  3452  0414                     	;# 
  3453  0415                     	;# 
  3454  0416                     	;# 
  3455  0417                     	;# 
  3456  0418                     	;# 
  3457  0418                     	;# 
  3458  0419                     	;# 
  3459  041A                     	;# 
  3460  041B                     	;# 
  3461  041C                     	;# 
  3462  041D                     	;# 
  3463  041E                     	;# 
  3464  041F                     	;# 
  3465  0498                     	;# 
  3466  0498                     	;# 
  3467  0499                     	;# 
  3468  049A                     	;# 
  3469  049B                     	;# 
  3470  049B                     	;# 
  3471  049C                     	;# 
  3472  049D                     	;# 
  3473  049E                     	;# 
  3474  049F                     	;# 
  3475  0617                     	;# 
  3476  0618                     	;# 
  3477  0619                     	;# 
  3478  0619                     	;# 
  3479  061A                     	;# 
  3480  061B                     	;# 
  3481  061C                     	;# 
  3482  061C                     	;# 
  3483  061F                     	;# 
  3484  0691                     	;# 
  3485  0692                     	;# 
  3486  0693                     	;# 
  3487  0694                     	;# 
  3488  0695                     	;# 
  3489  0696                     	;# 
  3490  0697                     	;# 
  3491  0698                     	;# 
  3492  0699                     	;# 
  3493  0711                     	;# 
  3494  0712                     	;# 
  3495  0713                     	;# 
  3496  0714                     	;# 
  3497  0715                     	;# 
  3498  0716                     	;# 
  3499  0717                     	;# 
  3500  0718                     	;# 
  3501  0719                     	;# 
  3502  0891                     	;# 
  3503  0891                     	;# 
  3504  0891                     	;# 
  3505  0891                     	;# 
  3506  0891                     	;# 
  3507  0891                     	;# 
  3508  0892                     	;# 
  3509  0892                     	;# 
  3510  0892                     	;# 
  3511  0893                     	;# 
  3512  0893                     	;# 
  3513  0893                     	;# 
  3514  0893                     	;# 
  3515  0893                     	;# 
  3516  0893                     	;# 
  3517  0894                     	;# 
  3518  0894                     	;# 
  3519  0894                     	;# 
  3520  0895                     	;# 
  3521  0895                     	;# 
  3522  0895                     	;# 
  3523  0896                     	;# 
  3524  0896                     	;# 
  3525  0896                     	;# 
  3526  089B                     	;# 
  3527  0911                     	;# 
  3528  0912                     	;# 
  3529  0913                     	;# 
  3530  0914                     	;# 
  3531  0915                     	;# 
  3532  0916                     	;# 
  3533  0918                     	;# 
  3534  0919                     	;# 
  3535  091A                     	;# 
  3536  091B                     	;# 
  3537  091C                     	;# 
  3538  091D                     	;# 
  3539  091E                     	;# 
  3540  091F                     	;# 
  3541  0E0F                     	;# 
  3542  0E10                     	;# 
  3543  0E11                     	;# 
  3544  0E12                     	;# 
  3545  0E13                     	;# 
  3546  0E14                     	;# 
  3547  0E15                     	;# 
  3548  0E16                     	;# 
  3549  0E17                     	;# 
  3550  0E18                     	;# 
  3551  0E19                     	;# 
  3552  0E1A                     	;# 
  3553  0E1B                     	;# 
  3554  0E1C                     	;# 
  3555  0E1D                     	;# 
  3556  0E1E                     	;# 
  3557  0E1F                     	;# 
  3558  0E20                     	;# 
  3559  0E21                     	;# 
  3560  0E22                     	;# 
  3561  0E24                     	;# 
  3562  0E25                     	;# 
  3563  0E28                     	;# 
  3564  0E29                     	;# 
  3565  0E2A                     	;# 
  3566  0E2B                     	;# 
  3567  0E2C                     	;# 
  3568  0E2D                     	;# 
  3569  0E2E                     	;# 
  3570  0E2F                     	;# 
  3571  0E90                     	;# 
  3572  0E91                     	;# 
  3573  0E92                     	;# 
  3574  0E94                     	;# 
  3575  0E95                     	;# 
  3576  0E9C                     	;# 
  3577  0E9D                     	;# 
  3578  0E9E                     	;# 
  3579  0E9F                     	;# 
  3580  0EA0                     	;# 
  3581  0EA1                     	;# 
  3582  0EA2                     	;# 
  3583  0EA3                     	;# 
  3584  0EA4                     	;# 
  3585  0EA5                     	;# 
  3586  0EA6                     	;# 
  3587  0EA7                     	;# 
  3588  0F0F                     	;# 
  3589  0F10                     	;# 
  3590  0F11                     	;# 
  3591  0F12                     	;# 
  3592  0F13                     	;# 
  3593  0F14                     	;# 
  3594  0F15                     	;# 
  3595  0F16                     	;# 
  3596  0F17                     	;# 
  3597  0F18                     	;# 
  3598  0F19                     	;# 
  3599  0F1A                     	;# 
  3600  0F1B                     	;# 
  3601  0F1C                     	;# 
  3602  0F1D                     	;# 
  3603  0F1E                     	;# 
  3604  0F1F                     	;# 
  3605  0F20                     	;# 
  3606  0F21                     	;# 
  3607  0F22                     	;# 
  3608  0F23                     	;# 
  3609  0F24                     	;# 
  3610  0F25                     	;# 
  3611  0F26                     	;# 
  3612  0F27                     	;# 
  3613  0F28                     	;# 
  3614  0F29                     	;# 
  3615  0F2A                     	;# 
  3616  0F2B                     	;# 
  3617  0F2C                     	;# 
  3618  0F2D                     	;# 
  3619  0F2E                     	;# 
  3620  0F2F                     	;# 
  3621  0F30                     	;# 
  3622  0F31                     	;# 
  3623  0F32                     	;# 
  3624  0F33                     	;# 
  3625  0F34                     	;# 
  3626  0F35                     	;# 
  3627  0F36                     	;# 
  3628  0F37                     	;# 
  3629  0FE4                     	;# 
  3630  0FE5                     	;# 
  3631  0FE6                     	;# 
  3632  0FE7                     	;# 
  3633  0FE8                     	;# 
  3634  0FE9                     	;# 
  3635  0FEA                     	;# 
  3636  0FEB                     	;# 
  3637  0FED                     	;# 
  3638  0FEE                     	;# 
  3639  0FEF                     	;# 
  3640                           
  3641                           	psect	eeprom_data
  3642  0000  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3643  0008  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3644  0010  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3645  0018  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3646  0020  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3647  0028  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3648  0030  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3649  0038  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3650  0040  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3651  0048  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3652  0050  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3653  0058  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3654  0060  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3655  0068  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3656  0070  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3657  0078  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3658  0080  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3659  0088  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3660  0090  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3661  0098  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3662  00A0  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3663  00A8  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3664  00B0  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3665  00B8  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3666  00C0  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3667  00C8  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3668  00D0  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3669  00D8  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3670  00E0  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3671  00E8  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3672  00F0  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3673  00F8  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3674  0000                     	;# 
  3675  0001                     	;# 
  3676  0002                     	;# 
  3677  0003                     	;# 
  3678  0004                     	;# 
  3679  0005                     	;# 
  3680  0006                     	;# 
  3681  0007                     	;# 
  3682  0008                     	;# 
  3683  0009                     	;# 
  3684  000A                     	;# 
  3685  000B                     	;# 
  3686  000C                     	;# 
  3687  000D                     	;# 
  3688  000E                     	;# 
  3689  0010                     	;# 
  3690  0011                     	;# 
  3691  0012                     	;# 
  3692  0013                     	;# 
  3693  0014                     	;# 
  3694  0015                     	;# 
  3695  0015                     	;# 
  3696  0016                     	;# 
  3697  0016                     	;# 
  3698  0017                     	;# 
  3699  0018                     	;# 
  3700  0019                     	;# 
  3701  0019                     	;# 
  3702  001A                     	;# 
  3703  001B                     	;# 
  3704  001C                     	;# 
  3705  001D                     	;# 
  3706  001E                     	;# 
  3707  001F                     	;# 
  3708  008C                     	;# 
  3709  008D                     	;# 
  3710  008E                     	;# 
  3711  0090                     	;# 
  3712  0091                     	;# 
  3713  0092                     	;# 
  3714  0093                     	;# 
  3715  0094                     	;# 
  3716  0097                     	;# 
  3717  009B                     	;# 
  3718  009B                     	;# 
  3719  009C                     	;# 
  3720  009D                     	;# 
  3721  009E                     	;# 
  3722  009F                     	;# 
  3723  010C                     	;# 
  3724  010D                     	;# 
  3725  010E                     	;# 
  3726  0111                     	;# 
  3727  0112                     	;# 
  3728  0113                     	;# 
  3729  0114                     	;# 
  3730  0115                     	;# 
  3731  0116                     	;# 
  3732  0117                     	;# 
  3733  0118                     	;# 
  3734  0119                     	;# 
  3735  018C                     	;# 
  3736  018D                     	;# 
  3737  018E                     	;# 
  3738  0197                     	;# 
  3739  0199                     	;# 
  3740  0199                     	;# 
  3741  0199                     	;# 
  3742  019A                     	;# 
  3743  019A                     	;# 
  3744  019A                     	;# 
  3745  019B                     	;# 
  3746  019B                     	;# 
  3747  019B                     	;# 
  3748  019B                     	;# 
  3749  019B                     	;# 
  3750  019C                     	;# 
  3751  019C                     	;# 
  3752  019C                     	;# 
  3753  019D                     	;# 
  3754  019D                     	;# 
  3755  019D                     	;# 
  3756  019E                     	;# 
  3757  019E                     	;# 
  3758  019E                     	;# 
  3759  019F                     	;# 
  3760  019F                     	;# 
  3761  019F                     	;# 
  3762  019F                     	;# 
  3763  019F                     	;# 
  3764  020C                     	;# 
  3765  020D                     	;# 
  3766  020E                     	;# 
  3767  0211                     	;# 
  3768  0211                     	;# 
  3769  0212                     	;# 
  3770  0212                     	;# 
  3771  0213                     	;# 
  3772  0213                     	;# 
  3773  0214                     	;# 
  3774  0214                     	;# 
  3775  0215                     	;# 
  3776  0215                     	;# 
  3777  0215                     	;# 
  3778  0215                     	;# 
  3779  0216                     	;# 
  3780  0216                     	;# 
  3781  0217                     	;# 
  3782  0217                     	;# 
  3783  0219                     	;# 
  3784  021A                     	;# 
  3785  021B                     	;# 
  3786  021C                     	;# 
  3787  021D                     	;# 
  3788  021D                     	;# 
  3789  021E                     	;# 
  3790  021F                     	;# 
  3791  028C                     	;# 
  3792  028D                     	;# 
  3793  028E                     	;# 
  3794  0291                     	;# 
  3795  0291                     	;# 
  3796  0292                     	;# 
  3797  0293                     	;# 
  3798  0294                     	;# 
  3799  0295                     	;# 
  3800  0295                     	;# 
  3801  0296                     	;# 
  3802  0297                     	;# 
  3803  0298                     	;# 
  3804  029F                     	;# 
  3805  030C                     	;# 
  3806  030D                     	;# 
  3807  030E                     	;# 
  3808  0311                     	;# 
  3809  0311                     	;# 
  3810  0312                     	;# 
  3811  0313                     	;# 
  3812  0314                     	;# 
  3813  0315                     	;# 
  3814  0315                     	;# 
  3815  0316                     	;# 
  3816  0317                     	;# 
  3817  0318                     	;# 
  3818  038C                     	;# 
  3819  038D                     	;# 
  3820  038E                     	;# 
  3821  0391                     	;# 
  3822  0392                     	;# 
  3823  0393                     	;# 
  3824  0394                     	;# 
  3825  0395                     	;# 
  3826  0396                     	;# 
  3827  0397                     	;# 
  3828  0398                     	;# 
  3829  0399                     	;# 
  3830  039A                     	;# 
  3831  039C                     	;# 
  3832  039D                     	;# 
  3833  039E                     	;# 
  3834  039F                     	;# 
  3835  0411                     	;# 
  3836  0411                     	;# 
  3837  0412                     	;# 
  3838  0413                     	;# 
  3839  0414                     	;# 
  3840  0415                     	;# 
  3841  0416                     	;# 
  3842  0417                     	;# 
  3843  0418                     	;# 
  3844  0418                     	;# 
  3845  0419                     	;# 
  3846  041A                     	;# 
  3847  041B                     	;# 
  3848  041C                     	;# 
  3849  041D                     	;# 
  3850  041E                     	;# 
  3851  041F                     	;# 
  3852  0498                     	;# 
  3853  0498                     	;# 
  3854  0499                     	;# 
  3855  049A                     	;# 
  3856  049B                     	;# 
  3857  049B                     	;# 
  3858  049C                     	;# 
  3859  049D                     	;# 
  3860  049E                     	;# 
  3861  049F                     	;# 
  3862  0617                     	;# 
  3863  0618                     	;# 
  3864  0619                     	;# 
  3865  0619                     	;# 
  3866  061A                     	;# 
  3867  061B                     	;# 
  3868  061C                     	;# 
  3869  061C                     	;# 
  3870  061F                     	;# 
  3871  0691                     	;# 
  3872  0692                     	;# 
  3873  0693                     	;# 
  3874  0694                     	;# 
  3875  0695                     	;# 
  3876  0696                     	;# 
  3877  0697                     	;# 
  3878  0698                     	;# 
  3879  0699                     	;# 
  3880  0711                     	;# 
  3881  0712                     	;# 
  3882  0713                     	;# 
  3883  0714                     	;# 
  3884  0715                     	;# 
  3885  0716                     	;# 
  3886  0717                     	;# 
  3887  0718                     	;# 
  3888  0719                     	;# 
  3889  0891                     	;# 
  3890  0891                     	;# 
  3891  0891                     	;# 
  3892  0891                     	;# 
  3893  0891                     	;# 
  3894  0891                     	;# 
  3895  0892                     	;# 
  3896  0892                     	;# 
  3897  0892                     	;# 
  3898  0893                     	;# 
  3899  0893                     	;# 
  3900  0893                     	;# 
  3901  0893                     	;# 
  3902  0893                     	;# 
  3903  0893                     	;# 
  3904  0894                     	;# 
  3905  0894                     	;# 
  3906  0894                     	;# 
  3907  0895                     	;# 
  3908  0895                     	;# 
  3909  0895                     	;# 
  3910  0896                     	;# 
  3911  0896                     	;# 
  3912  0896                     	;# 
  3913  089B                     	;# 
  3914  0911                     	;# 
  3915  0912                     	;# 
  3916  0913                     	;# 
  3917  0914                     	;# 
  3918  0915                     	;# 
  3919  0916                     	;# 
  3920  0918                     	;# 
  3921  0919                     	;# 
  3922  091A                     	;# 
  3923  091B                     	;# 
  3924  091C                     	;# 
  3925  091D                     	;# 
  3926  091E                     	;# 
  3927  091F                     	;# 
  3928  0E0F                     	;# 
  3929  0E10                     	;# 
  3930  0E11                     	;# 
  3931  0E12                     	;# 
  3932  0E13                     	;# 
  3933  0E14                     	;# 
  3934  0E15                     	;# 
  3935  0E16                     	;# 
  3936  0E17                     	;# 
  3937  0E18                     	;# 
  3938  0E19                     	;# 
  3939  0E1A                     	;# 
  3940  0E1B                     	;# 
  3941  0E1C                     	;# 
  3942  0E1D                     	;# 
  3943  0E1E                     	;# 
  3944  0E1F                     	;# 
  3945  0E20                     	;# 
  3946  0E21                     	;# 
  3947  0E22                     	;# 
  3948  0E24                     	;# 
  3949  0E25                     	;# 
  3950  0E28                     	;# 
  3951  0E29                     	;# 
  3952  0E2A                     	;# 
  3953  0E2B                     	;# 
  3954  0E2C                     	;# 
  3955  0E2D                     	;# 
  3956  0E2E                     	;# 
  3957  0E2F                     	;# 
  3958  0E90                     	;# 
  3959  0E91                     	;# 
  3960  0E92                     	;# 
  3961  0E94                     	;# 
  3962  0E95                     	;# 
  3963  0E9C                     	;# 
  3964  0E9D                     	;# 
  3965  0E9E                     	;# 
  3966  0E9F                     	;# 
  3967  0EA0                     	;# 
  3968  0EA1                     	;# 
  3969  0EA2                     	;# 
  3970  0EA3                     	;# 
  3971  0EA4                     	;# 
  3972  0EA5                     	;# 
  3973  0EA6                     	;# 
  3974  0EA7                     	;# 
  3975  0F0F                     	;# 
  3976  0F10                     	;# 
  3977  0F11                     	;# 
  3978  0F12                     	;# 
  3979  0F13                     	;# 
  3980  0F14                     	;# 
  3981  0F15                     	;# 
  3982  0F16                     	;# 
  3983  0F17                     	;# 
  3984  0F18                     	;# 
  3985  0F19                     	;# 
  3986  0F1A                     	;# 
  3987  0F1B                     	;# 
  3988  0F1C                     	;# 
  3989  0F1D                     	;# 
  3990  0F1E                     	;# 
  3991  0F1F                     	;# 
  3992  0F20                     	;# 
  3993  0F21                     	;# 
  3994  0F22                     	;# 
  3995  0F23                     	;# 
  3996  0F24                     	;# 
  3997  0F25                     	;# 
  3998  0F26                     	;# 
  3999  0F27                     	;# 
  4000  0F28                     	;# 
  4001  0F29                     	;# 
  4002  0F2A                     	;# 
  4003  0F2B                     	;# 
  4004  0F2C                     	;# 
  4005  0F2D                     	;# 
  4006  0F2E                     	;# 
  4007  0F2F                     	;# 
  4008  0F30                     	;# 
  4009  0F31                     	;# 
  4010  0F32                     	;# 
  4011  0F33                     	;# 
  4012  0F34                     	;# 
  4013  0F35                     	;# 
  4014  0F36                     	;# 
  4015  0F37                     	;# 
  4016  0FE4                     	;# 
  4017  0FE5                     	;# 
  4018  0FE6                     	;# 
  4019  0FE7                     	;# 
  4020  0FE8                     	;# 
  4021  0FE9                     	;# 
  4022  0FEA                     	;# 
  4023  0FEB                     	;# 
  4024  0FED                     	;# 
  4025  0FEE                     	;# 
  4026  0FEF                     	;_spi1_send_buffer_data
  4027                           
  4028                           	psect	idataBANK0
  4029  07FE                     __pidataBANK0:	
  4030                           
  4031                           ;initializer for _SPI_OFFSET_BYTE
  4032  07FE  3401               	retlw	1
  4033                           
  4034                           	psect	idataBANK1
  4035  0EE7                     __pidataBANK1:	
  4036                           
  4037                           ;initializer for _direction
  4038  0EE7  3401               	retlw	1
  4039  0EE8  3400               	retlw	0
  4040                           
  4041                           ;initializer for _st_dataLength
  4042  0EE9  34FF               	retlw	255
  4043  0EEA  34FF               	retlw	255
  4044                           
  4045                           	psect	stringtext1
  4046  1000                     __pstringtext1:	
  4047  1000                     _MACHINE_ID:	
  4048  1000  3401               	retlw	1
  4049  1001  3400               	retlw	0
  4050  1002                     __end_of_MACHINE_ID:	
  4051                           
  4052                           	psect	stringtext2
  4053  1002                     __pstringtext2:	
  4054  1002                     _VENDER_ID:	
  4055  1002  3401               	retlw	1
  4056  1003  3400               	retlw	0
  4057  1004                     __end_of_VENDER_ID:	
  4058                           
  4059                           	psect	bitnvCOMMON
  4060  03C8                     __pbitnvCOMMON:	
  4061  03C8                     _isEndPointTrig:	
  4062  03C8                     	ds	1
  4063  000E                     _PORTC	set	14
  4064  000D                     _PORTB	set	13
  4065  000C                     _PORTA	set	12
  4066  000B                     _INTCONbits	set	11
  4067  0010                     _PIR0bits	set	16
  4068  0012                     _PIR2bits	set	18
  4069  0011                     _PIR1bits	set	17
  4070  008E                     _TRISC	set	142
  4071  008D                     _TRISB	set	141
  4072  008C                     _TRISA	set	140
  4073  0092                     _PIE2bits	set	146
  4074  0091                     _PIE1bits	set	145
  4075  0090                     _PIE0bits	set	144
  4076  008E                     _TRISCbits	set	142
  4077  008D                     _TRISBbits	set	141
  4078  010C                     _LATAbits	set	268
  4079  018E                     _ANSELC	set	398
  4080  018D                     _ANSELB	set	397
  4081  018C                     _ANSELA	set	396
  4082  021C                     _SSP2STATbits	set	540
  4083  021D                     _SSP2CON1bits	set	541
  4084  021F                     _SSP2CON3bits	set	543
  4085  0214                     _SSP1STATbits	set	532
  4086  0215                     _SSP1CON1bits	set	533
  4087  0217                     _SSP1CON3bits	set	535
  4088  020C                     _WPUA	set	524
  4089  020D                     _WPUB	set	525
  4090  020E                     _WPUC	set	526
  4091  0219                     _SSP2BUF	set	537
  4092  0211                     _SSP1BUF	set	529
  4093  0392                     _IOCANbits	set	914
  4094  0391                     _IOCAPbits	set	913
  4095  038C                     _INLVLAbits	set	908
  4096  038E                     _INLVLCbits	set	910
  4097  038D                     _INLVLBbits	set	909
  4098  0393                     _IOCAFbits	set	915
  4099  091E                     _OSCTUNEbits	set	2334
  4100  091F                     _OSCFRQbits	set	2335
  4101  0E1F                     _SSP2SSPPSbits	set	3615
  4102  0E22                     _SSP1SSPPSbits	set	3618
  4103  0E9F                     _RB7PPS	set	3743
  4104  0E92                     _RA2PPS	set	3730
  4105  0EA2                     _RC2PPS	set	3746
  4106                           
  4107                           ; #config settings
  4108  0000                     
  4109                           	psect	cinit
  4110  0062                     start_initialization:	
  4111  0062                     __initialization:		;BIGRAM
  4112                           
  4113                           ; Initialize objects allocated to BANK0
  4114  0062  3187  27FE  3180   	fcall	__pidataBANK0	;fetch initializer
  4115  0065  00EE               	movwf	__pdataBANK0& (0+127)
  4116                           
  4117                           ; Initialize objects allocated to BANK1
  4118  0066  0021               	movlb	1	; select bank1
  4119  0067  318E  26E7  3180   	fcall	__pidataBANK1	;fetch initializer
  4120  006A  00EB               	movwf	__pdataBANK1& (0+127)
  4121  006B  318E  26E8  3180   	fcall	__pidataBANK1+1	;fetch initializer
  4122  006E  00EC               	movwf	(__pdataBANK1+1)& (0+127)
  4123  006F  318E  26E9  3180   	fcall	__pidataBANK1+2	;fetch initializer
  4124  0072  00ED               	movwf	(__pdataBANK1+2)& (0+127)
  4125  0073  318E  26EA  3180   	fcall	__pidataBANK1+3	;fetch initializer
  4126  0076  00EE               	movwf	(__pdataBANK1+3)& (0+127)
  4127                           
  4128                           ; Clear objects allocated to BIGRAM
  4129  0077  30F0               	movlw	low (0+9456)
  4130  0078  0084               	movwf	4
  4131  0079  3024               	movlw	high (0+9456)
  4132  007A  0085               	movwf	5
  4133  007B  3000               	movlw	0
  4134  007C  00FE               	movwf	btemp
  4135  007D  3003               	movlw	3
  4136  007E  00FF               	movwf	btemp+1
  4137  007F  318F  2730  3180   	fcall	clear_ram0
  4138                           
  4139                           ; Clear objects allocated to BITCOMMON
  4140  0082  01F0               	clrf	(__pbitbssCOMMON/(0+8))& (0+127)
  4141                           
  4142                           ; Clear objects allocated to COMMON
  4143  0083  01FA               	clrf	__pbssCOMMON& (0+127)
  4144                           
  4145                           ; Clear objects allocated to BANK0
  4146  0084  3052               	movlw	low __pbssBANK0
  4147  0085  0084               	movwf	4
  4148  0086  3000               	movlw	high __pbssBANK0
  4149  0087  0085               	movwf	5
  4150  0088  301C               	movlw	28
  4151  0089  00FE               	movwf	btemp
  4152  008A  3000               	movlw	0
  4153  008B  00FF               	movwf	btemp+1
  4154  008C  318F  2730  3180   	fcall	clear_ram0
  4155                           
  4156                           ; Clear objects allocated to BANK1
  4157  008F  30A0               	movlw	low __pbssBANK1
  4158  0090  0084               	movwf	4
  4159  0091  3000               	movlw	high __pbssBANK1
  4160  0092  0085               	movwf	5
  4161  0093  304B               	movlw	75
  4162  0094  00FE               	movwf	btemp
  4163  0095  3000               	movlw	0
  4164  0096  00FF               	movwf	btemp+1
  4165  0097  318F  2730  3180   	fcall	clear_ram0
  4166                           
  4167                           ; Clear objects allocated to BANK2
  4168  009A  3020               	movlw	low __pbssBANK2
  4169  009B  0084               	movwf	4
  4170  009C  3001               	movlw	high __pbssBANK2
  4171  009D  0085               	movwf	5
  4172  009E  3012               	movlw	18
  4173  009F  00FE               	movwf	btemp
  4174  00A0  3000               	movlw	0
  4175  00A1  00FF               	movwf	btemp+1
  4176  00A2  318F  2730         	fcall	clear_ram0
  4177  00A4                     end_of_initialization:	
  4178                           ;End of C runtime variable initialization code
  4179                           
  4180  00A4                     __end_of__initialization:	
  4181  00A4  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  4182  00A5  0020               	movlb	0
  4183  00A6  3187  2F39         	ljmp	_main	;jump to C main() function
  4184                           
  4185                           	psect	bitbssCOMMON
  4186  0380                     __pbitbssCOMMON:	
  4187  0380                     _isMycargo:	
  4188  0380                     	ds	1
  4189  0381                     _workingcounta3:	
  4190  0381                     	ds	1
  4191  0382                     _workingcounta2:	
  4192  0382                     	ds	1
  4193  0383                     _workingcounta1:	
  4194  0383                     	ds	1
  4195  0384                     _workingcounta0:	
  4196  0384                     	ds	1
  4197  0385                     _ra3condision:	
  4198  0385                     	ds	1
  4199  0386                     _isreadTrain:	
  4200  0386                     	ds	1
  4201  0387                     _isCalibrated:	
  4202  0387                     	ds	1
  4203                           
  4204                           	psect	bssCOMMON
  4205  007A                     __pbssCOMMON:	
  4206  007A                     _spi1_Read_data:	
  4207  007A                     	ds	1
  4208                           
  4209                           	psect	bssBANK0
  4210  0052                     __pbssBANK0:	
  4211  0052                     _cargoData:	
  4212  0052                     	ds	16
  4213  0062                     _read_count2:	
  4214  0062                     	ds	2
  4215  0064                     _countabuf:	
  4216  0064                     	ds	2
  4217  0066                     _read_count1:	
  4218  0066                     	ds	2
  4219  0068                     _count2:	
  4220  0068                     	ds	2
  4221  006A                     _count1:	
  4222  006A                     	ds	2
  4223  006C                     _st_type:	
  4224  006C                     	ds	1
  4225  006D                     _spi2_Send_data:	
  4226  006D                     	ds	1
  4227                           
  4228                           	psect	dataBANK0
  4229  006E                     __pdataBANK0:	
  4230  006E                     _SPI_OFFSET_BYTE:	
  4231  006E                     	ds	1
  4232                           
  4233                           	psect	bssBANK1
  4234  00A0                     __pbssBANK1:	
  4235  00A0                     _comu_types:	
  4236  00A0                     	ds	18
  4237  00B2                     _command:	
  4238  00B2                     	ds	18
  4239  00C4                     _calibdata:	
  4240  00C4                     	ds	9
  4241  00CD                     _linkInfo:	
  4242  00CD                     	ds	6
  4243  00D3                     _cargoWorkingCount:	
  4244  00D3                     	ds	4
  4245  00D7                     _startTrainBytes:	
  4246  00D7                     	ds	4
  4247  00DB                     _cargoLengthnuf:	
  4248  00DB                     	ds	2
  4249  00DD                     _linkAngle:	
  4250  00DD                     	ds	2
  4251  00DF                     _send_count1:	
  4252  00DF                     	ds	2
  4253  00E1                     _spi1_send_count:	
  4254  00E1                     	ds	2
  4255  00E3                     _counta2:	
  4256  00E3                     	ds	2
  4257  00E5                     _trainPos:	
  4258  00E5                     	ds	2
  4259  00E7                     _readNG:	
  4260  00E7                     	ds	1
  4261  00E8                     _readOK:	
  4262  00E8                     	ds	1
  4263  00E9                     _spi2_Read_data:	
  4264  00E9                     	ds	1
  4265  00EA                     _send_data:	
  4266  00EA                     	ds	1
  4267                           
  4268                           	psect	dataBANK1
  4269  00EB                     __pdataBANK1:	
  4270  00EB                     _direction:	
  4271  00EB                     	ds	2
  4272  00ED                     _st_dataLength:	
  4273  00ED                     	ds	2
  4274                           
  4275                           	psect	bssBANK2
  4276  0120                     __pbssBANK2:	
  4277  0120                     _cargo_index:	
  4278  0120                     	ds	18
  4279                           
  4280                           	psect	clrtext
  4281  0F30                     clear_ram0:	
  4282                           ;	Called with FSR0 containing the base address, and
  4283                           ;	btemp/btemp+1 has the size to clear
  4284                           
  4285  0F30  0064               	clrwdt	;clear the watchdog before getting into this loop
  4286  0F31                     clrloop0:	
  4287  0F31  0180               	clrf	0	;clear RAM location pointed to by FSR
  4288  0F32  3101               	addfsr 0,1
  4289  0F33  3001               	movlw	1
  4290  0F34  02FE               	subwf	126,f
  4291  0F35  3000               	movlw	0
  4292  0F36  3BFF               	subwfb	127,f
  4293  0F37  087F               	movf	127,w
  4294  0F38  047E               	iorwf	126,w
  4295  0F39  1903               	btfsc	3,2
  4296  0F3A  3400               	retlw	0	;all done for this memory range, return
  4297  0F3B  2F31               	goto	clrloop0	;have we reached the end yet?
  4298                           
  4299                           	psect	cstackBANK2
  4300  0132                     __pcstackBANK2:	
  4301  0132                     Calibrate_download@buflong:	
  4302  0132                     readCargo@buflong:	
  4303                           ; 4 bytes @ 0x0
  4304                           
  4305                           
  4306                           ; 4 bytes @ 0x0
  4307  0132                     	ds	4
  4308  0136                     Calibrate_download@bufint:	
  4309  0136                     readCargo@bufint:	
  4310                           ; 2 bytes @ 0x4
  4311                           
  4312                           
  4313                           ; 2 bytes @ 0x4
  4314  0136                     	ds	2
  4315  0138                     Calibrate_download@spi_Read_data:	
  4316  0138                     readCargo@spi1_Read_data:	
  4317                           ; 1 bytes @ 0x6
  4318                           
  4319                           
  4320                           ; 1 bytes @ 0x6
  4321  0138                     	ds	1
  4322  0139                     setComunicateMode@m_type:	
  4323                           
  4324                           ; 1 bytes @ 0x7
  4325  0139                     	ds	1
  4326  013A                     setComunicateMode@i:	
  4327                           
  4328                           ; 2 bytes @ 0x8
  4329  013A                     	ds	2
  4330                           
  4331                           	psect	cstackCOMMON
  4332  0071                     __pcstackCOMMON:	
  4333  0071                     ?_isTrainSt:	
  4334  0071                     ?_isSPI1read:	
  4335                           ; 1 bit 
  4336                           
  4337  0071                     ?_setComunicateMode:	
  4338                           ; 1 bit 
  4339                           
  4340  0071                     ?_isSPI2read:	
  4341                           ; 1 bit 
  4342                           
  4343  0071                     ?_clutchaction:	
  4344                           ; 1 bit 
  4345                           
  4346  0071                     ?_isEndpoint:	
  4347                           ; 1 bit 
  4348                           
  4349  0071                     ?_setSPI1sendData:	
  4350                           ; 1 bit 
  4351                           
  4352  0071                     ??_setSPI1sendData:	
  4353                           ; 1 bytes @ 0x0
  4354                           
  4355  0071                     ?_addAngle:	
  4356                           ; 1 bytes @ 0x0
  4357                           
  4358  0071                     ?_clear:	
  4359                           ; 1 bytes @ 0x0
  4360                           
  4361  0071                     ?_resetTrainData:	
  4362                           ; 1 bytes @ 0x0
  4363                           
  4364  0071                     ?_initComand:	
  4365                           ; 1 bytes @ 0x0
  4366                           
  4367  0071                     ?_initComu_types:	
  4368                           ; 1 bytes @ 0x0
  4369                           
  4370  0071                     ?_InitCalibrate:	
  4371                           ; 1 bytes @ 0x0
  4372                           
  4373  0071                     ?_spi_init:	
  4374                           ; 1 bytes @ 0x0
  4375                           
  4376  0071                     ?_initCargo:	
  4377                           ; 1 bytes @ 0x0
  4378                           
  4379  0071                     ?_read_train:	
  4380                           ; 1 bytes @ 0x0
  4381                           
  4382  0071                     ?_setSPI2sendData:	
  4383                           ; 1 bytes @ 0x0
  4384                           
  4385  0071                     ?_restartCargo:	
  4386                           ; 1 bytes @ 0x0
  4387                           
  4388  0071                     ?_spi1_init:	
  4389                           ; 1 bytes @ 0x0
  4390                           
  4391  0071                     ?_spi2_init:	
  4392                           ; 1 bytes @ 0x0
  4393                           
  4394  0071                     ?_readCargo:	
  4395                           ; 1 bytes @ 0x0
  4396                           
  4397  0071                     ?_setCargoAngle:	
  4398                           ; 1 bytes @ 0x0
  4399                           
  4400  0071                     ?_InterMSSP:	
  4401                           ; 1 bytes @ 0x0
  4402                           
  4403  0071                     ?_initbuffer:	
  4404                           ; 1 bytes @ 0x0
  4405                           
  4406  0071                     ?_init:	
  4407                           ; 1 bytes @ 0x0
  4408                           
  4409  0071                     ?_io_init:	
  4410                           ; 1 bytes @ 0x0
  4411                           
  4412  0071                     ?_initTrain:	
  4413                           ; 1 bytes @ 0x0
  4414                           
  4415  0071                     ?_main:	
  4416                           ; 1 bytes @ 0x0
  4417                           
  4418  0071                     ??_isSPI2read:	
  4419                           ; 1 bytes @ 0x0
  4420                           
  4421  0071                     ?_setSPI1sendDataManual:	
  4422                           ; 1 bytes @ 0x0
  4423                           
  4424  0071                     ?_Calibrate_download:	
  4425                           ; 1 bytes @ 0x0
  4426                           
  4427  0071                     setCargoAngle@m_linkAngleTo:	
  4428                           ; 1 bytes @ 0x0
  4429                           
  4430                           
  4431                           ; 2 bytes @ 0x0
  4432  0071                     	ds	2
  4433  0073                     ??_addAngle:	
  4434  0073                     ??_setCargoAngle:	
  4435                           ; 1 bytes @ 0x2
  4436                           
  4437  0073                     ??_InterMSSP:	
  4438                           ; 1 bytes @ 0x2
  4439                           
  4440                           
  4441                           ; 1 bytes @ 0x2
  4442  0073                     	ds	6
  4443                           
  4444                           	psect	cstackBANK0
  4445  0020                     __pcstackBANK0:	
  4446  0020                     ??_clear:	
  4447  0020                     ??_isTrainSt:	
  4448                           ; 1 bytes @ 0x0
  4449                           
  4450  0020                     ??_resetTrainData:	
  4451                           ; 1 bytes @ 0x0
  4452                           
  4453  0020                     ??_initComand:	
  4454                           ; 1 bytes @ 0x0
  4455                           
  4456  0020                     ??_initComu_types:	
  4457                           ; 1 bytes @ 0x0
  4458                           
  4459  0020                     ??_initCargo:	
  4460                           ; 1 bytes @ 0x0
  4461                           
  4462  0020                     ??_isSPI1read:	
  4463                           ; 1 bytes @ 0x0
  4464                           
  4465  0020                     ??_read_train:	
  4466                           ; 1 bytes @ 0x0
  4467                           
  4468  0020                     ??_setSPI2sendData:	
  4469                           ; 1 bytes @ 0x0
  4470                           
  4471  0020                     ??_restartCargo:	
  4472                           ; 1 bytes @ 0x0
  4473                           
  4474  0020                     ??_spi1_init:	
  4475                           ; 1 bytes @ 0x0
  4476                           
  4477  0020                     ??_spi2_init:	
  4478                           ; 1 bytes @ 0x0
  4479                           
  4480  0020                     ??_initbuffer:	
  4481                           ; 1 bytes @ 0x0
  4482                           
  4483  0020                     ??_io_init:	
  4484                           ; 1 bytes @ 0x0
  4485                           
  4486  0020                     ??_setSPI1sendDataManual:	
  4487                           ; 1 bytes @ 0x0
  4488                           
  4489  0020                     ??_clutchaction:	
  4490                           ; 1 bytes @ 0x0
  4491                           
  4492  0020                     ?___lmul:	
  4493                           ; 1 bytes @ 0x0
  4494                           
  4495  0020                     ?___aldiv:	
  4496                           ; 4 bytes @ 0x0
  4497                           
  4498  0020                     ?___almod:	
  4499                           ; 4 bytes @ 0x0
  4500                           
  4501  0020                     ?_getCargoData:	
  4502                           ; 4 bytes @ 0x0
  4503                           
  4504  0020                     setSPI1sendDataManual@data:	
  4505                           ; 16 bytes @ 0x0
  4506                           
  4507  0020                     clutchaction@comannd:	
  4508                           ; 1 bytes @ 0x0
  4509                           
  4510  0020                     ___lmul@multiplier:	
  4511                           ; 1 bytes @ 0x0
  4512                           
  4513  0020                     ___aldiv@divisor:	
  4514                           ; 4 bytes @ 0x0
  4515                           
  4516  0020                     ___almod@divisor:	
  4517                           ; 4 bytes @ 0x0
  4518                           
  4519                           
  4520                           ; 4 bytes @ 0x0
  4521  0020                     	ds	1
  4522  0021                     ??_isEndpoint:	
  4523  0021                     spi1_init@dummy:	
  4524                           ; 1 bytes @ 0x1
  4525                           
  4526  0021                     spi2_init@dummy:	
  4527                           ; 1 bytes @ 0x1
  4528                           
  4529                           
  4530                           ; 1 bytes @ 0x1
  4531  0021                     	ds	1
  4532  0022                     ??_spi_init:	
  4533  0022                     initbuffer@i:	
  4534                           ; 1 bytes @ 0x2
  4535                           
  4536  0022                     read_train@bufint:	
  4537                           ; 2 bytes @ 0x2
  4538                           
  4539                           
  4540                           ; 2 bytes @ 0x2
  4541  0022                     	ds	2
  4542  0024                     ??_init:	
  4543  0024                     ___lmul@multiplicand:	
  4544                           ; 1 bytes @ 0x4
  4545                           
  4546  0024                     ___aldiv@dividend:	
  4547                           ; 4 bytes @ 0x4
  4548                           
  4549  0024                     ___almod@dividend:	
  4550                           ; 4 bytes @ 0x4
  4551                           
  4552                           
  4553                           ; 4 bytes @ 0x4
  4554  0024                     	ds	2
  4555  0026                     isEndpoint@spi2data:	
  4556                           
  4557                           ; 1 bytes @ 0x6
  4558  0026                     	ds	2
  4559  0028                     ??___lmul:	
  4560  0028                     ??___aldiv:	
  4561                           ; 1 bytes @ 0x8
  4562                           
  4563  0028                     ??___almod:	
  4564                           ; 1 bytes @ 0x8
  4565                           
  4566  0028                     ___lmul@product:	
  4567                           ; 1 bytes @ 0x8
  4568                           
  4569                           
  4570                           ; 4 bytes @ 0x8
  4571  0028                     	ds	1
  4572  0029                     ___aldiv@counter:	
  4573  0029                     ___almod@counter:	
  4574                           ; 1 bytes @ 0x9
  4575                           
  4576                           
  4577                           ; 1 bytes @ 0x9
  4578  0029                     	ds	1
  4579  002A                     isTrainSt@buf:	
  4580  002A                     ___aldiv@sign:	
  4581                           ; 1 bytes @ 0xA
  4582                           
  4583  002A                     ___almod@sign:	
  4584                           ; 1 bytes @ 0xA
  4585                           
  4586                           
  4587                           ; 1 bytes @ 0xA
  4588  002A                     	ds	1
  4589  002B                     ??_initTrain:	
  4590  002B                     ___aldiv@quotient:	
  4591                           ; 1 bytes @ 0xB
  4592                           
  4593                           
  4594                           ; 4 bytes @ 0xB
  4595  002B                     	ds	4
  4596  002F                     ?_TransLong256To255:	
  4597  002F                     TransLong256To255@data:	
  4598                           ; 4 bytes @ 0xF
  4599                           
  4600                           
  4601                           ; 4 bytes @ 0xF
  4602  002F                     	ds	1
  4603  0030                     ??_getCargoData:	
  4604                           
  4605                           ; 1 bytes @ 0x10
  4606  0030                     	ds	1
  4607  0031                     ??_InitCalibrate:	
  4608                           
  4609                           ; 1 bytes @ 0x11
  4610  0031                     	ds	1
  4611  0032                     InitCalibrate@cargoData:	
  4612                           
  4613                           ; 16 bytes @ 0x12
  4614  0032                     	ds	1
  4615  0033                     ??_TransLong256To255:	
  4616                           
  4617                           ; 1 bytes @ 0x13
  4618  0033                     	ds	4
  4619  0037                     TransLong256To255@TransData:	
  4620                           
  4621                           ; 4 bytes @ 0x17
  4622  0037                     	ds	4
  4623  003B                     TransLong256To255@j:	
  4624                           
  4625                           ; 2 bytes @ 0x1B
  4626  003B                     	ds	2
  4627  003D                     TransLong256To255@mod:	
  4628                           
  4629                           ; 4 bytes @ 0x1D
  4630  003D                     	ds	4
  4631  0041                     TransLong256To255@pow:	
  4632                           
  4633                           ; 4 bytes @ 0x21
  4634  0041                     	ds	4
  4635  0045                     TransLong256To255@i:	
  4636                           
  4637                           ; 2 bytes @ 0x25
  4638  0045                     	ds	2
  4639  0047                     TransLong256To255@buf:	
  4640                           
  4641                           ; 4 bytes @ 0x27
  4642  0047                     	ds	4
  4643  004B                     ??_readCargo:	
  4644  004B                     ??_Calibrate_download:	
  4645                           ; 1 bytes @ 0x2B
  4646                           
  4647                           
  4648                           ; 1 bytes @ 0x2B
  4649  004B                     	ds	6
  4650  0051                     ??_setComunicateMode:	
  4651                           
  4652                           ; 1 bytes @ 0x31
  4653  0051                     	ds	1
  4654  0052                     ??_main:	
  4655                           
  4656                           	psect	maintext
  4657  0739                     __pmaintext:	
  4658                           ; 1 bytes @ 0x32
  4659 ;;
  4660 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  4661 ;;
  4662 ;; *************** function _main *****************
  4663 ;; Defined at:
  4664 ;;		line 158 in file "D:/programdata/16F18346_Link_IC.X/main.c"
  4665 ;; Parameters:    Size  Location     Type
  4666 ;;		None
  4667 ;; Auto vars:     Size  Location     Type
  4668 ;;		None
  4669 ;; Return value:  Size  Location     Type
  4670 ;;                  1    wreg      void 
  4671 ;; Registers used:
  4672 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4673 ;; Tracked objects:
  4674 ;;		On entry : B1F/0
  4675 ;;		On exit  : 0/0
  4676 ;;		Unchanged: 0/0
  4677 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4678 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4679 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4680 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4681 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4682 ;;Total ram usage:        0 bytes
  4683 ;; Hardware stack levels required when called:    7
  4684 ;; This function calls:
  4685 ;;		_InitCalibrate
  4686 ;;		_init
  4687 ;;		_initCargo
  4688 ;;		_initComand
  4689 ;;		_initComu_types
  4690 ;;		_initTrain
  4691 ;;		_io_init
  4692 ;;		_isSPI1read
  4693 ;;		_read_train
  4694 ;;		_setComunicateMode
  4695 ;;		_setSPI2sendData
  4696 ;;		_spi_init
  4697 ;; This function is called by:
  4698 ;;		Startup code after reset
  4699 ;; This function uses a non-reentrant model
  4700 ;;
  4701                           
  4702                           
  4703                           ;psect for function _main
  4704  0739                     _main:	
  4705                           
  4706                           ;main.c: 159: initComand();
  4707                           
  4708                           ;incstack = 0
  4709                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4710  0739  3185  2554  3187   	fcall	_initComand
  4711                           
  4712                           ;main.c: 160: initComu_types();
  4713  073C  3184  24E7  3187   	fcall	_initComu_types
  4714                           
  4715                           ;main.c: 161: InitCalibrate();
  4716  073F  3187  2792  3187   	fcall	_InitCalibrate
  4717                           
  4718                           ;main.c: 162: init();
  4719  0742  318F  27D8  3187   	fcall	_init
  4720                           
  4721                           ;main.c: 163: io_init();
  4722  0745  318E  26FC  3187   	fcall	_io_init
  4723                           
  4724                           ;main.c: 164: spi_init();
  4725  0748  318F  270F  3187   	fcall	_spi_init
  4726                           
  4727                           ;main.c: 165: initCargo();
  4728  074B  3187  27E7  3187   	fcall	_initCargo
  4729                           
  4730                           ;main.c: 166: LATAbits.LATA0 = 1;
  4731  074E  0022               	movlb	2	; select bank2
  4732  074F  140C               	bsf	12,0	;volatile
  4733  0750                     l3259:	
  4734                           ;main.c: 167: while(1){
  4735                           
  4736                           
  4737                           ;main.c: 168: if(!isSPI1read()){
  4738  0750  318F  2756  3187   	fcall	_isSPI1read
  4739  0753  1803               	btfsc	3,0
  4740  0754  2F50               	goto	l3259
  4741                           
  4742                           ;main.c: 169: initTrain();
  4743  0755  3186  260F  3187   	fcall	_initTrain
  4744                           
  4745                           ;main.c: 170: if(isreadTrain){
  4746  0758  1F70               	btfss	_isreadTrain/(0+8),_isreadTrain& (0+7)
  4747  0759  2F60               	goto	l3267
  4748                           
  4749                           ;main.c: 171: setComunicateMode(st_type);
  4750  075A  0020               	movlb	0	; select bank0
  4751  075B  086C               	movf	_st_type,w
  4752  075C  3186  2697  3187   	fcall	_setComunicateMode
  4753                           
  4754                           ;main.c: 172: }else{
  4755  075F  2F63               	goto	l3269
  4756  0760                     l3267:	
  4757                           
  4758                           ;main.c: 173: read_train();
  4759  0760  3186  2654  3187   	fcall	_read_train
  4760  0763                     l3269:	
  4761                           
  4762                           ;main.c: 174: }
  4763                           ;main.c: 175: setSPI2sendData();
  4764  0763  3187  2767  3187   	fcall	_setSPI2sendData
  4765  0766  2F50               	goto	l3259
  4766  0767                     __end_of_main:	
  4767                           ;main.c: 176: }
  4768                           ;main.c: 177: };
  4769                           ;main.c: 178: return;
  4770                           
  4771                           
  4772                           	psect	text1
  4773  0F0F                     __ptext1:	
  4774 ;; *************** function _spi_init *****************
  4775 ;; Defined at:
  4776 ;;		line 22 in file "D:/programdata/16F18346_Link_IC.X/spiControl.c"
  4777 ;; Parameters:    Size  Location     Type
  4778 ;;		None
  4779 ;; Auto vars:     Size  Location     Type
  4780 ;;		None
  4781 ;; Return value:  Size  Location     Type
  4782 ;;                  1    wreg      void 
  4783 ;; Registers used:
  4784 ;;		wreg, status,2, status,0, pclath, cstack
  4785 ;; Tracked objects:
  4786 ;;		On entry : 0/0
  4787 ;;		On exit  : 0/0
  4788 ;;		Unchanged: 0/0
  4789 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4790 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4791 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4793 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4794 ;;Total ram usage:        0 bytes
  4795 ;; Hardware stack levels used:    1
  4796 ;; Hardware stack levels required when called:    4
  4797 ;; This function calls:
  4798 ;;		_spi1_init
  4799 ;;		_spi2_init
  4800 ;; This function is called by:
  4801 ;;		_main
  4802 ;; This function uses a non-reentrant model
  4803 ;;
  4804                           
  4805                           
  4806                           ;psect for function _spi_init
  4807  0F0F                     _spi_init:	
  4808                           
  4809                           ;spiControl.c: 23: INTCONbits.PEIE = 0;
  4810                           
  4811                           ;incstack = 0
  4812                           ; Regs used in _spi_init: [wreg+status,2+status,0+pclath+cstack]
  4813  0F0F  130B               	bcf	11,6	;volatile
  4814                           
  4815                           ;spiControl.c: 24: INTCONbits.GIE = 0;
  4816  0F10  138B               	bcf	11,7	;volatile
  4817                           
  4818                           ;spiControl.c: 25: spi1_init();
  4819  0F11  318F  2773  318F   	fcall	_spi1_init
  4820                           
  4821                           ;spiControl.c: 26: spi2_init();
  4822  0F14  318F  2793         	fcall	_spi2_init
  4823                           
  4824                           ;spiControl.c: 27: INTCONbits.PEIE = 1;
  4825  0F16  170B               	bsf	11,6	;volatile
  4826                           
  4827                           ;spiControl.c: 28: INTCONbits.GIE = 1;
  4828  0F17  178B               	bsf	11,7	;volatile
  4829  0F18  0008               	return
  4830  0F19                     __end_of_spi_init:	
  4831                           
  4832                           	psect	text2
  4833  0F93                     __ptext2:	
  4834 ;; *************** function _spi2_init *****************
  4835 ;; Defined at:
  4836 ;;		line 49 in file "D:/programdata/16F18346_Link_IC.X/spiControl.c"
  4837 ;; Parameters:    Size  Location     Type
  4838 ;;		None
  4839 ;; Auto vars:     Size  Location     Type
  4840 ;;  dummy           1    1[BANK0 ] unsigned char 
  4841 ;; Return value:  Size  Location     Type
  4842 ;;                  1    wreg      void 
  4843 ;; Registers used:
  4844 ;;		wreg, status,2, status,0
  4845 ;; Tracked objects:
  4846 ;;		On entry : 0/0
  4847 ;;		On exit  : 0/0
  4848 ;;		Unchanged: 0/0
  4849 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4850 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4851 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4852 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4853 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4854 ;;Total ram usage:        2 bytes
  4855 ;; Hardware stack levels used:    1
  4856 ;; Hardware stack levels required when called:    3
  4857 ;; This function calls:
  4858 ;;		Nothing
  4859 ;; This function is called by:
  4860 ;;		_spi_init
  4861 ;; This function uses a non-reentrant model
  4862 ;;
  4863                           
  4864                           
  4865                           ;psect for function _spi2_init
  4866  0F93                     _spi2_init:	
  4867                           
  4868                           ;spiControl.c: 50: unsigned char dummy;
  4869                           ;spiControl.c: 51: SSP2CON3bits.PCIE = 0;
  4870                           
  4871                           ;incstack = 0
  4872                           ; Regs used in _spi2_init: [wreg+status,2+status,0]
  4873  0F93  0024               	movlb	4	; select bank4
  4874  0F94  131F               	bcf	31,6	;volatile
  4875                           
  4876                           ;spiControl.c: 52: RA2PPS = 0b11011;
  4877  0F95  301B               	movlw	27
  4878  0F96  003D               	movlb	29	; select bank29
  4879  0F97  0092               	movwf	18	;volatile
  4880                           
  4881                           ;spiControl.c: 53: RB7PPS = 0b11010;
  4882  0F98  301A               	movlw	26
  4883  0F99  009F               	movwf	31	;volatile
  4884                           
  4885                           ;spiControl.c: 54: SSP2SSPPSbits.SSP2SSPPS = 0b01111;
  4886  0F9A  003C               	movlb	28	; select bank28
  4887  0F9B  081F               	movf	31,w	;volatile
  4888  0F9C  39E0               	andlw	-32
  4889  0F9D  380F               	iorlw	15
  4890  0F9E  009F               	movwf	31	;volatile
  4891                           
  4892                           ;spiControl.c: 55: SSP2CON1bits.SSPOV = 1;
  4893  0F9F  0024               	movlb	4	; select bank4
  4894  0FA0  171D               	bsf	29,6	;volatile
  4895                           
  4896                           ;spiControl.c: 56: SSP2CON1bits.SSPEN = 1;
  4897  0FA1  169D               	bsf	29,5	;volatile
  4898                           
  4899                           ;spiControl.c: 57: SSP2CON1bits.SSPM = 0b0001;
  4900  0FA2  081D               	movf	29,w	;volatile
  4901  0FA3  39F0               	andlw	-16
  4902  0FA4  3801               	iorlw	1
  4903  0FA5  009D               	movwf	29	;volatile
  4904                           
  4905                           ;spiControl.c: 58: SSP2CON3bits.BOEN = 1;
  4906  0FA6  161F               	bsf	31,4	;volatile
  4907                           
  4908                           ;spiControl.c: 59: SSP2STATbits.SMP = 0;
  4909  0FA7  139C               	bcf	28,7	;volatile
  4910                           
  4911                           ;spiControl.c: 60: SSP2STATbits.CKE = 0;
  4912  0FA8  131C               	bcf	28,6	;volatile
  4913                           
  4914                           ;spiControl.c: 61: SSP2CON1bits.CKP = 0;
  4915  0FA9  121D               	bcf	29,4	;volatile
  4916                           
  4917                           ;spiControl.c: 62: PIE2bits.SSP2IE = 1;
  4918  0FAA  0021               	movlb	1	; select bank1
  4919  0FAB  1592               	bsf	18,3	;volatile
  4920                           
  4921                           ;spiControl.c: 63: PIR2bits.SSP2IF = 0;
  4922  0FAC  0020               	movlb	0	; select bank0
  4923  0FAD  1192               	bcf	18,3	;volatile
  4924                           
  4925                           ;spiControl.c: 64: dummy = SSP2BUF;
  4926  0FAE  0024               	movlb	4	; select bank4
  4927  0FAF  0819               	movf	25,w	;volatile
  4928  0FB0  0020               	movlb	0	; select bank0
  4929  0FB1  00A0               	movwf	??_spi2_init
  4930  0FB2  0820               	movf	??_spi2_init,w
  4931  0FB3  00A1               	movwf	spi2_init@dummy
  4932  0FB4  0008               	return
  4933  0FB5                     __end_of_spi2_init:	
  4934                           
  4935                           	psect	text3
  4936  0F73                     __ptext3:	
  4937 ;; *************** function _spi1_init *****************
  4938 ;; Defined at:
  4939 ;;		line 33 in file "D:/programdata/16F18346_Link_IC.X/spiControl.c"
  4940 ;; Parameters:    Size  Location     Type
  4941 ;;		None
  4942 ;; Auto vars:     Size  Location     Type
  4943 ;;  dummy           1    1[BANK0 ] unsigned char 
  4944 ;; Return value:  Size  Location     Type
  4945 ;;                  1    wreg      void 
  4946 ;; Registers used:
  4947 ;;		wreg, status,2, status,0
  4948 ;; Tracked objects:
  4949 ;;		On entry : 0/0
  4950 ;;		On exit  : 0/0
  4951 ;;		Unchanged: 0/0
  4952 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4953 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4954 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4955 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4956 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4957 ;;Total ram usage:        2 bytes
  4958 ;; Hardware stack levels used:    1
  4959 ;; Hardware stack levels required when called:    3
  4960 ;; This function calls:
  4961 ;;		Nothing
  4962 ;; This function is called by:
  4963 ;;		_spi_init
  4964 ;; This function uses a non-reentrant model
  4965 ;;
  4966                           
  4967                           
  4968                           ;psect for function _spi1_init
  4969  0F73                     _spi1_init:	
  4970                           
  4971                           ;spiControl.c: 34: unsigned char dummy;
  4972                           ;spiControl.c: 35: SSP1CON3bits.PCIE = 0;
  4973                           
  4974                           ;incstack = 0
  4975                           ; Regs used in _spi1_init: [wreg+status,2+status,0]
  4976  0F73  0024               	movlb	4	; select bank4
  4977  0F74  1317               	bcf	23,6	;volatile
  4978                           
  4979                           ;spiControl.c: 36: RC2PPS = 0b11001;
  4980  0F75  3019               	movlw	25
  4981  0F76  003D               	movlb	29	; select bank29
  4982  0F77  00A2               	movwf	34	;volatile
  4983                           
  4984                           ;spiControl.c: 37: SSP1SSPPSbits.SSP1SSPPS = 0b10110;
  4985  0F78  003C               	movlb	28	; select bank28
  4986  0F79  0822               	movf	34,w	;volatile
  4987  0F7A  39E0               	andlw	-32
  4988  0F7B  3816               	iorlw	22
  4989  0F7C  00A2               	movwf	34	;volatile
  4990                           
  4991                           ;spiControl.c: 38: SSP1CON1bits.SSPOV = 1;
  4992  0F7D  0024               	movlb	4	; select bank4
  4993  0F7E  1715               	bsf	21,6	;volatile
  4994                           
  4995                           ;spiControl.c: 39: SSP1CON1bits.SSPEN = 1;
  4996  0F7F  1695               	bsf	21,5	;volatile
  4997                           
  4998                           ;spiControl.c: 40: SSP1CON1bits.SSPM = 0b0100;
  4999  0F80  0815               	movf	21,w	;volatile
  5000  0F81  39F0               	andlw	-16
  5001  0F82  3804               	iorlw	4
  5002  0F83  0095               	movwf	21	;volatile
  5003                           
  5004                           ;spiControl.c: 41: SSP1CON3bits.BOEN = 1;
  5005  0F84  1617               	bsf	23,4	;volatile
  5006                           
  5007                           ;spiControl.c: 42: SSP1STATbits.SMP = 0;
  5008  0F85  1394               	bcf	20,7	;volatile
  5009                           
  5010                           ;spiControl.c: 43: SSP1STATbits.CKE = 0;
  5011  0F86  1314               	bcf	20,6	;volatile
  5012                           
  5013                           ;spiControl.c: 44: SSP1CON1bits.CKP = 0;
  5014  0F87  1215               	bcf	21,4	;volatile
  5015                           
  5016                           ;spiControl.c: 45: PIE1bits.SSP1IE = 1;
  5017  0F88  0021               	movlb	1	; select bank1
  5018  0F89  1591               	bsf	17,3	;volatile
  5019                           
  5020                           ;spiControl.c: 46: PIR1bits.SSP1IF = 0;
  5021  0F8A  0020               	movlb	0	; select bank0
  5022  0F8B  1191               	bcf	17,3	;volatile
  5023                           
  5024                           ;spiControl.c: 47: dummy = SSP1BUF;
  5025  0F8C  0024               	movlb	4	; select bank4
  5026  0F8D  0811               	movf	17,w	;volatile
  5027  0F8E  0020               	movlb	0	; select bank0
  5028  0F8F  00A0               	movwf	??_spi1_init
  5029  0F90  0820               	movf	??_spi1_init,w
  5030  0F91  00A1               	movwf	spi1_init@dummy
  5031  0F92  0008               	return
  5032  0F93                     __end_of_spi1_init:	
  5033                           
  5034                           	psect	text4
  5035  0767                     __ptext4:	
  5036 ;; *************** function _setSPI2sendData *****************
  5037 ;; Defined at:
  5038 ;;		line 108 in file "D:/programdata/16F18346_Link_IC.X/spiControl.c"
  5039 ;; Parameters:    Size  Location     Type
  5040 ;;		None
  5041 ;; Auto vars:     Size  Location     Type
  5042 ;;		None
  5043 ;; Return value:  Size  Location     Type
  5044 ;;                  1    wreg      void 
  5045 ;; Registers used:
  5046 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5047 ;; Tracked objects:
  5048 ;;		On entry : 0/0
  5049 ;;		On exit  : 0/0
  5050 ;;		Unchanged: 0/0
  5051 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5052 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5053 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5054 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5055 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5056 ;;Total ram usage:        4 bytes
  5057 ;; Hardware stack levels used:    1
  5058 ;; Hardware stack levels required when called:    3
  5059 ;; This function calls:
  5060 ;;		Nothing
  5061 ;; This function is called by:
  5062 ;;		_main
  5063 ;; This function uses a non-reentrant model
  5064 ;;
  5065                           
  5066                           
  5067                           ;psect for function _setSPI2sendData
  5068  0767                     _setSPI2sendData:	
  5069                           
  5070                           ;spiControl.c: 109: spi2_Send_data = spi2_Send_data + SPI_OFFSET_BYTE;
  5071                           
  5072                           ;incstack = 0
  5073                           ; Regs used in _setSPI2sendData: [wreg+fsr1l+fsr1h+status,2+status,0]
  5074  0767  0020               	movlb	0	; select bank0
  5075  0768  086D               	movf	_spi2_Send_data,w
  5076  0769  076E               	addwf	_SPI_OFFSET_BYTE,w
  5077  076A  00A0               	movwf	??_setSPI2sendData
  5078  076B  0820               	movf	??_setSPI2sendData,w
  5079  076C  00ED               	movwf	_spi2_Send_data
  5080                           
  5081                           ;spiControl.c: 110: if(linkInfo.endpoint == 0){
  5082  076D  0021               	movlb	1	; select bank1
  5083  076E  0852               	movf	(_linkInfo^(0+128)+5),w
  5084  076F  1D03               	btfss	3,2
  5085  0770  2F76               	goto	l3237
  5086                           
  5087                           ;spiControl.c: 112: SSP2BUF = spi2_Send_data;
  5088  0771  0020               	movlb	0	; select bank0
  5089  0772  086D               	movf	_spi2_Send_data,w
  5090  0773  0024               	movlb	4	; select bank4
  5091  0774  0099               	movwf	25	;volatile
  5092                           
  5093                           ;spiControl.c: 113: }else{
  5094  0775  0008               	return
  5095  0776                     l3237:	
  5096                           
  5097                           ;spiControl.c: 114: spi2_buffer_data[count2] = spi2_Send_data;
  5098  0776  30F0               	movlw	240
  5099  0777  0020               	movlb	0	; select bank0
  5100  0778  00A0               	movwf	??_setSPI2sendData
  5101  0779  3025               	movlw	37
  5102  077A  00A1               	movwf	??_setSPI2sendData+1
  5103  077B  0868               	movf	_count2,w
  5104  077C  0720               	addwf	??_setSPI2sendData,w
  5105  077D  00A2               	movwf	??_setSPI2sendData+2
  5106  077E  0869               	movf	_count2+1,w
  5107  077F  3D21               	addwfc	??_setSPI2sendData+1,w
  5108  0780  00A3               	movwf	??_setSPI2sendData+3
  5109  0781  0822               	movf	??_setSPI2sendData+2,w
  5110  0782  0086               	movwf	6
  5111  0783  0823               	movf	??_setSPI2sendData+3,w
  5112  0784  0087               	movwf	7
  5113  0785  086D               	movf	_spi2_Send_data,w
  5114  0786  0081               	movwf	1
  5115                           
  5116                           ;spiControl.c: 115: count2++;
  5117  0787  3001               	movlw	1
  5118  0788  07E8               	addwf	_count2,f
  5119  0789  3000               	movlw	0
  5120  078A  3DE9               	addwfc	_count2+1,f
  5121                           
  5122                           ;spiControl.c: 116: if(count2 == 256){
  5123  078B  0369               	decf	_count2+1,w
  5124  078C  0468               	iorwf	_count2,w
  5125  078D  1D03               	btfss	3,2
  5126  078E  0008               	return
  5127                           
  5128                           ;spiControl.c: 117: count2 = 0;
  5129  078F  01E8               	clrf	_count2
  5130  0790  01E9               	clrf	_count2+1
  5131  0791  0008               	return
  5132  0792                     __end_of_setSPI2sendData:	
  5133                           
  5134                           	psect	text5
  5135  0697                     __ptext5:	
  5136 ;; *************** function _setComunicateMode *****************
  5137 ;; Defined at:
  5138 ;;		line 38 in file "D:/programdata/16F18346_Link_IC.X/comu_type.c"
  5139 ;; Parameters:    Size  Location     Type
  5140 ;;  m_type          1    wreg     unsigned char 
  5141 ;; Auto vars:     Size  Location     Type
  5142 ;;  m_type          1    7[BANK2 ] unsigned char 
  5143 ;;  i               2    8[BANK2 ] int 
  5144 ;; Return value:  Size  Location     Type
  5145 ;;		None               void
  5146 ;; Registers used:
  5147 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5148 ;; Tracked objects:
  5149 ;;		On entry : 0/0
  5150 ;;		On exit  : 0/0
  5151 ;;		Unchanged: 0/0
  5152 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5153 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5154 ;;      Locals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5155 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5156 ;;      Totals:         0       1       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5157 ;;Total ram usage:        4 bytes
  5158 ;; Hardware stack levels used:    1
  5159 ;; Hardware stack levels required when called:    6
  5160 ;; This function calls:
  5161 ;;		_Calibrate_download
  5162 ;;		_readCargo
  5163 ;; This function is called by:
  5164 ;;		_main
  5165 ;; This function uses a non-reentrant model
  5166 ;;
  5167                           
  5168                           
  5169                           ;psect for function _setComunicateMode
  5170  0697                     _setComunicateMode:	
  5171                           
  5172                           ;incstack = 0
  5173                           ; Regs used in _setComunicateMode: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5174                           ;setComunicateMode@m_type stored from wreg
  5175  0697  0022               	movlb	2	; select bank2
  5176  0698  00B9               	movwf	setComunicateMode@m_type^(0+256)
  5177                           
  5178                           ;comu_type.c: 39: for(int i = 0; i < 18; i++){
  5179  0699  01BA               	clrf	setComunicateMode@i^(0+256)
  5180  069A  01BB               	clrf	(setComunicateMode@i+1)^(0+256)
  5181  069B                     L1:	
  5182  069B  083B               	movf	(setComunicateMode@i+1)^(0+256),w
  5183  069C  3A80               	xorlw	128
  5184  069D  0020               	movlb	0	; select bank0
  5185  069E  00D1               	movwf	??_setComunicateMode
  5186  069F  3080               	movlw	128
  5187  06A0  0251               	subwf	??_setComunicateMode,w
  5188  06A1  1D03               	skipz
  5189  06A2  2EA6               	goto	u2145
  5190  06A3  3012               	movlw	18
  5191  06A4  0022               	movlb	2	; select bank2
  5192  06A5  023A               	subwf	setComunicateMode@i^(0+256),w
  5193  06A6                     u2145:	
  5194  06A6  1803               	btfsc	3,0
  5195  06A7  0008               	return
  5196                           
  5197                           ;comu_type.c: 40: if(comu_types[i] == m_type){
  5198  06A8  0022               	movlb	2	; select bank2
  5199  06A9  083A               	movf	setComunicateMode@i^(0+256),w
  5200  06AA  3EA0               	addlw	(low (_comu_types| 0))& (0+255)
  5201  06AB  0086               	movwf	6
  5202  06AC  0187               	clrf	7
  5203  06AD  0801               	movf	1,w
  5204  06AE  0639               	xorwf	setComunicateMode@m_type^(0+256),w
  5205  06AF  1903               	btfsc	3,2
  5206  06B0  2EBA               	goto	l3207
  5207  06B1  2ECE               	goto	l3209
  5208  06B2                     l3197:	
  5209                           ;comu_type.c: 42: case 0:
  5210                           
  5211                           ;comu_type.c: 41: switch(i){
  5212                           
  5213                           
  5214                           ;comu_type.c: 43: Calibrate_download(spi1_Read_data);
  5215  06B2  087A               	movf	_spi1_Read_data,w
  5216  06B3  3181  21E5         	fcall	_Calibrate_download
  5217                           
  5218                           ;comu_type.c: 44: return 1;
  5219                           ;	Return value of _setComunicateMode is never used
  5220  06B5  0008               	return
  5221  06B6                     l3201:	
  5222                           ;comu_type.c: 45: case 1:
  5223                           
  5224                           
  5225                           ;comu_type.c: 46: readCargo(spi1_Read_data);
  5226  06B6  087A               	movf	_spi1_Read_data,w
  5227  06B7  3180  20A8         	fcall	_readCargo
  5228                           
  5229                           ;comu_type.c: 51: return 1;
  5230                           ;	Return value of _setComunicateMode is never used
  5231                           
  5232                           ;comu_type.c: 50: case 3:
  5233                           
  5234                           ;comu_type.c: 49: return 1;
  5235                           ;	Return value of _setComunicateMode is never used
  5236                           
  5237                           ;comu_type.c: 48: case 2:
  5238                           
  5239                           ;comu_type.c: 47: return 1;
  5240                           ;	Return value of _setComunicateMode is never used
  5241  06B9  0008               	return
  5242  06BA                     l3207:	
  5243                           ;comu_type.c: 52: }
  5244                           
  5245                           
  5246                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5247                           ; Switch size 1, requested type "space"
  5248                           ; Number of cases is 1, Range of values is 0 to 0
  5249                           ; switch strategies available:
  5250                           ; Name         Instructions Cycles
  5251                           ; simple_byte            4     3 (average)
  5252                           ; direct_byte            8     6 (fixed)
  5253                           ; jumptable            260     6 (fixed)
  5254                           ;	Chosen strategy is simple_byte
  5255  06BA  0022               	movlb	2	; select bank2
  5256  06BB  083B               	movf	(setComunicateMode@i+1)^(0+256),w
  5257  06BC  3A00               	xorlw	0	; case 0
  5258  06BD  1903               	skipnz
  5259  06BE  2EC0               	goto	l3417
  5260  06BF  2ECE               	goto	l3209
  5261  06C0                     l3417:	
  5262                           
  5263                           ; Switch size 1, requested type "space"
  5264                           ; Number of cases is 4, Range of values is 0 to 3
  5265                           ; switch strategies available:
  5266                           ; Name         Instructions Cycles
  5267                           ; simple_byte           13     7 (average)
  5268                           ; direct_byte           14     6 (fixed)
  5269                           ; jumptable            260     6 (fixed)
  5270                           ;	Chosen strategy is simple_byte
  5271  06C0  083A               	movf	setComunicateMode@i^(0+256),w
  5272  06C1  3A00               	xorlw	0	; case 0
  5273  06C2  1903               	skipnz
  5274  06C3  2EB2               	goto	l3197
  5275  06C4  3A01               	xorlw	1	; case 1
  5276  06C5  1903               	skipnz
  5277  06C6  2EB6               	goto	l3201
  5278  06C7  3A03               	xorlw	3	; case 2
  5279  06C8  1903               	skipnz
  5280  06C9  2ED4               	goto	l473
  5281  06CA  3A01               	xorlw	1	; case 3
  5282  06CB  1903               	skipnz
  5283  06CC  2ED4               	goto	l473
  5284  06CD  2ECE               	goto	l3209
  5285  06CE                     l3209:	
  5286  06CE  3001               	movlw	1
  5287  06CF  0022               	movlb	2	; select bank2
  5288  06D0  07BA               	addwf	setComunicateMode@i^(0+256),f
  5289  06D1  3000               	movlw	0
  5290  06D2  3DBB               	addwfc	(setComunicateMode@i+1)^(0+256),f
  5291  06D3  2E9B               	goto	L1
  5292  06D4                     l473:	
  5293                           ;comu_type.c: 53: }
  5294                           ;comu_type.c: 54: }
  5295                           ;comu_type.c: 55: return 0;
  5296                           ;	Return value of _setComunicateMode is never used
  5297                           
  5298  06D4  0008               	return
  5299  06D5                     __end_of_setComunicateMode:	
  5300                           
  5301                           	psect	text6
  5302  00A8                     __ptext6:	
  5303 ;; *************** function _readCargo *****************
  5304 ;; Defined at:
  5305 ;;		line 17 in file "D:/programdata/16F18346_Link_IC.X/normal_mode.c"
  5306 ;; Parameters:    Size  Location     Type
  5307 ;;  spi1_Read_da    1    wreg     unsigned char 
  5308 ;; Auto vars:     Size  Location     Type
  5309 ;;  spi1_Read_da    1    6[BANK2 ] unsigned char 
  5310 ;;  buflong         4    0[BANK2 ] unsigned long 
  5311 ;;  bufint          2    4[BANK2 ] unsigned int 
  5312 ;; Return value:  Size  Location     Type
  5313 ;;                  1    wreg      void 
  5314 ;; Registers used:
  5315 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5316 ;; Tracked objects:
  5317 ;;		On entry : 0/0
  5318 ;;		On exit  : 0/0
  5319 ;;		Unchanged: 0/0
  5320 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5321 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5322 ;;      Locals:         0       0       0       7       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5323 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5324 ;;      Totals:         0       6       0       7       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5325 ;;Total ram usage:       13 bytes
  5326 ;; Hardware stack levels used:    1
  5327 ;; Hardware stack levels required when called:    5
  5328 ;; This function calls:
  5329 ;;		_TransLong256To255
  5330 ;;		_clutchaction
  5331 ;;		_getCargoData
  5332 ;;		_restartCargo
  5333 ;; This function is called by:
  5334 ;;		_setComunicateMode
  5335 ;; This function uses a non-reentrant model
  5336 ;;
  5337                           
  5338                           
  5339                           ;psect for function _readCargo
  5340  00A8                     _readCargo:	
  5341                           
  5342                           ;incstack = 0
  5343                           ; Regs used in _readCargo: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5344                           ;readCargo@spi1_Read_data stored from wreg
  5345  00A8  0022               	movlb	2	; select bank2
  5346  00A9  00B8               	movwf	readCargo@spi1_Read_data^(0+256)
  5347                           
  5348                           ;normal_mode.c: 18: unsigned int bufint = spi1_Read_data;
  5349  00AA  0838               	movf	readCargo@spi1_Read_data^(0+256),w
  5350  00AB  0020               	movlb	0	; select bank0
  5351  00AC  00CB               	movwf	??_readCargo
  5352  00AD  01CC               	clrf	??_readCargo+1
  5353  00AE  084B               	movf	??_readCargo,w
  5354  00AF  0022               	movlb	2	; select bank2
  5355  00B0  00B6               	movwf	readCargo@bufint^(0+256)
  5356  00B1  0020               	movlb	0	; select bank0
  5357  00B2  084C               	movf	??_readCargo+1,w
  5358  00B3  0022               	movlb	2	; select bank2
  5359  00B4  00B7               	movwf	(readCargo@bufint+1)^(0+256)
  5360                           
  5361                           ;normal_mode.c: 19: unsigned long buflong = spi1_Read_data;
  5362  00B5  0838               	movf	readCargo@spi1_Read_data^(0+256),w
  5363  00B6  0020               	movlb	0	; select bank0
  5364  00B7  00CB               	movwf	??_readCargo
  5365  00B8  01CC               	clrf	??_readCargo+1
  5366  00B9  01CD               	clrf	??_readCargo+2
  5367  00BA  01CE               	clrf	??_readCargo+3
  5368  00BB  084E               	movf	??_readCargo+3,w
  5369  00BC  0022               	movlb	2	; select bank2
  5370  00BD  00B5               	movwf	(readCargo@buflong+3)^(0+256)
  5371  00BE  0020               	movlb	0	; select bank0
  5372  00BF  084D               	movf	??_readCargo+2,w
  5373  00C0  0022               	movlb	2	; select bank2
  5374  00C1  00B4               	movwf	(readCargo@buflong+2)^(0+256)
  5375  00C2  0020               	movlb	0	; select bank0
  5376  00C3  084C               	movf	??_readCargo+1,w
  5377  00C4  0022               	movlb	2	; select bank2
  5378  00C5  00B3               	movwf	(readCargo@buflong+1)^(0+256)
  5379  00C6  0020               	movlb	0	; select bank0
  5380  00C7  084B               	movf	??_readCargo,w
  5381  00C8  0022               	movlb	2	; select bank2
  5382  00C9  00B2               	movwf	readCargo@buflong^(0+256)
  5383                           
  5384                           ;normal_mode.c: 20: cargoData = getCargoData();
  5385  00CA  318F  2763  3180   	fcall	_getCargoData
  5386  00CD  0020               	movlb	0	; select bank0
  5387  00CE  3020               	movlw	low ?_getCargoData
  5388  00CF  0086               	movwf	6
  5389  00D0  3000               	movlw	high ?_getCargoData
  5390  00D1  0087               	movwf	7
  5391  00D2  3052               	movlw	low _cargoData
  5392  00D3  0084               	movwf	4
  5393  00D4  3000               	movlw	high _cargoData
  5394  00D5  0085               	movwf	5
  5395  00D6  3010               	movlw	16
  5396  00D7  00CB               	movwf	??_readCargo
  5397  00D8                     u2030:	
  5398  00D8  0016               	moviw fsr1++
  5399  00D9  001A               	movwi fsr0++
  5400  00DA  0BCB               	decfsz	??_readCargo,f
  5401  00DB  28D8               	goto	u2030
  5402                           
  5403                           ;normal_mode.c: 21: if(isMycargo){
  5404  00DC  1870               	btfsc	_isMycargo/(0+8),_isMycargo& (0+7)
  5405  00DD  29B5               	goto	l3063
  5406  00DE  29C4               	goto	l3065
  5407  00DF                     l3021:	
  5408                           ;normal_mode.c: 23: case 0:
  5409                           
  5410                           ;normal_mode.c: 22: switch(countabuf){
  5411                           
  5412                           
  5413                           ;normal_mode.c: 24: cargoData.cargoLength = (bufint << 8 | 0x00FF);
  5414  00DF  0022               	movlb	2	; select bank2
  5415  00E0  0836               	movf	readCargo@bufint^(0+256),w
  5416  00E1  0020               	movlb	0	; select bank0
  5417  00E2  00CC               	movwf	??_readCargo+1
  5418  00E3  01CB               	clrf	??_readCargo
  5419  00E4  30FF               	movlw	255
  5420  00E5  044B               	iorwf	??_readCargo,w
  5421  00E6  00D2               	movwf	_cargoData
  5422  00E7  3000               	movlw	0
  5423  00E8  044C               	iorwf	??_readCargo+1,w
  5424  00E9  28F9               	goto	L2
  5425  00EA                     l3023:	
  5426                           ;normal_mode.c: 26: case 1:
  5427                           
  5428                           ;normal_mode.c: 25: break;
  5429                           
  5430                           
  5431                           ;normal_mode.c: 27: cargoData.cargoLength = cargoData.cargoLength & (bufint | 0xFF00);
  5432  00EA  3000               	movlw	0
  5433  00EB  0022               	movlb	2	; select bank2
  5434  00EC  0436               	iorwf	readCargo@bufint^(0+256),w
  5435  00ED  0020               	movlb	0	; select bank0
  5436  00EE  00CB               	movwf	??_readCargo
  5437  00EF  30FF               	movlw	255
  5438  00F0  0022               	movlb	2	; select bank2
  5439  00F1  0437               	iorwf	(readCargo@bufint+1)^(0+256),w
  5440  00F2  0020               	movlb	0	; select bank0
  5441  00F3  00CC               	movwf	??_readCargo+1
  5442  00F4  0852               	movf	_cargoData,w
  5443  00F5  054B               	andwf	??_readCargo,w
  5444  00F6  00D2               	movwf	_cargoData
  5445  00F7  0853               	movf	_cargoData+1,w
  5446  00F8  054C               	andwf	??_readCargo+1,w
  5447  00F9                     L2:	
  5448  00F9  00D3               	movwf	_cargoData+1
  5449                           
  5450                           ;normal_mode.c: 28: break;
  5451  00FA  29C4               	goto	l3065
  5452  00FB                     l3025:	
  5453                           ;normal_mode.c: 29: case 2:
  5454                           
  5455                           
  5456                           ;normal_mode.c: 30: cargoData.command = spi1_Read_data;
  5457  00FB  0022               	movlb	2	; select bank2
  5458  00FC  0838               	movf	readCargo@spi1_Read_data^(0+256),w
  5459  00FD  0020               	movlb	0	; select bank0
  5460  00FE  00CB               	movwf	??_readCargo
  5461  00FF  084B               	movf	??_readCargo,w
  5462  0100  00D4               	movwf	_cargoData+2
  5463                           
  5464                           ;normal_mode.c: 31: break;
  5465  0101  29C4               	goto	l3065
  5466  0102                     l3027:	
  5467                           ;normal_mode.c: 32: case 3:
  5468                           
  5469                           
  5470                           ;normal_mode.c: 33: cargoData.index = spi1_Read_data;
  5471  0102  0022               	movlb	2	; select bank2
  5472  0103  0838               	movf	readCargo@spi1_Read_data^(0+256),w
  5473  0104  0020               	movlb	0	; select bank0
  5474  0105  00CB               	movwf	??_readCargo
  5475  0106  084B               	movf	??_readCargo,w
  5476  0107  00D5               	movwf	_cargoData+3
  5477                           
  5478                           ;normal_mode.c: 34: break;
  5479  0108  29C4               	goto	l3065
  5480  0109                     l3029:	
  5481                           ;normal_mode.c: 35: case 4:
  5482                           
  5483                           
  5484                           ;normal_mode.c: 36: cargoData.address = spi1_Read_data;
  5485  0109  0022               	movlb	2	; select bank2
  5486  010A  0838               	movf	readCargo@spi1_Read_data^(0+256),w
  5487  010B  0020               	movlb	0	; select bank0
  5488  010C  00CB               	movwf	??_readCargo
  5489  010D  084B               	movf	??_readCargo,w
  5490  010E  00D6               	movwf	_cargoData+4
  5491                           
  5492                           ;normal_mode.c: 37: if(cargoData.address != linkInfo.My_address){
  5493  010F  0856               	movf	_cargoData+4,w
  5494  0110  0021               	movlb	1	; select bank1
  5495  0111  064D               	xorwf	_linkInfo^(0+128),w
  5496  0112  1903               	skipnz
  5497  0113  29C4               	goto	l3065
  5498                           
  5499                           ;normal_mode.c: 38: restartCargo();
  5500  0114  318E  26EB  3180   	fcall	_restartCargo
  5501                           
  5502                           ;normal_mode.c: 39: isMycargo = 0;
  5503  0117  1070               	bcf	_isMycargo/(0+8),_isMycargo& (0+7)
  5504                           
  5505                           ;normal_mode.c: 41: }
  5506                           ;normal_mode.c: 42: break;
  5507                           
  5508                           ;normal_mode.c: 40: }else{
  5509  0118  29C4               	goto	l3065
  5510  0119                     l3035:	
  5511                           ;normal_mode.c: 43: case 5:
  5512                           
  5513                           
  5514                           ;normal_mode.c: 44: spi2_Send_data = (cargoData.linkAngleTo >> 8 & 0x00ff);
  5515  0119  0020               	movlb	0	; select bank0
  5516  011A  0858               	movf	_cargoData+6,w
  5517  011B  29B1               	goto	L12
  5518  011C                     l3037:	
  5519                           ;normal_mode.c: 46: case 6:
  5520                           
  5521                           ;normal_mode.c: 45: break;
  5522                           
  5523                           
  5524                           ;normal_mode.c: 47: spi2_Send_data = (cargoData.linkAngleTo & 0x00ff);
  5525  011C  0857               	movf	_cargoData+5,w
  5526  011D  29B1               	goto	L12
  5527  011E                     l3039:	
  5528                           ;normal_mode.c: 49: case 7:
  5529                           
  5530                           ;normal_mode.c: 48: break;
  5531                           
  5532                           
  5533                           ;normal_mode.c: 50: spi2_Send_data = (cargoData.linkAngleBack >> 8 & 0x00ff);
  5534  011E  085A               	movf	_cargoData+8,w
  5535  011F  29B1               	goto	L12
  5536  0120                     l3041:	
  5537                           ;normal_mode.c: 52: case 8:
  5538                           
  5539                           ;normal_mode.c: 51: break;
  5540                           
  5541                           
  5542                           ;normal_mode.c: 53: spi2_Send_data = (cargoData.linkAngleBack & 0x00ff);
  5543  0120  0859               	movf	_cargoData+7,w
  5544  0121  29B1               	goto	L12
  5545  0122                     l3043:	
  5546                           ;normal_mode.c: 55: case 9:
  5547                           
  5548                           ;normal_mode.c: 54: break;
  5549                           
  5550                           
  5551                           ;normal_mode.c: 56: spi2_Send_data = (cargoData.passedTime >> 8 & 0x00ff);
  5552  0122  085C               	movf	_cargoData+10,w
  5553  0123  29B1               	goto	L12
  5554  0124                     l3045:	
  5555                           ;normal_mode.c: 58: case 10:
  5556                           
  5557                           ;normal_mode.c: 57: break;
  5558                           
  5559                           
  5560                           ;normal_mode.c: 59: spi2_Send_data = (cargoData.passedTime & 0x00ff);
  5561  0124  085B               	movf	_cargoData+9,w
  5562  0125  29B1               	goto	L12
  5563  0126                     l3047:	
  5564                           ;normal_mode.c: 61: case 11:
  5565                           
  5566                           ;normal_mode.c: 60: break;
  5567                           
  5568                           
  5569                           ;normal_mode.c: 62: cargoData.clutchMode = spi1_Read_data;
  5570  0126  0022               	movlb	2	; select bank2
  5571  0127  0838               	movf	readCargo@spi1_Read_data^(0+256),w
  5572  0128  0020               	movlb	0	; select bank0
  5573  0129  00CB               	movwf	??_readCargo
  5574  012A  084B               	movf	??_readCargo,w
  5575  012B  00DD               	movwf	_cargoData+11
  5576                           
  5577                           ;normal_mode.c: 63: clutchaction(cargoData.clutchMode);
  5578  012C  085D               	movf	_cargoData+11,w
  5579  012D  318F  2719  3180   	fcall	_clutchaction
  5580                           
  5581                           ;normal_mode.c: 64: break;
  5582  0130  29C4               	goto	l3065
  5583  0131                     l3051:	
  5584                           ;normal_mode.c: 65: case 12:
  5585                           
  5586                           
  5587                           ;normal_mode.c: 66: cargoData.WorkingCount++;
  5588  0131  3001               	movlw	1
  5589  0132  0020               	movlb	0	; select bank0
  5590  0133  07DE               	addwf	_cargoData+12,f
  5591  0134  3000               	movlw	0
  5592  0135  3DDF               	addwfc	_cargoData+13,f
  5593  0136  3000               	movlw	0
  5594  0137  3DE0               	addwfc	_cargoData+14,f
  5595  0138  3000               	movlw	0
  5596  0139  3DE1               	addwfc	_cargoData+15,f
  5597                           
  5598                           ;normal_mode.c: 67: spi2_Send_data = (TransLong256To255(cargoData.WorkingCount) >> 24 & 
      +                          0x000000ff);
  5599  013A  300C               	movlw	12
  5600  013B  3E52               	addlw	(low (_cargoData| 0))& (0+255)
  5601  013C  0086               	movwf	6
  5602  013D  0187               	clrf	7
  5603  013E  3F40               	moviw [0]fsr1
  5604  013F  00AF               	movwf	TransLong256To255@data
  5605  0140  3F41               	moviw [1]fsr1
  5606  0141  00B0               	movwf	TransLong256To255@data+1
  5607  0142  3F42               	moviw [2]fsr1
  5608  0143  00B1               	movwf	TransLong256To255@data+2
  5609  0144  3F43               	moviw [3]fsr1
  5610  0145  00B2               	movwf	TransLong256To255@data+3
  5611  0146  3183  2311  3180   	fcall	_TransLong256To255
  5612  0149  0020               	movlb	0	; select bank0
  5613  014A  082F               	movf	?_TransLong256To255,w
  5614  014B  00CB               	movwf	??_readCargo
  5615  014C  0830               	movf	?_TransLong256To255+1,w
  5616  014D  00CC               	movwf	??_readCargo+1
  5617  014E  0831               	movf	?_TransLong256To255+2,w
  5618  014F  00CD               	movwf	??_readCargo+2
  5619  0150  0832               	movf	?_TransLong256To255+3,w
  5620  0151  00CE               	movwf	??_readCargo+3
  5621  0152  3018               	movlw	24
  5622  0153  00CF               	movwf	??_readCargo+4
  5623  0154                     u2065:	
  5624  0154  37CE               	asrf	??_readCargo+3,f
  5625  0155  0CCD               	rrf	??_readCargo+2,f
  5626  0156  0CCC               	rrf	??_readCargo+1,f
  5627  0157  0CCB               	rrf	??_readCargo,f
  5628  0158  0BCF               	decfsz	??_readCargo+4,f
  5629  0159  2954               	goto	u2065
  5630  015A  299C               	goto	L14
  5631  015B                     l3055:	
  5632                           ;normal_mode.c: 69: case 13:
  5633                           
  5634                           ;normal_mode.c: 68: break;
  5635                           
  5636                           
  5637                           ;normal_mode.c: 70: spi2_Send_data = (TransLong256To255(cargoData.WorkingCount) >> 16 & 
      +                          0x000000ff);
  5638  015B  300C               	movlw	12
  5639  015C  3E52               	addlw	(low (_cargoData| 0))& (0+255)
  5640  015D  0086               	movwf	6
  5641  015E  0187               	clrf	7
  5642  015F  3F40               	moviw [0]fsr1
  5643  0160  00AF               	movwf	TransLong256To255@data
  5644  0161  3F41               	moviw [1]fsr1
  5645  0162  00B0               	movwf	TransLong256To255@data+1
  5646  0163  3F42               	moviw [2]fsr1
  5647  0164  00B1               	movwf	TransLong256To255@data+2
  5648  0165  3F43               	moviw [3]fsr1
  5649  0166  00B2               	movwf	TransLong256To255@data+3
  5650  0167  3183  2311  3180   	fcall	_TransLong256To255
  5651  016A  0020               	movlb	0	; select bank0
  5652  016B  082F               	movf	?_TransLong256To255,w
  5653  016C  00CB               	movwf	??_readCargo
  5654  016D  0830               	movf	?_TransLong256To255+1,w
  5655  016E  00CC               	movwf	??_readCargo+1
  5656  016F  0831               	movf	?_TransLong256To255+2,w
  5657  0170  00CD               	movwf	??_readCargo+2
  5658  0171  0832               	movf	?_TransLong256To255+3,w
  5659  0172  00CE               	movwf	??_readCargo+3
  5660  0173  3010               	movlw	16
  5661  0174  00CF               	movwf	??_readCargo+4
  5662  0175                     u2075:	
  5663  0175  37CE               	asrf	??_readCargo+3,f
  5664  0176  0CCD               	rrf	??_readCargo+2,f
  5665  0177  0CCC               	rrf	??_readCargo+1,f
  5666  0178  0CCB               	rrf	??_readCargo,f
  5667  0179  0BCF               	decfsz	??_readCargo+4,f
  5668  017A  2975               	goto	u2075
  5669  017B  299C               	goto	L14
  5670  017C                     l3057:	
  5671                           ;normal_mode.c: 72: case 14:
  5672                           
  5673                           ;normal_mode.c: 71: break;
  5674                           
  5675                           
  5676                           ;normal_mode.c: 73: spi2_Send_data = (TransLong256To255(cargoData.WorkingCount) >> 8 & 0
      +                          x000000ff);
  5677  017C  300C               	movlw	12
  5678  017D  3E52               	addlw	(low (_cargoData| 0))& (0+255)
  5679  017E  0086               	movwf	6
  5680  017F  0187               	clrf	7
  5681  0180  3F40               	moviw [0]fsr1
  5682  0181  00AF               	movwf	TransLong256To255@data
  5683  0182  3F41               	moviw [1]fsr1
  5684  0183  00B0               	movwf	TransLong256To255@data+1
  5685  0184  3F42               	moviw [2]fsr1
  5686  0185  00B1               	movwf	TransLong256To255@data+2
  5687  0186  3F43               	moviw [3]fsr1
  5688  0187  00B2               	movwf	TransLong256To255@data+3
  5689  0188  3183  2311  3180   	fcall	_TransLong256To255
  5690  018B  0020               	movlb	0	; select bank0
  5691  018C  082F               	movf	?_TransLong256To255,w
  5692  018D  00CB               	movwf	??_readCargo
  5693  018E  0830               	movf	?_TransLong256To255+1,w
  5694  018F  00CC               	movwf	??_readCargo+1
  5695  0190  0831               	movf	?_TransLong256To255+2,w
  5696  0191  00CD               	movwf	??_readCargo+2
  5697  0192  0832               	movf	?_TransLong256To255+3,w
  5698  0193  00CE               	movwf	??_readCargo+3
  5699  0194  3008               	movlw	8
  5700  0195  00CF               	movwf	??_readCargo+4
  5701  0196                     u2085:	
  5702  0196  37CE               	asrf	??_readCargo+3,f
  5703  0197  0CCD               	rrf	??_readCargo+2,f
  5704  0198  0CCC               	rrf	??_readCargo+1,f
  5705  0199  0CCB               	rrf	??_readCargo,f
  5706  019A  0BCF               	decfsz	??_readCargo+4,f
  5707  019B  2996               	goto	u2085
  5708  019C                     L14:	
  5709  019C  084B               	movf	??_readCargo,w
  5710  019D  00D0               	movwf	??_readCargo+5
  5711  019E  0850               	movf	??_readCargo+5,w
  5712  019F  29B3               	goto	L11
  5713  01A0                     l3059:	
  5714                           ;normal_mode.c: 75: case 15:
  5715                           
  5716                           ;normal_mode.c: 74: break;
  5717                           
  5718                           
  5719                           ;normal_mode.c: 76: spi2_Send_data = (TransLong256To255(cargoData.WorkingCount) & 0x0000
      +                          00ff);
  5720  01A0  300C               	movlw	12
  5721  01A1  3E52               	addlw	(low (_cargoData| 0))& (0+255)
  5722  01A2  0086               	movwf	6
  5723  01A3  0187               	clrf	7
  5724  01A4  3F40               	moviw [0]fsr1
  5725  01A5  00AF               	movwf	TransLong256To255@data
  5726  01A6  3F41               	moviw [1]fsr1
  5727  01A7  00B0               	movwf	TransLong256To255@data+1
  5728  01A8  3F42               	moviw [2]fsr1
  5729  01A9  00B1               	movwf	TransLong256To255@data+2
  5730  01AA  3F43               	moviw [3]fsr1
  5731  01AB  00B2               	movwf	TransLong256To255@data+3
  5732  01AC  3183  2311  3180   	fcall	_TransLong256To255
  5733  01AF  0020               	movlb	0	; select bank0
  5734  01B0  082F               	movf	?_TransLong256To255,w
  5735  01B1                     L12:	
  5736  01B1  00CB               	movwf	??_readCargo
  5737  01B2  084B               	movf	??_readCargo,w
  5738  01B3                     L11:	
  5739  01B3  00ED               	movwf	_spi2_Send_data
  5740                           
  5741                           ;normal_mode.c: 78: }
  5742                           
  5743                           ;normal_mode.c: 77: break;
  5744  01B4  29C4               	goto	l3065
  5745  01B5                     l3063:	
  5746                           
  5747                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5748                           ; Switch size 1, requested type "space"
  5749                           ; Number of cases is 1, Range of values is 0 to 0
  5750                           ; switch strategies available:
  5751                           ; Name         Instructions Cycles
  5752                           ; simple_byte            4     3 (average)
  5753                           ; direct_byte            8     6 (fixed)
  5754                           ; jumptable            260     6 (fixed)
  5755                           ;	Chosen strategy is simple_byte
  5756  01B5  0865               	movf	_countabuf+1,w
  5757  01B6  3A00               	xorlw	0	; case 0
  5758  01B7  1903               	skipnz
  5759  01B8  29BA               	goto	l3419
  5760  01B9  29C4               	goto	l3065
  5761  01BA                     l3419:	
  5762                           
  5763                           ; Switch size 1, requested type "space"
  5764                           ; Number of cases is 16, Range of values is 0 to 15
  5765                           ; switch strategies available:
  5766                           ; Name         Instructions Cycles
  5767                           ; direct_byte           38     6 (fixed)
  5768                           ; simple_byte           49    25 (average)
  5769                           ; jumptable            260     6 (fixed)
  5770                           ;	Chosen strategy is direct_byte
  5771  01BA  0864               	movf	_countabuf,w
  5772  01BB  0084               	movwf	4
  5773  01BC  3010               	movlw	16
  5774  01BD  0204               	subwf	4,w
  5775  01BE  1803               	skipnc
  5776  01BF  29C4               	goto	l3065
  5777  01C0  3188               	movlp	high S3421
  5778  01C1  3504               	lslf	4,w
  5779  01C2  3E00               	addlw	low S3421
  5780  01C3  0082               	movwf	2
  5781  01C4                     l3065:	
  5782                           
  5783                           ;normal_mode.c: 79: }
  5784                           ;normal_mode.c: 81: countabuf++;
  5785  01C4  3001               	movlw	1
  5786  01C5  0020               	movlb	0	; select bank0
  5787  01C6  07E4               	addwf	_countabuf,f
  5788  01C7  3000               	movlw	0
  5789  01C8  3DE5               	addwfc	_countabuf+1,f
  5790                           
  5791                           ;normal_mode.c: 82: if(cargoData.cargoLength <= countabuf){
  5792  01C9  0853               	movf	_cargoData+1,w
  5793  01CA  0265               	subwf	_countabuf+1,w
  5794  01CB  1D03               	skipz
  5795  01CC  29CF               	goto	u2095
  5796  01CD  0852               	movf	_cargoData,w
  5797  01CE  0264               	subwf	_countabuf,w
  5798  01CF                     u2095:	
  5799  01CF  1C03               	skipc
  5800  01D0  0008               	return
  5801                           
  5802                           ;normal_mode.c: 83: cargoLengthnuf = 0;
  5803  01D1  0021               	movlb	1	; select bank1
  5804  01D2  01DB               	clrf	_cargoLengthnuf^(0+128)
  5805  01D3  01DC               	clrf	(_cargoLengthnuf+1)^(0+128)
  5806                           
  5807                           ;normal_mode.c: 84: cargoWorkingCount = 0;
  5808  01D4  3000               	movlw	0
  5809  01D5  00D6               	movwf	(_cargoWorkingCount+3)^(0+128)
  5810  01D6  3000               	movlw	0
  5811  01D7  00D5               	movwf	(_cargoWorkingCount+2)^(0+128)
  5812  01D8  3000               	movlw	0
  5813  01D9  00D4               	movwf	(_cargoWorkingCount+1)^(0+128)
  5814  01DA  3000               	movlw	0
  5815  01DB  00D3               	movwf	_cargoWorkingCount^(0+128)
  5816                           
  5817                           ;normal_mode.c: 85: cargoData.cargoLength = 0xFFFF;
  5818  01DC  30FF               	movlw	255
  5819  01DD  0020               	movlb	0	; select bank0
  5820  01DE  00D2               	movwf	_cargoData
  5821  01DF  30FF               	movlw	255
  5822  01E0  00D3               	movwf	_cargoData+1
  5823                           
  5824                           ;normal_mode.c: 86: countabuf = 0;
  5825  01E1  01E4               	clrf	_countabuf
  5826  01E2  01E5               	clrf	_countabuf+1
  5827                           
  5828                           ;normal_mode.c: 87: isMycargo = 1;
  5829  01E3  1470               	bsf	_isMycargo/(0+8),_isMycargo& (0+7)
  5830  01E4  0008               	return
  5831  01E5                     __end_of_readCargo:	
  5832                           
  5833                           	psect	swtext1
  5834  0800                     __pswtext1:	
  5835  0800                     S3421:	
  5836  0800  3180  28DF         	ljmp	l3021
  5837  0802  3180  28EA         	ljmp	l3023
  5838  0804  3180  28FB         	ljmp	l3025
  5839  0806  3181  2902         	ljmp	l3027
  5840  0808  3181  2909         	ljmp	l3029
  5841  080A  3181  2919         	ljmp	l3035
  5842  080C  3181  291C         	ljmp	l3037
  5843  080E  3181  291E         	ljmp	l3039
  5844  0810  3181  2920         	ljmp	l3041
  5845  0812  3181  2922         	ljmp	l3043
  5846  0814  3181  2924         	ljmp	l3045
  5847  0816  3181  2926         	ljmp	l3047
  5848  0818  3181  2931         	ljmp	l3051
  5849  081A  3181  295B         	ljmp	l3055
  5850  081C  3181  297C         	ljmp	l3057
  5851  081E  3181  29A0         	ljmp	l3059
  5852                           
  5853                           	psect	text7
  5854  0F19                     __ptext7:	
  5855 ;; *************** function _clutchaction *****************
  5856 ;; Defined at:
  5857 ;;		line 68 in file "D:/programdata/16F18346_Link_IC.X/command.c"
  5858 ;; Parameters:    Size  Location     Type
  5859 ;;  comannd         1    wreg     unsigned char 
  5860 ;; Auto vars:     Size  Location     Type
  5861 ;;  comannd         1    0[BANK0 ] unsigned char 
  5862 ;; Return value:  Size  Location     Type
  5863 ;;		None               void
  5864 ;; Registers used:
  5865 ;;		wreg, status,2, status,0
  5866 ;; Tracked objects:
  5867 ;;		On entry : 0/0
  5868 ;;		On exit  : 0/0
  5869 ;;		Unchanged: 0/0
  5870 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5871 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5872 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5873 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5874 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5875 ;;Total ram usage:        1 bytes
  5876 ;; Hardware stack levels used:    1
  5877 ;; Hardware stack levels required when called:    3
  5878 ;; This function calls:
  5879 ;;		Nothing
  5880 ;; This function is called by:
  5881 ;;		_readCargo
  5882 ;; This function uses a non-reentrant model
  5883 ;;
  5884                           
  5885                           
  5886                           ;psect for function _clutchaction
  5887  0F19                     _clutchaction:	
  5888                           
  5889                           ;incstack = 0
  5890                           ; Regs used in _clutchaction: [wreg+status,2+status,0]
  5891                           ;clutchaction@comannd stored from wreg
  5892  0F19  0020               	movlb	0	; select bank0
  5893  0F1A  00A0               	movwf	clutchaction@comannd
  5894                           
  5895                           ;command.c: 69: if(comannd == 1){
  5896  0F1B  0320               	decf	clutchaction@comannd,w
  5897  0F1C  1D03               	btfss	3,2
  5898  0F1D  2F21               	goto	l370
  5899                           
  5900                           ;command.c: 70: LATAbits.LATA0 = 1;
  5901  0F1E  0022               	movlb	2	; select bank2
  5902  0F1F  140C               	bsf	12,0	;volatile
  5903                           
  5904                           ;command.c: 71: }else{
  5905  0F20  0008               	return
  5906  0F21                     l370:	
  5907                           
  5908                           ;command.c: 72: LATAbits.LATA0 = 0;
  5909  0F21  0022               	movlb	2	; select bank2
  5910  0F22  100C               	bcf	12,0	;volatile
  5911  0F23  0008               	return
  5912  0F24                     __end_of_clutchaction:	
  5913                           
  5914                           	psect	text8
  5915  01E5                     __ptext8:	
  5916 ;; *************** function _Calibrate_download *****************
  5917 ;; Defined at:
  5918 ;;		line 65 in file "D:/programdata/16F18346_Link_IC.X/calibrate_mode.c"
  5919 ;; Parameters:    Size  Location     Type
  5920 ;;  spi_Read_dat    1    wreg     unsigned char 
  5921 ;; Auto vars:     Size  Location     Type
  5922 ;;  spi_Read_dat    1    6[BANK2 ] unsigned char 
  5923 ;;  buflong         4    0[BANK2 ] unsigned long 
  5924 ;;  bufint          2    4[BANK2 ] unsigned int 
  5925 ;; Return value:  Size  Location     Type
  5926 ;;                  1    wreg      void 
  5927 ;; Registers used:
  5928 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5929 ;; Tracked objects:
  5930 ;;		On entry : 0/0
  5931 ;;		On exit  : 0/0
  5932 ;;		Unchanged: 0/0
  5933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5934 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5935 ;;      Locals:         0       0       0       7       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5936 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5937 ;;      Totals:         0       6       0       7       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5938 ;;Total ram usage:       13 bytes
  5939 ;; Hardware stack levels used:    1
  5940 ;; Hardware stack levels required when called:    5
  5941 ;; This function calls:
  5942 ;;		_InitCalibrate
  5943 ;;		_TransLong256To255
  5944 ;;		_isEndpoint
  5945 ;; This function is called by:
  5946 ;;		_setComunicateMode
  5947 ;; This function uses a non-reentrant model
  5948 ;;
  5949                           
  5950                           
  5951                           ;psect for function _Calibrate_download
  5952  01E5                     _Calibrate_download:	
  5953                           
  5954                           ;incstack = 0
  5955                           ; Regs used in _Calibrate_download: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5956                           ;Calibrate_download@spi_Read_data stored from wreg
  5957  01E5  0022               	movlb	2	; select bank2
  5958  01E6  00B8               	movwf	Calibrate_download@spi_Read_data^(0+256)
  5959                           
  5960                           ;calibrate_mode.c: 67: unsigned int bufint = spi_Read_data;
  5961  01E7  0838               	movf	Calibrate_download@spi_Read_data^(0+256),w
  5962  01E8  0020               	movlb	0	; select bank0
  5963  01E9  00CB               	movwf	??_Calibrate_download
  5964  01EA  01CC               	clrf	??_Calibrate_download+1
  5965  01EB  084B               	movf	??_Calibrate_download,w
  5966  01EC  0022               	movlb	2	; select bank2
  5967  01ED  00B6               	movwf	Calibrate_download@bufint^(0+256)
  5968  01EE  0020               	movlb	0	; select bank0
  5969  01EF  084C               	movf	??_Calibrate_download+1,w
  5970  01F0  0022               	movlb	2	; select bank2
  5971  01F1  00B7               	movwf	(Calibrate_download@bufint+1)^(0+256)
  5972                           
  5973                           ;calibrate_mode.c: 68: unsigned long buflong = spi_Read_data;
  5974  01F2  0838               	movf	Calibrate_download@spi_Read_data^(0+256),w
  5975  01F3  0020               	movlb	0	; select bank0
  5976  01F4  00CB               	movwf	??_Calibrate_download
  5977  01F5  01CC               	clrf	??_Calibrate_download+1
  5978  01F6  01CD               	clrf	??_Calibrate_download+2
  5979  01F7  01CE               	clrf	??_Calibrate_download+3
  5980  01F8  084E               	movf	??_Calibrate_download+3,w
  5981  01F9  0022               	movlb	2	; select bank2
  5982  01FA  00B5               	movwf	(Calibrate_download@buflong+3)^(0+256)
  5983  01FB  0020               	movlb	0	; select bank0
  5984  01FC  084D               	movf	??_Calibrate_download+2,w
  5985  01FD  0022               	movlb	2	; select bank2
  5986  01FE  00B4               	movwf	(Calibrate_download@buflong+2)^(0+256)
  5987  01FF  0020               	movlb	0	; select bank0
  5988  0200  084C               	movf	??_Calibrate_download+1,w
  5989  0201  0022               	movlb	2	; select bank2
  5990  0202  00B3               	movwf	(Calibrate_download@buflong+1)^(0+256)
  5991  0203  0020               	movlb	0	; select bank0
  5992  0204  084B               	movf	??_Calibrate_download,w
  5993  0205  0022               	movlb	2	; select bank2
  5994  0206  00B2               	movwf	Calibrate_download@buflong^(0+256)
  5995                           
  5996                           ;calibrate_mode.c: 69: isEndpoint();
  5997  0207  3186  26D5  3181   	fcall	_isEndpoint
  5998                           
  5999                           ;calibrate_mode.c: 70: switch(countabuf){
  6000  020A  2AE6               	goto	l2989
  6001  020B                     l2953:	
  6002                           ;calibrate_mode.c: 71: case 0:
  6003                           
  6004                           
  6005                           ;calibrate_mode.c: 72: InitCalibrate();
  6006  020B  3187  2792  3181   	fcall	_InitCalibrate
  6007                           
  6008                           ;calibrate_mode.c: 73: calibdata.cargoLength = (bufint << 8 | 0x00FF);
  6009  020E  0022               	movlb	2	; select bank2
  6010  020F  0836               	movf	Calibrate_download@bufint^(0+256),w
  6011  0210  0020               	movlb	0	; select bank0
  6012  0211  00CC               	movwf	??_Calibrate_download+1
  6013  0212  01CB               	clrf	??_Calibrate_download
  6014  0213  30FF               	movlw	255
  6015  0214  044B               	iorwf	??_Calibrate_download,w
  6016  0215  0021               	movlb	1	; select bank1
  6017  0216  00C4               	movwf	_calibdata^(0+128)
  6018  0217  3000               	movlw	0
  6019  0218  0020               	movlb	0	; select bank0
  6020  0219  044C               	iorwf	??_Calibrate_download+1,w
  6021  021A  2A2E               	goto	L15
  6022  021B                     l2959:	
  6023                           ;calibrate_mode.c: 76: case 1:
  6024                           
  6025                           ;calibrate_mode.c: 75: break;
  6026                           
  6027                           ;calibrate_mode.c: 74: spi2_Send_data = spi_Read_data;
  6028                           
  6029                           
  6030                           ;calibrate_mode.c: 77: calibdata.cargoLength = calibdata.cargoLength & (bufint | 0xFF00)
      +                          ;
  6031  021B  3000               	movlw	0
  6032  021C  0022               	movlb	2	; select bank2
  6033  021D  0436               	iorwf	Calibrate_download@bufint^(0+256),w
  6034  021E  0020               	movlb	0	; select bank0
  6035  021F  00CB               	movwf	??_Calibrate_download
  6036  0220  30FF               	movlw	255
  6037  0221  0022               	movlb	2	; select bank2
  6038  0222  0437               	iorwf	(Calibrate_download@bufint+1)^(0+256),w
  6039  0223  0020               	movlb	0	; select bank0
  6040  0224  00CC               	movwf	??_Calibrate_download+1
  6041  0225  0021               	movlb	1	; select bank1
  6042  0226  0844               	movf	_calibdata^(0+128),w
  6043  0227  0020               	movlb	0	; select bank0
  6044  0228  054B               	andwf	??_Calibrate_download,w
  6045  0229  0021               	movlb	1	; select bank1
  6046  022A  00C4               	movwf	_calibdata^(0+128)
  6047  022B  0845               	movf	(_calibdata+1)^(0+128),w
  6048  022C  0020               	movlb	0	; select bank0
  6049  022D  054C               	andwf	??_Calibrate_download+1,w
  6050  022E                     L15:	
  6051  022E  0021               	movlb	1	; select bank1
  6052  022F  00C5               	movwf	(_calibdata+1)^(0+128)
  6053  0230  2A40               	goto	L17
  6054  0231                     l2961:	
  6055                           ;calibrate_mode.c: 80: case 2:
  6056                           
  6057                           ;calibrate_mode.c: 79: break;
  6058                           
  6059                           ;calibrate_mode.c: 78: spi2_Send_data = spi_Read_data;
  6060                           
  6061                           
  6062                           ;calibrate_mode.c: 81: calibdata.command = spi_Read_data;
  6063  0231  0022               	movlb	2	; select bank2
  6064  0232  0838               	movf	Calibrate_download@spi_Read_data^(0+256),w
  6065  0233  0020               	movlb	0	; select bank0
  6066  0234  00CB               	movwf	??_Calibrate_download
  6067  0235  084B               	movf	??_Calibrate_download,w
  6068  0236  0021               	movlb	1	; select bank1
  6069  0237  00C6               	movwf	(_calibdata^(0+128)+2)
  6070  0238  2A40               	goto	L17
  6071  0239                     l2963:	
  6072                           ;calibrate_mode.c: 84: case 3:
  6073                           
  6074                           ;calibrate_mode.c: 83: break;
  6075                           
  6076                           ;calibrate_mode.c: 82: spi2_Send_data = spi_Read_data;
  6077                           
  6078                           
  6079                           ;calibrate_mode.c: 85: calibdata.index = spi_Read_data;
  6080  0239  0022               	movlb	2	; select bank2
  6081  023A  0838               	movf	Calibrate_download@spi_Read_data^(0+256),w
  6082  023B  0020               	movlb	0	; select bank0
  6083  023C  00CB               	movwf	??_Calibrate_download
  6084  023D  084B               	movf	??_Calibrate_download,w
  6085  023E  0021               	movlb	1	; select bank1
  6086  023F  00C7               	movwf	(_calibdata^(0+128)+3)
  6087  0240                     L17:	
  6088                           
  6089                           ;calibrate_mode.c: 86: spi2_Send_data = spi_Read_data;
  6090  0240  0022               	movlb	2	; select bank2
  6091  0241  0838               	movf	Calibrate_download@spi_Read_data^(0+256),w
  6092  0242  2A4C               	goto	L18
  6093  0243                     l2965:	
  6094                           ;calibrate_mode.c: 88: case 4:
  6095                           
  6096                           ;calibrate_mode.c: 87: break;
  6097                           
  6098                           
  6099                           ;calibrate_mode.c: 89: linkInfo.My_address = spi_Read_data +1;
  6100  0243  0022               	movlb	2	; select bank2
  6101  0244  0838               	movf	Calibrate_download@spi_Read_data^(0+256),w
  6102  0245  3E01               	addlw	1
  6103  0246  0020               	movlb	0	; select bank0
  6104  0247  00CB               	movwf	??_Calibrate_download
  6105  0248  084B               	movf	??_Calibrate_download,w
  6106  0249  0021               	movlb	1	; select bank1
  6107  024A  00CD               	movwf	_linkInfo^(0+128)
  6108                           
  6109                           ;calibrate_mode.c: 90: spi2_Send_data = linkInfo.My_address;
  6110  024B  084D               	movf	_linkInfo^(0+128),w
  6111  024C                     L18:	
  6112  024C  0020               	movlb	0	; select bank0
  6113  024D  2ACF               	goto	L23
  6114  024E                     l2969:	
  6115                           ;calibrate_mode.c: 92: case 5:
  6116                           
  6117                           ;calibrate_mode.c: 91: break;
  6118                           
  6119                           
  6120                           ;calibrate_mode.c: 93: calibdata.WorkingCount++;
  6121  024E  3001               	movlw	1
  6122  024F  0021               	movlb	1	; select bank1
  6123  0250  07C8               	addwf	(_calibdata^(0+128)+4),f
  6124  0251  3000               	movlw	0
  6125  0252  3DC9               	addwfc	((_calibdata+1)^(0+128)+4),f
  6126  0253  3000               	movlw	0
  6127  0254  3DCA               	addwfc	((_calibdata+2)^(0+128)+4),f
  6128  0255  3000               	movlw	0
  6129  0256  3DCB               	addwfc	((_calibdata+3)^(0+128)+4),f
  6130                           
  6131                           ;calibrate_mode.c: 94: spi2_Send_data = (TransLong256To255(calibdata.WorkingCount) >> 24
      +                           & 0x000000ff);
  6132  0257  3004               	movlw	4
  6133  0258  3EC4               	addlw	(low (_calibdata| 0))& (0+255)
  6134  0259  0086               	movwf	6
  6135  025A  0187               	clrf	7
  6136  025B  3F40               	moviw [0]fsr1
  6137  025C  0020               	movlb	0	; select bank0
  6138  025D  00AF               	movwf	TransLong256To255@data
  6139  025E  3F41               	moviw [1]fsr1
  6140  025F  00B0               	movwf	TransLong256To255@data+1
  6141  0260  3F42               	moviw [2]fsr1
  6142  0261  00B1               	movwf	TransLong256To255@data+2
  6143  0262  3F43               	moviw [3]fsr1
  6144  0263  00B2               	movwf	TransLong256To255@data+3
  6145  0264  3183  2311  3181   	fcall	_TransLong256To255
  6146  0267  0020               	movlb	0	; select bank0
  6147  0268  082F               	movf	?_TransLong256To255,w
  6148  0269  00CB               	movwf	??_Calibrate_download
  6149  026A  0830               	movf	?_TransLong256To255+1,w
  6150  026B  00CC               	movwf	??_Calibrate_download+1
  6151  026C  0831               	movf	?_TransLong256To255+2,w
  6152  026D  00CD               	movwf	??_Calibrate_download+2
  6153  026E  0832               	movf	?_TransLong256To255+3,w
  6154  026F  00CE               	movwf	??_Calibrate_download+3
  6155  0270  3018               	movlw	24
  6156  0271  00CF               	movwf	??_Calibrate_download+4
  6157  0272                     u1975:	
  6158  0272  37CE               	asrf	??_Calibrate_download+3,f
  6159  0273  0CCD               	rrf	??_Calibrate_download+2,f
  6160  0274  0CCC               	rrf	??_Calibrate_download+1,f
  6161  0275  0CCB               	rrf	??_Calibrate_download,f
  6162  0276  0BCF               	decfsz	??_Calibrate_download+4,f
  6163  0277  2A72               	goto	u1975
  6164  0278  2ABA               	goto	L25
  6165  0279                     l2973:	
  6166                           ;calibrate_mode.c: 96: case 6:
  6167                           
  6168                           ;calibrate_mode.c: 95: break;
  6169                           
  6170                           
  6171                           ;calibrate_mode.c: 97: spi2_Send_data = (TransLong256To255(calibdata.WorkingCount) >> 16
      +                           & 0x000000ff);
  6172  0279  3004               	movlw	4
  6173  027A  3EC4               	addlw	(low (_calibdata| 0))& (0+255)
  6174  027B  0086               	movwf	6
  6175  027C  0187               	clrf	7
  6176  027D  3F40               	moviw [0]fsr1
  6177  027E  00AF               	movwf	TransLong256To255@data
  6178  027F  3F41               	moviw [1]fsr1
  6179  0280  00B0               	movwf	TransLong256To255@data+1
  6180  0281  3F42               	moviw [2]fsr1
  6181  0282  00B1               	movwf	TransLong256To255@data+2
  6182  0283  3F43               	moviw [3]fsr1
  6183  0284  00B2               	movwf	TransLong256To255@data+3
  6184  0285  3183  2311  3181   	fcall	_TransLong256To255
  6185  0288  0020               	movlb	0	; select bank0
  6186  0289  082F               	movf	?_TransLong256To255,w
  6187  028A  00CB               	movwf	??_Calibrate_download
  6188  028B  0830               	movf	?_TransLong256To255+1,w
  6189  028C  00CC               	movwf	??_Calibrate_download+1
  6190  028D  0831               	movf	?_TransLong256To255+2,w
  6191  028E  00CD               	movwf	??_Calibrate_download+2
  6192  028F  0832               	movf	?_TransLong256To255+3,w
  6193  0290  00CE               	movwf	??_Calibrate_download+3
  6194  0291  3010               	movlw	16
  6195  0292  00CF               	movwf	??_Calibrate_download+4
  6196  0293                     u1985:	
  6197  0293  37CE               	asrf	??_Calibrate_download+3,f
  6198  0294  0CCD               	rrf	??_Calibrate_download+2,f
  6199  0295  0CCC               	rrf	??_Calibrate_download+1,f
  6200  0296  0CCB               	rrf	??_Calibrate_download,f
  6201  0297  0BCF               	decfsz	??_Calibrate_download+4,f
  6202  0298  2A93               	goto	u1985
  6203  0299  2ABA               	goto	L25
  6204  029A                     l2975:	
  6205                           ;calibrate_mode.c: 99: case 7:
  6206                           
  6207                           ;calibrate_mode.c: 98: break;
  6208                           
  6209                           
  6210                           ;calibrate_mode.c: 100: spi2_Send_data = (TransLong256To255(calibdata.WorkingCount) >> 8
      +                           & 0x000000ff);
  6211  029A  3004               	movlw	4
  6212  029B  3EC4               	addlw	(low (_calibdata| 0))& (0+255)
  6213  029C  0086               	movwf	6
  6214  029D  0187               	clrf	7
  6215  029E  3F40               	moviw [0]fsr1
  6216  029F  00AF               	movwf	TransLong256To255@data
  6217  02A0  3F41               	moviw [1]fsr1
  6218  02A1  00B0               	movwf	TransLong256To255@data+1
  6219  02A2  3F42               	moviw [2]fsr1
  6220  02A3  00B1               	movwf	TransLong256To255@data+2
  6221  02A4  3F43               	moviw [3]fsr1
  6222  02A5  00B2               	movwf	TransLong256To255@data+3
  6223  02A6  3183  2311  3181   	fcall	_TransLong256To255
  6224  02A9  0020               	movlb	0	; select bank0
  6225  02AA  082F               	movf	?_TransLong256To255,w
  6226  02AB  00CB               	movwf	??_Calibrate_download
  6227  02AC  0830               	movf	?_TransLong256To255+1,w
  6228  02AD  00CC               	movwf	??_Calibrate_download+1
  6229  02AE  0831               	movf	?_TransLong256To255+2,w
  6230  02AF  00CD               	movwf	??_Calibrate_download+2
  6231  02B0  0832               	movf	?_TransLong256To255+3,w
  6232  02B1  00CE               	movwf	??_Calibrate_download+3
  6233  02B2  3008               	movlw	8
  6234  02B3  00CF               	movwf	??_Calibrate_download+4
  6235  02B4                     u1995:	
  6236  02B4  37CE               	asrf	??_Calibrate_download+3,f
  6237  02B5  0CCD               	rrf	??_Calibrate_download+2,f
  6238  02B6  0CCC               	rrf	??_Calibrate_download+1,f
  6239  02B7  0CCB               	rrf	??_Calibrate_download,f
  6240  02B8  0BCF               	decfsz	??_Calibrate_download+4,f
  6241  02B9  2AB4               	goto	u1995
  6242  02BA                     L25:	
  6243  02BA  084B               	movf	??_Calibrate_download,w
  6244  02BB  00D0               	movwf	??_Calibrate_download+5
  6245  02BC  0850               	movf	??_Calibrate_download+5,w
  6246  02BD  2AD1               	goto	L22
  6247  02BE                     l2977:	
  6248                           ;calibrate_mode.c: 102: case 8:
  6249                           
  6250                           ;calibrate_mode.c: 101: break;
  6251                           
  6252                           
  6253                           ;calibrate_mode.c: 103: spi2_Send_data = (TransLong256To255(calibdata.WorkingCount) & 0x
      +                          000000ff);
  6254  02BE  3004               	movlw	4
  6255  02BF  3EC4               	addlw	(low (_calibdata| 0))& (0+255)
  6256  02C0  0086               	movwf	6
  6257  02C1  0187               	clrf	7
  6258  02C2  3F40               	moviw [0]fsr1
  6259  02C3  00AF               	movwf	TransLong256To255@data
  6260  02C4  3F41               	moviw [1]fsr1
  6261  02C5  00B0               	movwf	TransLong256To255@data+1
  6262  02C6  3F42               	moviw [2]fsr1
  6263  02C7  00B1               	movwf	TransLong256To255@data+2
  6264  02C8  3F43               	moviw [3]fsr1
  6265  02C9  00B2               	movwf	TransLong256To255@data+3
  6266  02CA  3183  2311  3181   	fcall	_TransLong256To255
  6267  02CD  0020               	movlb	0	; select bank0
  6268  02CE  082F               	movf	?_TransLong256To255,w
  6269  02CF                     L23:	
  6270  02CF  00CB               	movwf	??_Calibrate_download
  6271  02D0  084B               	movf	??_Calibrate_download,w
  6272  02D1                     L22:	
  6273  02D1  00ED               	movwf	_spi2_Send_data
  6274                           
  6275                           ;calibrate_mode.c: 104: break;
  6276  02D2  2AF6               	goto	l429
  6277  02D3                     l438:	
  6278                           ;calibrate_mode.c: 105: case 9:
  6279                           
  6280                           
  6281                           ;calibrate_mode.c: 107: if(isEndPointTrig == 1){
  6282  02D3  1C79               	btfss	_isEndPointTrig/(0+8),_isEndPointTrig& (0+7)
  6283  02D4  2ADB               	goto	l439
  6284                           
  6285                           ;calibrate_mode.c: 108: LATAbits.LATA0 = 1;
  6286  02D5  0022               	movlb	2	; select bank2
  6287  02D6  140C               	bsf	12,0	;volatile
  6288                           
  6289                           ;calibrate_mode.c: 109: linkInfo.endpoint = 1;
  6290  02D7  0021               	movlb	1	; select bank1
  6291  02D8  01D2               	clrf	(_linkInfo^(0+128)+5)
  6292  02D9  0AD2               	incf	(_linkInfo^(0+128)+5),f
  6293                           
  6294                           ;calibrate_mode.c: 110: }else{
  6295  02DA  2ADF               	goto	l2983
  6296  02DB                     l439:	
  6297                           
  6298                           ;calibrate_mode.c: 111: LATAbits.LATA0 = 0;
  6299  02DB  0022               	movlb	2	; select bank2
  6300  02DC  100C               	bcf	12,0	;volatile
  6301                           
  6302                           ;calibrate_mode.c: 112: linkInfo.endpoint = 0;
  6303  02DD  0021               	movlb	1	; select bank1
  6304  02DE  01D2               	clrf	(_linkInfo^(0+128)+5)
  6305  02DF                     l2983:	
  6306                           
  6307                           ;calibrate_mode.c: 113: }
  6308                           ;calibrate_mode.c: 114: spi2_Send_data = linkInfo.My_address;
  6309  02DF  084D               	movf	_linkInfo^(0+128),w
  6310  02E0  0020               	movlb	0	; select bank0
  6311  02E1  00CB               	movwf	??_Calibrate_download
  6312  02E2  084B               	movf	??_Calibrate_download,w
  6313  02E3  00ED               	movwf	_spi2_Send_data
  6314                           
  6315                           ;calibrate_mode.c: 115: isEndPointTrig = 0;
  6316  02E4  1079               	bcf	_isEndPointTrig/(0+8),_isEndPointTrig& (0+7)
  6317                           
  6318                           ;calibrate_mode.c: 117: }
  6319                           
  6320                           ;calibrate_mode.c: 116: break;
  6321  02E5  2AF6               	goto	l429
  6322  02E6                     l2989:	
  6323                           
  6324                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6325                           ; Switch size 1, requested type "space"
  6326                           ; Number of cases is 1, Range of values is 0 to 0
  6327                           ; switch strategies available:
  6328                           ; Name         Instructions Cycles
  6329                           ; simple_byte            4     3 (average)
  6330                           ; direct_byte            8     6 (fixed)
  6331                           ; jumptable            260     6 (fixed)
  6332                           ;	Chosen strategy is simple_byte
  6333  02E6  0020               	movlb	0	; select bank0
  6334  02E7  0865               	movf	_countabuf+1,w
  6335  02E8  3A00               	xorlw	0	; case 0
  6336  02E9  1903               	skipnz
  6337  02EA  2AEC               	goto	l3423
  6338  02EB  2AF6               	goto	l429
  6339  02EC                     l3423:	
  6340                           
  6341                           ; Switch size 1, requested type "space"
  6342                           ; Number of cases is 10, Range of values is 0 to 9
  6343                           ; switch strategies available:
  6344                           ; Name         Instructions Cycles
  6345                           ; direct_byte           26     6 (fixed)
  6346                           ; simple_byte           31    16 (average)
  6347                           ; jumptable            260     6 (fixed)
  6348                           ;	Chosen strategy is direct_byte
  6349  02EC  0864               	movf	_countabuf,w
  6350  02ED  0084               	movwf	4
  6351  02EE  300A               	movlw	10
  6352  02EF  0204               	subwf	4,w
  6353  02F0  1803               	skipnc
  6354  02F1  2AF6               	goto	l429
  6355  02F2  3188               	movlp	high S3425
  6356  02F3  3504               	lslf	4,w
  6357  02F4  3E20               	addlw	low S3425
  6358  02F5  0082               	movwf	2
  6359  02F6                     l429:	
  6360                           
  6361                           ;calibrate_mode.c: 118: if(isEndPointTrig){
  6362  02F6  1879               	btfsc	_isEndPointTrig/(0+8),_isEndPointTrig& (0+7)
  6363                           
  6364                           ;calibrate_mode.c: 119: spi2_Send_data = 0x00;
  6365  02F7  01ED               	clrf	_spi2_Send_data
  6366                           
  6367                           ;calibrate_mode.c: 120: }
  6368                           ;calibrate_mode.c: 124: countabuf++;
  6369  02F8  3001               	movlw	1
  6370  02F9  07E4               	addwf	_countabuf,f
  6371  02FA  3000               	movlw	0
  6372  02FB  3DE5               	addwfc	_countabuf+1,f
  6373                           
  6374                           ;calibrate_mode.c: 125: if(calibdata.cargoLength <= countabuf){
  6375  02FC  0021               	movlb	1	; select bank1
  6376  02FD  0845               	movf	(_calibdata+1)^(0+128),w
  6377  02FE  0020               	movlb	0	; select bank0
  6378  02FF  0265               	subwf	_countabuf+1,w
  6379  0300  1D03               	skipz
  6380  0301  2B06               	goto	u2025
  6381  0302  0021               	movlb	1	; select bank1
  6382  0303  0844               	movf	_calibdata^(0+128),w
  6383  0304  0020               	movlb	0	; select bank0
  6384  0305  0264               	subwf	_countabuf,w
  6385  0306                     u2025:	
  6386  0306  1C03               	skipc
  6387  0307  0008               	return
  6388                           
  6389                           ;calibrate_mode.c: 126: calibdata.cargoLength = 0xFFFF;
  6390  0308  30FF               	movlw	255
  6391  0309  0021               	movlb	1	; select bank1
  6392  030A  00C4               	movwf	_calibdata^(0+128)
  6393  030B  30FF               	movlw	255
  6394  030C  00C5               	movwf	(_calibdata^(0+128)+1)
  6395                           
  6396                           ;calibrate_mode.c: 127: countabuf = 0;
  6397  030D  0020               	movlb	0	; select bank0
  6398  030E  01E4               	clrf	_countabuf
  6399  030F  01E5               	clrf	_countabuf+1
  6400  0310  0008               	return
  6401  0311                     __end_of_Calibrate_download:	
  6402                           
  6403                           	psect	swtext2
  6404  0820                     __pswtext2:	
  6405  0820                     S3425:	
  6406  0820  3182  2A0B         	ljmp	l2953
  6407  0822  3182  2A1B         	ljmp	l2959
  6408  0824  3182  2A31         	ljmp	l2961
  6409  0826  3182  2A39         	ljmp	l2963
  6410  0828  3182  2A43         	ljmp	l2965
  6411  082A  3182  2A4E         	ljmp	l2969
  6412  082C  3182  2A79         	ljmp	l2973
  6413  082E  3182  2A9A         	ljmp	l2975
  6414  0830  3182  2ABE         	ljmp	l2977
  6415  0832  3182  2AD3         	ljmp	l438
  6416                           
  6417                           	psect	text9
  6418  06D5                     __ptext9:	
  6419 ;; *************** function _isEndpoint *****************
  6420 ;; Defined at:
  6421 ;;		line 31 in file "D:/programdata/16F18346_Link_IC.X/calibrate_mode.c"
  6422 ;; Parameters:    Size  Location     Type
  6423 ;;		None
  6424 ;; Auto vars:     Size  Location     Type
  6425 ;;  spi2data        1    6[BANK0 ] unsigned char 
  6426 ;; Return value:  Size  Location     Type
  6427 ;;		None               void
  6428 ;; Registers used:
  6429 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6430 ;; Tracked objects:
  6431 ;;		On entry : 0/0
  6432 ;;		On exit  : 0/0
  6433 ;;		Unchanged: 0/0
  6434 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6435 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6436 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6437 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6438 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6439 ;;Total ram usage:        6 bytes
  6440 ;; Hardware stack levels used:    1
  6441 ;; Hardware stack levels required when called:    4
  6442 ;; This function calls:
  6443 ;;		_setSPI1sendDataManual
  6444 ;; This function is called by:
  6445 ;;		_Calibrate_download
  6446 ;; This function uses a non-reentrant model
  6447 ;;
  6448                           
  6449                           
  6450                           ;psect for function _isEndpoint
  6451  06D5                     _isEndpoint:	
  6452                           
  6453                           ;calibrate_mode.c: 32: unsigned char spi2data = 0;
  6454                           
  6455                           ;incstack = 0
  6456                           ; Regs used in _isEndpoint: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6457  06D5  0020               	movlb	0	; select bank0
  6458  06D6  01A6               	clrf	isEndpoint@spi2data
  6459                           
  6460                           ;calibrate_mode.c: 33: if(count2 > 1){
  6461  06D7  3000               	movlw	0
  6462  06D8  0269               	subwf	_count2+1,w
  6463  06D9  3002               	movlw	2
  6464  06DA  1903               	skipnz
  6465  06DB  0268               	subwf	_count2,w
  6466  06DC  1C03               	skipc
  6467  06DD  2EF2               	goto	l2859
  6468                           
  6469                           ;calibrate_mode.c: 34: spi2data = spi2_buffer_data[count2 -1];
  6470  06DE  0868               	movf	_count2,w
  6471  06DF  3EFF               	addlw	255
  6472  06E0  00A1               	movwf	??_isEndpoint
  6473  06E1  30FF               	movlw	255
  6474  06E2  3D69               	addwfc	_count2+1,w
  6475  06E3  00A2               	movwf	??_isEndpoint+1
  6476  06E4  30F0               	movlw	240
  6477  06E5  00A3               	movwf	??_isEndpoint+2
  6478  06E6  3025               	movlw	37
  6479  06E7  00A4               	movwf	??_isEndpoint+3
  6480  06E8  0821               	movf	??_isEndpoint,w
  6481  06E9  0723               	addwf	??_isEndpoint+2,w
  6482  06EA  0086               	movwf	6
  6483  06EB  0822               	movf	??_isEndpoint+1,w
  6484  06EC  3D24               	addwfc	??_isEndpoint+3,w
  6485  06ED  0087               	movwf	7
  6486  06EE  0801               	movf	1,w
  6487  06EF  00A5               	movwf	??_isEndpoint+4
  6488  06F0  0825               	movf	??_isEndpoint+4,w
  6489  06F1  2EFF               	goto	L26
  6490  06F2                     l2859:	
  6491                           ;calibrate_mode.c: 35: }else{
  6492                           
  6493                           
  6494                           ;calibrate_mode.c: 36: spi2data = spi2_buffer_data[count2];
  6495  06F2  30F0               	movlw	240
  6496  06F3  00A1               	movwf	??_isEndpoint
  6497  06F4  3025               	movlw	37
  6498  06F5  00A2               	movwf	??_isEndpoint+1
  6499  06F6  0868               	movf	_count2,w
  6500  06F7  0721               	addwf	??_isEndpoint,w
  6501  06F8  0086               	movwf	6
  6502  06F9  0869               	movf	_count2+1,w
  6503  06FA  3D22               	addwfc	??_isEndpoint+1,w
  6504  06FB  0087               	movwf	7
  6505  06FC  0801               	movf	1,w
  6506  06FD  00A3               	movwf	??_isEndpoint+2
  6507  06FE  0823               	movf	??_isEndpoint+2,w
  6508  06FF                     L26:	
  6509  06FF  00A6               	movwf	isEndpoint@spi2data
  6510                           
  6511                           ;calibrate_mode.c: 37: }
  6512                           ;calibrate_mode.c: 38: if(spi2data < 255){
  6513  0700  0A26               	incf	isEndpoint@spi2data,w
  6514  0701  1903               	btfsc	3,2
  6515  0702  2F05               	goto	l2865
  6516                           
  6517                           ;calibrate_mode.c: 39: isEndPointTrig = 0;
  6518  0703  1079               	bcf	_isEndPointTrig/(0+8),_isEndPointTrig& (0+7)
  6519                           
  6520                           ;calibrate_mode.c: 40: }else{
  6521  0704  0008               	return
  6522  0705                     l2865:	
  6523                           
  6524                           ;calibrate_mode.c: 41: setSPI1sendDataManual(0x00);
  6525  0705  3000               	movlw	0
  6526  0706  318E  26F6         	fcall	_setSPI1sendDataManual
  6527  0708  0008               	return
  6528  0709                     __end_of_isEndpoint:	
  6529                           ;calibrate_mode.c: 42: }
  6530                           ;calibrate_mode.c: 44: return isEndPointTrig;
  6531                           ;	Return value of _isEndpoint is never used
  6532                           
  6533                           
  6534                           	psect	text10
  6535  0EF6                     __ptext10:	
  6536 ;; *************** function _setSPI1sendDataManual *****************
  6537 ;; Defined at:
  6538 ;;		line 105 in file "D:/programdata/16F18346_Link_IC.X/spiControl.c"
  6539 ;; Parameters:    Size  Location     Type
  6540 ;;  data            1    wreg     unsigned char 
  6541 ;; Auto vars:     Size  Location     Type
  6542 ;;  data            1    0[BANK0 ] unsigned char 
  6543 ;; Return value:  Size  Location     Type
  6544 ;;                  1    wreg      void 
  6545 ;; Registers used:
  6546 ;;		wreg
  6547 ;; Tracked objects:
  6548 ;;		On entry : 0/0
  6549 ;;		On exit  : 0/0
  6550 ;;		Unchanged: 0/0
  6551 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6552 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6553 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6554 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6555 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6556 ;;Total ram usage:        1 bytes
  6557 ;; Hardware stack levels used:    1
  6558 ;; Hardware stack levels required when called:    3
  6559 ;; This function calls:
  6560 ;;		Nothing
  6561 ;; This function is called by:
  6562 ;;		_isEndpoint
  6563 ;; This function uses a non-reentrant model
  6564 ;;
  6565                           
  6566                           
  6567                           ;psect for function _setSPI1sendDataManual
  6568  0EF6                     _setSPI1sendDataManual:	
  6569                           
  6570                           ;incstack = 0
  6571                           ; Regs used in _setSPI1sendDataManual: [wreg]
  6572                           ;setSPI1sendDataManual@data stored from wreg
  6573  0EF6  0020               	movlb	0	; select bank0
  6574  0EF7  00A0               	movwf	setSPI1sendDataManual@data
  6575                           
  6576                           ;spiControl.c: 106: SSP1BUF = data;
  6577  0EF8  0820               	movf	setSPI1sendDataManual@data,w
  6578  0EF9  0024               	movlb	4	; select bank4
  6579  0EFA  0091               	movwf	17	;volatile
  6580  0EFB  0008               	return
  6581  0EFC                     __end_of_setSPI1sendDataManual:	
  6582                           
  6583                           	psect	text11
  6584  0311                     __ptext11:	
  6585 ;; *************** function _TransLong256To255 *****************
  6586 ;; Defined at:
  6587 ;;		line 20 in file "D:/programdata/16F18346_Link_IC.X/util.c"
  6588 ;; Parameters:    Size  Location     Type
  6589 ;;  data            4   15[BANK0 ] long 
  6590 ;; Auto vars:     Size  Location     Type
  6591 ;;  j               2   27[BANK0 ] int 
  6592 ;;  pow             4   33[BANK0 ] long 
  6593 ;;  buf             4   39[BANK0 ] long 
  6594 ;;  mod             4   29[BANK0 ] long 
  6595 ;;  TransData       4   23[BANK0 ] long 
  6596 ;;  i               2   37[BANK0 ] int 
  6597 ;; Return value:  Size  Location     Type
  6598 ;;                  4   15[BANK0 ] long 
  6599 ;; Registers used:
  6600 ;;		wreg, status,2, status,0, pclath, cstack
  6601 ;; Tracked objects:
  6602 ;;		On entry : 0/0
  6603 ;;		On exit  : 0/0
  6604 ;;		Unchanged: 0/0
  6605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6606 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6607 ;;      Locals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6608 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6609 ;;      Totals:         0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6610 ;;Total ram usage:       28 bytes
  6611 ;; Hardware stack levels used:    1
  6612 ;; Hardware stack levels required when called:    4
  6613 ;; This function calls:
  6614 ;;		___aldiv
  6615 ;;		___almod
  6616 ;;		___lmul
  6617 ;; This function is called by:
  6618 ;;		_Calibrate_download
  6619 ;;		_readCargo
  6620 ;; This function uses a non-reentrant model
  6621 ;;
  6622                           
  6623                           
  6624                           ;psect for function _TransLong256To255
  6625  0311                     _TransLong256To255:	
  6626                           
  6627                           ;util.c: 22: long buf = 0;
  6628                           
  6629                           ;incstack = 0
  6630                           ; Regs used in _TransLong256To255: [wreg+status,2+status,0+pclath+cstack]
  6631  0311  3000               	movlw	0
  6632  0312  0020               	movlb	0	; select bank0
  6633  0313  00CA               	movwf	TransLong256To255@buf+3
  6634  0314  3000               	movlw	0
  6635  0315  00C9               	movwf	TransLong256To255@buf+2
  6636  0316  3000               	movlw	0
  6637  0317  00C8               	movwf	TransLong256To255@buf+1
  6638  0318  3000               	movlw	0
  6639  0319  00C7               	movwf	TransLong256To255@buf
  6640                           
  6641                           ;util.c: 23: buf = data;
  6642  031A  0832               	movf	TransLong256To255@data+3,w
  6643  031B  00CA               	movwf	TransLong256To255@buf+3
  6644  031C  0831               	movf	TransLong256To255@data+2,w
  6645  031D  00C9               	movwf	TransLong256To255@buf+2
  6646  031E  0830               	movf	TransLong256To255@data+1,w
  6647  031F  00C8               	movwf	TransLong256To255@buf+1
  6648  0320  082F               	movf	TransLong256To255@data,w
  6649  0321  00C7               	movwf	TransLong256To255@buf
  6650                           
  6651                           ;util.c: 24: long TransData = 0;
  6652  0322  3000               	movlw	0
  6653  0323  00BA               	movwf	TransLong256To255@TransData+3
  6654  0324  3000               	movlw	0
  6655  0325  00B9               	movwf	TransLong256To255@TransData+2
  6656  0326  3000               	movlw	0
  6657  0327  00B8               	movwf	TransLong256To255@TransData+1
  6658  0328  3000               	movlw	0
  6659  0329  00B7               	movwf	TransLong256To255@TransData
  6660                           
  6661                           ;util.c: 25: long mod = 0;
  6662  032A  3000               	movlw	0
  6663  032B  00C0               	movwf	TransLong256To255@mod+3
  6664  032C  3000               	movlw	0
  6665  032D  00BF               	movwf	TransLong256To255@mod+2
  6666  032E  3000               	movlw	0
  6667  032F  00BE               	movwf	TransLong256To255@mod+1
  6668  0330  3000               	movlw	0
  6669  0331  00BD               	movwf	TransLong256To255@mod
  6670                           
  6671                           ;util.c: 26: int i = 0;
  6672  0332  01C5               	clrf	TransLong256To255@i
  6673  0333  01C6               	clrf	TransLong256To255@i+1
  6674  0334                     l2819:	
  6675                           ;util.c: 27: while(1){
  6676                           
  6677                           
  6678                           ;util.c: 28: if(buf <= 255){
  6679  0334  1BCA               	btfsc	TransLong256To255@buf+3,7
  6680  0335  2B40               	goto	l2821
  6681  0336  084A               	movf	TransLong256To255@buf+3,w
  6682  0337  1D03               	btfss	3,2
  6683  0338  2B48               	goto	l2823
  6684  0339  0849               	movf	TransLong256To255@buf+2,w
  6685  033A  1D03               	btfss	3,2
  6686  033B  2B48               	goto	l2823
  6687  033C  3001               	movlw	1
  6688  033D  0248               	subwf	TransLong256To255@buf+1,w
  6689  033E  1803               	btfsc	3,0
  6690  033F  2B48               	goto	l2823
  6691  0340                     l2821:	
  6692                           
  6693                           ;util.c: 29: mod = buf;
  6694  0340  084A               	movf	TransLong256To255@buf+3,w
  6695  0341  00C0               	movwf	TransLong256To255@mod+3
  6696  0342  0849               	movf	TransLong256To255@buf+2,w
  6697  0343  00BF               	movwf	TransLong256To255@mod+2
  6698  0344  0848               	movf	TransLong256To255@buf+1,w
  6699  0345  00BE               	movwf	TransLong256To255@mod+1
  6700  0346  0847               	movf	TransLong256To255@buf,w
  6701  0347  2B63               	goto	L27
  6702  0348                     l2823:	
  6703                           ;util.c: 30: }else{
  6704                           
  6705                           
  6706                           ;util.c: 31: mod = buf % 255;
  6707  0348  3000               	movlw	0
  6708  0349  00A3               	movwf	___almod@divisor+3
  6709  034A  3000               	movlw	0
  6710  034B  00A2               	movwf	___almod@divisor+2
  6711  034C  3000               	movlw	0
  6712  034D  00A1               	movwf	___almod@divisor+1
  6713  034E  30FF               	movlw	255
  6714  034F  00A0               	movwf	___almod@divisor
  6715  0350  084A               	movf	TransLong256To255@buf+3,w
  6716  0351  00A7               	movwf	___almod@dividend+3
  6717  0352  0849               	movf	TransLong256To255@buf+2,w
  6718  0353  00A6               	movwf	___almod@dividend+2
  6719  0354  0848               	movf	TransLong256To255@buf+1,w
  6720  0355  00A5               	movwf	___almod@dividend+1
  6721  0356  0847               	movf	TransLong256To255@buf,w
  6722  0357  00A4               	movwf	___almod@dividend
  6723  0358  3184  2479  3183   	fcall	___almod
  6724  035B  0020               	movlb	0	; select bank0
  6725  035C  0823               	movf	?___almod+3,w
  6726  035D  00C0               	movwf	TransLong256To255@mod+3
  6727  035E  0822               	movf	?___almod+2,w
  6728  035F  00BF               	movwf	TransLong256To255@mod+2
  6729  0360  0821               	movf	?___almod+1,w
  6730  0361  00BE               	movwf	TransLong256To255@mod+1
  6731  0362  0820               	movf	?___almod,w
  6732  0363                     L27:	
  6733  0363  00BD               	movwf	TransLong256To255@mod
  6734                           
  6735                           ;util.c: 32: }
  6736                           ;util.c: 33: buf = (int)(buf / 255);
  6737  0364  3000               	movlw	0
  6738  0365  00A3               	movwf	___aldiv@divisor+3
  6739  0366  3000               	movlw	0
  6740  0367  00A2               	movwf	___aldiv@divisor+2
  6741  0368  3000               	movlw	0
  6742  0369  00A1               	movwf	___aldiv@divisor+1
  6743  036A  30FF               	movlw	255
  6744  036B  00A0               	movwf	___aldiv@divisor
  6745  036C  084A               	movf	TransLong256To255@buf+3,w
  6746  036D  00A7               	movwf	___aldiv@dividend+3
  6747  036E  0849               	movf	TransLong256To255@buf+2,w
  6748  036F  00A6               	movwf	___aldiv@dividend+2
  6749  0370  0848               	movf	TransLong256To255@buf+1,w
  6750  0371  00A5               	movwf	___aldiv@dividend+1
  6751  0372  0847               	movf	TransLong256To255@buf,w
  6752  0373  00A4               	movwf	___aldiv@dividend
  6753  0374  3183  23F7  3183   	fcall	___aldiv
  6754  0377  0020               	movlb	0	; select bank0
  6755  0378  0820               	movf	?___aldiv,w
  6756  0379  00C7               	movwf	TransLong256To255@buf
  6757  037A  0821               	movf	?___aldiv+1,w
  6758  037B  00C8               	movwf	TransLong256To255@buf+1
  6759  037C  0D89               	rlf	9,f
  6760  037D  3B89               	subwfb	9,f
  6761  037E  0989               	comf	9,f
  6762  037F  00C9               	movwf	TransLong256To255@buf+2
  6763  0380  00CA               	movwf	TransLong256To255@buf+3
  6764                           
  6765                           ;util.c: 34: long pow = 1;
  6766  0381  3000               	movlw	0
  6767  0382  00C4               	movwf	TransLong256To255@pow+3
  6768  0383  3000               	movlw	0
  6769  0384  00C3               	movwf	TransLong256To255@pow+2
  6770  0385  3000               	movlw	0
  6771  0386  00C2               	movwf	TransLong256To255@pow+1
  6772  0387  3001               	movlw	1
  6773  0388  00C1               	movwf	TransLong256To255@pow
  6774                           
  6775                           ;util.c: 35: if(i > 0){
  6776  0389  0846               	movf	TransLong256To255@i+1,w
  6777  038A  3A80               	xorlw	128
  6778  038B  00B3               	movwf	??_TransLong256To255
  6779  038C  3080               	movlw	128
  6780  038D  0233               	subwf	??_TransLong256To255,w
  6781  038E  1D03               	skipz
  6782  038F  2B92               	goto	u1865
  6783  0390  3001               	movlw	1
  6784  0391  0245               	subwf	TransLong256To255@i,w
  6785  0392                     u1865:	
  6786  0392  1C03               	skipc
  6787  0393  2BC0               	goto	l2837
  6788                           
  6789                           ;util.c: 36: for(int j = 0; j < i; j++){
  6790  0394  0020               	movlb	0	; select bank0
  6791  0395  01BB               	clrf	TransLong256To255@j
  6792  0396  01BC               	clrf	TransLong256To255@j+1
  6793  0397                     l2835:	
  6794  0397  083C               	movf	TransLong256To255@j+1,w
  6795  0398  3A80               	xorlw	128
  6796  0399  00B3               	movwf	??_TransLong256To255
  6797  039A  0846               	movf	TransLong256To255@i+1,w
  6798  039B  3A80               	xorlw	128
  6799  039C  0233               	subwf	??_TransLong256To255,w
  6800  039D  1D03               	skipz
  6801  039E  2BA1               	goto	u1885
  6802  039F  0845               	movf	TransLong256To255@i,w
  6803  03A0  023B               	subwf	TransLong256To255@j,w
  6804  03A1                     u1885:	
  6805  03A1  1803               	btfsc	3,0
  6806  03A2  2BC0               	goto	l2837
  6807                           
  6808                           ;util.c: 37: pow = pow * 256;
  6809  03A3  0020               	movlb	0	; select bank0
  6810  03A4  0841               	movf	TransLong256To255@pow,w
  6811  03A5  00B3               	movwf	??_TransLong256To255
  6812  03A6  0842               	movf	TransLong256To255@pow+1,w
  6813  03A7  00B4               	movwf	??_TransLong256To255+1
  6814  03A8  0843               	movf	TransLong256To255@pow+2,w
  6815  03A9  00B5               	movwf	??_TransLong256To255+2
  6816  03AA  0844               	movf	TransLong256To255@pow+3,w
  6817  03AB  00B6               	movwf	??_TransLong256To255+3
  6818  03AC  3008               	movlw	8
  6819  03AD                     u1875:	
  6820  03AD  35B3               	lslf	??_TransLong256To255,f
  6821  03AE  0DB4               	rlf	??_TransLong256To255+1,f
  6822  03AF  0DB5               	rlf	??_TransLong256To255+2,f
  6823  03B0  0DB6               	rlf	??_TransLong256To255+3,f
  6824  03B1  0B89               	decfsz	9,f
  6825  03B2  2BAD               	goto	u1875
  6826  03B3  0836               	movf	??_TransLong256To255+3,w
  6827  03B4  00C4               	movwf	TransLong256To255@pow+3
  6828  03B5  0835               	movf	??_TransLong256To255+2,w
  6829  03B6  00C3               	movwf	TransLong256To255@pow+2
  6830  03B7  0834               	movf	??_TransLong256To255+1,w
  6831  03B8  00C2               	movwf	TransLong256To255@pow+1
  6832  03B9  0833               	movf	??_TransLong256To255,w
  6833  03BA  00C1               	movwf	TransLong256To255@pow
  6834  03BB  3001               	movlw	1
  6835  03BC  07BB               	addwf	TransLong256To255@j,f
  6836  03BD  3000               	movlw	0
  6837  03BE  3DBC               	addwfc	TransLong256To255@j+1,f
  6838  03BF  2B97               	goto	l2835
  6839  03C0                     l2837:	
  6840                           
  6841                           ;util.c: 38: }
  6842                           ;util.c: 39: }
  6843                           ;util.c: 40: TransData += mod * pow;
  6844  03C0  0020               	movlb	0	; select bank0
  6845  03C1  0840               	movf	TransLong256To255@mod+3,w
  6846  03C2  00A3               	movwf	___lmul@multiplier+3
  6847  03C3  083F               	movf	TransLong256To255@mod+2,w
  6848  03C4  00A2               	movwf	___lmul@multiplier+2
  6849  03C5  083E               	movf	TransLong256To255@mod+1,w
  6850  03C6  00A1               	movwf	___lmul@multiplier+1
  6851  03C7  083D               	movf	TransLong256To255@mod,w
  6852  03C8  00A0               	movwf	___lmul@multiplier
  6853  03C9  0844               	movf	TransLong256To255@pow+3,w
  6854  03CA  00A7               	movwf	___lmul@multiplicand+3
  6855  03CB  0843               	movf	TransLong256To255@pow+2,w
  6856  03CC  00A6               	movwf	___lmul@multiplicand+2
  6857  03CD  0842               	movf	TransLong256To255@pow+1,w
  6858  03CE  00A5               	movwf	___lmul@multiplicand+1
  6859  03CF  0841               	movf	TransLong256To255@pow,w
  6860  03D0  00A4               	movwf	___lmul@multiplicand
  6861  03D1  3187  2709  3183   	fcall	___lmul
  6862  03D4  0020               	movlb	0	; select bank0
  6863  03D5  0820               	movf	?___lmul,w
  6864  03D6  07B7               	addwf	TransLong256To255@TransData,f
  6865  03D7  0821               	movf	?___lmul+1,w
  6866  03D8  3DB8               	addwfc	TransLong256To255@TransData+1,f
  6867  03D9  0822               	movf	?___lmul+2,w
  6868  03DA  3DB9               	addwfc	TransLong256To255@TransData+2,f
  6869  03DB  0823               	movf	?___lmul+3,w
  6870  03DC  3DBA               	addwfc	TransLong256To255@TransData+3,f
  6871                           
  6872                           ;util.c: 41: if(buf <= 255){
  6873  03DD  1BCA               	btfsc	TransLong256To255@buf+3,7
  6874  03DE  2BEE               	goto	l2845
  6875  03DF  084A               	movf	TransLong256To255@buf+3,w
  6876  03E0  1D03               	btfss	3,2
  6877  03E1  2BE9               	goto	l2843
  6878  03E2  0849               	movf	TransLong256To255@buf+2,w
  6879  03E3  1D03               	btfss	3,2
  6880  03E4  2BE9               	goto	l2843
  6881  03E5  3001               	movlw	1
  6882  03E6  0248               	subwf	TransLong256To255@buf+1,w
  6883  03E7  1C03               	btfss	3,0
  6884  03E8  2BEE               	goto	l2845
  6885  03E9                     l2843:	
  6886                           ;util.c: 42: break;
  6887                           
  6888                           
  6889                           ;util.c: 43: }
  6890                           ;util.c: 44: i++;
  6891  03E9  3001               	movlw	1
  6892  03EA  07C5               	addwf	TransLong256To255@i,f
  6893  03EB  3000               	movlw	0
  6894  03EC  3DC6               	addwfc	TransLong256To255@i+1,f
  6895  03ED  2B34               	goto	l2819
  6896  03EE                     l2845:	
  6897                           
  6898                           ;util.c: 45: }
  6899                           ;util.c: 46: return TransData;
  6900  03EE  083A               	movf	TransLong256To255@TransData+3,w
  6901  03EF  00B2               	movwf	?_TransLong256To255+3
  6902  03F0  0839               	movf	TransLong256To255@TransData+2,w
  6903  03F1  00B1               	movwf	?_TransLong256To255+2
  6904  03F2  0838               	movf	TransLong256To255@TransData+1,w
  6905  03F3  00B0               	movwf	?_TransLong256To255+1
  6906  03F4  0837               	movf	TransLong256To255@TransData,w
  6907  03F5  00AF               	movwf	?_TransLong256To255
  6908  03F6  0008               	return
  6909  03F7                     __end_of_TransLong256To255:	
  6910                           
  6911                           	psect	text12
  6912  0709                     __ptext12:	
  6913 ;; *************** function ___lmul *****************
  6914 ;; Defined at:
  6915 ;;		line 15 in file "E:\microchip\xc8\v1.45\sources\common\Umul32.c"
  6916 ;; Parameters:    Size  Location     Type
  6917 ;;  multiplier      4    0[BANK0 ] unsigned long 
  6918 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  6919 ;; Auto vars:     Size  Location     Type
  6920 ;;  product         4    8[BANK0 ] unsigned long 
  6921 ;; Return value:  Size  Location     Type
  6922 ;;                  4    0[BANK0 ] unsigned long 
  6923 ;; Registers used:
  6924 ;;		wreg, status,2, status,0
  6925 ;; Tracked objects:
  6926 ;;		On entry : 0/0
  6927 ;;		On exit  : 0/0
  6928 ;;		Unchanged: 0/0
  6929 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6930 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6931 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6932 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6933 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6934 ;;Total ram usage:       12 bytes
  6935 ;; Hardware stack levels used:    1
  6936 ;; Hardware stack levels required when called:    3
  6937 ;; This function calls:
  6938 ;;		Nothing
  6939 ;; This function is called by:
  6940 ;;		_TransLong256To255
  6941 ;; This function uses a non-reentrant model
  6942 ;;
  6943                           
  6944                           
  6945                           ;psect for function ___lmul
  6946  0709                     ___lmul:	
  6947                           
  6948                           ;incstack = 0
  6949                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  6950  0709  3000               	movlw	0
  6951  070A  0020               	movlb	0	; select bank0
  6952  070B  00AB               	movwf	___lmul@product+3
  6953  070C  3000               	movlw	0
  6954  070D  00AA               	movwf	___lmul@product+2
  6955  070E  3000               	movlw	0
  6956  070F  00A9               	movwf	___lmul@product+1
  6957  0710  3000               	movlw	0
  6958  0711  00A8               	movwf	___lmul@product
  6959  0712                     l2711:	
  6960  0712  1C20               	btfss	___lmul@multiplier,0
  6961  0713  2F1C               	goto	l2715
  6962  0714  0824               	movf	___lmul@multiplicand,w
  6963  0715  07A8               	addwf	___lmul@product,f
  6964  0716  0825               	movf	___lmul@multiplicand+1,w
  6965  0717  3DA9               	addwfc	___lmul@product+1,f
  6966  0718  0826               	movf	___lmul@multiplicand+2,w
  6967  0719  3DAA               	addwfc	___lmul@product+2,f
  6968  071A  0827               	movf	___lmul@multiplicand+3,w
  6969  071B  3DAB               	addwfc	___lmul@product+3,f
  6970  071C                     l2715:	
  6971  071C  3001               	movlw	1
  6972  071D                     u1625:	
  6973  071D  35A4               	lslf	___lmul@multiplicand,f
  6974  071E  0DA5               	rlf	___lmul@multiplicand+1,f
  6975  071F  0DA6               	rlf	___lmul@multiplicand+2,f
  6976  0720  0DA7               	rlf	___lmul@multiplicand+3,f
  6977  0721  0B89               	decfsz	9,f
  6978  0722  2F1D               	goto	u1625
  6979  0723  3001               	movlw	1
  6980  0724                     u1635:	
  6981  0724  36A3               	lsrf	___lmul@multiplier+3,f
  6982  0725  0CA2               	rrf	___lmul@multiplier+2,f
  6983  0726  0CA1               	rrf	___lmul@multiplier+1,f
  6984  0727  0CA0               	rrf	___lmul@multiplier,f
  6985  0728  0B89               	decfsz	9,f
  6986  0729  2F24               	goto	u1635
  6987  072A  0823               	movf	___lmul@multiplier+3,w
  6988  072B  0422               	iorwf	___lmul@multiplier+2,w
  6989  072C  0421               	iorwf	___lmul@multiplier+1,w
  6990  072D  0420               	iorwf	___lmul@multiplier,w
  6991  072E  1D03               	skipz
  6992  072F  2F12               	goto	l2711
  6993  0730  082B               	movf	___lmul@product+3,w
  6994  0731  00A3               	movwf	?___lmul+3
  6995  0732  082A               	movf	___lmul@product+2,w
  6996  0733  00A2               	movwf	?___lmul+2
  6997  0734  0829               	movf	___lmul@product+1,w
  6998  0735  00A1               	movwf	?___lmul+1
  6999  0736  0828               	movf	___lmul@product,w
  7000  0737  00A0               	movwf	?___lmul
  7001  0738  0008               	return
  7002  0739                     __end_of___lmul:	
  7003                           
  7004                           	psect	text13
  7005  0479                     __ptext13:	
  7006 ;; *************** function ___almod *****************
  7007 ;; Defined at:
  7008 ;;		line 5 in file "E:\microchip\xc8\v1.45\sources\common\almod.c"
  7009 ;; Parameters:    Size  Location     Type
  7010 ;;  divisor         4    0[BANK0 ] long 
  7011 ;;  dividend        4    4[BANK0 ] long 
  7012 ;; Auto vars:     Size  Location     Type
  7013 ;;  sign            1   10[BANK0 ] unsigned char 
  7014 ;;  counter         1    9[BANK0 ] unsigned char 
  7015 ;; Return value:  Size  Location     Type
  7016 ;;                  4    0[BANK0 ] long 
  7017 ;; Registers used:
  7018 ;;		wreg, status,2, status,0
  7019 ;; Tracked objects:
  7020 ;;		On entry : 0/0
  7021 ;;		On exit  : 0/0
  7022 ;;		Unchanged: 0/0
  7023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7024 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7025 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7026 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7027 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7028 ;;Total ram usage:       11 bytes
  7029 ;; Hardware stack levels used:    1
  7030 ;; Hardware stack levels required when called:    3
  7031 ;; This function calls:
  7032 ;;		Nothing
  7033 ;; This function is called by:
  7034 ;;		_TransLong256To255
  7035 ;; This function uses a non-reentrant model
  7036 ;;
  7037                           
  7038                           
  7039                           ;psect for function ___almod
  7040  0479                     ___almod:	
  7041                           
  7042                           ;incstack = 0
  7043                           ; Regs used in ___almod: [wreg+status,2+status,0]
  7044  0479  0020               	movlb	0	; select bank0
  7045  047A  01AA               	clrf	___almod@sign
  7046  047B  1FA7               	btfss	___almod@dividend+3,7
  7047  047C  2C8A               	goto	l773
  7048  047D  09A4               	comf	___almod@dividend,f
  7049  047E  09A5               	comf	___almod@dividend+1,f
  7050  047F  09A6               	comf	___almod@dividend+2,f
  7051  0480  09A7               	comf	___almod@dividend+3,f
  7052  0481  0AA4               	incf	___almod@dividend,f
  7053  0482  1903               	skipnz
  7054  0483  0AA5               	incf	___almod@dividend+1,f
  7055  0484  1903               	skipnz
  7056  0485  0AA6               	incf	___almod@dividend+2,f
  7057  0486  1903               	skipnz
  7058  0487  0AA7               	incf	___almod@dividend+3,f
  7059  0488  01AA               	clrf	___almod@sign
  7060  0489  0AAA               	incf	___almod@sign,f
  7061  048A                     l773:	
  7062  048A  1FA3               	btfss	___almod@divisor+3,7
  7063  048B  2C97               	goto	l2771
  7064  048C  09A0               	comf	___almod@divisor,f
  7065  048D  09A1               	comf	___almod@divisor+1,f
  7066  048E  09A2               	comf	___almod@divisor+2,f
  7067  048F  09A3               	comf	___almod@divisor+3,f
  7068  0490  0AA0               	incf	___almod@divisor,f
  7069  0491  1903               	skipnz
  7070  0492  0AA1               	incf	___almod@divisor+1,f
  7071  0493  1903               	skipnz
  7072  0494  0AA2               	incf	___almod@divisor+2,f
  7073  0495  1903               	skipnz
  7074  0496  0AA3               	incf	___almod@divisor+3,f
  7075  0497                     l2771:	
  7076  0497  0823               	movf	___almod@divisor+3,w
  7077  0498  0422               	iorwf	___almod@divisor+2,w
  7078  0499  0421               	iorwf	___almod@divisor+1,w
  7079  049A  0420               	iorwf	___almod@divisor,w
  7080  049B  1903               	skipnz
  7081  049C  2CD0               	goto	l2787
  7082  049D  01A9               	clrf	___almod@counter
  7083  049E  0AA9               	incf	___almod@counter,f
  7084  049F                     l2777:	
  7085  049F  1BA3               	btfsc	___almod@divisor+3,7
  7086  04A0  2CAD               	goto	l2779
  7087  04A1  3001               	movlw	1
  7088  04A2                     u1785:	
  7089  04A2  35A0               	lslf	___almod@divisor,f
  7090  04A3  0DA1               	rlf	___almod@divisor+1,f
  7091  04A4  0DA2               	rlf	___almod@divisor+2,f
  7092  04A5  0DA3               	rlf	___almod@divisor+3,f
  7093  04A6  0B89               	decfsz	9,f
  7094  04A7  2CA2               	goto	u1785
  7095  04A8  3001               	movlw	1
  7096  04A9  00A8               	movwf	??___almod
  7097  04AA  0828               	movf	??___almod,w
  7098  04AB  07A9               	addwf	___almod@counter,f
  7099  04AC  2C9F               	goto	l2777
  7100  04AD                     l2779:	
  7101  04AD  0823               	movf	___almod@divisor+3,w
  7102  04AE  0227               	subwf	___almod@dividend+3,w
  7103  04AF  1D03               	skipz
  7104  04B0  2CBB               	goto	u1805
  7105  04B1  0822               	movf	___almod@divisor+2,w
  7106  04B2  0226               	subwf	___almod@dividend+2,w
  7107  04B3  1D03               	skipz
  7108  04B4  2CBB               	goto	u1805
  7109  04B5  0821               	movf	___almod@divisor+1,w
  7110  04B6  0225               	subwf	___almod@dividend+1,w
  7111  04B7  1D03               	skipz
  7112  04B8  2CBB               	goto	u1805
  7113  04B9  0820               	movf	___almod@divisor,w
  7114  04BA  0224               	subwf	___almod@dividend,w
  7115  04BB                     u1805:	
  7116  04BB  1C03               	skipc
  7117  04BC  2CC5               	goto	l2783
  7118  04BD  0820               	movf	___almod@divisor,w
  7119  04BE  02A4               	subwf	___almod@dividend,f
  7120  04BF  0821               	movf	___almod@divisor+1,w
  7121  04C0  3BA5               	subwfb	___almod@dividend+1,f
  7122  04C1  0822               	movf	___almod@divisor+2,w
  7123  04C2  3BA6               	subwfb	___almod@dividend+2,f
  7124  04C3  0823               	movf	___almod@divisor+3,w
  7125  04C4  3BA7               	subwfb	___almod@dividend+3,f
  7126  04C5                     l2783:	
  7127  04C5  3001               	movlw	1
  7128  04C6                     u1815:	
  7129  04C6  36A3               	lsrf	___almod@divisor+3,f
  7130  04C7  0CA2               	rrf	___almod@divisor+2,f
  7131  04C8  0CA1               	rrf	___almod@divisor+1,f
  7132  04C9  0CA0               	rrf	___almod@divisor,f
  7133  04CA  0B89               	decfsz	9,f
  7134  04CB  2CC6               	goto	u1815
  7135  04CC  3001               	movlw	1
  7136  04CD  02A9               	subwf	___almod@counter,f
  7137  04CE  1D03               	btfss	3,2
  7138  04CF  2CAD               	goto	l2779
  7139  04D0                     l2787:	
  7140  04D0  082A               	movf	___almod@sign,w
  7141  04D1  1903               	btfsc	3,2
  7142  04D2  2CDE               	goto	l2791
  7143  04D3  09A4               	comf	___almod@dividend,f
  7144  04D4  09A5               	comf	___almod@dividend+1,f
  7145  04D5  09A6               	comf	___almod@dividend+2,f
  7146  04D6  09A7               	comf	___almod@dividend+3,f
  7147  04D7  0AA4               	incf	___almod@dividend,f
  7148  04D8  1903               	skipnz
  7149  04D9  0AA5               	incf	___almod@dividend+1,f
  7150  04DA  1903               	skipnz
  7151  04DB  0AA6               	incf	___almod@dividend+2,f
  7152  04DC  1903               	skipnz
  7153  04DD  0AA7               	incf	___almod@dividend+3,f
  7154  04DE                     l2791:	
  7155  04DE  0827               	movf	___almod@dividend+3,w
  7156  04DF  00A3               	movwf	?___almod+3
  7157  04E0  0826               	movf	___almod@dividend+2,w
  7158  04E1  00A2               	movwf	?___almod+2
  7159  04E2  0825               	movf	___almod@dividend+1,w
  7160  04E3  00A1               	movwf	?___almod+1
  7161  04E4  0824               	movf	___almod@dividend,w
  7162  04E5  00A0               	movwf	?___almod
  7163  04E6  0008               	return
  7164  04E7                     __end_of___almod:	
  7165                           
  7166                           	psect	text14
  7167  03F7                     __ptext14:	
  7168 ;; *************** function ___aldiv *****************
  7169 ;; Defined at:
  7170 ;;		line 6 in file "E:\microchip\xc8\v1.45\sources\common\aldiv.c"
  7171 ;; Parameters:    Size  Location     Type
  7172 ;;  divisor         4    0[BANK0 ] long 
  7173 ;;  dividend        4    4[BANK0 ] long 
  7174 ;; Auto vars:     Size  Location     Type
  7175 ;;  quotient        4   11[BANK0 ] long 
  7176 ;;  sign            1   10[BANK0 ] unsigned char 
  7177 ;;  counter         1    9[BANK0 ] unsigned char 
  7178 ;; Return value:  Size  Location     Type
  7179 ;;                  4    0[BANK0 ] long 
  7180 ;; Registers used:
  7181 ;;		wreg, status,2, status,0
  7182 ;; Tracked objects:
  7183 ;;		On entry : 0/0
  7184 ;;		On exit  : 0/0
  7185 ;;		Unchanged: 0/0
  7186 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7187 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7188 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7189 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7190 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7191 ;;Total ram usage:       15 bytes
  7192 ;; Hardware stack levels used:    1
  7193 ;; Hardware stack levels required when called:    3
  7194 ;; This function calls:
  7195 ;;		Nothing
  7196 ;; This function is called by:
  7197 ;;		_TransLong256To255
  7198 ;; This function uses a non-reentrant model
  7199 ;;
  7200                           
  7201                           
  7202                           ;psect for function ___aldiv
  7203  03F7                     ___aldiv:	
  7204                           
  7205                           ;incstack = 0
  7206                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  7207  03F7  0020               	movlb	0	; select bank0
  7208  03F8  01AA               	clrf	___aldiv@sign
  7209  03F9  1FA3               	btfss	___aldiv@divisor+3,7
  7210  03FA  2C08               	goto	l760
  7211  03FB  09A0               	comf	___aldiv@divisor,f
  7212  03FC  09A1               	comf	___aldiv@divisor+1,f
  7213  03FD  09A2               	comf	___aldiv@divisor+2,f
  7214  03FE  09A3               	comf	___aldiv@divisor+3,f
  7215  03FF  0AA0               	incf	___aldiv@divisor,f
  7216  0400  1903               	skipnz
  7217  0401  0AA1               	incf	___aldiv@divisor+1,f
  7218  0402  1903               	skipnz
  7219  0403  0AA2               	incf	___aldiv@divisor+2,f
  7220  0404  1903               	skipnz
  7221  0405  0AA3               	incf	___aldiv@divisor+3,f
  7222  0406  01AA               	clrf	___aldiv@sign
  7223  0407  0AAA               	incf	___aldiv@sign,f
  7224  0408                     l760:	
  7225  0408  1FA7               	btfss	___aldiv@dividend+3,7
  7226  0409  2C19               	goto	l2733
  7227  040A  09A4               	comf	___aldiv@dividend,f
  7228  040B  09A5               	comf	___aldiv@dividend+1,f
  7229  040C  09A6               	comf	___aldiv@dividend+2,f
  7230  040D  09A7               	comf	___aldiv@dividend+3,f
  7231  040E  0AA4               	incf	___aldiv@dividend,f
  7232  040F  1903               	skipnz
  7233  0410  0AA5               	incf	___aldiv@dividend+1,f
  7234  0411  1903               	skipnz
  7235  0412  0AA6               	incf	___aldiv@dividend+2,f
  7236  0413  1903               	skipnz
  7237  0414  0AA7               	incf	___aldiv@dividend+3,f
  7238  0415  3001               	movlw	1
  7239  0416  00A8               	movwf	??___aldiv
  7240  0417  0828               	movf	??___aldiv,w
  7241  0418  06AA               	xorwf	___aldiv@sign,f
  7242  0419                     l2733:	
  7243  0419  3000               	movlw	0
  7244  041A  00AE               	movwf	___aldiv@quotient+3
  7245  041B  3000               	movlw	0
  7246  041C  00AD               	movwf	___aldiv@quotient+2
  7247  041D  3000               	movlw	0
  7248  041E  00AC               	movwf	___aldiv@quotient+1
  7249  041F  3000               	movlw	0
  7250  0420  00AB               	movwf	___aldiv@quotient
  7251  0421  0823               	movf	___aldiv@divisor+3,w
  7252  0422  0422               	iorwf	___aldiv@divisor+2,w
  7253  0423  0421               	iorwf	___aldiv@divisor+1,w
  7254  0424  0420               	iorwf	___aldiv@divisor,w
  7255  0425  1903               	skipnz
  7256  0426  2C62               	goto	l2755
  7257  0427  01A9               	clrf	___aldiv@counter
  7258  0428  0AA9               	incf	___aldiv@counter,f
  7259  0429                     l2741:	
  7260  0429  1BA3               	btfsc	___aldiv@divisor+3,7
  7261  042A  2C37               	goto	l2743
  7262  042B  3001               	movlw	1
  7263  042C                     u1685:	
  7264  042C  35A0               	lslf	___aldiv@divisor,f
  7265  042D  0DA1               	rlf	___aldiv@divisor+1,f
  7266  042E  0DA2               	rlf	___aldiv@divisor+2,f
  7267  042F  0DA3               	rlf	___aldiv@divisor+3,f
  7268  0430  0B89               	decfsz	9,f
  7269  0431  2C2C               	goto	u1685
  7270  0432  3001               	movlw	1
  7271  0433  00A8               	movwf	??___aldiv
  7272  0434  0828               	movf	??___aldiv,w
  7273  0435  07A9               	addwf	___aldiv@counter,f
  7274  0436  2C29               	goto	l2741
  7275  0437                     l2743:	
  7276  0437  3001               	movlw	1
  7277  0438                     u1705:	
  7278  0438  35AB               	lslf	___aldiv@quotient,f
  7279  0439  0DAC               	rlf	___aldiv@quotient+1,f
  7280  043A  0DAD               	rlf	___aldiv@quotient+2,f
  7281  043B  0DAE               	rlf	___aldiv@quotient+3,f
  7282  043C  0B89               	decfsz	9,f
  7283  043D  2C38               	goto	u1705
  7284  043E  0823               	movf	___aldiv@divisor+3,w
  7285  043F  0227               	subwf	___aldiv@dividend+3,w
  7286  0440  1D03               	skipz
  7287  0441  2C4C               	goto	u1715
  7288  0442  0822               	movf	___aldiv@divisor+2,w
  7289  0443  0226               	subwf	___aldiv@dividend+2,w
  7290  0444  1D03               	skipz
  7291  0445  2C4C               	goto	u1715
  7292  0446  0821               	movf	___aldiv@divisor+1,w
  7293  0447  0225               	subwf	___aldiv@dividend+1,w
  7294  0448  1D03               	skipz
  7295  0449  2C4C               	goto	u1715
  7296  044A  0820               	movf	___aldiv@divisor,w
  7297  044B  0224               	subwf	___aldiv@dividend,w
  7298  044C                     u1715:	
  7299  044C  1C03               	skipc
  7300  044D  2C57               	goto	l2751
  7301  044E  0820               	movf	___aldiv@divisor,w
  7302  044F  02A4               	subwf	___aldiv@dividend,f
  7303  0450  0821               	movf	___aldiv@divisor+1,w
  7304  0451  3BA5               	subwfb	___aldiv@dividend+1,f
  7305  0452  0822               	movf	___aldiv@divisor+2,w
  7306  0453  3BA6               	subwfb	___aldiv@dividend+2,f
  7307  0454  0823               	movf	___aldiv@divisor+3,w
  7308  0455  3BA7               	subwfb	___aldiv@dividend+3,f
  7309  0456  142B               	bsf	___aldiv@quotient,0
  7310  0457                     l2751:	
  7311  0457  3001               	movlw	1
  7312  0458                     u1725:	
  7313  0458  36A3               	lsrf	___aldiv@divisor+3,f
  7314  0459  0CA2               	rrf	___aldiv@divisor+2,f
  7315  045A  0CA1               	rrf	___aldiv@divisor+1,f
  7316  045B  0CA0               	rrf	___aldiv@divisor,f
  7317  045C  0B89               	decfsz	9,f
  7318  045D  2C58               	goto	u1725
  7319  045E  3001               	movlw	1
  7320  045F  02A9               	subwf	___aldiv@counter,f
  7321  0460  1D03               	btfss	3,2
  7322  0461  2C37               	goto	l2743
  7323  0462                     l2755:	
  7324  0462  082A               	movf	___aldiv@sign,w
  7325  0463  1903               	btfsc	3,2
  7326  0464  2C70               	goto	l2759
  7327  0465  09AB               	comf	___aldiv@quotient,f
  7328  0466  09AC               	comf	___aldiv@quotient+1,f
  7329  0467  09AD               	comf	___aldiv@quotient+2,f
  7330  0468  09AE               	comf	___aldiv@quotient+3,f
  7331  0469  0AAB               	incf	___aldiv@quotient,f
  7332  046A  1903               	skipnz
  7333  046B  0AAC               	incf	___aldiv@quotient+1,f
  7334  046C  1903               	skipnz
  7335  046D  0AAD               	incf	___aldiv@quotient+2,f
  7336  046E  1903               	skipnz
  7337  046F  0AAE               	incf	___aldiv@quotient+3,f
  7338  0470                     l2759:	
  7339  0470  082E               	movf	___aldiv@quotient+3,w
  7340  0471  00A3               	movwf	?___aldiv+3
  7341  0472  082D               	movf	___aldiv@quotient+2,w
  7342  0473  00A2               	movwf	?___aldiv+2
  7343  0474  082C               	movf	___aldiv@quotient+1,w
  7344  0475  00A1               	movwf	?___aldiv+1
  7345  0476  082B               	movf	___aldiv@quotient,w
  7346  0477  00A0               	movwf	?___aldiv
  7347  0478  0008               	return
  7348  0479                     __end_of___aldiv:	
  7349                           
  7350                           	psect	text15
  7351  0792                     __ptext15:	
  7352 ;; *************** function _InitCalibrate *****************
  7353 ;; Defined at:
  7354 ;;		line 53 in file "D:/programdata/16F18346_Link_IC.X/calibrate_mode.c"
  7355 ;; Parameters:    Size  Location     Type
  7356 ;;		None
  7357 ;; Auto vars:     Size  Location     Type
  7358 ;;  cargoData      16   18[BANK0 ] struct .
  7359 ;; Return value:  Size  Location     Type
  7360 ;;                  1    wreg      void 
  7361 ;; Registers used:
  7362 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7363 ;; Tracked objects:
  7364 ;;		On entry : 0/0
  7365 ;;		On exit  : 0/0
  7366 ;;		Unchanged: 0/0
  7367 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7368 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7369 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7370 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7371 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7372 ;;Total ram usage:       17 bytes
  7373 ;; Hardware stack levels used:    1
  7374 ;; Hardware stack levels required when called:    4
  7375 ;; This function calls:
  7376 ;;		_getCargoData
  7377 ;; This function is called by:
  7378 ;;		_main
  7379 ;;		_Calibrate_download
  7380 ;; This function uses a non-reentrant model
  7381 ;;
  7382                           
  7383                           
  7384                           ;psect for function _InitCalibrate
  7385  0792                     _InitCalibrate:	
  7386                           
  7387                           ;calibrate_mode.c: 54: isEndPointTrig = 1;
  7388                           
  7389                           ;incstack = 0
  7390                           ; Regs used in _InitCalibrate: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7391  0792  1479               	bsf	_isEndPointTrig/(0+8),_isEndPointTrig& (0+7)
  7392                           
  7393                           ;calibrate_mode.c: 55: calibdata.cargoLength = 0xFFFF;
  7394  0793  30FF               	movlw	255
  7395  0794  0021               	movlb	1	; select bank1
  7396  0795  00C4               	movwf	_calibdata^(0+128)
  7397  0796  30FF               	movlw	255
  7398  0797  00C5               	movwf	(_calibdata^(0+128)+1)
  7399                           
  7400                           ;calibrate_mode.c: 56: calibdata.index = 0x00;
  7401  0798  01C7               	clrf	(_calibdata^(0+128)+3)
  7402                           
  7403                           ;calibrate_mode.c: 57: calibdata.command =0x00;
  7404  0799  01C6               	clrf	(_calibdata^(0+128)+2)
  7405                           
  7406                           ;calibrate_mode.c: 58: calibdata.WorkingCount = 0;
  7407  079A  3000               	movlw	0
  7408  079B  00CB               	movwf	((_calibdata+3)^(0+128)+4)
  7409  079C  3000               	movlw	0
  7410  079D  00CA               	movwf	((_calibdata+2)^(0+128)+4)
  7411  079E  3000               	movlw	0
  7412  079F  00C9               	movwf	((_calibdata+1)^(0+128)+4)
  7413  07A0  3000               	movlw	0
  7414  07A1  00C8               	movwf	(_calibdata^(0+128)+4)
  7415                           
  7416                           ;calibrate_mode.c: 59: CargoData cargoData = getCargoData();
  7417  07A2  318F  2763  3187   	fcall	_getCargoData
  7418  07A5  0020               	movlb	0	; select bank0
  7419  07A6  3020               	movlw	low ?_getCargoData
  7420  07A7  0086               	movwf	6
  7421  07A8  3000               	movlw	high ?_getCargoData
  7422  07A9  0087               	movwf	7
  7423  07AA  3032               	movlw	low InitCalibrate@cargoData
  7424  07AB  0084               	movwf	4
  7425  07AC  3000               	movlw	high InitCalibrate@cargoData
  7426  07AD  0085               	movwf	5
  7427  07AE  3010               	movlw	16
  7428  07AF  00B1               	movwf	??_InitCalibrate
  7429  07B0                     u1840:	
  7430  07B0  0016               	moviw fsr1++
  7431  07B1  001A               	movwi fsr0++
  7432  07B2  0BB1               	decfsz	??_InitCalibrate,f
  7433  07B3  2FB0               	goto	u1840
  7434                           
  7435                           ;calibrate_mode.c: 60: cargoData.linkAngleTo = 0;
  7436  07B4  01B7               	clrf	InitCalibrate@cargoData+5
  7437  07B5  01B8               	clrf	InitCalibrate@cargoData+6
  7438                           
  7439                           ;calibrate_mode.c: 61: linkInfo.endpoint = 0;
  7440  07B6  0021               	movlb	1	; select bank1
  7441  07B7  01D2               	clrf	(_linkInfo^(0+128)+5)
  7442                           
  7443                           ;calibrate_mode.c: 62: linkInfo.My_address = 0;
  7444  07B8  01CD               	clrf	_linkInfo^(0+128)
  7445                           
  7446                           ;calibrate_mode.c: 63: countabuf = 0;
  7447  07B9  0020               	movlb	0	; select bank0
  7448  07BA  01E4               	clrf	_countabuf
  7449  07BB  01E5               	clrf	_countabuf+1
  7450  07BC  0008               	return
  7451  07BD                     __end_of_InitCalibrate:	
  7452                           
  7453                           	psect	text16
  7454  0F63                     __ptext16:	
  7455 ;; *************** function _getCargoData *****************
  7456 ;; Defined at:
  7457 ;;		line 8 in file "struct.c"
  7458 ;; Parameters:    Size  Location     Type
  7459 ;;		None
  7460 ;; Auto vars:     Size  Location     Type
  7461 ;;		None
  7462 ;; Return value:  Size  Location     Type
  7463 ;;                  16    0[BANK0 ] struct .
  7464 ;; Registers used:
  7465 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  7466 ;; Tracked objects:
  7467 ;;		On entry : 0/0
  7468 ;;		On exit  : 0/0
  7469 ;;		Unchanged: 0/0
  7470 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7471 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7472 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7473 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7474 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7475 ;;Total ram usage:       17 bytes
  7476 ;; Hardware stack levels used:    1
  7477 ;; Hardware stack levels required when called:    3
  7478 ;; This function calls:
  7479 ;;		Nothing
  7480 ;; This function is called by:
  7481 ;;		_InitCalibrate
  7482 ;;		_readCargo
  7483 ;;		_setCargo_Angle
  7484 ;; This function uses a non-reentrant model
  7485 ;;
  7486                           
  7487                           
  7488                           ;psect for function _getCargoData
  7489  0F63                     _getCargoData:	
  7490                           
  7491                           ;struct.c: 9: return cargoData;
  7492                           
  7493                           ;incstack = 0
  7494                           ; Regs used in _getCargoData: [wreg-fsr1h+status,2+status,0]
  7495  0F63  3052               	movlw	low _cargoData
  7496  0F64  0086               	movwf	6
  7497  0F65  3000               	movlw	high _cargoData
  7498  0F66  0087               	movwf	7
  7499  0F67  3020               	movlw	low ?_getCargoData
  7500  0F68  0084               	movwf	4
  7501  0F69  3000               	movlw	high ?_getCargoData
  7502  0F6A  0085               	movwf	5
  7503  0F6B  3010               	movlw	16
  7504  0F6C  0020               	movlb	0	; select bank0
  7505  0F6D  00B0               	movwf	??_getCargoData
  7506  0F6E                     u1600:	
  7507  0F6E  0016               	moviw fsr1++
  7508  0F6F  001A               	movwi fsr0++
  7509  0F70  0BB0               	decfsz	??_getCargoData,f
  7510  0F71  2F6E               	goto	u1600
  7511  0F72  0008               	return
  7512  0F73                     __end_of_getCargoData:	
  7513                           
  7514                           	psect	text17
  7515  0654                     __ptext17:	
  7516 ;; *************** function _read_train *****************
  7517 ;; Defined at:
  7518 ;;		line 198 in file "D:/programdata/16F18346_Link_IC.X/main.c"
  7519 ;; Parameters:    Size  Location     Type
  7520 ;;		None
  7521 ;; Auto vars:     Size  Location     Type
  7522 ;;  bufint          2    2[BANK0 ] unsigned int 
  7523 ;; Return value:  Size  Location     Type
  7524 ;;                  1    wreg      void 
  7525 ;; Registers used:
  7526 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  7527 ;; Tracked objects:
  7528 ;;		On entry : 0/0
  7529 ;;		On exit  : 0/0
  7530 ;;		Unchanged: 0/0
  7531 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7532 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7533 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7534 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7535 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7536 ;;Total ram usage:        4 bytes
  7537 ;; Hardware stack levels used:    1
  7538 ;; Hardware stack levels required when called:    3
  7539 ;; This function calls:
  7540 ;;		Nothing
  7541 ;; This function is called by:
  7542 ;;		_main
  7543 ;; This function uses a non-reentrant model
  7544 ;;
  7545                           
  7546                           
  7547                           ;psect for function _read_train
  7548  0654                     _read_train:	
  7549                           
  7550                           ;main.c: 199: unsigned int bufint = spi1_Read_data;
  7551                           
  7552                           ;incstack = 0
  7553                           ; Regs used in _read_train: [wreg-fsr0h+status,2+status,0]
  7554  0654  087A               	movf	_spi1_Read_data,w
  7555  0655  0020               	movlb	0	; select bank0
  7556  0656  00A0               	movwf	??_read_train
  7557  0657  01A1               	clrf	??_read_train+1
  7558  0658  0820               	movf	??_read_train,w
  7559  0659  00A2               	movwf	read_train@bufint
  7560  065A  0821               	movf	??_read_train+1,w
  7561  065B  00A3               	movwf	read_train@bufint+1
  7562                           
  7563                           ;main.c: 200: switch(trainPos){
  7564  065C  2E85               	goto	l3227
  7565  065D                     l3217:	
  7566                           ;main.c: 201: case 1:
  7567                           
  7568                           
  7569                           ;main.c: 202: st_dataLength = (bufint << 8 | 0x00FF);
  7570  065D  0020               	movlb	0	; select bank0
  7571  065E  0822               	movf	read_train@bufint,w
  7572  065F  00A1               	movwf	??_read_train+1
  7573  0660  01A0               	clrf	??_read_train
  7574  0661  30FF               	movlw	255
  7575  0662  0420               	iorwf	??_read_train,w
  7576  0663  0021               	movlb	1	; select bank1
  7577  0664  00ED               	movwf	_st_dataLength^(0+128)
  7578  0665  3000               	movlw	0
  7579  0666  0020               	movlb	0	; select bank0
  7580  0667  0421               	iorwf	??_read_train+1,w
  7581  0668  0021               	movlb	1	; select bank1
  7582  0669  00EE               	movwf	(_st_dataLength+1)^(0+128)
  7583                           
  7584                           ;main.c: 203: break;
  7585  066A  0008               	return
  7586  066B                     l3219:	
  7587                           ;main.c: 204: case 2:
  7588                           
  7589                           
  7590                           ;main.c: 205: st_dataLength = st_dataLength & (bufint | 0xFF00);
  7591  066B  3000               	movlw	0
  7592  066C  0020               	movlb	0	; select bank0
  7593  066D  0422               	iorwf	read_train@bufint,w
  7594  066E  00A0               	movwf	??_read_train
  7595  066F  30FF               	movlw	255
  7596  0670  0423               	iorwf	read_train@bufint+1,w
  7597  0671  00A1               	movwf	??_read_train+1
  7598  0672  0021               	movlb	1	; select bank1
  7599  0673  086D               	movf	_st_dataLength^(0+128),w
  7600  0674  0020               	movlb	0	; select bank0
  7601  0675  0520               	andwf	??_read_train,w
  7602  0676  0021               	movlb	1	; select bank1
  7603  0677  00ED               	movwf	_st_dataLength^(0+128)
  7604  0678  086E               	movf	(_st_dataLength+1)^(0+128),w
  7605  0679  0020               	movlb	0	; select bank0
  7606  067A  0521               	andwf	??_read_train+1,w
  7607  067B  0021               	movlb	1	; select bank1
  7608  067C  00EE               	movwf	(_st_dataLength+1)^(0+128)
  7609                           
  7610                           ;main.c: 206: break;
  7611  067D  0008               	return
  7612  067E                     l3221:	
  7613                           ;main.c: 207: case 3:
  7614                           
  7615                           
  7616                           ;main.c: 208: st_type = spi1_Read_data;
  7617  067E  087A               	movf	_spi1_Read_data,w
  7618  067F  0020               	movlb	0	; select bank0
  7619  0680  00A0               	movwf	??_read_train
  7620  0681  0820               	movf	??_read_train,w
  7621  0682  00EC               	movwf	_st_type
  7622                           
  7623                           ;main.c: 209: isreadTrain = 1;
  7624  0683  1770               	bsf	_isreadTrain/(0+8),_isreadTrain& (0+7)
  7625                           
  7626                           ;main.c: 213: }
  7627                           
  7628                           ;main.c: 212: break;
  7629                           
  7630                           ;main.c: 211: default :
  7631                           
  7632                           ;main.c: 210: break;
  7633  0684  0008               	return
  7634  0685                     l3227:	
  7635                           
  7636                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7637                           ; Switch size 1, requested type "space"
  7638                           ; Number of cases is 1, Range of values is 0 to 0
  7639                           ; switch strategies available:
  7640                           ; Name         Instructions Cycles
  7641                           ; simple_byte            4     3 (average)
  7642                           ; direct_byte            8     6 (fixed)
  7643                           ; jumptable            260     6 (fixed)
  7644                           ;	Chosen strategy is simple_byte
  7645  0685  0021               	movlb	1	; select bank1
  7646  0686  0866               	movf	(_trainPos+1)^(0+128),w
  7647  0687  3A00               	xorlw	0	; case 0
  7648  0688  1903               	skipnz
  7649  0689  2E8B               	goto	l3427
  7650  068A  2E96               	goto	l168
  7651  068B                     l3427:	
  7652                           
  7653                           ; Switch size 1, requested type "space"
  7654                           ; Number of cases is 3, Range of values is 1 to 3
  7655                           ; switch strategies available:
  7656                           ; Name         Instructions Cycles
  7657                           ; simple_byte           10     6 (average)
  7658                           ; direct_byte           15     9 (fixed)
  7659                           ; jumptable            263     9 (fixed)
  7660                           ;	Chosen strategy is simple_byte
  7661  068B  0865               	movf	_trainPos^(0+128),w
  7662  068C  3A01               	xorlw	1	; case 1
  7663  068D  1903               	skipnz
  7664  068E  2E5D               	goto	l3217
  7665  068F  3A03               	xorlw	3	; case 2
  7666  0690  1903               	skipnz
  7667  0691  2E6B               	goto	l3219
  7668  0692  3A01               	xorlw	1	; case 3
  7669  0693  1903               	skipnz
  7670  0694  2E7E               	goto	l3221
  7671  0695  2E96               	goto	l168
  7672  0696                     l168:	
  7673  0696  0008               	return
  7674  0697                     __end_of_read_train:	
  7675                           
  7676                           	psect	text18
  7677  0F56                     __ptext18:	
  7678 ;; *************** function _isSPI1read *****************
  7679 ;; Defined at:
  7680 ;;		line 67 in file "D:/programdata/16F18346_Link_IC.X/spiControl.c"
  7681 ;; Parameters:    Size  Location     Type
  7682 ;;		None
  7683 ;; Auto vars:     Size  Location     Type
  7684 ;;		None
  7685 ;; Return value:  Size  Location     Type
  7686 ;;		None               void
  7687 ;; Registers used:
  7688 ;;		wreg, status,2, status,0
  7689 ;; Tracked objects:
  7690 ;;		On entry : 0/0
  7691 ;;		On exit  : 0/0
  7692 ;;		Unchanged: 0/0
  7693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7694 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7695 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7697 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7698 ;;Total ram usage:        0 bytes
  7699 ;; Hardware stack levels used:    1
  7700 ;; Hardware stack levels required when called:    3
  7701 ;; This function calls:
  7702 ;;		Nothing
  7703 ;; This function is called by:
  7704 ;;		_main
  7705 ;; This function uses a non-reentrant model
  7706 ;;
  7707                           
  7708                           
  7709                           ;psect for function _isSPI1read
  7710  0F56                     _isSPI1read:	
  7711                           
  7712                           ;spiControl.c: 68: if(read_count1 == count1){
  7713                           
  7714                           ;incstack = 0
  7715                           ; Regs used in _isSPI1read: [wreg+status,2+status,0]
  7716  0F56  0020               	movlb	0	; select bank0
  7717  0F57  086B               	movf	_count1+1,w
  7718  0F58  0667               	xorwf	_read_count1+1,w
  7719  0F59  1D03               	skipz
  7720  0F5A  2F5D               	goto	u2135
  7721  0F5B  086A               	movf	_count1,w
  7722  0F5C  0666               	xorwf	_read_count1,w
  7723  0F5D                     u2135:	
  7724  0F5D  1D03               	skipz
  7725  0F5E  2F61               	goto	l3183
  7726                           
  7727                           ;spiControl.c: 69: return 1;
  7728  0F5F  1403               	setc
  7729                           
  7730                           ;spiControl.c: 70: }else{
  7731  0F60  0008               	return
  7732  0F61                     l3183:	
  7733                           
  7734                           ;spiControl.c: 71: return 0;
  7735  0F61  1003               	clrc
  7736  0F62  0008               	return
  7737  0F63                     __end_of_isSPI1read:	
  7738                           
  7739                           	psect	text19
  7740  0EFC                     __ptext19:	
  7741 ;; *************** function _io_init *****************
  7742 ;; Defined at:
  7743 ;;		line 128 in file "D:/programdata/16F18346_Link_IC.X/main.c"
  7744 ;; Parameters:    Size  Location     Type
  7745 ;;		None
  7746 ;; Auto vars:     Size  Location     Type
  7747 ;;		None
  7748 ;; Return value:  Size  Location     Type
  7749 ;;                  1    wreg      void 
  7750 ;; Registers used:
  7751 ;;		None
  7752 ;; Tracked objects:
  7753 ;;		On entry : 0/0
  7754 ;;		On exit  : 0/0
  7755 ;;		Unchanged: 0/0
  7756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7757 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7758 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7760 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7761 ;;Total ram usage:        0 bytes
  7762 ;; Hardware stack levels used:    1
  7763 ;; Hardware stack levels required when called:    3
  7764 ;; This function calls:
  7765 ;;		Nothing
  7766 ;; This function is called by:
  7767 ;;		_main
  7768 ;; This function uses a non-reentrant model
  7769 ;;
  7770                           
  7771                           
  7772                           ;psect for function _io_init
  7773  0EFC                     _io_init:	
  7774                           
  7775                           ;main.c: 129: PIE0bits.IOCIE = 1;
  7776                           
  7777                           ;incstack = 0
  7778                           ; Regs used in _io_init: []
  7779  0EFC  0021               	movlb	1	; select bank1
  7780  0EFD  1610               	bsf	16,4	;volatile
  7781                           
  7782                           ;main.c: 130: IOCAPbits.IOCAP3 = 1;
  7783  0EFE  0027               	movlb	7	; select bank7
  7784  0EFF  1591               	bsf	17,3	;volatile
  7785                           
  7786                           ;main.c: 131: IOCANbits.IOCAN3 = 1;
  7787  0F00  1592               	bsf	18,3	;volatile
  7788                           
  7789                           ;main.c: 132: PIE0bits.INTE = 1;
  7790  0F01  0021               	movlb	1	; select bank1
  7791  0F02  1410               	bsf	16,0	;volatile
  7792                           
  7793                           ;main.c: 133: INTCONbits.INTEDG = 1;
  7794  0F03  140B               	bsf	11,0	;volatile
  7795  0F04  0008               	return
  7796  0F05                     __end_of_io_init:	
  7797                           
  7798                           	psect	text20
  7799  060F                     __ptext20:	
  7800 ;; *************** function _initTrain *****************
  7801 ;; Defined at:
  7802 ;;		line 136 in file "D:/programdata/16F18346_Link_IC.X/main.c"
  7803 ;; Parameters:    Size  Location     Type
  7804 ;;		None
  7805 ;; Auto vars:     Size  Location     Type
  7806 ;;		None
  7807 ;; Return value:  Size  Location     Type
  7808 ;;                  1    wreg      void 
  7809 ;; Registers used:
  7810 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7811 ;; Tracked objects:
  7812 ;;		On entry : 0/0
  7813 ;;		On exit  : 0/0
  7814 ;;		Unchanged: 0/0
  7815 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7816 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7817 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7818 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7819 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7820 ;;Total ram usage:        3 bytes
  7821 ;; Hardware stack levels used:    1
  7822 ;; Hardware stack levels required when called:    5
  7823 ;; This function calls:
  7824 ;;		_isTrainSt
  7825 ;;		_resetTrainData
  7826 ;; This function is called by:
  7827 ;;		_main
  7828 ;; This function uses a non-reentrant model
  7829 ;;
  7830                           
  7831                           
  7832                           ;psect for function _initTrain
  7833  060F                     _initTrain:	
  7834                           
  7835                           ;main.c: 137: spi1_Read_data = spi1_buffer_data[read_count1];
  7836                           
  7837                           ;incstack = 0
  7838                           ; Regs used in _initTrain: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7839  060F  30F0               	movlw	240
  7840  0610  0020               	movlb	0	; select bank0
  7841  0611  00AB               	movwf	??_initTrain
  7842  0612  3026               	movlw	38
  7843  0613  00AC               	movwf	??_initTrain+1
  7844  0614  0866               	movf	_read_count1,w
  7845  0615  072B               	addwf	??_initTrain,w
  7846  0616  0086               	movwf	6
  7847  0617  0867               	movf	_read_count1+1,w
  7848  0618  3D2C               	addwfc	??_initTrain+1,w
  7849  0619  0087               	movwf	7
  7850  061A  0801               	movf	1,w
  7851  061B  00AD               	movwf	??_initTrain+2
  7852  061C  082D               	movf	??_initTrain+2,w
  7853  061D  00FA               	movwf	_spi1_Read_data
  7854                           
  7855                           ;main.c: 138: spi2_Send_data = spi1_Read_data;
  7856  061E  087A               	movf	_spi1_Read_data,w
  7857  061F  00AB               	movwf	??_initTrain
  7858  0620  082B               	movf	??_initTrain,w
  7859  0621  00ED               	movwf	_spi2_Send_data
  7860                           
  7861                           ;main.c: 139: read_count1++;
  7862  0622  3001               	movlw	1
  7863  0623  07E6               	addwf	_read_count1,f
  7864  0624  3000               	movlw	0
  7865  0625  3DE7               	addwfc	_read_count1+1,f
  7866                           
  7867                           ;main.c: 140: if(read_count1 == 256){
  7868  0626  0367               	decf	_read_count1+1,w
  7869  0627  0466               	iorwf	_read_count1,w
  7870  0628  1D03               	btfss	3,2
  7871  0629  2E2C               	goto	l3135
  7872                           
  7873                           ;main.c: 141: read_count1 = 0;
  7874  062A  01E6               	clrf	_read_count1
  7875  062B  01E7               	clrf	_read_count1+1
  7876  062C                     l3135:	
  7877                           
  7878                           ;main.c: 142: }
  7879                           ;main.c: 143: if(isTrainSt(spi1_Read_data)){
  7880  062C  087A               	movf	_spi1_Read_data,w
  7881  062D  3185  25C1  3186   	fcall	_isTrainSt
  7882  0630  1C03               	btfss	3,0
  7883  0631  2E3D               	goto	l3145
  7884                           
  7885                           ;main.c: 144: trainPos = 0;
  7886  0632  0021               	movlb	1	; select bank1
  7887  0633  01E5               	clrf	_trainPos^(0+128)
  7888  0634  01E6               	clrf	(_trainPos+1)^(0+128)
  7889                           
  7890                           ;main.c: 145: resetTrainData();
  7891  0635  318F  2705  3186   	fcall	_resetTrainData
  7892                           
  7893                           ;main.c: 146: isreadTrain = 0;
  7894  0638  1370               	bcf	_isreadTrain/(0+8),_isreadTrain& (0+7)
  7895                           
  7896                           ;main.c: 147: countabuf = 0;
  7897  0639  0020               	movlb	0	; select bank0
  7898  063A  01E4               	clrf	_countabuf
  7899  063B  01E5               	clrf	_countabuf+1
  7900                           
  7901                           ;main.c: 148: }else{
  7902  063C  2E42               	goto	l134
  7903  063D                     l3145:	
  7904                           
  7905                           ;main.c: 149: trainPos++;
  7906  063D  3001               	movlw	1
  7907  063E  0021               	movlb	1	; select bank1
  7908  063F  07E5               	addwf	_trainPos^(0+128),f
  7909  0640  3000               	movlw	0
  7910  0641  3DE6               	addwfc	(_trainPos+1)^(0+128),f
  7911  0642                     l134:	
  7912                           
  7913                           ;main.c: 150: }
  7914                           ;main.c: 151: if(st_dataLength < trainPos){
  7915  0642  0021               	movlb	1	; select bank1
  7916  0643  0866               	movf	(_trainPos+1)^(0+128),w
  7917  0644  026E               	subwf	(_st_dataLength+1)^(0+128),w
  7918  0645  1D03               	skipz
  7919  0646  2E49               	goto	u2125
  7920  0647  0865               	movf	_trainPos^(0+128),w
  7921  0648  026D               	subwf	_st_dataLength^(0+128),w
  7922  0649                     u2125:	
  7923  0649  1803               	skipnc
  7924  064A  0008               	return
  7925                           
  7926                           ;main.c: 152: trainPos = 0;
  7927  064B  01E5               	clrf	_trainPos^(0+128)
  7928  064C  01E6               	clrf	(_trainPos+1)^(0+128)
  7929                           
  7930                           ;main.c: 153: resetTrainData();
  7931  064D  318F  2705         	fcall	_resetTrainData
  7932                           
  7933                           ;main.c: 154: isreadTrain = 0;
  7934  064F  1370               	bcf	_isreadTrain/(0+8),_isreadTrain& (0+7)
  7935                           
  7936                           ;main.c: 155: countabuf = 0;
  7937  0650  0020               	movlb	0	; select bank0
  7938  0651  01E4               	clrf	_countabuf
  7939  0652  01E5               	clrf	_countabuf+1
  7940  0653  0008               	return
  7941  0654                     __end_of_initTrain:	
  7942                           
  7943                           	psect	text21
  7944  0F05                     __ptext21:	
  7945 ;; *************** function _resetTrainData *****************
  7946 ;; Defined at:
  7947 ;;		line 180 in file "D:/programdata/16F18346_Link_IC.X/main.c"
  7948 ;; Parameters:    Size  Location     Type
  7949 ;;		None
  7950 ;; Auto vars:     Size  Location     Type
  7951 ;;		None
  7952 ;; Return value:  Size  Location     Type
  7953 ;;                  1    wreg      void 
  7954 ;; Registers used:
  7955 ;;		wreg, status,2, status,0, pclath, cstack
  7956 ;; Tracked objects:
  7957 ;;		On entry : 0/0
  7958 ;;		On exit  : 0/0
  7959 ;;		Unchanged: 0/0
  7960 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7961 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7962 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7963 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7964 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7965 ;;Total ram usage:        0 bytes
  7966 ;; Hardware stack levels used:    1
  7967 ;; Hardware stack levels required when called:    4
  7968 ;; This function calls:
  7969 ;;		_restartCargo
  7970 ;; This function is called by:
  7971 ;;		_initTrain
  7972 ;; This function uses a non-reentrant model
  7973 ;;
  7974                           
  7975                           
  7976                           ;psect for function _resetTrainData
  7977  0F05                     _resetTrainData:	
  7978                           
  7979                           ;main.c: 181: st_dataLength = 0xFFFF;
  7980                           
  7981                           ;incstack = 0
  7982                           ; Regs used in _resetTrainData: [wreg+status,2+status,0+pclath+cstack]
  7983  0F05  30FF               	movlw	255
  7984  0F06  0021               	movlb	1	; select bank1
  7985  0F07  00ED               	movwf	_st_dataLength^(0+128)
  7986  0F08  30FF               	movlw	255
  7987  0F09  00EE               	movwf	(_st_dataLength^(0+128)+1)
  7988                           
  7989                           ;main.c: 182: st_type = 0;
  7990  0F0A  0020               	movlb	0	; select bank0
  7991  0F0B  01EC               	clrf	_st_type
  7992                           
  7993                           ;main.c: 183: restartCargo();
  7994  0F0C  318E  26EB         	fcall	_restartCargo
  7995  0F0E  0008               	return
  7996  0F0F                     __end_of_resetTrainData:	
  7997                           
  7998                           	psect	text22
  7999  0EEB                     __ptext22:	
  8000 ;; *************** function _restartCargo *****************
  8001 ;; Defined at:
  8002 ;;		line 36 in file "struct.c"
  8003 ;; Parameters:    Size  Location     Type
  8004 ;;		None
  8005 ;; Auto vars:     Size  Location     Type
  8006 ;;		None
  8007 ;; Return value:  Size  Location     Type
  8008 ;;                  1    wreg      void 
  8009 ;; Registers used:
  8010 ;;		status,2
  8011 ;; Tracked objects:
  8012 ;;		On entry : 0/0
  8013 ;;		On exit  : 0/0
  8014 ;;		Unchanged: 0/0
  8015 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8016 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8017 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8019 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8020 ;;Total ram usage:        0 bytes
  8021 ;; Hardware stack levels used:    1
  8022 ;; Hardware stack levels required when called:    3
  8023 ;; This function calls:
  8024 ;;		Nothing
  8025 ;; This function is called by:
  8026 ;;		_resetTrainData
  8027 ;;		_readCargo
  8028 ;; This function uses a non-reentrant model
  8029 ;;
  8030                           
  8031                           
  8032                           ;psect for function _restartCargo
  8033  0EEB                     _restartCargo:	
  8034                           
  8035                           ;struct.c: 37: cargoData.address = 0;
  8036                           
  8037                           ;incstack = 0
  8038                           ; Regs used in _restartCargo: [status,2]
  8039  0EEB  0020               	movlb	0	; select bank0
  8040  0EEC  01D6               	clrf	_cargoData+4
  8041                           
  8042                           ;struct.c: 38: cargoData.command = 0;
  8043  0EED  01D4               	clrf	_cargoData+2
  8044                           
  8045                           ;struct.c: 39: cargoData.index = 0;
  8046  0EEE  01D5               	clrf	_cargoData+3
  8047  0EEF  0008               	return
  8048  0EF0                     __end_of_restartCargo:	
  8049                           
  8050                           	psect	text23
  8051  05C1                     __ptext23:	
  8052 ;; *************** function _isTrainSt *****************
  8053 ;; Defined at:
  8054 ;;		line 186 in file "D:/programdata/16F18346_Link_IC.X/main.c"
  8055 ;; Parameters:    Size  Location     Type
  8056 ;;  buf             1    wreg     unsigned char 
  8057 ;; Auto vars:     Size  Location     Type
  8058 ;;  buf             1   10[BANK0 ] unsigned char 
  8059 ;; Return value:  Size  Location     Type
  8060 ;;		None               void
  8061 ;; Registers used:
  8062 ;;		wreg, status,2, status,0
  8063 ;; Tracked objects:
  8064 ;;		On entry : 0/0
  8065 ;;		On exit  : 0/0
  8066 ;;		Unchanged: 0/0
  8067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8068 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8069 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8070 ;;      Temps:          0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8071 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8072 ;;Total ram usage:       11 bytes
  8073 ;; Hardware stack levels used:    1
  8074 ;; Hardware stack levels required when called:    3
  8075 ;; This function calls:
  8076 ;;		Nothing
  8077 ;; This function is called by:
  8078 ;;		_initTrain
  8079 ;; This function uses a non-reentrant model
  8080 ;;
  8081                           
  8082                           
  8083                           ;psect for function _isTrainSt
  8084  05C1                     _isTrainSt:	
  8085                           
  8086                           ;incstack = 0
  8087                           ; Regs used in _isTrainSt: [wreg+status,2+status,0]
  8088                           ;isTrainSt@buf stored from wreg
  8089  05C1  0020               	movlb	0	; select bank0
  8090  05C2  00AA               	movwf	isTrainSt@buf
  8091                           
  8092                           ;main.c: 187: startTrainBytes = startTrainBytes << 8 | (buf +SPI_OFFSET_BYTE);
  8093  05C3  082A               	movf	isTrainSt@buf,w
  8094  05C4  076E               	addwf	_SPI_OFFSET_BYTE,w
  8095  05C5  00A0               	movwf	??_isTrainSt
  8096  05C6  01A1               	clrf	??_isTrainSt+1
  8097  05C7  0DA1               	rlf	??_isTrainSt+1,f
  8098  05C8  0820               	movf	??_isTrainSt,w
  8099  05C9  00A2               	movwf	??_isTrainSt+2
  8100  05CA  0821               	movf	??_isTrainSt+1,w
  8101  05CB  00A3               	movwf	??_isTrainSt+3
  8102  05CC  3000               	movlw	0
  8103  05CD  1BA3               	btfsc	??_isTrainSt+3,7
  8104  05CE  30FF               	movlw	255
  8105  05CF  00A4               	movwf	??_isTrainSt+4
  8106  05D0  00A5               	movwf	??_isTrainSt+5
  8107  05D1  0021               	movlb	1	; select bank1
  8108  05D2  0857               	movf	_startTrainBytes^(0+128),w
  8109  05D3  0020               	movlb	0	; select bank0
  8110  05D4  00A6               	movwf	??_isTrainSt+6
  8111  05D5  0021               	movlb	1	; select bank1
  8112  05D6  0858               	movf	(_startTrainBytes+1)^(0+128),w
  8113  05D7  0020               	movlb	0	; select bank0
  8114  05D8  00A7               	movwf	??_isTrainSt+7
  8115  05D9  0021               	movlb	1	; select bank1
  8116  05DA  0859               	movf	(_startTrainBytes+2)^(0+128),w
  8117  05DB  0020               	movlb	0	; select bank0
  8118  05DC  00A8               	movwf	??_isTrainSt+8
  8119  05DD  0021               	movlb	1	; select bank1
  8120  05DE  085A               	movf	(_startTrainBytes+3)^(0+128),w
  8121  05DF  0020               	movlb	0	; select bank0
  8122  05E0  00A9               	movwf	??_isTrainSt+9
  8123  05E1  3008               	movlw	8
  8124  05E2                     u1955:	
  8125  05E2  35A6               	lslf	??_isTrainSt+6,f
  8126  05E3  0DA7               	rlf	??_isTrainSt+7,f
  8127  05E4  0DA8               	rlf	??_isTrainSt+8,f
  8128  05E5  0DA9               	rlf	??_isTrainSt+9,f
  8129  05E6  0B89               	decfsz	9,f
  8130  05E7  2DE2               	goto	u1955
  8131  05E8  0826               	movf	??_isTrainSt+6,w
  8132  05E9  04A2               	iorwf	??_isTrainSt+2,f
  8133  05EA  0827               	movf	??_isTrainSt+7,w
  8134  05EB  04A3               	iorwf	??_isTrainSt+3,f
  8135  05EC  0828               	movf	??_isTrainSt+8,w
  8136  05ED  04A4               	iorwf	??_isTrainSt+4,f
  8137  05EE  0829               	movf	??_isTrainSt+9,w
  8138  05EF  04A5               	iorwf	??_isTrainSt+5,f
  8139  05F0  0825               	movf	??_isTrainSt+5,w
  8140  05F1  0021               	movlb	1	; select bank1
  8141  05F2  00DA               	movwf	(_startTrainBytes+3)^(0+128)
  8142  05F3  0020               	movlb	0	; select bank0
  8143  05F4  0824               	movf	??_isTrainSt+4,w
  8144  05F5  0021               	movlb	1	; select bank1
  8145  05F6  00D9               	movwf	(_startTrainBytes+2)^(0+128)
  8146  05F7  0020               	movlb	0	; select bank0
  8147  05F8  0823               	movf	??_isTrainSt+3,w
  8148  05F9  0021               	movlb	1	; select bank1
  8149  05FA  00D8               	movwf	(_startTrainBytes+1)^(0+128)
  8150  05FB  0020               	movlb	0	; select bank0
  8151  05FC  0822               	movf	??_isTrainSt+2,w
  8152  05FD  0021               	movlb	1	; select bank1
  8153  05FE  00D7               	movwf	_startTrainBytes^(0+128)
  8154                           
  8155                           ;main.c: 188: if(startTrainBytes == 0xFFFFFFFF){
  8156  05FF  0A57               	incf	_startTrainBytes^(0+128),w
  8157  0600  1D03               	skipz
  8158  0601  2E0D               	goto	l2891
  8159  0602  0A58               	incf	(_startTrainBytes+1)^(0+128),w
  8160  0603  1D03               	skipz
  8161  0604  2E0D               	goto	l2891
  8162  0605  0A59               	incf	(_startTrainBytes+2)^(0+128),w
  8163  0606  1D03               	skipz
  8164  0607  2E0D               	goto	l2891
  8165  0608  0A5A               	incf	(_startTrainBytes+3)^(0+128),w
  8166  0609  1D03               	btfss	3,2
  8167  060A  2E0D               	goto	l2891
  8168                           
  8169                           ;main.c: 189: return 1;
  8170  060B  1403               	setc
  8171                           
  8172                           ;main.c: 190: }else{
  8173  060C  0008               	return
  8174  060D                     l2891:	
  8175                           
  8176                           ;main.c: 191: return 0;
  8177  060D  1003               	clrc
  8178  060E  0008               	return
  8179  060F                     __end_of_isTrainSt:	
  8180                           
  8181                           	psect	text24
  8182  04E7                     __ptext24:	
  8183 ;; *************** function _initComu_types *****************
  8184 ;; Defined at:
  8185 ;;		line 18 in file "D:/programdata/16F18346_Link_IC.X/comu_type.c"
  8186 ;; Parameters:    Size  Location     Type
  8187 ;;		None
  8188 ;; Auto vars:     Size  Location     Type
  8189 ;;		None
  8190 ;; Return value:  Size  Location     Type
  8191 ;;                  1    wreg      void 
  8192 ;; Registers used:
  8193 ;;		wreg
  8194 ;; Tracked objects:
  8195 ;;		On entry : 0/0
  8196 ;;		On exit  : 0/0
  8197 ;;		Unchanged: 0/0
  8198 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8199 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8200 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8201 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8202 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8203 ;;Total ram usage:        1 bytes
  8204 ;; Hardware stack levels used:    1
  8205 ;; Hardware stack levels required when called:    3
  8206 ;; This function calls:
  8207 ;;		Nothing
  8208 ;; This function is called by:
  8209 ;;		_main
  8210 ;; This function uses a non-reentrant model
  8211 ;;
  8212                           
  8213                           
  8214                           ;psect for function _initComu_types
  8215  04E7                     _initComu_types:	
  8216                           
  8217                           ;comu_type.c: 19: comu_types[0] = 0b00111111;
  8218                           
  8219                           ;incstack = 0
  8220                           ; Regs used in _initComu_types: [wreg]
  8221  04E7  303F               	movlw	63
  8222  04E8  0020               	movlb	0	; select bank0
  8223  04E9  00A0               	movwf	??_initComu_types
  8224  04EA  0820               	movf	??_initComu_types,w
  8225  04EB  0021               	movlb	1	; select bank1
  8226  04EC  00A0               	movwf	_comu_types^(0+128)
  8227                           
  8228                           ;comu_type.c: 20: comu_types[1] = 0b01111111;
  8229  04ED  307F               	movlw	127
  8230  04EE  0020               	movlb	0	; select bank0
  8231  04EF  00A0               	movwf	??_initComu_types
  8232  04F0  0820               	movf	??_initComu_types,w
  8233  04F1  0021               	movlb	1	; select bank1
  8234  04F2  00A1               	movwf	(_comu_types^(0+128)+1)
  8235                           
  8236                           ;comu_type.c: 21: comu_types[2] = 0b10011111;
  8237  04F3  309F               	movlw	159
  8238  04F4  0020               	movlb	0	; select bank0
  8239  04F5  00A0               	movwf	??_initComu_types
  8240  04F6  0820               	movf	??_initComu_types,w
  8241  04F7  0021               	movlb	1	; select bank1
  8242  04F8  00A2               	movwf	(_comu_types^(0+128)+2)
  8243                           
  8244                           ;comu_type.c: 22: comu_types[3] = 0b10101111;
  8245  04F9  30AF               	movlw	175
  8246  04FA  0020               	movlb	0	; select bank0
  8247  04FB  00A0               	movwf	??_initComu_types
  8248  04FC  0820               	movf	??_initComu_types,w
  8249  04FD  0021               	movlb	1	; select bank1
  8250  04FE  00A3               	movwf	(_comu_types^(0+128)+3)
  8251                           
  8252                           ;comu_type.c: 23: comu_types[4] = 0b10111111;
  8253  04FF  30BF               	movlw	191
  8254  0500  0020               	movlb	0	; select bank0
  8255  0501  00A0               	movwf	??_initComu_types
  8256  0502  0820               	movf	??_initComu_types,w
  8257  0503  0021               	movlb	1	; select bank1
  8258  0504  00A4               	movwf	(_comu_types^(0+128)+4)
  8259                           
  8260                           ;comu_type.c: 24: comu_types[5] = 0b11001111;
  8261  0505  30CF               	movlw	207
  8262  0506  0020               	movlb	0	; select bank0
  8263  0507  00A0               	movwf	??_initComu_types
  8264  0508  0820               	movf	??_initComu_types,w
  8265  0509  0021               	movlb	1	; select bank1
  8266  050A  00A5               	movwf	(_comu_types^(0+128)+5)
  8267                           
  8268                           ;comu_type.c: 25: comu_types[6] = 0b11010111;
  8269  050B  30D7               	movlw	215
  8270  050C  0020               	movlb	0	; select bank0
  8271  050D  00A0               	movwf	??_initComu_types
  8272  050E  0820               	movf	??_initComu_types,w
  8273  050F  0021               	movlb	1	; select bank1
  8274  0510  00A6               	movwf	(_comu_types^(0+128)+6)
  8275                           
  8276                           ;comu_type.c: 26: comu_types[7] = 0b11011111;
  8277  0511  30DF               	movlw	223
  8278  0512  0020               	movlb	0	; select bank0
  8279  0513  00A0               	movwf	??_initComu_types
  8280  0514  0820               	movf	??_initComu_types,w
  8281  0515  0021               	movlb	1	; select bank1
  8282  0516  00A7               	movwf	(_comu_types^(0+128)+7)
  8283                           
  8284                           ;comu_type.c: 27: comu_types[8] = 0b11100111;
  8285  0517  30E7               	movlw	231
  8286  0518  0020               	movlb	0	; select bank0
  8287  0519  00A0               	movwf	??_initComu_types
  8288  051A  0820               	movf	??_initComu_types,w
  8289  051B  0021               	movlb	1	; select bank1
  8290  051C  00A8               	movwf	(_comu_types^(0+128)+8)
  8291                           
  8292                           ;comu_type.c: 28: comu_types[9] = 0b11101011;
  8293  051D  30EB               	movlw	235
  8294  051E  0020               	movlb	0	; select bank0
  8295  051F  00A0               	movwf	??_initComu_types
  8296  0520  0820               	movf	??_initComu_types,w
  8297  0521  0021               	movlb	1	; select bank1
  8298  0522  00A9               	movwf	(_comu_types^(0+128)+9)
  8299                           
  8300                           ;comu_type.c: 29: comu_types[10] = 0b11101111;
  8301  0523  30EF               	movlw	239
  8302  0524  0020               	movlb	0	; select bank0
  8303  0525  00A0               	movwf	??_initComu_types
  8304  0526  0820               	movf	??_initComu_types,w
  8305  0527  0021               	movlb	1	; select bank1
  8306  0528  00AA               	movwf	(_comu_types^(0+128)+10)
  8307                           
  8308                           ;comu_type.c: 30: comu_types[11] = 0b11110001;
  8309  0529  30F1               	movlw	241
  8310  052A  0020               	movlb	0	; select bank0
  8311  052B  00A0               	movwf	??_initComu_types
  8312  052C  0820               	movf	??_initComu_types,w
  8313  052D  0021               	movlb	1	; select bank1
  8314  052E  00AB               	movwf	(_comu_types^(0+128)+11)
  8315                           
  8316                           ;comu_type.c: 31: comu_types[12] = 0b11110011;
  8317  052F  30F3               	movlw	243
  8318  0530  0020               	movlb	0	; select bank0
  8319  0531  00A0               	movwf	??_initComu_types
  8320  0532  0820               	movf	??_initComu_types,w
  8321  0533  0021               	movlb	1	; select bank1
  8322  0534  00AC               	movwf	(_comu_types^(0+128)+12)
  8323                           
  8324                           ;comu_type.c: 32: comu_types[13] = 0b11110101;
  8325  0535  30F5               	movlw	245
  8326  0536  0020               	movlb	0	; select bank0
  8327  0537  00A0               	movwf	??_initComu_types
  8328  0538  0820               	movf	??_initComu_types,w
  8329  0539  0021               	movlb	1	; select bank1
  8330  053A  00AD               	movwf	(_comu_types^(0+128)+13)
  8331                           
  8332                           ;comu_type.c: 33: comu_types[14] = 0b11110111;
  8333  053B  30F7               	movlw	247
  8334  053C  0020               	movlb	0	; select bank0
  8335  053D  00A0               	movwf	??_initComu_types
  8336  053E  0820               	movf	??_initComu_types,w
  8337  053F  0021               	movlb	1	; select bank1
  8338  0540  00AE               	movwf	(_comu_types^(0+128)+14)
  8339                           
  8340                           ;comu_type.c: 34: comu_types[15] = 0b11111000;
  8341  0541  30F8               	movlw	248
  8342  0542  0020               	movlb	0	; select bank0
  8343  0543  00A0               	movwf	??_initComu_types
  8344  0544  0820               	movf	??_initComu_types,w
  8345  0545  0021               	movlb	1	; select bank1
  8346  0546  00AF               	movwf	(_comu_types^(0+128)+15)
  8347                           
  8348                           ;comu_type.c: 35: comu_types[16] = 0b11111001;
  8349  0547  30F9               	movlw	249
  8350  0548  0020               	movlb	0	; select bank0
  8351  0549  00A0               	movwf	??_initComu_types
  8352  054A  0820               	movf	??_initComu_types,w
  8353  054B  0021               	movlb	1	; select bank1
  8354  054C  00B0               	movwf	(_comu_types^(0+128)+16)
  8355                           
  8356                           ;comu_type.c: 36: comu_types[17] = 0b11111010;
  8357  054D  30FA               	movlw	250
  8358  054E  0020               	movlb	0	; select bank0
  8359  054F  00A0               	movwf	??_initComu_types
  8360  0550  0820               	movf	??_initComu_types,w
  8361  0551  0021               	movlb	1	; select bank1
  8362  0552  00B1               	movwf	(_comu_types^(0+128)+17)
  8363  0553  0008               	return
  8364  0554                     __end_of_initComu_types:	
  8365                           
  8366                           	psect	text25
  8367  0554                     __ptext25:	
  8368 ;; *************** function _initComand *****************
  8369 ;; Defined at:
  8370 ;;		line 12 in file "D:/programdata/16F18346_Link_IC.X/command.c"
  8371 ;; Parameters:    Size  Location     Type
  8372 ;;		None
  8373 ;; Auto vars:     Size  Location     Type
  8374 ;;		None
  8375 ;; Return value:  Size  Location     Type
  8376 ;;                  1    wreg      void 
  8377 ;; Registers used:
  8378 ;;		wreg
  8379 ;; Tracked objects:
  8380 ;;		On entry : 0/0
  8381 ;;		On exit  : 0/0
  8382 ;;		Unchanged: 0/0
  8383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8384 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8385 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8386 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8387 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8388 ;;Total ram usage:        1 bytes
  8389 ;; Hardware stack levels used:    1
  8390 ;; Hardware stack levels required when called:    3
  8391 ;; This function calls:
  8392 ;;		Nothing
  8393 ;; This function is called by:
  8394 ;;		_main
  8395 ;; This function uses a non-reentrant model
  8396 ;;
  8397                           
  8398                           
  8399                           ;psect for function _initComand
  8400  0554                     _initComand:	
  8401                           
  8402                           ;command.c: 13: command[0] = 0b00111111;
  8403                           
  8404                           ;incstack = 0
  8405                           ; Regs used in _initComand: [wreg]
  8406  0554  303F               	movlw	63
  8407  0555  0020               	movlb	0	; select bank0
  8408  0556  00A0               	movwf	??_initComand
  8409  0557  0820               	movf	??_initComand,w
  8410  0558  0021               	movlb	1	; select bank1
  8411  0559  00B2               	movwf	_command^(0+128)
  8412                           
  8413                           ;command.c: 14: command[1] = 0b01111111;
  8414  055A  307F               	movlw	127
  8415  055B  0020               	movlb	0	; select bank0
  8416  055C  00A0               	movwf	??_initComand
  8417  055D  0820               	movf	??_initComand,w
  8418  055E  0021               	movlb	1	; select bank1
  8419  055F  00B3               	movwf	(_command^(0+128)+1)
  8420                           
  8421                           ;command.c: 15: command[2] = 0b10011111;
  8422  0560  309F               	movlw	159
  8423  0561  0020               	movlb	0	; select bank0
  8424  0562  00A0               	movwf	??_initComand
  8425  0563  0820               	movf	??_initComand,w
  8426  0564  0021               	movlb	1	; select bank1
  8427  0565  00B4               	movwf	(_command^(0+128)+2)
  8428                           
  8429                           ;command.c: 16: command[3] = 0b10101111;
  8430  0566  30AF               	movlw	175
  8431  0567  0020               	movlb	0	; select bank0
  8432  0568  00A0               	movwf	??_initComand
  8433  0569  0820               	movf	??_initComand,w
  8434  056A  0021               	movlb	1	; select bank1
  8435  056B  00B5               	movwf	(_command^(0+128)+3)
  8436                           
  8437                           ;command.c: 17: command[4] = 0b10111111;
  8438  056C  30BF               	movlw	191
  8439  056D  0020               	movlb	0	; select bank0
  8440  056E  00A0               	movwf	??_initComand
  8441  056F  0820               	movf	??_initComand,w
  8442  0570  0021               	movlb	1	; select bank1
  8443  0571  00B6               	movwf	(_command^(0+128)+4)
  8444                           
  8445                           ;command.c: 18: command[5] = 0b11001111;
  8446  0572  30CF               	movlw	207
  8447  0573  0020               	movlb	0	; select bank0
  8448  0574  00A0               	movwf	??_initComand
  8449  0575  0820               	movf	??_initComand,w
  8450  0576  0021               	movlb	1	; select bank1
  8451  0577  00B7               	movwf	(_command^(0+128)+5)
  8452                           
  8453                           ;command.c: 19: command[6] = 0b11010111;
  8454  0578  30D7               	movlw	215
  8455  0579  0020               	movlb	0	; select bank0
  8456  057A  00A0               	movwf	??_initComand
  8457  057B  0820               	movf	??_initComand,w
  8458  057C  0021               	movlb	1	; select bank1
  8459  057D  00B8               	movwf	(_command^(0+128)+6)
  8460                           
  8461                           ;command.c: 20: command[7] = 0b11011111;
  8462  057E  30DF               	movlw	223
  8463  057F  0020               	movlb	0	; select bank0
  8464  0580  00A0               	movwf	??_initComand
  8465  0581  0820               	movf	??_initComand,w
  8466  0582  0021               	movlb	1	; select bank1
  8467  0583  00B9               	movwf	(_command^(0+128)+7)
  8468                           
  8469                           ;command.c: 21: command[8] = 0b11100111;
  8470  0584  30E7               	movlw	231
  8471  0585  0020               	movlb	0	; select bank0
  8472  0586  00A0               	movwf	??_initComand
  8473  0587  0820               	movf	??_initComand,w
  8474  0588  0021               	movlb	1	; select bank1
  8475  0589  00BA               	movwf	(_command^(0+128)+8)
  8476                           
  8477                           ;command.c: 22: command[9] = 0b11101011;
  8478  058A  30EB               	movlw	235
  8479  058B  0020               	movlb	0	; select bank0
  8480  058C  00A0               	movwf	??_initComand
  8481  058D  0820               	movf	??_initComand,w
  8482  058E  0021               	movlb	1	; select bank1
  8483  058F  00BB               	movwf	(_command^(0+128)+9)
  8484                           
  8485                           ;command.c: 23: command[10] = 0b11101111;
  8486  0590  30EF               	movlw	239
  8487  0591  0020               	movlb	0	; select bank0
  8488  0592  00A0               	movwf	??_initComand
  8489  0593  0820               	movf	??_initComand,w
  8490  0594  0021               	movlb	1	; select bank1
  8491  0595  00BC               	movwf	(_command^(0+128)+10)
  8492                           
  8493                           ;command.c: 24: command[11] = 0b11110001;
  8494  0596  30F1               	movlw	241
  8495  0597  0020               	movlb	0	; select bank0
  8496  0598  00A0               	movwf	??_initComand
  8497  0599  0820               	movf	??_initComand,w
  8498  059A  0021               	movlb	1	; select bank1
  8499  059B  00BD               	movwf	(_command^(0+128)+11)
  8500                           
  8501                           ;command.c: 25: command[12] = 0b11110011;
  8502  059C  30F3               	movlw	243
  8503  059D  0020               	movlb	0	; select bank0
  8504  059E  00A0               	movwf	??_initComand
  8505  059F  0820               	movf	??_initComand,w
  8506  05A0  0021               	movlb	1	; select bank1
  8507  05A1  00BE               	movwf	(_command^(0+128)+12)
  8508                           
  8509                           ;command.c: 26: command[13] = 0b11110101;
  8510  05A2  30F5               	movlw	245
  8511  05A3  0020               	movlb	0	; select bank0
  8512  05A4  00A0               	movwf	??_initComand
  8513  05A5  0820               	movf	??_initComand,w
  8514  05A6  0021               	movlb	1	; select bank1
  8515  05A7  00BF               	movwf	(_command^(0+128)+13)
  8516                           
  8517                           ;command.c: 27: command[14] = 0b11110111;
  8518  05A8  30F7               	movlw	247
  8519  05A9  0020               	movlb	0	; select bank0
  8520  05AA  00A0               	movwf	??_initComand
  8521  05AB  0820               	movf	??_initComand,w
  8522  05AC  0021               	movlb	1	; select bank1
  8523  05AD  00C0               	movwf	(_command^(0+128)+14)
  8524                           
  8525                           ;command.c: 28: command[15] = 0b11111000;
  8526  05AE  30F8               	movlw	248
  8527  05AF  0020               	movlb	0	; select bank0
  8528  05B0  00A0               	movwf	??_initComand
  8529  05B1  0820               	movf	??_initComand,w
  8530  05B2  0021               	movlb	1	; select bank1
  8531  05B3  00C1               	movwf	(_command^(0+128)+15)
  8532                           
  8533                           ;command.c: 29: command[16] = 0b11111001;
  8534  05B4  30F9               	movlw	249
  8535  05B5  0020               	movlb	0	; select bank0
  8536  05B6  00A0               	movwf	??_initComand
  8537  05B7  0820               	movf	??_initComand,w
  8538  05B8  0021               	movlb	1	; select bank1
  8539  05B9  00C2               	movwf	(_command^(0+128)+16)
  8540                           
  8541                           ;command.c: 30: command[17] = 0b11111010;
  8542  05BA  30FA               	movlw	250
  8543  05BB  0020               	movlb	0	; select bank0
  8544  05BC  00A0               	movwf	??_initComand
  8545  05BD  0820               	movf	??_initComand,w
  8546  05BE  0021               	movlb	1	; select bank1
  8547  05BF  00C3               	movwf	(_command^(0+128)+17)
  8548  05C0  0008               	return
  8549  05C1                     __end_of_initComand:	
  8550                           
  8551                           	psect	text26
  8552  07E7                     __ptext26:	
  8553 ;; *************** function _initCargo *****************
  8554 ;; Defined at:
  8555 ;;		line 14 in file "struct.c"
  8556 ;; Parameters:    Size  Location     Type
  8557 ;;		None
  8558 ;; Auto vars:     Size  Location     Type
  8559 ;;		None
  8560 ;; Return value:  Size  Location     Type
  8561 ;;                  1    wreg      void 
  8562 ;; Registers used:
  8563 ;;		wreg, status,2
  8564 ;; Tracked objects:
  8565 ;;		On entry : 0/0
  8566 ;;		On exit  : 0/0
  8567 ;;		Unchanged: 0/0
  8568 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8569 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8570 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8571 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8572 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8573 ;;Total ram usage:        0 bytes
  8574 ;; Hardware stack levels used:    1
  8575 ;; Hardware stack levels required when called:    3
  8576 ;; This function calls:
  8577 ;;		Nothing
  8578 ;; This function is called by:
  8579 ;;		_main
  8580 ;; This function uses a non-reentrant model
  8581 ;;
  8582                           
  8583                           
  8584                           ;psect for function _initCargo
  8585  07E7                     _initCargo:	
  8586                           
  8587                           ;struct.c: 15: isMycargo = 1;
  8588                           
  8589                           ;incstack = 0
  8590                           ; Regs used in _initCargo: [wreg+status,2]
  8591  07E7  1470               	bsf	_isMycargo/(0+8),_isMycargo& (0+7)
  8592                           
  8593                           ;struct.c: 16: cargoData.WorkingCount = 0;
  8594  07E8  3000               	movlw	0
  8595  07E9  0020               	movlb	0	; select bank0
  8596  07EA  00E1               	movwf	_cargoData+15
  8597  07EB  3000               	movlw	0
  8598  07EC  00E0               	movwf	_cargoData+14
  8599  07ED  3000               	movlw	0
  8600  07EE  00DF               	movwf	_cargoData+13
  8601  07EF  3000               	movlw	0
  8602  07F0  00DE               	movwf	_cargoData+12
  8603                           
  8604                           ;struct.c: 17: cargoData.address = 0;
  8605  07F1  01D6               	clrf	_cargoData+4
  8606                           
  8607                           ;struct.c: 18: cargoData.cargoLength = 0xFFFF;
  8608  07F2  30FF               	movlw	255
  8609  07F3  00D2               	movwf	_cargoData
  8610  07F4  30FF               	movlw	255
  8611  07F5  00D3               	movwf	_cargoData+1
  8612                           
  8613                           ;struct.c: 19: cargoData.clutchMode = 0;
  8614  07F6  01DD               	clrf	_cargoData+11
  8615                           
  8616                           ;struct.c: 20: cargoData.command = 0;
  8617  07F7  01D4               	clrf	_cargoData+2
  8618                           
  8619                           ;struct.c: 21: cargoData.index = 0;
  8620  07F8  01D5               	clrf	_cargoData+3
  8621                           
  8622                           ;struct.c: 22: cargoData.linkAngleTo = 0;
  8623  07F9  01D7               	clrf	_cargoData+5
  8624  07FA  01D8               	clrf	_cargoData+6
  8625                           
  8626                           ;struct.c: 23: cargoData.passedTime = 0;
  8627  07FB  01DB               	clrf	_cargoData+9
  8628  07FC  01DC               	clrf	_cargoData+10
  8629  07FD  0008               	return
  8630  07FE                     __end_of_initCargo:	
  8631                           
  8632                           	psect	text27
  8633  0FD8                     __ptext27:	
  8634 ;; *************** function _init *****************
  8635 ;; Defined at:
  8636 ;;		line 101 in file "D:/programdata/16F18346_Link_IC.X/main.c"
  8637 ;; Parameters:    Size  Location     Type
  8638 ;;		None
  8639 ;; Auto vars:     Size  Location     Type
  8640 ;;		None
  8641 ;; Return value:  Size  Location     Type
  8642 ;;                  1    wreg      void 
  8643 ;; Registers used:
  8644 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8645 ;; Tracked objects:
  8646 ;;		On entry : 0/0
  8647 ;;		On exit  : 0/0
  8648 ;;		Unchanged: 0/0
  8649 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8650 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8651 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8652 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8653 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8654 ;;Total ram usage:        0 bytes
  8655 ;; Hardware stack levels used:    1
  8656 ;; Hardware stack levels required when called:    4
  8657 ;; This function calls:
  8658 ;;		_clear
  8659 ;;		_initbuffer
  8660 ;; This function is called by:
  8661 ;;		_main
  8662 ;; This function uses a non-reentrant model
  8663 ;;
  8664                           
  8665                           
  8666                           ;psect for function _init
  8667  0FD8                     _init:	
  8668                           
  8669                           ;main.c: 102: count1 = 0;
  8670                           
  8671                           ;incstack = 0
  8672                           ; Regs used in _init: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8673  0FD8  0020               	movlb	0	; select bank0
  8674  0FD9  01EA               	clrf	_count1
  8675  0FDA  01EB               	clrf	_count1+1
  8676                           
  8677                           ;main.c: 103: count2 = 0;
  8678  0FDB  01E8               	clrf	_count2
  8679  0FDC  01E9               	clrf	_count2+1
  8680                           
  8681                           ;main.c: 104: initbuffer();
  8682  0FDD  3187  27BD  318F   	fcall	_initbuffer
  8683                           
  8684                           ;main.c: 106: OSCFRQbits.HFFRQ = 0b0111;
  8685  0FE0  0032               	movlb	18	; select bank18
  8686  0FE1  081F               	movf	31,w	;volatile
  8687  0FE2  39F0               	andlw	-16
  8688  0FE3  3807               	iorlw	7
  8689  0FE4  009F               	movwf	31	;volatile
  8690                           
  8691                           ;main.c: 107: OSCTUNEbits.HFTUN = 0b000000;
  8692  0FE5  30C0               	movlw	-64
  8693  0FE6  059E               	andwf	30,f	;volatile
  8694                           
  8695                           ;main.c: 108: clear();
  8696  0FE7  318F  2749         	fcall	_clear
  8697                           
  8698                           ;main.c: 109: WPUC = 0b11111111;
  8699  0FE9  30FF               	movlw	255
  8700  0FEA  0024               	movlb	4	; select bank4
  8701  0FEB  008E               	movwf	14	;volatile
  8702                           
  8703                           ;main.c: 110: WPUB = 0b11111111;
  8704  0FEC  30FF               	movlw	255
  8705  0FED  008D               	movwf	13	;volatile
  8706                           
  8707                           ;main.c: 111: WPUA = 0b11111111;
  8708  0FEE  30FF               	movlw	255
  8709  0FEF  008C               	movwf	12	;volatile
  8710                           
  8711                           ;main.c: 112: TRISBbits.TRISB6 = 1;
  8712  0FF0  0021               	movlb	1	; select bank1
  8713  0FF1  170D               	bsf	13,6	;volatile
  8714                           
  8715                           ;main.c: 113: TRISBbits.TRISB4 = 1;
  8716  0FF2  160D               	bsf	13,4	;volatile
  8717                           
  8718                           ;main.c: 114: TRISCbits.TRISC6 = 1;
  8719  0FF3  170E               	bsf	14,6	;volatile
  8720                           
  8721                           ;main.c: 115: INLVLBbits.INLVLB4 = 0;
  8722  0FF4  0027               	movlb	7	; select bank7
  8723  0FF5  120D               	bcf	13,4	;volatile
  8724                           
  8725                           ;main.c: 116: INLVLBbits.INLVLB6 = 0;
  8726  0FF6  130D               	bcf	13,6	;volatile
  8727                           
  8728                           ;main.c: 117: INLVLCbits.INLVLC5 = 0;
  8729  0FF7  128E               	bcf	14,5	;volatile
  8730                           
  8731                           ;main.c: 119: TRISBbits.TRISB5 = 1;
  8732  0FF8  0021               	movlb	1	; select bank1
  8733  0FF9  168D               	bsf	13,5	;volatile
  8734                           
  8735                           ;main.c: 120: INLVLBbits.INLVLB5 = 0;
  8736  0FFA  0027               	movlb	7	; select bank7
  8737  0FFB  128D               	bcf	13,5	;volatile
  8738                           
  8739                           ;main.c: 121: INLVLBbits.INLVLB7 = 0;
  8740  0FFC  138D               	bcf	13,7	;volatile
  8741                           
  8742                           ;main.c: 122: INLVLAbits.INLVLA1 = 0;
  8743  0FFD  108C               	bcf	12,1	;volatile
  8744                           
  8745                           ;main.c: 123: INLVLAbits.INLVLA2 = 0;
  8746  0FFE  110C               	bcf	12,2	;volatile
  8747  0FFF  0008               	return
  8748  1000                     __end_of_init:	
  8749                           ;main.c: 125: return;
  8750                           
  8751                           
  8752                           	psect	text28
  8753  07BD                     __ptext28:	
  8754 ;; *************** function _initbuffer *****************
  8755 ;; Defined at:
  8756 ;;		line 95 in file "D:/programdata/16F18346_Link_IC.X/main.c"
  8757 ;; Parameters:    Size  Location     Type
  8758 ;;		None
  8759 ;; Auto vars:     Size  Location     Type
  8760 ;;  i               2    2[BANK0 ] int 
  8761 ;; Return value:  Size  Location     Type
  8762 ;;                  1    wreg      void 
  8763 ;; Registers used:
  8764 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8765 ;; Tracked objects:
  8766 ;;		On entry : 0/0
  8767 ;;		On exit  : 0/0
  8768 ;;		Unchanged: 0/0
  8769 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8770 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8771 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8772 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8773 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8774 ;;Total ram usage:        4 bytes
  8775 ;; Hardware stack levels used:    1
  8776 ;; Hardware stack levels required when called:    3
  8777 ;; This function calls:
  8778 ;;		Nothing
  8779 ;; This function is called by:
  8780 ;;		_init
  8781 ;; This function uses a non-reentrant model
  8782 ;;
  8783                           
  8784                           
  8785                           ;psect for function _initbuffer
  8786  07BD                     _initbuffer:	
  8787                           
  8788                           ;main.c: 96: for(int i = 0; i < 256; i++){
  8789                           
  8790                           ;incstack = 0
  8791                           ; Regs used in _initbuffer: [wreg+fsr1l+fsr1h+status,2+status,0]
  8792  07BD  0020               	movlb	0	; select bank0
  8793  07BE  01A2               	clrf	initbuffer@i
  8794  07BF  01A3               	clrf	initbuffer@i+1
  8795  07C0                     L28:	
  8796  07C0  0823               	movf	initbuffer@i+1,w
  8797  07C1  3A80               	xorlw	128
  8798  07C2  00A0               	movwf	??_initbuffer
  8799  07C3  3081               	movlw	129
  8800  07C4  0220               	subwf	??_initbuffer,w
  8801  07C5  1D03               	skipz
  8802  07C6  2FC9               	goto	u1935
  8803  07C7  3000               	movlw	0
  8804  07C8  0222               	subwf	initbuffer@i,w
  8805  07C9                     u1935:	
  8806  07C9  1803               	btfsc	3,0
  8807  07CA  0008               	return
  8808                           
  8809                           ;main.c: 97: spi1_buffer_data[i] = 0;
  8810  07CB  30F0               	movlw	240
  8811  07CC  0020               	movlb	0	; select bank0
  8812  07CD  00A0               	movwf	??_initbuffer
  8813  07CE  3026               	movlw	38
  8814  07CF  00A1               	movwf	??_initbuffer+1
  8815  07D0  0822               	movf	initbuffer@i,w
  8816  07D1  0720               	addwf	??_initbuffer,w
  8817  07D2  0086               	movwf	6
  8818  07D3  0823               	movf	initbuffer@i+1,w
  8819  07D4  3D21               	addwfc	??_initbuffer+1,w
  8820  07D5  0087               	movwf	7
  8821  07D6  0181               	clrf	1
  8822                           
  8823                           ;main.c: 98: spi2_buffer_data[i] = 0;
  8824  07D7  30F0               	movlw	240
  8825  07D8  00A0               	movwf	??_initbuffer
  8826  07D9  3025               	movlw	37
  8827  07DA  00A1               	movwf	??_initbuffer+1
  8828  07DB  0822               	movf	initbuffer@i,w
  8829  07DC  0720               	addwf	??_initbuffer,w
  8830  07DD  0086               	movwf	6
  8831  07DE  0823               	movf	initbuffer@i+1,w
  8832  07DF  3D21               	addwfc	??_initbuffer+1,w
  8833  07E0  0087               	movwf	7
  8834  07E1  0181               	clrf	1
  8835  07E2  3001               	movlw	1
  8836  07E3  07A2               	addwf	initbuffer@i,f
  8837  07E4  3000               	movlw	0
  8838  07E5  3DA3               	addwfc	initbuffer@i+1,f
  8839  07E6  2FC0               	goto	L28
  8840  07E7                     __end_of_initbuffer:	
  8841                           
  8842                           	psect	text29
  8843  0F49                     __ptext29:	
  8844 ;; *************** function _clear *****************
  8845 ;; Defined at:
  8846 ;;		line 9 in file "D:/programdata/16F18346_Link_IC.X/util.c"
  8847 ;; Parameters:    Size  Location     Type
  8848 ;;		None
  8849 ;; Auto vars:     Size  Location     Type
  8850 ;;		None
  8851 ;; Return value:  Size  Location     Type
  8852 ;;                  1    wreg      void 
  8853 ;; Registers used:
  8854 ;;		status,2
  8855 ;; Tracked objects:
  8856 ;;		On entry : 0/0
  8857 ;;		On exit  : 0/0
  8858 ;;		Unchanged: 0/0
  8859 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8860 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8861 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8862 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8863 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8864 ;;Total ram usage:        0 bytes
  8865 ;; Hardware stack levels used:    1
  8866 ;; Hardware stack levels required when called:    3
  8867 ;; This function calls:
  8868 ;;		Nothing
  8869 ;; This function is called by:
  8870 ;;		_init
  8871 ;; This function uses a non-reentrant model
  8872 ;;
  8873                           
  8874                           
  8875                           ;psect for function _clear
  8876  0F49                     _clear:	
  8877                           
  8878                           ;util.c: 10: ANSELA = 0x00;
  8879                           
  8880                           ;incstack = 0
  8881                           ; Regs used in _clear: [status,2]
  8882  0F49  0023               	movlb	3	; select bank3
  8883  0F4A  018C               	clrf	12	;volatile
  8884                           
  8885                           ;util.c: 11: ANSELB = 0x00;
  8886  0F4B  018D               	clrf	13	;volatile
  8887                           
  8888                           ;util.c: 12: ANSELC = 0x00;
  8889  0F4C  018E               	clrf	14	;volatile
  8890                           
  8891                           ;util.c: 13: PORTA = 0x00;
  8892  0F4D  0020               	movlb	0	; select bank0
  8893  0F4E  018C               	clrf	12	;volatile
  8894                           
  8895                           ;util.c: 14: PORTB = 0x00;
  8896  0F4F  018D               	clrf	13	;volatile
  8897                           
  8898                           ;util.c: 15: PORTC = 0x00;
  8899  0F50  018E               	clrf	14	;volatile
  8900                           
  8901                           ;util.c: 16: TRISA = 0x00;
  8902  0F51  0021               	movlb	1	; select bank1
  8903  0F52  018C               	clrf	12	;volatile
  8904                           
  8905                           ;util.c: 17: TRISB = 0x00;
  8906  0F53  018D               	clrf	13	;volatile
  8907                           
  8908                           ;util.c: 18: TRISC = 0x00;
  8909  0F54  018E               	clrf	14	;volatile
  8910  0F55  0008               	return
  8911  0F56                     __end_of_clear:	
  8912                           
  8913                           	psect	intentry
  8914  0004                     __pintentry:	
  8915 ;; *************** function _InterMSSP *****************
  8916 ;; Defined at:
  8917 ;;		line 68 in file "D:/programdata/16F18346_Link_IC.X/main.c"
  8918 ;; Parameters:    Size  Location     Type
  8919 ;;		None
  8920 ;; Auto vars:     Size  Location     Type
  8921 ;;		None
  8922 ;; Return value:  Size  Location     Type
  8923 ;;                  1    wreg      void 
  8924 ;; Registers used:
  8925 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8926 ;; Tracked objects:
  8927 ;;		On entry : 0/0
  8928 ;;		On exit  : 0/0
  8929 ;;		Unchanged: 0/0
  8930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8931 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8932 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8933 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8934 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8935 ;;Total ram usage:        6 bytes
  8936 ;; Hardware stack levels used:    1
  8937 ;; Hardware stack levels required when called:    2
  8938 ;; This function calls:
  8939 ;;		_addAngle
  8940 ;;		_setSPI1sendData
  8941 ;; This function is called by:
  8942 ;;		Interrupt level 1
  8943 ;; This function uses a non-reentrant model
  8944 ;;
  8945                           
  8946  0004                     _InterMSSP:	
  8947                           
  8948                           ;incstack = 0
  8949  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  8950                           
  8951                           ; Regs used in _InterMSSP: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8952  0005  3180               	pagesel	$
  8953  0006  0020               	movlb	0	; select bank0
  8954  0007  087F               	movf	127,w
  8955  0008  00F8               	movwf	??_InterMSSP+5
  8956                           
  8957                           ;main.c: 70: if (PIR1bits.SSP1IF == 1) {
  8958  0009  1D91               	btfss	17,3	;volatile
  8959  000A  2830               	goto	i1l109
  8960                           
  8961                           ;main.c: 72: spi1_buffer_data[count1] = SSP1BUF -SPI_OFFSET_BYTE;
  8962  000B  036E               	decf	_SPI_OFFSET_BYTE,w
  8963  000C  3AFF               	xorlw	255
  8964  000D  0024               	movlb	4	; select bank4
  8965  000E  0711               	addwf	17,w	;volatile
  8966  000F  00F3               	movwf	??_InterMSSP
  8967  0010  30F0               	movlw	240
  8968  0011  00F4               	movwf	??_InterMSSP+1
  8969  0012  3026               	movlw	38
  8970  0013  00F5               	movwf	??_InterMSSP+2
  8971  0014  0020               	movlb	0	; select bank0
  8972  0015  086A               	movf	_count1,w
  8973  0016  0774               	addwf	??_InterMSSP+1,w
  8974  0017  00F6               	movwf	??_InterMSSP+3
  8975  0018  086B               	movf	_count1+1,w
  8976  0019  3D75               	addwfc	??_InterMSSP+2,w
  8977  001A  00F7               	movwf	??_InterMSSP+4
  8978  001B  0876               	movf	??_InterMSSP+3,w
  8979  001C  0086               	movwf	6
  8980  001D  0877               	movf	??_InterMSSP+4,w
  8981  001E  0087               	movwf	7
  8982  001F  0873               	movf	??_InterMSSP,w
  8983  0020  0081               	movwf	1
  8984                           
  8985                           ;main.c: 73: setSPI1sendData();
  8986  0021  318F  27B5  3180   	fcall	_setSPI1sendData
  8987                           
  8988                           ;main.c: 74: count1++;
  8989  0024  3001               	movlw	1
  8990  0025  0020               	movlb	0	; select bank0
  8991  0026  07EA               	addwf	_count1,f
  8992  0027  3000               	movlw	0
  8993  0028  3DEB               	addwfc	_count1+1,f
  8994                           
  8995                           ;main.c: 75: if(count1 == 256){
  8996  0029  036B               	decf	_count1+1,w
  8997  002A  046A               	iorwf	_count1,w
  8998  002B  1D03               	btfss	3,2
  8999  002C  2854               	goto	i1l2449
  9000                           
  9001                           ;main.c: 76: count1 = 0;
  9002  002D  01EA               	clrf	_count1
  9003  002E  01EB               	clrf	_count1+1
  9004                           
  9005                           ;main.c: 77: }
  9006                           ;main.c: 78: }else if (PIR2bits.SSP2IF == 1) {
  9007  002F  2854               	goto	i1l2449
  9008  0030                     i1l109:	
  9009  0030  1D92               	btfss	18,3	;volatile
  9010  0031  284F               	goto	i1l112
  9011                           
  9012                           ;main.c: 80: spi2_buffer_data[count2] = SSP2BUF;
  9013  0032  30F0               	movlw	240
  9014  0033  00F3               	movwf	??_InterMSSP
  9015  0034  3025               	movlw	37
  9016  0035  00F4               	movwf	??_InterMSSP+1
  9017  0036  0868               	movf	_count2,w
  9018  0037  0773               	addwf	??_InterMSSP,w
  9019  0038  00F5               	movwf	??_InterMSSP+2
  9020  0039  0869               	movf	_count2+1,w
  9021  003A  3D74               	addwfc	??_InterMSSP+1,w
  9022  003B  00F6               	movwf	??_InterMSSP+3
  9023  003C  0875               	movf	??_InterMSSP+2,w
  9024  003D  0086               	movwf	6
  9025  003E  0876               	movf	??_InterMSSP+3,w
  9026  003F  0087               	movwf	7
  9027  0040  0024               	movlb	4	; select bank4
  9028  0041  0819               	movf	25,w	;volatile
  9029  0042  0081               	movwf	1
  9030                           
  9031                           ;main.c: 81: count2++;
  9032  0043  3001               	movlw	1
  9033  0044  0020               	movlb	0	; select bank0
  9034  0045  07E8               	addwf	_count2,f
  9035  0046  3000               	movlw	0
  9036  0047  3DE9               	addwfc	_count2+1,f
  9037                           
  9038                           ;main.c: 82: if(count2 == 256){
  9039  0048  0369               	decf	_count2+1,w
  9040  0049  0468               	iorwf	_count2,w
  9041  004A  1D03               	btfss	3,2
  9042  004B  2854               	goto	i1l2449
  9043                           
  9044                           ;main.c: 83: count2 = 0;
  9045  004C  01E8               	clrf	_count2
  9046  004D  01E9               	clrf	_count2+1
  9047                           
  9048                           ;main.c: 84: }
  9049                           ;main.c: 85: }else if(IOCAFbits.IOCAF3 == 1){
  9050  004E  2854               	goto	i1l2449
  9051  004F                     i1l112:	
  9052  004F  0027               	movlb	7	; select bank7
  9053  0050  1D93               	btfss	19,3	;volatile
  9054  0051  2854               	goto	i1l2449
  9055                           
  9056                           ;main.c: 87: addAngle();
  9057  0052  318F  2724         	fcall	_addAngle
  9058  0054                     i1l2449:	
  9059                           
  9060                           ;main.c: 88: }
  9061                           ;main.c: 89: PIR1bits.SSP1IF = 0 ;
  9062  0054  0020               	movlb	0	; select bank0
  9063  0055  1191               	bcf	17,3	;volatile
  9064                           
  9065                           ;main.c: 90: PIR2bits.SSP2IF = 0 ;
  9066  0056  1192               	bcf	18,3	;volatile
  9067                           
  9068                           ;main.c: 91: IOCAFbits.IOCAF3 = 0;
  9069  0057  0027               	movlb	7	; select bank7
  9070  0058  1193               	bcf	19,3	;volatile
  9071                           
  9072                           ;main.c: 92: PIR0bits.IOCIF = 0;
  9073  0059  0020               	movlb	0	; select bank0
  9074  005A  1210               	bcf	16,4	;volatile
  9075                           
  9076                           ;main.c: 93: PIR0bits.INTF = 0;
  9077  005B  1010               	bcf	16,0	;volatile
  9078  005C  0878               	movf	??_InterMSSP+5,w
  9079  005D  00FF               	movwf	127
  9080  005E  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  9081  005F  0009               	retfie
  9082  0060                     __end_of_InterMSSP:	
  9083                           
  9084                           	psect	text31
  9085  0FB5                     __ptext31:	
  9086 ;; *************** function _setSPI1sendData *****************
  9087 ;; Defined at:
  9088 ;;		line 92 in file "D:/programdata/16F18346_Link_IC.X/spiControl.c"
  9089 ;; Parameters:    Size  Location     Type
  9090 ;;		None
  9091 ;; Auto vars:     Size  Location     Type
  9092 ;;		None
  9093 ;; Return value:  Size  Location     Type
  9094 ;;                  1    wreg      void 
  9095 ;; Registers used:
  9096 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9097 ;; Tracked objects:
  9098 ;;		On entry : 0/0
  9099 ;;		On exit  : 0/0
  9100 ;;		Unchanged: 0/0
  9101 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9102 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9103 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9104 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9105 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9106 ;;Total ram usage:        2 bytes
  9107 ;; Hardware stack levels used:    1
  9108 ;; Hardware stack levels required when called:    1
  9109 ;; This function calls:
  9110 ;;		_isSPI2read
  9111 ;; This function is called by:
  9112 ;;		_InterMSSP
  9113 ;; This function uses a non-reentrant model
  9114 ;;
  9115                           
  9116                           
  9117                           ;psect for function _setSPI1sendData
  9118  0FB5                     _setSPI1sendData:	
  9119                           
  9120                           ;spiControl.c: 93: if(!(isSPI2read() == 1)){
  9121                           
  9122                           ;incstack = 0
  9123                           ; Regs used in _setSPI1sendData: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9124  0FB5  318F  273C  318F   	fcall	_isSPI2read
  9125  0FB8  1803               	btfsc	3,0
  9126  0FB9  2FD4               	goto	i1l2257
  9127                           
  9128                           ;spiControl.c: 94: SSP1BUF = spi2_buffer_data[read_count2];
  9129  0FBA  30F0               	movlw	240
  9130  0FBB  00F1               	movwf	??_setSPI1sendData
  9131  0FBC  3025               	movlw	37
  9132  0FBD  00F2               	movwf	??_setSPI1sendData+1
  9133  0FBE  0020               	movlb	0	; select bank0
  9134  0FBF  0862               	movf	_read_count2,w
  9135  0FC0  0771               	addwf	??_setSPI1sendData,w
  9136  0FC1  0086               	movwf	6
  9137  0FC2  0863               	movf	_read_count2+1,w
  9138  0FC3  3D72               	addwfc	??_setSPI1sendData+1,w
  9139  0FC4  0087               	movwf	7
  9140  0FC5  0801               	movf	1,w
  9141  0FC6  0024               	movlb	4	; select bank4
  9142  0FC7  0091               	movwf	17	;volatile
  9143                           
  9144                           ;spiControl.c: 95: read_count2++;
  9145  0FC8  3001               	movlw	1
  9146  0FC9  0020               	movlb	0	; select bank0
  9147  0FCA  07E2               	addwf	_read_count2,f
  9148  0FCB  3000               	movlw	0
  9149  0FCC  3DE3               	addwfc	_read_count2+1,f
  9150                           
  9151                           ;spiControl.c: 96: if(read_count2 == 256){
  9152  0FCD  0363               	decf	_read_count2+1,w
  9153  0FCE  0462               	iorwf	_read_count2,w
  9154  0FCF  1D03               	btfss	3,2
  9155  0FD0  0008               	return
  9156                           
  9157                           ;spiControl.c: 97: read_count2 = 0;
  9158  0FD1  01E2               	clrf	_read_count2
  9159  0FD2  01E3               	clrf	_read_count2+1
  9160                           
  9161                           ;spiControl.c: 99: }
  9162                           ;spiControl.c: 100: }else{
  9163  0FD3  0008               	return
  9164  0FD4                     i1l2257:	
  9165                           
  9166                           ;spiControl.c: 102: SSP1BUF = 0x01;
  9167  0FD4  3001               	movlw	1
  9168  0FD5  0024               	movlb	4	; select bank4
  9169  0FD6  0091               	movwf	17	;volatile
  9170  0FD7  0008               	return
  9171  0FD8                     __end_of_setSPI1sendData:	
  9172                           
  9173                           	psect	text32
  9174  0F3C                     __ptext32:	
  9175 ;; *************** function _isSPI2read *****************
  9176 ;; Defined at:
  9177 ;;		line 76 in file "D:/programdata/16F18346_Link_IC.X/spiControl.c"
  9178 ;; Parameters:    Size  Location     Type
  9179 ;;		None
  9180 ;; Auto vars:     Size  Location     Type
  9181 ;;		None
  9182 ;; Return value:  Size  Location     Type
  9183 ;;		None               void
  9184 ;; Registers used:
  9185 ;;		wreg, status,2, status,0
  9186 ;; Tracked objects:
  9187 ;;		On entry : 0/0
  9188 ;;		On exit  : 0/0
  9189 ;;		Unchanged: 0/0
  9190 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9191 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9192 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9193 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9194 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9195 ;;Total ram usage:        0 bytes
  9196 ;; Hardware stack levels used:    1
  9197 ;; This function calls:
  9198 ;;		Nothing
  9199 ;; This function is called by:
  9200 ;;		_setSPI1sendData
  9201 ;; This function uses a non-reentrant model
  9202 ;;
  9203                           
  9204                           
  9205                           ;psect for function _isSPI2read
  9206  0F3C                     _isSPI2read:	
  9207                           
  9208                           ;spiControl.c: 77: if(read_count2 == count2){
  9209                           
  9210                           ;incstack = 0
  9211                           ; Regs used in _isSPI2read: [wreg+status,2+status,0]
  9212  0F3C  0020               	movlb	0	; select bank0
  9213  0F3D  0869               	movf	_count2+1,w
  9214  0F3E  0663               	xorwf	_read_count2+1,w
  9215  0F3F  1D03               	skipz
  9216  0F40  2F43               	goto	u116_25
  9217  0F41  0868               	movf	_count2,w
  9218  0F42  0662               	xorwf	_read_count2,w
  9219  0F43                     u116_25:	
  9220  0F43  1D03               	skipz
  9221  0F44  2F47               	goto	i1l2111
  9222                           
  9223                           ;spiControl.c: 78: return 1;
  9224  0F45  1403               	setc
  9225                           
  9226                           ;spiControl.c: 79: }else{
  9227  0F46  0008               	return
  9228  0F47                     i1l2111:	
  9229                           
  9230                           ;spiControl.c: 80: return 0;
  9231  0F47  1003               	clrc
  9232  0F48  0008               	return
  9233  0F49                     __end_of_isSPI2read:	
  9234                           
  9235                           	psect	text33
  9236  0F24                     __ptext33:	
  9237 ;; *************** function _addAngle *****************
  9238 ;; Defined at:
  9239 ;;		line 29 in file "D:/programdata/16F18346_Link_IC.X/IO_control.c"
  9240 ;; Parameters:    Size  Location     Type
  9241 ;;		None
  9242 ;; Auto vars:     Size  Location     Type
  9243 ;;		None
  9244 ;; Return value:  Size  Location     Type
  9245 ;;                  1    wreg      void 
  9246 ;; Registers used:
  9247 ;;		wreg, status,2, status,0, pclath, cstack
  9248 ;; Tracked objects:
  9249 ;;		On entry : 0/0
  9250 ;;		On exit  : 0/0
  9251 ;;		Unchanged: 0/0
  9252 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9253 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9254 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9256 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9257 ;;Total ram usage:        0 bytes
  9258 ;; Hardware stack levels used:    1
  9259 ;; Hardware stack levels required when called:    1
  9260 ;; This function calls:
  9261 ;;		_setCargoAngle
  9262 ;; This function is called by:
  9263 ;;		_InterMSSP
  9264 ;; This function uses a non-reentrant model
  9265 ;;
  9266                           
  9267                           
  9268                           ;psect for function _addAngle
  9269  0F24                     _addAngle:	
  9270                           
  9271                           ;IO_control.c: 30: linkAngle += direction;
  9272                           
  9273                           ;incstack = 0
  9274                           ; Regs used in _addAngle: [wreg+status,2+status,0+pclath+cstack]
  9275  0F24  0021               	movlb	1	; select bank1
  9276  0F25  086B               	movf	_direction^(0+128),w
  9277  0F26  07DD               	addwf	_linkAngle^(0+128),f
  9278  0F27  086C               	movf	(_direction+1)^(0+128),w
  9279  0F28  3DDE               	addwfc	(_linkAngle+1)^(0+128),f
  9280                           
  9281                           ;IO_control.c: 31: setCargoAngle(linkAngle);
  9282  0F29  085E               	movf	(_linkAngle+1)^(0+128),w
  9283  0F2A  00F2               	movwf	setCargoAngle@m_linkAngleTo+1
  9284  0F2B  085D               	movf	_linkAngle^(0+128),w
  9285  0F2C  00F1               	movwf	setCargoAngle@m_linkAngleTo
  9286  0F2D  318E  26F0         	fcall	_setCargoAngle
  9287  0F2F  0008               	return
  9288  0F30                     __end_of_addAngle:	
  9289                           
  9290                           	psect	text34
  9291  0EF0                     __ptext34:	
  9292 ;; *************** function _setCargoAngle *****************
  9293 ;; Defined at:
  9294 ;;		line 41 in file "struct.c"
  9295 ;; Parameters:    Size  Location     Type
  9296 ;;  m_linkAngleT    2    0[COMMON] int 
  9297 ;; Auto vars:     Size  Location     Type
  9298 ;;		None
  9299 ;; Return value:  Size  Location     Type
  9300 ;;                  1    wreg      void 
  9301 ;; Registers used:
  9302 ;;		wreg
  9303 ;; Tracked objects:
  9304 ;;		On entry : 0/0
  9305 ;;		On exit  : 0/0
  9306 ;;		Unchanged: 0/0
  9307 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9308 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9309 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9310 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9311 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9312 ;;Total ram usage:        2 bytes
  9313 ;; Hardware stack levels used:    1
  9314 ;; This function calls:
  9315 ;;		Nothing
  9316 ;; This function is called by:
  9317 ;;		_addAngle
  9318 ;; This function uses a non-reentrant model
  9319 ;;
  9320                           
  9321                           
  9322                           ;psect for function _setCargoAngle
  9323  0EF0                     _setCargoAngle:	
  9324                           
  9325                           ;struct.c: 42: cargoData.linkAngleTo = m_linkAngleTo;
  9326                           
  9327                           ;incstack = 0
  9328                           ; Regs used in _setCargoAngle: [wreg]
  9329  0EF0  0872               	movf	setCargoAngle@m_linkAngleTo+1,w
  9330  0EF1  0020               	movlb	0	; select bank0
  9331  0EF2  00D8               	movwf	_cargoData+6
  9332  0EF3  0871               	movf	setCargoAngle@m_linkAngleTo,w
  9333  0EF4  00D7               	movwf	_cargoData+5
  9334  0EF5  0008               	return
  9335  0EF6                     __end_of_setCargoAngle:	
  9336  007E                     btemp	set	126	;btemp
  9337  007E                     int$flags	set	126
  9338  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    4
    Data        5
    BSS         122
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     50      79
    BANK1            80      0      79
    BANK2            80     10      28
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           64      0       0
    BANK16            0      0       0
    BANK17            0      0       0
    BANK18            0      0       0
    BANK19            0      0       0
    BANK20            0      0       0
    BANK21            0      0       0
    BANK22            0      0       0
    BANK23            0      0       0
    BANK24            0      0       0
    BANK25            0      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _InterMSSP in COMMON

    _InterMSSP->_setSPI1sendData
    _addAngle->_setCargoAngle

Critical Paths under _main in BANK0

    _main->_setComunicateMode
    _spi_init->_spi1_init
    _spi_init->_spi2_init
    _setComunicateMode->_Calibrate_download
    _setComunicateMode->_readCargo
    _readCargo->_TransLong256To255
    _Calibrate_download->_TransLong256To255
    _isEndpoint->_setSPI1sendDataManual
    _TransLong256To255->___aldiv
    _InitCalibrate->_getCargoData
    _initTrain->_isTrainSt
    _init->_initbuffer

Critical Paths under _InterMSSP in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _InterMSSP in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_setComunicateMode
    _setComunicateMode->_Calibrate_download
    _setComunicateMode->_readCargo

Critical Paths under _InterMSSP in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterMSSP in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _InterMSSP in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _InterMSSP in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _InterMSSP in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _InterMSSP in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _InterMSSP in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _InterMSSP in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _InterMSSP in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _InterMSSP in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _InterMSSP in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _InterMSSP in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _InterMSSP in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _InterMSSP in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _InterMSSP in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _InterMSSP in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _InterMSSP in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _InterMSSP in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _InterMSSP in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _InterMSSP in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _InterMSSP in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _InterMSSP in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _InterMSSP in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _InterMSSP in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    5914
                      _InitCalibrate
                               _init
                          _initCargo
                         _initComand
                     _initComu_types
                          _initTrain
                            _io_init
                         _isSPI1read
                         _read_train
                  _setComunicateMode
                    _setSPI2sendData
                           _spi_init
 ---------------------------------------------------------------------------------
 (1) _spi_init                                             0     0      0       6
                          _spi1_init
                          _spi2_init
 ---------------------------------------------------------------------------------
 (2) _spi2_init                                            2     2      0       3
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _spi1_init                                            2     2      0       3
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _setSPI2sendData                                      4     4      0       0
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _setComunicateMode                                    4     4      0    5642
                                             49 BANK0      1     1      0
                                              7 BANK2      3     3      0
                 _Calibrate_download
                          _readCargo
 ---------------------------------------------------------------------------------
 (2) _readCargo                                           13    13      0    2654
                                             43 BANK0      6     6      0
                                              0 BANK2      7     7      0
                  _TransLong256To255
                       _clutchaction
                       _getCargoData
                       _restartCargo
 ---------------------------------------------------------------------------------
 (3) _clutchaction                                         1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _Calibrate_download                                  13    13      0    2827
                                             43 BANK0      6     6      0
                                              0 BANK2      7     7      0
                      _InitCalibrate
                  _TransLong256To255
                         _isEndpoint
 ---------------------------------------------------------------------------------
 (3) _isEndpoint                                           6     6      0      71
                                              1 BANK0      6     6      0
              _setSPI1sendDataManual
 ---------------------------------------------------------------------------------
 (4) _setSPI1sendDataManual                                1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _TransLong256To255                                   28    24      4    2369
                                             15 BANK0     28    24      4
                            ___aldiv
                            ___almod
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8     266
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (4) ___almod                                             11     3      8     563
                                              0 BANK0     11     3      8
 ---------------------------------------------------------------------------------
 (4) ___aldiv                                             15     7      8     575
                                              0 BANK0     15     7      8
 ---------------------------------------------------------------------------------
 (3) _InitCalibrate                                       17    17      0      40
                                             17 BANK0     17    17      0
                       _getCargoData
 ---------------------------------------------------------------------------------
 (3) _getCargoData                                        17     1     16       0
                                              0 BANK0     17     1     16
 ---------------------------------------------------------------------------------
 (1) _read_train                                           4     4      0      65
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _isSPI1read                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _io_init                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initTrain                                            3     3      0      31
                                             11 BANK0      3     3      0
                          _isTrainSt
                     _resetTrainData
 ---------------------------------------------------------------------------------
 (2) _resetTrainData                                       0     0      0       0
                       _restartCargo
 ---------------------------------------------------------------------------------
 (3) _restartCargo                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _isTrainSt                                           11    11      0      31
                                              0 BANK0     11    11      0
 ---------------------------------------------------------------------------------
 (1) _initComu_types                                       1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _initComand                                           1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _initCargo                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0     130
                              _clear
                         _initbuffer
 ---------------------------------------------------------------------------------
 (2) _initbuffer                                           4     4      0     130
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) _clear                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _InterMSSP                                            6     6      0      75
                                              2 COMMON     6     6      0
                           _addAngle
                    _setSPI1sendData
 ---------------------------------------------------------------------------------
 (6) _setSPI1sendData                                      2     2      0       0
                                              0 COMMON     2     2      0
                         _isSPI2read
 ---------------------------------------------------------------------------------
 (7) _isSPI2read                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _addAngle                                             0     0      0      75
                      _setCargoAngle
 ---------------------------------------------------------------------------------
 (7) _setCargoAngle                                        2     0      2      75
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _InitCalibrate
     _getCargoData
   _init
     _clear
     _initbuffer
   _initCargo
   _initComand
   _initComu_types
   _initTrain
     _isTrainSt
     _resetTrainData
       _restartCargo
   _io_init
   _isSPI1read
   _read_train
   _setComunicateMode
     _Calibrate_download
       _InitCalibrate
         _getCargoData
       _TransLong256To255
         ___aldiv
         ___almod
         ___lmul
       _isEndpoint
         _setSPI1sendDataManual
     _readCargo
       _TransLong256To255
         ___aldiv
         ___almod
         ___lmul
       _clutchaction
       _getCargoData
       _restartCargo
   _setSPI2sendData
   _spi_init
     _spi1_init
     _spi2_init

 _InterMSSP (ROOT)
   _addAngle
     _setCargoAngle
   _setSPI1sendData
     _isSPI2read

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       2       1       14.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      8       B       2       78.6%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     32      4F       5       98.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      4F       7       98.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      A      1C       9       35.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
ABS                  0      0      C5      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
DATA                 0      0      C5      28        0.0%
BANK11              50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITBANK12           50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12              50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITBANK13           50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13              50      0       0      33        0.0%
BITBANK14           50      0       0      34        0.0%
BANK14              50      0       0      35        0.0%
BITBANK15           50      0       0      36        0.0%
BANK15              40      0       0      37        0.0%
BITBANK16           50      0       0      38        0.0%
BANK16               0      0       0      39        0.0%
BITBANK17           50      0       0      40        0.0%
BANK17               0      0       0      41        0.0%
BITBANK18           50      0       0      42        0.0%
BANK18               0      0       0      43        0.0%
BITBANK19           50      0       0      44        0.0%
BANK19               0      0       0      45        0.0%
BITBANK20           50      0       0      46        0.0%
BANK20               0      0       0      47        0.0%
BITBANK21           50      0       0      48        0.0%
BANK21               0      0       0      49        0.0%
BITBANK22           50      0       0      50        0.0%
BANK22               0      0       0      51        0.0%
BITBANK23           50      0       0      52        0.0%
BANK23               0      0       0      53        0.0%
BITBANK24           50      0       0      54        0.0%
BANK24               0      0       0      55        0.0%
BITBANK25           20      0       0      56        0.0%
BANK25               0      0       0      57        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Wed Jun 06 20:08:10 2018

                  _InitCalibrate 0792                                pc 0002                      __CFG_CP$OFF 0000  
                 _cargoLengthnuf 00DB                              l134 0642                              l168 0696  
                            l370 0F21                              l429 02F6                              l438 02D3  
                            l439 02DB                              l473 06D4                              l760 0408  
                            l773 048A                     __CFG_CPD$OFF 0000                              wreg 0009  
        setComunicateMode@m_type 0139                             S3421 0800                             S3425 0820  
       Calibrate_download@bufint 0136                     __CFG_LVP$OFF 0000                             l3021 00DF  
                           l3023 00EA                             l3041 0120                             l3025 00FB  
                           l3201 06B6                             l3051 0131                             l3043 0122  
                           l3035 0119                             l3027 0102                             l3221 067E  
                           l3045 0124                             l3037 011C                             l3029 0109  
                           l3135 062C                             l3055 015B                             l3047 0126  
                           l3039 011E                             l3063 01B5                             l3207 06BA  
                           l3145 063D                             l3217 065D                             l3057 017C  
                           l3065 01C4                             l3209 06CE                             l3219 066B  
                           l3227 0685                             l3059 01A0                             l3237 0776  
                           l3183 0F61                             l2711 0712                             l3423 02EC  
                           l3417 06C0                             l3427 068B                             l2715 071C  
                           l3419 01BA                             l3267 0760                             l3259 0750  
                           l2741 0429                             l2733 0419                             l2821 0340  
                           l3197 06B2                             l3269 0763                             l2751 0457  
                           l2743 0437                             l2823 0348                             l2755 0462  
                           l2771 0497                             l2843 03E9                             l2835 0397  
                           l2819 0334                             l2845 03EE                             l2837 03C0  
                           l2759 0470                             l2791 04DE                             l2783 04C5  
                           l2777 049F                             l2865 0705                             l2961 0231  
                           l2953 020B                             l2891 060D                             l2779 04AD  
                           l2787 04D0                             l2859 06F2                             l2963 0239  
                           l2973 0279                             l2965 0243                             l2983 02DF  
                           l2975 029A                             l2959 021B                             l2977 02BE  
                           l2969 024E                             l2989 02E6                             u2030 00D8  
                           u2025 0306                             u2125 0649                             u2135 0F5D  
                           u1600 0F6E                             u2065 0154                             u2145 06A6  
                           u2075 0175                             u2085 0196                             u2095 01CF  
                           u1705 0438                             u1625 071D                             u1715 044C  
                           u1635 0724                             u1725 0458                             u1805 04BB  
                           u1815 04C6                             u1840 07B0                             u1685 042C  
                           u1935 07C9                             u1785 04A2                             u1865 0392  
                           u1955 05E2                             u1875 03AD                             u1885 03A1  
                           u1975 0272                             u1985 0293                             u1995 02B4  
                           _WPUA 020C                             _WPUB 020D                             _WPUC 020E  
                   __CFG_WRT$OFF 0000                    __CFG_FCMEN$ON 0000               TransLong256To255@i 0045  
             TransLong256To255@j 003B                    ?_clutchaction 0071                             _main 0739  
                           _init 0FD8                             fsr0h 0005                             fsr1h 0007  
                           indf0 0000                             fsr0l 0004                             indf1 0001  
                           fsr1l 0006                             btemp 007E                    __CFG_BOREN$ON 0000  
                           start 0060                    __CFG_CSWEN$ON 0000                   ?_InitCalibrate 0071  
                __end_of___aldiv 0479                  __end_of___almod 04E7                            ?_main 0071  
                          ?_init 0071                    __CFG_WDTE$OFF 0000                   __CFG_DEBUG$OFF 0000  
                          i1l112 004F                            i1l109 0030             __end_of_getCargoData 0F73  
                          _PORTA 000C                            _PORTB 000D                            _PORTC 000E  
                          _TRISA 008C                            _TRISB 008D                            _TRISC 008E  
             setComunicateMode@i 013A              ___lmul@multiplicand 0024   __size_of_setSPI1sendDataManual 0006  
  __end_of_setSPI1sendDataManual 0EFC                            _clear 0F49                  __end_of_io_init 0F05  
                 __pbitbssCOMMON 0380                   ??_clutchaction 0020                   __CFG_BORV$HIGH 0000  
                          status 0003                            wtemp0 007E                   __CFG_MCLRE$OFF 0000  
                __initialization 0062                     __end_of_main 0767                     __end_of_init 1000  
                         ??_main 0052                           ??_init 0024                           ?_clear 0071  
               __end_of_addAngle 0F30                           _ANSELA 018C                           _ANSELB 018D  
                         _ANSELC 018E                           _RA2PPS 0E92                           _RC2PPS 0EA2  
                         i1l2111 0F47                           _RB7PPS 0E9F                           i1l2257 0FD4  
                         i1l2449 0054                           u116_25 0F43         __size_of_setSPI1sendData 0023  
             __size_of_InterMSSP 005C                  ??_InitCalibrate 0031                __end_of_VENDER_ID 1004  
                 __CFG_PWRTE$OFF 0000         __size_of_setSPI2sendData 002B             TransLong256To255@buf 0047  
        __size_of_resetTrainData 000A             TransLong256To255@mod 003D             TransLong256To255@pow 0041  
    __size_of_Calibrate_download 012C                           ___lmul 0709                        ??___aldiv 0028  
                      ??___almod 0028                   __CFG_STVREN$ON 0000                           _count1 006A  
                         _count2 0068                           _readNG 00E7                           _readOK 00E8  
        __size_of_initComu_types 006D                        ??_io_init 0020                 __end_of_spi_init 0F19  
                    initbuffer@i 0022                     isTrainSt@buf 002A                     _ra3condision 0385  
        __end_of__initialization 00A4                   __pcstackCOMMON 0071                     __pidataBANK0 07FE  
                   __pidataBANK1 0EE7               __end_of_MACHINE_ID 1002                    __end_of_clear 0F56  
          __size_of_getCargoData 0010             __end_of_clutchaction 0F24                __end_of_InterMSSP 0060  
                __CFG_LPBOREN$ON 0000                          ??_clear 0020                       __pbssBANK0 0052  
                     __pbssBANK1 00A0                       __pbssBANK2 0120               __size_of_isTrainSt 004E  
            clutchaction@comannd 0020           InitCalibrate@cargoData 0032               __size_of_initCargo 0017  
             __size_of_readCargo 013D                  _startTrainBytes 00D7               __size_of_initTrain 0045  
                     _isSPI1read 0F56                       _isSPI2read 0F3C                     _getCargoData 0F63  
                     __pmaintext 0739               __size_of_spi1_init 0020               __size_of_spi2_init 0022  
                        ?___lmul 0020                  __CFG_PPS1WAY$ON 0000                ??_setSPI1sendData 0071  
                     __pintentry 0004  Calibrate_download@spi_Read_data 0138                        ?_addAngle 0071  
              ??_setSPI2sendData 0020                   ___lmul@product 0028              __CFG_RSTOSC$HFINT32 0000  
                     _isEndpoint 06D5                     _isCalibrated 0387           __size_of_setCargoAngle 0006  
                        _SSP1BUF 0211                          _SSP2BUF 0219                       _comu_types 00A0  
                 _resetTrainData 0F05                       _initComand 0554            TransLong256To255@data 002F  
                        ___aldiv 03F7                          ___almod 0479                        ?_spi_init 0071  
                __size_of___lmul 0030                       ??_addAngle 0073                __end_of_isTrainSt 060F  
                     _initbuffer 07BD                   _initComu_types 04E7               isEndpoint@spi2data 0026  
                        __ptext1 0F0F                          __ptext2 0F93                          __ptext3 0F73  
                        __ptext4 0767                          __ptext5 0697                          __ptext6 00A8  
                        __ptext7 0F19                          __ptext8 01E5                __end_of_initCargo 07FE  
                        __ptext9 06D5                       _read_train 0654                          _command 00B2  
              __end_of_readCargo 01E5                          _counta2 00E3                          _io_init 0EFC  
              __end_of_initTrain 0654                    ?_restartCargo 0071                 ___aldiv@dividend 0024  
                      _IOCAFbits 0393                        _IOCANbits 0392                        _IOCAPbits 0391  
              __end_of_spi1_init 0F93                __end_of_spi2_init 0FB5                          _st_type 006C  
                        clrloop0 0F31            _setSPI1sendDataManual 0EF6             end_of_initialization 00A4  
         __end_of_resetTrainData 0F0F                      ?_isSPI1read 0071                      ?_isSPI2read 0071  
                  _setCargoAngle 0EF0                 ___aldiv@quotient 002B            __size_of_clutchaction 000B  
                     ??_spi_init 0022                        _VENDER_ID 1002                 readCargo@buflong 0132  
         __end_of_initComu_types 0554                   spi1_init@dummy 0021                      ?_isEndpoint 0071  
                 ??_restartCargo 0020                  _SPI_OFFSET_BYTE 006E                        _TRISBbits 008D  
                      _TRISCbits 008E                 __CFG_FEXTOSC$OFF 0000                   spi2_init@dummy 0021  
                   _clutchaction 0F19                  ?_resetTrainData 0071       __end_of_Calibrate_download 0311  
                 ?_setCargoAngle 0071                      ?_initComand 0071            __end_of_InitCalibrate 07BD  
                ?_initComu_types 0071                   __end_of___lmul 0739                      ?_initbuffer 0071  
                    ?_read_train 0071              __size_of_isSPI1read 000D              __size_of_isSPI2read 000D  
                  __pbitnvCOMMON 03C8              start_initialization 0062           ?_setSPI1sendDataManual 0071  
                      _InterMSSP 0004                   _isEndPointTrig 03C8                  _setSPI1sendData 0FB5  
                _setSPI2sendData 0767              __size_of_isEndpoint 0034                _TransLong256To255 0311  
                       ??___lmul 0028               ?_TransLong256To255 002F                      __pdataBANK0 006E  
                    __pdataBANK1 00EB                _setComunicateMode 0697                __size_of_addAngle 000C  
             ?_setComunicateMode 0071              ??_TransLong256To255 0033                      __pbssBIGRAM 24F0  
                    __pbssCOMMON 007A                        ___latbits 0003                    __pcstackBANK0 0020  
                  __pcstackBANK2 0132                      _cargo_index 0120              ??_setComunicateMode 0051  
            __size_of_initComand 006D                       ?_InterMSSP 0071                        _calibdata 00C4  
            __size_of_initbuffer 002A                        _cargoData 0052                  ??_setCargoAngle 0073  
              _cargoWorkingCount 00D3              __size_of_read_train 0043        __end_of_TransLong256To255 03F7  
           __end_of_restartCargo 0EF0            _spi1_send_buffer_data 24F0        Calibrate_download@buflong 0132  
      __end_of_setComunicateMode 06D5                         ?___aldiv 0020                         ?___almod 0020  
                      _direction 00EB          readCargo@spi1_Read_data 0138                __size_of_spi_init 000A  
               ___almod@dividend 0024                        __pswtext1 0800                        __pswtext2 0820  
                      _isMycargo 0380                         ?_io_init 0071                        _isTrainSt 05C1  
                      _countabuf 0064                        _initCargo 07E7                        _readCargo 00A8  
                      _linkAngle 00DD          __end_of_setSPI1sendData 0FD8                        _initTrain 060F  
                 __size_of_clear 000D          __end_of_setSPI2sendData 0792                  ___aldiv@divisor 0020  
                      _spi1_init 0F73                        _spi2_init 0F93                  ___aldiv@counter 0029  
                       _LATAbits 010C                     ??_isSPI1read 0020                     ??_isSPI2read 0071  
                      clear_ram0 0F30       setCargoAngle@m_linkAngleTo 0071                         _PIE0bits 0090  
                       _PIE1bits 0091                         _PIE2bits 0092                        _send_data 00EA  
                       _PIR0bits 0010                         _PIR1bits 0011                         _PIR2bits 0012  
                readCargo@bufint 0136                     ??_isEndpoint 0021                       ?_isTrainSt 0071  
             __end_of_isSPI1read 0F63               __end_of_isSPI2read 0F49                       ?_initCargo 0071  
                  _SSP1SSPPSbits 0E22                       ?_readCargo 0071                       ?_initTrain 0071  
                    ??_InterMSSP 0073                ___lmul@multiplier 0020                    _SSP2SSPPSbits 0E1F  
               ??_resetTrainData 0020                       ?_spi1_init 0071                       ?_spi2_init 0071  
     __size_of_TransLong256To255 00E6                 ??_initComu_types 0020               __end_of_isEndpoint 0709  
                   ??_initComand 0020       __size_of_setComunicateMode 003E                 __size_of___aldiv 0082  
               __size_of___almod 006E                         _addAngle 0F24                     ??_initbuffer 0020  
               _spi1_buffer_data 26F0                     ??_read_train 0020               _Calibrate_download 01E5  
        ??_setSPI1sendDataManual 0020                   _workingcounta0 0384                   _workingcounta1 0383  
                 _workingcounta2 0382                   _workingcounta3 0381                 __size_of_io_init 0009  
                     _MACHINE_ID 1000                      _read_count1 0066                      _read_count2 0062  
            ?_Calibrate_download 0071                 ?_setSPI1sendData 0071                         __ptext10 0EF6  
                       __ptext11 0311                         __ptext20 060F                         __ptext12 0709  
                       __ptext21 0F05                         __ptext13 0479                         __ptext22 0EEB  
                       __ptext14 03F7                         __ptext31 0FB5                         __ptext23 05C1  
                       __ptext15 0792                         __ptext32 0F3C                         __ptext24 04E7  
                       __ptext16 0F63                         __ptext33 0F24                         __ptext25 0554  
                       __ptext17 0654                         __ptext34 0EF0                         __ptext26 07E7  
                       __ptext18 0F56                         __ptext27 0FD8                         __ptext19 0EFC  
                       __ptext28 07BD                         __ptext29 0F49                     _SSP1CON1bits 0215  
                   _SSP1CON3bits 0217               __end_of_initComand 05C1                 ?_setSPI2sendData 0071  
                   _SSP2CON1bits 021D                   _spi1_Read_data 007A                  ___almod@divisor 0020  
                   _SSP2CON3bits 021F                  ___almod@counter 0029            __size_of_restartCargo 0005  
                       _linkInfo 00CD                    __size_of_main 002E                    __size_of_init 0028  
             __end_of_initbuffer 07E7                    ?_getCargoData 0020                   _spi2_Read_data 00E9  
             __end_of_read_train 0697             ??_Calibrate_download 004B                      _isreadTrain 0386  
                       _spi_init 0F0F                         int$flags 007E                         _trainPos 00E5  
                 _spi2_Send_data 006D                     _SSP1STATbits 0214                 _spi2_buffer_data 25F0  
                   _SSP2STATbits 021C                    _st_dataLength 00ED                       _INLVLAbits 038C  
                     _INLVLBbits 038D                       _INLVLCbits 038E                      ??_isTrainSt 0020  
                    _OSCTUNEbits 091E                       _INTCONbits 000B                      ??_initCargo 0020  
                   _restartCargo 0EEB                      ??_readCargo 004B                      ??_initTrain 002B  
         __size_of_InitCalibrate 002B                      _send_count1 00DF                         intlevel1 0000  
                    ??_spi1_init 0020                      ??_spi2_init 0020                   ??_getCargoData 0030  
              __CFG_CLKOUTEN$OFF 0000                       _OSCFRQbits 091F       TransLong256To255@TransData 0037  
                  __pstringtext1 1000                    __pstringtext2 1002                     ___aldiv@sign 002A  
      setSPI1sendDataManual@data 0020                     ___almod@sign 002A                 read_train@bufint 0022  
                _spi1_send_count 00E1            __end_of_setCargoAngle 0EF6  

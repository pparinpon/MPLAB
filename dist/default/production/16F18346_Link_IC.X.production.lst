

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Fri Jun 01 18:04:44 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F18346
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	eeprom_data,global,class=EEDATA,space=3,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	idataBANK1,global,class=CODE,delta=2
     7                           	psect	stringtext1,global,class=STRCODE,delta=2
     8                           	psect	stringtext2,global,class=STRCODE,delta=2
     9                           	psect	bitnvCOMMON,global,bit,class=COMMON,space=1,delta=1
    10                           	psect	cinit,global,class=CODE,merge=1,delta=2
    11                           	psect	bitbssCOMMON,global,bit,class=COMMON,space=1,delta=1
    12                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    18                           	psect	clrtext,global,class=CODE,delta=2
    19                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    20                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    21                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    22                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    23                           	psect	text1,local,class=CODE,merge=1,delta=2
    24                           	psect	text2,local,class=CODE,merge=1,delta=2
    25                           	psect	text3,local,class=CODE,merge=1,delta=2
    26                           	psect	text4,local,class=CODE,merge=1,delta=2
    27                           	psect	text5,local,class=CODE,merge=1,delta=2
    28                           	psect	text6,local,class=CODE,merge=1,delta=2
    29                           	psect	swtext1,local,class=CONST,delta=2
    30                           	psect	text7,local,class=CODE,merge=1,delta=2
    31                           	psect	text8,local,class=CODE,merge=1,delta=2
    32                           	psect	swtext2,local,class=CONST,delta=2
    33                           	psect	text9,local,class=CODE,merge=1,delta=2
    34                           	psect	text10,local,class=CODE,merge=1,delta=2
    35                           	psect	text11,local,class=CODE,merge=1,delta=2
    36                           	psect	text12,local,class=CODE,merge=1,delta=2
    37                           	psect	text13,local,class=CODE,merge=1,delta=2
    38                           	psect	text14,local,class=CODE,merge=1,delta=2
    39                           	psect	text15,local,class=CODE,merge=1,delta=2
    40                           	psect	text16,local,class=CODE,merge=1,delta=2
    41                           	psect	text17,local,class=CODE,merge=1,delta=2
    42                           	psect	text18,local,class=CODE,merge=1,delta=2
    43                           	psect	text19,local,class=CODE,merge=1,delta=2
    44                           	psect	text20,local,class=CODE,merge=1,delta=2
    45                           	psect	text21,local,class=CODE,merge=1,delta=2
    46                           	psect	text22,local,class=CODE,merge=1,delta=2
    47                           	psect	text23,local,class=CODE,merge=1,delta=2
    48                           	psect	text24,local,class=CODE,merge=1,delta=2
    49                           	psect	text25,local,class=CODE,merge=1,delta=2
    50                           	psect	intentry,global,class=CODE,delta=2
    51                           	psect	text27,local,class=CODE,merge=1,delta=2
    52                           	psect	text28,local,class=CODE,merge=1,delta=2
    53                           	psect	text29,local,class=CODE,merge=1,delta=2
    54                           	psect	text30,local,class=CODE,merge=1,delta=2
    55                           	dabs	1,0xCA0,32
    56                           	dabs	1,0xC20,80
    57                           	dabs	1,0xBA0,80
    58                           	dabs	1,0xB30,64
    59                           	dabs	1,0xB20,16
    60                           	dabs	1,0xAA0,80
    61                           	dabs	1,0xA20,80
    62                           	dabs	1,0x9A0,80
    63                           	dabs	1,0x920,80
    64                           	dabs	1,0x8A0,80
    65                           	dabs	1,0x820,80
    66                           	dabs	1,0x7E0,16
    67                           	dabs	1,0x24F0,0,_spi1_send_buffer_data
    68                           	dabs	1,0x25F0,0,_spi2_buffer_data
    69                           	dabs	1,0x26F0,0,_spi1_buffer_data
    70                           	dabs	1,0x7E,2
    71  0000                     
    72                           ; Version 1.45
    73                           ; Generated 16/11/2017 GMT
    74                           ; 
    75                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    76                           ; All rights reserved.
    77                           ; 
    78                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    79                           ; 
    80                           ; Redistribution and use in source and binary forms, with or without modification, are
    81                           ; permitted provided that the following conditions are met:
    82                           ; 
    83                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    84                           ;        conditions and the following disclaimer.
    85                           ; 
    86                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    87                           ;        of conditions and the following disclaimer in the documentation and/or other
    88                           ;        materials provided with the distribution.
    89                           ; 
    90                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    91                           ;        software without specific prior written permission.
    92                           ; 
    93                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    94                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    95                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    96                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    97                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    98                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    99                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   100                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   101                           ; 
   102                           ; 
   103                           ; Code-generator required, PIC16F18346 Definitions
   104                           ; 
   105                           ; SFR Addresses
   106  0000                     	;# 
   107  0001                     	;# 
   108  0002                     	;# 
   109  0003                     	;# 
   110  0004                     	;# 
   111  0005                     	;# 
   112  0006                     	;# 
   113  0007                     	;# 
   114  0008                     	;# 
   115  0009                     	;# 
   116  000A                     	;# 
   117  000B                     	;# 
   118  000C                     	;# 
   119  000D                     	;# 
   120  000E                     	;# 
   121  0010                     	;# 
   122  0011                     	;# 
   123  0012                     	;# 
   124  0013                     	;# 
   125  0014                     	;# 
   126  0015                     	;# 
   127  0015                     	;# 
   128  0016                     	;# 
   129  0016                     	;# 
   130  0017                     	;# 
   131  0018                     	;# 
   132  0019                     	;# 
   133  0019                     	;# 
   134  001A                     	;# 
   135  001B                     	;# 
   136  001C                     	;# 
   137  001D                     	;# 
   138  001E                     	;# 
   139  001F                     	;# 
   140  008C                     	;# 
   141  008D                     	;# 
   142  008E                     	;# 
   143  0090                     	;# 
   144  0091                     	;# 
   145  0092                     	;# 
   146  0093                     	;# 
   147  0094                     	;# 
   148  0097                     	;# 
   149  009B                     	;# 
   150  009B                     	;# 
   151  009C                     	;# 
   152  009D                     	;# 
   153  009E                     	;# 
   154  009F                     	;# 
   155  010C                     	;# 
   156  010D                     	;# 
   157  010E                     	;# 
   158  0111                     	;# 
   159  0112                     	;# 
   160  0113                     	;# 
   161  0114                     	;# 
   162  0115                     	;# 
   163  0116                     	;# 
   164  0117                     	;# 
   165  0118                     	;# 
   166  0119                     	;# 
   167  018C                     	;# 
   168  018D                     	;# 
   169  018E                     	;# 
   170  0197                     	;# 
   171  0199                     	;# 
   172  0199                     	;# 
   173  0199                     	;# 
   174  019A                     	;# 
   175  019A                     	;# 
   176  019A                     	;# 
   177  019B                     	;# 
   178  019B                     	;# 
   179  019B                     	;# 
   180  019B                     	;# 
   181  019B                     	;# 
   182  019C                     	;# 
   183  019C                     	;# 
   184  019C                     	;# 
   185  019D                     	;# 
   186  019D                     	;# 
   187  019D                     	;# 
   188  019E                     	;# 
   189  019E                     	;# 
   190  019E                     	;# 
   191  019F                     	;# 
   192  019F                     	;# 
   193  019F                     	;# 
   194  019F                     	;# 
   195  019F                     	;# 
   196  020C                     	;# 
   197  020D                     	;# 
   198  020E                     	;# 
   199  0211                     	;# 
   200  0211                     	;# 
   201  0212                     	;# 
   202  0212                     	;# 
   203  0213                     	;# 
   204  0213                     	;# 
   205  0214                     	;# 
   206  0214                     	;# 
   207  0215                     	;# 
   208  0215                     	;# 
   209  0215                     	;# 
   210  0215                     	;# 
   211  0216                     	;# 
   212  0216                     	;# 
   213  0217                     	;# 
   214  0217                     	;# 
   215  0219                     	;# 
   216  021A                     	;# 
   217  021B                     	;# 
   218  021C                     	;# 
   219  021D                     	;# 
   220  021D                     	;# 
   221  021E                     	;# 
   222  021F                     	;# 
   223  028C                     	;# 
   224  028D                     	;# 
   225  028E                     	;# 
   226  0291                     	;# 
   227  0291                     	;# 
   228  0292                     	;# 
   229  0293                     	;# 
   230  0294                     	;# 
   231  0295                     	;# 
   232  0295                     	;# 
   233  0296                     	;# 
   234  0297                     	;# 
   235  0298                     	;# 
   236  029F                     	;# 
   237  030C                     	;# 
   238  030D                     	;# 
   239  030E                     	;# 
   240  0311                     	;# 
   241  0311                     	;# 
   242  0312                     	;# 
   243  0313                     	;# 
   244  0314                     	;# 
   245  0315                     	;# 
   246  0315                     	;# 
   247  0316                     	;# 
   248  0317                     	;# 
   249  0318                     	;# 
   250  038C                     	;# 
   251  038D                     	;# 
   252  038E                     	;# 
   253  0391                     	;# 
   254  0392                     	;# 
   255  0393                     	;# 
   256  0394                     	;# 
   257  0395                     	;# 
   258  0396                     	;# 
   259  0397                     	;# 
   260  0398                     	;# 
   261  0399                     	;# 
   262  039A                     	;# 
   263  039C                     	;# 
   264  039D                     	;# 
   265  039E                     	;# 
   266  039F                     	;# 
   267  0411                     	;# 
   268  0411                     	;# 
   269  0412                     	;# 
   270  0413                     	;# 
   271  0414                     	;# 
   272  0415                     	;# 
   273  0416                     	;# 
   274  0417                     	;# 
   275  0418                     	;# 
   276  0418                     	;# 
   277  0419                     	;# 
   278  041A                     	;# 
   279  041B                     	;# 
   280  041C                     	;# 
   281  041D                     	;# 
   282  041E                     	;# 
   283  041F                     	;# 
   284  0498                     	;# 
   285  0498                     	;# 
   286  0499                     	;# 
   287  049A                     	;# 
   288  049B                     	;# 
   289  049B                     	;# 
   290  049C                     	;# 
   291  049D                     	;# 
   292  049E                     	;# 
   293  049F                     	;# 
   294  0617                     	;# 
   295  0618                     	;# 
   296  0619                     	;# 
   297  0619                     	;# 
   298  061A                     	;# 
   299  061B                     	;# 
   300  061C                     	;# 
   301  061C                     	;# 
   302  061F                     	;# 
   303  0691                     	;# 
   304  0692                     	;# 
   305  0693                     	;# 
   306  0694                     	;# 
   307  0695                     	;# 
   308  0696                     	;# 
   309  0697                     	;# 
   310  0698                     	;# 
   311  0699                     	;# 
   312  0711                     	;# 
   313  0712                     	;# 
   314  0713                     	;# 
   315  0714                     	;# 
   316  0715                     	;# 
   317  0716                     	;# 
   318  0717                     	;# 
   319  0718                     	;# 
   320  0719                     	;# 
   321  0891                     	;# 
   322  0891                     	;# 
   323  0891                     	;# 
   324  0891                     	;# 
   325  0891                     	;# 
   326  0891                     	;# 
   327  0892                     	;# 
   328  0892                     	;# 
   329  0892                     	;# 
   330  0893                     	;# 
   331  0893                     	;# 
   332  0893                     	;# 
   333  0893                     	;# 
   334  0893                     	;# 
   335  0893                     	;# 
   336  0894                     	;# 
   337  0894                     	;# 
   338  0894                     	;# 
   339  0895                     	;# 
   340  0895                     	;# 
   341  0895                     	;# 
   342  0896                     	;# 
   343  0896                     	;# 
   344  0896                     	;# 
   345  089B                     	;# 
   346  0911                     	;# 
   347  0912                     	;# 
   348  0913                     	;# 
   349  0914                     	;# 
   350  0915                     	;# 
   351  0916                     	;# 
   352  0918                     	;# 
   353  0919                     	;# 
   354  091A                     	;# 
   355  091B                     	;# 
   356  091C                     	;# 
   357  091D                     	;# 
   358  091E                     	;# 
   359  091F                     	;# 
   360  0E0F                     	;# 
   361  0E10                     	;# 
   362  0E11                     	;# 
   363  0E12                     	;# 
   364  0E13                     	;# 
   365  0E14                     	;# 
   366  0E15                     	;# 
   367  0E16                     	;# 
   368  0E17                     	;# 
   369  0E18                     	;# 
   370  0E19                     	;# 
   371  0E1A                     	;# 
   372  0E1B                     	;# 
   373  0E1C                     	;# 
   374  0E1D                     	;# 
   375  0E1E                     	;# 
   376  0E1F                     	;# 
   377  0E20                     	;# 
   378  0E21                     	;# 
   379  0E22                     	;# 
   380  0E24                     	;# 
   381  0E25                     	;# 
   382  0E28                     	;# 
   383  0E29                     	;# 
   384  0E2A                     	;# 
   385  0E2B                     	;# 
   386  0E2C                     	;# 
   387  0E2D                     	;# 
   388  0E2E                     	;# 
   389  0E2F                     	;# 
   390  0E90                     	;# 
   391  0E91                     	;# 
   392  0E92                     	;# 
   393  0E94                     	;# 
   394  0E95                     	;# 
   395  0E9C                     	;# 
   396  0E9D                     	;# 
   397  0E9E                     	;# 
   398  0E9F                     	;# 
   399  0EA0                     	;# 
   400  0EA1                     	;# 
   401  0EA2                     	;# 
   402  0EA3                     	;# 
   403  0EA4                     	;# 
   404  0EA5                     	;# 
   405  0EA6                     	;# 
   406  0EA7                     	;# 
   407  0F0F                     	;# 
   408  0F10                     	;# 
   409  0F11                     	;# 
   410  0F12                     	;# 
   411  0F13                     	;# 
   412  0F14                     	;# 
   413  0F15                     	;# 
   414  0F16                     	;# 
   415  0F17                     	;# 
   416  0F18                     	;# 
   417  0F19                     	;# 
   418  0F1A                     	;# 
   419  0F1B                     	;# 
   420  0F1C                     	;# 
   421  0F1D                     	;# 
   422  0F1E                     	;# 
   423  0F1F                     	;# 
   424  0F20                     	;# 
   425  0F21                     	;# 
   426  0F22                     	;# 
   427  0F23                     	;# 
   428  0F24                     	;# 
   429  0F25                     	;# 
   430  0F26                     	;# 
   431  0F27                     	;# 
   432  0F28                     	;# 
   433  0F29                     	;# 
   434  0F2A                     	;# 
   435  0F2B                     	;# 
   436  0F2C                     	;# 
   437  0F2D                     	;# 
   438  0F2E                     	;# 
   439  0F2F                     	;# 
   440  0F30                     	;# 
   441  0F31                     	;# 
   442  0F32                     	;# 
   443  0F33                     	;# 
   444  0F34                     	;# 
   445  0F35                     	;# 
   446  0F36                     	;# 
   447  0F37                     	;# 
   448  0FE4                     	;# 
   449  0FE5                     	;# 
   450  0FE6                     	;# 
   451  0FE7                     	;# 
   452  0FE8                     	;# 
   453  0FE9                     	;# 
   454  0FEA                     	;# 
   455  0FEB                     	;# 
   456  0FED                     	;# 
   457  0FEE                     	;# 
   458  0FEF                     	;# 
   459  0000                     	;# 
   460  0001                     	;# 
   461  0002                     	;# 
   462  0003                     	;# 
   463  0004                     	;# 
   464  0005                     	;# 
   465  0006                     	;# 
   466  0007                     	;# 
   467  0008                     	;# 
   468  0009                     	;# 
   469  000A                     	;# 
   470  000B                     	;# 
   471  000C                     	;# 
   472  000D                     	;# 
   473  000E                     	;# 
   474  0010                     	;# 
   475  0011                     	;# 
   476  0012                     	;# 
   477  0013                     	;# 
   478  0014                     	;# 
   479  0015                     	;# 
   480  0015                     	;# 
   481  0016                     	;# 
   482  0016                     	;# 
   483  0017                     	;# 
   484  0018                     	;# 
   485  0019                     	;# 
   486  0019                     	;# 
   487  001A                     	;# 
   488  001B                     	;# 
   489  001C                     	;# 
   490  001D                     	;# 
   491  001E                     	;# 
   492  001F                     	;# 
   493  008C                     	;# 
   494  008D                     	;# 
   495  008E                     	;# 
   496  0090                     	;# 
   497  0091                     	;# 
   498  0092                     	;# 
   499  0093                     	;# 
   500  0094                     	;# 
   501  0097                     	;# 
   502  009B                     	;# 
   503  009B                     	;# 
   504  009C                     	;# 
   505  009D                     	;# 
   506  009E                     	;# 
   507  009F                     	;# 
   508  010C                     	;# 
   509  010D                     	;# 
   510  010E                     	;# 
   511  0111                     	;# 
   512  0112                     	;# 
   513  0113                     	;# 
   514  0114                     	;# 
   515  0115                     	;# 
   516  0116                     	;# 
   517  0117                     	;# 
   518  0118                     	;# 
   519  0119                     	;# 
   520  018C                     	;# 
   521  018D                     	;# 
   522  018E                     	;# 
   523  0197                     	;# 
   524  0199                     	;# 
   525  0199                     	;# 
   526  0199                     	;# 
   527  019A                     	;# 
   528  019A                     	;# 
   529  019A                     	;# 
   530  019B                     	;# 
   531  019B                     	;# 
   532  019B                     	;# 
   533  019B                     	;# 
   534  019B                     	;# 
   535  019C                     	;# 
   536  019C                     	;# 
   537  019C                     	;# 
   538  019D                     	;# 
   539  019D                     	;# 
   540  019D                     	;# 
   541  019E                     	;# 
   542  019E                     	;# 
   543  019E                     	;# 
   544  019F                     	;# 
   545  019F                     	;# 
   546  019F                     	;# 
   547  019F                     	;# 
   548  019F                     	;# 
   549  020C                     	;# 
   550  020D                     	;# 
   551  020E                     	;# 
   552  0211                     	;# 
   553  0211                     	;# 
   554  0212                     	;# 
   555  0212                     	;# 
   556  0213                     	;# 
   557  0213                     	;# 
   558  0214                     	;# 
   559  0214                     	;# 
   560  0215                     	;# 
   561  0215                     	;# 
   562  0215                     	;# 
   563  0215                     	;# 
   564  0216                     	;# 
   565  0216                     	;# 
   566  0217                     	;# 
   567  0217                     	;# 
   568  0219                     	;# 
   569  021A                     	;# 
   570  021B                     	;# 
   571  021C                     	;# 
   572  021D                     	;# 
   573  021D                     	;# 
   574  021E                     	;# 
   575  021F                     	;# 
   576  028C                     	;# 
   577  028D                     	;# 
   578  028E                     	;# 
   579  0291                     	;# 
   580  0291                     	;# 
   581  0292                     	;# 
   582  0293                     	;# 
   583  0294                     	;# 
   584  0295                     	;# 
   585  0295                     	;# 
   586  0296                     	;# 
   587  0297                     	;# 
   588  0298                     	;# 
   589  029F                     	;# 
   590  030C                     	;# 
   591  030D                     	;# 
   592  030E                     	;# 
   593  0311                     	;# 
   594  0311                     	;# 
   595  0312                     	;# 
   596  0313                     	;# 
   597  0314                     	;# 
   598  0315                     	;# 
   599  0315                     	;# 
   600  0316                     	;# 
   601  0317                     	;# 
   602  0318                     	;# 
   603  038C                     	;# 
   604  038D                     	;# 
   605  038E                     	;# 
   606  0391                     	;# 
   607  0392                     	;# 
   608  0393                     	;# 
   609  0394                     	;# 
   610  0395                     	;# 
   611  0396                     	;# 
   612  0397                     	;# 
   613  0398                     	;# 
   614  0399                     	;# 
   615  039A                     	;# 
   616  039C                     	;# 
   617  039D                     	;# 
   618  039E                     	;# 
   619  039F                     	;# 
   620  0411                     	;# 
   621  0411                     	;# 
   622  0412                     	;# 
   623  0413                     	;# 
   624  0414                     	;# 
   625  0415                     	;# 
   626  0416                     	;# 
   627  0417                     	;# 
   628  0418                     	;# 
   629  0418                     	;# 
   630  0419                     	;# 
   631  041A                     	;# 
   632  041B                     	;# 
   633  041C                     	;# 
   634  041D                     	;# 
   635  041E                     	;# 
   636  041F                     	;# 
   637  0498                     	;# 
   638  0498                     	;# 
   639  0499                     	;# 
   640  049A                     	;# 
   641  049B                     	;# 
   642  049B                     	;# 
   643  049C                     	;# 
   644  049D                     	;# 
   645  049E                     	;# 
   646  049F                     	;# 
   647  0617                     	;# 
   648  0618                     	;# 
   649  0619                     	;# 
   650  0619                     	;# 
   651  061A                     	;# 
   652  061B                     	;# 
   653  061C                     	;# 
   654  061C                     	;# 
   655  061F                     	;# 
   656  0691                     	;# 
   657  0692                     	;# 
   658  0693                     	;# 
   659  0694                     	;# 
   660  0695                     	;# 
   661  0696                     	;# 
   662  0697                     	;# 
   663  0698                     	;# 
   664  0699                     	;# 
   665  0711                     	;# 
   666  0712                     	;# 
   667  0713                     	;# 
   668  0714                     	;# 
   669  0715                     	;# 
   670  0716                     	;# 
   671  0717                     	;# 
   672  0718                     	;# 
   673  0719                     	;# 
   674  0891                     	;# 
   675  0891                     	;# 
   676  0891                     	;# 
   677  0891                     	;# 
   678  0891                     	;# 
   679  0891                     	;# 
   680  0892                     	;# 
   681  0892                     	;# 
   682  0892                     	;# 
   683  0893                     	;# 
   684  0893                     	;# 
   685  0893                     	;# 
   686  0893                     	;# 
   687  0893                     	;# 
   688  0893                     	;# 
   689  0894                     	;# 
   690  0894                     	;# 
   691  0894                     	;# 
   692  0895                     	;# 
   693  0895                     	;# 
   694  0895                     	;# 
   695  0896                     	;# 
   696  0896                     	;# 
   697  0896                     	;# 
   698  089B                     	;# 
   699  0911                     	;# 
   700  0912                     	;# 
   701  0913                     	;# 
   702  0914                     	;# 
   703  0915                     	;# 
   704  0916                     	;# 
   705  0918                     	;# 
   706  0919                     	;# 
   707  091A                     	;# 
   708  091B                     	;# 
   709  091C                     	;# 
   710  091D                     	;# 
   711  091E                     	;# 
   712  091F                     	;# 
   713  0E0F                     	;# 
   714  0E10                     	;# 
   715  0E11                     	;# 
   716  0E12                     	;# 
   717  0E13                     	;# 
   718  0E14                     	;# 
   719  0E15                     	;# 
   720  0E16                     	;# 
   721  0E17                     	;# 
   722  0E18                     	;# 
   723  0E19                     	;# 
   724  0E1A                     	;# 
   725  0E1B                     	;# 
   726  0E1C                     	;# 
   727  0E1D                     	;# 
   728  0E1E                     	;# 
   729  0E1F                     	;# 
   730  0E20                     	;# 
   731  0E21                     	;# 
   732  0E22                     	;# 
   733  0E24                     	;# 
   734  0E25                     	;# 
   735  0E28                     	;# 
   736  0E29                     	;# 
   737  0E2A                     	;# 
   738  0E2B                     	;# 
   739  0E2C                     	;# 
   740  0E2D                     	;# 
   741  0E2E                     	;# 
   742  0E2F                     	;# 
   743  0E90                     	;# 
   744  0E91                     	;# 
   745  0E92                     	;# 
   746  0E94                     	;# 
   747  0E95                     	;# 
   748  0E9C                     	;# 
   749  0E9D                     	;# 
   750  0E9E                     	;# 
   751  0E9F                     	;# 
   752  0EA0                     	;# 
   753  0EA1                     	;# 
   754  0EA2                     	;# 
   755  0EA3                     	;# 
   756  0EA4                     	;# 
   757  0EA5                     	;# 
   758  0EA6                     	;# 
   759  0EA7                     	;# 
   760  0F0F                     	;# 
   761  0F10                     	;# 
   762  0F11                     	;# 
   763  0F12                     	;# 
   764  0F13                     	;# 
   765  0F14                     	;# 
   766  0F15                     	;# 
   767  0F16                     	;# 
   768  0F17                     	;# 
   769  0F18                     	;# 
   770  0F19                     	;# 
   771  0F1A                     	;# 
   772  0F1B                     	;# 
   773  0F1C                     	;# 
   774  0F1D                     	;# 
   775  0F1E                     	;# 
   776  0F1F                     	;# 
   777  0F20                     	;# 
   778  0F21                     	;# 
   779  0F22                     	;# 
   780  0F23                     	;# 
   781  0F24                     	;# 
   782  0F25                     	;# 
   783  0F26                     	;# 
   784  0F27                     	;# 
   785  0F28                     	;# 
   786  0F29                     	;# 
   787  0F2A                     	;# 
   788  0F2B                     	;# 
   789  0F2C                     	;# 
   790  0F2D                     	;# 
   791  0F2E                     	;# 
   792  0F2F                     	;# 
   793  0F30                     	;# 
   794  0F31                     	;# 
   795  0F32                     	;# 
   796  0F33                     	;# 
   797  0F34                     	;# 
   798  0F35                     	;# 
   799  0F36                     	;# 
   800  0F37                     	;# 
   801  0FE4                     	;# 
   802  0FE5                     	;# 
   803  0FE6                     	;# 
   804  0FE7                     	;# 
   805  0FE8                     	;# 
   806  0FE9                     	;# 
   807  0FEA                     	;# 
   808  0FEB                     	;# 
   809  0FED                     	;# 
   810  0FEE                     	;# 
   811  0FEF                     	;# 
   812  0000                     	;# 
   813  0001                     	;# 
   814  0002                     	;# 
   815  0003                     	;# 
   816  0004                     	;# 
   817  0005                     	;# 
   818  0006                     	;# 
   819  0007                     	;# 
   820  0008                     	;# 
   821  0009                     	;# 
   822  000A                     	;# 
   823  000B                     	;# 
   824  000C                     	;# 
   825  000D                     	;# 
   826  000E                     	;# 
   827  0010                     	;# 
   828  0011                     	;# 
   829  0012                     	;# 
   830  0013                     	;# 
   831  0014                     	;# 
   832  0015                     	;# 
   833  0015                     	;# 
   834  0016                     	;# 
   835  0016                     	;# 
   836  0017                     	;# 
   837  0018                     	;# 
   838  0019                     	;# 
   839  0019                     	;# 
   840  001A                     	;# 
   841  001B                     	;# 
   842  001C                     	;# 
   843  001D                     	;# 
   844  001E                     	;# 
   845  001F                     	;# 
   846  008C                     	;# 
   847  008D                     	;# 
   848  008E                     	;# 
   849  0090                     	;# 
   850  0091                     	;# 
   851  0092                     	;# 
   852  0093                     	;# 
   853  0094                     	;# 
   854  0097                     	;# 
   855  009B                     	;# 
   856  009B                     	;# 
   857  009C                     	;# 
   858  009D                     	;# 
   859  009E                     	;# 
   860  009F                     	;# 
   861  010C                     	;# 
   862  010D                     	;# 
   863  010E                     	;# 
   864  0111                     	;# 
   865  0112                     	;# 
   866  0113                     	;# 
   867  0114                     	;# 
   868  0115                     	;# 
   869  0116                     	;# 
   870  0117                     	;# 
   871  0118                     	;# 
   872  0119                     	;# 
   873  018C                     	;# 
   874  018D                     	;# 
   875  018E                     	;# 
   876  0197                     	;# 
   877  0199                     	;# 
   878  0199                     	;# 
   879  0199                     	;# 
   880  019A                     	;# 
   881  019A                     	;# 
   882  019A                     	;# 
   883  019B                     	;# 
   884  019B                     	;# 
   885  019B                     	;# 
   886  019B                     	;# 
   887  019B                     	;# 
   888  019C                     	;# 
   889  019C                     	;# 
   890  019C                     	;# 
   891  019D                     	;# 
   892  019D                     	;# 
   893  019D                     	;# 
   894  019E                     	;# 
   895  019E                     	;# 
   896  019E                     	;# 
   897  019F                     	;# 
   898  019F                     	;# 
   899  019F                     	;# 
   900  019F                     	;# 
   901  019F                     	;# 
   902  020C                     	;# 
   903  020D                     	;# 
   904  020E                     	;# 
   905  0211                     	;# 
   906  0211                     	;# 
   907  0212                     	;# 
   908  0212                     	;# 
   909  0213                     	;# 
   910  0213                     	;# 
   911  0214                     	;# 
   912  0214                     	;# 
   913  0215                     	;# 
   914  0215                     	;# 
   915  0215                     	;# 
   916  0215                     	;# 
   917  0216                     	;# 
   918  0216                     	;# 
   919  0217                     	;# 
   920  0217                     	;# 
   921  0219                     	;# 
   922  021A                     	;# 
   923  021B                     	;# 
   924  021C                     	;# 
   925  021D                     	;# 
   926  021D                     	;# 
   927  021E                     	;# 
   928  021F                     	;# 
   929  028C                     	;# 
   930  028D                     	;# 
   931  028E                     	;# 
   932  0291                     	;# 
   933  0291                     	;# 
   934  0292                     	;# 
   935  0293                     	;# 
   936  0294                     	;# 
   937  0295                     	;# 
   938  0295                     	;# 
   939  0296                     	;# 
   940  0297                     	;# 
   941  0298                     	;# 
   942  029F                     	;# 
   943  030C                     	;# 
   944  030D                     	;# 
   945  030E                     	;# 
   946  0311                     	;# 
   947  0311                     	;# 
   948  0312                     	;# 
   949  0313                     	;# 
   950  0314                     	;# 
   951  0315                     	;# 
   952  0315                     	;# 
   953  0316                     	;# 
   954  0317                     	;# 
   955  0318                     	;# 
   956  038C                     	;# 
   957  038D                     	;# 
   958  038E                     	;# 
   959  0391                     	;# 
   960  0392                     	;# 
   961  0393                     	;# 
   962  0394                     	;# 
   963  0395                     	;# 
   964  0396                     	;# 
   965  0397                     	;# 
   966  0398                     	;# 
   967  0399                     	;# 
   968  039A                     	;# 
   969  039C                     	;# 
   970  039D                     	;# 
   971  039E                     	;# 
   972  039F                     	;# 
   973  0411                     	;# 
   974  0411                     	;# 
   975  0412                     	;# 
   976  0413                     	;# 
   977  0414                     	;# 
   978  0415                     	;# 
   979  0416                     	;# 
   980  0417                     	;# 
   981  0418                     	;# 
   982  0418                     	;# 
   983  0419                     	;# 
   984  041A                     	;# 
   985  041B                     	;# 
   986  041C                     	;# 
   987  041D                     	;# 
   988  041E                     	;# 
   989  041F                     	;# 
   990  0498                     	;# 
   991  0498                     	;# 
   992  0499                     	;# 
   993  049A                     	;# 
   994  049B                     	;# 
   995  049B                     	;# 
   996  049C                     	;# 
   997  049D                     	;# 
   998  049E                     	;# 
   999  049F                     	;# 
  1000  0617                     	;# 
  1001  0618                     	;# 
  1002  0619                     	;# 
  1003  0619                     	;# 
  1004  061A                     	;# 
  1005  061B                     	;# 
  1006  061C                     	;# 
  1007  061C                     	;# 
  1008  061F                     	;# 
  1009  0691                     	;# 
  1010  0692                     	;# 
  1011  0693                     	;# 
  1012  0694                     	;# 
  1013  0695                     	;# 
  1014  0696                     	;# 
  1015  0697                     	;# 
  1016  0698                     	;# 
  1017  0699                     	;# 
  1018  0711                     	;# 
  1019  0712                     	;# 
  1020  0713                     	;# 
  1021  0714                     	;# 
  1022  0715                     	;# 
  1023  0716                     	;# 
  1024  0717                     	;# 
  1025  0718                     	;# 
  1026  0719                     	;# 
  1027  0891                     	;# 
  1028  0891                     	;# 
  1029  0891                     	;# 
  1030  0891                     	;# 
  1031  0891                     	;# 
  1032  0891                     	;# 
  1033  0892                     	;# 
  1034  0892                     	;# 
  1035  0892                     	;# 
  1036  0893                     	;# 
  1037  0893                     	;# 
  1038  0893                     	;# 
  1039  0893                     	;# 
  1040  0893                     	;# 
  1041  0893                     	;# 
  1042  0894                     	;# 
  1043  0894                     	;# 
  1044  0894                     	;# 
  1045  0895                     	;# 
  1046  0895                     	;# 
  1047  0895                     	;# 
  1048  0896                     	;# 
  1049  0896                     	;# 
  1050  0896                     	;# 
  1051  089B                     	;# 
  1052  0911                     	;# 
  1053  0912                     	;# 
  1054  0913                     	;# 
  1055  0914                     	;# 
  1056  0915                     	;# 
  1057  0916                     	;# 
  1058  0918                     	;# 
  1059  0919                     	;# 
  1060  091A                     	;# 
  1061  091B                     	;# 
  1062  091C                     	;# 
  1063  091D                     	;# 
  1064  091E                     	;# 
  1065  091F                     	;# 
  1066  0E0F                     	;# 
  1067  0E10                     	;# 
  1068  0E11                     	;# 
  1069  0E12                     	;# 
  1070  0E13                     	;# 
  1071  0E14                     	;# 
  1072  0E15                     	;# 
  1073  0E16                     	;# 
  1074  0E17                     	;# 
  1075  0E18                     	;# 
  1076  0E19                     	;# 
  1077  0E1A                     	;# 
  1078  0E1B                     	;# 
  1079  0E1C                     	;# 
  1080  0E1D                     	;# 
  1081  0E1E                     	;# 
  1082  0E1F                     	;# 
  1083  0E20                     	;# 
  1084  0E21                     	;# 
  1085  0E22                     	;# 
  1086  0E24                     	;# 
  1087  0E25                     	;# 
  1088  0E28                     	;# 
  1089  0E29                     	;# 
  1090  0E2A                     	;# 
  1091  0E2B                     	;# 
  1092  0E2C                     	;# 
  1093  0E2D                     	;# 
  1094  0E2E                     	;# 
  1095  0E2F                     	;# 
  1096  0E90                     	;# 
  1097  0E91                     	;# 
  1098  0E92                     	;# 
  1099  0E94                     	;# 
  1100  0E95                     	;# 
  1101  0E9C                     	;# 
  1102  0E9D                     	;# 
  1103  0E9E                     	;# 
  1104  0E9F                     	;# 
  1105  0EA0                     	;# 
  1106  0EA1                     	;# 
  1107  0EA2                     	;# 
  1108  0EA3                     	;# 
  1109  0EA4                     	;# 
  1110  0EA5                     	;# 
  1111  0EA6                     	;# 
  1112  0EA7                     	;# 
  1113  0F0F                     	;# 
  1114  0F10                     	;# 
  1115  0F11                     	;# 
  1116  0F12                     	;# 
  1117  0F13                     	;# 
  1118  0F14                     	;# 
  1119  0F15                     	;# 
  1120  0F16                     	;# 
  1121  0F17                     	;# 
  1122  0F18                     	;# 
  1123  0F19                     	;# 
  1124  0F1A                     	;# 
  1125  0F1B                     	;# 
  1126  0F1C                     	;# 
  1127  0F1D                     	;# 
  1128  0F1E                     	;# 
  1129  0F1F                     	;# 
  1130  0F20                     	;# 
  1131  0F21                     	;# 
  1132  0F22                     	;# 
  1133  0F23                     	;# 
  1134  0F24                     	;# 
  1135  0F25                     	;# 
  1136  0F26                     	;# 
  1137  0F27                     	;# 
  1138  0F28                     	;# 
  1139  0F29                     	;# 
  1140  0F2A                     	;# 
  1141  0F2B                     	;# 
  1142  0F2C                     	;# 
  1143  0F2D                     	;# 
  1144  0F2E                     	;# 
  1145  0F2F                     	;# 
  1146  0F30                     	;# 
  1147  0F31                     	;# 
  1148  0F32                     	;# 
  1149  0F33                     	;# 
  1150  0F34                     	;# 
  1151  0F35                     	;# 
  1152  0F36                     	;# 
  1153  0F37                     	;# 
  1154  0FE4                     	;# 
  1155  0FE5                     	;# 
  1156  0FE6                     	;# 
  1157  0FE7                     	;# 
  1158  0FE8                     	;# 
  1159  0FE9                     	;# 
  1160  0FEA                     	;# 
  1161  0FEB                     	;# 
  1162  0FED                     	;# 
  1163  0FEE                     	;# 
  1164  0FEF                     	;# 
  1165  0000                     	;# 
  1166  0001                     	;# 
  1167  0002                     	;# 
  1168  0003                     	;# 
  1169  0004                     	;# 
  1170  0005                     	;# 
  1171  0006                     	;# 
  1172  0007                     	;# 
  1173  0008                     	;# 
  1174  0009                     	;# 
  1175  000A                     	;# 
  1176  000B                     	;# 
  1177  000C                     	;# 
  1178  000D                     	;# 
  1179  000E                     	;# 
  1180  0010                     	;# 
  1181  0011                     	;# 
  1182  0012                     	;# 
  1183  0013                     	;# 
  1184  0014                     	;# 
  1185  0015                     	;# 
  1186  0015                     	;# 
  1187  0016                     	;# 
  1188  0016                     	;# 
  1189  0017                     	;# 
  1190  0018                     	;# 
  1191  0019                     	;# 
  1192  0019                     	;# 
  1193  001A                     	;# 
  1194  001B                     	;# 
  1195  001C                     	;# 
  1196  001D                     	;# 
  1197  001E                     	;# 
  1198  001F                     	;# 
  1199  008C                     	;# 
  1200  008D                     	;# 
  1201  008E                     	;# 
  1202  0090                     	;# 
  1203  0091                     	;# 
  1204  0092                     	;# 
  1205  0093                     	;# 
  1206  0094                     	;# 
  1207  0097                     	;# 
  1208  009B                     	;# 
  1209  009B                     	;# 
  1210  009C                     	;# 
  1211  009D                     	;# 
  1212  009E                     	;# 
  1213  009F                     	;# 
  1214  010C                     	;# 
  1215  010D                     	;# 
  1216  010E                     	;# 
  1217  0111                     	;# 
  1218  0112                     	;# 
  1219  0113                     	;# 
  1220  0114                     	;# 
  1221  0115                     	;# 
  1222  0116                     	;# 
  1223  0117                     	;# 
  1224  0118                     	;# 
  1225  0119                     	;# 
  1226  018C                     	;# 
  1227  018D                     	;# 
  1228  018E                     	;# 
  1229  0197                     	;# 
  1230  0199                     	;# 
  1231  0199                     	;# 
  1232  0199                     	;# 
  1233  019A                     	;# 
  1234  019A                     	;# 
  1235  019A                     	;# 
  1236  019B                     	;# 
  1237  019B                     	;# 
  1238  019B                     	;# 
  1239  019B                     	;# 
  1240  019B                     	;# 
  1241  019C                     	;# 
  1242  019C                     	;# 
  1243  019C                     	;# 
  1244  019D                     	;# 
  1245  019D                     	;# 
  1246  019D                     	;# 
  1247  019E                     	;# 
  1248  019E                     	;# 
  1249  019E                     	;# 
  1250  019F                     	;# 
  1251  019F                     	;# 
  1252  019F                     	;# 
  1253  019F                     	;# 
  1254  019F                     	;# 
  1255  020C                     	;# 
  1256  020D                     	;# 
  1257  020E                     	;# 
  1258  0211                     	;# 
  1259  0211                     	;# 
  1260  0212                     	;# 
  1261  0212                     	;# 
  1262  0213                     	;# 
  1263  0213                     	;# 
  1264  0214                     	;# 
  1265  0214                     	;# 
  1266  0215                     	;# 
  1267  0215                     	;# 
  1268  0215                     	;# 
  1269  0215                     	;# 
  1270  0216                     	;# 
  1271  0216                     	;# 
  1272  0217                     	;# 
  1273  0217                     	;# 
  1274  0219                     	;# 
  1275  021A                     	;# 
  1276  021B                     	;# 
  1277  021C                     	;# 
  1278  021D                     	;# 
  1279  021D                     	;# 
  1280  021E                     	;# 
  1281  021F                     	;# 
  1282  028C                     	;# 
  1283  028D                     	;# 
  1284  028E                     	;# 
  1285  0291                     	;# 
  1286  0291                     	;# 
  1287  0292                     	;# 
  1288  0293                     	;# 
  1289  0294                     	;# 
  1290  0295                     	;# 
  1291  0295                     	;# 
  1292  0296                     	;# 
  1293  0297                     	;# 
  1294  0298                     	;# 
  1295  029F                     	;# 
  1296  030C                     	;# 
  1297  030D                     	;# 
  1298  030E                     	;# 
  1299  0311                     	;# 
  1300  0311                     	;# 
  1301  0312                     	;# 
  1302  0313                     	;# 
  1303  0314                     	;# 
  1304  0315                     	;# 
  1305  0315                     	;# 
  1306  0316                     	;# 
  1307  0317                     	;# 
  1308  0318                     	;# 
  1309  038C                     	;# 
  1310  038D                     	;# 
  1311  038E                     	;# 
  1312  0391                     	;# 
  1313  0392                     	;# 
  1314  0393                     	;# 
  1315  0394                     	;# 
  1316  0395                     	;# 
  1317  0396                     	;# 
  1318  0397                     	;# 
  1319  0398                     	;# 
  1320  0399                     	;# 
  1321  039A                     	;# 
  1322  039C                     	;# 
  1323  039D                     	;# 
  1324  039E                     	;# 
  1325  039F                     	;# 
  1326  0411                     	;# 
  1327  0411                     	;# 
  1328  0412                     	;# 
  1329  0413                     	;# 
  1330  0414                     	;# 
  1331  0415                     	;# 
  1332  0416                     	;# 
  1333  0417                     	;# 
  1334  0418                     	;# 
  1335  0418                     	;# 
  1336  0419                     	;# 
  1337  041A                     	;# 
  1338  041B                     	;# 
  1339  041C                     	;# 
  1340  041D                     	;# 
  1341  041E                     	;# 
  1342  041F                     	;# 
  1343  0498                     	;# 
  1344  0498                     	;# 
  1345  0499                     	;# 
  1346  049A                     	;# 
  1347  049B                     	;# 
  1348  049B                     	;# 
  1349  049C                     	;# 
  1350  049D                     	;# 
  1351  049E                     	;# 
  1352  049F                     	;# 
  1353  0617                     	;# 
  1354  0618                     	;# 
  1355  0619                     	;# 
  1356  0619                     	;# 
  1357  061A                     	;# 
  1358  061B                     	;# 
  1359  061C                     	;# 
  1360  061C                     	;# 
  1361  061F                     	;# 
  1362  0691                     	;# 
  1363  0692                     	;# 
  1364  0693                     	;# 
  1365  0694                     	;# 
  1366  0695                     	;# 
  1367  0696                     	;# 
  1368  0697                     	;# 
  1369  0698                     	;# 
  1370  0699                     	;# 
  1371  0711                     	;# 
  1372  0712                     	;# 
  1373  0713                     	;# 
  1374  0714                     	;# 
  1375  0715                     	;# 
  1376  0716                     	;# 
  1377  0717                     	;# 
  1378  0718                     	;# 
  1379  0719                     	;# 
  1380  0891                     	;# 
  1381  0891                     	;# 
  1382  0891                     	;# 
  1383  0891                     	;# 
  1384  0891                     	;# 
  1385  0891                     	;# 
  1386  0892                     	;# 
  1387  0892                     	;# 
  1388  0892                     	;# 
  1389  0893                     	;# 
  1390  0893                     	;# 
  1391  0893                     	;# 
  1392  0893                     	;# 
  1393  0893                     	;# 
  1394  0893                     	;# 
  1395  0894                     	;# 
  1396  0894                     	;# 
  1397  0894                     	;# 
  1398  0895                     	;# 
  1399  0895                     	;# 
  1400  0895                     	;# 
  1401  0896                     	;# 
  1402  0896                     	;# 
  1403  0896                     	;# 
  1404  089B                     	;# 
  1405  0911                     	;# 
  1406  0912                     	;# 
  1407  0913                     	;# 
  1408  0914                     	;# 
  1409  0915                     	;# 
  1410  0916                     	;# 
  1411  0918                     	;# 
  1412  0919                     	;# 
  1413  091A                     	;# 
  1414  091B                     	;# 
  1415  091C                     	;# 
  1416  091D                     	;# 
  1417  091E                     	;# 
  1418  091F                     	;# 
  1419  0E0F                     	;# 
  1420  0E10                     	;# 
  1421  0E11                     	;# 
  1422  0E12                     	;# 
  1423  0E13                     	;# 
  1424  0E14                     	;# 
  1425  0E15                     	;# 
  1426  0E16                     	;# 
  1427  0E17                     	;# 
  1428  0E18                     	;# 
  1429  0E19                     	;# 
  1430  0E1A                     	;# 
  1431  0E1B                     	;# 
  1432  0E1C                     	;# 
  1433  0E1D                     	;# 
  1434  0E1E                     	;# 
  1435  0E1F                     	;# 
  1436  0E20                     	;# 
  1437  0E21                     	;# 
  1438  0E22                     	;# 
  1439  0E24                     	;# 
  1440  0E25                     	;# 
  1441  0E28                     	;# 
  1442  0E29                     	;# 
  1443  0E2A                     	;# 
  1444  0E2B                     	;# 
  1445  0E2C                     	;# 
  1446  0E2D                     	;# 
  1447  0E2E                     	;# 
  1448  0E2F                     	;# 
  1449  0E90                     	;# 
  1450  0E91                     	;# 
  1451  0E92                     	;# 
  1452  0E94                     	;# 
  1453  0E95                     	;# 
  1454  0E9C                     	;# 
  1455  0E9D                     	;# 
  1456  0E9E                     	;# 
  1457  0E9F                     	;# 
  1458  0EA0                     	;# 
  1459  0EA1                     	;# 
  1460  0EA2                     	;# 
  1461  0EA3                     	;# 
  1462  0EA4                     	;# 
  1463  0EA5                     	;# 
  1464  0EA6                     	;# 
  1465  0EA7                     	;# 
  1466  0F0F                     	;# 
  1467  0F10                     	;# 
  1468  0F11                     	;# 
  1469  0F12                     	;# 
  1470  0F13                     	;# 
  1471  0F14                     	;# 
  1472  0F15                     	;# 
  1473  0F16                     	;# 
  1474  0F17                     	;# 
  1475  0F18                     	;# 
  1476  0F19                     	;# 
  1477  0F1A                     	;# 
  1478  0F1B                     	;# 
  1479  0F1C                     	;# 
  1480  0F1D                     	;# 
  1481  0F1E                     	;# 
  1482  0F1F                     	;# 
  1483  0F20                     	;# 
  1484  0F21                     	;# 
  1485  0F22                     	;# 
  1486  0F23                     	;# 
  1487  0F24                     	;# 
  1488  0F25                     	;# 
  1489  0F26                     	;# 
  1490  0F27                     	;# 
  1491  0F28                     	;# 
  1492  0F29                     	;# 
  1493  0F2A                     	;# 
  1494  0F2B                     	;# 
  1495  0F2C                     	;# 
  1496  0F2D                     	;# 
  1497  0F2E                     	;# 
  1498  0F2F                     	;# 
  1499  0F30                     	;# 
  1500  0F31                     	;# 
  1501  0F32                     	;# 
  1502  0F33                     	;# 
  1503  0F34                     	;# 
  1504  0F35                     	;# 
  1505  0F36                     	;# 
  1506  0F37                     	;# 
  1507  0FE4                     	;# 
  1508  0FE5                     	;# 
  1509  0FE6                     	;# 
  1510  0FE7                     	;# 
  1511  0FE8                     	;# 
  1512  0FE9                     	;# 
  1513  0FEA                     	;# 
  1514  0FEB                     	;# 
  1515  0FED                     	;# 
  1516  0FEE                     	;# 
  1517  0FEF                     	;# 
  1518  0000                     	;# 
  1519  0001                     	;# 
  1520  0002                     	;# 
  1521  0003                     	;# 
  1522  0004                     	;# 
  1523  0005                     	;# 
  1524  0006                     	;# 
  1525  0007                     	;# 
  1526  0008                     	;# 
  1527  0009                     	;# 
  1528  000A                     	;# 
  1529  000B                     	;# 
  1530  000C                     	;# 
  1531  000D                     	;# 
  1532  000E                     	;# 
  1533  0010                     	;# 
  1534  0011                     	;# 
  1535  0012                     	;# 
  1536  0013                     	;# 
  1537  0014                     	;# 
  1538  0015                     	;# 
  1539  0015                     	;# 
  1540  0016                     	;# 
  1541  0016                     	;# 
  1542  0017                     	;# 
  1543  0018                     	;# 
  1544  0019                     	;# 
  1545  0019                     	;# 
  1546  001A                     	;# 
  1547  001B                     	;# 
  1548  001C                     	;# 
  1549  001D                     	;# 
  1550  001E                     	;# 
  1551  001F                     	;# 
  1552  008C                     	;# 
  1553  008D                     	;# 
  1554  008E                     	;# 
  1555  0090                     	;# 
  1556  0091                     	;# 
  1557  0092                     	;# 
  1558  0093                     	;# 
  1559  0094                     	;# 
  1560  0097                     	;# 
  1561  009B                     	;# 
  1562  009B                     	;# 
  1563  009C                     	;# 
  1564  009D                     	;# 
  1565  009E                     	;# 
  1566  009F                     	;# 
  1567  010C                     	;# 
  1568  010D                     	;# 
  1569  010E                     	;# 
  1570  0111                     	;# 
  1571  0112                     	;# 
  1572  0113                     	;# 
  1573  0114                     	;# 
  1574  0115                     	;# 
  1575  0116                     	;# 
  1576  0117                     	;# 
  1577  0118                     	;# 
  1578  0119                     	;# 
  1579  018C                     	;# 
  1580  018D                     	;# 
  1581  018E                     	;# 
  1582  0197                     	;# 
  1583  0199                     	;# 
  1584  0199                     	;# 
  1585  0199                     	;# 
  1586  019A                     	;# 
  1587  019A                     	;# 
  1588  019A                     	;# 
  1589  019B                     	;# 
  1590  019B                     	;# 
  1591  019B                     	;# 
  1592  019B                     	;# 
  1593  019B                     	;# 
  1594  019C                     	;# 
  1595  019C                     	;# 
  1596  019C                     	;# 
  1597  019D                     	;# 
  1598  019D                     	;# 
  1599  019D                     	;# 
  1600  019E                     	;# 
  1601  019E                     	;# 
  1602  019E                     	;# 
  1603  019F                     	;# 
  1604  019F                     	;# 
  1605  019F                     	;# 
  1606  019F                     	;# 
  1607  019F                     	;# 
  1608  020C                     	;# 
  1609  020D                     	;# 
  1610  020E                     	;# 
  1611  0211                     	;# 
  1612  0211                     	;# 
  1613  0212                     	;# 
  1614  0212                     	;# 
  1615  0213                     	;# 
  1616  0213                     	;# 
  1617  0214                     	;# 
  1618  0214                     	;# 
  1619  0215                     	;# 
  1620  0215                     	;# 
  1621  0215                     	;# 
  1622  0215                     	;# 
  1623  0216                     	;# 
  1624  0216                     	;# 
  1625  0217                     	;# 
  1626  0217                     	;# 
  1627  0219                     	;# 
  1628  021A                     	;# 
  1629  021B                     	;# 
  1630  021C                     	;# 
  1631  021D                     	;# 
  1632  021D                     	;# 
  1633  021E                     	;# 
  1634  021F                     	;# 
  1635  028C                     	;# 
  1636  028D                     	;# 
  1637  028E                     	;# 
  1638  0291                     	;# 
  1639  0291                     	;# 
  1640  0292                     	;# 
  1641  0293                     	;# 
  1642  0294                     	;# 
  1643  0295                     	;# 
  1644  0295                     	;# 
  1645  0296                     	;# 
  1646  0297                     	;# 
  1647  0298                     	;# 
  1648  029F                     	;# 
  1649  030C                     	;# 
  1650  030D                     	;# 
  1651  030E                     	;# 
  1652  0311                     	;# 
  1653  0311                     	;# 
  1654  0312                     	;# 
  1655  0313                     	;# 
  1656  0314                     	;# 
  1657  0315                     	;# 
  1658  0315                     	;# 
  1659  0316                     	;# 
  1660  0317                     	;# 
  1661  0318                     	;# 
  1662  038C                     	;# 
  1663  038D                     	;# 
  1664  038E                     	;# 
  1665  0391                     	;# 
  1666  0392                     	;# 
  1667  0393                     	;# 
  1668  0394                     	;# 
  1669  0395                     	;# 
  1670  0396                     	;# 
  1671  0397                     	;# 
  1672  0398                     	;# 
  1673  0399                     	;# 
  1674  039A                     	;# 
  1675  039C                     	;# 
  1676  039D                     	;# 
  1677  039E                     	;# 
  1678  039F                     	;# 
  1679  0411                     	;# 
  1680  0411                     	;# 
  1681  0412                     	;# 
  1682  0413                     	;# 
  1683  0414                     	;# 
  1684  0415                     	;# 
  1685  0416                     	;# 
  1686  0417                     	;# 
  1687  0418                     	;# 
  1688  0418                     	;# 
  1689  0419                     	;# 
  1690  041A                     	;# 
  1691  041B                     	;# 
  1692  041C                     	;# 
  1693  041D                     	;# 
  1694  041E                     	;# 
  1695  041F                     	;# 
  1696  0498                     	;# 
  1697  0498                     	;# 
  1698  0499                     	;# 
  1699  049A                     	;# 
  1700  049B                     	;# 
  1701  049B                     	;# 
  1702  049C                     	;# 
  1703  049D                     	;# 
  1704  049E                     	;# 
  1705  049F                     	;# 
  1706  0617                     	;# 
  1707  0618                     	;# 
  1708  0619                     	;# 
  1709  0619                     	;# 
  1710  061A                     	;# 
  1711  061B                     	;# 
  1712  061C                     	;# 
  1713  061C                     	;# 
  1714  061F                     	;# 
  1715  0691                     	;# 
  1716  0692                     	;# 
  1717  0693                     	;# 
  1718  0694                     	;# 
  1719  0695                     	;# 
  1720  0696                     	;# 
  1721  0697                     	;# 
  1722  0698                     	;# 
  1723  0699                     	;# 
  1724  0711                     	;# 
  1725  0712                     	;# 
  1726  0713                     	;# 
  1727  0714                     	;# 
  1728  0715                     	;# 
  1729  0716                     	;# 
  1730  0717                     	;# 
  1731  0718                     	;# 
  1732  0719                     	;# 
  1733  0891                     	;# 
  1734  0891                     	;# 
  1735  0891                     	;# 
  1736  0891                     	;# 
  1737  0891                     	;# 
  1738  0891                     	;# 
  1739  0892                     	;# 
  1740  0892                     	;# 
  1741  0892                     	;# 
  1742  0893                     	;# 
  1743  0893                     	;# 
  1744  0893                     	;# 
  1745  0893                     	;# 
  1746  0893                     	;# 
  1747  0893                     	;# 
  1748  0894                     	;# 
  1749  0894                     	;# 
  1750  0894                     	;# 
  1751  0895                     	;# 
  1752  0895                     	;# 
  1753  0895                     	;# 
  1754  0896                     	;# 
  1755  0896                     	;# 
  1756  0896                     	;# 
  1757  089B                     	;# 
  1758  0911                     	;# 
  1759  0912                     	;# 
  1760  0913                     	;# 
  1761  0914                     	;# 
  1762  0915                     	;# 
  1763  0916                     	;# 
  1764  0918                     	;# 
  1765  0919                     	;# 
  1766  091A                     	;# 
  1767  091B                     	;# 
  1768  091C                     	;# 
  1769  091D                     	;# 
  1770  091E                     	;# 
  1771  091F                     	;# 
  1772  0E0F                     	;# 
  1773  0E10                     	;# 
  1774  0E11                     	;# 
  1775  0E12                     	;# 
  1776  0E13                     	;# 
  1777  0E14                     	;# 
  1778  0E15                     	;# 
  1779  0E16                     	;# 
  1780  0E17                     	;# 
  1781  0E18                     	;# 
  1782  0E19                     	;# 
  1783  0E1A                     	;# 
  1784  0E1B                     	;# 
  1785  0E1C                     	;# 
  1786  0E1D                     	;# 
  1787  0E1E                     	;# 
  1788  0E1F                     	;# 
  1789  0E20                     	;# 
  1790  0E21                     	;# 
  1791  0E22                     	;# 
  1792  0E24                     	;# 
  1793  0E25                     	;# 
  1794  0E28                     	;# 
  1795  0E29                     	;# 
  1796  0E2A                     	;# 
  1797  0E2B                     	;# 
  1798  0E2C                     	;# 
  1799  0E2D                     	;# 
  1800  0E2E                     	;# 
  1801  0E2F                     	;# 
  1802  0E90                     	;# 
  1803  0E91                     	;# 
  1804  0E92                     	;# 
  1805  0E94                     	;# 
  1806  0E95                     	;# 
  1807  0E9C                     	;# 
  1808  0E9D                     	;# 
  1809  0E9E                     	;# 
  1810  0E9F                     	;# 
  1811  0EA0                     	;# 
  1812  0EA1                     	;# 
  1813  0EA2                     	;# 
  1814  0EA3                     	;# 
  1815  0EA4                     	;# 
  1816  0EA5                     	;# 
  1817  0EA6                     	;# 
  1818  0EA7                     	;# 
  1819  0F0F                     	;# 
  1820  0F10                     	;# 
  1821  0F11                     	;# 
  1822  0F12                     	;# 
  1823  0F13                     	;# 
  1824  0F14                     	;# 
  1825  0F15                     	;# 
  1826  0F16                     	;# 
  1827  0F17                     	;# 
  1828  0F18                     	;# 
  1829  0F19                     	;# 
  1830  0F1A                     	;# 
  1831  0F1B                     	;# 
  1832  0F1C                     	;# 
  1833  0F1D                     	;# 
  1834  0F1E                     	;# 
  1835  0F1F                     	;# 
  1836  0F20                     	;# 
  1837  0F21                     	;# 
  1838  0F22                     	;# 
  1839  0F23                     	;# 
  1840  0F24                     	;# 
  1841  0F25                     	;# 
  1842  0F26                     	;# 
  1843  0F27                     	;# 
  1844  0F28                     	;# 
  1845  0F29                     	;# 
  1846  0F2A                     	;# 
  1847  0F2B                     	;# 
  1848  0F2C                     	;# 
  1849  0F2D                     	;# 
  1850  0F2E                     	;# 
  1851  0F2F                     	;# 
  1852  0F30                     	;# 
  1853  0F31                     	;# 
  1854  0F32                     	;# 
  1855  0F33                     	;# 
  1856  0F34                     	;# 
  1857  0F35                     	;# 
  1858  0F36                     	;# 
  1859  0F37                     	;# 
  1860  0FE4                     	;# 
  1861  0FE5                     	;# 
  1862  0FE6                     	;# 
  1863  0FE7                     	;# 
  1864  0FE8                     	;# 
  1865  0FE9                     	;# 
  1866  0FEA                     	;# 
  1867  0FEB                     	;# 
  1868  0FED                     	;# 
  1869  0FEE                     	;# 
  1870  0FEF                     	;# 
  1871  0000                     	;# 
  1872  0001                     	;# 
  1873  0002                     	;# 
  1874  0003                     	;# 
  1875  0004                     	;# 
  1876  0005                     	;# 
  1877  0006                     	;# 
  1878  0007                     	;# 
  1879  0008                     	;# 
  1880  0009                     	;# 
  1881  000A                     	;# 
  1882  000B                     	;# 
  1883  000C                     	;# 
  1884  000D                     	;# 
  1885  000E                     	;# 
  1886  0010                     	;# 
  1887  0011                     	;# 
  1888  0012                     	;# 
  1889  0013                     	;# 
  1890  0014                     	;# 
  1891  0015                     	;# 
  1892  0015                     	;# 
  1893  0016                     	;# 
  1894  0016                     	;# 
  1895  0017                     	;# 
  1896  0018                     	;# 
  1897  0019                     	;# 
  1898  0019                     	;# 
  1899  001A                     	;# 
  1900  001B                     	;# 
  1901  001C                     	;# 
  1902  001D                     	;# 
  1903  001E                     	;# 
  1904  001F                     	;# 
  1905  008C                     	;# 
  1906  008D                     	;# 
  1907  008E                     	;# 
  1908  0090                     	;# 
  1909  0091                     	;# 
  1910  0092                     	;# 
  1911  0093                     	;# 
  1912  0094                     	;# 
  1913  0097                     	;# 
  1914  009B                     	;# 
  1915  009B                     	;# 
  1916  009C                     	;# 
  1917  009D                     	;# 
  1918  009E                     	;# 
  1919  009F                     	;# 
  1920  010C                     	;# 
  1921  010D                     	;# 
  1922  010E                     	;# 
  1923  0111                     	;# 
  1924  0112                     	;# 
  1925  0113                     	;# 
  1926  0114                     	;# 
  1927  0115                     	;# 
  1928  0116                     	;# 
  1929  0117                     	;# 
  1930  0118                     	;# 
  1931  0119                     	;# 
  1932  018C                     	;# 
  1933  018D                     	;# 
  1934  018E                     	;# 
  1935  0197                     	;# 
  1936  0199                     	;# 
  1937  0199                     	;# 
  1938  0199                     	;# 
  1939  019A                     	;# 
  1940  019A                     	;# 
  1941  019A                     	;# 
  1942  019B                     	;# 
  1943  019B                     	;# 
  1944  019B                     	;# 
  1945  019B                     	;# 
  1946  019B                     	;# 
  1947  019C                     	;# 
  1948  019C                     	;# 
  1949  019C                     	;# 
  1950  019D                     	;# 
  1951  019D                     	;# 
  1952  019D                     	;# 
  1953  019E                     	;# 
  1954  019E                     	;# 
  1955  019E                     	;# 
  1956  019F                     	;# 
  1957  019F                     	;# 
  1958  019F                     	;# 
  1959  019F                     	;# 
  1960  019F                     	;# 
  1961  020C                     	;# 
  1962  020D                     	;# 
  1963  020E                     	;# 
  1964  0211                     	;# 
  1965  0211                     	;# 
  1966  0212                     	;# 
  1967  0212                     	;# 
  1968  0213                     	;# 
  1969  0213                     	;# 
  1970  0214                     	;# 
  1971  0214                     	;# 
  1972  0215                     	;# 
  1973  0215                     	;# 
  1974  0215                     	;# 
  1975  0215                     	;# 
  1976  0216                     	;# 
  1977  0216                     	;# 
  1978  0217                     	;# 
  1979  0217                     	;# 
  1980  0219                     	;# 
  1981  021A                     	;# 
  1982  021B                     	;# 
  1983  021C                     	;# 
  1984  021D                     	;# 
  1985  021D                     	;# 
  1986  021E                     	;# 
  1987  021F                     	;# 
  1988  028C                     	;# 
  1989  028D                     	;# 
  1990  028E                     	;# 
  1991  0291                     	;# 
  1992  0291                     	;# 
  1993  0292                     	;# 
  1994  0293                     	;# 
  1995  0294                     	;# 
  1996  0295                     	;# 
  1997  0295                     	;# 
  1998  0296                     	;# 
  1999  0297                     	;# 
  2000  0298                     	;# 
  2001  029F                     	;# 
  2002  030C                     	;# 
  2003  030D                     	;# 
  2004  030E                     	;# 
  2005  0311                     	;# 
  2006  0311                     	;# 
  2007  0312                     	;# 
  2008  0313                     	;# 
  2009  0314                     	;# 
  2010  0315                     	;# 
  2011  0315                     	;# 
  2012  0316                     	;# 
  2013  0317                     	;# 
  2014  0318                     	;# 
  2015  038C                     	;# 
  2016  038D                     	;# 
  2017  038E                     	;# 
  2018  0391                     	;# 
  2019  0392                     	;# 
  2020  0393                     	;# 
  2021  0394                     	;# 
  2022  0395                     	;# 
  2023  0396                     	;# 
  2024  0397                     	;# 
  2025  0398                     	;# 
  2026  0399                     	;# 
  2027  039A                     	;# 
  2028  039C                     	;# 
  2029  039D                     	;# 
  2030  039E                     	;# 
  2031  039F                     	;# 
  2032  0411                     	;# 
  2033  0411                     	;# 
  2034  0412                     	;# 
  2035  0413                     	;# 
  2036  0414                     	;# 
  2037  0415                     	;# 
  2038  0416                     	;# 
  2039  0417                     	;# 
  2040  0418                     	;# 
  2041  0418                     	;# 
  2042  0419                     	;# 
  2043  041A                     	;# 
  2044  041B                     	;# 
  2045  041C                     	;# 
  2046  041D                     	;# 
  2047  041E                     	;# 
  2048  041F                     	;# 
  2049  0498                     	;# 
  2050  0498                     	;# 
  2051  0499                     	;# 
  2052  049A                     	;# 
  2053  049B                     	;# 
  2054  049B                     	;# 
  2055  049C                     	;# 
  2056  049D                     	;# 
  2057  049E                     	;# 
  2058  049F                     	;# 
  2059  0617                     	;# 
  2060  0618                     	;# 
  2061  0619                     	;# 
  2062  0619                     	;# 
  2063  061A                     	;# 
  2064  061B                     	;# 
  2065  061C                     	;# 
  2066  061C                     	;# 
  2067  061F                     	;# 
  2068  0691                     	;# 
  2069  0692                     	;# 
  2070  0693                     	;# 
  2071  0694                     	;# 
  2072  0695                     	;# 
  2073  0696                     	;# 
  2074  0697                     	;# 
  2075  0698                     	;# 
  2076  0699                     	;# 
  2077  0711                     	;# 
  2078  0712                     	;# 
  2079  0713                     	;# 
  2080  0714                     	;# 
  2081  0715                     	;# 
  2082  0716                     	;# 
  2083  0717                     	;# 
  2084  0718                     	;# 
  2085  0719                     	;# 
  2086  0891                     	;# 
  2087  0891                     	;# 
  2088  0891                     	;# 
  2089  0891                     	;# 
  2090  0891                     	;# 
  2091  0891                     	;# 
  2092  0892                     	;# 
  2093  0892                     	;# 
  2094  0892                     	;# 
  2095  0893                     	;# 
  2096  0893                     	;# 
  2097  0893                     	;# 
  2098  0893                     	;# 
  2099  0893                     	;# 
  2100  0893                     	;# 
  2101  0894                     	;# 
  2102  0894                     	;# 
  2103  0894                     	;# 
  2104  0895                     	;# 
  2105  0895                     	;# 
  2106  0895                     	;# 
  2107  0896                     	;# 
  2108  0896                     	;# 
  2109  0896                     	;# 
  2110  089B                     	;# 
  2111  0911                     	;# 
  2112  0912                     	;# 
  2113  0913                     	;# 
  2114  0914                     	;# 
  2115  0915                     	;# 
  2116  0916                     	;# 
  2117  0918                     	;# 
  2118  0919                     	;# 
  2119  091A                     	;# 
  2120  091B                     	;# 
  2121  091C                     	;# 
  2122  091D                     	;# 
  2123  091E                     	;# 
  2124  091F                     	;# 
  2125  0E0F                     	;# 
  2126  0E10                     	;# 
  2127  0E11                     	;# 
  2128  0E12                     	;# 
  2129  0E13                     	;# 
  2130  0E14                     	;# 
  2131  0E15                     	;# 
  2132  0E16                     	;# 
  2133  0E17                     	;# 
  2134  0E18                     	;# 
  2135  0E19                     	;# 
  2136  0E1A                     	;# 
  2137  0E1B                     	;# 
  2138  0E1C                     	;# 
  2139  0E1D                     	;# 
  2140  0E1E                     	;# 
  2141  0E1F                     	;# 
  2142  0E20                     	;# 
  2143  0E21                     	;# 
  2144  0E22                     	;# 
  2145  0E24                     	;# 
  2146  0E25                     	;# 
  2147  0E28                     	;# 
  2148  0E29                     	;# 
  2149  0E2A                     	;# 
  2150  0E2B                     	;# 
  2151  0E2C                     	;# 
  2152  0E2D                     	;# 
  2153  0E2E                     	;# 
  2154  0E2F                     	;# 
  2155  0E90                     	;# 
  2156  0E91                     	;# 
  2157  0E92                     	;# 
  2158  0E94                     	;# 
  2159  0E95                     	;# 
  2160  0E9C                     	;# 
  2161  0E9D                     	;# 
  2162  0E9E                     	;# 
  2163  0E9F                     	;# 
  2164  0EA0                     	;# 
  2165  0EA1                     	;# 
  2166  0EA2                     	;# 
  2167  0EA3                     	;# 
  2168  0EA4                     	;# 
  2169  0EA5                     	;# 
  2170  0EA6                     	;# 
  2171  0EA7                     	;# 
  2172  0F0F                     	;# 
  2173  0F10                     	;# 
  2174  0F11                     	;# 
  2175  0F12                     	;# 
  2176  0F13                     	;# 
  2177  0F14                     	;# 
  2178  0F15                     	;# 
  2179  0F16                     	;# 
  2180  0F17                     	;# 
  2181  0F18                     	;# 
  2182  0F19                     	;# 
  2183  0F1A                     	;# 
  2184  0F1B                     	;# 
  2185  0F1C                     	;# 
  2186  0F1D                     	;# 
  2187  0F1E                     	;# 
  2188  0F1F                     	;# 
  2189  0F20                     	;# 
  2190  0F21                     	;# 
  2191  0F22                     	;# 
  2192  0F23                     	;# 
  2193  0F24                     	;# 
  2194  0F25                     	;# 
  2195  0F26                     	;# 
  2196  0F27                     	;# 
  2197  0F28                     	;# 
  2198  0F29                     	;# 
  2199  0F2A                     	;# 
  2200  0F2B                     	;# 
  2201  0F2C                     	;# 
  2202  0F2D                     	;# 
  2203  0F2E                     	;# 
  2204  0F2F                     	;# 
  2205  0F30                     	;# 
  2206  0F31                     	;# 
  2207  0F32                     	;# 
  2208  0F33                     	;# 
  2209  0F34                     	;# 
  2210  0F35                     	;# 
  2211  0F36                     	;# 
  2212  0F37                     	;# 
  2213  0FE4                     	;# 
  2214  0FE5                     	;# 
  2215  0FE6                     	;# 
  2216  0FE7                     	;# 
  2217  0FE8                     	;# 
  2218  0FE9                     	;# 
  2219  0FEA                     	;# 
  2220  0FEB                     	;# 
  2221  0FED                     	;# 
  2222  0FEE                     	;# 
  2223  0FEF                     	;# 
  2224  0000                     	;# 
  2225  0001                     	;# 
  2226  0002                     	;# 
  2227  0003                     	;# 
  2228  0004                     	;# 
  2229  0005                     	;# 
  2230  0006                     	;# 
  2231  0007                     	;# 
  2232  0008                     	;# 
  2233  0009                     	;# 
  2234  000A                     	;# 
  2235  000B                     	;# 
  2236  000C                     	;# 
  2237  000D                     	;# 
  2238  000E                     	;# 
  2239  0010                     	;# 
  2240  0011                     	;# 
  2241  0012                     	;# 
  2242  0013                     	;# 
  2243  0014                     	;# 
  2244  0015                     	;# 
  2245  0015                     	;# 
  2246  0016                     	;# 
  2247  0016                     	;# 
  2248  0017                     	;# 
  2249  0018                     	;# 
  2250  0019                     	;# 
  2251  0019                     	;# 
  2252  001A                     	;# 
  2253  001B                     	;# 
  2254  001C                     	;# 
  2255  001D                     	;# 
  2256  001E                     	;# 
  2257  001F                     	;# 
  2258  008C                     	;# 
  2259  008D                     	;# 
  2260  008E                     	;# 
  2261  0090                     	;# 
  2262  0091                     	;# 
  2263  0092                     	;# 
  2264  0093                     	;# 
  2265  0094                     	;# 
  2266  0097                     	;# 
  2267  009B                     	;# 
  2268  009B                     	;# 
  2269  009C                     	;# 
  2270  009D                     	;# 
  2271  009E                     	;# 
  2272  009F                     	;# 
  2273  010C                     	;# 
  2274  010D                     	;# 
  2275  010E                     	;# 
  2276  0111                     	;# 
  2277  0112                     	;# 
  2278  0113                     	;# 
  2279  0114                     	;# 
  2280  0115                     	;# 
  2281  0116                     	;# 
  2282  0117                     	;# 
  2283  0118                     	;# 
  2284  0119                     	;# 
  2285  018C                     	;# 
  2286  018D                     	;# 
  2287  018E                     	;# 
  2288  0197                     	;# 
  2289  0199                     	;# 
  2290  0199                     	;# 
  2291  0199                     	;# 
  2292  019A                     	;# 
  2293  019A                     	;# 
  2294  019A                     	;# 
  2295  019B                     	;# 
  2296  019B                     	;# 
  2297  019B                     	;# 
  2298  019B                     	;# 
  2299  019B                     	;# 
  2300  019C                     	;# 
  2301  019C                     	;# 
  2302  019C                     	;# 
  2303  019D                     	;# 
  2304  019D                     	;# 
  2305  019D                     	;# 
  2306  019E                     	;# 
  2307  019E                     	;# 
  2308  019E                     	;# 
  2309  019F                     	;# 
  2310  019F                     	;# 
  2311  019F                     	;# 
  2312  019F                     	;# 
  2313  019F                     	;# 
  2314  020C                     	;# 
  2315  020D                     	;# 
  2316  020E                     	;# 
  2317  0211                     	;# 
  2318  0211                     	;# 
  2319  0212                     	;# 
  2320  0212                     	;# 
  2321  0213                     	;# 
  2322  0213                     	;# 
  2323  0214                     	;# 
  2324  0214                     	;# 
  2325  0215                     	;# 
  2326  0215                     	;# 
  2327  0215                     	;# 
  2328  0215                     	;# 
  2329  0216                     	;# 
  2330  0216                     	;# 
  2331  0217                     	;# 
  2332  0217                     	;# 
  2333  0219                     	;# 
  2334  021A                     	;# 
  2335  021B                     	;# 
  2336  021C                     	;# 
  2337  021D                     	;# 
  2338  021D                     	;# 
  2339  021E                     	;# 
  2340  021F                     	;# 
  2341  028C                     	;# 
  2342  028D                     	;# 
  2343  028E                     	;# 
  2344  0291                     	;# 
  2345  0291                     	;# 
  2346  0292                     	;# 
  2347  0293                     	;# 
  2348  0294                     	;# 
  2349  0295                     	;# 
  2350  0295                     	;# 
  2351  0296                     	;# 
  2352  0297                     	;# 
  2353  0298                     	;# 
  2354  029F                     	;# 
  2355  030C                     	;# 
  2356  030D                     	;# 
  2357  030E                     	;# 
  2358  0311                     	;# 
  2359  0311                     	;# 
  2360  0312                     	;# 
  2361  0313                     	;# 
  2362  0314                     	;# 
  2363  0315                     	;# 
  2364  0315                     	;# 
  2365  0316                     	;# 
  2366  0317                     	;# 
  2367  0318                     	;# 
  2368  038C                     	;# 
  2369  038D                     	;# 
  2370  038E                     	;# 
  2371  0391                     	;# 
  2372  0392                     	;# 
  2373  0393                     	;# 
  2374  0394                     	;# 
  2375  0395                     	;# 
  2376  0396                     	;# 
  2377  0397                     	;# 
  2378  0398                     	;# 
  2379  0399                     	;# 
  2380  039A                     	;# 
  2381  039C                     	;# 
  2382  039D                     	;# 
  2383  039E                     	;# 
  2384  039F                     	;# 
  2385  0411                     	;# 
  2386  0411                     	;# 
  2387  0412                     	;# 
  2388  0413                     	;# 
  2389  0414                     	;# 
  2390  0415                     	;# 
  2391  0416                     	;# 
  2392  0417                     	;# 
  2393  0418                     	;# 
  2394  0418                     	;# 
  2395  0419                     	;# 
  2396  041A                     	;# 
  2397  041B                     	;# 
  2398  041C                     	;# 
  2399  041D                     	;# 
  2400  041E                     	;# 
  2401  041F                     	;# 
  2402  0498                     	;# 
  2403  0498                     	;# 
  2404  0499                     	;# 
  2405  049A                     	;# 
  2406  049B                     	;# 
  2407  049B                     	;# 
  2408  049C                     	;# 
  2409  049D                     	;# 
  2410  049E                     	;# 
  2411  049F                     	;# 
  2412  0617                     	;# 
  2413  0618                     	;# 
  2414  0619                     	;# 
  2415  0619                     	;# 
  2416  061A                     	;# 
  2417  061B                     	;# 
  2418  061C                     	;# 
  2419  061C                     	;# 
  2420  061F                     	;# 
  2421  0691                     	;# 
  2422  0692                     	;# 
  2423  0693                     	;# 
  2424  0694                     	;# 
  2425  0695                     	;# 
  2426  0696                     	;# 
  2427  0697                     	;# 
  2428  0698                     	;# 
  2429  0699                     	;# 
  2430  0711                     	;# 
  2431  0712                     	;# 
  2432  0713                     	;# 
  2433  0714                     	;# 
  2434  0715                     	;# 
  2435  0716                     	;# 
  2436  0717                     	;# 
  2437  0718                     	;# 
  2438  0719                     	;# 
  2439  0891                     	;# 
  2440  0891                     	;# 
  2441  0891                     	;# 
  2442  0891                     	;# 
  2443  0891                     	;# 
  2444  0891                     	;# 
  2445  0892                     	;# 
  2446  0892                     	;# 
  2447  0892                     	;# 
  2448  0893                     	;# 
  2449  0893                     	;# 
  2450  0893                     	;# 
  2451  0893                     	;# 
  2452  0893                     	;# 
  2453  0893                     	;# 
  2454  0894                     	;# 
  2455  0894                     	;# 
  2456  0894                     	;# 
  2457  0895                     	;# 
  2458  0895                     	;# 
  2459  0895                     	;# 
  2460  0896                     	;# 
  2461  0896                     	;# 
  2462  0896                     	;# 
  2463  089B                     	;# 
  2464  0911                     	;# 
  2465  0912                     	;# 
  2466  0913                     	;# 
  2467  0914                     	;# 
  2468  0915                     	;# 
  2469  0916                     	;# 
  2470  0918                     	;# 
  2471  0919                     	;# 
  2472  091A                     	;# 
  2473  091B                     	;# 
  2474  091C                     	;# 
  2475  091D                     	;# 
  2476  091E                     	;# 
  2477  091F                     	;# 
  2478  0E0F                     	;# 
  2479  0E10                     	;# 
  2480  0E11                     	;# 
  2481  0E12                     	;# 
  2482  0E13                     	;# 
  2483  0E14                     	;# 
  2484  0E15                     	;# 
  2485  0E16                     	;# 
  2486  0E17                     	;# 
  2487  0E18                     	;# 
  2488  0E19                     	;# 
  2489  0E1A                     	;# 
  2490  0E1B                     	;# 
  2491  0E1C                     	;# 
  2492  0E1D                     	;# 
  2493  0E1E                     	;# 
  2494  0E1F                     	;# 
  2495  0E20                     	;# 
  2496  0E21                     	;# 
  2497  0E22                     	;# 
  2498  0E24                     	;# 
  2499  0E25                     	;# 
  2500  0E28                     	;# 
  2501  0E29                     	;# 
  2502  0E2A                     	;# 
  2503  0E2B                     	;# 
  2504  0E2C                     	;# 
  2505  0E2D                     	;# 
  2506  0E2E                     	;# 
  2507  0E2F                     	;# 
  2508  0E90                     	;# 
  2509  0E91                     	;# 
  2510  0E92                     	;# 
  2511  0E94                     	;# 
  2512  0E95                     	;# 
  2513  0E9C                     	;# 
  2514  0E9D                     	;# 
  2515  0E9E                     	;# 
  2516  0E9F                     	;# 
  2517  0EA0                     	;# 
  2518  0EA1                     	;# 
  2519  0EA2                     	;# 
  2520  0EA3                     	;# 
  2521  0EA4                     	;# 
  2522  0EA5                     	;# 
  2523  0EA6                     	;# 
  2524  0EA7                     	;# 
  2525  0F0F                     	;# 
  2526  0F10                     	;# 
  2527  0F11                     	;# 
  2528  0F12                     	;# 
  2529  0F13                     	;# 
  2530  0F14                     	;# 
  2531  0F15                     	;# 
  2532  0F16                     	;# 
  2533  0F17                     	;# 
  2534  0F18                     	;# 
  2535  0F19                     	;# 
  2536  0F1A                     	;# 
  2537  0F1B                     	;# 
  2538  0F1C                     	;# 
  2539  0F1D                     	;# 
  2540  0F1E                     	;# 
  2541  0F1F                     	;# 
  2542  0F20                     	;# 
  2543  0F21                     	;# 
  2544  0F22                     	;# 
  2545  0F23                     	;# 
  2546  0F24                     	;# 
  2547  0F25                     	;# 
  2548  0F26                     	;# 
  2549  0F27                     	;# 
  2550  0F28                     	;# 
  2551  0F29                     	;# 
  2552  0F2A                     	;# 
  2553  0F2B                     	;# 
  2554  0F2C                     	;# 
  2555  0F2D                     	;# 
  2556  0F2E                     	;# 
  2557  0F2F                     	;# 
  2558  0F30                     	;# 
  2559  0F31                     	;# 
  2560  0F32                     	;# 
  2561  0F33                     	;# 
  2562  0F34                     	;# 
  2563  0F35                     	;# 
  2564  0F36                     	;# 
  2565  0F37                     	;# 
  2566  0FE4                     	;# 
  2567  0FE5                     	;# 
  2568  0FE6                     	;# 
  2569  0FE7                     	;# 
  2570  0FE8                     	;# 
  2571  0FE9                     	;# 
  2572  0FEA                     	;# 
  2573  0FEB                     	;# 
  2574  0FED                     	;# 
  2575  0FEE                     	;# 
  2576  0FEF                     	;# 
  2577  0000                     	;# 
  2578  0001                     	;# 
  2579  0002                     	;# 
  2580  0003                     	;# 
  2581  0004                     	;# 
  2582  0005                     	;# 
  2583  0006                     	;# 
  2584  0007                     	;# 
  2585  0008                     	;# 
  2586  0009                     	;# 
  2587  000A                     	;# 
  2588  000B                     	;# 
  2589  000C                     	;# 
  2590  000D                     	;# 
  2591  000E                     	;# 
  2592  0010                     	;# 
  2593  0011                     	;# 
  2594  0012                     	;# 
  2595  0013                     	;# 
  2596  0014                     	;# 
  2597  0015                     	;# 
  2598  0015                     	;# 
  2599  0016                     	;# 
  2600  0016                     	;# 
  2601  0017                     	;# 
  2602  0018                     	;# 
  2603  0019                     	;# 
  2604  0019                     	;# 
  2605  001A                     	;# 
  2606  001B                     	;# 
  2607  001C                     	;# 
  2608  001D                     	;# 
  2609  001E                     	;# 
  2610  001F                     	;# 
  2611  008C                     	;# 
  2612  008D                     	;# 
  2613  008E                     	;# 
  2614  0090                     	;# 
  2615  0091                     	;# 
  2616  0092                     	;# 
  2617  0093                     	;# 
  2618  0094                     	;# 
  2619  0097                     	;# 
  2620  009B                     	;# 
  2621  009B                     	;# 
  2622  009C                     	;# 
  2623  009D                     	;# 
  2624  009E                     	;# 
  2625  009F                     	;# 
  2626  010C                     	;# 
  2627  010D                     	;# 
  2628  010E                     	;# 
  2629  0111                     	;# 
  2630  0112                     	;# 
  2631  0113                     	;# 
  2632  0114                     	;# 
  2633  0115                     	;# 
  2634  0116                     	;# 
  2635  0117                     	;# 
  2636  0118                     	;# 
  2637  0119                     	;# 
  2638  018C                     	;# 
  2639  018D                     	;# 
  2640  018E                     	;# 
  2641  0197                     	;# 
  2642  0199                     	;# 
  2643  0199                     	;# 
  2644  0199                     	;# 
  2645  019A                     	;# 
  2646  019A                     	;# 
  2647  019A                     	;# 
  2648  019B                     	;# 
  2649  019B                     	;# 
  2650  019B                     	;# 
  2651  019B                     	;# 
  2652  019B                     	;# 
  2653  019C                     	;# 
  2654  019C                     	;# 
  2655  019C                     	;# 
  2656  019D                     	;# 
  2657  019D                     	;# 
  2658  019D                     	;# 
  2659  019E                     	;# 
  2660  019E                     	;# 
  2661  019E                     	;# 
  2662  019F                     	;# 
  2663  019F                     	;# 
  2664  019F                     	;# 
  2665  019F                     	;# 
  2666  019F                     	;# 
  2667  020C                     	;# 
  2668  020D                     	;# 
  2669  020E                     	;# 
  2670  0211                     	;# 
  2671  0211                     	;# 
  2672  0212                     	;# 
  2673  0212                     	;# 
  2674  0213                     	;# 
  2675  0213                     	;# 
  2676  0214                     	;# 
  2677  0214                     	;# 
  2678  0215                     	;# 
  2679  0215                     	;# 
  2680  0215                     	;# 
  2681  0215                     	;# 
  2682  0216                     	;# 
  2683  0216                     	;# 
  2684  0217                     	;# 
  2685  0217                     	;# 
  2686  0219                     	;# 
  2687  021A                     	;# 
  2688  021B                     	;# 
  2689  021C                     	;# 
  2690  021D                     	;# 
  2691  021D                     	;# 
  2692  021E                     	;# 
  2693  021F                     	;# 
  2694  028C                     	;# 
  2695  028D                     	;# 
  2696  028E                     	;# 
  2697  0291                     	;# 
  2698  0291                     	;# 
  2699  0292                     	;# 
  2700  0293                     	;# 
  2701  0294                     	;# 
  2702  0295                     	;# 
  2703  0295                     	;# 
  2704  0296                     	;# 
  2705  0297                     	;# 
  2706  0298                     	;# 
  2707  029F                     	;# 
  2708  030C                     	;# 
  2709  030D                     	;# 
  2710  030E                     	;# 
  2711  0311                     	;# 
  2712  0311                     	;# 
  2713  0312                     	;# 
  2714  0313                     	;# 
  2715  0314                     	;# 
  2716  0315                     	;# 
  2717  0315                     	;# 
  2718  0316                     	;# 
  2719  0317                     	;# 
  2720  0318                     	;# 
  2721  038C                     	;# 
  2722  038D                     	;# 
  2723  038E                     	;# 
  2724  0391                     	;# 
  2725  0392                     	;# 
  2726  0393                     	;# 
  2727  0394                     	;# 
  2728  0395                     	;# 
  2729  0396                     	;# 
  2730  0397                     	;# 
  2731  0398                     	;# 
  2732  0399                     	;# 
  2733  039A                     	;# 
  2734  039C                     	;# 
  2735  039D                     	;# 
  2736  039E                     	;# 
  2737  039F                     	;# 
  2738  0411                     	;# 
  2739  0411                     	;# 
  2740  0412                     	;# 
  2741  0413                     	;# 
  2742  0414                     	;# 
  2743  0415                     	;# 
  2744  0416                     	;# 
  2745  0417                     	;# 
  2746  0418                     	;# 
  2747  0418                     	;# 
  2748  0419                     	;# 
  2749  041A                     	;# 
  2750  041B                     	;# 
  2751  041C                     	;# 
  2752  041D                     	;# 
  2753  041E                     	;# 
  2754  041F                     	;# 
  2755  0498                     	;# 
  2756  0498                     	;# 
  2757  0499                     	;# 
  2758  049A                     	;# 
  2759  049B                     	;# 
  2760  049B                     	;# 
  2761  049C                     	;# 
  2762  049D                     	;# 
  2763  049E                     	;# 
  2764  049F                     	;# 
  2765  0617                     	;# 
  2766  0618                     	;# 
  2767  0619                     	;# 
  2768  0619                     	;# 
  2769  061A                     	;# 
  2770  061B                     	;# 
  2771  061C                     	;# 
  2772  061C                     	;# 
  2773  061F                     	;# 
  2774  0691                     	;# 
  2775  0692                     	;# 
  2776  0693                     	;# 
  2777  0694                     	;# 
  2778  0695                     	;# 
  2779  0696                     	;# 
  2780  0697                     	;# 
  2781  0698                     	;# 
  2782  0699                     	;# 
  2783  0711                     	;# 
  2784  0712                     	;# 
  2785  0713                     	;# 
  2786  0714                     	;# 
  2787  0715                     	;# 
  2788  0716                     	;# 
  2789  0717                     	;# 
  2790  0718                     	;# 
  2791  0719                     	;# 
  2792  0891                     	;# 
  2793  0891                     	;# 
  2794  0891                     	;# 
  2795  0891                     	;# 
  2796  0891                     	;# 
  2797  0891                     	;# 
  2798  0892                     	;# 
  2799  0892                     	;# 
  2800  0892                     	;# 
  2801  0893                     	;# 
  2802  0893                     	;# 
  2803  0893                     	;# 
  2804  0893                     	;# 
  2805  0893                     	;# 
  2806  0893                     	;# 
  2807  0894                     	;# 
  2808  0894                     	;# 
  2809  0894                     	;# 
  2810  0895                     	;# 
  2811  0895                     	;# 
  2812  0895                     	;# 
  2813  0896                     	;# 
  2814  0896                     	;# 
  2815  0896                     	;# 
  2816  089B                     	;# 
  2817  0911                     	;# 
  2818  0912                     	;# 
  2819  0913                     	;# 
  2820  0914                     	;# 
  2821  0915                     	;# 
  2822  0916                     	;# 
  2823  0918                     	;# 
  2824  0919                     	;# 
  2825  091A                     	;# 
  2826  091B                     	;# 
  2827  091C                     	;# 
  2828  091D                     	;# 
  2829  091E                     	;# 
  2830  091F                     	;# 
  2831  0E0F                     	;# 
  2832  0E10                     	;# 
  2833  0E11                     	;# 
  2834  0E12                     	;# 
  2835  0E13                     	;# 
  2836  0E14                     	;# 
  2837  0E15                     	;# 
  2838  0E16                     	;# 
  2839  0E17                     	;# 
  2840  0E18                     	;# 
  2841  0E19                     	;# 
  2842  0E1A                     	;# 
  2843  0E1B                     	;# 
  2844  0E1C                     	;# 
  2845  0E1D                     	;# 
  2846  0E1E                     	;# 
  2847  0E1F                     	;# 
  2848  0E20                     	;# 
  2849  0E21                     	;# 
  2850  0E22                     	;# 
  2851  0E24                     	;# 
  2852  0E25                     	;# 
  2853  0E28                     	;# 
  2854  0E29                     	;# 
  2855  0E2A                     	;# 
  2856  0E2B                     	;# 
  2857  0E2C                     	;# 
  2858  0E2D                     	;# 
  2859  0E2E                     	;# 
  2860  0E2F                     	;# 
  2861  0E90                     	;# 
  2862  0E91                     	;# 
  2863  0E92                     	;# 
  2864  0E94                     	;# 
  2865  0E95                     	;# 
  2866  0E9C                     	;# 
  2867  0E9D                     	;# 
  2868  0E9E                     	;# 
  2869  0E9F                     	;# 
  2870  0EA0                     	;# 
  2871  0EA1                     	;# 
  2872  0EA2                     	;# 
  2873  0EA3                     	;# 
  2874  0EA4                     	;# 
  2875  0EA5                     	;# 
  2876  0EA6                     	;# 
  2877  0EA7                     	;# 
  2878  0F0F                     	;# 
  2879  0F10                     	;# 
  2880  0F11                     	;# 
  2881  0F12                     	;# 
  2882  0F13                     	;# 
  2883  0F14                     	;# 
  2884  0F15                     	;# 
  2885  0F16                     	;# 
  2886  0F17                     	;# 
  2887  0F18                     	;# 
  2888  0F19                     	;# 
  2889  0F1A                     	;# 
  2890  0F1B                     	;# 
  2891  0F1C                     	;# 
  2892  0F1D                     	;# 
  2893  0F1E                     	;# 
  2894  0F1F                     	;# 
  2895  0F20                     	;# 
  2896  0F21                     	;# 
  2897  0F22                     	;# 
  2898  0F23                     	;# 
  2899  0F24                     	;# 
  2900  0F25                     	;# 
  2901  0F26                     	;# 
  2902  0F27                     	;# 
  2903  0F28                     	;# 
  2904  0F29                     	;# 
  2905  0F2A                     	;# 
  2906  0F2B                     	;# 
  2907  0F2C                     	;# 
  2908  0F2D                     	;# 
  2909  0F2E                     	;# 
  2910  0F2F                     	;# 
  2911  0F30                     	;# 
  2912  0F31                     	;# 
  2913  0F32                     	;# 
  2914  0F33                     	;# 
  2915  0F34                     	;# 
  2916  0F35                     	;# 
  2917  0F36                     	;# 
  2918  0F37                     	;# 
  2919  0FE4                     	;# 
  2920  0FE5                     	;# 
  2921  0FE6                     	;# 
  2922  0FE7                     	;# 
  2923  0FE8                     	;# 
  2924  0FE9                     	;# 
  2925  0FEA                     	;# 
  2926  0FEB                     	;# 
  2927  0FED                     	;# 
  2928  0FEE                     	;# 
  2929  0FEF                     	;# 
  2930  0000                     	;# 
  2931  0001                     	;# 
  2932  0002                     	;# 
  2933  0003                     	;# 
  2934  0004                     	;# 
  2935  0005                     	;# 
  2936  0006                     	;# 
  2937  0007                     	;# 
  2938  0008                     	;# 
  2939  0009                     	;# 
  2940  000A                     	;# 
  2941  000B                     	;# 
  2942  000C                     	;# 
  2943  000D                     	;# 
  2944  000E                     	;# 
  2945  0010                     	;# 
  2946  0011                     	;# 
  2947  0012                     	;# 
  2948  0013                     	;# 
  2949  0014                     	;# 
  2950  0015                     	;# 
  2951  0015                     	;# 
  2952  0016                     	;# 
  2953  0016                     	;# 
  2954  0017                     	;# 
  2955  0018                     	;# 
  2956  0019                     	;# 
  2957  0019                     	;# 
  2958  001A                     	;# 
  2959  001B                     	;# 
  2960  001C                     	;# 
  2961  001D                     	;# 
  2962  001E                     	;# 
  2963  001F                     	;# 
  2964  008C                     	;# 
  2965  008D                     	;# 
  2966  008E                     	;# 
  2967  0090                     	;# 
  2968  0091                     	;# 
  2969  0092                     	;# 
  2970  0093                     	;# 
  2971  0094                     	;# 
  2972  0097                     	;# 
  2973  009B                     	;# 
  2974  009B                     	;# 
  2975  009C                     	;# 
  2976  009D                     	;# 
  2977  009E                     	;# 
  2978  009F                     	;# 
  2979  010C                     	;# 
  2980  010D                     	;# 
  2981  010E                     	;# 
  2982  0111                     	;# 
  2983  0112                     	;# 
  2984  0113                     	;# 
  2985  0114                     	;# 
  2986  0115                     	;# 
  2987  0116                     	;# 
  2988  0117                     	;# 
  2989  0118                     	;# 
  2990  0119                     	;# 
  2991  018C                     	;# 
  2992  018D                     	;# 
  2993  018E                     	;# 
  2994  0197                     	;# 
  2995  0199                     	;# 
  2996  0199                     	;# 
  2997  0199                     	;# 
  2998  019A                     	;# 
  2999  019A                     	;# 
  3000  019A                     	;# 
  3001  019B                     	;# 
  3002  019B                     	;# 
  3003  019B                     	;# 
  3004  019B                     	;# 
  3005  019B                     	;# 
  3006  019C                     	;# 
  3007  019C                     	;# 
  3008  019C                     	;# 
  3009  019D                     	;# 
  3010  019D                     	;# 
  3011  019D                     	;# 
  3012  019E                     	;# 
  3013  019E                     	;# 
  3014  019E                     	;# 
  3015  019F                     	;# 
  3016  019F                     	;# 
  3017  019F                     	;# 
  3018  019F                     	;# 
  3019  019F                     	;# 
  3020  020C                     	;# 
  3021  020D                     	;# 
  3022  020E                     	;# 
  3023  0211                     	;# 
  3024  0211                     	;# 
  3025  0212                     	;# 
  3026  0212                     	;# 
  3027  0213                     	;# 
  3028  0213                     	;# 
  3029  0214                     	;# 
  3030  0214                     	;# 
  3031  0215                     	;# 
  3032  0215                     	;# 
  3033  0215                     	;# 
  3034  0215                     	;# 
  3035  0216                     	;# 
  3036  0216                     	;# 
  3037  0217                     	;# 
  3038  0217                     	;# 
  3039  0219                     	;# 
  3040  021A                     	;# 
  3041  021B                     	;# 
  3042  021C                     	;# 
  3043  021D                     	;# 
  3044  021D                     	;# 
  3045  021E                     	;# 
  3046  021F                     	;# 
  3047  028C                     	;# 
  3048  028D                     	;# 
  3049  028E                     	;# 
  3050  0291                     	;# 
  3051  0291                     	;# 
  3052  0292                     	;# 
  3053  0293                     	;# 
  3054  0294                     	;# 
  3055  0295                     	;# 
  3056  0295                     	;# 
  3057  0296                     	;# 
  3058  0297                     	;# 
  3059  0298                     	;# 
  3060  029F                     	;# 
  3061  030C                     	;# 
  3062  030D                     	;# 
  3063  030E                     	;# 
  3064  0311                     	;# 
  3065  0311                     	;# 
  3066  0312                     	;# 
  3067  0313                     	;# 
  3068  0314                     	;# 
  3069  0315                     	;# 
  3070  0315                     	;# 
  3071  0316                     	;# 
  3072  0317                     	;# 
  3073  0318                     	;# 
  3074  038C                     	;# 
  3075  038D                     	;# 
  3076  038E                     	;# 
  3077  0391                     	;# 
  3078  0392                     	;# 
  3079  0393                     	;# 
  3080  0394                     	;# 
  3081  0395                     	;# 
  3082  0396                     	;# 
  3083  0397                     	;# 
  3084  0398                     	;# 
  3085  0399                     	;# 
  3086  039A                     	;# 
  3087  039C                     	;# 
  3088  039D                     	;# 
  3089  039E                     	;# 
  3090  039F                     	;# 
  3091  0411                     	;# 
  3092  0411                     	;# 
  3093  0412                     	;# 
  3094  0413                     	;# 
  3095  0414                     	;# 
  3096  0415                     	;# 
  3097  0416                     	;# 
  3098  0417                     	;# 
  3099  0418                     	;# 
  3100  0418                     	;# 
  3101  0419                     	;# 
  3102  041A                     	;# 
  3103  041B                     	;# 
  3104  041C                     	;# 
  3105  041D                     	;# 
  3106  041E                     	;# 
  3107  041F                     	;# 
  3108  0498                     	;# 
  3109  0498                     	;# 
  3110  0499                     	;# 
  3111  049A                     	;# 
  3112  049B                     	;# 
  3113  049B                     	;# 
  3114  049C                     	;# 
  3115  049D                     	;# 
  3116  049E                     	;# 
  3117  049F                     	;# 
  3118  0617                     	;# 
  3119  0618                     	;# 
  3120  0619                     	;# 
  3121  0619                     	;# 
  3122  061A                     	;# 
  3123  061B                     	;# 
  3124  061C                     	;# 
  3125  061C                     	;# 
  3126  061F                     	;# 
  3127  0691                     	;# 
  3128  0692                     	;# 
  3129  0693                     	;# 
  3130  0694                     	;# 
  3131  0695                     	;# 
  3132  0696                     	;# 
  3133  0697                     	;# 
  3134  0698                     	;# 
  3135  0699                     	;# 
  3136  0711                     	;# 
  3137  0712                     	;# 
  3138  0713                     	;# 
  3139  0714                     	;# 
  3140  0715                     	;# 
  3141  0716                     	;# 
  3142  0717                     	;# 
  3143  0718                     	;# 
  3144  0719                     	;# 
  3145  0891                     	;# 
  3146  0891                     	;# 
  3147  0891                     	;# 
  3148  0891                     	;# 
  3149  0891                     	;# 
  3150  0891                     	;# 
  3151  0892                     	;# 
  3152  0892                     	;# 
  3153  0892                     	;# 
  3154  0893                     	;# 
  3155  0893                     	;# 
  3156  0893                     	;# 
  3157  0893                     	;# 
  3158  0893                     	;# 
  3159  0893                     	;# 
  3160  0894                     	;# 
  3161  0894                     	;# 
  3162  0894                     	;# 
  3163  0895                     	;# 
  3164  0895                     	;# 
  3165  0895                     	;# 
  3166  0896                     	;# 
  3167  0896                     	;# 
  3168  0896                     	;# 
  3169  089B                     	;# 
  3170  0911                     	;# 
  3171  0912                     	;# 
  3172  0913                     	;# 
  3173  0914                     	;# 
  3174  0915                     	;# 
  3175  0916                     	;# 
  3176  0918                     	;# 
  3177  0919                     	;# 
  3178  091A                     	;# 
  3179  091B                     	;# 
  3180  091C                     	;# 
  3181  091D                     	;# 
  3182  091E                     	;# 
  3183  091F                     	;# 
  3184  0E0F                     	;# 
  3185  0E10                     	;# 
  3186  0E11                     	;# 
  3187  0E12                     	;# 
  3188  0E13                     	;# 
  3189  0E14                     	;# 
  3190  0E15                     	;# 
  3191  0E16                     	;# 
  3192  0E17                     	;# 
  3193  0E18                     	;# 
  3194  0E19                     	;# 
  3195  0E1A                     	;# 
  3196  0E1B                     	;# 
  3197  0E1C                     	;# 
  3198  0E1D                     	;# 
  3199  0E1E                     	;# 
  3200  0E1F                     	;# 
  3201  0E20                     	;# 
  3202  0E21                     	;# 
  3203  0E22                     	;# 
  3204  0E24                     	;# 
  3205  0E25                     	;# 
  3206  0E28                     	;# 
  3207  0E29                     	;# 
  3208  0E2A                     	;# 
  3209  0E2B                     	;# 
  3210  0E2C                     	;# 
  3211  0E2D                     	;# 
  3212  0E2E                     	;# 
  3213  0E2F                     	;# 
  3214  0E90                     	;# 
  3215  0E91                     	;# 
  3216  0E92                     	;# 
  3217  0E94                     	;# 
  3218  0E95                     	;# 
  3219  0E9C                     	;# 
  3220  0E9D                     	;# 
  3221  0E9E                     	;# 
  3222  0E9F                     	;# 
  3223  0EA0                     	;# 
  3224  0EA1                     	;# 
  3225  0EA2                     	;# 
  3226  0EA3                     	;# 
  3227  0EA4                     	;# 
  3228  0EA5                     	;# 
  3229  0EA6                     	;# 
  3230  0EA7                     	;# 
  3231  0F0F                     	;# 
  3232  0F10                     	;# 
  3233  0F11                     	;# 
  3234  0F12                     	;# 
  3235  0F13                     	;# 
  3236  0F14                     	;# 
  3237  0F15                     	;# 
  3238  0F16                     	;# 
  3239  0F17                     	;# 
  3240  0F18                     	;# 
  3241  0F19                     	;# 
  3242  0F1A                     	;# 
  3243  0F1B                     	;# 
  3244  0F1C                     	;# 
  3245  0F1D                     	;# 
  3246  0F1E                     	;# 
  3247  0F1F                     	;# 
  3248  0F20                     	;# 
  3249  0F21                     	;# 
  3250  0F22                     	;# 
  3251  0F23                     	;# 
  3252  0F24                     	;# 
  3253  0F25                     	;# 
  3254  0F26                     	;# 
  3255  0F27                     	;# 
  3256  0F28                     	;# 
  3257  0F29                     	;# 
  3258  0F2A                     	;# 
  3259  0F2B                     	;# 
  3260  0F2C                     	;# 
  3261  0F2D                     	;# 
  3262  0F2E                     	;# 
  3263  0F2F                     	;# 
  3264  0F30                     	;# 
  3265  0F31                     	;# 
  3266  0F32                     	;# 
  3267  0F33                     	;# 
  3268  0F34                     	;# 
  3269  0F35                     	;# 
  3270  0F36                     	;# 
  3271  0F37                     	;# 
  3272  0FE4                     	;# 
  3273  0FE5                     	;# 
  3274  0FE6                     	;# 
  3275  0FE7                     	;# 
  3276  0FE8                     	;# 
  3277  0FE9                     	;# 
  3278  0FEA                     	;# 
  3279  0FEB                     	;# 
  3280  0FED                     	;# 
  3281  0FEE                     	;# 
  3282  0FEF                     	;# 
  3283  0000                     	;# 
  3284  0001                     	;# 
  3285  0002                     	;# 
  3286  0003                     	;# 
  3287  0004                     	;# 
  3288  0005                     	;# 
  3289  0006                     	;# 
  3290  0007                     	;# 
  3291  0008                     	;# 
  3292  0009                     	;# 
  3293  000A                     	;# 
  3294  000B                     	;# 
  3295  000C                     	;# 
  3296  000D                     	;# 
  3297  000E                     	;# 
  3298  0010                     	;# 
  3299  0011                     	;# 
  3300  0012                     	;# 
  3301  0013                     	;# 
  3302  0014                     	;# 
  3303  0015                     	;# 
  3304  0015                     	;# 
  3305  0016                     	;# 
  3306  0016                     	;# 
  3307  0017                     	;# 
  3308  0018                     	;# 
  3309  0019                     	;# 
  3310  0019                     	;# 
  3311  001A                     	;# 
  3312  001B                     	;# 
  3313  001C                     	;# 
  3314  001D                     	;# 
  3315  001E                     	;# 
  3316  001F                     	;# 
  3317  008C                     	;# 
  3318  008D                     	;# 
  3319  008E                     	;# 
  3320  0090                     	;# 
  3321  0091                     	;# 
  3322  0092                     	;# 
  3323  0093                     	;# 
  3324  0094                     	;# 
  3325  0097                     	;# 
  3326  009B                     	;# 
  3327  009B                     	;# 
  3328  009C                     	;# 
  3329  009D                     	;# 
  3330  009E                     	;# 
  3331  009F                     	;# 
  3332  010C                     	;# 
  3333  010D                     	;# 
  3334  010E                     	;# 
  3335  0111                     	;# 
  3336  0112                     	;# 
  3337  0113                     	;# 
  3338  0114                     	;# 
  3339  0115                     	;# 
  3340  0116                     	;# 
  3341  0117                     	;# 
  3342  0118                     	;# 
  3343  0119                     	;# 
  3344  018C                     	;# 
  3345  018D                     	;# 
  3346  018E                     	;# 
  3347  0197                     	;# 
  3348  0199                     	;# 
  3349  0199                     	;# 
  3350  0199                     	;# 
  3351  019A                     	;# 
  3352  019A                     	;# 
  3353  019A                     	;# 
  3354  019B                     	;# 
  3355  019B                     	;# 
  3356  019B                     	;# 
  3357  019B                     	;# 
  3358  019B                     	;# 
  3359  019C                     	;# 
  3360  019C                     	;# 
  3361  019C                     	;# 
  3362  019D                     	;# 
  3363  019D                     	;# 
  3364  019D                     	;# 
  3365  019E                     	;# 
  3366  019E                     	;# 
  3367  019E                     	;# 
  3368  019F                     	;# 
  3369  019F                     	;# 
  3370  019F                     	;# 
  3371  019F                     	;# 
  3372  019F                     	;# 
  3373  020C                     	;# 
  3374  020D                     	;# 
  3375  020E                     	;# 
  3376  0211                     	;# 
  3377  0211                     	;# 
  3378  0212                     	;# 
  3379  0212                     	;# 
  3380  0213                     	;# 
  3381  0213                     	;# 
  3382  0214                     	;# 
  3383  0214                     	;# 
  3384  0215                     	;# 
  3385  0215                     	;# 
  3386  0215                     	;# 
  3387  0215                     	;# 
  3388  0216                     	;# 
  3389  0216                     	;# 
  3390  0217                     	;# 
  3391  0217                     	;# 
  3392  0219                     	;# 
  3393  021A                     	;# 
  3394  021B                     	;# 
  3395  021C                     	;# 
  3396  021D                     	;# 
  3397  021D                     	;# 
  3398  021E                     	;# 
  3399  021F                     	;# 
  3400  028C                     	;# 
  3401  028D                     	;# 
  3402  028E                     	;# 
  3403  0291                     	;# 
  3404  0291                     	;# 
  3405  0292                     	;# 
  3406  0293                     	;# 
  3407  0294                     	;# 
  3408  0295                     	;# 
  3409  0295                     	;# 
  3410  0296                     	;# 
  3411  0297                     	;# 
  3412  0298                     	;# 
  3413  029F                     	;# 
  3414  030C                     	;# 
  3415  030D                     	;# 
  3416  030E                     	;# 
  3417  0311                     	;# 
  3418  0311                     	;# 
  3419  0312                     	;# 
  3420  0313                     	;# 
  3421  0314                     	;# 
  3422  0315                     	;# 
  3423  0315                     	;# 
  3424  0316                     	;# 
  3425  0317                     	;# 
  3426  0318                     	;# 
  3427  038C                     	;# 
  3428  038D                     	;# 
  3429  038E                     	;# 
  3430  0391                     	;# 
  3431  0392                     	;# 
  3432  0393                     	;# 
  3433  0394                     	;# 
  3434  0395                     	;# 
  3435  0396                     	;# 
  3436  0397                     	;# 
  3437  0398                     	;# 
  3438  0399                     	;# 
  3439  039A                     	;# 
  3440  039C                     	;# 
  3441  039D                     	;# 
  3442  039E                     	;# 
  3443  039F                     	;# 
  3444  0411                     	;# 
  3445  0411                     	;# 
  3446  0412                     	;# 
  3447  0413                     	;# 
  3448  0414                     	;# 
  3449  0415                     	;# 
  3450  0416                     	;# 
  3451  0417                     	;# 
  3452  0418                     	;# 
  3453  0418                     	;# 
  3454  0419                     	;# 
  3455  041A                     	;# 
  3456  041B                     	;# 
  3457  041C                     	;# 
  3458  041D                     	;# 
  3459  041E                     	;# 
  3460  041F                     	;# 
  3461  0498                     	;# 
  3462  0498                     	;# 
  3463  0499                     	;# 
  3464  049A                     	;# 
  3465  049B                     	;# 
  3466  049B                     	;# 
  3467  049C                     	;# 
  3468  049D                     	;# 
  3469  049E                     	;# 
  3470  049F                     	;# 
  3471  0617                     	;# 
  3472  0618                     	;# 
  3473  0619                     	;# 
  3474  0619                     	;# 
  3475  061A                     	;# 
  3476  061B                     	;# 
  3477  061C                     	;# 
  3478  061C                     	;# 
  3479  061F                     	;# 
  3480  0691                     	;# 
  3481  0692                     	;# 
  3482  0693                     	;# 
  3483  0694                     	;# 
  3484  0695                     	;# 
  3485  0696                     	;# 
  3486  0697                     	;# 
  3487  0698                     	;# 
  3488  0699                     	;# 
  3489  0711                     	;# 
  3490  0712                     	;# 
  3491  0713                     	;# 
  3492  0714                     	;# 
  3493  0715                     	;# 
  3494  0716                     	;# 
  3495  0717                     	;# 
  3496  0718                     	;# 
  3497  0719                     	;# 
  3498  0891                     	;# 
  3499  0891                     	;# 
  3500  0891                     	;# 
  3501  0891                     	;# 
  3502  0891                     	;# 
  3503  0891                     	;# 
  3504  0892                     	;# 
  3505  0892                     	;# 
  3506  0892                     	;# 
  3507  0893                     	;# 
  3508  0893                     	;# 
  3509  0893                     	;# 
  3510  0893                     	;# 
  3511  0893                     	;# 
  3512  0893                     	;# 
  3513  0894                     	;# 
  3514  0894                     	;# 
  3515  0894                     	;# 
  3516  0895                     	;# 
  3517  0895                     	;# 
  3518  0895                     	;# 
  3519  0896                     	;# 
  3520  0896                     	;# 
  3521  0896                     	;# 
  3522  089B                     	;# 
  3523  0911                     	;# 
  3524  0912                     	;# 
  3525  0913                     	;# 
  3526  0914                     	;# 
  3527  0915                     	;# 
  3528  0916                     	;# 
  3529  0918                     	;# 
  3530  0919                     	;# 
  3531  091A                     	;# 
  3532  091B                     	;# 
  3533  091C                     	;# 
  3534  091D                     	;# 
  3535  091E                     	;# 
  3536  091F                     	;# 
  3537  0E0F                     	;# 
  3538  0E10                     	;# 
  3539  0E11                     	;# 
  3540  0E12                     	;# 
  3541  0E13                     	;# 
  3542  0E14                     	;# 
  3543  0E15                     	;# 
  3544  0E16                     	;# 
  3545  0E17                     	;# 
  3546  0E18                     	;# 
  3547  0E19                     	;# 
  3548  0E1A                     	;# 
  3549  0E1B                     	;# 
  3550  0E1C                     	;# 
  3551  0E1D                     	;# 
  3552  0E1E                     	;# 
  3553  0E1F                     	;# 
  3554  0E20                     	;# 
  3555  0E21                     	;# 
  3556  0E22                     	;# 
  3557  0E24                     	;# 
  3558  0E25                     	;# 
  3559  0E28                     	;# 
  3560  0E29                     	;# 
  3561  0E2A                     	;# 
  3562  0E2B                     	;# 
  3563  0E2C                     	;# 
  3564  0E2D                     	;# 
  3565  0E2E                     	;# 
  3566  0E2F                     	;# 
  3567  0E90                     	;# 
  3568  0E91                     	;# 
  3569  0E92                     	;# 
  3570  0E94                     	;# 
  3571  0E95                     	;# 
  3572  0E9C                     	;# 
  3573  0E9D                     	;# 
  3574  0E9E                     	;# 
  3575  0E9F                     	;# 
  3576  0EA0                     	;# 
  3577  0EA1                     	;# 
  3578  0EA2                     	;# 
  3579  0EA3                     	;# 
  3580  0EA4                     	;# 
  3581  0EA5                     	;# 
  3582  0EA6                     	;# 
  3583  0EA7                     	;# 
  3584  0F0F                     	;# 
  3585  0F10                     	;# 
  3586  0F11                     	;# 
  3587  0F12                     	;# 
  3588  0F13                     	;# 
  3589  0F14                     	;# 
  3590  0F15                     	;# 
  3591  0F16                     	;# 
  3592  0F17                     	;# 
  3593  0F18                     	;# 
  3594  0F19                     	;# 
  3595  0F1A                     	;# 
  3596  0F1B                     	;# 
  3597  0F1C                     	;# 
  3598  0F1D                     	;# 
  3599  0F1E                     	;# 
  3600  0F1F                     	;# 
  3601  0F20                     	;# 
  3602  0F21                     	;# 
  3603  0F22                     	;# 
  3604  0F23                     	;# 
  3605  0F24                     	;# 
  3606  0F25                     	;# 
  3607  0F26                     	;# 
  3608  0F27                     	;# 
  3609  0F28                     	;# 
  3610  0F29                     	;# 
  3611  0F2A                     	;# 
  3612  0F2B                     	;# 
  3613  0F2C                     	;# 
  3614  0F2D                     	;# 
  3615  0F2E                     	;# 
  3616  0F2F                     	;# 
  3617  0F30                     	;# 
  3618  0F31                     	;# 
  3619  0F32                     	;# 
  3620  0F33                     	;# 
  3621  0F34                     	;# 
  3622  0F35                     	;# 
  3623  0F36                     	;# 
  3624  0F37                     	;# 
  3625  0FE4                     	;# 
  3626  0FE5                     	;# 
  3627  0FE6                     	;# 
  3628  0FE7                     	;# 
  3629  0FE8                     	;# 
  3630  0FE9                     	;# 
  3631  0FEA                     	;# 
  3632  0FEB                     	;# 
  3633  0FED                     	;# 
  3634  0FEE                     	;# 
  3635  0FEF                     	;# 
  3636                           
  3637                           	psect	eeprom_data
  3638  0000  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3639  0008  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3640  0010  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3641  0018  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3642  0020  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3643  0028  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3644  0030  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3645  0038  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3646  0040  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3647  0048  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3648  0050  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3649  0058  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3650  0060  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3651  0068  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3652  0070  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3653  0078  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3654  0080  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3655  0088  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3656  0090  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3657  0098  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3658  00A0  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3659  00A8  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3660  00B0  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3661  00B8  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3662  00C0  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3663  00C8  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3664  00D0  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3665  00D8  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3666  00E0  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3667  00E8  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3668  00F0  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3669  00F8  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3670  0000                     	;# 
  3671  0001                     	;# 
  3672  0002                     	;# 
  3673  0003                     	;# 
  3674  0004                     	;# 
  3675  0005                     	;# 
  3676  0006                     	;# 
  3677  0007                     	;# 
  3678  0008                     	;# 
  3679  0009                     	;# 
  3680  000A                     	;# 
  3681  000B                     	;# 
  3682  000C                     	;# 
  3683  000D                     	;# 
  3684  000E                     	;# 
  3685  0010                     	;# 
  3686  0011                     	;# 
  3687  0012                     	;# 
  3688  0013                     	;# 
  3689  0014                     	;# 
  3690  0015                     	;# 
  3691  0015                     	;# 
  3692  0016                     	;# 
  3693  0016                     	;# 
  3694  0017                     	;# 
  3695  0018                     	;# 
  3696  0019                     	;# 
  3697  0019                     	;# 
  3698  001A                     	;# 
  3699  001B                     	;# 
  3700  001C                     	;# 
  3701  001D                     	;# 
  3702  001E                     	;# 
  3703  001F                     	;# 
  3704  008C                     	;# 
  3705  008D                     	;# 
  3706  008E                     	;# 
  3707  0090                     	;# 
  3708  0091                     	;# 
  3709  0092                     	;# 
  3710  0093                     	;# 
  3711  0094                     	;# 
  3712  0097                     	;# 
  3713  009B                     	;# 
  3714  009B                     	;# 
  3715  009C                     	;# 
  3716  009D                     	;# 
  3717  009E                     	;# 
  3718  009F                     	;# 
  3719  010C                     	;# 
  3720  010D                     	;# 
  3721  010E                     	;# 
  3722  0111                     	;# 
  3723  0112                     	;# 
  3724  0113                     	;# 
  3725  0114                     	;# 
  3726  0115                     	;# 
  3727  0116                     	;# 
  3728  0117                     	;# 
  3729  0118                     	;# 
  3730  0119                     	;# 
  3731  018C                     	;# 
  3732  018D                     	;# 
  3733  018E                     	;# 
  3734  0197                     	;# 
  3735  0199                     	;# 
  3736  0199                     	;# 
  3737  0199                     	;# 
  3738  019A                     	;# 
  3739  019A                     	;# 
  3740  019A                     	;# 
  3741  019B                     	;# 
  3742  019B                     	;# 
  3743  019B                     	;# 
  3744  019B                     	;# 
  3745  019B                     	;# 
  3746  019C                     	;# 
  3747  019C                     	;# 
  3748  019C                     	;# 
  3749  019D                     	;# 
  3750  019D                     	;# 
  3751  019D                     	;# 
  3752  019E                     	;# 
  3753  019E                     	;# 
  3754  019E                     	;# 
  3755  019F                     	;# 
  3756  019F                     	;# 
  3757  019F                     	;# 
  3758  019F                     	;# 
  3759  019F                     	;# 
  3760  020C                     	;# 
  3761  020D                     	;# 
  3762  020E                     	;# 
  3763  0211                     	;# 
  3764  0211                     	;# 
  3765  0212                     	;# 
  3766  0212                     	;# 
  3767  0213                     	;# 
  3768  0213                     	;# 
  3769  0214                     	;# 
  3770  0214                     	;# 
  3771  0215                     	;# 
  3772  0215                     	;# 
  3773  0215                     	;# 
  3774  0215                     	;# 
  3775  0216                     	;# 
  3776  0216                     	;# 
  3777  0217                     	;# 
  3778  0217                     	;# 
  3779  0219                     	;# 
  3780  021A                     	;# 
  3781  021B                     	;# 
  3782  021C                     	;# 
  3783  021D                     	;# 
  3784  021D                     	;# 
  3785  021E                     	;# 
  3786  021F                     	;# 
  3787  028C                     	;# 
  3788  028D                     	;# 
  3789  028E                     	;# 
  3790  0291                     	;# 
  3791  0291                     	;# 
  3792  0292                     	;# 
  3793  0293                     	;# 
  3794  0294                     	;# 
  3795  0295                     	;# 
  3796  0295                     	;# 
  3797  0296                     	;# 
  3798  0297                     	;# 
  3799  0298                     	;# 
  3800  029F                     	;# 
  3801  030C                     	;# 
  3802  030D                     	;# 
  3803  030E                     	;# 
  3804  0311                     	;# 
  3805  0311                     	;# 
  3806  0312                     	;# 
  3807  0313                     	;# 
  3808  0314                     	;# 
  3809  0315                     	;# 
  3810  0315                     	;# 
  3811  0316                     	;# 
  3812  0317                     	;# 
  3813  0318                     	;# 
  3814  038C                     	;# 
  3815  038D                     	;# 
  3816  038E                     	;# 
  3817  0391                     	;# 
  3818  0392                     	;# 
  3819  0393                     	;# 
  3820  0394                     	;# 
  3821  0395                     	;# 
  3822  0396                     	;# 
  3823  0397                     	;# 
  3824  0398                     	;# 
  3825  0399                     	;# 
  3826  039A                     	;# 
  3827  039C                     	;# 
  3828  039D                     	;# 
  3829  039E                     	;# 
  3830  039F                     	;# 
  3831  0411                     	;# 
  3832  0411                     	;# 
  3833  0412                     	;# 
  3834  0413                     	;# 
  3835  0414                     	;# 
  3836  0415                     	;# 
  3837  0416                     	;# 
  3838  0417                     	;# 
  3839  0418                     	;# 
  3840  0418                     	;# 
  3841  0419                     	;# 
  3842  041A                     	;# 
  3843  041B                     	;# 
  3844  041C                     	;# 
  3845  041D                     	;# 
  3846  041E                     	;# 
  3847  041F                     	;# 
  3848  0498                     	;# 
  3849  0498                     	;# 
  3850  0499                     	;# 
  3851  049A                     	;# 
  3852  049B                     	;# 
  3853  049B                     	;# 
  3854  049C                     	;# 
  3855  049D                     	;# 
  3856  049E                     	;# 
  3857  049F                     	;# 
  3858  0617                     	;# 
  3859  0618                     	;# 
  3860  0619                     	;# 
  3861  0619                     	;# 
  3862  061A                     	;# 
  3863  061B                     	;# 
  3864  061C                     	;# 
  3865  061C                     	;# 
  3866  061F                     	;# 
  3867  0691                     	;# 
  3868  0692                     	;# 
  3869  0693                     	;# 
  3870  0694                     	;# 
  3871  0695                     	;# 
  3872  0696                     	;# 
  3873  0697                     	;# 
  3874  0698                     	;# 
  3875  0699                     	;# 
  3876  0711                     	;# 
  3877  0712                     	;# 
  3878  0713                     	;# 
  3879  0714                     	;# 
  3880  0715                     	;# 
  3881  0716                     	;# 
  3882  0717                     	;# 
  3883  0718                     	;# 
  3884  0719                     	;# 
  3885  0891                     	;# 
  3886  0891                     	;# 
  3887  0891                     	;# 
  3888  0891                     	;# 
  3889  0891                     	;# 
  3890  0891                     	;# 
  3891  0892                     	;# 
  3892  0892                     	;# 
  3893  0892                     	;# 
  3894  0893                     	;# 
  3895  0893                     	;# 
  3896  0893                     	;# 
  3897  0893                     	;# 
  3898  0893                     	;# 
  3899  0893                     	;# 
  3900  0894                     	;# 
  3901  0894                     	;# 
  3902  0894                     	;# 
  3903  0895                     	;# 
  3904  0895                     	;# 
  3905  0895                     	;# 
  3906  0896                     	;# 
  3907  0896                     	;# 
  3908  0896                     	;# 
  3909  089B                     	;# 
  3910  0911                     	;# 
  3911  0912                     	;# 
  3912  0913                     	;# 
  3913  0914                     	;# 
  3914  0915                     	;# 
  3915  0916                     	;# 
  3916  0918                     	;# 
  3917  0919                     	;# 
  3918  091A                     	;# 
  3919  091B                     	;# 
  3920  091C                     	;# 
  3921  091D                     	;# 
  3922  091E                     	;# 
  3923  091F                     	;# 
  3924  0E0F                     	;# 
  3925  0E10                     	;# 
  3926  0E11                     	;# 
  3927  0E12                     	;# 
  3928  0E13                     	;# 
  3929  0E14                     	;# 
  3930  0E15                     	;# 
  3931  0E16                     	;# 
  3932  0E17                     	;# 
  3933  0E18                     	;# 
  3934  0E19                     	;# 
  3935  0E1A                     	;# 
  3936  0E1B                     	;# 
  3937  0E1C                     	;# 
  3938  0E1D                     	;# 
  3939  0E1E                     	;# 
  3940  0E1F                     	;# 
  3941  0E20                     	;# 
  3942  0E21                     	;# 
  3943  0E22                     	;# 
  3944  0E24                     	;# 
  3945  0E25                     	;# 
  3946  0E28                     	;# 
  3947  0E29                     	;# 
  3948  0E2A                     	;# 
  3949  0E2B                     	;# 
  3950  0E2C                     	;# 
  3951  0E2D                     	;# 
  3952  0E2E                     	;# 
  3953  0E2F                     	;# 
  3954  0E90                     	;# 
  3955  0E91                     	;# 
  3956  0E92                     	;# 
  3957  0E94                     	;# 
  3958  0E95                     	;# 
  3959  0E9C                     	;# 
  3960  0E9D                     	;# 
  3961  0E9E                     	;# 
  3962  0E9F                     	;# 
  3963  0EA0                     	;# 
  3964  0EA1                     	;# 
  3965  0EA2                     	;# 
  3966  0EA3                     	;# 
  3967  0EA4                     	;# 
  3968  0EA5                     	;# 
  3969  0EA6                     	;# 
  3970  0EA7                     	;# 
  3971  0F0F                     	;# 
  3972  0F10                     	;# 
  3973  0F11                     	;# 
  3974  0F12                     	;# 
  3975  0F13                     	;# 
  3976  0F14                     	;# 
  3977  0F15                     	;# 
  3978  0F16                     	;# 
  3979  0F17                     	;# 
  3980  0F18                     	;# 
  3981  0F19                     	;# 
  3982  0F1A                     	;# 
  3983  0F1B                     	;# 
  3984  0F1C                     	;# 
  3985  0F1D                     	;# 
  3986  0F1E                     	;# 
  3987  0F1F                     	;# 
  3988  0F20                     	;# 
  3989  0F21                     	;# 
  3990  0F22                     	;# 
  3991  0F23                     	;# 
  3992  0F24                     	;# 
  3993  0F25                     	;# 
  3994  0F26                     	;# 
  3995  0F27                     	;# 
  3996  0F28                     	;# 
  3997  0F29                     	;# 
  3998  0F2A                     	;# 
  3999  0F2B                     	;# 
  4000  0F2C                     	;# 
  4001  0F2D                     	;# 
  4002  0F2E                     	;# 
  4003  0F2F                     	;# 
  4004  0F30                     	;# 
  4005  0F31                     	;# 
  4006  0F32                     	;# 
  4007  0F33                     	;# 
  4008  0F34                     	;# 
  4009  0F35                     	;# 
  4010  0F36                     	;# 
  4011  0F37                     	;# 
  4012  0FE4                     	;# 
  4013  0FE5                     	;# 
  4014  0FE6                     	;# 
  4015  0FE7                     	;# 
  4016  0FE8                     	;# 
  4017  0FE9                     	;# 
  4018  0FEA                     	;# 
  4019  0FEB                     	;# 
  4020  0FED                     	;# 
  4021  0FEE                     	;# 
  4022  0FEF                     	;_spi1_send_buffer_data
  4023                           
  4024                           	psect	idataBANK0
  4025  06AB                     __pidataBANK0:	
  4026                           
  4027                           ;initializer for _st_dataLength
  4028  06AB  34FF               	retlw	255
  4029  06AC  34FF               	retlw	255
  4030                           
  4031                           	psect	idataBANK1
  4032  06AD                     __pidataBANK1:	
  4033                           
  4034                           ;initializer for _direction
  4035  06AD  3401               	retlw	1
  4036  06AE  3400               	retlw	0
  4037                           
  4038                           	psect	stringtext1
  4039  06AF                     __pstringtext1:	
  4040  06AF                     _MACHINE_ID:	
  4041  06AF  3401               	retlw	1
  4042  06B0  3400               	retlw	0
  4043  06B1                     __end_of_MACHINE_ID:	
  4044                           
  4045                           	psect	stringtext2
  4046  06B1                     __pstringtext2:	
  4047  06B1                     _VENDER_ID:	
  4048  06B1  3401               	retlw	1
  4049  06B2  3400               	retlw	0
  4050  06B3                     __end_of_VENDER_ID:	
  4051                           
  4052                           	psect	bitnvCOMMON
  4053  03C0                     __pbitnvCOMMON:	
  4054  03C0                     _isEndPointTrig:	
  4055  03C0                     	ds	1
  4056  000E                     _PORTC	set	14
  4057  000D                     _PORTB	set	13
  4058  000C                     _PORTA	set	12
  4059  000B                     _INTCONbits	set	11
  4060  0010                     _PIR0bits	set	16
  4061  0012                     _PIR2bits	set	18
  4062  0011                     _PIR1bits	set	17
  4063  008E                     _TRISC	set	142
  4064  008D                     _TRISB	set	141
  4065  008C                     _TRISA	set	140
  4066  0092                     _PIE2bits	set	146
  4067  0091                     _PIE1bits	set	145
  4068  0090                     _PIE0bits	set	144
  4069  008E                     _TRISCbits	set	142
  4070  008D                     _TRISBbits	set	141
  4071  010C                     _LATAbits	set	268
  4072  018E                     _ANSELC	set	398
  4073  018D                     _ANSELB	set	397
  4074  018C                     _ANSELA	set	396
  4075  021C                     _SSP2STATbits	set	540
  4076  021D                     _SSP2CON1bits	set	541
  4077  021F                     _SSP2CON3bits	set	543
  4078  0214                     _SSP1STATbits	set	532
  4079  0215                     _SSP1CON1bits	set	533
  4080  0217                     _SSP1CON3bits	set	535
  4081  020C                     _WPUA	set	524
  4082  020D                     _WPUB	set	525
  4083  020E                     _WPUC	set	526
  4084  0219                     _SSP2BUF	set	537
  4085  0211                     _SSP1BUF	set	529
  4086  0392                     _IOCANbits	set	914
  4087  0391                     _IOCAPbits	set	913
  4088  038C                     _INLVLAbits	set	908
  4089  038E                     _INLVLCbits	set	910
  4090  038D                     _INLVLBbits	set	909
  4091  0393                     _IOCAFbits	set	915
  4092  091E                     _OSCTUNEbits	set	2334
  4093  091F                     _OSCFRQbits	set	2335
  4094  0E1F                     _SSP2SSPPSbits	set	3615
  4095  0E22                     _SSP1SSPPSbits	set	3618
  4096  0E9F                     _RB7PPS	set	3743
  4097  0E92                     _RA2PPS	set	3730
  4098  0EA2                     _RC2PPS	set	3746
  4099                           
  4100                           ; #config settings
  4101  0000                     
  4102                           	psect	cinit
  4103  0065                     start_initialization:	
  4104  0065                     __initialization:		;BIGRAM
  4105                           
  4106                           ; Initialize objects allocated to BANK0
  4107  0065  3186  26AB  3180   	fcall	__pidataBANK0	;fetch initializer
  4108  0068  00EC               	movwf	__pdataBANK0& (0+127)
  4109  0069  3186  26AC  3180   	fcall	__pidataBANK0+1	;fetch initializer
  4110  006C  00ED               	movwf	(__pdataBANK0+1)& (0+127)
  4111                           
  4112                           ; Initialize objects allocated to BANK1
  4113  006D  0021               	movlb	1	; select bank1
  4114  006E  3186  26AD  3180   	fcall	__pidataBANK1	;fetch initializer
  4115  0071  00ED               	movwf	__pdataBANK1& (0+127)
  4116  0072  3186  26AE  3180   	fcall	__pidataBANK1+1	;fetch initializer
  4117  0075  00EE               	movwf	(__pdataBANK1+1)& (0+127)
  4118                           
  4119                           ; Clear objects allocated to BIGRAM
  4120  0076  30F0               	movlw	low (0+9456)
  4121  0077  0084               	movwf	4
  4122  0078  3024               	movlw	high (0+9456)
  4123  0079  0085               	movwf	5
  4124  007A  3000               	movlw	0
  4125  007B  00FE               	movwf	btemp
  4126  007C  3003               	movlw	3
  4127  007D  00FF               	movwf	btemp+1
  4128  007E  3186  266C  3180   	fcall	clear_ram0
  4129                           
  4130                           ; Clear objects allocated to BITCOMMON
  4131  0081  01F0               	clrf	(__pbitbssCOMMON/(0+8))& (0+127)
  4132                           
  4133                           ; Clear objects allocated to COMMON
  4134  0082  01F9               	clrf	__pbssCOMMON& (0+127)
  4135                           
  4136                           ; Clear objects allocated to BANK0
  4137  0083  3048               	movlw	low __pbssBANK0
  4138  0084  0084               	movwf	4
  4139  0085  3000               	movlw	high __pbssBANK0
  4140  0086  0085               	movwf	5
  4141  0087  3024               	movlw	36
  4142  0088  00FE               	movwf	btemp
  4143  0089  3000               	movlw	0
  4144  008A  00FF               	movwf	btemp+1
  4145  008B  3186  266C  3180   	fcall	clear_ram0
  4146                           
  4147                           ; Clear objects allocated to BANK1
  4148  008E  30A0               	movlw	low __pbssBANK1
  4149  008F  0084               	movwf	4
  4150  0090  3000               	movlw	high __pbssBANK1
  4151  0091  0085               	movwf	5
  4152  0092  3043               	movlw	67
  4153  0093  00FE               	movwf	btemp
  4154  0094  3000               	movlw	0
  4155  0095  00FF               	movwf	btemp+1
  4156  0096  3186  266C  3180   	fcall	clear_ram0
  4157                           
  4158                           ; Clear objects allocated to BANK2
  4159  0099  3020               	movlw	low __pbssBANK2
  4160  009A  0084               	movwf	4
  4161  009B  3001               	movlw	high __pbssBANK2
  4162  009C  0085               	movwf	5
  4163  009D  3012               	movlw	18
  4164  009E  00FE               	movwf	btemp
  4165  009F  3000               	movlw	0
  4166  00A0  00FF               	movwf	btemp+1
  4167  00A1  3186  266C         	fcall	clear_ram0
  4168  00A3                     end_of_initialization:	
  4169                           ;End of C runtime variable initialization code
  4170                           
  4171  00A3                     __end_of__initialization:	
  4172  00A3  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  4173  00A4  0020               	movlb	0
  4174  00A5  3184  2CBE         	ljmp	_main	;jump to C main() function
  4175                           
  4176                           	psect	bitbssCOMMON
  4177  0380                     __pbitbssCOMMON:	
  4178  0380                     _isMycargo:	
  4179  0380                     	ds	1
  4180  0381                     _workingcounta3:	
  4181  0381                     	ds	1
  4182  0382                     _workingcounta2:	
  4183  0382                     	ds	1
  4184  0383                     _workingcounta1:	
  4185  0383                     	ds	1
  4186  0384                     _workingcounta0:	
  4187  0384                     	ds	1
  4188  0385                     _ra3condision:	
  4189  0385                     	ds	1
  4190  0386                     _isreadTrain:	
  4191  0386                     	ds	1
  4192  0387                     _isCalibrated:	
  4193  0387                     	ds	1
  4194                           
  4195                           	psect	bssCOMMON
  4196  0079                     __pbssCOMMON:	
  4197  0079                     _spi1_Read_data:	
  4198  0079                     	ds	1
  4199                           
  4200                           	psect	bssBANK0
  4201  0048                     __pbssBANK0:	
  4202  0048                     _cargoData:	
  4203  0048                     	ds	16
  4204  0058                     _linkAngle:	
  4205  0058                     	ds	2
  4206  005A                     _read_count2:	
  4207  005A                     	ds	2
  4208  005C                     _trainPos:	
  4209  005C                     	ds	2
  4210  005E                     _countabuf:	
  4211  005E                     	ds	2
  4212  0060                     _read_count1:	
  4213  0060                     	ds	2
  4214  0062                     _count2:	
  4215  0062                     	ds	2
  4216  0064                     _count1:	
  4217  0064                     	ds	2
  4218  0066                     _readNG:	
  4219  0066                     	ds	1
  4220  0067                     _readOK:	
  4221  0067                     	ds	1
  4222  0068                     _spi2_Read_data:	
  4223  0068                     	ds	1
  4224  0069                     _send_data:	
  4225  0069                     	ds	1
  4226  006A                     _st_type:	
  4227  006A                     	ds	1
  4228  006B                     _spi2_Send_data:	
  4229  006B                     	ds	1
  4230                           
  4231                           	psect	dataBANK0
  4232  006C                     __pdataBANK0:	
  4233  006C                     _st_dataLength:	
  4234  006C                     	ds	2
  4235                           
  4236                           	psect	bssBANK1
  4237  00A0                     __pbssBANK1:	
  4238  00A0                     _comu_types:	
  4239  00A0                     	ds	18
  4240  00B2                     _command:	
  4241  00B2                     	ds	18
  4242  00C4                     _calibdata:	
  4243  00C4                     	ds	9
  4244  00CD                     _linkInfo:	
  4245  00CD                     	ds	6
  4246  00D3                     _cargoWorkingCount:	
  4247  00D3                     	ds	4
  4248  00D7                     _startTrainBytes:	
  4249  00D7                     	ds	4
  4250  00DB                     _cargoLengthnuf:	
  4251  00DB                     	ds	2
  4252  00DD                     _send_count1:	
  4253  00DD                     	ds	2
  4254  00DF                     _spi1_send_count:	
  4255  00DF                     	ds	2
  4256  00E1                     _counta2:	
  4257  00E1                     	ds	2
  4258                           
  4259                           	psect	dataBANK1
  4260  00ED                     __pdataBANK1:	
  4261  00ED                     _direction:	
  4262  00ED                     	ds	2
  4263                           
  4264                           	psect	bssBANK2
  4265  0120                     __pbssBANK2:	
  4266  0120                     _cargo_index:	
  4267  0120                     	ds	18
  4268                           
  4269                           	psect	clrtext
  4270  066C                     clear_ram0:	
  4271                           ;	Called with FSR0 containing the base address, and
  4272                           ;	btemp/btemp+1 has the size to clear
  4273                           
  4274  066C  0064               	clrwdt	;clear the watchdog before getting into this loop
  4275  066D                     clrloop0:	
  4276  066D  0180               	clrf	0	;clear RAM location pointed to by FSR
  4277  066E  3101               	addfsr 0,1
  4278  066F  3001               	movlw	1
  4279  0670  02FE               	subwf	126,f
  4280  0671  3000               	movlw	0
  4281  0672  3BFF               	subwfb	127,f
  4282  0673  087F               	movf	127,w
  4283  0674  047E               	iorwf	126,w
  4284  0675  1903               	btfsc	3,2
  4285  0676  3400               	retlw	0	;all done for this memory range, return
  4286  0677  2E6D               	goto	clrloop0	;have we reached the end yet?
  4287                           
  4288                           	psect	cstackBANK1
  4289  00E3                     __pcstackBANK1:	
  4290  00E3                     Calibrate_download@buflong:	
  4291                           
  4292                           ; 4 bytes @ 0x0
  4293  00E3                     	ds	4
  4294  00E7                     Calibrate_download@bufint:	
  4295                           
  4296                           ; 2 bytes @ 0x4
  4297  00E7                     	ds	2
  4298  00E9                     Calibrate_download@spi_Read_data:	
  4299                           
  4300                           ; 1 bytes @ 0x6
  4301  00E9                     	ds	1
  4302  00EA                     setComunicateMode@m_type:	
  4303                           
  4304                           ; 1 bytes @ 0x7
  4305  00EA                     	ds	1
  4306  00EB                     setComunicateMode@i:	
  4307                           
  4308                           ; 2 bytes @ 0x8
  4309  00EB                     	ds	2
  4310                           
  4311                           	psect	cstackCOMMON
  4312  0071                     __pcstackCOMMON:	
  4313  0071                     ?_isTrainSt:	
  4314  0071                     ?_isSPI1read:	
  4315                           ; 1 bit 
  4316                           
  4317  0071                     ?_setComunicateMode:	
  4318                           ; 1 bit 
  4319                           
  4320  0071                     ?_isSPI2read:	
  4321                           ; 1 bit 
  4322                           
  4323  0071                     ?_clutchaction:	
  4324                           ; 1 bit 
  4325                           
  4326  0071                     ?_isEndpoint:	
  4327                           ; 1 bit 
  4328                           
  4329  0071                     ?_setSPI1sendData:	
  4330                           ; 1 bit 
  4331                           
  4332  0071                     ??_setSPI1sendData:	
  4333                           ; 1 bytes @ 0x0
  4334                           
  4335  0071                     ?_addAngle:	
  4336                           ; 1 bytes @ 0x0
  4337                           
  4338  0071                     ?_clear:	
  4339                           ; 1 bytes @ 0x0
  4340                           
  4341  0071                     ?_resetTrainData:	
  4342                           ; 1 bytes @ 0x0
  4343                           
  4344  0071                     ?_initComand:	
  4345                           ; 1 bytes @ 0x0
  4346                           
  4347  0071                     ?_initComu_types:	
  4348                           ; 1 bytes @ 0x0
  4349                           
  4350  0071                     ?_InitCalibrate:	
  4351                           ; 1 bytes @ 0x0
  4352                           
  4353  0071                     ?_spi_init:	
  4354                           ; 1 bytes @ 0x0
  4355                           
  4356  0071                     ?_initCargo:	
  4357                           ; 1 bytes @ 0x0
  4358                           
  4359  0071                     ?_read_train:	
  4360                           ; 1 bytes @ 0x0
  4361                           
  4362  0071                     ?_setSPI2sendData:	
  4363                           ; 1 bytes @ 0x0
  4364                           
  4365  0071                     ?_restartCargo:	
  4366                           ; 1 bytes @ 0x0
  4367                           
  4368  0071                     ?_spi1_init:	
  4369                           ; 1 bytes @ 0x0
  4370                           
  4371  0071                     ?_spi2_init:	
  4372                           ; 1 bytes @ 0x0
  4373                           
  4374  0071                     ?_readCargo:	
  4375                           ; 1 bytes @ 0x0
  4376                           
  4377  0071                     ?_setCargoAngle:	
  4378                           ; 1 bytes @ 0x0
  4379                           
  4380  0071                     ?_InterMSSP:	
  4381                           ; 1 bytes @ 0x0
  4382                           
  4383  0071                     ?_initbuffer:	
  4384                           ; 1 bytes @ 0x0
  4385                           
  4386  0071                     ?_init:	
  4387                           ; 1 bytes @ 0x0
  4388                           
  4389  0071                     ?_io_init:	
  4390                           ; 1 bytes @ 0x0
  4391                           
  4392  0071                     ?_initTrain:	
  4393                           ; 1 bytes @ 0x0
  4394                           
  4395  0071                     ?_main:	
  4396                           ; 1 bytes @ 0x0
  4397                           
  4398  0071                     ??_isSPI2read:	
  4399                           ; 1 bytes @ 0x0
  4400                           
  4401  0071                     ?_setSPI1sendDataManual:	
  4402                           ; 1 bytes @ 0x0
  4403                           
  4404  0071                     ?_Calibrate_download:	
  4405                           ; 1 bytes @ 0x0
  4406                           
  4407  0071                     setCargoAngle@m_linkAngleTo:	
  4408                           ; 1 bytes @ 0x0
  4409                           
  4410                           
  4411                           ; 2 bytes @ 0x0
  4412  0071                     	ds	2
  4413  0073                     ??_addAngle:	
  4414  0073                     ??_setCargoAngle:	
  4415                           ; 1 bytes @ 0x2
  4416                           
  4417  0073                     ??_InterMSSP:	
  4418                           ; 1 bytes @ 0x2
  4419                           
  4420                           
  4421                           ; 1 bytes @ 0x2
  4422  0073                     	ds	5
  4423                           
  4424                           	psect	cstackBANK0
  4425  0020                     __pcstackBANK0:	
  4426  0020                     ??_clear:	
  4427  0020                     ??_isTrainSt:	
  4428                           ; 1 bytes @ 0x0
  4429                           
  4430  0020                     ??_resetTrainData:	
  4431                           ; 1 bytes @ 0x0
  4432                           
  4433  0020                     ??_initComand:	
  4434                           ; 1 bytes @ 0x0
  4435                           
  4436  0020                     ??_initComu_types:	
  4437                           ; 1 bytes @ 0x0
  4438                           
  4439  0020                     ??_initCargo:	
  4440                           ; 1 bytes @ 0x0
  4441                           
  4442  0020                     ??_isSPI1read:	
  4443                           ; 1 bytes @ 0x0
  4444                           
  4445  0020                     ??_read_train:	
  4446                           ; 1 bytes @ 0x0
  4447                           
  4448  0020                     ??_setSPI2sendData:	
  4449                           ; 1 bytes @ 0x0
  4450                           
  4451  0020                     ??_restartCargo:	
  4452                           ; 1 bytes @ 0x0
  4453                           
  4454  0020                     ??_spi1_init:	
  4455                           ; 1 bytes @ 0x0
  4456                           
  4457  0020                     ??_spi2_init:	
  4458                           ; 1 bytes @ 0x0
  4459                           
  4460  0020                     ??_initbuffer:	
  4461                           ; 1 bytes @ 0x0
  4462                           
  4463  0020                     ??_io_init:	
  4464                           ; 1 bytes @ 0x0
  4465                           
  4466  0020                     ??_setSPI1sendDataManual:	
  4467                           ; 1 bytes @ 0x0
  4468                           
  4469  0020                     ??_clutchaction:	
  4470                           ; 1 bytes @ 0x0
  4471                           
  4472  0020                     ?_getCargoData:	
  4473                           ; 1 bytes @ 0x0
  4474                           
  4475  0020                     setSPI1sendDataManual@data:	
  4476                           ; 16 bytes @ 0x0
  4477                           
  4478  0020                     clutchaction@comannd:	
  4479                           ; 1 bytes @ 0x0
  4480                           
  4481                           
  4482                           ; 1 bytes @ 0x0
  4483  0020                     	ds	1
  4484  0021                     ??_isEndpoint:	
  4485  0021                     spi1_init@dummy:	
  4486                           ; 1 bytes @ 0x1
  4487                           
  4488  0021                     spi2_init@dummy:	
  4489                           ; 1 bytes @ 0x1
  4490                           
  4491                           
  4492                           ; 1 bytes @ 0x1
  4493  0021                     	ds	1
  4494  0022                     ??_spi_init:	
  4495  0022                     initbuffer@i:	
  4496                           ; 1 bytes @ 0x2
  4497                           
  4498  0022                     read_train@bufint:	
  4499                           ; 2 bytes @ 0x2
  4500                           
  4501                           
  4502                           ; 2 bytes @ 0x2
  4503  0022                     	ds	2
  4504  0024                     ??_init:	
  4505                           
  4506                           ; 1 bytes @ 0x4
  4507  0024                     	ds	2
  4508  0026                     isEndpoint@spi2data:	
  4509                           
  4510                           ; 1 bytes @ 0x6
  4511  0026                     	ds	2
  4512  0028                     isTrainSt@buf:	
  4513                           
  4514                           ; 1 bytes @ 0x8
  4515  0028                     	ds	1
  4516  0029                     ??_initTrain:	
  4517                           
  4518                           ; 1 bytes @ 0x9
  4519  0029                     	ds	7
  4520  0030                     ??_getCargoData:	
  4521                           
  4522                           ; 1 bytes @ 0x10
  4523  0030                     	ds	1
  4524  0031                     ??_InitCalibrate:	
  4525  0031                     ??_readCargo:	
  4526                           ; 1 bytes @ 0x11
  4527                           
  4528                           
  4529                           ; 1 bytes @ 0x11
  4530  0031                     	ds	1
  4531  0032                     InitCalibrate@cargoData:	
  4532                           
  4533                           ; 16 bytes @ 0x12
  4534  0032                     	ds	4
  4535  0036                     readCargo@buflong:	
  4536                           
  4537                           ; 4 bytes @ 0x16
  4538  0036                     	ds	4
  4539  003A                     readCargo@bufint:	
  4540                           
  4541                           ; 2 bytes @ 0x1A
  4542  003A                     	ds	2
  4543  003C                     readCargo@spi1_Read_data:	
  4544                           
  4545                           ; 1 bytes @ 0x1C
  4546  003C                     	ds	6
  4547  0042                     ??_Calibrate_download:	
  4548                           
  4549                           ; 1 bytes @ 0x22
  4550  0042                     	ds	5
  4551  0047                     ??_setComunicateMode:	
  4552                           
  4553                           ; 1 bytes @ 0x27
  4554  0047                     	ds	1
  4555  0048                     ??_main:	
  4556                           
  4557                           	psect	maintext
  4558  04BE                     __pmaintext:	
  4559                           ; 1 bytes @ 0x28
  4560 ;;
  4561 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  4562 ;;
  4563 ;; *************** function _main *****************
  4564 ;; Defined at:
  4565 ;;		line 163 in file "D:/programdata/16F18346_Link_IC.X/main.c"
  4566 ;; Parameters:    Size  Location     Type
  4567 ;;		None
  4568 ;; Auto vars:     Size  Location     Type
  4569 ;;		None
  4570 ;; Return value:  Size  Location     Type
  4571 ;;                  1    wreg      void 
  4572 ;; Registers used:
  4573 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4574 ;; Tracked objects:
  4575 ;;		On entry : B1F/0
  4576 ;;		On exit  : 0/0
  4577 ;;		Unchanged: 0/0
  4578 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4579 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4580 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4581 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4582 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4583 ;;Total ram usage:        0 bytes
  4584 ;; Hardware stack levels required when called:    7
  4585 ;; This function calls:
  4586 ;;		_InitCalibrate
  4587 ;;		_init
  4588 ;;		_initCargo
  4589 ;;		_initComand
  4590 ;;		_initComu_types
  4591 ;;		_initTrain
  4592 ;;		_io_init
  4593 ;;		_isSPI1read
  4594 ;;		_read_train
  4595 ;;		_setComunicateMode
  4596 ;;		_setSPI2sendData
  4597 ;;		_spi_init
  4598 ;; This function is called by:
  4599 ;;		Startup code after reset
  4600 ;; This function uses a non-reentrant model
  4601 ;;
  4602                           
  4603                           
  4604                           ;psect for function _main
  4605  04BE                     _main:	
  4606                           
  4607                           ;main.c: 164: initComand();
  4608                           
  4609                           ;incstack = 0
  4610                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4611  04BE  3182  22EF  3184   	fcall	_initComand
  4612                           
  4613                           ;main.c: 165: initComu_types();
  4614  04C1  3182  2282  3184   	fcall	_initComu_types
  4615                           
  4616                           ;main.c: 166: InitCalibrate();
  4617  04C4  3184  24EC  3184   	fcall	_InitCalibrate
  4618                           
  4619                           ;main.c: 167: init();
  4620  04C7  3185  2541  3184   	fcall	_init
  4621                           
  4622                           ;main.c: 168: io_init();
  4623  04CA  3186  268D  3184   	fcall	_io_init
  4624                           
  4625                           ;main.c: 169: spi_init();
  4626  04CD  3186  2683  3184   	fcall	_spi_init
  4627                           
  4628                           ;main.c: 170: initCargo();
  4629  04D0  3185  25EE  3184   	fcall	_initCargo
  4630                           
  4631                           ;main.c: 171: LATAbits.LATA0 = 1;
  4632  04D3  0022               	movlb	2	; select bank2
  4633  04D4  140C               	bsf	12,0	;volatile
  4634  04D5                     l2857:	
  4635                           ;main.c: 172: while(1){
  4636                           
  4637                           
  4638                           ;main.c: 173: if(!isSPI1read()){
  4639  04D5  3186  2638  3184   	fcall	_isSPI1read
  4640  04D8  1803               	btfsc	3,0
  4641  04D9  2CD5               	goto	l2857
  4642                           
  4643                           ;main.c: 174: initTrain();
  4644  04DA  3183  23A1  3184   	fcall	_initTrain
  4645                           
  4646                           ;main.c: 175: if(isreadTrain){
  4647  04DD  1F70               	btfss	_isreadTrain/(0+8),_isreadTrain& (0+7)
  4648  04DE  2CE5               	goto	l2865
  4649                           
  4650                           ;main.c: 176: setComunicateMode(st_type);
  4651  04DF  0020               	movlb	0	; select bank0
  4652  04E0  086A               	movf	_st_type,w
  4653  04E1  3183  23E5  3184   	fcall	_setComunicateMode
  4654                           
  4655                           ;main.c: 177: }else{
  4656  04E4  2CE8               	goto	l2867
  4657  04E5                     l2865:	
  4658                           
  4659                           ;main.c: 178: read_train();
  4660  04E5  3184  2423  3184   	fcall	_read_train
  4661  04E8                     l2867:	
  4662                           
  4663                           ;main.c: 179: }
  4664                           ;main.c: 180: setSPI2sendData();
  4665  04E8  3184  248E  3184   	fcall	_setSPI2sendData
  4666  04EB  2CD5               	goto	l2857
  4667  04EC                     __end_of_main:	
  4668                           ;main.c: 181: }
  4669                           ;main.c: 182: };
  4670                           ;main.c: 183: return;
  4671                           
  4672                           
  4673                           	psect	text1
  4674  0683                     __ptext1:	
  4675 ;; *************** function _spi_init *****************
  4676 ;; Defined at:
  4677 ;;		line 22 in file "D:/programdata/16F18346_Link_IC.X/spiControl.c"
  4678 ;; Parameters:    Size  Location     Type
  4679 ;;		None
  4680 ;; Auto vars:     Size  Location     Type
  4681 ;;		None
  4682 ;; Return value:  Size  Location     Type
  4683 ;;                  1    wreg      void 
  4684 ;; Registers used:
  4685 ;;		wreg, status,2, status,0, pclath, cstack
  4686 ;; Tracked objects:
  4687 ;;		On entry : 0/0
  4688 ;;		On exit  : 0/0
  4689 ;;		Unchanged: 0/0
  4690 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4691 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4692 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4693 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4694 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4695 ;;Total ram usage:        0 bytes
  4696 ;; Hardware stack levels used:    1
  4697 ;; Hardware stack levels required when called:    4
  4698 ;; This function calls:
  4699 ;;		_spi1_init
  4700 ;;		_spi2_init
  4701 ;; This function is called by:
  4702 ;;		_main
  4703 ;; This function uses a non-reentrant model
  4704 ;;
  4705                           
  4706                           
  4707                           ;psect for function _spi_init
  4708  0683                     _spi_init:	
  4709                           
  4710                           ;spiControl.c: 23: INTCONbits.PEIE = 0;
  4711                           
  4712                           ;incstack = 0
  4713                           ; Regs used in _spi_init: [wreg+status,2+status,0+pclath+cstack]
  4714  0683  130B               	bcf	11,6	;volatile
  4715                           
  4716                           ;spiControl.c: 24: INTCONbits.GIE = 0;
  4717  0684  138B               	bcf	11,7	;volatile
  4718                           
  4719                           ;spiControl.c: 25: spi1_init();
  4720  0685  3185  25AE  3186   	fcall	_spi1_init
  4721                           
  4722                           ;spiControl.c: 26: spi2_init();
  4723  0688  3185  258C         	fcall	_spi2_init
  4724                           
  4725                           ;spiControl.c: 27: INTCONbits.PEIE = 1;
  4726  068A  170B               	bsf	11,6	;volatile
  4727                           
  4728                           ;spiControl.c: 28: INTCONbits.GIE = 1;
  4729  068B  178B               	bsf	11,7	;volatile
  4730  068C  0008               	return
  4731  068D                     __end_of_spi_init:	
  4732                           
  4733                           	psect	text2
  4734  058C                     __ptext2:	
  4735 ;; *************** function _spi2_init *****************
  4736 ;; Defined at:
  4737 ;;		line 49 in file "D:/programdata/16F18346_Link_IC.X/spiControl.c"
  4738 ;; Parameters:    Size  Location     Type
  4739 ;;		None
  4740 ;; Auto vars:     Size  Location     Type
  4741 ;;  dummy           1    1[BANK0 ] unsigned char 
  4742 ;; Return value:  Size  Location     Type
  4743 ;;                  1    wreg      void 
  4744 ;; Registers used:
  4745 ;;		wreg, status,2, status,0
  4746 ;; Tracked objects:
  4747 ;;		On entry : 0/0
  4748 ;;		On exit  : 0/0
  4749 ;;		Unchanged: 0/0
  4750 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4751 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4752 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4753 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4754 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4755 ;;Total ram usage:        2 bytes
  4756 ;; Hardware stack levels used:    1
  4757 ;; Hardware stack levels required when called:    3
  4758 ;; This function calls:
  4759 ;;		Nothing
  4760 ;; This function is called by:
  4761 ;;		_spi_init
  4762 ;; This function uses a non-reentrant model
  4763 ;;
  4764                           
  4765                           
  4766                           ;psect for function _spi2_init
  4767  058C                     _spi2_init:	
  4768                           
  4769                           ;spiControl.c: 50: unsigned char dummy;
  4770                           ;spiControl.c: 51: SSP2CON3bits.PCIE = 0;
  4771                           
  4772                           ;incstack = 0
  4773                           ; Regs used in _spi2_init: [wreg+status,2+status,0]
  4774  058C  0024               	movlb	4	; select bank4
  4775  058D  131F               	bcf	31,6	;volatile
  4776                           
  4777                           ;spiControl.c: 52: RA2PPS = 0b11011;
  4778  058E  301B               	movlw	27
  4779  058F  003D               	movlb	29	; select bank29
  4780  0590  0092               	movwf	18	;volatile
  4781                           
  4782                           ;spiControl.c: 53: RB7PPS = 0b11010;
  4783  0591  301A               	movlw	26
  4784  0592  009F               	movwf	31	;volatile
  4785                           
  4786                           ;spiControl.c: 54: SSP2SSPPSbits.SSP2SSPPS = 0b01111;
  4787  0593  003C               	movlb	28	; select bank28
  4788  0594  081F               	movf	31,w	;volatile
  4789  0595  39E0               	andlw	-32
  4790  0596  380F               	iorlw	15
  4791  0597  009F               	movwf	31	;volatile
  4792                           
  4793                           ;spiControl.c: 55: SSP2CON1bits.SSPOV = 1;
  4794  0598  0024               	movlb	4	; select bank4
  4795  0599  171D               	bsf	29,6	;volatile
  4796                           
  4797                           ;spiControl.c: 56: SSP2CON1bits.SSPEN = 1;
  4798  059A  169D               	bsf	29,5	;volatile
  4799                           
  4800                           ;spiControl.c: 57: SSP2CON1bits.SSPM = 0b0001;
  4801  059B  081D               	movf	29,w	;volatile
  4802  059C  39F0               	andlw	-16
  4803  059D  3801               	iorlw	1
  4804  059E  009D               	movwf	29	;volatile
  4805                           
  4806                           ;spiControl.c: 58: SSP2CON3bits.BOEN = 1;
  4807  059F  161F               	bsf	31,4	;volatile
  4808                           
  4809                           ;spiControl.c: 59: SSP2STATbits.SMP = 0;
  4810  05A0  139C               	bcf	28,7	;volatile
  4811                           
  4812                           ;spiControl.c: 60: SSP2STATbits.CKE = 0;
  4813  05A1  131C               	bcf	28,6	;volatile
  4814                           
  4815                           ;spiControl.c: 61: SSP2CON1bits.CKP = 0;
  4816  05A2  121D               	bcf	29,4	;volatile
  4817                           
  4818                           ;spiControl.c: 62: PIE2bits.SSP2IE = 1;
  4819  05A3  0021               	movlb	1	; select bank1
  4820  05A4  1592               	bsf	18,3	;volatile
  4821                           
  4822                           ;spiControl.c: 63: PIR2bits.SSP2IF = 0;
  4823  05A5  0020               	movlb	0	; select bank0
  4824  05A6  1192               	bcf	18,3	;volatile
  4825                           
  4826                           ;spiControl.c: 64: dummy = SSP2BUF;
  4827  05A7  0024               	movlb	4	; select bank4
  4828  05A8  0819               	movf	25,w	;volatile
  4829  05A9  0020               	movlb	0	; select bank0
  4830  05AA  00A0               	movwf	??_spi2_init
  4831  05AB  0820               	movf	??_spi2_init,w
  4832  05AC  00A1               	movwf	spi2_init@dummy
  4833  05AD  0008               	return
  4834  05AE                     __end_of_spi2_init:	
  4835                           
  4836                           	psect	text3
  4837  05AE                     __ptext3:	
  4838 ;; *************** function _spi1_init *****************
  4839 ;; Defined at:
  4840 ;;		line 33 in file "D:/programdata/16F18346_Link_IC.X/spiControl.c"
  4841 ;; Parameters:    Size  Location     Type
  4842 ;;		None
  4843 ;; Auto vars:     Size  Location     Type
  4844 ;;  dummy           1    1[BANK0 ] unsigned char 
  4845 ;; Return value:  Size  Location     Type
  4846 ;;                  1    wreg      void 
  4847 ;; Registers used:
  4848 ;;		wreg, status,2, status,0
  4849 ;; Tracked objects:
  4850 ;;		On entry : 0/0
  4851 ;;		On exit  : 0/0
  4852 ;;		Unchanged: 0/0
  4853 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4854 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4855 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4856 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4857 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4858 ;;Total ram usage:        2 bytes
  4859 ;; Hardware stack levels used:    1
  4860 ;; Hardware stack levels required when called:    3
  4861 ;; This function calls:
  4862 ;;		Nothing
  4863 ;; This function is called by:
  4864 ;;		_spi_init
  4865 ;; This function uses a non-reentrant model
  4866 ;;
  4867                           
  4868                           
  4869                           ;psect for function _spi1_init
  4870  05AE                     _spi1_init:	
  4871                           
  4872                           ;spiControl.c: 34: unsigned char dummy;
  4873                           ;spiControl.c: 35: SSP1CON3bits.PCIE = 0;
  4874                           
  4875                           ;incstack = 0
  4876                           ; Regs used in _spi1_init: [wreg+status,2+status,0]
  4877  05AE  0024               	movlb	4	; select bank4
  4878  05AF  1317               	bcf	23,6	;volatile
  4879                           
  4880                           ;spiControl.c: 36: RC2PPS = 0b11001;
  4881  05B0  3019               	movlw	25
  4882  05B1  003D               	movlb	29	; select bank29
  4883  05B2  00A2               	movwf	34	;volatile
  4884                           
  4885                           ;spiControl.c: 37: SSP1SSPPSbits.SSP1SSPPS = 0b10110;
  4886  05B3  003C               	movlb	28	; select bank28
  4887  05B4  0822               	movf	34,w	;volatile
  4888  05B5  39E0               	andlw	-32
  4889  05B6  3816               	iorlw	22
  4890  05B7  00A2               	movwf	34	;volatile
  4891                           
  4892                           ;spiControl.c: 38: SSP1CON1bits.SSPOV = 1;
  4893  05B8  0024               	movlb	4	; select bank4
  4894  05B9  1715               	bsf	21,6	;volatile
  4895                           
  4896                           ;spiControl.c: 39: SSP1CON1bits.SSPEN = 1;
  4897  05BA  1695               	bsf	21,5	;volatile
  4898                           
  4899                           ;spiControl.c: 40: SSP1CON1bits.SSPM = 0b0100;
  4900  05BB  0815               	movf	21,w	;volatile
  4901  05BC  39F0               	andlw	-16
  4902  05BD  3804               	iorlw	4
  4903  05BE  0095               	movwf	21	;volatile
  4904                           
  4905                           ;spiControl.c: 41: SSP1CON3bits.BOEN = 1;
  4906  05BF  1617               	bsf	23,4	;volatile
  4907                           
  4908                           ;spiControl.c: 42: SSP1STATbits.SMP = 0;
  4909  05C0  1394               	bcf	20,7	;volatile
  4910                           
  4911                           ;spiControl.c: 43: SSP1STATbits.CKE = 0;
  4912  05C1  1314               	bcf	20,6	;volatile
  4913                           
  4914                           ;spiControl.c: 44: SSP1CON1bits.CKP = 0;
  4915  05C2  1215               	bcf	21,4	;volatile
  4916                           
  4917                           ;spiControl.c: 45: PIE1bits.SSP1IE = 1;
  4918  05C3  0021               	movlb	1	; select bank1
  4919  05C4  1591               	bsf	17,3	;volatile
  4920                           
  4921                           ;spiControl.c: 46: PIR1bits.SSP1IF = 0;
  4922  05C5  0020               	movlb	0	; select bank0
  4923  05C6  1191               	bcf	17,3	;volatile
  4924                           
  4925                           ;spiControl.c: 47: dummy = SSP1BUF;
  4926  05C7  0024               	movlb	4	; select bank4
  4927  05C8  0811               	movf	17,w	;volatile
  4928  05C9  0020               	movlb	0	; select bank0
  4929  05CA  00A0               	movwf	??_spi1_init
  4930  05CB  0820               	movf	??_spi1_init,w
  4931  05CC  00A1               	movwf	spi1_init@dummy
  4932  05CD  0008               	return
  4933  05CE                     __end_of_spi1_init:	
  4934                           
  4935                           	psect	text4
  4936  048E                     __ptext4:	
  4937 ;; *************** function _setSPI2sendData *****************
  4938 ;; Defined at:
  4939 ;;		line 107 in file "D:/programdata/16F18346_Link_IC.X/spiControl.c"
  4940 ;; Parameters:    Size  Location     Type
  4941 ;;		None
  4942 ;; Auto vars:     Size  Location     Type
  4943 ;;		None
  4944 ;; Return value:  Size  Location     Type
  4945 ;;                  1    wreg      void 
  4946 ;; Registers used:
  4947 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4948 ;; Tracked objects:
  4949 ;;		On entry : 0/0
  4950 ;;		On exit  : 0/0
  4951 ;;		Unchanged: 0/0
  4952 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4953 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4954 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4955 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4956 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4957 ;;Total ram usage:        4 bytes
  4958 ;; Hardware stack levels used:    1
  4959 ;; Hardware stack levels required when called:    3
  4960 ;; This function calls:
  4961 ;;		Nothing
  4962 ;; This function is called by:
  4963 ;;		_main
  4964 ;; This function uses a non-reentrant model
  4965 ;;
  4966                           
  4967                           
  4968                           ;psect for function _setSPI2sendData
  4969  048E                     _setSPI2sendData:	
  4970                           
  4971                           ;spiControl.c: 108: if(linkInfo.endpoint == 0){
  4972                           
  4973                           ;incstack = 0
  4974                           ; Regs used in _setSPI2sendData: [wreg+fsr1l+fsr1h+status,2+status,0]
  4975  048E  0021               	movlb	1	; select bank1
  4976  048F  0852               	movf	(_linkInfo^(0+128)+5),w
  4977  0490  1D03               	btfss	3,2
  4978  0491  2CA2               	goto	l2835
  4979                           
  4980                           ;spiControl.c: 109: LATAbits.LATA0 = ~LATAbits.LATA0;
  4981  0492  1003               	clrc
  4982  0493  0022               	movlb	2	; select bank2
  4983  0494  1C0C               	btfss	12,0	;volatile
  4984  0495  1403               	setc
  4985  0496  1C03               	btfss	3,0
  4986  0497  2C9B               	goto	u1370
  4987  0498  0022               	movlb	2	; select bank2
  4988  0499  140C               	bsf	12,0	;volatile
  4989  049A  2C9D               	goto	l2833
  4990  049B                     u1370:	
  4991  049B  0022               	movlb	2	; select bank2
  4992  049C  100C               	bcf	12,0	;volatile
  4993  049D                     l2833:	
  4994                           
  4995                           ;spiControl.c: 110: SSP2BUF = spi2_Send_data;
  4996  049D  0020               	movlb	0	; select bank0
  4997  049E  086B               	movf	_spi2_Send_data,w
  4998  049F  0024               	movlb	4	; select bank4
  4999  04A0  0099               	movwf	25	;volatile
  5000                           
  5001                           ;spiControl.c: 111: }else{
  5002  04A1  0008               	return
  5003  04A2                     l2835:	
  5004                           
  5005                           ;spiControl.c: 112: spi2_buffer_data[count2] = spi2_Send_data;
  5006  04A2  30F0               	movlw	240
  5007  04A3  0020               	movlb	0	; select bank0
  5008  04A4  00A0               	movwf	??_setSPI2sendData
  5009  04A5  3025               	movlw	37
  5010  04A6  00A1               	movwf	??_setSPI2sendData+1
  5011  04A7  0862               	movf	_count2,w
  5012  04A8  0720               	addwf	??_setSPI2sendData,w
  5013  04A9  00A2               	movwf	??_setSPI2sendData+2
  5014  04AA  0863               	movf	_count2+1,w
  5015  04AB  3D21               	addwfc	??_setSPI2sendData+1,w
  5016  04AC  00A3               	movwf	??_setSPI2sendData+3
  5017  04AD  0822               	movf	??_setSPI2sendData+2,w
  5018  04AE  0086               	movwf	6
  5019  04AF  0823               	movf	??_setSPI2sendData+3,w
  5020  04B0  0087               	movwf	7
  5021  04B1  086B               	movf	_spi2_Send_data,w
  5022  04B2  0081               	movwf	1
  5023                           
  5024                           ;spiControl.c: 113: count2++;
  5025  04B3  3001               	movlw	1
  5026  04B4  07E2               	addwf	_count2,f
  5027  04B5  3000               	movlw	0
  5028  04B6  3DE3               	addwfc	_count2+1,f
  5029                           
  5030                           ;spiControl.c: 114: if(count2 == 256){
  5031  04B7  0363               	decf	_count2+1,w
  5032  04B8  0462               	iorwf	_count2,w
  5033  04B9  1D03               	btfss	3,2
  5034  04BA  0008               	return
  5035                           
  5036                           ;spiControl.c: 115: count2 = 0;
  5037  04BB  01E2               	clrf	_count2
  5038  04BC  01E3               	clrf	_count2+1
  5039  04BD  0008               	return
  5040  04BE                     __end_of_setSPI2sendData:	
  5041                           
  5042                           	psect	text5
  5043  03E5                     __ptext5:	
  5044 ;; *************** function _setComunicateMode *****************
  5045 ;; Defined at:
  5046 ;;		line 38 in file "D:/programdata/16F18346_Link_IC.X/comu_type.c"
  5047 ;; Parameters:    Size  Location     Type
  5048 ;;  m_type          1    wreg     unsigned char 
  5049 ;; Auto vars:     Size  Location     Type
  5050 ;;  m_type          1    7[BANK1 ] unsigned char 
  5051 ;;  i               2    8[BANK1 ] int 
  5052 ;; Return value:  Size  Location     Type
  5053 ;;		None               void
  5054 ;; Registers used:
  5055 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5056 ;; Tracked objects:
  5057 ;;		On entry : 0/0
  5058 ;;		On exit  : 0/0
  5059 ;;		Unchanged: 0/0
  5060 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5061 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5062 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5063 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5064 ;;      Totals:         0       1       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5065 ;;Total ram usage:        4 bytes
  5066 ;; Hardware stack levels used:    1
  5067 ;; Hardware stack levels required when called:    6
  5068 ;; This function calls:
  5069 ;;		_Calibrate_download
  5070 ;;		_readCargo
  5071 ;; This function is called by:
  5072 ;;		_main
  5073 ;; This function uses a non-reentrant model
  5074 ;;
  5075                           
  5076                           
  5077                           ;psect for function _setComunicateMode
  5078  03E5                     _setComunicateMode:	
  5079                           
  5080                           ;incstack = 0
  5081                           ; Regs used in _setComunicateMode: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5082                           ;setComunicateMode@m_type stored from wreg
  5083  03E5  0021               	movlb	1	; select bank1
  5084  03E6  00EA               	movwf	setComunicateMode@m_type^(0+128)
  5085                           
  5086                           ;comu_type.c: 39: for(int i = 0; i < 18; i++){
  5087  03E7  01EB               	clrf	setComunicateMode@i^(0+128)
  5088  03E8  01EC               	clrf	(setComunicateMode@i+1)^(0+128)
  5089  03E9                     L1:	
  5090  03E9  086C               	movf	(setComunicateMode@i+1)^(0+128),w
  5091  03EA  3A80               	xorlw	128
  5092  03EB  0020               	movlb	0	; select bank0
  5093  03EC  00C7               	movwf	??_setComunicateMode
  5094  03ED  3080               	movlw	128
  5095  03EE  0247               	subwf	??_setComunicateMode,w
  5096  03EF  1D03               	skipz
  5097  03F0  2BF4               	goto	u1335
  5098  03F1  3012               	movlw	18
  5099  03F2  0021               	movlb	1	; select bank1
  5100  03F3  026B               	subwf	setComunicateMode@i^(0+128),w
  5101  03F4                     u1335:	
  5102  03F4  1803               	btfsc	3,0
  5103  03F5  0008               	return
  5104                           
  5105                           ;comu_type.c: 40: if(comu_types[i] == m_type){
  5106  03F6  0021               	movlb	1	; select bank1
  5107  03F7  086B               	movf	setComunicateMode@i^(0+128),w
  5108  03F8  3EA0               	addlw	(low (_comu_types| 0))& (0+255)
  5109  03F9  0086               	movwf	6
  5110  03FA  0187               	clrf	7
  5111  03FB  0801               	movf	1,w
  5112  03FC  066A               	xorwf	setComunicateMode@m_type^(0+128),w
  5113  03FD  1903               	btfsc	3,2
  5114  03FE  2C08               	goto	l2803
  5115  03FF  2C1C               	goto	l2805
  5116  0400                     l2793:	
  5117                           ;comu_type.c: 42: case 0:
  5118                           
  5119                           ;comu_type.c: 41: switch(i){
  5120                           
  5121                           
  5122                           ;comu_type.c: 43: Calibrate_download(spi1_Read_data);
  5123  0400  0879               	movf	_spi1_Read_data,w
  5124  0401  3180  20A7         	fcall	_Calibrate_download
  5125                           
  5126                           ;comu_type.c: 44: return 1;
  5127                           ;	Return value of _setComunicateMode is never used
  5128  0403  0008               	return
  5129  0404                     l2797:	
  5130                           ;comu_type.c: 45: case 1:
  5131                           
  5132                           
  5133                           ;comu_type.c: 46: readCargo(spi1_Read_data);
  5134  0404  0879               	movf	_spi1_Read_data,w
  5135  0405  3181  21A2         	fcall	_readCargo
  5136                           
  5137                           ;comu_type.c: 51: return 1;
  5138                           ;	Return value of _setComunicateMode is never used
  5139                           
  5140                           ;comu_type.c: 50: case 3:
  5141                           
  5142                           ;comu_type.c: 49: return 1;
  5143                           ;	Return value of _setComunicateMode is never used
  5144                           
  5145                           ;comu_type.c: 48: case 2:
  5146                           
  5147                           ;comu_type.c: 47: return 1;
  5148                           ;	Return value of _setComunicateMode is never used
  5149  0407  0008               	return
  5150  0408                     l2803:	
  5151                           ;comu_type.c: 52: }
  5152                           
  5153                           
  5154                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5155                           ; Switch size 1, requested type "space"
  5156                           ; Number of cases is 1, Range of values is 0 to 0
  5157                           ; switch strategies available:
  5158                           ; Name         Instructions Cycles
  5159                           ; simple_byte            4     3 (average)
  5160                           ; direct_byte            8     6 (fixed)
  5161                           ; jumptable            260     6 (fixed)
  5162                           ;	Chosen strategy is simple_byte
  5163  0408  0021               	movlb	1	; select bank1
  5164  0409  086C               	movf	(setComunicateMode@i+1)^(0+128),w
  5165  040A  3A00               	xorlw	0	; case 0
  5166  040B  1903               	skipnz
  5167  040C  2C0E               	goto	l3015
  5168  040D  2C1C               	goto	l2805
  5169  040E                     l3015:	
  5170                           
  5171                           ; Switch size 1, requested type "space"
  5172                           ; Number of cases is 4, Range of values is 0 to 3
  5173                           ; switch strategies available:
  5174                           ; Name         Instructions Cycles
  5175                           ; simple_byte           13     7 (average)
  5176                           ; direct_byte           14     6 (fixed)
  5177                           ; jumptable            260     6 (fixed)
  5178                           ;	Chosen strategy is simple_byte
  5179  040E  086B               	movf	setComunicateMode@i^(0+128),w
  5180  040F  3A00               	xorlw	0	; case 0
  5181  0410  1903               	skipnz
  5182  0411  2C00               	goto	l2793
  5183  0412  3A01               	xorlw	1	; case 1
  5184  0413  1903               	skipnz
  5185  0414  2C04               	goto	l2797
  5186  0415  3A03               	xorlw	3	; case 2
  5187  0416  1903               	skipnz
  5188  0417  2C22               	goto	l433
  5189  0418  3A01               	xorlw	1	; case 3
  5190  0419  1903               	skipnz
  5191  041A  2C22               	goto	l433
  5192  041B  2C1C               	goto	l2805
  5193  041C                     l2805:	
  5194  041C  3001               	movlw	1
  5195  041D  0021               	movlb	1	; select bank1
  5196  041E  07EB               	addwf	setComunicateMode@i^(0+128),f
  5197  041F  3000               	movlw	0
  5198  0420  3DEC               	addwfc	(setComunicateMode@i+1)^(0+128),f
  5199  0421  2BE9               	goto	L1
  5200  0422                     l433:	
  5201                           ;comu_type.c: 53: }
  5202                           ;comu_type.c: 54: }
  5203                           ;comu_type.c: 55: return 0;
  5204                           ;	Return value of _setComunicateMode is never used
  5205                           
  5206  0422  0008               	return
  5207  0423                     __end_of_setComunicateMode:	
  5208                           
  5209                           	psect	text6
  5210  01A2                     __ptext6:	
  5211 ;; *************** function _readCargo *****************
  5212 ;; Defined at:
  5213 ;;		line 15 in file "D:/programdata/16F18346_Link_IC.X/normal_mode.c"
  5214 ;; Parameters:    Size  Location     Type
  5215 ;;  spi1_Read_da    1    wreg     unsigned char 
  5216 ;; Auto vars:     Size  Location     Type
  5217 ;;  spi1_Read_da    1   28[BANK0 ] unsigned char 
  5218 ;;  buflong         4   22[BANK0 ] unsigned long 
  5219 ;;  bufint          2   26[BANK0 ] unsigned int 
  5220 ;; Return value:  Size  Location     Type
  5221 ;;                  1    wreg      void 
  5222 ;; Registers used:
  5223 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5224 ;; Tracked objects:
  5225 ;;		On entry : 0/0
  5226 ;;		On exit  : 0/0
  5227 ;;		Unchanged: 0/0
  5228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5229 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5230 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5231 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5232 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5233 ;;Total ram usage:       12 bytes
  5234 ;; Hardware stack levels used:    1
  5235 ;; Hardware stack levels required when called:    4
  5236 ;; This function calls:
  5237 ;;		_clutchaction
  5238 ;;		_getCargoData
  5239 ;;		_restartCargo
  5240 ;; This function is called by:
  5241 ;;		_setComunicateMode
  5242 ;; This function uses a non-reentrant model
  5243 ;;
  5244                           
  5245                           
  5246                           ;psect for function _readCargo
  5247  01A2                     _readCargo:	
  5248                           
  5249                           ;incstack = 0
  5250                           ; Regs used in _readCargo: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5251                           ;readCargo@spi1_Read_data stored from wreg
  5252  01A2  0020               	movlb	0	; select bank0
  5253  01A3  00BC               	movwf	readCargo@spi1_Read_data
  5254                           
  5255                           ;normal_mode.c: 16: unsigned int bufint = spi1_Read_data;
  5256  01A4  083C               	movf	readCargo@spi1_Read_data,w
  5257  01A5  00B1               	movwf	??_readCargo
  5258  01A6  01B2               	clrf	??_readCargo+1
  5259  01A7  0831               	movf	??_readCargo,w
  5260  01A8  00BA               	movwf	readCargo@bufint
  5261  01A9  0832               	movf	??_readCargo+1,w
  5262  01AA  00BB               	movwf	readCargo@bufint+1
  5263                           
  5264                           ;normal_mode.c: 17: unsigned long buflong = spi1_Read_data;
  5265  01AB  083C               	movf	readCargo@spi1_Read_data,w
  5266  01AC  00B1               	movwf	??_readCargo
  5267  01AD  01B2               	clrf	??_readCargo+1
  5268  01AE  01B3               	clrf	??_readCargo+2
  5269  01AF  01B4               	clrf	??_readCargo+3
  5270  01B0  0834               	movf	??_readCargo+3,w
  5271  01B1  00B9               	movwf	readCargo@buflong+3
  5272  01B2  0833               	movf	??_readCargo+2,w
  5273  01B3  00B8               	movwf	readCargo@buflong+2
  5274  01B4  0832               	movf	??_readCargo+1,w
  5275  01B5  00B7               	movwf	readCargo@buflong+1
  5276  01B6  0831               	movf	??_readCargo,w
  5277  01B7  00B6               	movwf	readCargo@buflong
  5278                           
  5279                           ;normal_mode.c: 18: cargoData = getCargoData();
  5280  01B8  3186  2619  3181   	fcall	_getCargoData
  5281  01BB  0020               	movlb	0	; select bank0
  5282  01BC  3020               	movlw	low ?_getCargoData
  5283  01BD  0086               	movwf	6
  5284  01BE  3000               	movlw	high ?_getCargoData
  5285  01BF  0087               	movwf	7
  5286  01C0  3048               	movlw	low _cargoData
  5287  01C1  0084               	movwf	4
  5288  01C2  3000               	movlw	high _cargoData
  5289  01C3  0085               	movwf	5
  5290  01C4  3010               	movlw	16
  5291  01C5  00B1               	movwf	??_readCargo
  5292  01C6                     u1220:	
  5293  01C6  0016               	moviw fsr1++
  5294  01C7  001A               	movwi fsr0++
  5295  01C8  0BB1               	decfsz	??_readCargo,f
  5296  01C9  29C6               	goto	u1220
  5297                           
  5298                           ;normal_mode.c: 19: if(isMycargo){
  5299  01CA  1870               	btfsc	_isMycargo/(0+8),_isMycargo& (0+7)
  5300  01CB  2A52               	goto	l2659
  5301  01CC  2A61               	goto	l2661
  5302  01CD                     l2617:	
  5303                           ;normal_mode.c: 21: case 0:
  5304                           
  5305                           ;normal_mode.c: 20: switch(countabuf){
  5306                           
  5307                           
  5308                           ;normal_mode.c: 22: cargoData.cargoLength = (bufint << 8 | 0x00FF);
  5309  01CD  083A               	movf	readCargo@bufint,w
  5310  01CE  00B2               	movwf	??_readCargo+1
  5311  01CF  01B1               	clrf	??_readCargo
  5312  01D0  30FF               	movlw	255
  5313  01D1  0431               	iorwf	??_readCargo,w
  5314  01D2  00C8               	movwf	_cargoData
  5315  01D3  3000               	movlw	0
  5316  01D4  0432               	iorwf	??_readCargo+1,w
  5317  01D5  29E1               	goto	L2
  5318  01D6                     l2619:	
  5319                           ;normal_mode.c: 24: case 1:
  5320                           
  5321                           ;normal_mode.c: 23: break;
  5322                           
  5323                           
  5324                           ;normal_mode.c: 25: cargoData.cargoLength = cargoData.cargoLength & (bufint | 0xFF00);
  5325  01D6  3000               	movlw	0
  5326  01D7  043A               	iorwf	readCargo@bufint,w
  5327  01D8  00B1               	movwf	??_readCargo
  5328  01D9  30FF               	movlw	255
  5329  01DA  043B               	iorwf	readCargo@bufint+1,w
  5330  01DB  00B2               	movwf	??_readCargo+1
  5331  01DC  0848               	movf	_cargoData,w
  5332  01DD  0531               	andwf	??_readCargo,w
  5333  01DE  00C8               	movwf	_cargoData
  5334  01DF  0849               	movf	_cargoData+1,w
  5335  01E0  0532               	andwf	??_readCargo+1,w
  5336  01E1                     L2:	
  5337  01E1  00C9               	movwf	_cargoData+1
  5338                           
  5339                           ;normal_mode.c: 26: break;
  5340  01E2  2A61               	goto	l2661
  5341  01E3                     l2621:	
  5342                           ;normal_mode.c: 27: case 2:
  5343                           
  5344                           
  5345                           ;normal_mode.c: 28: cargoData.command = spi1_Read_data;
  5346  01E3  083C               	movf	readCargo@spi1_Read_data,w
  5347  01E4  00B1               	movwf	??_readCargo
  5348  01E5  0831               	movf	??_readCargo,w
  5349  01E6  00CA               	movwf	_cargoData+2
  5350                           
  5351                           ;normal_mode.c: 29: break;
  5352  01E7  2A61               	goto	l2661
  5353  01E8                     l2623:	
  5354                           ;normal_mode.c: 30: case 3:
  5355                           
  5356                           
  5357                           ;normal_mode.c: 31: cargoData.index = spi1_Read_data;
  5358  01E8  083C               	movf	readCargo@spi1_Read_data,w
  5359  01E9  00B1               	movwf	??_readCargo
  5360  01EA  0831               	movf	??_readCargo,w
  5361  01EB  00CB               	movwf	_cargoData+3
  5362                           
  5363                           ;normal_mode.c: 32: break;
  5364  01EC  2A61               	goto	l2661
  5365  01ED                     l2625:	
  5366                           ;normal_mode.c: 33: case 4:
  5367                           
  5368                           
  5369                           ;normal_mode.c: 34: cargoData.address = spi1_Read_data;
  5370  01ED  083C               	movf	readCargo@spi1_Read_data,w
  5371  01EE  00B1               	movwf	??_readCargo
  5372  01EF  0831               	movf	??_readCargo,w
  5373  01F0  00CC               	movwf	_cargoData+4
  5374                           
  5375                           ;normal_mode.c: 35: if(cargoData.address != linkInfo.My_address){
  5376  01F1  084C               	movf	_cargoData+4,w
  5377  01F2  0021               	movlb	1	; select bank1
  5378  01F3  064D               	xorwf	_linkInfo^(0+128),w
  5379  01F4  1903               	skipnz
  5380  01F5  2A61               	goto	l2661
  5381                           
  5382                           ;normal_mode.c: 36: restartCargo();
  5383  01F6  3186  2645  3181   	fcall	_restartCargo
  5384                           
  5385                           ;normal_mode.c: 37: isMycargo = 0;
  5386  01F9  1070               	bcf	_isMycargo/(0+8),_isMycargo& (0+7)
  5387                           
  5388                           ;normal_mode.c: 39: }
  5389                           ;normal_mode.c: 40: break;
  5390                           
  5391                           ;normal_mode.c: 38: }else{
  5392  01FA  2A61               	goto	l2661
  5393  01FB                     l2631:	
  5394                           ;normal_mode.c: 41: case 5:
  5395                           
  5396                           
  5397                           ;normal_mode.c: 42: spi2_Send_data = (cargoData.linkAngleTo >> 8 & 0x00ff);
  5398  01FB  0020               	movlb	0	; select bank0
  5399  01FC  084E               	movf	_cargoData+6,w
  5400  01FD  2A4E               	goto	L12
  5401  01FE                     l2633:	
  5402                           ;normal_mode.c: 44: case 6:
  5403                           
  5404                           ;normal_mode.c: 43: break;
  5405                           
  5406                           
  5407                           ;normal_mode.c: 45: spi2_Send_data = (cargoData.linkAngleTo & 0x00ff);
  5408  01FE  084D               	movf	_cargoData+5,w
  5409  01FF  2A4E               	goto	L12
  5410  0200                     l2635:	
  5411                           ;normal_mode.c: 47: case 7:
  5412                           
  5413                           ;normal_mode.c: 46: break;
  5414                           
  5415                           
  5416                           ;normal_mode.c: 48: spi2_Send_data = (cargoData.linkAngleBack >> 8 & 0x00ff);
  5417  0200  0850               	movf	_cargoData+8,w
  5418  0201  2A4E               	goto	L12
  5419  0202                     l2637:	
  5420                           ;normal_mode.c: 50: case 8:
  5421                           
  5422                           ;normal_mode.c: 49: break;
  5423                           
  5424                           
  5425                           ;normal_mode.c: 51: spi2_Send_data = (cargoData.linkAngleBack & 0x00ff);
  5426  0202  084F               	movf	_cargoData+7,w
  5427  0203  2A4E               	goto	L12
  5428  0204                     l2639:	
  5429                           ;normal_mode.c: 53: case 9:
  5430                           
  5431                           ;normal_mode.c: 52: break;
  5432                           
  5433                           
  5434                           ;normal_mode.c: 54: spi2_Send_data = (cargoData.passedTime >> 8 & 0x00ff);
  5435  0204  0852               	movf	_cargoData+10,w
  5436  0205  2A4E               	goto	L12
  5437  0206                     l2641:	
  5438                           ;normal_mode.c: 56: case 10:
  5439                           
  5440                           ;normal_mode.c: 55: break;
  5441                           
  5442                           
  5443                           ;normal_mode.c: 57: spi2_Send_data = (cargoData.passedTime & 0x00ff);
  5444  0206  0851               	movf	_cargoData+9,w
  5445  0207  2A4E               	goto	L12
  5446  0208                     l2643:	
  5447                           ;normal_mode.c: 59: case 11:
  5448                           
  5449                           ;normal_mode.c: 58: break;
  5450                           
  5451                           
  5452                           ;normal_mode.c: 60: cargoData.clutchMode = spi1_Read_data;
  5453  0208  083C               	movf	readCargo@spi1_Read_data,w
  5454  0209  00B1               	movwf	??_readCargo
  5455  020A  0831               	movf	??_readCargo,w
  5456  020B  00D3               	movwf	_cargoData+11
  5457                           
  5458                           ;normal_mode.c: 61: clutchaction(cargoData.clutchMode);
  5459  020C  0853               	movf	_cargoData+11,w
  5460  020D  3186  2678  3181   	fcall	_clutchaction
  5461                           
  5462                           ;normal_mode.c: 62: break;
  5463  0210  2A61               	goto	l2661
  5464  0211                     l2647:	
  5465                           ;normal_mode.c: 63: case 12:
  5466                           
  5467                           
  5468                           ;normal_mode.c: 64: cargoData.WorkingCount++;
  5469  0211  3001               	movlw	1
  5470  0212  0020               	movlb	0	; select bank0
  5471  0213  07D4               	addwf	_cargoData+12,f
  5472  0214  3000               	movlw	0
  5473  0215  3DD5               	addwfc	_cargoData+13,f
  5474  0216  3000               	movlw	0
  5475  0217  3DD6               	addwfc	_cargoData+14,f
  5476  0218  3000               	movlw	0
  5477  0219  3DD7               	addwfc	_cargoData+15,f
  5478                           
  5479                           ;normal_mode.c: 65: spi2_Send_data = (cargoData.WorkingCount >> 24 & 0x000000ff);
  5480  021A  0854               	movf	_cargoData+12,w
  5481  021B  00B1               	movwf	??_readCargo
  5482  021C  0855               	movf	_cargoData+13,w
  5483  021D  00B2               	movwf	??_readCargo+1
  5484  021E  0856               	movf	_cargoData+14,w
  5485  021F  00B3               	movwf	??_readCargo+2
  5486  0220  0857               	movf	_cargoData+15,w
  5487  0221  00B4               	movwf	??_readCargo+3
  5488  0222  3018               	movlw	24
  5489  0223                     u1255:	
  5490  0223  36B4               	lsrf	??_readCargo+3,f
  5491  0224  0CB3               	rrf	??_readCargo+2,f
  5492  0225  0CB2               	rrf	??_readCargo+1,f
  5493  0226  0CB1               	rrf	??_readCargo,f
  5494  0227  0B89               	decfsz	9,f
  5495  0228  2A23               	goto	u1255
  5496  0229  2A49               	goto	L14
  5497  022A                     l2651:	
  5498                           ;normal_mode.c: 67: case 13:
  5499                           
  5500                           ;normal_mode.c: 66: break;
  5501                           
  5502                           
  5503                           ;normal_mode.c: 68: spi2_Send_data = (cargoData.WorkingCount >> 16 & 0x000000ff);
  5504  022A  0854               	movf	_cargoData+12,w
  5505  022B  00B1               	movwf	??_readCargo
  5506  022C  0855               	movf	_cargoData+13,w
  5507  022D  00B2               	movwf	??_readCargo+1
  5508  022E  0856               	movf	_cargoData+14,w
  5509  022F  00B3               	movwf	??_readCargo+2
  5510  0230  0857               	movf	_cargoData+15,w
  5511  0231  00B4               	movwf	??_readCargo+3
  5512  0232  3010               	movlw	16
  5513  0233                     u1265:	
  5514  0233  36B4               	lsrf	??_readCargo+3,f
  5515  0234  0CB3               	rrf	??_readCargo+2,f
  5516  0235  0CB2               	rrf	??_readCargo+1,f
  5517  0236  0CB1               	rrf	??_readCargo,f
  5518  0237  0B89               	decfsz	9,f
  5519  0238  2A33               	goto	u1265
  5520  0239  2A49               	goto	L14
  5521  023A                     l2653:	
  5522                           ;normal_mode.c: 70: case 14:
  5523                           
  5524                           ;normal_mode.c: 69: break;
  5525                           
  5526                           
  5527                           ;normal_mode.c: 71: spi2_Send_data = (cargoData.WorkingCount >> 8 & 0x000000ff);
  5528  023A  0854               	movf	_cargoData+12,w
  5529  023B  00B1               	movwf	??_readCargo
  5530  023C  0855               	movf	_cargoData+13,w
  5531  023D  00B2               	movwf	??_readCargo+1
  5532  023E  0856               	movf	_cargoData+14,w
  5533  023F  00B3               	movwf	??_readCargo+2
  5534  0240  0857               	movf	_cargoData+15,w
  5535  0241  00B4               	movwf	??_readCargo+3
  5536  0242  3008               	movlw	8
  5537  0243                     u1275:	
  5538  0243  36B4               	lsrf	??_readCargo+3,f
  5539  0244  0CB3               	rrf	??_readCargo+2,f
  5540  0245  0CB2               	rrf	??_readCargo+1,f
  5541  0246  0CB1               	rrf	??_readCargo,f
  5542  0247  0B89               	decfsz	9,f
  5543  0248  2A43               	goto	u1275
  5544  0249                     L14:	
  5545  0249  0831               	movf	??_readCargo,w
  5546  024A  00B5               	movwf	??_readCargo+4
  5547  024B  0835               	movf	??_readCargo+4,w
  5548  024C  2A50               	goto	L11
  5549  024D                     l2655:	
  5550                           ;normal_mode.c: 73: case 15:
  5551                           
  5552                           ;normal_mode.c: 72: break;
  5553                           
  5554                           
  5555                           ;normal_mode.c: 74: spi2_Send_data = (cargoData.WorkingCount & 0x000000ff);
  5556  024D  0854               	movf	_cargoData+12,w
  5557  024E                     L12:	
  5558  024E  00B1               	movwf	??_readCargo
  5559  024F  0831               	movf	??_readCargo,w
  5560  0250                     L11:	
  5561  0250  00EB               	movwf	_spi2_Send_data
  5562                           
  5563                           ;normal_mode.c: 76: }
  5564                           
  5565                           ;normal_mode.c: 75: break;
  5566  0251  2A61               	goto	l2661
  5567  0252                     l2659:	
  5568                           
  5569                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5570                           ; Switch size 1, requested type "space"
  5571                           ; Number of cases is 1, Range of values is 0 to 0
  5572                           ; switch strategies available:
  5573                           ; Name         Instructions Cycles
  5574                           ; simple_byte            4     3 (average)
  5575                           ; direct_byte            8     6 (fixed)
  5576                           ; jumptable            260     6 (fixed)
  5577                           ;	Chosen strategy is simple_byte
  5578  0252  085F               	movf	_countabuf+1,w
  5579  0253  3A00               	xorlw	0	; case 0
  5580  0254  1903               	skipnz
  5581  0255  2A57               	goto	l3017
  5582  0256  2A61               	goto	l2661
  5583  0257                     l3017:	
  5584                           
  5585                           ; Switch size 1, requested type "space"
  5586                           ; Number of cases is 16, Range of values is 0 to 15
  5587                           ; switch strategies available:
  5588                           ; Name         Instructions Cycles
  5589                           ; direct_byte           38     6 (fixed)
  5590                           ; simple_byte           49    25 (average)
  5591                           ; jumptable            260     6 (fixed)
  5592                           ;	Chosen strategy is direct_byte
  5593  0257  085E               	movf	_countabuf,w
  5594  0258  0084               	movwf	4
  5595  0259  3010               	movlw	16
  5596  025A  0204               	subwf	4,w
  5597  025B  1803               	skipnc
  5598  025C  2A61               	goto	l2661
  5599  025D  3185               	movlp	high S3019
  5600  025E  3504               	lslf	4,w
  5601  025F  3ECE               	addlw	low S3019
  5602  0260  0082               	movwf	2
  5603  0261                     l2661:	
  5604                           
  5605                           ;normal_mode.c: 77: }
  5606                           ;normal_mode.c: 79: countabuf++;
  5607  0261  3001               	movlw	1
  5608  0262  0020               	movlb	0	; select bank0
  5609  0263  07DE               	addwf	_countabuf,f
  5610  0264  3000               	movlw	0
  5611  0265  3DDF               	addwfc	_countabuf+1,f
  5612                           
  5613                           ;normal_mode.c: 80: if(cargoData.cargoLength <= countabuf){
  5614  0266  0849               	movf	_cargoData+1,w
  5615  0267  025F               	subwf	_countabuf+1,w
  5616  0268  1D03               	skipz
  5617  0269  2A6C               	goto	u1285
  5618  026A  0848               	movf	_cargoData,w
  5619  026B  025E               	subwf	_countabuf,w
  5620  026C                     u1285:	
  5621  026C  1C03               	skipc
  5622  026D  0008               	return
  5623                           
  5624                           ;normal_mode.c: 81: cargoLengthnuf = 0;
  5625  026E  0021               	movlb	1	; select bank1
  5626  026F  01DB               	clrf	_cargoLengthnuf^(0+128)
  5627  0270  01DC               	clrf	(_cargoLengthnuf+1)^(0+128)
  5628                           
  5629                           ;normal_mode.c: 82: cargoWorkingCount = 0;
  5630  0271  3000               	movlw	0
  5631  0272  00D6               	movwf	(_cargoWorkingCount+3)^(0+128)
  5632  0273  3000               	movlw	0
  5633  0274  00D5               	movwf	(_cargoWorkingCount+2)^(0+128)
  5634  0275  3000               	movlw	0
  5635  0276  00D4               	movwf	(_cargoWorkingCount+1)^(0+128)
  5636  0277  3000               	movlw	0
  5637  0278  00D3               	movwf	_cargoWorkingCount^(0+128)
  5638                           
  5639                           ;normal_mode.c: 83: cargoData.cargoLength = 0xFFFF;
  5640  0279  30FF               	movlw	255
  5641  027A  0020               	movlb	0	; select bank0
  5642  027B  00C8               	movwf	_cargoData
  5643  027C  30FF               	movlw	255
  5644  027D  00C9               	movwf	_cargoData+1
  5645                           
  5646                           ;normal_mode.c: 84: countabuf = 0;
  5647  027E  01DE               	clrf	_countabuf
  5648  027F  01DF               	clrf	_countabuf+1
  5649                           
  5650                           ;normal_mode.c: 85: isMycargo = 1;
  5651  0280  1470               	bsf	_isMycargo/(0+8),_isMycargo& (0+7)
  5652  0281  0008               	return
  5653  0282                     __end_of_readCargo:	
  5654                           
  5655                           	psect	swtext1
  5656  05CE                     __pswtext1:	
  5657  05CE                     S3019:	
  5658  05CE  3181  29CD         	ljmp	l2617
  5659  05D0  3181  29D6         	ljmp	l2619
  5660  05D2  3181  29E3         	ljmp	l2621
  5661  05D4  3181  29E8         	ljmp	l2623
  5662  05D6  3181  29ED         	ljmp	l2625
  5663  05D8  3181  29FB         	ljmp	l2631
  5664  05DA  3181  29FE         	ljmp	l2633
  5665  05DC  3182  2A00         	ljmp	l2635
  5666  05DE  3182  2A02         	ljmp	l2637
  5667  05E0  3182  2A04         	ljmp	l2639
  5668  05E2  3182  2A06         	ljmp	l2641
  5669  05E4  3182  2A08         	ljmp	l2643
  5670  05E6  3182  2A11         	ljmp	l2647
  5671  05E8  3182  2A2A         	ljmp	l2651
  5672  05EA  3182  2A3A         	ljmp	l2653
  5673  05EC  3182  2A4D         	ljmp	l2655
  5674                           
  5675                           	psect	text7
  5676  0678                     __ptext7:	
  5677 ;; *************** function _clutchaction *****************
  5678 ;; Defined at:
  5679 ;;		line 68 in file "D:/programdata/16F18346_Link_IC.X/command.c"
  5680 ;; Parameters:    Size  Location     Type
  5681 ;;  comannd         1    wreg     unsigned char 
  5682 ;; Auto vars:     Size  Location     Type
  5683 ;;  comannd         1    0[BANK0 ] unsigned char 
  5684 ;; Return value:  Size  Location     Type
  5685 ;;		None               void
  5686 ;; Registers used:
  5687 ;;		wreg, status,2, status,0
  5688 ;; Tracked objects:
  5689 ;;		On entry : 0/0
  5690 ;;		On exit  : 0/0
  5691 ;;		Unchanged: 0/0
  5692 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5693 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5694 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5695 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5696 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5697 ;;Total ram usage:        1 bytes
  5698 ;; Hardware stack levels used:    1
  5699 ;; Hardware stack levels required when called:    3
  5700 ;; This function calls:
  5701 ;;		Nothing
  5702 ;; This function is called by:
  5703 ;;		_readCargo
  5704 ;; This function uses a non-reentrant model
  5705 ;;
  5706                           
  5707                           
  5708                           ;psect for function _clutchaction
  5709  0678                     _clutchaction:	
  5710                           
  5711                           ;incstack = 0
  5712                           ; Regs used in _clutchaction: [wreg+status,2+status,0]
  5713                           ;clutchaction@comannd stored from wreg
  5714  0678  0020               	movlb	0	; select bank0
  5715  0679  00A0               	movwf	clutchaction@comannd
  5716                           
  5717                           ;command.c: 69: if(comannd == 1){
  5718  067A  0320               	decf	clutchaction@comannd,w
  5719  067B  1D03               	btfss	3,2
  5720  067C  2E80               	goto	l336
  5721                           
  5722                           ;command.c: 70: LATAbits.LATA0 = 1;
  5723  067D  0022               	movlb	2	; select bank2
  5724  067E  140C               	bsf	12,0	;volatile
  5725                           
  5726                           ;command.c: 71: }else{
  5727  067F  0008               	return
  5728  0680                     l336:	
  5729                           
  5730                           ;command.c: 72: LATAbits.LATA0 = 0;
  5731  0680  0022               	movlb	2	; select bank2
  5732  0681  100C               	bcf	12,0	;volatile
  5733  0682  0008               	return
  5734  0683                     __end_of_clutchaction:	
  5735                           
  5736                           	psect	text8
  5737  00A7                     __ptext8:	
  5738 ;; *************** function _Calibrate_download *****************
  5739 ;; Defined at:
  5740 ;;		line 66 in file "D:/programdata/16F18346_Link_IC.X/calibrate_mode.c"
  5741 ;; Parameters:    Size  Location     Type
  5742 ;;  spi_Read_dat    1    wreg     unsigned char 
  5743 ;; Auto vars:     Size  Location     Type
  5744 ;;  spi_Read_dat    1    6[BANK1 ] unsigned char 
  5745 ;;  buflong         4    0[BANK1 ] unsigned long 
  5746 ;;  bufint          2    4[BANK1 ] unsigned int 
  5747 ;; Return value:  Size  Location     Type
  5748 ;;                  1    wreg      void 
  5749 ;; Registers used:
  5750 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5751 ;; Tracked objects:
  5752 ;;		On entry : 0/0
  5753 ;;		On exit  : 0/0
  5754 ;;		Unchanged: 0/0
  5755 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5756 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5757 ;;      Locals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5758 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5759 ;;      Totals:         0       5       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5760 ;;Total ram usage:       12 bytes
  5761 ;; Hardware stack levels used:    1
  5762 ;; Hardware stack levels required when called:    5
  5763 ;; This function calls:
  5764 ;;		_InitCalibrate
  5765 ;;		_isEndpoint
  5766 ;; This function is called by:
  5767 ;;		_setComunicateMode
  5768 ;; This function uses a non-reentrant model
  5769 ;;
  5770                           
  5771                           
  5772                           ;psect for function _Calibrate_download
  5773  00A7                     _Calibrate_download:	
  5774                           
  5775                           ;incstack = 0
  5776                           ; Regs used in _Calibrate_download: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5777                           ;Calibrate_download@spi_Read_data stored from wreg
  5778  00A7  0021               	movlb	1	; select bank1
  5779  00A8  00E9               	movwf	Calibrate_download@spi_Read_data^(0+128)
  5780                           
  5781                           ;calibrate_mode.c: 68: unsigned int bufint = spi_Read_data;
  5782  00A9  0869               	movf	Calibrate_download@spi_Read_data^(0+128),w
  5783  00AA  0020               	movlb	0	; select bank0
  5784  00AB  00C2               	movwf	??_Calibrate_download
  5785  00AC  01C3               	clrf	??_Calibrate_download+1
  5786  00AD  0842               	movf	??_Calibrate_download,w
  5787  00AE  0021               	movlb	1	; select bank1
  5788  00AF  00E7               	movwf	Calibrate_download@bufint^(0+128)
  5789  00B0  0020               	movlb	0	; select bank0
  5790  00B1  0843               	movf	??_Calibrate_download+1,w
  5791  00B2  0021               	movlb	1	; select bank1
  5792  00B3  00E8               	movwf	(Calibrate_download@bufint+1)^(0+128)
  5793                           
  5794                           ;calibrate_mode.c: 69: unsigned long buflong = spi_Read_data;
  5795  00B4  0869               	movf	Calibrate_download@spi_Read_data^(0+128),w
  5796  00B5  0020               	movlb	0	; select bank0
  5797  00B6  00C2               	movwf	??_Calibrate_download
  5798  00B7  01C3               	clrf	??_Calibrate_download+1
  5799  00B8  01C4               	clrf	??_Calibrate_download+2
  5800  00B9  01C5               	clrf	??_Calibrate_download+3
  5801  00BA  0845               	movf	??_Calibrate_download+3,w
  5802  00BB  0021               	movlb	1	; select bank1
  5803  00BC  00E6               	movwf	(Calibrate_download@buflong+3)^(0+128)
  5804  00BD  0020               	movlb	0	; select bank0
  5805  00BE  0844               	movf	??_Calibrate_download+2,w
  5806  00BF  0021               	movlb	1	; select bank1
  5807  00C0  00E5               	movwf	(Calibrate_download@buflong+2)^(0+128)
  5808  00C1  0020               	movlb	0	; select bank0
  5809  00C2  0843               	movf	??_Calibrate_download+1,w
  5810  00C3  0021               	movlb	1	; select bank1
  5811  00C4  00E4               	movwf	(Calibrate_download@buflong+1)^(0+128)
  5812  00C5  0020               	movlb	0	; select bank0
  5813  00C6  0842               	movf	??_Calibrate_download,w
  5814  00C7  0021               	movlb	1	; select bank1
  5815  00C8  00E3               	movwf	Calibrate_download@buflong^(0+128)
  5816                           
  5817                           ;calibrate_mode.c: 70: isEndpoint();
  5818  00C9  3184  245A  3180   	fcall	_isEndpoint
  5819                           
  5820                           ;calibrate_mode.c: 71: switch(countabuf){
  5821  00CC  2977               	goto	l2585
  5822  00CD                     l2549:	
  5823                           ;calibrate_mode.c: 72: case 0:
  5824                           
  5825                           
  5826                           ;calibrate_mode.c: 73: InitCalibrate();
  5827  00CD  3184  24EC  3180   	fcall	_InitCalibrate
  5828                           
  5829                           ;calibrate_mode.c: 74: calibdata.cargoLength = (bufint << 8 | 0x00FF);
  5830  00D0  0021               	movlb	1	; select bank1
  5831  00D1  0867               	movf	Calibrate_download@bufint^(0+128),w
  5832  00D2  0020               	movlb	0	; select bank0
  5833  00D3  00C3               	movwf	??_Calibrate_download+1
  5834  00D4  01C2               	clrf	??_Calibrate_download
  5835  00D5  30FF               	movlw	255
  5836  00D6  0442               	iorwf	??_Calibrate_download,w
  5837  00D7  0021               	movlb	1	; select bank1
  5838  00D8  00C4               	movwf	_calibdata^(0+128)
  5839  00D9  3000               	movlw	0
  5840  00DA  0020               	movlb	0	; select bank0
  5841  00DB  0443               	iorwf	??_Calibrate_download+1,w
  5842  00DC  28F0               	goto	L15
  5843  00DD                     l2555:	
  5844                           ;calibrate_mode.c: 77: case 1:
  5845                           
  5846                           ;calibrate_mode.c: 76: break;
  5847                           
  5848                           ;calibrate_mode.c: 75: spi2_Send_data = spi_Read_data;
  5849                           
  5850                           
  5851                           ;calibrate_mode.c: 78: calibdata.cargoLength = calibdata.cargoLength & (bufint | 0xFF00)
      +                          ;
  5852  00DD  3000               	movlw	0
  5853  00DE  0021               	movlb	1	; select bank1
  5854  00DF  0467               	iorwf	Calibrate_download@bufint^(0+128),w
  5855  00E0  0020               	movlb	0	; select bank0
  5856  00E1  00C2               	movwf	??_Calibrate_download
  5857  00E2  30FF               	movlw	255
  5858  00E3  0021               	movlb	1	; select bank1
  5859  00E4  0468               	iorwf	(Calibrate_download@bufint+1)^(0+128),w
  5860  00E5  0020               	movlb	0	; select bank0
  5861  00E6  00C3               	movwf	??_Calibrate_download+1
  5862  00E7  0021               	movlb	1	; select bank1
  5863  00E8  0844               	movf	_calibdata^(0+128),w
  5864  00E9  0020               	movlb	0	; select bank0
  5865  00EA  0542               	andwf	??_Calibrate_download,w
  5866  00EB  0021               	movlb	1	; select bank1
  5867  00EC  00C4               	movwf	_calibdata^(0+128)
  5868  00ED  0845               	movf	(_calibdata+1)^(0+128),w
  5869  00EE  0020               	movlb	0	; select bank0
  5870  00EF  0543               	andwf	??_Calibrate_download+1,w
  5871  00F0                     L15:	
  5872  00F0  0021               	movlb	1	; select bank1
  5873  00F1  00C5               	movwf	(_calibdata+1)^(0+128)
  5874  00F2  2902               	goto	L17
  5875  00F3                     l2557:	
  5876                           ;calibrate_mode.c: 81: case 2:
  5877                           
  5878                           ;calibrate_mode.c: 80: break;
  5879                           
  5880                           ;calibrate_mode.c: 79: spi2_Send_data = spi_Read_data;
  5881                           
  5882                           
  5883                           ;calibrate_mode.c: 82: calibdata.command = spi_Read_data;
  5884  00F3  0021               	movlb	1	; select bank1
  5885  00F4  0869               	movf	Calibrate_download@spi_Read_data^(0+128),w
  5886  00F5  0020               	movlb	0	; select bank0
  5887  00F6  00C2               	movwf	??_Calibrate_download
  5888  00F7  0842               	movf	??_Calibrate_download,w
  5889  00F8  0021               	movlb	1	; select bank1
  5890  00F9  00C6               	movwf	(_calibdata^(0+128)+2)
  5891  00FA  2902               	goto	L17
  5892  00FB                     l2559:	
  5893                           ;calibrate_mode.c: 85: case 3:
  5894                           
  5895                           ;calibrate_mode.c: 84: break;
  5896                           
  5897                           ;calibrate_mode.c: 83: spi2_Send_data = spi_Read_data;
  5898                           
  5899                           
  5900                           ;calibrate_mode.c: 86: calibdata.index = spi_Read_data;
  5901  00FB  0021               	movlb	1	; select bank1
  5902  00FC  0869               	movf	Calibrate_download@spi_Read_data^(0+128),w
  5903  00FD  0020               	movlb	0	; select bank0
  5904  00FE  00C2               	movwf	??_Calibrate_download
  5905  00FF  0842               	movf	??_Calibrate_download,w
  5906  0100  0021               	movlb	1	; select bank1
  5907  0101  00C7               	movwf	(_calibdata^(0+128)+3)
  5908  0102                     L17:	
  5909                           
  5910                           ;calibrate_mode.c: 87: spi2_Send_data = spi_Read_data;
  5911  0102  0869               	movf	Calibrate_download@spi_Read_data^(0+128),w
  5912  0103  2963               	goto	L23
  5913  0104                     l2561:	
  5914                           ;calibrate_mode.c: 89: case 4:
  5915                           
  5916                           ;calibrate_mode.c: 88: break;
  5917                           
  5918                           
  5919                           ;calibrate_mode.c: 90: linkInfo.My_address = spi_Read_data +1;
  5920  0104  0021               	movlb	1	; select bank1
  5921  0105  0869               	movf	Calibrate_download@spi_Read_data^(0+128),w
  5922  0106  3E01               	addlw	1
  5923  0107  0020               	movlb	0	; select bank0
  5924  0108  00C2               	movwf	??_Calibrate_download
  5925  0109  0842               	movf	??_Calibrate_download,w
  5926  010A  0021               	movlb	1	; select bank1
  5927  010B  00CD               	movwf	_linkInfo^(0+128)
  5928                           
  5929                           ;calibrate_mode.c: 91: spi2_Send_data = linkInfo.My_address;
  5930  010C  084D               	movf	_linkInfo^(0+128),w
  5931  010D  2963               	goto	L23
  5932  010E                     l2565:	
  5933                           ;calibrate_mode.c: 93: case 5:
  5934                           
  5935                           ;calibrate_mode.c: 92: break;
  5936                           
  5937                           
  5938                           ;calibrate_mode.c: 94: calibdata.WorkingCount++;
  5939  010E  3001               	movlw	1
  5940  010F  0021               	movlb	1	; select bank1
  5941  0110  07C8               	addwf	(_calibdata^(0+128)+4),f
  5942  0111  3000               	movlw	0
  5943  0112  3DC9               	addwfc	((_calibdata+1)^(0+128)+4),f
  5944  0113  3000               	movlw	0
  5945  0114  3DCA               	addwfc	((_calibdata+2)^(0+128)+4),f
  5946  0115  3000               	movlw	0
  5947  0116  3DCB               	addwfc	((_calibdata+3)^(0+128)+4),f
  5948                           
  5949                           ;calibrate_mode.c: 95: spi2_Send_data = (calibdata.WorkingCount >> 24 & 0x000000ff);
  5950  0117  0848               	movf	(_calibdata^(0+128)+4),w
  5951  0118  0020               	movlb	0	; select bank0
  5952  0119  00C2               	movwf	??_Calibrate_download
  5953  011A  0021               	movlb	1	; select bank1
  5954  011B  0849               	movf	((_calibdata+1)^(0+128)+4),w
  5955  011C  0020               	movlb	0	; select bank0
  5956  011D  00C3               	movwf	??_Calibrate_download+1
  5957  011E  0021               	movlb	1	; select bank1
  5958  011F  084A               	movf	((_calibdata+2)^(0+128)+4),w
  5959  0120  0020               	movlb	0	; select bank0
  5960  0121  00C4               	movwf	??_Calibrate_download+2
  5961  0122  0021               	movlb	1	; select bank1
  5962  0123  084B               	movf	((_calibdata+3)^(0+128)+4),w
  5963  0124  0020               	movlb	0	; select bank0
  5964  0125  00C5               	movwf	??_Calibrate_download+3
  5965  0126  3018               	movlw	24
  5966  0127                     u1165:	
  5967  0127  36C5               	lsrf	??_Calibrate_download+3,f
  5968  0128  0CC4               	rrf	??_Calibrate_download+2,f
  5969  0129  0CC3               	rrf	??_Calibrate_download+1,f
  5970  012A  0CC2               	rrf	??_Calibrate_download,f
  5971  012B  0B89               	decfsz	9,f
  5972  012C  2927               	goto	u1165
  5973  012D  295D               	goto	L25
  5974  012E                     l2569:	
  5975                           ;calibrate_mode.c: 97: case 6:
  5976                           
  5977                           ;calibrate_mode.c: 96: break;
  5978                           
  5979                           
  5980                           ;calibrate_mode.c: 98: spi2_Send_data = (calibdata.WorkingCount >> 16 & 0x000000ff);
  5981  012E  0021               	movlb	1	; select bank1
  5982  012F  0848               	movf	(_calibdata^(0+128)+4),w
  5983  0130  0020               	movlb	0	; select bank0
  5984  0131  00C2               	movwf	??_Calibrate_download
  5985  0132  0021               	movlb	1	; select bank1
  5986  0133  0849               	movf	((_calibdata+1)^(0+128)+4),w
  5987  0134  0020               	movlb	0	; select bank0
  5988  0135  00C3               	movwf	??_Calibrate_download+1
  5989  0136  0021               	movlb	1	; select bank1
  5990  0137  084A               	movf	((_calibdata+2)^(0+128)+4),w
  5991  0138  0020               	movlb	0	; select bank0
  5992  0139  00C4               	movwf	??_Calibrate_download+2
  5993  013A  0021               	movlb	1	; select bank1
  5994  013B  084B               	movf	((_calibdata+3)^(0+128)+4),w
  5995  013C  0020               	movlb	0	; select bank0
  5996  013D  00C5               	movwf	??_Calibrate_download+3
  5997  013E  3010               	movlw	16
  5998  013F                     u1175:	
  5999  013F  36C5               	lsrf	??_Calibrate_download+3,f
  6000  0140  0CC4               	rrf	??_Calibrate_download+2,f
  6001  0141  0CC3               	rrf	??_Calibrate_download+1,f
  6002  0142  0CC2               	rrf	??_Calibrate_download,f
  6003  0143  0B89               	decfsz	9,f
  6004  0144  293F               	goto	u1175
  6005  0145  295D               	goto	L25
  6006  0146                     l2571:	
  6007                           ;calibrate_mode.c: 100: case 7:
  6008                           
  6009                           ;calibrate_mode.c: 99: break;
  6010                           
  6011                           
  6012                           ;calibrate_mode.c: 101: spi2_Send_data = (calibdata.WorkingCount >> 8 & 0x000000ff);
  6013  0146  0021               	movlb	1	; select bank1
  6014  0147  0848               	movf	(_calibdata^(0+128)+4),w
  6015  0148  0020               	movlb	0	; select bank0
  6016  0149  00C2               	movwf	??_Calibrate_download
  6017  014A  0021               	movlb	1	; select bank1
  6018  014B  0849               	movf	((_calibdata+1)^(0+128)+4),w
  6019  014C  0020               	movlb	0	; select bank0
  6020  014D  00C3               	movwf	??_Calibrate_download+1
  6021  014E  0021               	movlb	1	; select bank1
  6022  014F  084A               	movf	((_calibdata+2)^(0+128)+4),w
  6023  0150  0020               	movlb	0	; select bank0
  6024  0151  00C4               	movwf	??_Calibrate_download+2
  6025  0152  0021               	movlb	1	; select bank1
  6026  0153  084B               	movf	((_calibdata+3)^(0+128)+4),w
  6027  0154  0020               	movlb	0	; select bank0
  6028  0155  00C5               	movwf	??_Calibrate_download+3
  6029  0156  3008               	movlw	8
  6030  0157                     u1185:	
  6031  0157  36C5               	lsrf	??_Calibrate_download+3,f
  6032  0158  0CC4               	rrf	??_Calibrate_download+2,f
  6033  0159  0CC3               	rrf	??_Calibrate_download+1,f
  6034  015A  0CC2               	rrf	??_Calibrate_download,f
  6035  015B  0B89               	decfsz	9,f
  6036  015C  2957               	goto	u1185
  6037  015D                     L25:	
  6038  015D  0842               	movf	??_Calibrate_download,w
  6039  015E  00C6               	movwf	??_Calibrate_download+4
  6040  015F  0846               	movf	??_Calibrate_download+4,w
  6041  0160  2966               	goto	L22
  6042  0161                     l2573:	
  6043                           ;calibrate_mode.c: 103: case 8:
  6044                           
  6045                           ;calibrate_mode.c: 102: break;
  6046                           
  6047                           
  6048                           ;calibrate_mode.c: 104: spi2_Send_data = (calibdata.WorkingCount & 0x000000ff);
  6049  0161  0021               	movlb	1	; select bank1
  6050  0162  0848               	movf	(_calibdata^(0+128)+4),w
  6051  0163                     L23:	
  6052  0163  0020               	movlb	0	; select bank0
  6053  0164  00C2               	movwf	??_Calibrate_download
  6054  0165  0842               	movf	??_Calibrate_download,w
  6055  0166                     L22:	
  6056  0166  00EB               	movwf	_spi2_Send_data
  6057                           
  6058                           ;calibrate_mode.c: 105: break;
  6059  0167  2987               	goto	l389
  6060  0168                     l398:	
  6061                           ;calibrate_mode.c: 106: case 9:
  6062                           
  6063                           
  6064                           ;calibrate_mode.c: 108: if(isEndPointTrig == 1){
  6065  0168  1C78               	btfss	_isEndPointTrig/(0+8),_isEndPointTrig& (0+7)
  6066  0169  296E               	goto	l2577
  6067                           
  6068                           ;calibrate_mode.c: 109: linkInfo.endpoint = 1;
  6069  016A  0021               	movlb	1	; select bank1
  6070  016B  01D2               	clrf	(_linkInfo^(0+128)+5)
  6071  016C  0AD2               	incf	(_linkInfo^(0+128)+5),f
  6072                           
  6073                           ;calibrate_mode.c: 110: }else{
  6074  016D  2970               	goto	l2579
  6075  016E                     l2577:	
  6076                           
  6077                           ;calibrate_mode.c: 111: linkInfo.endpoint = 0;
  6078  016E  0021               	movlb	1	; select bank1
  6079  016F  01D2               	clrf	(_linkInfo^(0+128)+5)
  6080  0170                     l2579:	
  6081                           
  6082                           ;calibrate_mode.c: 112: }
  6083                           ;calibrate_mode.c: 113: spi2_Send_data = linkInfo.My_address;
  6084  0170  084D               	movf	_linkInfo^(0+128),w
  6085  0171  0020               	movlb	0	; select bank0
  6086  0172  00C2               	movwf	??_Calibrate_download
  6087  0173  0842               	movf	??_Calibrate_download,w
  6088  0174  00EB               	movwf	_spi2_Send_data
  6089                           
  6090                           ;calibrate_mode.c: 114: isEndPointTrig = 0;
  6091  0175  1078               	bcf	_isEndPointTrig/(0+8),_isEndPointTrig& (0+7)
  6092                           
  6093                           ;calibrate_mode.c: 116: }
  6094                           
  6095                           ;calibrate_mode.c: 115: break;
  6096  0176  2987               	goto	l389
  6097  0177                     l2585:	
  6098                           
  6099                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6100                           ; Switch size 1, requested type "space"
  6101                           ; Number of cases is 1, Range of values is 0 to 0
  6102                           ; switch strategies available:
  6103                           ; Name         Instructions Cycles
  6104                           ; simple_byte            4     3 (average)
  6105                           ; direct_byte            8     6 (fixed)
  6106                           ; jumptable            260     6 (fixed)
  6107                           ;	Chosen strategy is simple_byte
  6108  0177  0020               	movlb	0	; select bank0
  6109  0178  085F               	movf	_countabuf+1,w
  6110  0179  3A00               	xorlw	0	; case 0
  6111  017A  1903               	skipnz
  6112  017B  297D               	goto	l3021
  6113  017C  2987               	goto	l389
  6114  017D                     l3021:	
  6115                           
  6116                           ; Switch size 1, requested type "space"
  6117                           ; Number of cases is 10, Range of values is 0 to 9
  6118                           ; switch strategies available:
  6119                           ; Name         Instructions Cycles
  6120                           ; direct_byte           26     6 (fixed)
  6121                           ; simple_byte           31    16 (average)
  6122                           ; jumptable            260     6 (fixed)
  6123                           ;	Chosen strategy is direct_byte
  6124  017D  085E               	movf	_countabuf,w
  6125  017E  0084               	movwf	4
  6126  017F  300A               	movlw	10
  6127  0180  0204               	subwf	4,w
  6128  0181  1803               	skipnc
  6129  0182  2987               	goto	l389
  6130  0183  3186               	movlp	high S3023
  6131  0184  3504               	lslf	4,w
  6132  0185  3E05               	addlw	low S3023
  6133  0186  0082               	movwf	2
  6134  0187                     l389:	
  6135                           
  6136                           ;calibrate_mode.c: 117: if(isEndPointTrig){
  6137  0187  1878               	btfsc	_isEndPointTrig/(0+8),_isEndPointTrig& (0+7)
  6138                           
  6139                           ;calibrate_mode.c: 118: spi2_Send_data = 0x00;
  6140  0188  01EB               	clrf	_spi2_Send_data
  6141                           
  6142                           ;calibrate_mode.c: 119: }
  6143                           ;calibrate_mode.c: 123: countabuf++;
  6144  0189  3001               	movlw	1
  6145  018A  07DE               	addwf	_countabuf,f
  6146  018B  3000               	movlw	0
  6147  018C  3DDF               	addwfc	_countabuf+1,f
  6148                           
  6149                           ;calibrate_mode.c: 124: if(calibdata.cargoLength <= countabuf){
  6150  018D  0021               	movlb	1	; select bank1
  6151  018E  0845               	movf	(_calibdata+1)^(0+128),w
  6152  018F  0020               	movlb	0	; select bank0
  6153  0190  025F               	subwf	_countabuf+1,w
  6154  0191  1D03               	skipz
  6155  0192  2997               	goto	u1215
  6156  0193  0021               	movlb	1	; select bank1
  6157  0194  0844               	movf	_calibdata^(0+128),w
  6158  0195  0020               	movlb	0	; select bank0
  6159  0196  025E               	subwf	_countabuf,w
  6160  0197                     u1215:	
  6161  0197  1C03               	skipc
  6162  0198  0008               	return
  6163                           
  6164                           ;calibrate_mode.c: 125: calibdata.cargoLength = 0xFFFF;
  6165  0199  30FF               	movlw	255
  6166  019A  0021               	movlb	1	; select bank1
  6167  019B  00C4               	movwf	_calibdata^(0+128)
  6168  019C  30FF               	movlw	255
  6169  019D  00C5               	movwf	(_calibdata^(0+128)+1)
  6170                           
  6171                           ;calibrate_mode.c: 126: countabuf = 0;
  6172  019E  0020               	movlb	0	; select bank0
  6173  019F  01DE               	clrf	_countabuf
  6174  01A0  01DF               	clrf	_countabuf+1
  6175  01A1  0008               	return
  6176  01A2                     __end_of_Calibrate_download:	
  6177                           
  6178                           	psect	swtext2
  6179  0605                     __pswtext2:	
  6180  0605                     S3023:	
  6181  0605  3180  28CD         	ljmp	l2549
  6182  0607  3180  28DD         	ljmp	l2555
  6183  0609  3180  28F3         	ljmp	l2557
  6184  060B  3180  28FB         	ljmp	l2559
  6185  060D  3181  2904         	ljmp	l2561
  6186  060F  3181  290E         	ljmp	l2565
  6187  0611  3181  292E         	ljmp	l2569
  6188  0613  3181  2946         	ljmp	l2571
  6189  0615  3181  2961         	ljmp	l2573
  6190  0617  3181  2968         	ljmp	l398
  6191                           
  6192                           	psect	text9
  6193  045A                     __ptext9:	
  6194 ;; *************** function _isEndpoint *****************
  6195 ;; Defined at:
  6196 ;;		line 30 in file "D:/programdata/16F18346_Link_IC.X/calibrate_mode.c"
  6197 ;; Parameters:    Size  Location     Type
  6198 ;;		None
  6199 ;; Auto vars:     Size  Location     Type
  6200 ;;  spi2data        1    6[BANK0 ] unsigned char 
  6201 ;; Return value:  Size  Location     Type
  6202 ;;		None               void
  6203 ;; Registers used:
  6204 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6205 ;; Tracked objects:
  6206 ;;		On entry : 0/0
  6207 ;;		On exit  : 0/0
  6208 ;;		Unchanged: 0/0
  6209 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6210 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6211 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6212 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6213 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6214 ;;Total ram usage:        6 bytes
  6215 ;; Hardware stack levels used:    1
  6216 ;; Hardware stack levels required when called:    4
  6217 ;; This function calls:
  6218 ;;		_setSPI1sendDataManual
  6219 ;; This function is called by:
  6220 ;;		_Calibrate_download
  6221 ;; This function uses a non-reentrant model
  6222 ;;
  6223                           
  6224                           
  6225                           ;psect for function _isEndpoint
  6226  045A                     _isEndpoint:	
  6227                           
  6228                           ;calibrate_mode.c: 31: unsigned char spi2data = 0;
  6229                           
  6230                           ;incstack = 0
  6231                           ; Regs used in _isEndpoint: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6232  045A  0020               	movlb	0	; select bank0
  6233  045B  01A6               	clrf	isEndpoint@spi2data
  6234                           
  6235                           ;calibrate_mode.c: 32: if(count2 > 1){
  6236  045C  3000               	movlw	0
  6237  045D  0263               	subwf	_count2+1,w
  6238  045E  3002               	movlw	2
  6239  045F  1903               	skipnz
  6240  0460  0262               	subwf	_count2,w
  6241  0461  1C03               	skipc
  6242  0462  2C77               	goto	l2455
  6243                           
  6244                           ;calibrate_mode.c: 33: spi2data = spi2_buffer_data[count2 -1];
  6245  0463  0862               	movf	_count2,w
  6246  0464  3EFF               	addlw	255
  6247  0465  00A1               	movwf	??_isEndpoint
  6248  0466  30FF               	movlw	255
  6249  0467  3D63               	addwfc	_count2+1,w
  6250  0468  00A2               	movwf	??_isEndpoint+1
  6251  0469  30F0               	movlw	240
  6252  046A  00A3               	movwf	??_isEndpoint+2
  6253  046B  3025               	movlw	37
  6254  046C  00A4               	movwf	??_isEndpoint+3
  6255  046D  0821               	movf	??_isEndpoint,w
  6256  046E  0723               	addwf	??_isEndpoint+2,w
  6257  046F  0086               	movwf	6
  6258  0470  0822               	movf	??_isEndpoint+1,w
  6259  0471  3D24               	addwfc	??_isEndpoint+3,w
  6260  0472  0087               	movwf	7
  6261  0473  0801               	movf	1,w
  6262  0474  00A5               	movwf	??_isEndpoint+4
  6263  0475  0825               	movf	??_isEndpoint+4,w
  6264  0476  2C84               	goto	L26
  6265  0477                     l2455:	
  6266                           ;calibrate_mode.c: 34: }else{
  6267                           
  6268                           
  6269                           ;calibrate_mode.c: 35: spi2data = spi2_buffer_data[count2];
  6270  0477  30F0               	movlw	240
  6271  0478  00A1               	movwf	??_isEndpoint
  6272  0479  3025               	movlw	37
  6273  047A  00A2               	movwf	??_isEndpoint+1
  6274  047B  0862               	movf	_count2,w
  6275  047C  0721               	addwf	??_isEndpoint,w
  6276  047D  0086               	movwf	6
  6277  047E  0863               	movf	_count2+1,w
  6278  047F  3D22               	addwfc	??_isEndpoint+1,w
  6279  0480  0087               	movwf	7
  6280  0481  0801               	movf	1,w
  6281  0482  00A3               	movwf	??_isEndpoint+2
  6282  0483  0823               	movf	??_isEndpoint+2,w
  6283  0484                     L26:	
  6284  0484  00A6               	movwf	isEndpoint@spi2data
  6285                           
  6286                           ;calibrate_mode.c: 36: }
  6287                           ;calibrate_mode.c: 37: if(spi2data < 255){
  6288  0485  0A26               	incf	isEndpoint@spi2data,w
  6289  0486  1903               	btfsc	3,2
  6290  0487  2C8A               	goto	l2461
  6291                           
  6292                           ;calibrate_mode.c: 39: isEndPointTrig = 0;
  6293  0488  1078               	bcf	_isEndPointTrig/(0+8),_isEndPointTrig& (0+7)
  6294                           
  6295                           ;calibrate_mode.c: 40: }else{
  6296  0489  0008               	return
  6297  048A                     l2461:	
  6298                           
  6299                           ;calibrate_mode.c: 42: setSPI1sendDataManual(0x00);
  6300  048A  3000               	movlw	0
  6301  048B  3186  269F         	fcall	_setSPI1sendDataManual
  6302  048D  0008               	return
  6303  048E                     __end_of_isEndpoint:	
  6304                           ;calibrate_mode.c: 43: }
  6305                           ;calibrate_mode.c: 45: return isEndPointTrig;
  6306                           ;	Return value of _isEndpoint is never used
  6307                           
  6308                           
  6309                           	psect	text10
  6310  069F                     __ptext10:	
  6311 ;; *************** function _setSPI1sendDataManual *****************
  6312 ;; Defined at:
  6313 ;;		line 104 in file "D:/programdata/16F18346_Link_IC.X/spiControl.c"
  6314 ;; Parameters:    Size  Location     Type
  6315 ;;  data            1    wreg     unsigned char 
  6316 ;; Auto vars:     Size  Location     Type
  6317 ;;  data            1    0[BANK0 ] unsigned char 
  6318 ;; Return value:  Size  Location     Type
  6319 ;;                  1    wreg      void 
  6320 ;; Registers used:
  6321 ;;		wreg
  6322 ;; Tracked objects:
  6323 ;;		On entry : 0/0
  6324 ;;		On exit  : 0/0
  6325 ;;		Unchanged: 0/0
  6326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6327 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6328 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6330 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6331 ;;Total ram usage:        1 bytes
  6332 ;; Hardware stack levels used:    1
  6333 ;; Hardware stack levels required when called:    3
  6334 ;; This function calls:
  6335 ;;		Nothing
  6336 ;; This function is called by:
  6337 ;;		_isEndpoint
  6338 ;; This function uses a non-reentrant model
  6339 ;;
  6340                           
  6341                           
  6342                           ;psect for function _setSPI1sendDataManual
  6343  069F                     _setSPI1sendDataManual:	
  6344                           
  6345                           ;incstack = 0
  6346                           ; Regs used in _setSPI1sendDataManual: [wreg]
  6347                           ;setSPI1sendDataManual@data stored from wreg
  6348  069F  0020               	movlb	0	; select bank0
  6349  06A0  00A0               	movwf	setSPI1sendDataManual@data
  6350                           
  6351                           ;spiControl.c: 105: SSP1BUF = data;
  6352  06A1  0820               	movf	setSPI1sendDataManual@data,w
  6353  06A2  0024               	movlb	4	; select bank4
  6354  06A3  0091               	movwf	17	;volatile
  6355  06A4  0008               	return
  6356  06A5                     __end_of_setSPI1sendDataManual:	
  6357                           
  6358                           	psect	text11
  6359  04EC                     __ptext11:	
  6360 ;; *************** function _InitCalibrate *****************
  6361 ;; Defined at:
  6362 ;;		line 54 in file "D:/programdata/16F18346_Link_IC.X/calibrate_mode.c"
  6363 ;; Parameters:    Size  Location     Type
  6364 ;;		None
  6365 ;; Auto vars:     Size  Location     Type
  6366 ;;  cargoData      16   18[BANK0 ] struct .
  6367 ;; Return value:  Size  Location     Type
  6368 ;;                  1    wreg      void 
  6369 ;; Registers used:
  6370 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6371 ;; Tracked objects:
  6372 ;;		On entry : 0/0
  6373 ;;		On exit  : 0/0
  6374 ;;		Unchanged: 0/0
  6375 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6376 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6377 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6378 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6379 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6380 ;;Total ram usage:       17 bytes
  6381 ;; Hardware stack levels used:    1
  6382 ;; Hardware stack levels required when called:    4
  6383 ;; This function calls:
  6384 ;;		_getCargoData
  6385 ;; This function is called by:
  6386 ;;		_main
  6387 ;;		_Calibrate_download
  6388 ;; This function uses a non-reentrant model
  6389 ;;
  6390                           
  6391                           
  6392                           ;psect for function _InitCalibrate
  6393  04EC                     _InitCalibrate:	
  6394                           
  6395                           ;calibrate_mode.c: 55: isEndPointTrig = 1;
  6396                           
  6397                           ;incstack = 0
  6398                           ; Regs used in _InitCalibrate: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6399  04EC  1478               	bsf	_isEndPointTrig/(0+8),_isEndPointTrig& (0+7)
  6400                           
  6401                           ;calibrate_mode.c: 56: calibdata.cargoLength = 0xFFFF;
  6402  04ED  30FF               	movlw	255
  6403  04EE  0021               	movlb	1	; select bank1
  6404  04EF  00C4               	movwf	_calibdata^(0+128)
  6405  04F0  30FF               	movlw	255
  6406  04F1  00C5               	movwf	(_calibdata^(0+128)+1)
  6407                           
  6408                           ;calibrate_mode.c: 57: calibdata.index = 0x00;
  6409  04F2  01C7               	clrf	(_calibdata^(0+128)+3)
  6410                           
  6411                           ;calibrate_mode.c: 58: calibdata.command =0x00;
  6412  04F3  01C6               	clrf	(_calibdata^(0+128)+2)
  6413                           
  6414                           ;calibrate_mode.c: 59: calibdata.WorkingCount = 0;
  6415  04F4  3000               	movlw	0
  6416  04F5  00CB               	movwf	((_calibdata+3)^(0+128)+4)
  6417  04F6  3000               	movlw	0
  6418  04F7  00CA               	movwf	((_calibdata+2)^(0+128)+4)
  6419  04F8  3000               	movlw	0
  6420  04F9  00C9               	movwf	((_calibdata+1)^(0+128)+4)
  6421  04FA  3000               	movlw	0
  6422  04FB  00C8               	movwf	(_calibdata^(0+128)+4)
  6423                           
  6424                           ;calibrate_mode.c: 60: CargoData cargoData = getCargoData();
  6425  04FC  3186  2619  3184   	fcall	_getCargoData
  6426  04FF  0020               	movlb	0	; select bank0
  6427  0500  3020               	movlw	low ?_getCargoData
  6428  0501  0086               	movwf	6
  6429  0502  3000               	movlw	high ?_getCargoData
  6430  0503  0087               	movwf	7
  6431  0504  3032               	movlw	low InitCalibrate@cargoData
  6432  0505  0084               	movwf	4
  6433  0506  3000               	movlw	high InitCalibrate@cargoData
  6434  0507  0085               	movwf	5
  6435  0508  3010               	movlw	16
  6436  0509  00B1               	movwf	??_InitCalibrate
  6437  050A                     u1080:	
  6438  050A  0016               	moviw fsr1++
  6439  050B  001A               	movwi fsr0++
  6440  050C  0BB1               	decfsz	??_InitCalibrate,f
  6441  050D  2D0A               	goto	u1080
  6442                           
  6443                           ;calibrate_mode.c: 61: cargoData.linkAngleTo = 0;
  6444  050E  01B7               	clrf	InitCalibrate@cargoData+5
  6445  050F  01B8               	clrf	InitCalibrate@cargoData+6
  6446                           
  6447                           ;calibrate_mode.c: 62: linkInfo.endpoint = 0;
  6448  0510  0021               	movlb	1	; select bank1
  6449  0511  01D2               	clrf	(_linkInfo^(0+128)+5)
  6450                           
  6451                           ;calibrate_mode.c: 63: linkInfo.My_address = 0;
  6452  0512  01CD               	clrf	_linkInfo^(0+128)
  6453                           
  6454                           ;calibrate_mode.c: 64: countabuf = 0;
  6455  0513  0020               	movlb	0	; select bank0
  6456  0514  01DE               	clrf	_countabuf
  6457  0515  01DF               	clrf	_countabuf+1
  6458  0516  0008               	return
  6459  0517                     __end_of_InitCalibrate:	
  6460                           
  6461                           	psect	text12
  6462  0619                     __ptext12:	
  6463 ;; *************** function _getCargoData *****************
  6464 ;; Defined at:
  6465 ;;		line 8 in file "struct.c"
  6466 ;; Parameters:    Size  Location     Type
  6467 ;;		None
  6468 ;; Auto vars:     Size  Location     Type
  6469 ;;		None
  6470 ;; Return value:  Size  Location     Type
  6471 ;;                  16    0[BANK0 ] struct .
  6472 ;; Registers used:
  6473 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  6474 ;; Tracked objects:
  6475 ;;		On entry : 0/0
  6476 ;;		On exit  : 0/0
  6477 ;;		Unchanged: 0/0
  6478 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6479 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6480 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6481 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6482 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6483 ;;Total ram usage:       17 bytes
  6484 ;; Hardware stack levels used:    1
  6485 ;; Hardware stack levels required when called:    3
  6486 ;; This function calls:
  6487 ;;		Nothing
  6488 ;; This function is called by:
  6489 ;;		_InitCalibrate
  6490 ;;		_readCargo
  6491 ;;		_setCargo_Angle
  6492 ;; This function uses a non-reentrant model
  6493 ;;
  6494                           
  6495                           
  6496                           ;psect for function _getCargoData
  6497  0619                     _getCargoData:	
  6498                           
  6499                           ;struct.c: 9: return cargoData;
  6500                           
  6501                           ;incstack = 0
  6502                           ; Regs used in _getCargoData: [wreg-fsr1h+status,2+status,0]
  6503  0619  3048               	movlw	low _cargoData
  6504  061A  0086               	movwf	6
  6505  061B  3000               	movlw	high _cargoData
  6506  061C  0087               	movwf	7
  6507  061D  3020               	movlw	low ?_getCargoData
  6508  061E  0084               	movwf	4
  6509  061F  3000               	movlw	high ?_getCargoData
  6510  0620  0085               	movwf	5
  6511  0621  3010               	movlw	16
  6512  0622  0020               	movlb	0	; select bank0
  6513  0623  00B0               	movwf	??_getCargoData
  6514  0624                     u1070:	
  6515  0624  0016               	moviw fsr1++
  6516  0625  001A               	movwi fsr0++
  6517  0626  0BB0               	decfsz	??_getCargoData,f
  6518  0627  2E24               	goto	u1070
  6519  0628  0008               	return
  6520  0629                     __end_of_getCargoData:	
  6521                           
  6522                           	psect	text13
  6523  0423                     __ptext13:	
  6524 ;; *************** function _read_train *****************
  6525 ;; Defined at:
  6526 ;;		line 203 in file "D:/programdata/16F18346_Link_IC.X/main.c"
  6527 ;; Parameters:    Size  Location     Type
  6528 ;;		None
  6529 ;; Auto vars:     Size  Location     Type
  6530 ;;  bufint          2    2[BANK0 ] unsigned int 
  6531 ;; Return value:  Size  Location     Type
  6532 ;;                  1    wreg      void 
  6533 ;; Registers used:
  6534 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6535 ;; Tracked objects:
  6536 ;;		On entry : 0/0
  6537 ;;		On exit  : 0/0
  6538 ;;		Unchanged: 0/0
  6539 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6540 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6541 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6542 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6543 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6544 ;;Total ram usage:        4 bytes
  6545 ;; Hardware stack levels used:    1
  6546 ;; Hardware stack levels required when called:    3
  6547 ;; This function calls:
  6548 ;;		Nothing
  6549 ;; This function is called by:
  6550 ;;		_main
  6551 ;; This function uses a non-reentrant model
  6552 ;;
  6553                           
  6554                           
  6555                           ;psect for function _read_train
  6556  0423                     _read_train:	
  6557                           
  6558                           ;main.c: 204: unsigned int bufint = spi1_Read_data;
  6559                           
  6560                           ;incstack = 0
  6561                           ; Regs used in _read_train: [wreg-fsr0h+status,2+status,0]
  6562  0423  0879               	movf	_spi1_Read_data,w
  6563  0424  0020               	movlb	0	; select bank0
  6564  0425  00A0               	movwf	??_read_train
  6565  0426  01A1               	clrf	??_read_train+1
  6566  0427  0820               	movf	??_read_train,w
  6567  0428  00A2               	movwf	read_train@bufint
  6568  0429  0821               	movf	??_read_train+1,w
  6569  042A  00A3               	movwf	read_train@bufint+1
  6570                           
  6571                           ;main.c: 205: switch(trainPos){
  6572  042B  2C49               	goto	l2823
  6573  042C                     l2813:	
  6574                           ;main.c: 206: case 1:
  6575                           
  6576                           
  6577                           ;main.c: 207: st_dataLength = (bufint << 8 | 0x00FF);
  6578  042C  0822               	movf	read_train@bufint,w
  6579  042D  00A1               	movwf	??_read_train+1
  6580  042E  01A0               	clrf	??_read_train
  6581  042F  30FF               	movlw	255
  6582  0430  0420               	iorwf	??_read_train,w
  6583  0431  00EC               	movwf	_st_dataLength
  6584  0432  3000               	movlw	0
  6585  0433  0421               	iorwf	??_read_train+1,w
  6586  0434  00ED               	movwf	_st_dataLength+1
  6587                           
  6588                           ;main.c: 208: break;
  6589  0435  0008               	return
  6590  0436                     l2815:	
  6591                           ;main.c: 209: case 2:
  6592                           
  6593                           
  6594                           ;main.c: 210: st_dataLength = st_dataLength & (bufint | 0xFF00);
  6595  0436  3000               	movlw	0
  6596  0437  0422               	iorwf	read_train@bufint,w
  6597  0438  00A0               	movwf	??_read_train
  6598  0439  30FF               	movlw	255
  6599  043A  0423               	iorwf	read_train@bufint+1,w
  6600  043B  00A1               	movwf	??_read_train+1
  6601  043C  086C               	movf	_st_dataLength,w
  6602  043D  0520               	andwf	??_read_train,w
  6603  043E  00EC               	movwf	_st_dataLength
  6604  043F  086D               	movf	_st_dataLength+1,w
  6605  0440  0521               	andwf	??_read_train+1,w
  6606  0441  00ED               	movwf	_st_dataLength+1
  6607                           
  6608                           ;main.c: 211: break;
  6609  0442  0008               	return
  6610  0443                     l2817:	
  6611                           ;main.c: 212: case 3:
  6612                           
  6613                           
  6614                           ;main.c: 213: st_type = spi1_Read_data;
  6615  0443  0879               	movf	_spi1_Read_data,w
  6616  0444  00A0               	movwf	??_read_train
  6617  0445  0820               	movf	??_read_train,w
  6618  0446  00EA               	movwf	_st_type
  6619                           
  6620                           ;main.c: 214: isreadTrain = 1;
  6621  0447  1770               	bsf	_isreadTrain/(0+8),_isreadTrain& (0+7)
  6622                           
  6623                           ;main.c: 218: }
  6624                           
  6625                           ;main.c: 217: break;
  6626                           
  6627                           ;main.c: 216: default :
  6628                           
  6629                           ;main.c: 215: break;
  6630  0448  0008               	return
  6631  0449                     l2823:	
  6632                           
  6633                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6634                           ; Switch size 1, requested type "space"
  6635                           ; Number of cases is 1, Range of values is 0 to 0
  6636                           ; switch strategies available:
  6637                           ; Name         Instructions Cycles
  6638                           ; simple_byte            4     3 (average)
  6639                           ; direct_byte            8     6 (fixed)
  6640                           ; jumptable            260     6 (fixed)
  6641                           ;	Chosen strategy is simple_byte
  6642  0449  085D               	movf	_trainPos+1,w
  6643  044A  3A00               	xorlw	0	; case 0
  6644  044B  1903               	skipnz
  6645  044C  2C4E               	goto	l3025
  6646  044D  2C59               	goto	l164
  6647  044E                     l3025:	
  6648                           
  6649                           ; Switch size 1, requested type "space"
  6650                           ; Number of cases is 3, Range of values is 1 to 3
  6651                           ; switch strategies available:
  6652                           ; Name         Instructions Cycles
  6653                           ; simple_byte           10     6 (average)
  6654                           ; direct_byte           15     9 (fixed)
  6655                           ; jumptable            263     9 (fixed)
  6656                           ;	Chosen strategy is simple_byte
  6657  044E  085C               	movf	_trainPos,w
  6658  044F  3A01               	xorlw	1	; case 1
  6659  0450  1903               	skipnz
  6660  0451  2C2C               	goto	l2813
  6661  0452  3A03               	xorlw	3	; case 2
  6662  0453  1903               	skipnz
  6663  0454  2C36               	goto	l2815
  6664  0455  3A01               	xorlw	1	; case 3
  6665  0456  1903               	skipnz
  6666  0457  2C43               	goto	l2817
  6667  0458  2C59               	goto	l164
  6668  0459                     l164:	
  6669  0459  0008               	return
  6670  045A                     __end_of_read_train:	
  6671                           
  6672                           	psect	text14
  6673  0638                     __ptext14:	
  6674 ;; *************** function _isSPI1read *****************
  6675 ;; Defined at:
  6676 ;;		line 67 in file "D:/programdata/16F18346_Link_IC.X/spiControl.c"
  6677 ;; Parameters:    Size  Location     Type
  6678 ;;		None
  6679 ;; Auto vars:     Size  Location     Type
  6680 ;;		None
  6681 ;; Return value:  Size  Location     Type
  6682 ;;		None               void
  6683 ;; Registers used:
  6684 ;;		wreg, status,2, status,0
  6685 ;; Tracked objects:
  6686 ;;		On entry : 0/0
  6687 ;;		On exit  : 0/0
  6688 ;;		Unchanged: 0/0
  6689 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6690 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6691 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6693 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6694 ;;Total ram usage:        0 bytes
  6695 ;; Hardware stack levels used:    1
  6696 ;; Hardware stack levels required when called:    3
  6697 ;; This function calls:
  6698 ;;		Nothing
  6699 ;; This function is called by:
  6700 ;;		_main
  6701 ;; This function uses a non-reentrant model
  6702 ;;
  6703                           
  6704                           
  6705                           ;psect for function _isSPI1read
  6706  0638                     _isSPI1read:	
  6707                           
  6708                           ;spiControl.c: 68: if(read_count1 == count1){
  6709                           
  6710                           ;incstack = 0
  6711                           ; Regs used in _isSPI1read: [wreg+status,2+status,0]
  6712  0638  0020               	movlb	0	; select bank0
  6713  0639  0865               	movf	_count1+1,w
  6714  063A  0661               	xorwf	_read_count1+1,w
  6715  063B  1D03               	skipz
  6716  063C  2E3F               	goto	u1325
  6717  063D  0864               	movf	_count1,w
  6718  063E  0660               	xorwf	_read_count1,w
  6719  063F                     u1325:	
  6720  063F  1D03               	skipz
  6721  0640  2E43               	goto	l2779
  6722                           
  6723                           ;spiControl.c: 69: return 1;
  6724  0641  1403               	setc
  6725                           
  6726                           ;spiControl.c: 70: }else{
  6727  0642  0008               	return
  6728  0643                     l2779:	
  6729                           
  6730                           ;spiControl.c: 71: return 0;
  6731  0643  1003               	clrc
  6732  0644  0008               	return
  6733  0645                     __end_of_isSPI1read:	
  6734                           
  6735                           	psect	text15
  6736  068D                     __ptext15:	
  6737 ;; *************** function _io_init *****************
  6738 ;; Defined at:
  6739 ;;		line 133 in file "D:/programdata/16F18346_Link_IC.X/main.c"
  6740 ;; Parameters:    Size  Location     Type
  6741 ;;		None
  6742 ;; Auto vars:     Size  Location     Type
  6743 ;;		None
  6744 ;; Return value:  Size  Location     Type
  6745 ;;                  1    wreg      void 
  6746 ;; Registers used:
  6747 ;;		None
  6748 ;; Tracked objects:
  6749 ;;		On entry : 0/0
  6750 ;;		On exit  : 0/0
  6751 ;;		Unchanged: 0/0
  6752 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6753 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6754 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6755 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6756 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6757 ;;Total ram usage:        0 bytes
  6758 ;; Hardware stack levels used:    1
  6759 ;; Hardware stack levels required when called:    3
  6760 ;; This function calls:
  6761 ;;		Nothing
  6762 ;; This function is called by:
  6763 ;;		_main
  6764 ;; This function uses a non-reentrant model
  6765 ;;
  6766                           
  6767                           
  6768                           ;psect for function _io_init
  6769  068D                     _io_init:	
  6770                           
  6771                           ;main.c: 134: PIE0bits.IOCIE = 1;
  6772                           
  6773                           ;incstack = 0
  6774                           ; Regs used in _io_init: []
  6775  068D  0021               	movlb	1	; select bank1
  6776  068E  1610               	bsf	16,4	;volatile
  6777                           
  6778                           ;main.c: 135: IOCAPbits.IOCAP3 = 1;
  6779  068F  0027               	movlb	7	; select bank7
  6780  0690  1591               	bsf	17,3	;volatile
  6781                           
  6782                           ;main.c: 136: IOCANbits.IOCAN3 = 1;
  6783  0691  1592               	bsf	18,3	;volatile
  6784                           
  6785                           ;main.c: 137: PIE0bits.INTE = 1;
  6786  0692  0021               	movlb	1	; select bank1
  6787  0693  1410               	bsf	16,0	;volatile
  6788                           
  6789                           ;main.c: 138: INTCONbits.INTEDG = 1;
  6790  0694  140B               	bsf	11,0	;volatile
  6791  0695  0008               	return
  6792  0696                     __end_of_io_init:	
  6793                           
  6794                           	psect	text16
  6795  03A1                     __ptext16:	
  6796 ;; *************** function _initTrain *****************
  6797 ;; Defined at:
  6798 ;;		line 141 in file "D:/programdata/16F18346_Link_IC.X/main.c"
  6799 ;; Parameters:    Size  Location     Type
  6800 ;;		None
  6801 ;; Auto vars:     Size  Location     Type
  6802 ;;		None
  6803 ;; Return value:  Size  Location     Type
  6804 ;;                  1    wreg      void 
  6805 ;; Registers used:
  6806 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6807 ;; Tracked objects:
  6808 ;;		On entry : 0/0
  6809 ;;		On exit  : 0/0
  6810 ;;		Unchanged: 0/0
  6811 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6812 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6813 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6814 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6815 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6816 ;;Total ram usage:        3 bytes
  6817 ;; Hardware stack levels used:    1
  6818 ;; Hardware stack levels required when called:    5
  6819 ;; This function calls:
  6820 ;;		_isTrainSt
  6821 ;;		_resetTrainData
  6822 ;; This function is called by:
  6823 ;;		_main
  6824 ;; This function uses a non-reentrant model
  6825 ;;
  6826                           
  6827                           
  6828                           ;psect for function _initTrain
  6829  03A1                     _initTrain:	
  6830                           
  6831                           ;main.c: 142: spi1_Read_data = spi1_buffer_data[read_count1];
  6832                           
  6833                           ;incstack = 0
  6834                           ; Regs used in _initTrain: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6835  03A1  30F0               	movlw	240
  6836  03A2  0020               	movlb	0	; select bank0
  6837  03A3  00A9               	movwf	??_initTrain
  6838  03A4  3026               	movlw	38
  6839  03A5  00AA               	movwf	??_initTrain+1
  6840  03A6  0860               	movf	_read_count1,w
  6841  03A7  0729               	addwf	??_initTrain,w
  6842  03A8  0086               	movwf	6
  6843  03A9  0861               	movf	_read_count1+1,w
  6844  03AA  3D2A               	addwfc	??_initTrain+1,w
  6845  03AB  0087               	movwf	7
  6846  03AC  0801               	movf	1,w
  6847  03AD  00AB               	movwf	??_initTrain+2
  6848  03AE  082B               	movf	??_initTrain+2,w
  6849  03AF  00F9               	movwf	_spi1_Read_data
  6850                           
  6851                           ;main.c: 143: spi2_Send_data = spi1_Read_data;
  6852  03B0  0879               	movf	_spi1_Read_data,w
  6853  03B1  00A9               	movwf	??_initTrain
  6854  03B2  0829               	movf	??_initTrain,w
  6855  03B3  00EB               	movwf	_spi2_Send_data
  6856                           
  6857                           ;main.c: 144: read_count1++;
  6858  03B4  3001               	movlw	1
  6859  03B5  07E0               	addwf	_read_count1,f
  6860  03B6  3000               	movlw	0
  6861  03B7  3DE1               	addwfc	_read_count1+1,f
  6862                           
  6863                           ;main.c: 145: if(read_count1 == 256){
  6864  03B8  0361               	decf	_read_count1+1,w
  6865  03B9  0460               	iorwf	_read_count1,w
  6866  03BA  1D03               	btfss	3,2
  6867  03BB  2BBE               	goto	l2731
  6868                           
  6869                           ;main.c: 146: read_count1 = 0;
  6870  03BC  01E0               	clrf	_read_count1
  6871  03BD  01E1               	clrf	_read_count1+1
  6872  03BE                     l2731:	
  6873                           
  6874                           ;main.c: 147: }
  6875                           ;main.c: 148: if(isTrainSt(spi1_Read_data)){
  6876  03BE  0879               	movf	_spi1_Read_data,w
  6877  03BF  3183  235C  3183   	fcall	_isTrainSt
  6878  03C2  1C03               	btfss	3,0
  6879  03C3  2BCF               	goto	l2741
  6880                           
  6881                           ;main.c: 149: trainPos = 0;
  6882  03C4  0020               	movlb	0	; select bank0
  6883  03C5  01DC               	clrf	_trainPos
  6884  03C6  01DD               	clrf	_trainPos+1
  6885                           
  6886                           ;main.c: 150: resetTrainData();
  6887  03C7  3186  2696  3183   	fcall	_resetTrainData
  6888                           
  6889                           ;main.c: 151: isreadTrain = 0;
  6890  03CA  1370               	bcf	_isreadTrain/(0+8),_isreadTrain& (0+7)
  6891                           
  6892                           ;main.c: 152: countabuf = 0;
  6893  03CB  0020               	movlb	0	; select bank0
  6894  03CC  01DE               	clrf	_countabuf
  6895  03CD  01DF               	clrf	_countabuf+1
  6896                           
  6897                           ;main.c: 153: }else{
  6898  03CE  2BD4               	goto	l130
  6899  03CF                     l2741:	
  6900                           
  6901                           ;main.c: 154: trainPos++;
  6902  03CF  3001               	movlw	1
  6903  03D0  0020               	movlb	0	; select bank0
  6904  03D1  07DC               	addwf	_trainPos,f
  6905  03D2  3000               	movlw	0
  6906  03D3  3DDD               	addwfc	_trainPos+1,f
  6907  03D4                     l130:	
  6908                           
  6909                           ;main.c: 155: }
  6910                           ;main.c: 156: if(st_dataLength < trainPos){
  6911  03D4  085D               	movf	_trainPos+1,w
  6912  03D5  026D               	subwf	_st_dataLength+1,w
  6913  03D6  1D03               	skipz
  6914  03D7  2BDA               	goto	u1315
  6915  03D8  085C               	movf	_trainPos,w
  6916  03D9  026C               	subwf	_st_dataLength,w
  6917  03DA                     u1315:	
  6918  03DA  1803               	skipnc
  6919  03DB  0008               	return
  6920                           
  6921                           ;main.c: 157: trainPos = 0;
  6922  03DC  01DC               	clrf	_trainPos
  6923  03DD  01DD               	clrf	_trainPos+1
  6924                           
  6925                           ;main.c: 158: resetTrainData();
  6926  03DE  3186  2696         	fcall	_resetTrainData
  6927                           
  6928                           ;main.c: 159: isreadTrain = 0;
  6929  03E0  1370               	bcf	_isreadTrain/(0+8),_isreadTrain& (0+7)
  6930                           
  6931                           ;main.c: 160: countabuf = 0;
  6932  03E1  0020               	movlb	0	; select bank0
  6933  03E2  01DE               	clrf	_countabuf
  6934  03E3  01DF               	clrf	_countabuf+1
  6935  03E4  0008               	return
  6936  03E5                     __end_of_initTrain:	
  6937                           
  6938                           	psect	text17
  6939  0696                     __ptext17:	
  6940 ;; *************** function _resetTrainData *****************
  6941 ;; Defined at:
  6942 ;;		line 185 in file "D:/programdata/16F18346_Link_IC.X/main.c"
  6943 ;; Parameters:    Size  Location     Type
  6944 ;;		None
  6945 ;; Auto vars:     Size  Location     Type
  6946 ;;		None
  6947 ;; Return value:  Size  Location     Type
  6948 ;;                  1    wreg      void 
  6949 ;; Registers used:
  6950 ;;		wreg, status,2, status,0, pclath, cstack
  6951 ;; Tracked objects:
  6952 ;;		On entry : 0/0
  6953 ;;		On exit  : 0/0
  6954 ;;		Unchanged: 0/0
  6955 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6956 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6957 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6958 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6959 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6960 ;;Total ram usage:        0 bytes
  6961 ;; Hardware stack levels used:    1
  6962 ;; Hardware stack levels required when called:    4
  6963 ;; This function calls:
  6964 ;;		_restartCargo
  6965 ;; This function is called by:
  6966 ;;		_initTrain
  6967 ;; This function uses a non-reentrant model
  6968 ;;
  6969                           
  6970                           
  6971                           ;psect for function _resetTrainData
  6972  0696                     _resetTrainData:	
  6973                           
  6974                           ;main.c: 186: st_dataLength = 0xFFFF;
  6975                           
  6976                           ;incstack = 0
  6977                           ; Regs used in _resetTrainData: [wreg+status,2+status,0+pclath+cstack]
  6978  0696  30FF               	movlw	255
  6979  0697  0020               	movlb	0	; select bank0
  6980  0698  00EC               	movwf	_st_dataLength
  6981  0699  30FF               	movlw	255
  6982  069A  00ED               	movwf	_st_dataLength+1
  6983                           
  6984                           ;main.c: 187: st_type = 0;
  6985  069B  01EA               	clrf	_st_type
  6986                           
  6987                           ;main.c: 188: restartCargo();
  6988  069C  3186  2645         	fcall	_restartCargo
  6989  069E  0008               	return
  6990  069F                     __end_of_resetTrainData:	
  6991                           
  6992                           	psect	text18
  6993  0645                     __ptext18:	
  6994 ;; *************** function _restartCargo *****************
  6995 ;; Defined at:
  6996 ;;		line 33 in file "struct.c"
  6997 ;; Parameters:    Size  Location     Type
  6998 ;;		None
  6999 ;; Auto vars:     Size  Location     Type
  7000 ;;		None
  7001 ;; Return value:  Size  Location     Type
  7002 ;;                  1    wreg      void 
  7003 ;; Registers used:
  7004 ;;		wreg, status,2
  7005 ;; Tracked objects:
  7006 ;;		On entry : 0/0
  7007 ;;		On exit  : 0/0
  7008 ;;		Unchanged: 0/0
  7009 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7010 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7011 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7012 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7013 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7014 ;;Total ram usage:        0 bytes
  7015 ;; Hardware stack levels used:    1
  7016 ;; Hardware stack levels required when called:    3
  7017 ;; This function calls:
  7018 ;;		Nothing
  7019 ;; This function is called by:
  7020 ;;		_resetTrainData
  7021 ;;		_readCargo
  7022 ;; This function uses a non-reentrant model
  7023 ;;
  7024                           
  7025                           
  7026                           ;psect for function _restartCargo
  7027  0645                     _restartCargo:	
  7028                           
  7029                           ;struct.c: 34: cargoData.WorkingCount = 0;
  7030                           
  7031                           ;incstack = 0
  7032                           ; Regs used in _restartCargo: [wreg+status,2]
  7033  0645  3000               	movlw	0
  7034  0646  0020               	movlb	0	; select bank0
  7035  0647  00D7               	movwf	_cargoData+15
  7036  0648  3000               	movlw	0
  7037  0649  00D6               	movwf	_cargoData+14
  7038  064A  3000               	movlw	0
  7039  064B  00D5               	movwf	_cargoData+13
  7040  064C  3000               	movlw	0
  7041  064D  00D4               	movwf	_cargoData+12
  7042                           
  7043                           ;struct.c: 35: cargoData.address = 0;
  7044  064E  01CC               	clrf	_cargoData+4
  7045                           
  7046                           ;struct.c: 36: cargoData.command = 0;
  7047  064F  01CA               	clrf	_cargoData+2
  7048                           
  7049                           ;struct.c: 37: cargoData.index = 0;
  7050  0650  01CB               	clrf	_cargoData+3
  7051  0651  0008               	return
  7052  0652                     __end_of_restartCargo:	
  7053                           
  7054                           	psect	text19
  7055  035C                     __ptext19:	
  7056 ;; *************** function _isTrainSt *****************
  7057 ;; Defined at:
  7058 ;;		line 191 in file "D:/programdata/16F18346_Link_IC.X/main.c"
  7059 ;; Parameters:    Size  Location     Type
  7060 ;;  buf             1    wreg     unsigned char 
  7061 ;; Auto vars:     Size  Location     Type
  7062 ;;  buf             1    8[BANK0 ] unsigned char 
  7063 ;; Return value:  Size  Location     Type
  7064 ;;		None               void
  7065 ;; Registers used:
  7066 ;;		wreg, status,2, status,0
  7067 ;; Tracked objects:
  7068 ;;		On entry : 0/0
  7069 ;;		On exit  : 0/0
  7070 ;;		Unchanged: 0/0
  7071 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7072 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7073 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7074 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7075 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7076 ;;Total ram usage:        9 bytes
  7077 ;; Hardware stack levels used:    1
  7078 ;; Hardware stack levels required when called:    3
  7079 ;; This function calls:
  7080 ;;		Nothing
  7081 ;; This function is called by:
  7082 ;;		_initTrain
  7083 ;; This function uses a non-reentrant model
  7084 ;;
  7085                           
  7086                           
  7087                           ;psect for function _isTrainSt
  7088  035C                     _isTrainSt:	
  7089                           
  7090                           ;incstack = 0
  7091                           ; Regs used in _isTrainSt: [wreg+status,2+status,0]
  7092                           ;isTrainSt@buf stored from wreg
  7093  035C  0020               	movlb	0	; select bank0
  7094  035D  00A8               	movwf	isTrainSt@buf
  7095                           
  7096                           ;main.c: 192: startTrainBytes = startTrainBytes << 8 | buf;
  7097  035E  0828               	movf	isTrainSt@buf,w
  7098  035F  00A0               	movwf	??_isTrainSt
  7099  0360  01A1               	clrf	??_isTrainSt+1
  7100  0361  01A2               	clrf	??_isTrainSt+2
  7101  0362  01A3               	clrf	??_isTrainSt+3
  7102  0363  0021               	movlb	1	; select bank1
  7103  0364  0857               	movf	_startTrainBytes^(0+128),w
  7104  0365  0020               	movlb	0	; select bank0
  7105  0366  00A4               	movwf	??_isTrainSt+4
  7106  0367  0021               	movlb	1	; select bank1
  7107  0368  0858               	movf	(_startTrainBytes+1)^(0+128),w
  7108  0369  0020               	movlb	0	; select bank0
  7109  036A  00A5               	movwf	??_isTrainSt+5
  7110  036B  0021               	movlb	1	; select bank1
  7111  036C  0859               	movf	(_startTrainBytes+2)^(0+128),w
  7112  036D  0020               	movlb	0	; select bank0
  7113  036E  00A6               	movwf	??_isTrainSt+6
  7114  036F  0021               	movlb	1	; select bank1
  7115  0370  085A               	movf	(_startTrainBytes+3)^(0+128),w
  7116  0371  0020               	movlb	0	; select bank0
  7117  0372  00A7               	movwf	??_isTrainSt+7
  7118  0373  3008               	movlw	8
  7119  0374                     u1145:	
  7120  0374  35A4               	lslf	??_isTrainSt+4,f
  7121  0375  0DA5               	rlf	??_isTrainSt+5,f
  7122  0376  0DA6               	rlf	??_isTrainSt+6,f
  7123  0377  0DA7               	rlf	??_isTrainSt+7,f
  7124  0378  0B89               	decfsz	9,f
  7125  0379  2B74               	goto	u1145
  7126  037A  0824               	movf	??_isTrainSt+4,w
  7127  037B  04A0               	iorwf	??_isTrainSt,f
  7128  037C  0825               	movf	??_isTrainSt+5,w
  7129  037D  04A1               	iorwf	??_isTrainSt+1,f
  7130  037E  0826               	movf	??_isTrainSt+6,w
  7131  037F  04A2               	iorwf	??_isTrainSt+2,f
  7132  0380  0827               	movf	??_isTrainSt+7,w
  7133  0381  04A3               	iorwf	??_isTrainSt+3,f
  7134  0382  0823               	movf	??_isTrainSt+3,w
  7135  0383  0021               	movlb	1	; select bank1
  7136  0384  00DA               	movwf	(_startTrainBytes+3)^(0+128)
  7137  0385  0020               	movlb	0	; select bank0
  7138  0386  0822               	movf	??_isTrainSt+2,w
  7139  0387  0021               	movlb	1	; select bank1
  7140  0388  00D9               	movwf	(_startTrainBytes+2)^(0+128)
  7141  0389  0020               	movlb	0	; select bank0
  7142  038A  0821               	movf	??_isTrainSt+1,w
  7143  038B  0021               	movlb	1	; select bank1
  7144  038C  00D8               	movwf	(_startTrainBytes+1)^(0+128)
  7145  038D  0020               	movlb	0	; select bank0
  7146  038E  0820               	movf	??_isTrainSt,w
  7147  038F  0021               	movlb	1	; select bank1
  7148  0390  00D7               	movwf	_startTrainBytes^(0+128)
  7149                           
  7150                           ;main.c: 193: if(startTrainBytes == 0xFFFFFFFF){
  7151  0391  0A57               	incf	_startTrainBytes^(0+128),w
  7152  0392  1D03               	skipz
  7153  0393  2B9F               	goto	l2487
  7154  0394  0A58               	incf	(_startTrainBytes+1)^(0+128),w
  7155  0395  1D03               	skipz
  7156  0396  2B9F               	goto	l2487
  7157  0397  0A59               	incf	(_startTrainBytes+2)^(0+128),w
  7158  0398  1D03               	skipz
  7159  0399  2B9F               	goto	l2487
  7160  039A  0A5A               	incf	(_startTrainBytes+3)^(0+128),w
  7161  039B  1D03               	btfss	3,2
  7162  039C  2B9F               	goto	l2487
  7163                           
  7164                           ;main.c: 194: return 1;
  7165  039D  1403               	setc
  7166                           
  7167                           ;main.c: 195: }else{
  7168  039E  0008               	return
  7169  039F                     l2487:	
  7170                           
  7171                           ;main.c: 196: return 0;
  7172  039F  1003               	clrc
  7173  03A0  0008               	return
  7174  03A1                     __end_of_isTrainSt:	
  7175                           
  7176                           	psect	text20
  7177  0282                     __ptext20:	
  7178 ;; *************** function _initComu_types *****************
  7179 ;; Defined at:
  7180 ;;		line 18 in file "D:/programdata/16F18346_Link_IC.X/comu_type.c"
  7181 ;; Parameters:    Size  Location     Type
  7182 ;;		None
  7183 ;; Auto vars:     Size  Location     Type
  7184 ;;		None
  7185 ;; Return value:  Size  Location     Type
  7186 ;;                  1    wreg      void 
  7187 ;; Registers used:
  7188 ;;		wreg
  7189 ;; Tracked objects:
  7190 ;;		On entry : 0/0
  7191 ;;		On exit  : 0/0
  7192 ;;		Unchanged: 0/0
  7193 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7194 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7195 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7196 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7197 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7198 ;;Total ram usage:        1 bytes
  7199 ;; Hardware stack levels used:    1
  7200 ;; Hardware stack levels required when called:    3
  7201 ;; This function calls:
  7202 ;;		Nothing
  7203 ;; This function is called by:
  7204 ;;		_main
  7205 ;; This function uses a non-reentrant model
  7206 ;;
  7207                           
  7208                           
  7209                           ;psect for function _initComu_types
  7210  0282                     _initComu_types:	
  7211                           
  7212                           ;comu_type.c: 19: comu_types[0] = 0b00111111;
  7213                           
  7214                           ;incstack = 0
  7215                           ; Regs used in _initComu_types: [wreg]
  7216  0282  303F               	movlw	63
  7217  0283  0020               	movlb	0	; select bank0
  7218  0284  00A0               	movwf	??_initComu_types
  7219  0285  0820               	movf	??_initComu_types,w
  7220  0286  0021               	movlb	1	; select bank1
  7221  0287  00A0               	movwf	_comu_types^(0+128)
  7222                           
  7223                           ;comu_type.c: 20: comu_types[1] = 0b01111111;
  7224  0288  307F               	movlw	127
  7225  0289  0020               	movlb	0	; select bank0
  7226  028A  00A0               	movwf	??_initComu_types
  7227  028B  0820               	movf	??_initComu_types,w
  7228  028C  0021               	movlb	1	; select bank1
  7229  028D  00A1               	movwf	(_comu_types^(0+128)+1)
  7230                           
  7231                           ;comu_type.c: 21: comu_types[2] = 0b10011111;
  7232  028E  309F               	movlw	159
  7233  028F  0020               	movlb	0	; select bank0
  7234  0290  00A0               	movwf	??_initComu_types
  7235  0291  0820               	movf	??_initComu_types,w
  7236  0292  0021               	movlb	1	; select bank1
  7237  0293  00A2               	movwf	(_comu_types^(0+128)+2)
  7238                           
  7239                           ;comu_type.c: 22: comu_types[3] = 0b10101111;
  7240  0294  30AF               	movlw	175
  7241  0295  0020               	movlb	0	; select bank0
  7242  0296  00A0               	movwf	??_initComu_types
  7243  0297  0820               	movf	??_initComu_types,w
  7244  0298  0021               	movlb	1	; select bank1
  7245  0299  00A3               	movwf	(_comu_types^(0+128)+3)
  7246                           
  7247                           ;comu_type.c: 23: comu_types[4] = 0b10111111;
  7248  029A  30BF               	movlw	191
  7249  029B  0020               	movlb	0	; select bank0
  7250  029C  00A0               	movwf	??_initComu_types
  7251  029D  0820               	movf	??_initComu_types,w
  7252  029E  0021               	movlb	1	; select bank1
  7253  029F  00A4               	movwf	(_comu_types^(0+128)+4)
  7254                           
  7255                           ;comu_type.c: 24: comu_types[5] = 0b11001111;
  7256  02A0  30CF               	movlw	207
  7257  02A1  0020               	movlb	0	; select bank0
  7258  02A2  00A0               	movwf	??_initComu_types
  7259  02A3  0820               	movf	??_initComu_types,w
  7260  02A4  0021               	movlb	1	; select bank1
  7261  02A5  00A5               	movwf	(_comu_types^(0+128)+5)
  7262                           
  7263                           ;comu_type.c: 25: comu_types[6] = 0b11010111;
  7264  02A6  30D7               	movlw	215
  7265  02A7  0020               	movlb	0	; select bank0
  7266  02A8  00A0               	movwf	??_initComu_types
  7267  02A9  0820               	movf	??_initComu_types,w
  7268  02AA  0021               	movlb	1	; select bank1
  7269  02AB  00A6               	movwf	(_comu_types^(0+128)+6)
  7270                           
  7271                           ;comu_type.c: 26: comu_types[7] = 0b11011111;
  7272  02AC  30DF               	movlw	223
  7273  02AD  0020               	movlb	0	; select bank0
  7274  02AE  00A0               	movwf	??_initComu_types
  7275  02AF  0820               	movf	??_initComu_types,w
  7276  02B0  0021               	movlb	1	; select bank1
  7277  02B1  00A7               	movwf	(_comu_types^(0+128)+7)
  7278                           
  7279                           ;comu_type.c: 27: comu_types[8] = 0b11100111;
  7280  02B2  30E7               	movlw	231
  7281  02B3  0020               	movlb	0	; select bank0
  7282  02B4  00A0               	movwf	??_initComu_types
  7283  02B5  0820               	movf	??_initComu_types,w
  7284  02B6  0021               	movlb	1	; select bank1
  7285  02B7  00A8               	movwf	(_comu_types^(0+128)+8)
  7286                           
  7287                           ;comu_type.c: 28: comu_types[9] = 0b11101011;
  7288  02B8  30EB               	movlw	235
  7289  02B9  0020               	movlb	0	; select bank0
  7290  02BA  00A0               	movwf	??_initComu_types
  7291  02BB  0820               	movf	??_initComu_types,w
  7292  02BC  0021               	movlb	1	; select bank1
  7293  02BD  00A9               	movwf	(_comu_types^(0+128)+9)
  7294                           
  7295                           ;comu_type.c: 29: comu_types[10] = 0b11101111;
  7296  02BE  30EF               	movlw	239
  7297  02BF  0020               	movlb	0	; select bank0
  7298  02C0  00A0               	movwf	??_initComu_types
  7299  02C1  0820               	movf	??_initComu_types,w
  7300  02C2  0021               	movlb	1	; select bank1
  7301  02C3  00AA               	movwf	(_comu_types^(0+128)+10)
  7302                           
  7303                           ;comu_type.c: 30: comu_types[11] = 0b11110001;
  7304  02C4  30F1               	movlw	241
  7305  02C5  0020               	movlb	0	; select bank0
  7306  02C6  00A0               	movwf	??_initComu_types
  7307  02C7  0820               	movf	??_initComu_types,w
  7308  02C8  0021               	movlb	1	; select bank1
  7309  02C9  00AB               	movwf	(_comu_types^(0+128)+11)
  7310                           
  7311                           ;comu_type.c: 31: comu_types[12] = 0b11110011;
  7312  02CA  30F3               	movlw	243
  7313  02CB  0020               	movlb	0	; select bank0
  7314  02CC  00A0               	movwf	??_initComu_types
  7315  02CD  0820               	movf	??_initComu_types,w
  7316  02CE  0021               	movlb	1	; select bank1
  7317  02CF  00AC               	movwf	(_comu_types^(0+128)+12)
  7318                           
  7319                           ;comu_type.c: 32: comu_types[13] = 0b11110101;
  7320  02D0  30F5               	movlw	245
  7321  02D1  0020               	movlb	0	; select bank0
  7322  02D2  00A0               	movwf	??_initComu_types
  7323  02D3  0820               	movf	??_initComu_types,w
  7324  02D4  0021               	movlb	1	; select bank1
  7325  02D5  00AD               	movwf	(_comu_types^(0+128)+13)
  7326                           
  7327                           ;comu_type.c: 33: comu_types[14] = 0b11110111;
  7328  02D6  30F7               	movlw	247
  7329  02D7  0020               	movlb	0	; select bank0
  7330  02D8  00A0               	movwf	??_initComu_types
  7331  02D9  0820               	movf	??_initComu_types,w
  7332  02DA  0021               	movlb	1	; select bank1
  7333  02DB  00AE               	movwf	(_comu_types^(0+128)+14)
  7334                           
  7335                           ;comu_type.c: 34: comu_types[15] = 0b11111000;
  7336  02DC  30F8               	movlw	248
  7337  02DD  0020               	movlb	0	; select bank0
  7338  02DE  00A0               	movwf	??_initComu_types
  7339  02DF  0820               	movf	??_initComu_types,w
  7340  02E0  0021               	movlb	1	; select bank1
  7341  02E1  00AF               	movwf	(_comu_types^(0+128)+15)
  7342                           
  7343                           ;comu_type.c: 35: comu_types[16] = 0b11111001;
  7344  02E2  30F9               	movlw	249
  7345  02E3  0020               	movlb	0	; select bank0
  7346  02E4  00A0               	movwf	??_initComu_types
  7347  02E5  0820               	movf	??_initComu_types,w
  7348  02E6  0021               	movlb	1	; select bank1
  7349  02E7  00B0               	movwf	(_comu_types^(0+128)+16)
  7350                           
  7351                           ;comu_type.c: 36: comu_types[17] = 0b11111010;
  7352  02E8  30FA               	movlw	250
  7353  02E9  0020               	movlb	0	; select bank0
  7354  02EA  00A0               	movwf	??_initComu_types
  7355  02EB  0820               	movf	??_initComu_types,w
  7356  02EC  0021               	movlb	1	; select bank1
  7357  02ED  00B1               	movwf	(_comu_types^(0+128)+17)
  7358  02EE  0008               	return
  7359  02EF                     __end_of_initComu_types:	
  7360                           
  7361                           	psect	text21
  7362  02EF                     __ptext21:	
  7363 ;; *************** function _initComand *****************
  7364 ;; Defined at:
  7365 ;;		line 12 in file "D:/programdata/16F18346_Link_IC.X/command.c"
  7366 ;; Parameters:    Size  Location     Type
  7367 ;;		None
  7368 ;; Auto vars:     Size  Location     Type
  7369 ;;		None
  7370 ;; Return value:  Size  Location     Type
  7371 ;;                  1    wreg      void 
  7372 ;; Registers used:
  7373 ;;		wreg
  7374 ;; Tracked objects:
  7375 ;;		On entry : 0/0
  7376 ;;		On exit  : 0/0
  7377 ;;		Unchanged: 0/0
  7378 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7379 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7380 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7381 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7382 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7383 ;;Total ram usage:        1 bytes
  7384 ;; Hardware stack levels used:    1
  7385 ;; Hardware stack levels required when called:    3
  7386 ;; This function calls:
  7387 ;;		Nothing
  7388 ;; This function is called by:
  7389 ;;		_main
  7390 ;; This function uses a non-reentrant model
  7391 ;;
  7392                           
  7393                           
  7394                           ;psect for function _initComand
  7395  02EF                     _initComand:	
  7396                           
  7397                           ;command.c: 13: command[0] = 0b00111111;
  7398                           
  7399                           ;incstack = 0
  7400                           ; Regs used in _initComand: [wreg]
  7401  02EF  303F               	movlw	63
  7402  02F0  0020               	movlb	0	; select bank0
  7403  02F1  00A0               	movwf	??_initComand
  7404  02F2  0820               	movf	??_initComand,w
  7405  02F3  0021               	movlb	1	; select bank1
  7406  02F4  00B2               	movwf	_command^(0+128)
  7407                           
  7408                           ;command.c: 14: command[1] = 0b01111111;
  7409  02F5  307F               	movlw	127
  7410  02F6  0020               	movlb	0	; select bank0
  7411  02F7  00A0               	movwf	??_initComand
  7412  02F8  0820               	movf	??_initComand,w
  7413  02F9  0021               	movlb	1	; select bank1
  7414  02FA  00B3               	movwf	(_command^(0+128)+1)
  7415                           
  7416                           ;command.c: 15: command[2] = 0b10011111;
  7417  02FB  309F               	movlw	159
  7418  02FC  0020               	movlb	0	; select bank0
  7419  02FD  00A0               	movwf	??_initComand
  7420  02FE  0820               	movf	??_initComand,w
  7421  02FF  0021               	movlb	1	; select bank1
  7422  0300  00B4               	movwf	(_command^(0+128)+2)
  7423                           
  7424                           ;command.c: 16: command[3] = 0b10101111;
  7425  0301  30AF               	movlw	175
  7426  0302  0020               	movlb	0	; select bank0
  7427  0303  00A0               	movwf	??_initComand
  7428  0304  0820               	movf	??_initComand,w
  7429  0305  0021               	movlb	1	; select bank1
  7430  0306  00B5               	movwf	(_command^(0+128)+3)
  7431                           
  7432                           ;command.c: 17: command[4] = 0b10111111;
  7433  0307  30BF               	movlw	191
  7434  0308  0020               	movlb	0	; select bank0
  7435  0309  00A0               	movwf	??_initComand
  7436  030A  0820               	movf	??_initComand,w
  7437  030B  0021               	movlb	1	; select bank1
  7438  030C  00B6               	movwf	(_command^(0+128)+4)
  7439                           
  7440                           ;command.c: 18: command[5] = 0b11001111;
  7441  030D  30CF               	movlw	207
  7442  030E  0020               	movlb	0	; select bank0
  7443  030F  00A0               	movwf	??_initComand
  7444  0310  0820               	movf	??_initComand,w
  7445  0311  0021               	movlb	1	; select bank1
  7446  0312  00B7               	movwf	(_command^(0+128)+5)
  7447                           
  7448                           ;command.c: 19: command[6] = 0b11010111;
  7449  0313  30D7               	movlw	215
  7450  0314  0020               	movlb	0	; select bank0
  7451  0315  00A0               	movwf	??_initComand
  7452  0316  0820               	movf	??_initComand,w
  7453  0317  0021               	movlb	1	; select bank1
  7454  0318  00B8               	movwf	(_command^(0+128)+6)
  7455                           
  7456                           ;command.c: 20: command[7] = 0b11011111;
  7457  0319  30DF               	movlw	223
  7458  031A  0020               	movlb	0	; select bank0
  7459  031B  00A0               	movwf	??_initComand
  7460  031C  0820               	movf	??_initComand,w
  7461  031D  0021               	movlb	1	; select bank1
  7462  031E  00B9               	movwf	(_command^(0+128)+7)
  7463                           
  7464                           ;command.c: 21: command[8] = 0b11100111;
  7465  031F  30E7               	movlw	231
  7466  0320  0020               	movlb	0	; select bank0
  7467  0321  00A0               	movwf	??_initComand
  7468  0322  0820               	movf	??_initComand,w
  7469  0323  0021               	movlb	1	; select bank1
  7470  0324  00BA               	movwf	(_command^(0+128)+8)
  7471                           
  7472                           ;command.c: 22: command[9] = 0b11101011;
  7473  0325  30EB               	movlw	235
  7474  0326  0020               	movlb	0	; select bank0
  7475  0327  00A0               	movwf	??_initComand
  7476  0328  0820               	movf	??_initComand,w
  7477  0329  0021               	movlb	1	; select bank1
  7478  032A  00BB               	movwf	(_command^(0+128)+9)
  7479                           
  7480                           ;command.c: 23: command[10] = 0b11101111;
  7481  032B  30EF               	movlw	239
  7482  032C  0020               	movlb	0	; select bank0
  7483  032D  00A0               	movwf	??_initComand
  7484  032E  0820               	movf	??_initComand,w
  7485  032F  0021               	movlb	1	; select bank1
  7486  0330  00BC               	movwf	(_command^(0+128)+10)
  7487                           
  7488                           ;command.c: 24: command[11] = 0b11110001;
  7489  0331  30F1               	movlw	241
  7490  0332  0020               	movlb	0	; select bank0
  7491  0333  00A0               	movwf	??_initComand
  7492  0334  0820               	movf	??_initComand,w
  7493  0335  0021               	movlb	1	; select bank1
  7494  0336  00BD               	movwf	(_command^(0+128)+11)
  7495                           
  7496                           ;command.c: 25: command[12] = 0b11110011;
  7497  0337  30F3               	movlw	243
  7498  0338  0020               	movlb	0	; select bank0
  7499  0339  00A0               	movwf	??_initComand
  7500  033A  0820               	movf	??_initComand,w
  7501  033B  0021               	movlb	1	; select bank1
  7502  033C  00BE               	movwf	(_command^(0+128)+12)
  7503                           
  7504                           ;command.c: 26: command[13] = 0b11110101;
  7505  033D  30F5               	movlw	245
  7506  033E  0020               	movlb	0	; select bank0
  7507  033F  00A0               	movwf	??_initComand
  7508  0340  0820               	movf	??_initComand,w
  7509  0341  0021               	movlb	1	; select bank1
  7510  0342  00BF               	movwf	(_command^(0+128)+13)
  7511                           
  7512                           ;command.c: 27: command[14] = 0b11110111;
  7513  0343  30F7               	movlw	247
  7514  0344  0020               	movlb	0	; select bank0
  7515  0345  00A0               	movwf	??_initComand
  7516  0346  0820               	movf	??_initComand,w
  7517  0347  0021               	movlb	1	; select bank1
  7518  0348  00C0               	movwf	(_command^(0+128)+14)
  7519                           
  7520                           ;command.c: 28: command[15] = 0b11111000;
  7521  0349  30F8               	movlw	248
  7522  034A  0020               	movlb	0	; select bank0
  7523  034B  00A0               	movwf	??_initComand
  7524  034C  0820               	movf	??_initComand,w
  7525  034D  0021               	movlb	1	; select bank1
  7526  034E  00C1               	movwf	(_command^(0+128)+15)
  7527                           
  7528                           ;command.c: 29: command[16] = 0b11111001;
  7529  034F  30F9               	movlw	249
  7530  0350  0020               	movlb	0	; select bank0
  7531  0351  00A0               	movwf	??_initComand
  7532  0352  0820               	movf	??_initComand,w
  7533  0353  0021               	movlb	1	; select bank1
  7534  0354  00C2               	movwf	(_command^(0+128)+16)
  7535                           
  7536                           ;command.c: 30: command[17] = 0b11111010;
  7537  0355  30FA               	movlw	250
  7538  0356  0020               	movlb	0	; select bank0
  7539  0357  00A0               	movwf	??_initComand
  7540  0358  0820               	movf	??_initComand,w
  7541  0359  0021               	movlb	1	; select bank1
  7542  035A  00C3               	movwf	(_command^(0+128)+17)
  7543  035B  0008               	return
  7544  035C                     __end_of_initComand:	
  7545                           
  7546                           	psect	text22
  7547  05EE                     __ptext22:	
  7548 ;; *************** function _initCargo *****************
  7549 ;; Defined at:
  7550 ;;		line 14 in file "struct.c"
  7551 ;; Parameters:    Size  Location     Type
  7552 ;;		None
  7553 ;; Auto vars:     Size  Location     Type
  7554 ;;		None
  7555 ;; Return value:  Size  Location     Type
  7556 ;;                  1    wreg      void 
  7557 ;; Registers used:
  7558 ;;		wreg, status,2
  7559 ;; Tracked objects:
  7560 ;;		On entry : 0/0
  7561 ;;		On exit  : 0/0
  7562 ;;		Unchanged: 0/0
  7563 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7564 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7565 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7566 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7567 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7568 ;;Total ram usage:        0 bytes
  7569 ;; Hardware stack levels used:    1
  7570 ;; Hardware stack levels required when called:    3
  7571 ;; This function calls:
  7572 ;;		Nothing
  7573 ;; This function is called by:
  7574 ;;		_main
  7575 ;; This function uses a non-reentrant model
  7576 ;;
  7577                           
  7578                           
  7579                           ;psect for function _initCargo
  7580  05EE                     _initCargo:	
  7581                           
  7582                           ;struct.c: 15: isMycargo = 1;
  7583                           
  7584                           ;incstack = 0
  7585                           ; Regs used in _initCargo: [wreg+status,2]
  7586  05EE  1470               	bsf	_isMycargo/(0+8),_isMycargo& (0+7)
  7587                           
  7588                           ;struct.c: 16: cargoData.WorkingCount = 0;
  7589  05EF  3000               	movlw	0
  7590  05F0  0020               	movlb	0	; select bank0
  7591  05F1  00D7               	movwf	_cargoData+15
  7592  05F2  3000               	movlw	0
  7593  05F3  00D6               	movwf	_cargoData+14
  7594  05F4  3000               	movlw	0
  7595  05F5  00D5               	movwf	_cargoData+13
  7596  05F6  3000               	movlw	0
  7597  05F7  00D4               	movwf	_cargoData+12
  7598                           
  7599                           ;struct.c: 17: cargoData.address = 0;
  7600  05F8  01CC               	clrf	_cargoData+4
  7601                           
  7602                           ;struct.c: 18: cargoData.cargoLength = 0xFFFF;
  7603  05F9  30FF               	movlw	255
  7604  05FA  00C8               	movwf	_cargoData
  7605  05FB  30FF               	movlw	255
  7606  05FC  00C9               	movwf	_cargoData+1
  7607                           
  7608                           ;struct.c: 19: cargoData.clutchMode = 0;
  7609  05FD  01D3               	clrf	_cargoData+11
  7610                           
  7611                           ;struct.c: 20: cargoData.command = 0;
  7612  05FE  01CA               	clrf	_cargoData+2
  7613                           
  7614                           ;struct.c: 21: cargoData.index = 0;
  7615  05FF  01CB               	clrf	_cargoData+3
  7616                           
  7617                           ;struct.c: 22: cargoData.linkAngleTo = 0;
  7618  0600  01CD               	clrf	_cargoData+5
  7619  0601  01CE               	clrf	_cargoData+6
  7620                           
  7621                           ;struct.c: 23: cargoData.passedTime = 0;
  7622  0602  01D1               	clrf	_cargoData+9
  7623  0603  01D2               	clrf	_cargoData+10
  7624  0604  0008               	return
  7625  0605                     __end_of_initCargo:	
  7626                           
  7627                           	psect	text23
  7628  0541                     __ptext23:	
  7629 ;; *************** function _init *****************
  7630 ;; Defined at:
  7631 ;;		line 106 in file "D:/programdata/16F18346_Link_IC.X/main.c"
  7632 ;; Parameters:    Size  Location     Type
  7633 ;;		None
  7634 ;; Auto vars:     Size  Location     Type
  7635 ;;		None
  7636 ;; Return value:  Size  Location     Type
  7637 ;;                  1    wreg      void 
  7638 ;; Registers used:
  7639 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7640 ;; Tracked objects:
  7641 ;;		On entry : 0/0
  7642 ;;		On exit  : 0/0
  7643 ;;		Unchanged: 0/0
  7644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7645 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7646 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7648 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7649 ;;Total ram usage:        0 bytes
  7650 ;; Hardware stack levels used:    1
  7651 ;; Hardware stack levels required when called:    4
  7652 ;; This function calls:
  7653 ;;		_clear
  7654 ;;		_initbuffer
  7655 ;; This function is called by:
  7656 ;;		_main
  7657 ;; This function uses a non-reentrant model
  7658 ;;
  7659                           
  7660                           
  7661                           ;psect for function _init
  7662  0541                     _init:	
  7663                           
  7664                           ;main.c: 107: count1 = 0;
  7665                           
  7666                           ;incstack = 0
  7667                           ; Regs used in _init: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7668  0541  0020               	movlb	0	; select bank0
  7669  0542  01E4               	clrf	_count1
  7670  0543  01E5               	clrf	_count1+1
  7671                           
  7672                           ;main.c: 108: count2 = 0;
  7673  0544  01E2               	clrf	_count2
  7674  0545  01E3               	clrf	_count2+1
  7675                           
  7676                           ;main.c: 109: initbuffer();
  7677  0546  3185  2517  3185   	fcall	_initbuffer
  7678                           
  7679                           ;main.c: 111: OSCFRQbits.HFFRQ = 0b0111;
  7680  0549  0032               	movlb	18	; select bank18
  7681  054A  081F               	movf	31,w	;volatile
  7682  054B  39F0               	andlw	-16
  7683  054C  3807               	iorlw	7
  7684  054D  009F               	movwf	31	;volatile
  7685                           
  7686                           ;main.c: 112: OSCTUNEbits.HFTUN = 0b000000;
  7687  054E  30C0               	movlw	-64
  7688  054F  059E               	andwf	30,f	;volatile
  7689                           
  7690                           ;main.c: 113: clear();
  7691  0550  3186  2652         	fcall	_clear
  7692                           
  7693                           ;main.c: 114: WPUC = 0b11111111;
  7694  0552  30FF               	movlw	255
  7695  0553  0024               	movlb	4	; select bank4
  7696  0554  008E               	movwf	14	;volatile
  7697                           
  7698                           ;main.c: 115: WPUB = 0b11111111;
  7699  0555  30FF               	movlw	255
  7700  0556  008D               	movwf	13	;volatile
  7701                           
  7702                           ;main.c: 116: WPUA = 0b11111111;
  7703  0557  30FF               	movlw	255
  7704  0558  008C               	movwf	12	;volatile
  7705                           
  7706                           ;main.c: 117: TRISBbits.TRISB6 = 1;
  7707  0559  0021               	movlb	1	; select bank1
  7708  055A  170D               	bsf	13,6	;volatile
  7709                           
  7710                           ;main.c: 118: TRISBbits.TRISB4 = 1;
  7711  055B  160D               	bsf	13,4	;volatile
  7712                           
  7713                           ;main.c: 119: TRISCbits.TRISC6 = 1;
  7714  055C  170E               	bsf	14,6	;volatile
  7715                           
  7716                           ;main.c: 120: INLVLBbits.INLVLB4 = 0;
  7717  055D  0027               	movlb	7	; select bank7
  7718  055E  120D               	bcf	13,4	;volatile
  7719                           
  7720                           ;main.c: 121: INLVLBbits.INLVLB6 = 0;
  7721  055F  130D               	bcf	13,6	;volatile
  7722                           
  7723                           ;main.c: 122: INLVLCbits.INLVLC5 = 0;
  7724  0560  128E               	bcf	14,5	;volatile
  7725                           
  7726                           ;main.c: 124: TRISBbits.TRISB5 = 1;
  7727  0561  0021               	movlb	1	; select bank1
  7728  0562  168D               	bsf	13,5	;volatile
  7729                           
  7730                           ;main.c: 125: INLVLBbits.INLVLB5 = 0;
  7731  0563  0027               	movlb	7	; select bank7
  7732  0564  128D               	bcf	13,5	;volatile
  7733                           
  7734                           ;main.c: 126: INLVLBbits.INLVLB7 = 0;
  7735  0565  138D               	bcf	13,7	;volatile
  7736                           
  7737                           ;main.c: 127: INLVLAbits.INLVLA1 = 0;
  7738  0566  108C               	bcf	12,1	;volatile
  7739                           
  7740                           ;main.c: 128: INLVLAbits.INLVLA2 = 0;
  7741  0567  110C               	bcf	12,2	;volatile
  7742  0568  0008               	return
  7743  0569                     __end_of_init:	
  7744                           ;main.c: 130: return;
  7745                           
  7746                           
  7747                           	psect	text24
  7748  0517                     __ptext24:	
  7749 ;; *************** function _initbuffer *****************
  7750 ;; Defined at:
  7751 ;;		line 100 in file "D:/programdata/16F18346_Link_IC.X/main.c"
  7752 ;; Parameters:    Size  Location     Type
  7753 ;;		None
  7754 ;; Auto vars:     Size  Location     Type
  7755 ;;  i               2    2[BANK0 ] int 
  7756 ;; Return value:  Size  Location     Type
  7757 ;;                  1    wreg      void 
  7758 ;; Registers used:
  7759 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7760 ;; Tracked objects:
  7761 ;;		On entry : 0/0
  7762 ;;		On exit  : 0/0
  7763 ;;		Unchanged: 0/0
  7764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7765 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7766 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7767 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7768 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7769 ;;Total ram usage:        4 bytes
  7770 ;; Hardware stack levels used:    1
  7771 ;; Hardware stack levels required when called:    3
  7772 ;; This function calls:
  7773 ;;		Nothing
  7774 ;; This function is called by:
  7775 ;;		_init
  7776 ;; This function uses a non-reentrant model
  7777 ;;
  7778                           
  7779                           
  7780                           ;psect for function _initbuffer
  7781  0517                     _initbuffer:	
  7782                           
  7783                           ;main.c: 101: for(int i = 0; i < 256; i++){
  7784                           
  7785                           ;incstack = 0
  7786                           ; Regs used in _initbuffer: [wreg+fsr1l+fsr1h+status,2+status,0]
  7787  0517  0020               	movlb	0	; select bank0
  7788  0518  01A2               	clrf	initbuffer@i
  7789  0519  01A3               	clrf	initbuffer@i+1
  7790  051A                     L27:	
  7791  051A  0823               	movf	initbuffer@i+1,w
  7792  051B  3A80               	xorlw	128
  7793  051C  00A0               	movwf	??_initbuffer
  7794  051D  3081               	movlw	129
  7795  051E  0220               	subwf	??_initbuffer,w
  7796  051F  1D03               	skipz
  7797  0520  2D23               	goto	u1125
  7798  0521  3000               	movlw	0
  7799  0522  0222               	subwf	initbuffer@i,w
  7800  0523                     u1125:	
  7801  0523  1803               	btfsc	3,0
  7802  0524  0008               	return
  7803                           
  7804                           ;main.c: 102: spi1_buffer_data[i] = 0;
  7805  0525  30F0               	movlw	240
  7806  0526  0020               	movlb	0	; select bank0
  7807  0527  00A0               	movwf	??_initbuffer
  7808  0528  3026               	movlw	38
  7809  0529  00A1               	movwf	??_initbuffer+1
  7810  052A  0822               	movf	initbuffer@i,w
  7811  052B  0720               	addwf	??_initbuffer,w
  7812  052C  0086               	movwf	6
  7813  052D  0823               	movf	initbuffer@i+1,w
  7814  052E  3D21               	addwfc	??_initbuffer+1,w
  7815  052F  0087               	movwf	7
  7816  0530  0181               	clrf	1
  7817                           
  7818                           ;main.c: 103: spi2_buffer_data[i] = 0;
  7819  0531  30F0               	movlw	240
  7820  0532  00A0               	movwf	??_initbuffer
  7821  0533  3025               	movlw	37
  7822  0534  00A1               	movwf	??_initbuffer+1
  7823  0535  0822               	movf	initbuffer@i,w
  7824  0536  0720               	addwf	??_initbuffer,w
  7825  0537  0086               	movwf	6
  7826  0538  0823               	movf	initbuffer@i+1,w
  7827  0539  3D21               	addwfc	??_initbuffer+1,w
  7828  053A  0087               	movwf	7
  7829  053B  0181               	clrf	1
  7830  053C  3001               	movlw	1
  7831  053D  07A2               	addwf	initbuffer@i,f
  7832  053E  3000               	movlw	0
  7833  053F  3DA3               	addwfc	initbuffer@i+1,f
  7834  0540  2D1A               	goto	L27
  7835  0541                     __end_of_initbuffer:	
  7836                           
  7837                           	psect	text25
  7838  0652                     __ptext25:	
  7839 ;; *************** function _clear *****************
  7840 ;; Defined at:
  7841 ;;		line 9 in file "D:/programdata/16F18346_Link_IC.X/util.c"
  7842 ;; Parameters:    Size  Location     Type
  7843 ;;		None
  7844 ;; Auto vars:     Size  Location     Type
  7845 ;;		None
  7846 ;; Return value:  Size  Location     Type
  7847 ;;                  1    wreg      void 
  7848 ;; Registers used:
  7849 ;;		status,2
  7850 ;; Tracked objects:
  7851 ;;		On entry : 0/0
  7852 ;;		On exit  : 0/0
  7853 ;;		Unchanged: 0/0
  7854 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7855 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7856 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7857 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7858 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7859 ;;Total ram usage:        0 bytes
  7860 ;; Hardware stack levels used:    1
  7861 ;; Hardware stack levels required when called:    3
  7862 ;; This function calls:
  7863 ;;		Nothing
  7864 ;; This function is called by:
  7865 ;;		_init
  7866 ;; This function uses a non-reentrant model
  7867 ;;
  7868                           
  7869                           
  7870                           ;psect for function _clear
  7871  0652                     _clear:	
  7872                           
  7873                           ;util.c: 10: ANSELA = 0x00;
  7874                           
  7875                           ;incstack = 0
  7876                           ; Regs used in _clear: [status,2]
  7877  0652  0023               	movlb	3	; select bank3
  7878  0653  018C               	clrf	12	;volatile
  7879                           
  7880                           ;util.c: 11: ANSELB = 0x00;
  7881  0654  018D               	clrf	13	;volatile
  7882                           
  7883                           ;util.c: 12: ANSELC = 0x00;
  7884  0655  018E               	clrf	14	;volatile
  7885                           
  7886                           ;util.c: 13: PORTA = 0x00;
  7887  0656  0020               	movlb	0	; select bank0
  7888  0657  018C               	clrf	12	;volatile
  7889                           
  7890                           ;util.c: 14: PORTB = 0x00;
  7891  0658  018D               	clrf	13	;volatile
  7892                           
  7893                           ;util.c: 15: PORTC = 0x00;
  7894  0659  018E               	clrf	14	;volatile
  7895                           
  7896                           ;util.c: 16: TRISA = 0x00;
  7897  065A  0021               	movlb	1	; select bank1
  7898  065B  018C               	clrf	12	;volatile
  7899                           
  7900                           ;util.c: 17: TRISB = 0x00;
  7901  065C  018D               	clrf	13	;volatile
  7902                           
  7903                           ;util.c: 18: TRISC = 0x00;
  7904  065D  018E               	clrf	14	;volatile
  7905  065E  0008               	return
  7906  065F                     __end_of_clear:	
  7907                           
  7908                           	psect	intentry
  7909  0004                     __pintentry:	
  7910 ;; *************** function _InterMSSP *****************
  7911 ;; Defined at:
  7912 ;;		line 68 in file "D:/programdata/16F18346_Link_IC.X/main.c"
  7913 ;; Parameters:    Size  Location     Type
  7914 ;;		None
  7915 ;; Auto vars:     Size  Location     Type
  7916 ;;		None
  7917 ;; Return value:  Size  Location     Type
  7918 ;;                  1    wreg      void 
  7919 ;; Registers used:
  7920 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7921 ;; Tracked objects:
  7922 ;;		On entry : 0/0
  7923 ;;		On exit  : 0/0
  7924 ;;		Unchanged: 0/0
  7925 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7926 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7927 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7928 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7929 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7930 ;;Total ram usage:        5 bytes
  7931 ;; Hardware stack levels used:    1
  7932 ;; Hardware stack levels required when called:    2
  7933 ;; This function calls:
  7934 ;;		_addAngle
  7935 ;;		_setSPI1sendData
  7936 ;; This function is called by:
  7937 ;;		Interrupt level 1
  7938 ;; This function uses a non-reentrant model
  7939 ;;
  7940                           
  7941  0004                     _InterMSSP:	
  7942                           
  7943                           ;incstack = 0
  7944  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  7945                           
  7946                           ; Regs used in _InterMSSP: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7947  0005  3180               	pagesel	$
  7948  0006  0020               	movlb	0	; select bank0
  7949  0007  087F               	movf	127,w
  7950  0008  00F7               	movwf	??_InterMSSP+4
  7951                           
  7952                           ;main.c: 70: if (PIR1bits.SSP1IF == 1) {
  7953  0009  1D91               	btfss	17,3	;volatile
  7954  000A  282A               	goto	i1l2143
  7955                           
  7956                           ;main.c: 71: spi1_buffer_data[count1] = SSP1BUF;
  7957  000B  30F0               	movlw	240
  7958  000C  00F3               	movwf	??_InterMSSP
  7959  000D  3026               	movlw	38
  7960  000E  00F4               	movwf	??_InterMSSP+1
  7961  000F  0864               	movf	_count1,w
  7962  0010  0773               	addwf	??_InterMSSP,w
  7963  0011  00F5               	movwf	??_InterMSSP+2
  7964  0012  0865               	movf	_count1+1,w
  7965  0013  3D74               	addwfc	??_InterMSSP+1,w
  7966  0014  00F6               	movwf	??_InterMSSP+3
  7967  0015  0875               	movf	??_InterMSSP+2,w
  7968  0016  0086               	movwf	6
  7969  0017  0876               	movf	??_InterMSSP+3,w
  7970  0018  0087               	movwf	7
  7971  0019  0024               	movlb	4	; select bank4
  7972  001A  0811               	movf	17,w	;volatile
  7973  001B  0081               	movwf	1
  7974                           
  7975                           ;main.c: 72: setSPI1sendData();
  7976  001C  3185  2569  3180   	fcall	_setSPI1sendData
  7977                           
  7978                           ;main.c: 73: count1++;
  7979  001F  3001               	movlw	1
  7980  0020  0020               	movlb	0	; select bank0
  7981  0021  07E4               	addwf	_count1,f
  7982  0022  3000               	movlw	0
  7983  0023  3DE5               	addwfc	_count1+1,f
  7984                           
  7985                           ;main.c: 74: if(count1 == 256){
  7986  0024  0365               	decf	_count1+1,w
  7987  0025  0464               	iorwf	_count1,w
  7988  0026  1D03               	btfss	3,2
  7989  0027  282A               	goto	i1l2143
  7990                           
  7991                           ;main.c: 75: count1 = 0;
  7992  0028  01E4               	clrf	_count1
  7993  0029  01E5               	clrf	_count1+1
  7994  002A                     i1l2143:	
  7995                           
  7996                           ;main.c: 76: }
  7997                           ;main.c: 77: }
  7998                           ;main.c: 79: if (PIR2bits.SSP2IF == 1) {
  7999  002A  1D92               	btfss	18,3	;volatile
  8000  002B  2853               	goto	i1l2155
  8001                           
  8002                           ;main.c: 80: spi2_buffer_data[count2] = SSP2BUF;
  8003  002C  30F0               	movlw	240
  8004  002D  00F3               	movwf	??_InterMSSP
  8005  002E  3025               	movlw	37
  8006  002F  00F4               	movwf	??_InterMSSP+1
  8007  0030  0862               	movf	_count2,w
  8008  0031  0773               	addwf	??_InterMSSP,w
  8009  0032  00F5               	movwf	??_InterMSSP+2
  8010  0033  0863               	movf	_count2+1,w
  8011  0034  3D74               	addwfc	??_InterMSSP+1,w
  8012  0035  00F6               	movwf	??_InterMSSP+3
  8013  0036  0875               	movf	??_InterMSSP+2,w
  8014  0037  0086               	movwf	6
  8015  0038  0876               	movf	??_InterMSSP+3,w
  8016  0039  0087               	movwf	7
  8017  003A  0024               	movlb	4	; select bank4
  8018  003B  0819               	movf	25,w	;volatile
  8019  003C  0081               	movwf	1
  8020                           
  8021                           ;main.c: 81: LATAbits.LATA0 = ~LATAbits.LATA0;
  8022  003D  1003               	clrc
  8023  003E  0022               	movlb	2	; select bank2
  8024  003F  1C0C               	btfss	12,0	;volatile
  8025  0040  1403               	setc
  8026  0041  1C03               	btfss	3,0
  8027  0042  2846               	goto	u89_20
  8028  0043  0022               	movlb	2	; select bank2
  8029  0044  140C               	bsf	12,0	;volatile
  8030  0045  2848               	goto	i1l2149
  8031  0046                     u89_20:	
  8032  0046  0022               	movlb	2	; select bank2
  8033  0047  100C               	bcf	12,0	;volatile
  8034  0048                     i1l2149:	
  8035                           
  8036                           ;main.c: 82: count2++;
  8037  0048  3001               	movlw	1
  8038  0049  0020               	movlb	0	; select bank0
  8039  004A  07E2               	addwf	_count2,f
  8040  004B  3000               	movlw	0
  8041  004C  3DE3               	addwfc	_count2+1,f
  8042                           
  8043                           ;main.c: 83: if(count2 == 256){
  8044  004D  0363               	decf	_count2+1,w
  8045  004E  0462               	iorwf	_count2,w
  8046  004F  1D03               	btfss	3,2
  8047  0050  2853               	goto	i1l2155
  8048                           
  8049                           ;main.c: 84: count2 = 0;
  8050  0051  01E2               	clrf	_count2
  8051  0052  01E3               	clrf	_count2+1
  8052  0053                     i1l2155:	
  8053                           
  8054                           ;main.c: 85: }
  8055                           ;main.c: 86: }
  8056                           ;main.c: 89: if(IOCAFbits.IOCAF3 == 1){
  8057  0053  0027               	movlb	7	; select bank7
  8058  0054  1D93               	btfss	19,3	;volatile
  8059  0055  285A               	goto	i1l2161
  8060                           
  8061                           ;main.c: 90: addAngle();
  8062  0056  3186  2629         	fcall	_addAngle
  8063                           
  8064                           ;main.c: 91: IOCAFbits.IOCAF3 = 0;
  8065  0058  0027               	movlb	7	; select bank7
  8066  0059  1193               	bcf	19,3	;volatile
  8067  005A                     i1l2161:	
  8068                           
  8069                           ;main.c: 92: }
  8070                           ;main.c: 95: PIR1bits.SSP1IF = 0 ;
  8071  005A  0020               	movlb	0	; select bank0
  8072  005B  1191               	bcf	17,3	;volatile
  8073                           
  8074                           ;main.c: 96: PIR2bits.SSP2IF = 0 ;
  8075  005C  1192               	bcf	18,3	;volatile
  8076                           
  8077                           ;main.c: 97: PIR0bits.INTF = 0;
  8078  005D  1010               	bcf	16,0	;volatile
  8079                           
  8080                           ;main.c: 98: PIR0bits.IOCIF = 0;
  8081  005E  1210               	bcf	16,4	;volatile
  8082  005F  0877               	movf	??_InterMSSP+4,w
  8083  0060  00FF               	movwf	127
  8084  0061  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  8085  0062  0009               	retfie
  8086  0063                     __end_of_InterMSSP:	
  8087                           
  8088                           	psect	text27
  8089  0569                     __ptext27:	
  8090 ;; *************** function _setSPI1sendData *****************
  8091 ;; Defined at:
  8092 ;;		line 92 in file "D:/programdata/16F18346_Link_IC.X/spiControl.c"
  8093 ;; Parameters:    Size  Location     Type
  8094 ;;		None
  8095 ;; Auto vars:     Size  Location     Type
  8096 ;;		None
  8097 ;; Return value:  Size  Location     Type
  8098 ;;                  1    wreg      void 
  8099 ;; Registers used:
  8100 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8101 ;; Tracked objects:
  8102 ;;		On entry : 0/0
  8103 ;;		On exit  : 0/0
  8104 ;;		Unchanged: 0/0
  8105 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8106 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8107 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8108 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8109 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8110 ;;Total ram usage:        2 bytes
  8111 ;; Hardware stack levels used:    1
  8112 ;; Hardware stack levels required when called:    1
  8113 ;; This function calls:
  8114 ;;		_isSPI2read
  8115 ;; This function is called by:
  8116 ;;		_InterMSSP
  8117 ;; This function uses a non-reentrant model
  8118 ;;
  8119                           
  8120                           
  8121                           ;psect for function _setSPI1sendData
  8122  0569                     _setSPI1sendData:	
  8123                           
  8124                           ;spiControl.c: 93: if(!(isSPI2read() == 1)){
  8125                           
  8126                           ;incstack = 0
  8127                           ; Regs used in _setSPI1sendData: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8128  0569  3186  265F  3185   	fcall	_isSPI2read
  8129  056C  1803               	btfsc	3,0
  8130  056D  2D88               	goto	i1l1959
  8131                           
  8132                           ;spiControl.c: 94: SSP1BUF = spi2_buffer_data[read_count2];
  8133  056E  30F0               	movlw	240
  8134  056F  00F1               	movwf	??_setSPI1sendData
  8135  0570  3025               	movlw	37
  8136  0571  00F2               	movwf	??_setSPI1sendData+1
  8137  0572  0020               	movlb	0	; select bank0
  8138  0573  085A               	movf	_read_count2,w
  8139  0574  0771               	addwf	??_setSPI1sendData,w
  8140  0575  0086               	movwf	6
  8141  0576  085B               	movf	_read_count2+1,w
  8142  0577  3D72               	addwfc	??_setSPI1sendData+1,w
  8143  0578  0087               	movwf	7
  8144  0579  0801               	movf	1,w
  8145  057A  0024               	movlb	4	; select bank4
  8146  057B  0091               	movwf	17	;volatile
  8147                           
  8148                           ;spiControl.c: 95: read_count2++;
  8149  057C  3001               	movlw	1
  8150  057D  0020               	movlb	0	; select bank0
  8151  057E  07DA               	addwf	_read_count2,f
  8152  057F  3000               	movlw	0
  8153  0580  3DDB               	addwfc	_read_count2+1,f
  8154                           
  8155                           ;spiControl.c: 96: if(read_count2 == 256){
  8156  0581  035B               	decf	_read_count2+1,w
  8157  0582  045A               	iorwf	_read_count2,w
  8158  0583  1D03               	btfss	3,2
  8159  0584  0008               	return
  8160                           
  8161                           ;spiControl.c: 97: read_count2 = 0;
  8162  0585  01DA               	clrf	_read_count2
  8163  0586  01DB               	clrf	_read_count2+1
  8164                           
  8165                           ;spiControl.c: 98: }
  8166                           ;spiControl.c: 99: }else{
  8167  0587  0008               	return
  8168  0588                     i1l1959:	
  8169                           
  8170                           ;spiControl.c: 101: SSP1BUF = 0xC8;
  8171  0588  30C8               	movlw	200
  8172  0589  0024               	movlb	4	; select bank4
  8173  058A  0091               	movwf	17	;volatile
  8174  058B  0008               	return
  8175  058C                     __end_of_setSPI1sendData:	
  8176                           
  8177                           	psect	text28
  8178  065F                     __ptext28:	
  8179 ;; *************** function _isSPI2read *****************
  8180 ;; Defined at:
  8181 ;;		line 76 in file "D:/programdata/16F18346_Link_IC.X/spiControl.c"
  8182 ;; Parameters:    Size  Location     Type
  8183 ;;		None
  8184 ;; Auto vars:     Size  Location     Type
  8185 ;;		None
  8186 ;; Return value:  Size  Location     Type
  8187 ;;		None               void
  8188 ;; Registers used:
  8189 ;;		wreg, status,2, status,0
  8190 ;; Tracked objects:
  8191 ;;		On entry : 0/0
  8192 ;;		On exit  : 0/0
  8193 ;;		Unchanged: 0/0
  8194 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8195 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8196 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8197 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8198 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8199 ;;Total ram usage:        0 bytes
  8200 ;; Hardware stack levels used:    1
  8201 ;; This function calls:
  8202 ;;		Nothing
  8203 ;; This function is called by:
  8204 ;;		_setSPI1sendData
  8205 ;; This function uses a non-reentrant model
  8206 ;;
  8207                           
  8208                           
  8209                           ;psect for function _isSPI2read
  8210  065F                     _isSPI2read:	
  8211                           
  8212                           ;spiControl.c: 77: if(read_count2 == count2){
  8213                           
  8214                           ;incstack = 0
  8215                           ; Regs used in _isSPI2read: [wreg+status,2+status,0]
  8216  065F  0020               	movlb	0	; select bank0
  8217  0660  0863               	movf	_count2+1,w
  8218  0661  065B               	xorwf	_read_count2+1,w
  8219  0662  1D03               	skipz
  8220  0663  2E66               	goto	u59_25
  8221  0664  0862               	movf	_count2,w
  8222  0665  065A               	xorwf	_read_count2,w
  8223  0666                     u59_25:	
  8224  0666  1D03               	skipz
  8225  0667  2E6A               	goto	i1l1813
  8226                           
  8227                           ;spiControl.c: 78: return 1;
  8228  0668  1403               	setc
  8229                           
  8230                           ;spiControl.c: 79: }else{
  8231  0669  0008               	return
  8232  066A                     i1l1813:	
  8233                           
  8234                           ;spiControl.c: 80: return 0;
  8235  066A  1003               	clrc
  8236  066B  0008               	return
  8237  066C                     __end_of_isSPI2read:	
  8238                           
  8239                           	psect	text29
  8240  0629                     __ptext29:	
  8241 ;; *************** function _addAngle *****************
  8242 ;; Defined at:
  8243 ;;		line 29 in file "D:/programdata/16F18346_Link_IC.X/IO_control.c"
  8244 ;; Parameters:    Size  Location     Type
  8245 ;;		None
  8246 ;; Auto vars:     Size  Location     Type
  8247 ;;		None
  8248 ;; Return value:  Size  Location     Type
  8249 ;;                  1    wreg      void 
  8250 ;; Registers used:
  8251 ;;		wreg, status,2, status,0, pclath, cstack
  8252 ;; Tracked objects:
  8253 ;;		On entry : 0/0
  8254 ;;		On exit  : 0/0
  8255 ;;		Unchanged: 0/0
  8256 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8257 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8258 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8260 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8261 ;;Total ram usage:        0 bytes
  8262 ;; Hardware stack levels used:    1
  8263 ;; Hardware stack levels required when called:    1
  8264 ;; This function calls:
  8265 ;;		_setCargoAngle
  8266 ;; This function is called by:
  8267 ;;		_InterMSSP
  8268 ;; This function uses a non-reentrant model
  8269 ;;
  8270                           
  8271                           
  8272                           ;psect for function _addAngle
  8273  0629                     _addAngle:	
  8274                           
  8275                           ;IO_control.c: 30: linkAngle += direction;
  8276                           
  8277                           ;incstack = 0
  8278                           ; Regs used in _addAngle: [wreg+status,2+status,0+pclath+cstack]
  8279  0629  0021               	movlb	1	; select bank1
  8280  062A  086D               	movf	_direction^(0+128),w
  8281  062B  0020               	movlb	0	; select bank0
  8282  062C  07D8               	addwf	_linkAngle,f
  8283  062D  0021               	movlb	1	; select bank1
  8284  062E  086E               	movf	(_direction+1)^(0+128),w
  8285  062F  0020               	movlb	0	; select bank0
  8286  0630  3DD9               	addwfc	_linkAngle+1,f
  8287                           
  8288                           ;IO_control.c: 31: setCargoAngle(linkAngle);
  8289  0631  0859               	movf	_linkAngle+1,w
  8290  0632  00F2               	movwf	setCargoAngle@m_linkAngleTo+1
  8291  0633  0858               	movf	_linkAngle,w
  8292  0634  00F1               	movwf	setCargoAngle@m_linkAngleTo
  8293  0635  3186  26A5         	fcall	_setCargoAngle
  8294  0637  0008               	return
  8295  0638                     __end_of_addAngle:	
  8296                           
  8297                           	psect	text30
  8298  06A5                     __ptext30:	
  8299 ;; *************** function _setCargoAngle *****************
  8300 ;; Defined at:
  8301 ;;		line 39 in file "struct.c"
  8302 ;; Parameters:    Size  Location     Type
  8303 ;;  m_linkAngleT    2    0[COMMON] int 
  8304 ;; Auto vars:     Size  Location     Type
  8305 ;;		None
  8306 ;; Return value:  Size  Location     Type
  8307 ;;                  1    wreg      void 
  8308 ;; Registers used:
  8309 ;;		wreg
  8310 ;; Tracked objects:
  8311 ;;		On entry : 0/0
  8312 ;;		On exit  : 0/0
  8313 ;;		Unchanged: 0/0
  8314 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8315 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8316 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8317 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8318 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8319 ;;Total ram usage:        2 bytes
  8320 ;; Hardware stack levels used:    1
  8321 ;; This function calls:
  8322 ;;		Nothing
  8323 ;; This function is called by:
  8324 ;;		_addAngle
  8325 ;; This function uses a non-reentrant model
  8326 ;;
  8327                           
  8328                           
  8329                           ;psect for function _setCargoAngle
  8330  06A5                     _setCargoAngle:	
  8331                           
  8332                           ;struct.c: 40: cargoData.linkAngleTo = m_linkAngleTo;
  8333                           
  8334                           ;incstack = 0
  8335                           ; Regs used in _setCargoAngle: [wreg]
  8336  06A5  0872               	movf	setCargoAngle@m_linkAngleTo+1,w
  8337  06A6  0020               	movlb	0	; select bank0
  8338  06A7  00CE               	movwf	_cargoData+6
  8339  06A8  0871               	movf	setCargoAngle@m_linkAngleTo,w
  8340  06A9  00CD               	movwf	_cargoData+5
  8341  06AA  0008               	return
  8342  06AB                     __end_of_setCargoAngle:	
  8343  007E                     btemp	set	126	;btemp
  8344  007E                     int$flags	set	126
  8345  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    4
    Data        4
    BSS         122
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      10
    BANK0            80     40      78
    BANK1            80     10      79
    BANK2            80      0      18
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           64      0       0
    BANK16            0      0       0
    BANK17            0      0       0
    BANK18            0      0       0
    BANK19            0      0       0
    BANK20            0      0       0
    BANK21            0      0       0
    BANK22            0      0       0
    BANK23            0      0       0
    BANK24            0      0       0
    BANK25            0      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _InterMSSP in COMMON

    _InterMSSP->_setSPI1sendData
    _addAngle->_setCargoAngle

Critical Paths under _main in BANK0

    _main->_setComunicateMode
    _spi_init->_spi1_init
    _spi_init->_spi2_init
    _setComunicateMode->_Calibrate_download
    _readCargo->_getCargoData
    _Calibrate_download->_InitCalibrate
    _isEndpoint->_setSPI1sendDataManual
    _InitCalibrate->_getCargoData
    _initTrain->_isTrainSt
    _init->_initbuffer

Critical Paths under _InterMSSP in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_setComunicateMode
    _setComunicateMode->_Calibrate_download

Critical Paths under _InterMSSP in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterMSSP in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterMSSP in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _InterMSSP in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _InterMSSP in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _InterMSSP in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _InterMSSP in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _InterMSSP in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _InterMSSP in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _InterMSSP in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _InterMSSP in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _InterMSSP in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _InterMSSP in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _InterMSSP in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _InterMSSP in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _InterMSSP in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _InterMSSP in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _InterMSSP in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _InterMSSP in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _InterMSSP in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _InterMSSP in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _InterMSSP in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _InterMSSP in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _InterMSSP in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _InterMSSP in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1176
                      _InitCalibrate
                               _init
                          _initCargo
                         _initComand
                     _initComu_types
                          _initTrain
                            _io_init
                         _isSPI1read
                         _read_train
                  _setComunicateMode
                    _setSPI2sendData
                           _spi_init
 ---------------------------------------------------------------------------------
 (1) _spi_init                                             0     0      0       6
                          _spi1_init
                          _spi2_init
 ---------------------------------------------------------------------------------
 (2) _spi2_init                                            2     2      0       3
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _spi1_init                                            2     2      0       3
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _setSPI2sendData                                      4     4      0       0
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _setComunicateMode                                    4     4      0     904
                                             39 BANK0      1     1      0
                                              7 BANK1      3     3      0
                 _Calibrate_download
                          _readCargo
 ---------------------------------------------------------------------------------
 (2) _readCargo                                           12    12      0     285
                                             17 BANK0     12    12      0
                       _clutchaction
                       _getCargoData
                       _restartCargo
 ---------------------------------------------------------------------------------
 (3) _clutchaction                                         1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _Calibrate_download                                  12    12      0     458
                                             34 BANK0      5     5      0
                                              0 BANK1      7     7      0
                      _InitCalibrate
                         _isEndpoint
 ---------------------------------------------------------------------------------
 (3) _isEndpoint                                           6     6      0      71
                                              1 BANK0      6     6      0
              _setSPI1sendDataManual
 ---------------------------------------------------------------------------------
 (4) _setSPI1sendDataManual                                1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _InitCalibrate                                       17    17      0      40
                                             17 BANK0     17    17      0
                       _getCargoData
 ---------------------------------------------------------------------------------
 (3) _getCargoData                                        17     1     16       0
                                              0 BANK0     17     1     16
 ---------------------------------------------------------------------------------
 (1) _read_train                                           4     4      0      65
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _isSPI1read                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _io_init                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initTrain                                            3     3      0      31
                                              9 BANK0      3     3      0
                          _isTrainSt
                     _resetTrainData
 ---------------------------------------------------------------------------------
 (2) _resetTrainData                                       0     0      0       0
                       _restartCargo
 ---------------------------------------------------------------------------------
 (3) _restartCargo                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _isTrainSt                                            9     9      0      31
                                              0 BANK0      9     9      0
 ---------------------------------------------------------------------------------
 (1) _initComu_types                                       1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _initComand                                           1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _initCargo                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0     130
                              _clear
                         _initbuffer
 ---------------------------------------------------------------------------------
 (2) _initbuffer                                           4     4      0     130
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) _clear                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _InterMSSP                                            5     5      0      86
                                              2 COMMON     5     5      0
                           _addAngle
                    _setSPI1sendData
 ---------------------------------------------------------------------------------
 (6) _setSPI1sendData                                      2     2      0       0
                                              0 COMMON     2     2      0
                         _isSPI2read
 ---------------------------------------------------------------------------------
 (7) _isSPI2read                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _addAngle                                             0     0      0      86
                      _setCargoAngle
 ---------------------------------------------------------------------------------
 (7) _setCargoAngle                                        2     0      2      86
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _InitCalibrate
     _getCargoData
   _init
     _clear
     _initbuffer
   _initCargo
   _initComand
   _initComu_types
   _initTrain
     _isTrainSt
     _resetTrainData
       _restartCargo
   _io_init
   _isSPI1read
   _read_train
   _setComunicateMode
     _Calibrate_download
       _InitCalibrate
         _getCargoData
       _isEndpoint
         _setSPI1sendDataManual
     _readCargo
       _clutchaction
       _getCargoData
       _restartCargo
   _setSPI2sendData
   _spi_init
     _spi1_init
     _spi2_init

 _InterMSSP (ROOT)
   _addAngle
     _setCargoAngle
   _setSPI1sendData
     _isSPI2read

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       2       1       14.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      7       A       2       71.4%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     28      4E       5       97.5%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      A      4F       7       98.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      12       9       22.5%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
ABS                  0      0      B9      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
DATA                 0      0      B9      28        0.0%
BANK11              50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITBANK12           50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12              50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITBANK13           50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13              50      0       0      33        0.0%
BITBANK14           50      0       0      34        0.0%
BANK14              50      0       0      35        0.0%
BITBANK15           50      0       0      36        0.0%
BANK15              40      0       0      37        0.0%
BITBANK16           50      0       0      38        0.0%
BANK16               0      0       0      39        0.0%
BITBANK17           50      0       0      40        0.0%
BANK17               0      0       0      41        0.0%
BITBANK18           50      0       0      42        0.0%
BANK18               0      0       0      43        0.0%
BITBANK19           50      0       0      44        0.0%
BANK19               0      0       0      45        0.0%
BITBANK20           50      0       0      46        0.0%
BANK20               0      0       0      47        0.0%
BITBANK21           50      0       0      48        0.0%
BANK21               0      0       0      49        0.0%
BITBANK22           50      0       0      50        0.0%
BANK22               0      0       0      51        0.0%
BITBANK23           50      0       0      52        0.0%
BANK23               0      0       0      53        0.0%
BITBANK24           50      0       0      54        0.0%
BANK24               0      0       0      55        0.0%
BITBANK25           20      0       0      56        0.0%
BANK25               0      0       0      57        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Fri Jun 01 18:04:44 2018

                  _InitCalibrate 04EC                                pc 0002                      __CFG_CP$OFF 0000  
                 _cargoLengthnuf 00DB                              l130 03D4                              l164 0459  
                            l336 0680                              l433 0422                              l389 0187  
                            l398 0168                     __CFG_CPD$OFF 0000                              wreg 0009  
        setComunicateMode@m_type 00EA                             S3023 0605                             S3019 05CE  
       Calibrate_download@bufint 00E7                     __CFG_LVP$OFF 0000                             l3021 017D  
                           l3015 040E                             l3025 044E                             l3017 0257  
                           l2461 048A                             l2621 01E3                             l2455 0477  
                           l2631 01FB                             l2623 01E8                             l2561 0104  
                           l2641 0206                             l2633 01FE                             l2625 01ED  
                           l2617 01CD                             l2731 03BE                             l2571 0146  
                           l2555 00DD                             l2651 022A                             l2643 0208  
                           l2635 0200                             l2619 01D6                             l2803 0408  
                           l2741 03CF                             l2813 042C                             l2573 0161  
                           l2565 010E                             l2557 00F3                             l2549 00CD  
                           l2653 023A                             l2637 0202                             l2661 0261  
                           l2805 041C                             l2487 039F                             l2815 0436  
                           l2823 0449                             l2559 00FB                             l2655 024D  
                           l2647 0211                             l2639 0204                             l2817 0443  
                           l2577 016E                             l2569 012E                             l2585 0177  
                           l2833 049D                             l2579 0170                             l2659 0252  
                           l2835 04A2                             l2793 0400                             l2865 04E5  
                           l2857 04D5                             l2779 0643                             l2867 04E8  
                           l2797 0404                             u1220 01C6                             u1125 0523  
                           u1070 0624                             u1215 0197                             u1080 050A  
                           u1145 0374                             u1315 03DA                             u1325 063F  
                           u1165 0127                             u1175 013F                             u1255 0223  
                           u1335 03F4                             u1185 0157                             u1265 0233  
                           u1370 049B                             u1275 0243                             u1285 026C  
                           _WPUA 020C                             _WPUB 020D                             _WPUC 020E  
                   __CFG_WRT$OFF 0000                    __CFG_FCMEN$ON 0000                    ?_clutchaction 0071  
                           _main 04BE                             _init 0541                             fsr0h 0005  
                           fsr1h 0007                             indf0 0000                             fsr0l 0004  
                           indf1 0001                             fsr1l 0006                             btemp 007E  
                  __CFG_BOREN$ON 0000                             start 0063                    __CFG_CSWEN$ON 0000  
                 ?_InitCalibrate 0071                            ?_main 0071                            ?_init 0071  
                  __CFG_WDTE$OFF 0000                   __CFG_DEBUG$OFF 0000             __end_of_getCargoData 0629  
                          _PORTA 000C                            _PORTB 000D                            _PORTC 000E  
                          _TRISA 008C                            _TRISB 008D                            _TRISC 008E  
                          u59_25 0666                            u89_20 0046               setComunicateMode@i 00EB  
 __size_of_setSPI1sendDataManual 0006    __end_of_setSPI1sendDataManual 06A5                            _clear 0652  
                __end_of_io_init 0696                   __pbitbssCOMMON 0380                   ??_clutchaction 0020  
                 __CFG_BORV$HIGH 0000                            status 0003                            wtemp0 007E  
                 __CFG_MCLRE$OFF 0000                  __initialization 0065                     __end_of_main 04EC  
                   __end_of_init 0569                           ??_main 0048                           ??_init 0024  
                         ?_clear 0071                 __end_of_addAngle 0638                           _ANSELA 018C  
                         _ANSELB 018D                           _ANSELC 018E                           _RA2PPS 0E92  
                         _RC2PPS 0EA2                           _RB7PPS 0E9F                           i1l2143 002A  
                         i1l2161 005A                           i1l2155 0053                           i1l2149 0048  
                         i1l1813 066A                           i1l1959 0588         __size_of_setSPI1sendData 0023  
             __size_of_InterMSSP 005F                  ??_InitCalibrate 0031                __end_of_VENDER_ID 06B3  
                 __CFG_PWRTE$OFF 0000         __size_of_setSPI2sendData 0030          __size_of_resetTrainData 0009  
    __size_of_Calibrate_download 00FB                   __CFG_STVREN$ON 0000                           _count1 0064  
                         _count2 0062                           _readNG 0066                           _readOK 0067  
        __size_of_initComu_types 006D                        ??_io_init 0020                 __end_of_spi_init 068D  
                    initbuffer@i 0022                     isTrainSt@buf 0028                     _ra3condision 0385  
        __end_of__initialization 00A3                   __pcstackCOMMON 0071                     __pidataBANK0 06AB  
                   __pidataBANK1 06AD               __end_of_MACHINE_ID 06B1                    __end_of_clear 065F  
          __size_of_getCargoData 0010             __end_of_clutchaction 0683                __end_of_InterMSSP 0063  
                __CFG_LPBOREN$ON 0000                          ??_clear 0020                       __pbssBANK0 0048  
                     __pbssBANK1 00A0                       __pbssBANK2 0120               __size_of_isTrainSt 0045  
            clutchaction@comannd 0020           InitCalibrate@cargoData 0032               __size_of_initCargo 0017  
             __size_of_readCargo 00E0                  _startTrainBytes 00D7               __size_of_initTrain 0044  
                     _isSPI1read 0638                       _isSPI2read 065F                     _getCargoData 0619  
                     __pmaintext 04BE               __size_of_spi1_init 0020               __size_of_spi2_init 0022  
                __CFG_PPS1WAY$ON 0000                ??_setSPI1sendData 0071                       __pintentry 0004  
Calibrate_download@spi_Read_data 00E9                        ?_addAngle 0071                ??_setSPI2sendData 0020  
            __CFG_RSTOSC$HFINT32 0000                       _isEndpoint 045A                     _isCalibrated 0387  
         __size_of_setCargoAngle 0006                          _SSP1BUF 0211                          _SSP2BUF 0219  
                     _comu_types 00A0                   _resetTrainData 0696                       _initComand 02EF  
                      ?_spi_init 0071                       ??_addAngle 0073                __end_of_isTrainSt 03A1  
                     _initbuffer 0517                   _initComu_types 0282               isEndpoint@spi2data 0026  
                        __ptext1 0683                          __ptext2 058C                          __ptext3 05AE  
                        __ptext4 048E                          __ptext5 03E5                          __ptext6 01A2  
                        __ptext7 0678                          __ptext8 00A7                __end_of_initCargo 0605  
                        __ptext9 045A                       _read_train 0423                          _command 00B2  
              __end_of_readCargo 0282                          _counta2 00E1                          _io_init 068D  
              __end_of_initTrain 03E5                    ?_restartCargo 0071                        _IOCAFbits 0393  
                      _IOCANbits 0392                        _IOCAPbits 0391                __end_of_spi1_init 05CE  
              __end_of_spi2_init 05AE                          _st_type 006A                          clrloop0 066D  
          _setSPI1sendDataManual 069F             end_of_initialization 00A3           __end_of_resetTrainData 069F  
                    ?_isSPI1read 0071                      ?_isSPI2read 0071                    _setCargoAngle 06A5  
          __size_of_clutchaction 000B                       ??_spi_init 0022                        _VENDER_ID 06B1  
               readCargo@buflong 0036           __end_of_initComu_types 02EF                   spi1_init@dummy 0021  
                    ?_isEndpoint 0071                   ??_restartCargo 0020                        _TRISBbits 008D  
                      _TRISCbits 008E                 __CFG_FEXTOSC$OFF 0000                   spi2_init@dummy 0021  
                   _clutchaction 0678                  ?_resetTrainData 0071       __end_of_Calibrate_download 01A2  
                 ?_setCargoAngle 0071                      ?_initComand 0071            __end_of_InitCalibrate 0517  
                ?_initComu_types 0071                      ?_initbuffer 0071                      ?_read_train 0071  
            __size_of_isSPI1read 000D              __size_of_isSPI2read 000D                    __pbitnvCOMMON 03C0  
            start_initialization 0065           ?_setSPI1sendDataManual 0071                        _InterMSSP 0004  
                 _isEndPointTrig 03C0                  _setSPI1sendData 0569                  _setSPI2sendData 048E  
            __size_of_isEndpoint 0034                      __pdataBANK0 006C                      __pdataBANK1 00ED  
              _setComunicateMode 03E5                __size_of_addAngle 000F               ?_setComunicateMode 0071  
                    __pbssBIGRAM 24F0                      __pbssCOMMON 0079                        ___latbits 0003  
                  __pcstackBANK0 0020                    __pcstackBANK1 00E3                      _cargo_index 0120  
            ??_setComunicateMode 0047              __size_of_initComand 006D                       ?_InterMSSP 0071  
                      _calibdata 00C4              __size_of_initbuffer 002A                        _cargoData 0048  
                ??_setCargoAngle 0073                _cargoWorkingCount 00D3              __size_of_read_train 0037  
           __end_of_restartCargo 0652            _spi1_send_buffer_data 24F0        Calibrate_download@buflong 00E3  
      __end_of_setComunicateMode 0423                        _direction 00ED          readCargo@spi1_Read_data 003C  
              __size_of_spi_init 000A                        __pswtext1 05CE                        __pswtext2 0605  
                      _isMycargo 0380                         ?_io_init 0071                        _isTrainSt 035C  
                      _countabuf 005E                        _initCargo 05EE                        _readCargo 01A2  
                      _linkAngle 0058          __end_of_setSPI1sendData 058C                        _initTrain 03A1  
                 __size_of_clear 000D          __end_of_setSPI2sendData 04BE                        _spi1_init 05AE  
                      _spi2_init 058C                         _LATAbits 010C                     ??_isSPI1read 0020  
                   ??_isSPI2read 0071                        clear_ram0 066C       setCargoAngle@m_linkAngleTo 0071  
                       _PIE0bits 0090                         _PIE1bits 0091                         _PIE2bits 0092  
                      _send_data 0069                         _PIR0bits 0010                         _PIR1bits 0011  
                       _PIR2bits 0012                  readCargo@bufint 003A                     ??_isEndpoint 0021  
                     ?_isTrainSt 0071               __end_of_isSPI1read 0645               __end_of_isSPI2read 066C  
                     ?_initCargo 0071                    _SSP1SSPPSbits 0E22                       ?_readCargo 0071  
                     ?_initTrain 0071                      ??_InterMSSP 0073                    _SSP2SSPPSbits 0E1F  
               ??_resetTrainData 0020                       ?_spi1_init 0071                       ?_spi2_init 0071  
               ??_initComu_types 0020               __end_of_isEndpoint 048E                     ??_initComand 0020  
     __size_of_setComunicateMode 003E                         _addAngle 0629                     ??_initbuffer 0020  
               _spi1_buffer_data 26F0                     ??_read_train 0020               _Calibrate_download 00A7  
        ??_setSPI1sendDataManual 0020                   _workingcounta0 0384                   _workingcounta1 0383  
                 _workingcounta2 0382                   _workingcounta3 0381                 __size_of_io_init 0009  
                     _MACHINE_ID 06AF                      _read_count1 0060                      _read_count2 005A  
            ?_Calibrate_download 0071                 ?_setSPI1sendData 0071                         __ptext10 069F  
                       __ptext11 04EC                         __ptext20 0282                         __ptext12 0619  
                       __ptext21 02EF                         __ptext13 0423                         __ptext30 06A5  
                       __ptext22 05EE                         __ptext14 0638                         __ptext23 0541  
                       __ptext15 068D                         __ptext24 0517                         __ptext16 03A1  
                       __ptext25 0652                         __ptext17 0696                         __ptext18 0645  
                       __ptext27 0569                         __ptext19 035C                         __ptext28 065F  
                       __ptext29 0629                     _SSP1CON1bits 0215                     _SSP1CON3bits 0217  
             __end_of_initComand 035C                 ?_setSPI2sendData 0071                     _SSP2CON1bits 021D  
                 _spi1_Read_data 0079                     _SSP2CON3bits 021F            __size_of_restartCargo 000D  
                       _linkInfo 00CD                    __size_of_main 002E                    __size_of_init 0028  
             __end_of_initbuffer 0541                    ?_getCargoData 0020                   _spi2_Read_data 0068  
             __end_of_read_train 045A             ??_Calibrate_download 0042                      _isreadTrain 0386  
                       _spi_init 0683                         int$flags 007E                         _trainPos 005C  
                 _spi2_Send_data 006B                     _SSP1STATbits 0214                 _spi2_buffer_data 25F0  
                   _SSP2STATbits 021C                    _st_dataLength 006C                       _INLVLAbits 038C  
                     _INLVLBbits 038D                       _INLVLCbits 038E                      ??_isTrainSt 0020  
                    _OSCTUNEbits 091E                       _INTCONbits 000B                      ??_initCargo 0020  
                   _restartCargo 0645                      ??_readCargo 0031                      ??_initTrain 0029  
         __size_of_InitCalibrate 002B                      _send_count1 00DD                         intlevel1 0000  
                    ??_spi1_init 0020                      ??_spi2_init 0020                   ??_getCargoData 0030  
              __CFG_CLKOUTEN$OFF 0000                       _OSCFRQbits 091F                    __pstringtext1 06AF  
                  __pstringtext2 06B1        setSPI1sendDataManual@data 0020                 read_train@bufint 0022  
                _spi1_send_count 00DF            __end_of_setCargoAngle 06AB  

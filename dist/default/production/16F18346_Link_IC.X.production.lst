

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sun May 20 11:11:41 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F18346
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	eeprom_data,global,class=EEDATA,space=3,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	idataBANK1,global,class=CODE,delta=2
     7                           	psect	stringtext1,global,class=STRCODE,delta=2
     8                           	psect	stringtext2,global,class=STRCODE,delta=2
     9                           	psect	bitnvCOMMON,global,bit,class=COMMON,space=1,delta=1
    10                           	psect	cinit,global,class=CODE,merge=1,delta=2
    11                           	psect	bitbssCOMMON,global,bit,class=COMMON,space=1,delta=1
    12                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    18                           	psect	clrtext,global,class=CODE,delta=2
    19                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    20                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    21                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    22                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    23                           	psect	text1,local,class=CODE,merge=1,delta=2
    24                           	psect	text2,local,class=CODE,merge=1,delta=2
    25                           	psect	text3,local,class=CODE,merge=1,delta=2
    26                           	psect	text4,local,class=CODE,merge=1,delta=2
    27                           	psect	text5,local,class=CODE,merge=1,delta=2
    28                           	psect	text6,local,class=CODE,merge=1,delta=2
    29                           	psect	swtext1,local,class=CONST,delta=2
    30                           	psect	text7,local,class=CODE,merge=1,delta=2
    31                           	psect	text8,local,class=CODE,merge=1,delta=2
    32                           	psect	swtext2,local,class=CONST,delta=2
    33                           	psect	text9,local,class=CODE,merge=1,delta=2
    34                           	psect	text10,local,class=CODE,merge=1,delta=2
    35                           	psect	text11,local,class=CODE,merge=1,delta=2
    36                           	psect	text12,local,class=CODE,merge=1,delta=2
    37                           	psect	text13,local,class=CODE,merge=1,delta=2
    38                           	psect	text14,local,class=CODE,merge=1,delta=2
    39                           	psect	text15,local,class=CODE,merge=1,delta=2
    40                           	psect	text16,local,class=CODE,merge=1,delta=2
    41                           	psect	text17,local,class=CODE,merge=1,delta=2
    42                           	psect	text18,local,class=CODE,merge=1,delta=2
    43                           	psect	text19,local,class=CODE,merge=1,delta=2
    44                           	psect	text20,local,class=CODE,merge=1,delta=2
    45                           	psect	text21,local,class=CODE,merge=1,delta=2
    46                           	psect	text22,local,class=CODE,merge=1,delta=2
    47                           	psect	text23,local,class=CODE,merge=1,delta=2
    48                           	psect	text24,local,class=CODE,merge=1,delta=2
    49                           	psect	text25,local,class=CODE,merge=1,delta=2
    50                           	psect	intentry,global,class=CODE,delta=2
    51                           	psect	text27,local,class=CODE,merge=1,delta=2
    52                           	psect	text28,local,class=CODE,merge=1,delta=2
    53                           	psect	text29,local,class=CODE,merge=1,delta=2
    54                           	psect	text30,local,class=CODE,merge=1,delta=2
    55                           	dabs	1,0xCA0,32
    56                           	dabs	1,0xC20,80
    57                           	dabs	1,0xBA0,80
    58                           	dabs	1,0xB30,64
    59                           	dabs	1,0xB20,16
    60                           	dabs	1,0xAA0,80
    61                           	dabs	1,0xA20,80
    62                           	dabs	1,0x9A0,80
    63                           	dabs	1,0x920,80
    64                           	dabs	1,0x8A0,80
    65                           	dabs	1,0x820,80
    66                           	dabs	1,0x7E0,16
    67                           	dabs	1,0x24F0,0,_spi1_send_buffer_data
    68                           	dabs	1,0x25F0,0,_spi2_buffer_data
    69                           	dabs	1,0x26F0,0,_spi1_buffer_data
    70                           	dabs	1,0x7E,2
    71  0000                     
    72                           ; Version 1.45
    73                           ; Generated 16/11/2017 GMT
    74                           ; 
    75                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    76                           ; All rights reserved.
    77                           ; 
    78                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    79                           ; 
    80                           ; Redistribution and use in source and binary forms, with or without modification, are
    81                           ; permitted provided that the following conditions are met:
    82                           ; 
    83                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    84                           ;        conditions and the following disclaimer.
    85                           ; 
    86                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    87                           ;        of conditions and the following disclaimer in the documentation and/or other
    88                           ;        materials provided with the distribution.
    89                           ; 
    90                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    91                           ;        software without specific prior written permission.
    92                           ; 
    93                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    94                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    95                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    96                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    97                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    98                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    99                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   100                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   101                           ; 
   102                           ; 
   103                           ; Code-generator required, PIC16F18346 Definitions
   104                           ; 
   105                           ; SFR Addresses
   106  0000                     	;# 
   107  0001                     	;# 
   108  0002                     	;# 
   109  0003                     	;# 
   110  0004                     	;# 
   111  0005                     	;# 
   112  0006                     	;# 
   113  0007                     	;# 
   114  0008                     	;# 
   115  0009                     	;# 
   116  000A                     	;# 
   117  000B                     	;# 
   118  000C                     	;# 
   119  000D                     	;# 
   120  000E                     	;# 
   121  0010                     	;# 
   122  0011                     	;# 
   123  0012                     	;# 
   124  0013                     	;# 
   125  0014                     	;# 
   126  0015                     	;# 
   127  0015                     	;# 
   128  0016                     	;# 
   129  0016                     	;# 
   130  0017                     	;# 
   131  0018                     	;# 
   132  0019                     	;# 
   133  0019                     	;# 
   134  001A                     	;# 
   135  001B                     	;# 
   136  001C                     	;# 
   137  001D                     	;# 
   138  001E                     	;# 
   139  001F                     	;# 
   140  008C                     	;# 
   141  008D                     	;# 
   142  008E                     	;# 
   143  0090                     	;# 
   144  0091                     	;# 
   145  0092                     	;# 
   146  0093                     	;# 
   147  0094                     	;# 
   148  0097                     	;# 
   149  009B                     	;# 
   150  009B                     	;# 
   151  009C                     	;# 
   152  009D                     	;# 
   153  009E                     	;# 
   154  009F                     	;# 
   155  010C                     	;# 
   156  010D                     	;# 
   157  010E                     	;# 
   158  0111                     	;# 
   159  0112                     	;# 
   160  0113                     	;# 
   161  0114                     	;# 
   162  0115                     	;# 
   163  0116                     	;# 
   164  0117                     	;# 
   165  0118                     	;# 
   166  0119                     	;# 
   167  018C                     	;# 
   168  018D                     	;# 
   169  018E                     	;# 
   170  0197                     	;# 
   171  0199                     	;# 
   172  0199                     	;# 
   173  0199                     	;# 
   174  019A                     	;# 
   175  019A                     	;# 
   176  019A                     	;# 
   177  019B                     	;# 
   178  019B                     	;# 
   179  019B                     	;# 
   180  019B                     	;# 
   181  019B                     	;# 
   182  019C                     	;# 
   183  019C                     	;# 
   184  019C                     	;# 
   185  019D                     	;# 
   186  019D                     	;# 
   187  019D                     	;# 
   188  019E                     	;# 
   189  019E                     	;# 
   190  019E                     	;# 
   191  019F                     	;# 
   192  019F                     	;# 
   193  019F                     	;# 
   194  019F                     	;# 
   195  019F                     	;# 
   196  020C                     	;# 
   197  020D                     	;# 
   198  020E                     	;# 
   199  0211                     	;# 
   200  0211                     	;# 
   201  0212                     	;# 
   202  0212                     	;# 
   203  0213                     	;# 
   204  0213                     	;# 
   205  0214                     	;# 
   206  0214                     	;# 
   207  0215                     	;# 
   208  0215                     	;# 
   209  0215                     	;# 
   210  0215                     	;# 
   211  0216                     	;# 
   212  0216                     	;# 
   213  0217                     	;# 
   214  0217                     	;# 
   215  0219                     	;# 
   216  021A                     	;# 
   217  021B                     	;# 
   218  021C                     	;# 
   219  021D                     	;# 
   220  021D                     	;# 
   221  021E                     	;# 
   222  021F                     	;# 
   223  028C                     	;# 
   224  028D                     	;# 
   225  028E                     	;# 
   226  0291                     	;# 
   227  0291                     	;# 
   228  0292                     	;# 
   229  0293                     	;# 
   230  0294                     	;# 
   231  0295                     	;# 
   232  0295                     	;# 
   233  0296                     	;# 
   234  0297                     	;# 
   235  0298                     	;# 
   236  029F                     	;# 
   237  030C                     	;# 
   238  030D                     	;# 
   239  030E                     	;# 
   240  0311                     	;# 
   241  0311                     	;# 
   242  0312                     	;# 
   243  0313                     	;# 
   244  0314                     	;# 
   245  0315                     	;# 
   246  0315                     	;# 
   247  0316                     	;# 
   248  0317                     	;# 
   249  0318                     	;# 
   250  038C                     	;# 
   251  038D                     	;# 
   252  038E                     	;# 
   253  0391                     	;# 
   254  0392                     	;# 
   255  0393                     	;# 
   256  0394                     	;# 
   257  0395                     	;# 
   258  0396                     	;# 
   259  0397                     	;# 
   260  0398                     	;# 
   261  0399                     	;# 
   262  039A                     	;# 
   263  039C                     	;# 
   264  039D                     	;# 
   265  039E                     	;# 
   266  039F                     	;# 
   267  0411                     	;# 
   268  0411                     	;# 
   269  0412                     	;# 
   270  0413                     	;# 
   271  0414                     	;# 
   272  0415                     	;# 
   273  0416                     	;# 
   274  0417                     	;# 
   275  0418                     	;# 
   276  0418                     	;# 
   277  0419                     	;# 
   278  041A                     	;# 
   279  041B                     	;# 
   280  041C                     	;# 
   281  041D                     	;# 
   282  041E                     	;# 
   283  041F                     	;# 
   284  0498                     	;# 
   285  0498                     	;# 
   286  0499                     	;# 
   287  049A                     	;# 
   288  049B                     	;# 
   289  049B                     	;# 
   290  049C                     	;# 
   291  049D                     	;# 
   292  049E                     	;# 
   293  049F                     	;# 
   294  0617                     	;# 
   295  0618                     	;# 
   296  0619                     	;# 
   297  0619                     	;# 
   298  061A                     	;# 
   299  061B                     	;# 
   300  061C                     	;# 
   301  061C                     	;# 
   302  061F                     	;# 
   303  0691                     	;# 
   304  0692                     	;# 
   305  0693                     	;# 
   306  0694                     	;# 
   307  0695                     	;# 
   308  0696                     	;# 
   309  0697                     	;# 
   310  0698                     	;# 
   311  0699                     	;# 
   312  0711                     	;# 
   313  0712                     	;# 
   314  0713                     	;# 
   315  0714                     	;# 
   316  0715                     	;# 
   317  0716                     	;# 
   318  0717                     	;# 
   319  0718                     	;# 
   320  0719                     	;# 
   321  0891                     	;# 
   322  0891                     	;# 
   323  0891                     	;# 
   324  0891                     	;# 
   325  0891                     	;# 
   326  0891                     	;# 
   327  0892                     	;# 
   328  0892                     	;# 
   329  0892                     	;# 
   330  0893                     	;# 
   331  0893                     	;# 
   332  0893                     	;# 
   333  0893                     	;# 
   334  0893                     	;# 
   335  0893                     	;# 
   336  0894                     	;# 
   337  0894                     	;# 
   338  0894                     	;# 
   339  0895                     	;# 
   340  0895                     	;# 
   341  0895                     	;# 
   342  0896                     	;# 
   343  0896                     	;# 
   344  0896                     	;# 
   345  089B                     	;# 
   346  0911                     	;# 
   347  0912                     	;# 
   348  0913                     	;# 
   349  0914                     	;# 
   350  0915                     	;# 
   351  0916                     	;# 
   352  0918                     	;# 
   353  0919                     	;# 
   354  091A                     	;# 
   355  091B                     	;# 
   356  091C                     	;# 
   357  091D                     	;# 
   358  091E                     	;# 
   359  091F                     	;# 
   360  0E0F                     	;# 
   361  0E10                     	;# 
   362  0E11                     	;# 
   363  0E12                     	;# 
   364  0E13                     	;# 
   365  0E14                     	;# 
   366  0E15                     	;# 
   367  0E16                     	;# 
   368  0E17                     	;# 
   369  0E18                     	;# 
   370  0E19                     	;# 
   371  0E1A                     	;# 
   372  0E1B                     	;# 
   373  0E1C                     	;# 
   374  0E1D                     	;# 
   375  0E1E                     	;# 
   376  0E1F                     	;# 
   377  0E20                     	;# 
   378  0E21                     	;# 
   379  0E22                     	;# 
   380  0E24                     	;# 
   381  0E25                     	;# 
   382  0E28                     	;# 
   383  0E29                     	;# 
   384  0E2A                     	;# 
   385  0E2B                     	;# 
   386  0E2C                     	;# 
   387  0E2D                     	;# 
   388  0E2E                     	;# 
   389  0E2F                     	;# 
   390  0E90                     	;# 
   391  0E91                     	;# 
   392  0E92                     	;# 
   393  0E94                     	;# 
   394  0E95                     	;# 
   395  0E9C                     	;# 
   396  0E9D                     	;# 
   397  0E9E                     	;# 
   398  0E9F                     	;# 
   399  0EA0                     	;# 
   400  0EA1                     	;# 
   401  0EA2                     	;# 
   402  0EA3                     	;# 
   403  0EA4                     	;# 
   404  0EA5                     	;# 
   405  0EA6                     	;# 
   406  0EA7                     	;# 
   407  0F0F                     	;# 
   408  0F10                     	;# 
   409  0F11                     	;# 
   410  0F12                     	;# 
   411  0F13                     	;# 
   412  0F14                     	;# 
   413  0F15                     	;# 
   414  0F16                     	;# 
   415  0F17                     	;# 
   416  0F18                     	;# 
   417  0F19                     	;# 
   418  0F1A                     	;# 
   419  0F1B                     	;# 
   420  0F1C                     	;# 
   421  0F1D                     	;# 
   422  0F1E                     	;# 
   423  0F1F                     	;# 
   424  0F20                     	;# 
   425  0F21                     	;# 
   426  0F22                     	;# 
   427  0F23                     	;# 
   428  0F24                     	;# 
   429  0F25                     	;# 
   430  0F26                     	;# 
   431  0F27                     	;# 
   432  0F28                     	;# 
   433  0F29                     	;# 
   434  0F2A                     	;# 
   435  0F2B                     	;# 
   436  0F2C                     	;# 
   437  0F2D                     	;# 
   438  0F2E                     	;# 
   439  0F2F                     	;# 
   440  0F30                     	;# 
   441  0F31                     	;# 
   442  0F32                     	;# 
   443  0F33                     	;# 
   444  0F34                     	;# 
   445  0F35                     	;# 
   446  0F36                     	;# 
   447  0F37                     	;# 
   448  0FE4                     	;# 
   449  0FE5                     	;# 
   450  0FE6                     	;# 
   451  0FE7                     	;# 
   452  0FE8                     	;# 
   453  0FE9                     	;# 
   454  0FEA                     	;# 
   455  0FEB                     	;# 
   456  0FED                     	;# 
   457  0FEE                     	;# 
   458  0FEF                     	;# 
   459  0000                     	;# 
   460  0001                     	;# 
   461  0002                     	;# 
   462  0003                     	;# 
   463  0004                     	;# 
   464  0005                     	;# 
   465  0006                     	;# 
   466  0007                     	;# 
   467  0008                     	;# 
   468  0009                     	;# 
   469  000A                     	;# 
   470  000B                     	;# 
   471  000C                     	;# 
   472  000D                     	;# 
   473  000E                     	;# 
   474  0010                     	;# 
   475  0011                     	;# 
   476  0012                     	;# 
   477  0013                     	;# 
   478  0014                     	;# 
   479  0015                     	;# 
   480  0015                     	;# 
   481  0016                     	;# 
   482  0016                     	;# 
   483  0017                     	;# 
   484  0018                     	;# 
   485  0019                     	;# 
   486  0019                     	;# 
   487  001A                     	;# 
   488  001B                     	;# 
   489  001C                     	;# 
   490  001D                     	;# 
   491  001E                     	;# 
   492  001F                     	;# 
   493  008C                     	;# 
   494  008D                     	;# 
   495  008E                     	;# 
   496  0090                     	;# 
   497  0091                     	;# 
   498  0092                     	;# 
   499  0093                     	;# 
   500  0094                     	;# 
   501  0097                     	;# 
   502  009B                     	;# 
   503  009B                     	;# 
   504  009C                     	;# 
   505  009D                     	;# 
   506  009E                     	;# 
   507  009F                     	;# 
   508  010C                     	;# 
   509  010D                     	;# 
   510  010E                     	;# 
   511  0111                     	;# 
   512  0112                     	;# 
   513  0113                     	;# 
   514  0114                     	;# 
   515  0115                     	;# 
   516  0116                     	;# 
   517  0117                     	;# 
   518  0118                     	;# 
   519  0119                     	;# 
   520  018C                     	;# 
   521  018D                     	;# 
   522  018E                     	;# 
   523  0197                     	;# 
   524  0199                     	;# 
   525  0199                     	;# 
   526  0199                     	;# 
   527  019A                     	;# 
   528  019A                     	;# 
   529  019A                     	;# 
   530  019B                     	;# 
   531  019B                     	;# 
   532  019B                     	;# 
   533  019B                     	;# 
   534  019B                     	;# 
   535  019C                     	;# 
   536  019C                     	;# 
   537  019C                     	;# 
   538  019D                     	;# 
   539  019D                     	;# 
   540  019D                     	;# 
   541  019E                     	;# 
   542  019E                     	;# 
   543  019E                     	;# 
   544  019F                     	;# 
   545  019F                     	;# 
   546  019F                     	;# 
   547  019F                     	;# 
   548  019F                     	;# 
   549  020C                     	;# 
   550  020D                     	;# 
   551  020E                     	;# 
   552  0211                     	;# 
   553  0211                     	;# 
   554  0212                     	;# 
   555  0212                     	;# 
   556  0213                     	;# 
   557  0213                     	;# 
   558  0214                     	;# 
   559  0214                     	;# 
   560  0215                     	;# 
   561  0215                     	;# 
   562  0215                     	;# 
   563  0215                     	;# 
   564  0216                     	;# 
   565  0216                     	;# 
   566  0217                     	;# 
   567  0217                     	;# 
   568  0219                     	;# 
   569  021A                     	;# 
   570  021B                     	;# 
   571  021C                     	;# 
   572  021D                     	;# 
   573  021D                     	;# 
   574  021E                     	;# 
   575  021F                     	;# 
   576  028C                     	;# 
   577  028D                     	;# 
   578  028E                     	;# 
   579  0291                     	;# 
   580  0291                     	;# 
   581  0292                     	;# 
   582  0293                     	;# 
   583  0294                     	;# 
   584  0295                     	;# 
   585  0295                     	;# 
   586  0296                     	;# 
   587  0297                     	;# 
   588  0298                     	;# 
   589  029F                     	;# 
   590  030C                     	;# 
   591  030D                     	;# 
   592  030E                     	;# 
   593  0311                     	;# 
   594  0311                     	;# 
   595  0312                     	;# 
   596  0313                     	;# 
   597  0314                     	;# 
   598  0315                     	;# 
   599  0315                     	;# 
   600  0316                     	;# 
   601  0317                     	;# 
   602  0318                     	;# 
   603  038C                     	;# 
   604  038D                     	;# 
   605  038E                     	;# 
   606  0391                     	;# 
   607  0392                     	;# 
   608  0393                     	;# 
   609  0394                     	;# 
   610  0395                     	;# 
   611  0396                     	;# 
   612  0397                     	;# 
   613  0398                     	;# 
   614  0399                     	;# 
   615  039A                     	;# 
   616  039C                     	;# 
   617  039D                     	;# 
   618  039E                     	;# 
   619  039F                     	;# 
   620  0411                     	;# 
   621  0411                     	;# 
   622  0412                     	;# 
   623  0413                     	;# 
   624  0414                     	;# 
   625  0415                     	;# 
   626  0416                     	;# 
   627  0417                     	;# 
   628  0418                     	;# 
   629  0418                     	;# 
   630  0419                     	;# 
   631  041A                     	;# 
   632  041B                     	;# 
   633  041C                     	;# 
   634  041D                     	;# 
   635  041E                     	;# 
   636  041F                     	;# 
   637  0498                     	;# 
   638  0498                     	;# 
   639  0499                     	;# 
   640  049A                     	;# 
   641  049B                     	;# 
   642  049B                     	;# 
   643  049C                     	;# 
   644  049D                     	;# 
   645  049E                     	;# 
   646  049F                     	;# 
   647  0617                     	;# 
   648  0618                     	;# 
   649  0619                     	;# 
   650  0619                     	;# 
   651  061A                     	;# 
   652  061B                     	;# 
   653  061C                     	;# 
   654  061C                     	;# 
   655  061F                     	;# 
   656  0691                     	;# 
   657  0692                     	;# 
   658  0693                     	;# 
   659  0694                     	;# 
   660  0695                     	;# 
   661  0696                     	;# 
   662  0697                     	;# 
   663  0698                     	;# 
   664  0699                     	;# 
   665  0711                     	;# 
   666  0712                     	;# 
   667  0713                     	;# 
   668  0714                     	;# 
   669  0715                     	;# 
   670  0716                     	;# 
   671  0717                     	;# 
   672  0718                     	;# 
   673  0719                     	;# 
   674  0891                     	;# 
   675  0891                     	;# 
   676  0891                     	;# 
   677  0891                     	;# 
   678  0891                     	;# 
   679  0891                     	;# 
   680  0892                     	;# 
   681  0892                     	;# 
   682  0892                     	;# 
   683  0893                     	;# 
   684  0893                     	;# 
   685  0893                     	;# 
   686  0893                     	;# 
   687  0893                     	;# 
   688  0893                     	;# 
   689  0894                     	;# 
   690  0894                     	;# 
   691  0894                     	;# 
   692  0895                     	;# 
   693  0895                     	;# 
   694  0895                     	;# 
   695  0896                     	;# 
   696  0896                     	;# 
   697  0896                     	;# 
   698  089B                     	;# 
   699  0911                     	;# 
   700  0912                     	;# 
   701  0913                     	;# 
   702  0914                     	;# 
   703  0915                     	;# 
   704  0916                     	;# 
   705  0918                     	;# 
   706  0919                     	;# 
   707  091A                     	;# 
   708  091B                     	;# 
   709  091C                     	;# 
   710  091D                     	;# 
   711  091E                     	;# 
   712  091F                     	;# 
   713  0E0F                     	;# 
   714  0E10                     	;# 
   715  0E11                     	;# 
   716  0E12                     	;# 
   717  0E13                     	;# 
   718  0E14                     	;# 
   719  0E15                     	;# 
   720  0E16                     	;# 
   721  0E17                     	;# 
   722  0E18                     	;# 
   723  0E19                     	;# 
   724  0E1A                     	;# 
   725  0E1B                     	;# 
   726  0E1C                     	;# 
   727  0E1D                     	;# 
   728  0E1E                     	;# 
   729  0E1F                     	;# 
   730  0E20                     	;# 
   731  0E21                     	;# 
   732  0E22                     	;# 
   733  0E24                     	;# 
   734  0E25                     	;# 
   735  0E28                     	;# 
   736  0E29                     	;# 
   737  0E2A                     	;# 
   738  0E2B                     	;# 
   739  0E2C                     	;# 
   740  0E2D                     	;# 
   741  0E2E                     	;# 
   742  0E2F                     	;# 
   743  0E90                     	;# 
   744  0E91                     	;# 
   745  0E92                     	;# 
   746  0E94                     	;# 
   747  0E95                     	;# 
   748  0E9C                     	;# 
   749  0E9D                     	;# 
   750  0E9E                     	;# 
   751  0E9F                     	;# 
   752  0EA0                     	;# 
   753  0EA1                     	;# 
   754  0EA2                     	;# 
   755  0EA3                     	;# 
   756  0EA4                     	;# 
   757  0EA5                     	;# 
   758  0EA6                     	;# 
   759  0EA7                     	;# 
   760  0F0F                     	;# 
   761  0F10                     	;# 
   762  0F11                     	;# 
   763  0F12                     	;# 
   764  0F13                     	;# 
   765  0F14                     	;# 
   766  0F15                     	;# 
   767  0F16                     	;# 
   768  0F17                     	;# 
   769  0F18                     	;# 
   770  0F19                     	;# 
   771  0F1A                     	;# 
   772  0F1B                     	;# 
   773  0F1C                     	;# 
   774  0F1D                     	;# 
   775  0F1E                     	;# 
   776  0F1F                     	;# 
   777  0F20                     	;# 
   778  0F21                     	;# 
   779  0F22                     	;# 
   780  0F23                     	;# 
   781  0F24                     	;# 
   782  0F25                     	;# 
   783  0F26                     	;# 
   784  0F27                     	;# 
   785  0F28                     	;# 
   786  0F29                     	;# 
   787  0F2A                     	;# 
   788  0F2B                     	;# 
   789  0F2C                     	;# 
   790  0F2D                     	;# 
   791  0F2E                     	;# 
   792  0F2F                     	;# 
   793  0F30                     	;# 
   794  0F31                     	;# 
   795  0F32                     	;# 
   796  0F33                     	;# 
   797  0F34                     	;# 
   798  0F35                     	;# 
   799  0F36                     	;# 
   800  0F37                     	;# 
   801  0FE4                     	;# 
   802  0FE5                     	;# 
   803  0FE6                     	;# 
   804  0FE7                     	;# 
   805  0FE8                     	;# 
   806  0FE9                     	;# 
   807  0FEA                     	;# 
   808  0FEB                     	;# 
   809  0FED                     	;# 
   810  0FEE                     	;# 
   811  0FEF                     	;# 
   812  0000                     	;# 
   813  0001                     	;# 
   814  0002                     	;# 
   815  0003                     	;# 
   816  0004                     	;# 
   817  0005                     	;# 
   818  0006                     	;# 
   819  0007                     	;# 
   820  0008                     	;# 
   821  0009                     	;# 
   822  000A                     	;# 
   823  000B                     	;# 
   824  000C                     	;# 
   825  000D                     	;# 
   826  000E                     	;# 
   827  0010                     	;# 
   828  0011                     	;# 
   829  0012                     	;# 
   830  0013                     	;# 
   831  0014                     	;# 
   832  0015                     	;# 
   833  0015                     	;# 
   834  0016                     	;# 
   835  0016                     	;# 
   836  0017                     	;# 
   837  0018                     	;# 
   838  0019                     	;# 
   839  0019                     	;# 
   840  001A                     	;# 
   841  001B                     	;# 
   842  001C                     	;# 
   843  001D                     	;# 
   844  001E                     	;# 
   845  001F                     	;# 
   846  008C                     	;# 
   847  008D                     	;# 
   848  008E                     	;# 
   849  0090                     	;# 
   850  0091                     	;# 
   851  0092                     	;# 
   852  0093                     	;# 
   853  0094                     	;# 
   854  0097                     	;# 
   855  009B                     	;# 
   856  009B                     	;# 
   857  009C                     	;# 
   858  009D                     	;# 
   859  009E                     	;# 
   860  009F                     	;# 
   861  010C                     	;# 
   862  010D                     	;# 
   863  010E                     	;# 
   864  0111                     	;# 
   865  0112                     	;# 
   866  0113                     	;# 
   867  0114                     	;# 
   868  0115                     	;# 
   869  0116                     	;# 
   870  0117                     	;# 
   871  0118                     	;# 
   872  0119                     	;# 
   873  018C                     	;# 
   874  018D                     	;# 
   875  018E                     	;# 
   876  0197                     	;# 
   877  0199                     	;# 
   878  0199                     	;# 
   879  0199                     	;# 
   880  019A                     	;# 
   881  019A                     	;# 
   882  019A                     	;# 
   883  019B                     	;# 
   884  019B                     	;# 
   885  019B                     	;# 
   886  019B                     	;# 
   887  019B                     	;# 
   888  019C                     	;# 
   889  019C                     	;# 
   890  019C                     	;# 
   891  019D                     	;# 
   892  019D                     	;# 
   893  019D                     	;# 
   894  019E                     	;# 
   895  019E                     	;# 
   896  019E                     	;# 
   897  019F                     	;# 
   898  019F                     	;# 
   899  019F                     	;# 
   900  019F                     	;# 
   901  019F                     	;# 
   902  020C                     	;# 
   903  020D                     	;# 
   904  020E                     	;# 
   905  0211                     	;# 
   906  0211                     	;# 
   907  0212                     	;# 
   908  0212                     	;# 
   909  0213                     	;# 
   910  0213                     	;# 
   911  0214                     	;# 
   912  0214                     	;# 
   913  0215                     	;# 
   914  0215                     	;# 
   915  0215                     	;# 
   916  0215                     	;# 
   917  0216                     	;# 
   918  0216                     	;# 
   919  0217                     	;# 
   920  0217                     	;# 
   921  0219                     	;# 
   922  021A                     	;# 
   923  021B                     	;# 
   924  021C                     	;# 
   925  021D                     	;# 
   926  021D                     	;# 
   927  021E                     	;# 
   928  021F                     	;# 
   929  028C                     	;# 
   930  028D                     	;# 
   931  028E                     	;# 
   932  0291                     	;# 
   933  0291                     	;# 
   934  0292                     	;# 
   935  0293                     	;# 
   936  0294                     	;# 
   937  0295                     	;# 
   938  0295                     	;# 
   939  0296                     	;# 
   940  0297                     	;# 
   941  0298                     	;# 
   942  029F                     	;# 
   943  030C                     	;# 
   944  030D                     	;# 
   945  030E                     	;# 
   946  0311                     	;# 
   947  0311                     	;# 
   948  0312                     	;# 
   949  0313                     	;# 
   950  0314                     	;# 
   951  0315                     	;# 
   952  0315                     	;# 
   953  0316                     	;# 
   954  0317                     	;# 
   955  0318                     	;# 
   956  038C                     	;# 
   957  038D                     	;# 
   958  038E                     	;# 
   959  0391                     	;# 
   960  0392                     	;# 
   961  0393                     	;# 
   962  0394                     	;# 
   963  0395                     	;# 
   964  0396                     	;# 
   965  0397                     	;# 
   966  0398                     	;# 
   967  0399                     	;# 
   968  039A                     	;# 
   969  039C                     	;# 
   970  039D                     	;# 
   971  039E                     	;# 
   972  039F                     	;# 
   973  0411                     	;# 
   974  0411                     	;# 
   975  0412                     	;# 
   976  0413                     	;# 
   977  0414                     	;# 
   978  0415                     	;# 
   979  0416                     	;# 
   980  0417                     	;# 
   981  0418                     	;# 
   982  0418                     	;# 
   983  0419                     	;# 
   984  041A                     	;# 
   985  041B                     	;# 
   986  041C                     	;# 
   987  041D                     	;# 
   988  041E                     	;# 
   989  041F                     	;# 
   990  0498                     	;# 
   991  0498                     	;# 
   992  0499                     	;# 
   993  049A                     	;# 
   994  049B                     	;# 
   995  049B                     	;# 
   996  049C                     	;# 
   997  049D                     	;# 
   998  049E                     	;# 
   999  049F                     	;# 
  1000  0617                     	;# 
  1001  0618                     	;# 
  1002  0619                     	;# 
  1003  0619                     	;# 
  1004  061A                     	;# 
  1005  061B                     	;# 
  1006  061C                     	;# 
  1007  061C                     	;# 
  1008  061F                     	;# 
  1009  0691                     	;# 
  1010  0692                     	;# 
  1011  0693                     	;# 
  1012  0694                     	;# 
  1013  0695                     	;# 
  1014  0696                     	;# 
  1015  0697                     	;# 
  1016  0698                     	;# 
  1017  0699                     	;# 
  1018  0711                     	;# 
  1019  0712                     	;# 
  1020  0713                     	;# 
  1021  0714                     	;# 
  1022  0715                     	;# 
  1023  0716                     	;# 
  1024  0717                     	;# 
  1025  0718                     	;# 
  1026  0719                     	;# 
  1027  0891                     	;# 
  1028  0891                     	;# 
  1029  0891                     	;# 
  1030  0891                     	;# 
  1031  0891                     	;# 
  1032  0891                     	;# 
  1033  0892                     	;# 
  1034  0892                     	;# 
  1035  0892                     	;# 
  1036  0893                     	;# 
  1037  0893                     	;# 
  1038  0893                     	;# 
  1039  0893                     	;# 
  1040  0893                     	;# 
  1041  0893                     	;# 
  1042  0894                     	;# 
  1043  0894                     	;# 
  1044  0894                     	;# 
  1045  0895                     	;# 
  1046  0895                     	;# 
  1047  0895                     	;# 
  1048  0896                     	;# 
  1049  0896                     	;# 
  1050  0896                     	;# 
  1051  089B                     	;# 
  1052  0911                     	;# 
  1053  0912                     	;# 
  1054  0913                     	;# 
  1055  0914                     	;# 
  1056  0915                     	;# 
  1057  0916                     	;# 
  1058  0918                     	;# 
  1059  0919                     	;# 
  1060  091A                     	;# 
  1061  091B                     	;# 
  1062  091C                     	;# 
  1063  091D                     	;# 
  1064  091E                     	;# 
  1065  091F                     	;# 
  1066  0E0F                     	;# 
  1067  0E10                     	;# 
  1068  0E11                     	;# 
  1069  0E12                     	;# 
  1070  0E13                     	;# 
  1071  0E14                     	;# 
  1072  0E15                     	;# 
  1073  0E16                     	;# 
  1074  0E17                     	;# 
  1075  0E18                     	;# 
  1076  0E19                     	;# 
  1077  0E1A                     	;# 
  1078  0E1B                     	;# 
  1079  0E1C                     	;# 
  1080  0E1D                     	;# 
  1081  0E1E                     	;# 
  1082  0E1F                     	;# 
  1083  0E20                     	;# 
  1084  0E21                     	;# 
  1085  0E22                     	;# 
  1086  0E24                     	;# 
  1087  0E25                     	;# 
  1088  0E28                     	;# 
  1089  0E29                     	;# 
  1090  0E2A                     	;# 
  1091  0E2B                     	;# 
  1092  0E2C                     	;# 
  1093  0E2D                     	;# 
  1094  0E2E                     	;# 
  1095  0E2F                     	;# 
  1096  0E90                     	;# 
  1097  0E91                     	;# 
  1098  0E92                     	;# 
  1099  0E94                     	;# 
  1100  0E95                     	;# 
  1101  0E9C                     	;# 
  1102  0E9D                     	;# 
  1103  0E9E                     	;# 
  1104  0E9F                     	;# 
  1105  0EA0                     	;# 
  1106  0EA1                     	;# 
  1107  0EA2                     	;# 
  1108  0EA3                     	;# 
  1109  0EA4                     	;# 
  1110  0EA5                     	;# 
  1111  0EA6                     	;# 
  1112  0EA7                     	;# 
  1113  0F0F                     	;# 
  1114  0F10                     	;# 
  1115  0F11                     	;# 
  1116  0F12                     	;# 
  1117  0F13                     	;# 
  1118  0F14                     	;# 
  1119  0F15                     	;# 
  1120  0F16                     	;# 
  1121  0F17                     	;# 
  1122  0F18                     	;# 
  1123  0F19                     	;# 
  1124  0F1A                     	;# 
  1125  0F1B                     	;# 
  1126  0F1C                     	;# 
  1127  0F1D                     	;# 
  1128  0F1E                     	;# 
  1129  0F1F                     	;# 
  1130  0F20                     	;# 
  1131  0F21                     	;# 
  1132  0F22                     	;# 
  1133  0F23                     	;# 
  1134  0F24                     	;# 
  1135  0F25                     	;# 
  1136  0F26                     	;# 
  1137  0F27                     	;# 
  1138  0F28                     	;# 
  1139  0F29                     	;# 
  1140  0F2A                     	;# 
  1141  0F2B                     	;# 
  1142  0F2C                     	;# 
  1143  0F2D                     	;# 
  1144  0F2E                     	;# 
  1145  0F2F                     	;# 
  1146  0F30                     	;# 
  1147  0F31                     	;# 
  1148  0F32                     	;# 
  1149  0F33                     	;# 
  1150  0F34                     	;# 
  1151  0F35                     	;# 
  1152  0F36                     	;# 
  1153  0F37                     	;# 
  1154  0FE4                     	;# 
  1155  0FE5                     	;# 
  1156  0FE6                     	;# 
  1157  0FE7                     	;# 
  1158  0FE8                     	;# 
  1159  0FE9                     	;# 
  1160  0FEA                     	;# 
  1161  0FEB                     	;# 
  1162  0FED                     	;# 
  1163  0FEE                     	;# 
  1164  0FEF                     	;# 
  1165  0000                     	;# 
  1166  0001                     	;# 
  1167  0002                     	;# 
  1168  0003                     	;# 
  1169  0004                     	;# 
  1170  0005                     	;# 
  1171  0006                     	;# 
  1172  0007                     	;# 
  1173  0008                     	;# 
  1174  0009                     	;# 
  1175  000A                     	;# 
  1176  000B                     	;# 
  1177  000C                     	;# 
  1178  000D                     	;# 
  1179  000E                     	;# 
  1180  0010                     	;# 
  1181  0011                     	;# 
  1182  0012                     	;# 
  1183  0013                     	;# 
  1184  0014                     	;# 
  1185  0015                     	;# 
  1186  0015                     	;# 
  1187  0016                     	;# 
  1188  0016                     	;# 
  1189  0017                     	;# 
  1190  0018                     	;# 
  1191  0019                     	;# 
  1192  0019                     	;# 
  1193  001A                     	;# 
  1194  001B                     	;# 
  1195  001C                     	;# 
  1196  001D                     	;# 
  1197  001E                     	;# 
  1198  001F                     	;# 
  1199  008C                     	;# 
  1200  008D                     	;# 
  1201  008E                     	;# 
  1202  0090                     	;# 
  1203  0091                     	;# 
  1204  0092                     	;# 
  1205  0093                     	;# 
  1206  0094                     	;# 
  1207  0097                     	;# 
  1208  009B                     	;# 
  1209  009B                     	;# 
  1210  009C                     	;# 
  1211  009D                     	;# 
  1212  009E                     	;# 
  1213  009F                     	;# 
  1214  010C                     	;# 
  1215  010D                     	;# 
  1216  010E                     	;# 
  1217  0111                     	;# 
  1218  0112                     	;# 
  1219  0113                     	;# 
  1220  0114                     	;# 
  1221  0115                     	;# 
  1222  0116                     	;# 
  1223  0117                     	;# 
  1224  0118                     	;# 
  1225  0119                     	;# 
  1226  018C                     	;# 
  1227  018D                     	;# 
  1228  018E                     	;# 
  1229  0197                     	;# 
  1230  0199                     	;# 
  1231  0199                     	;# 
  1232  0199                     	;# 
  1233  019A                     	;# 
  1234  019A                     	;# 
  1235  019A                     	;# 
  1236  019B                     	;# 
  1237  019B                     	;# 
  1238  019B                     	;# 
  1239  019B                     	;# 
  1240  019B                     	;# 
  1241  019C                     	;# 
  1242  019C                     	;# 
  1243  019C                     	;# 
  1244  019D                     	;# 
  1245  019D                     	;# 
  1246  019D                     	;# 
  1247  019E                     	;# 
  1248  019E                     	;# 
  1249  019E                     	;# 
  1250  019F                     	;# 
  1251  019F                     	;# 
  1252  019F                     	;# 
  1253  019F                     	;# 
  1254  019F                     	;# 
  1255  020C                     	;# 
  1256  020D                     	;# 
  1257  020E                     	;# 
  1258  0211                     	;# 
  1259  0211                     	;# 
  1260  0212                     	;# 
  1261  0212                     	;# 
  1262  0213                     	;# 
  1263  0213                     	;# 
  1264  0214                     	;# 
  1265  0214                     	;# 
  1266  0215                     	;# 
  1267  0215                     	;# 
  1268  0215                     	;# 
  1269  0215                     	;# 
  1270  0216                     	;# 
  1271  0216                     	;# 
  1272  0217                     	;# 
  1273  0217                     	;# 
  1274  0219                     	;# 
  1275  021A                     	;# 
  1276  021B                     	;# 
  1277  021C                     	;# 
  1278  021D                     	;# 
  1279  021D                     	;# 
  1280  021E                     	;# 
  1281  021F                     	;# 
  1282  028C                     	;# 
  1283  028D                     	;# 
  1284  028E                     	;# 
  1285  0291                     	;# 
  1286  0291                     	;# 
  1287  0292                     	;# 
  1288  0293                     	;# 
  1289  0294                     	;# 
  1290  0295                     	;# 
  1291  0295                     	;# 
  1292  0296                     	;# 
  1293  0297                     	;# 
  1294  0298                     	;# 
  1295  029F                     	;# 
  1296  030C                     	;# 
  1297  030D                     	;# 
  1298  030E                     	;# 
  1299  0311                     	;# 
  1300  0311                     	;# 
  1301  0312                     	;# 
  1302  0313                     	;# 
  1303  0314                     	;# 
  1304  0315                     	;# 
  1305  0315                     	;# 
  1306  0316                     	;# 
  1307  0317                     	;# 
  1308  0318                     	;# 
  1309  038C                     	;# 
  1310  038D                     	;# 
  1311  038E                     	;# 
  1312  0391                     	;# 
  1313  0392                     	;# 
  1314  0393                     	;# 
  1315  0394                     	;# 
  1316  0395                     	;# 
  1317  0396                     	;# 
  1318  0397                     	;# 
  1319  0398                     	;# 
  1320  0399                     	;# 
  1321  039A                     	;# 
  1322  039C                     	;# 
  1323  039D                     	;# 
  1324  039E                     	;# 
  1325  039F                     	;# 
  1326  0411                     	;# 
  1327  0411                     	;# 
  1328  0412                     	;# 
  1329  0413                     	;# 
  1330  0414                     	;# 
  1331  0415                     	;# 
  1332  0416                     	;# 
  1333  0417                     	;# 
  1334  0418                     	;# 
  1335  0418                     	;# 
  1336  0419                     	;# 
  1337  041A                     	;# 
  1338  041B                     	;# 
  1339  041C                     	;# 
  1340  041D                     	;# 
  1341  041E                     	;# 
  1342  041F                     	;# 
  1343  0498                     	;# 
  1344  0498                     	;# 
  1345  0499                     	;# 
  1346  049A                     	;# 
  1347  049B                     	;# 
  1348  049B                     	;# 
  1349  049C                     	;# 
  1350  049D                     	;# 
  1351  049E                     	;# 
  1352  049F                     	;# 
  1353  0617                     	;# 
  1354  0618                     	;# 
  1355  0619                     	;# 
  1356  0619                     	;# 
  1357  061A                     	;# 
  1358  061B                     	;# 
  1359  061C                     	;# 
  1360  061C                     	;# 
  1361  061F                     	;# 
  1362  0691                     	;# 
  1363  0692                     	;# 
  1364  0693                     	;# 
  1365  0694                     	;# 
  1366  0695                     	;# 
  1367  0696                     	;# 
  1368  0697                     	;# 
  1369  0698                     	;# 
  1370  0699                     	;# 
  1371  0711                     	;# 
  1372  0712                     	;# 
  1373  0713                     	;# 
  1374  0714                     	;# 
  1375  0715                     	;# 
  1376  0716                     	;# 
  1377  0717                     	;# 
  1378  0718                     	;# 
  1379  0719                     	;# 
  1380  0891                     	;# 
  1381  0891                     	;# 
  1382  0891                     	;# 
  1383  0891                     	;# 
  1384  0891                     	;# 
  1385  0891                     	;# 
  1386  0892                     	;# 
  1387  0892                     	;# 
  1388  0892                     	;# 
  1389  0893                     	;# 
  1390  0893                     	;# 
  1391  0893                     	;# 
  1392  0893                     	;# 
  1393  0893                     	;# 
  1394  0893                     	;# 
  1395  0894                     	;# 
  1396  0894                     	;# 
  1397  0894                     	;# 
  1398  0895                     	;# 
  1399  0895                     	;# 
  1400  0895                     	;# 
  1401  0896                     	;# 
  1402  0896                     	;# 
  1403  0896                     	;# 
  1404  089B                     	;# 
  1405  0911                     	;# 
  1406  0912                     	;# 
  1407  0913                     	;# 
  1408  0914                     	;# 
  1409  0915                     	;# 
  1410  0916                     	;# 
  1411  0918                     	;# 
  1412  0919                     	;# 
  1413  091A                     	;# 
  1414  091B                     	;# 
  1415  091C                     	;# 
  1416  091D                     	;# 
  1417  091E                     	;# 
  1418  091F                     	;# 
  1419  0E0F                     	;# 
  1420  0E10                     	;# 
  1421  0E11                     	;# 
  1422  0E12                     	;# 
  1423  0E13                     	;# 
  1424  0E14                     	;# 
  1425  0E15                     	;# 
  1426  0E16                     	;# 
  1427  0E17                     	;# 
  1428  0E18                     	;# 
  1429  0E19                     	;# 
  1430  0E1A                     	;# 
  1431  0E1B                     	;# 
  1432  0E1C                     	;# 
  1433  0E1D                     	;# 
  1434  0E1E                     	;# 
  1435  0E1F                     	;# 
  1436  0E20                     	;# 
  1437  0E21                     	;# 
  1438  0E22                     	;# 
  1439  0E24                     	;# 
  1440  0E25                     	;# 
  1441  0E28                     	;# 
  1442  0E29                     	;# 
  1443  0E2A                     	;# 
  1444  0E2B                     	;# 
  1445  0E2C                     	;# 
  1446  0E2D                     	;# 
  1447  0E2E                     	;# 
  1448  0E2F                     	;# 
  1449  0E90                     	;# 
  1450  0E91                     	;# 
  1451  0E92                     	;# 
  1452  0E94                     	;# 
  1453  0E95                     	;# 
  1454  0E9C                     	;# 
  1455  0E9D                     	;# 
  1456  0E9E                     	;# 
  1457  0E9F                     	;# 
  1458  0EA0                     	;# 
  1459  0EA1                     	;# 
  1460  0EA2                     	;# 
  1461  0EA3                     	;# 
  1462  0EA4                     	;# 
  1463  0EA5                     	;# 
  1464  0EA6                     	;# 
  1465  0EA7                     	;# 
  1466  0F0F                     	;# 
  1467  0F10                     	;# 
  1468  0F11                     	;# 
  1469  0F12                     	;# 
  1470  0F13                     	;# 
  1471  0F14                     	;# 
  1472  0F15                     	;# 
  1473  0F16                     	;# 
  1474  0F17                     	;# 
  1475  0F18                     	;# 
  1476  0F19                     	;# 
  1477  0F1A                     	;# 
  1478  0F1B                     	;# 
  1479  0F1C                     	;# 
  1480  0F1D                     	;# 
  1481  0F1E                     	;# 
  1482  0F1F                     	;# 
  1483  0F20                     	;# 
  1484  0F21                     	;# 
  1485  0F22                     	;# 
  1486  0F23                     	;# 
  1487  0F24                     	;# 
  1488  0F25                     	;# 
  1489  0F26                     	;# 
  1490  0F27                     	;# 
  1491  0F28                     	;# 
  1492  0F29                     	;# 
  1493  0F2A                     	;# 
  1494  0F2B                     	;# 
  1495  0F2C                     	;# 
  1496  0F2D                     	;# 
  1497  0F2E                     	;# 
  1498  0F2F                     	;# 
  1499  0F30                     	;# 
  1500  0F31                     	;# 
  1501  0F32                     	;# 
  1502  0F33                     	;# 
  1503  0F34                     	;# 
  1504  0F35                     	;# 
  1505  0F36                     	;# 
  1506  0F37                     	;# 
  1507  0FE4                     	;# 
  1508  0FE5                     	;# 
  1509  0FE6                     	;# 
  1510  0FE7                     	;# 
  1511  0FE8                     	;# 
  1512  0FE9                     	;# 
  1513  0FEA                     	;# 
  1514  0FEB                     	;# 
  1515  0FED                     	;# 
  1516  0FEE                     	;# 
  1517  0FEF                     	;# 
  1518  0000                     	;# 
  1519  0001                     	;# 
  1520  0002                     	;# 
  1521  0003                     	;# 
  1522  0004                     	;# 
  1523  0005                     	;# 
  1524  0006                     	;# 
  1525  0007                     	;# 
  1526  0008                     	;# 
  1527  0009                     	;# 
  1528  000A                     	;# 
  1529  000B                     	;# 
  1530  000C                     	;# 
  1531  000D                     	;# 
  1532  000E                     	;# 
  1533  0010                     	;# 
  1534  0011                     	;# 
  1535  0012                     	;# 
  1536  0013                     	;# 
  1537  0014                     	;# 
  1538  0015                     	;# 
  1539  0015                     	;# 
  1540  0016                     	;# 
  1541  0016                     	;# 
  1542  0017                     	;# 
  1543  0018                     	;# 
  1544  0019                     	;# 
  1545  0019                     	;# 
  1546  001A                     	;# 
  1547  001B                     	;# 
  1548  001C                     	;# 
  1549  001D                     	;# 
  1550  001E                     	;# 
  1551  001F                     	;# 
  1552  008C                     	;# 
  1553  008D                     	;# 
  1554  008E                     	;# 
  1555  0090                     	;# 
  1556  0091                     	;# 
  1557  0092                     	;# 
  1558  0093                     	;# 
  1559  0094                     	;# 
  1560  0097                     	;# 
  1561  009B                     	;# 
  1562  009B                     	;# 
  1563  009C                     	;# 
  1564  009D                     	;# 
  1565  009E                     	;# 
  1566  009F                     	;# 
  1567  010C                     	;# 
  1568  010D                     	;# 
  1569  010E                     	;# 
  1570  0111                     	;# 
  1571  0112                     	;# 
  1572  0113                     	;# 
  1573  0114                     	;# 
  1574  0115                     	;# 
  1575  0116                     	;# 
  1576  0117                     	;# 
  1577  0118                     	;# 
  1578  0119                     	;# 
  1579  018C                     	;# 
  1580  018D                     	;# 
  1581  018E                     	;# 
  1582  0197                     	;# 
  1583  0199                     	;# 
  1584  0199                     	;# 
  1585  0199                     	;# 
  1586  019A                     	;# 
  1587  019A                     	;# 
  1588  019A                     	;# 
  1589  019B                     	;# 
  1590  019B                     	;# 
  1591  019B                     	;# 
  1592  019B                     	;# 
  1593  019B                     	;# 
  1594  019C                     	;# 
  1595  019C                     	;# 
  1596  019C                     	;# 
  1597  019D                     	;# 
  1598  019D                     	;# 
  1599  019D                     	;# 
  1600  019E                     	;# 
  1601  019E                     	;# 
  1602  019E                     	;# 
  1603  019F                     	;# 
  1604  019F                     	;# 
  1605  019F                     	;# 
  1606  019F                     	;# 
  1607  019F                     	;# 
  1608  020C                     	;# 
  1609  020D                     	;# 
  1610  020E                     	;# 
  1611  0211                     	;# 
  1612  0211                     	;# 
  1613  0212                     	;# 
  1614  0212                     	;# 
  1615  0213                     	;# 
  1616  0213                     	;# 
  1617  0214                     	;# 
  1618  0214                     	;# 
  1619  0215                     	;# 
  1620  0215                     	;# 
  1621  0215                     	;# 
  1622  0215                     	;# 
  1623  0216                     	;# 
  1624  0216                     	;# 
  1625  0217                     	;# 
  1626  0217                     	;# 
  1627  0219                     	;# 
  1628  021A                     	;# 
  1629  021B                     	;# 
  1630  021C                     	;# 
  1631  021D                     	;# 
  1632  021D                     	;# 
  1633  021E                     	;# 
  1634  021F                     	;# 
  1635  028C                     	;# 
  1636  028D                     	;# 
  1637  028E                     	;# 
  1638  0291                     	;# 
  1639  0291                     	;# 
  1640  0292                     	;# 
  1641  0293                     	;# 
  1642  0294                     	;# 
  1643  0295                     	;# 
  1644  0295                     	;# 
  1645  0296                     	;# 
  1646  0297                     	;# 
  1647  0298                     	;# 
  1648  029F                     	;# 
  1649  030C                     	;# 
  1650  030D                     	;# 
  1651  030E                     	;# 
  1652  0311                     	;# 
  1653  0311                     	;# 
  1654  0312                     	;# 
  1655  0313                     	;# 
  1656  0314                     	;# 
  1657  0315                     	;# 
  1658  0315                     	;# 
  1659  0316                     	;# 
  1660  0317                     	;# 
  1661  0318                     	;# 
  1662  038C                     	;# 
  1663  038D                     	;# 
  1664  038E                     	;# 
  1665  0391                     	;# 
  1666  0392                     	;# 
  1667  0393                     	;# 
  1668  0394                     	;# 
  1669  0395                     	;# 
  1670  0396                     	;# 
  1671  0397                     	;# 
  1672  0398                     	;# 
  1673  0399                     	;# 
  1674  039A                     	;# 
  1675  039C                     	;# 
  1676  039D                     	;# 
  1677  039E                     	;# 
  1678  039F                     	;# 
  1679  0411                     	;# 
  1680  0411                     	;# 
  1681  0412                     	;# 
  1682  0413                     	;# 
  1683  0414                     	;# 
  1684  0415                     	;# 
  1685  0416                     	;# 
  1686  0417                     	;# 
  1687  0418                     	;# 
  1688  0418                     	;# 
  1689  0419                     	;# 
  1690  041A                     	;# 
  1691  041B                     	;# 
  1692  041C                     	;# 
  1693  041D                     	;# 
  1694  041E                     	;# 
  1695  041F                     	;# 
  1696  0498                     	;# 
  1697  0498                     	;# 
  1698  0499                     	;# 
  1699  049A                     	;# 
  1700  049B                     	;# 
  1701  049B                     	;# 
  1702  049C                     	;# 
  1703  049D                     	;# 
  1704  049E                     	;# 
  1705  049F                     	;# 
  1706  0617                     	;# 
  1707  0618                     	;# 
  1708  0619                     	;# 
  1709  0619                     	;# 
  1710  061A                     	;# 
  1711  061B                     	;# 
  1712  061C                     	;# 
  1713  061C                     	;# 
  1714  061F                     	;# 
  1715  0691                     	;# 
  1716  0692                     	;# 
  1717  0693                     	;# 
  1718  0694                     	;# 
  1719  0695                     	;# 
  1720  0696                     	;# 
  1721  0697                     	;# 
  1722  0698                     	;# 
  1723  0699                     	;# 
  1724  0711                     	;# 
  1725  0712                     	;# 
  1726  0713                     	;# 
  1727  0714                     	;# 
  1728  0715                     	;# 
  1729  0716                     	;# 
  1730  0717                     	;# 
  1731  0718                     	;# 
  1732  0719                     	;# 
  1733  0891                     	;# 
  1734  0891                     	;# 
  1735  0891                     	;# 
  1736  0891                     	;# 
  1737  0891                     	;# 
  1738  0891                     	;# 
  1739  0892                     	;# 
  1740  0892                     	;# 
  1741  0892                     	;# 
  1742  0893                     	;# 
  1743  0893                     	;# 
  1744  0893                     	;# 
  1745  0893                     	;# 
  1746  0893                     	;# 
  1747  0893                     	;# 
  1748  0894                     	;# 
  1749  0894                     	;# 
  1750  0894                     	;# 
  1751  0895                     	;# 
  1752  0895                     	;# 
  1753  0895                     	;# 
  1754  0896                     	;# 
  1755  0896                     	;# 
  1756  0896                     	;# 
  1757  089B                     	;# 
  1758  0911                     	;# 
  1759  0912                     	;# 
  1760  0913                     	;# 
  1761  0914                     	;# 
  1762  0915                     	;# 
  1763  0916                     	;# 
  1764  0918                     	;# 
  1765  0919                     	;# 
  1766  091A                     	;# 
  1767  091B                     	;# 
  1768  091C                     	;# 
  1769  091D                     	;# 
  1770  091E                     	;# 
  1771  091F                     	;# 
  1772  0E0F                     	;# 
  1773  0E10                     	;# 
  1774  0E11                     	;# 
  1775  0E12                     	;# 
  1776  0E13                     	;# 
  1777  0E14                     	;# 
  1778  0E15                     	;# 
  1779  0E16                     	;# 
  1780  0E17                     	;# 
  1781  0E18                     	;# 
  1782  0E19                     	;# 
  1783  0E1A                     	;# 
  1784  0E1B                     	;# 
  1785  0E1C                     	;# 
  1786  0E1D                     	;# 
  1787  0E1E                     	;# 
  1788  0E1F                     	;# 
  1789  0E20                     	;# 
  1790  0E21                     	;# 
  1791  0E22                     	;# 
  1792  0E24                     	;# 
  1793  0E25                     	;# 
  1794  0E28                     	;# 
  1795  0E29                     	;# 
  1796  0E2A                     	;# 
  1797  0E2B                     	;# 
  1798  0E2C                     	;# 
  1799  0E2D                     	;# 
  1800  0E2E                     	;# 
  1801  0E2F                     	;# 
  1802  0E90                     	;# 
  1803  0E91                     	;# 
  1804  0E92                     	;# 
  1805  0E94                     	;# 
  1806  0E95                     	;# 
  1807  0E9C                     	;# 
  1808  0E9D                     	;# 
  1809  0E9E                     	;# 
  1810  0E9F                     	;# 
  1811  0EA0                     	;# 
  1812  0EA1                     	;# 
  1813  0EA2                     	;# 
  1814  0EA3                     	;# 
  1815  0EA4                     	;# 
  1816  0EA5                     	;# 
  1817  0EA6                     	;# 
  1818  0EA7                     	;# 
  1819  0F0F                     	;# 
  1820  0F10                     	;# 
  1821  0F11                     	;# 
  1822  0F12                     	;# 
  1823  0F13                     	;# 
  1824  0F14                     	;# 
  1825  0F15                     	;# 
  1826  0F16                     	;# 
  1827  0F17                     	;# 
  1828  0F18                     	;# 
  1829  0F19                     	;# 
  1830  0F1A                     	;# 
  1831  0F1B                     	;# 
  1832  0F1C                     	;# 
  1833  0F1D                     	;# 
  1834  0F1E                     	;# 
  1835  0F1F                     	;# 
  1836  0F20                     	;# 
  1837  0F21                     	;# 
  1838  0F22                     	;# 
  1839  0F23                     	;# 
  1840  0F24                     	;# 
  1841  0F25                     	;# 
  1842  0F26                     	;# 
  1843  0F27                     	;# 
  1844  0F28                     	;# 
  1845  0F29                     	;# 
  1846  0F2A                     	;# 
  1847  0F2B                     	;# 
  1848  0F2C                     	;# 
  1849  0F2D                     	;# 
  1850  0F2E                     	;# 
  1851  0F2F                     	;# 
  1852  0F30                     	;# 
  1853  0F31                     	;# 
  1854  0F32                     	;# 
  1855  0F33                     	;# 
  1856  0F34                     	;# 
  1857  0F35                     	;# 
  1858  0F36                     	;# 
  1859  0F37                     	;# 
  1860  0FE4                     	;# 
  1861  0FE5                     	;# 
  1862  0FE6                     	;# 
  1863  0FE7                     	;# 
  1864  0FE8                     	;# 
  1865  0FE9                     	;# 
  1866  0FEA                     	;# 
  1867  0FEB                     	;# 
  1868  0FED                     	;# 
  1869  0FEE                     	;# 
  1870  0FEF                     	;# 
  1871  0000                     	;# 
  1872  0001                     	;# 
  1873  0002                     	;# 
  1874  0003                     	;# 
  1875  0004                     	;# 
  1876  0005                     	;# 
  1877  0006                     	;# 
  1878  0007                     	;# 
  1879  0008                     	;# 
  1880  0009                     	;# 
  1881  000A                     	;# 
  1882  000B                     	;# 
  1883  000C                     	;# 
  1884  000D                     	;# 
  1885  000E                     	;# 
  1886  0010                     	;# 
  1887  0011                     	;# 
  1888  0012                     	;# 
  1889  0013                     	;# 
  1890  0014                     	;# 
  1891  0015                     	;# 
  1892  0015                     	;# 
  1893  0016                     	;# 
  1894  0016                     	;# 
  1895  0017                     	;# 
  1896  0018                     	;# 
  1897  0019                     	;# 
  1898  0019                     	;# 
  1899  001A                     	;# 
  1900  001B                     	;# 
  1901  001C                     	;# 
  1902  001D                     	;# 
  1903  001E                     	;# 
  1904  001F                     	;# 
  1905  008C                     	;# 
  1906  008D                     	;# 
  1907  008E                     	;# 
  1908  0090                     	;# 
  1909  0091                     	;# 
  1910  0092                     	;# 
  1911  0093                     	;# 
  1912  0094                     	;# 
  1913  0097                     	;# 
  1914  009B                     	;# 
  1915  009B                     	;# 
  1916  009C                     	;# 
  1917  009D                     	;# 
  1918  009E                     	;# 
  1919  009F                     	;# 
  1920  010C                     	;# 
  1921  010D                     	;# 
  1922  010E                     	;# 
  1923  0111                     	;# 
  1924  0112                     	;# 
  1925  0113                     	;# 
  1926  0114                     	;# 
  1927  0115                     	;# 
  1928  0116                     	;# 
  1929  0117                     	;# 
  1930  0118                     	;# 
  1931  0119                     	;# 
  1932  018C                     	;# 
  1933  018D                     	;# 
  1934  018E                     	;# 
  1935  0197                     	;# 
  1936  0199                     	;# 
  1937  0199                     	;# 
  1938  0199                     	;# 
  1939  019A                     	;# 
  1940  019A                     	;# 
  1941  019A                     	;# 
  1942  019B                     	;# 
  1943  019B                     	;# 
  1944  019B                     	;# 
  1945  019B                     	;# 
  1946  019B                     	;# 
  1947  019C                     	;# 
  1948  019C                     	;# 
  1949  019C                     	;# 
  1950  019D                     	;# 
  1951  019D                     	;# 
  1952  019D                     	;# 
  1953  019E                     	;# 
  1954  019E                     	;# 
  1955  019E                     	;# 
  1956  019F                     	;# 
  1957  019F                     	;# 
  1958  019F                     	;# 
  1959  019F                     	;# 
  1960  019F                     	;# 
  1961  020C                     	;# 
  1962  020D                     	;# 
  1963  020E                     	;# 
  1964  0211                     	;# 
  1965  0211                     	;# 
  1966  0212                     	;# 
  1967  0212                     	;# 
  1968  0213                     	;# 
  1969  0213                     	;# 
  1970  0214                     	;# 
  1971  0214                     	;# 
  1972  0215                     	;# 
  1973  0215                     	;# 
  1974  0215                     	;# 
  1975  0215                     	;# 
  1976  0216                     	;# 
  1977  0216                     	;# 
  1978  0217                     	;# 
  1979  0217                     	;# 
  1980  0219                     	;# 
  1981  021A                     	;# 
  1982  021B                     	;# 
  1983  021C                     	;# 
  1984  021D                     	;# 
  1985  021D                     	;# 
  1986  021E                     	;# 
  1987  021F                     	;# 
  1988  028C                     	;# 
  1989  028D                     	;# 
  1990  028E                     	;# 
  1991  0291                     	;# 
  1992  0291                     	;# 
  1993  0292                     	;# 
  1994  0293                     	;# 
  1995  0294                     	;# 
  1996  0295                     	;# 
  1997  0295                     	;# 
  1998  0296                     	;# 
  1999  0297                     	;# 
  2000  0298                     	;# 
  2001  029F                     	;# 
  2002  030C                     	;# 
  2003  030D                     	;# 
  2004  030E                     	;# 
  2005  0311                     	;# 
  2006  0311                     	;# 
  2007  0312                     	;# 
  2008  0313                     	;# 
  2009  0314                     	;# 
  2010  0315                     	;# 
  2011  0315                     	;# 
  2012  0316                     	;# 
  2013  0317                     	;# 
  2014  0318                     	;# 
  2015  038C                     	;# 
  2016  038D                     	;# 
  2017  038E                     	;# 
  2018  0391                     	;# 
  2019  0392                     	;# 
  2020  0393                     	;# 
  2021  0394                     	;# 
  2022  0395                     	;# 
  2023  0396                     	;# 
  2024  0397                     	;# 
  2025  0398                     	;# 
  2026  0399                     	;# 
  2027  039A                     	;# 
  2028  039C                     	;# 
  2029  039D                     	;# 
  2030  039E                     	;# 
  2031  039F                     	;# 
  2032  0411                     	;# 
  2033  0411                     	;# 
  2034  0412                     	;# 
  2035  0413                     	;# 
  2036  0414                     	;# 
  2037  0415                     	;# 
  2038  0416                     	;# 
  2039  0417                     	;# 
  2040  0418                     	;# 
  2041  0418                     	;# 
  2042  0419                     	;# 
  2043  041A                     	;# 
  2044  041B                     	;# 
  2045  041C                     	;# 
  2046  041D                     	;# 
  2047  041E                     	;# 
  2048  041F                     	;# 
  2049  0498                     	;# 
  2050  0498                     	;# 
  2051  0499                     	;# 
  2052  049A                     	;# 
  2053  049B                     	;# 
  2054  049B                     	;# 
  2055  049C                     	;# 
  2056  049D                     	;# 
  2057  049E                     	;# 
  2058  049F                     	;# 
  2059  0617                     	;# 
  2060  0618                     	;# 
  2061  0619                     	;# 
  2062  0619                     	;# 
  2063  061A                     	;# 
  2064  061B                     	;# 
  2065  061C                     	;# 
  2066  061C                     	;# 
  2067  061F                     	;# 
  2068  0691                     	;# 
  2069  0692                     	;# 
  2070  0693                     	;# 
  2071  0694                     	;# 
  2072  0695                     	;# 
  2073  0696                     	;# 
  2074  0697                     	;# 
  2075  0698                     	;# 
  2076  0699                     	;# 
  2077  0711                     	;# 
  2078  0712                     	;# 
  2079  0713                     	;# 
  2080  0714                     	;# 
  2081  0715                     	;# 
  2082  0716                     	;# 
  2083  0717                     	;# 
  2084  0718                     	;# 
  2085  0719                     	;# 
  2086  0891                     	;# 
  2087  0891                     	;# 
  2088  0891                     	;# 
  2089  0891                     	;# 
  2090  0891                     	;# 
  2091  0891                     	;# 
  2092  0892                     	;# 
  2093  0892                     	;# 
  2094  0892                     	;# 
  2095  0893                     	;# 
  2096  0893                     	;# 
  2097  0893                     	;# 
  2098  0893                     	;# 
  2099  0893                     	;# 
  2100  0893                     	;# 
  2101  0894                     	;# 
  2102  0894                     	;# 
  2103  0894                     	;# 
  2104  0895                     	;# 
  2105  0895                     	;# 
  2106  0895                     	;# 
  2107  0896                     	;# 
  2108  0896                     	;# 
  2109  0896                     	;# 
  2110  089B                     	;# 
  2111  0911                     	;# 
  2112  0912                     	;# 
  2113  0913                     	;# 
  2114  0914                     	;# 
  2115  0915                     	;# 
  2116  0916                     	;# 
  2117  0918                     	;# 
  2118  0919                     	;# 
  2119  091A                     	;# 
  2120  091B                     	;# 
  2121  091C                     	;# 
  2122  091D                     	;# 
  2123  091E                     	;# 
  2124  091F                     	;# 
  2125  0E0F                     	;# 
  2126  0E10                     	;# 
  2127  0E11                     	;# 
  2128  0E12                     	;# 
  2129  0E13                     	;# 
  2130  0E14                     	;# 
  2131  0E15                     	;# 
  2132  0E16                     	;# 
  2133  0E17                     	;# 
  2134  0E18                     	;# 
  2135  0E19                     	;# 
  2136  0E1A                     	;# 
  2137  0E1B                     	;# 
  2138  0E1C                     	;# 
  2139  0E1D                     	;# 
  2140  0E1E                     	;# 
  2141  0E1F                     	;# 
  2142  0E20                     	;# 
  2143  0E21                     	;# 
  2144  0E22                     	;# 
  2145  0E24                     	;# 
  2146  0E25                     	;# 
  2147  0E28                     	;# 
  2148  0E29                     	;# 
  2149  0E2A                     	;# 
  2150  0E2B                     	;# 
  2151  0E2C                     	;# 
  2152  0E2D                     	;# 
  2153  0E2E                     	;# 
  2154  0E2F                     	;# 
  2155  0E90                     	;# 
  2156  0E91                     	;# 
  2157  0E92                     	;# 
  2158  0E94                     	;# 
  2159  0E95                     	;# 
  2160  0E9C                     	;# 
  2161  0E9D                     	;# 
  2162  0E9E                     	;# 
  2163  0E9F                     	;# 
  2164  0EA0                     	;# 
  2165  0EA1                     	;# 
  2166  0EA2                     	;# 
  2167  0EA3                     	;# 
  2168  0EA4                     	;# 
  2169  0EA5                     	;# 
  2170  0EA6                     	;# 
  2171  0EA7                     	;# 
  2172  0F0F                     	;# 
  2173  0F10                     	;# 
  2174  0F11                     	;# 
  2175  0F12                     	;# 
  2176  0F13                     	;# 
  2177  0F14                     	;# 
  2178  0F15                     	;# 
  2179  0F16                     	;# 
  2180  0F17                     	;# 
  2181  0F18                     	;# 
  2182  0F19                     	;# 
  2183  0F1A                     	;# 
  2184  0F1B                     	;# 
  2185  0F1C                     	;# 
  2186  0F1D                     	;# 
  2187  0F1E                     	;# 
  2188  0F1F                     	;# 
  2189  0F20                     	;# 
  2190  0F21                     	;# 
  2191  0F22                     	;# 
  2192  0F23                     	;# 
  2193  0F24                     	;# 
  2194  0F25                     	;# 
  2195  0F26                     	;# 
  2196  0F27                     	;# 
  2197  0F28                     	;# 
  2198  0F29                     	;# 
  2199  0F2A                     	;# 
  2200  0F2B                     	;# 
  2201  0F2C                     	;# 
  2202  0F2D                     	;# 
  2203  0F2E                     	;# 
  2204  0F2F                     	;# 
  2205  0F30                     	;# 
  2206  0F31                     	;# 
  2207  0F32                     	;# 
  2208  0F33                     	;# 
  2209  0F34                     	;# 
  2210  0F35                     	;# 
  2211  0F36                     	;# 
  2212  0F37                     	;# 
  2213  0FE4                     	;# 
  2214  0FE5                     	;# 
  2215  0FE6                     	;# 
  2216  0FE7                     	;# 
  2217  0FE8                     	;# 
  2218  0FE9                     	;# 
  2219  0FEA                     	;# 
  2220  0FEB                     	;# 
  2221  0FED                     	;# 
  2222  0FEE                     	;# 
  2223  0FEF                     	;# 
  2224  0000                     	;# 
  2225  0001                     	;# 
  2226  0002                     	;# 
  2227  0003                     	;# 
  2228  0004                     	;# 
  2229  0005                     	;# 
  2230  0006                     	;# 
  2231  0007                     	;# 
  2232  0008                     	;# 
  2233  0009                     	;# 
  2234  000A                     	;# 
  2235  000B                     	;# 
  2236  000C                     	;# 
  2237  000D                     	;# 
  2238  000E                     	;# 
  2239  0010                     	;# 
  2240  0011                     	;# 
  2241  0012                     	;# 
  2242  0013                     	;# 
  2243  0014                     	;# 
  2244  0015                     	;# 
  2245  0015                     	;# 
  2246  0016                     	;# 
  2247  0016                     	;# 
  2248  0017                     	;# 
  2249  0018                     	;# 
  2250  0019                     	;# 
  2251  0019                     	;# 
  2252  001A                     	;# 
  2253  001B                     	;# 
  2254  001C                     	;# 
  2255  001D                     	;# 
  2256  001E                     	;# 
  2257  001F                     	;# 
  2258  008C                     	;# 
  2259  008D                     	;# 
  2260  008E                     	;# 
  2261  0090                     	;# 
  2262  0091                     	;# 
  2263  0092                     	;# 
  2264  0093                     	;# 
  2265  0094                     	;# 
  2266  0097                     	;# 
  2267  009B                     	;# 
  2268  009B                     	;# 
  2269  009C                     	;# 
  2270  009D                     	;# 
  2271  009E                     	;# 
  2272  009F                     	;# 
  2273  010C                     	;# 
  2274  010D                     	;# 
  2275  010E                     	;# 
  2276  0111                     	;# 
  2277  0112                     	;# 
  2278  0113                     	;# 
  2279  0114                     	;# 
  2280  0115                     	;# 
  2281  0116                     	;# 
  2282  0117                     	;# 
  2283  0118                     	;# 
  2284  0119                     	;# 
  2285  018C                     	;# 
  2286  018D                     	;# 
  2287  018E                     	;# 
  2288  0197                     	;# 
  2289  0199                     	;# 
  2290  0199                     	;# 
  2291  0199                     	;# 
  2292  019A                     	;# 
  2293  019A                     	;# 
  2294  019A                     	;# 
  2295  019B                     	;# 
  2296  019B                     	;# 
  2297  019B                     	;# 
  2298  019B                     	;# 
  2299  019B                     	;# 
  2300  019C                     	;# 
  2301  019C                     	;# 
  2302  019C                     	;# 
  2303  019D                     	;# 
  2304  019D                     	;# 
  2305  019D                     	;# 
  2306  019E                     	;# 
  2307  019E                     	;# 
  2308  019E                     	;# 
  2309  019F                     	;# 
  2310  019F                     	;# 
  2311  019F                     	;# 
  2312  019F                     	;# 
  2313  019F                     	;# 
  2314  020C                     	;# 
  2315  020D                     	;# 
  2316  020E                     	;# 
  2317  0211                     	;# 
  2318  0211                     	;# 
  2319  0212                     	;# 
  2320  0212                     	;# 
  2321  0213                     	;# 
  2322  0213                     	;# 
  2323  0214                     	;# 
  2324  0214                     	;# 
  2325  0215                     	;# 
  2326  0215                     	;# 
  2327  0215                     	;# 
  2328  0215                     	;# 
  2329  0216                     	;# 
  2330  0216                     	;# 
  2331  0217                     	;# 
  2332  0217                     	;# 
  2333  0219                     	;# 
  2334  021A                     	;# 
  2335  021B                     	;# 
  2336  021C                     	;# 
  2337  021D                     	;# 
  2338  021D                     	;# 
  2339  021E                     	;# 
  2340  021F                     	;# 
  2341  028C                     	;# 
  2342  028D                     	;# 
  2343  028E                     	;# 
  2344  0291                     	;# 
  2345  0291                     	;# 
  2346  0292                     	;# 
  2347  0293                     	;# 
  2348  0294                     	;# 
  2349  0295                     	;# 
  2350  0295                     	;# 
  2351  0296                     	;# 
  2352  0297                     	;# 
  2353  0298                     	;# 
  2354  029F                     	;# 
  2355  030C                     	;# 
  2356  030D                     	;# 
  2357  030E                     	;# 
  2358  0311                     	;# 
  2359  0311                     	;# 
  2360  0312                     	;# 
  2361  0313                     	;# 
  2362  0314                     	;# 
  2363  0315                     	;# 
  2364  0315                     	;# 
  2365  0316                     	;# 
  2366  0317                     	;# 
  2367  0318                     	;# 
  2368  038C                     	;# 
  2369  038D                     	;# 
  2370  038E                     	;# 
  2371  0391                     	;# 
  2372  0392                     	;# 
  2373  0393                     	;# 
  2374  0394                     	;# 
  2375  0395                     	;# 
  2376  0396                     	;# 
  2377  0397                     	;# 
  2378  0398                     	;# 
  2379  0399                     	;# 
  2380  039A                     	;# 
  2381  039C                     	;# 
  2382  039D                     	;# 
  2383  039E                     	;# 
  2384  039F                     	;# 
  2385  0411                     	;# 
  2386  0411                     	;# 
  2387  0412                     	;# 
  2388  0413                     	;# 
  2389  0414                     	;# 
  2390  0415                     	;# 
  2391  0416                     	;# 
  2392  0417                     	;# 
  2393  0418                     	;# 
  2394  0418                     	;# 
  2395  0419                     	;# 
  2396  041A                     	;# 
  2397  041B                     	;# 
  2398  041C                     	;# 
  2399  041D                     	;# 
  2400  041E                     	;# 
  2401  041F                     	;# 
  2402  0498                     	;# 
  2403  0498                     	;# 
  2404  0499                     	;# 
  2405  049A                     	;# 
  2406  049B                     	;# 
  2407  049B                     	;# 
  2408  049C                     	;# 
  2409  049D                     	;# 
  2410  049E                     	;# 
  2411  049F                     	;# 
  2412  0617                     	;# 
  2413  0618                     	;# 
  2414  0619                     	;# 
  2415  0619                     	;# 
  2416  061A                     	;# 
  2417  061B                     	;# 
  2418  061C                     	;# 
  2419  061C                     	;# 
  2420  061F                     	;# 
  2421  0691                     	;# 
  2422  0692                     	;# 
  2423  0693                     	;# 
  2424  0694                     	;# 
  2425  0695                     	;# 
  2426  0696                     	;# 
  2427  0697                     	;# 
  2428  0698                     	;# 
  2429  0699                     	;# 
  2430  0711                     	;# 
  2431  0712                     	;# 
  2432  0713                     	;# 
  2433  0714                     	;# 
  2434  0715                     	;# 
  2435  0716                     	;# 
  2436  0717                     	;# 
  2437  0718                     	;# 
  2438  0719                     	;# 
  2439  0891                     	;# 
  2440  0891                     	;# 
  2441  0891                     	;# 
  2442  0891                     	;# 
  2443  0891                     	;# 
  2444  0891                     	;# 
  2445  0892                     	;# 
  2446  0892                     	;# 
  2447  0892                     	;# 
  2448  0893                     	;# 
  2449  0893                     	;# 
  2450  0893                     	;# 
  2451  0893                     	;# 
  2452  0893                     	;# 
  2453  0893                     	;# 
  2454  0894                     	;# 
  2455  0894                     	;# 
  2456  0894                     	;# 
  2457  0895                     	;# 
  2458  0895                     	;# 
  2459  0895                     	;# 
  2460  0896                     	;# 
  2461  0896                     	;# 
  2462  0896                     	;# 
  2463  089B                     	;# 
  2464  0911                     	;# 
  2465  0912                     	;# 
  2466  0913                     	;# 
  2467  0914                     	;# 
  2468  0915                     	;# 
  2469  0916                     	;# 
  2470  0918                     	;# 
  2471  0919                     	;# 
  2472  091A                     	;# 
  2473  091B                     	;# 
  2474  091C                     	;# 
  2475  091D                     	;# 
  2476  091E                     	;# 
  2477  091F                     	;# 
  2478  0E0F                     	;# 
  2479  0E10                     	;# 
  2480  0E11                     	;# 
  2481  0E12                     	;# 
  2482  0E13                     	;# 
  2483  0E14                     	;# 
  2484  0E15                     	;# 
  2485  0E16                     	;# 
  2486  0E17                     	;# 
  2487  0E18                     	;# 
  2488  0E19                     	;# 
  2489  0E1A                     	;# 
  2490  0E1B                     	;# 
  2491  0E1C                     	;# 
  2492  0E1D                     	;# 
  2493  0E1E                     	;# 
  2494  0E1F                     	;# 
  2495  0E20                     	;# 
  2496  0E21                     	;# 
  2497  0E22                     	;# 
  2498  0E24                     	;# 
  2499  0E25                     	;# 
  2500  0E28                     	;# 
  2501  0E29                     	;# 
  2502  0E2A                     	;# 
  2503  0E2B                     	;# 
  2504  0E2C                     	;# 
  2505  0E2D                     	;# 
  2506  0E2E                     	;# 
  2507  0E2F                     	;# 
  2508  0E90                     	;# 
  2509  0E91                     	;# 
  2510  0E92                     	;# 
  2511  0E94                     	;# 
  2512  0E95                     	;# 
  2513  0E9C                     	;# 
  2514  0E9D                     	;# 
  2515  0E9E                     	;# 
  2516  0E9F                     	;# 
  2517  0EA0                     	;# 
  2518  0EA1                     	;# 
  2519  0EA2                     	;# 
  2520  0EA3                     	;# 
  2521  0EA4                     	;# 
  2522  0EA5                     	;# 
  2523  0EA6                     	;# 
  2524  0EA7                     	;# 
  2525  0F0F                     	;# 
  2526  0F10                     	;# 
  2527  0F11                     	;# 
  2528  0F12                     	;# 
  2529  0F13                     	;# 
  2530  0F14                     	;# 
  2531  0F15                     	;# 
  2532  0F16                     	;# 
  2533  0F17                     	;# 
  2534  0F18                     	;# 
  2535  0F19                     	;# 
  2536  0F1A                     	;# 
  2537  0F1B                     	;# 
  2538  0F1C                     	;# 
  2539  0F1D                     	;# 
  2540  0F1E                     	;# 
  2541  0F1F                     	;# 
  2542  0F20                     	;# 
  2543  0F21                     	;# 
  2544  0F22                     	;# 
  2545  0F23                     	;# 
  2546  0F24                     	;# 
  2547  0F25                     	;# 
  2548  0F26                     	;# 
  2549  0F27                     	;# 
  2550  0F28                     	;# 
  2551  0F29                     	;# 
  2552  0F2A                     	;# 
  2553  0F2B                     	;# 
  2554  0F2C                     	;# 
  2555  0F2D                     	;# 
  2556  0F2E                     	;# 
  2557  0F2F                     	;# 
  2558  0F30                     	;# 
  2559  0F31                     	;# 
  2560  0F32                     	;# 
  2561  0F33                     	;# 
  2562  0F34                     	;# 
  2563  0F35                     	;# 
  2564  0F36                     	;# 
  2565  0F37                     	;# 
  2566  0FE4                     	;# 
  2567  0FE5                     	;# 
  2568  0FE6                     	;# 
  2569  0FE7                     	;# 
  2570  0FE8                     	;# 
  2571  0FE9                     	;# 
  2572  0FEA                     	;# 
  2573  0FEB                     	;# 
  2574  0FED                     	;# 
  2575  0FEE                     	;# 
  2576  0FEF                     	;# 
  2577  0000                     	;# 
  2578  0001                     	;# 
  2579  0002                     	;# 
  2580  0003                     	;# 
  2581  0004                     	;# 
  2582  0005                     	;# 
  2583  0006                     	;# 
  2584  0007                     	;# 
  2585  0008                     	;# 
  2586  0009                     	;# 
  2587  000A                     	;# 
  2588  000B                     	;# 
  2589  000C                     	;# 
  2590  000D                     	;# 
  2591  000E                     	;# 
  2592  0010                     	;# 
  2593  0011                     	;# 
  2594  0012                     	;# 
  2595  0013                     	;# 
  2596  0014                     	;# 
  2597  0015                     	;# 
  2598  0015                     	;# 
  2599  0016                     	;# 
  2600  0016                     	;# 
  2601  0017                     	;# 
  2602  0018                     	;# 
  2603  0019                     	;# 
  2604  0019                     	;# 
  2605  001A                     	;# 
  2606  001B                     	;# 
  2607  001C                     	;# 
  2608  001D                     	;# 
  2609  001E                     	;# 
  2610  001F                     	;# 
  2611  008C                     	;# 
  2612  008D                     	;# 
  2613  008E                     	;# 
  2614  0090                     	;# 
  2615  0091                     	;# 
  2616  0092                     	;# 
  2617  0093                     	;# 
  2618  0094                     	;# 
  2619  0097                     	;# 
  2620  009B                     	;# 
  2621  009B                     	;# 
  2622  009C                     	;# 
  2623  009D                     	;# 
  2624  009E                     	;# 
  2625  009F                     	;# 
  2626  010C                     	;# 
  2627  010D                     	;# 
  2628  010E                     	;# 
  2629  0111                     	;# 
  2630  0112                     	;# 
  2631  0113                     	;# 
  2632  0114                     	;# 
  2633  0115                     	;# 
  2634  0116                     	;# 
  2635  0117                     	;# 
  2636  0118                     	;# 
  2637  0119                     	;# 
  2638  018C                     	;# 
  2639  018D                     	;# 
  2640  018E                     	;# 
  2641  0197                     	;# 
  2642  0199                     	;# 
  2643  0199                     	;# 
  2644  0199                     	;# 
  2645  019A                     	;# 
  2646  019A                     	;# 
  2647  019A                     	;# 
  2648  019B                     	;# 
  2649  019B                     	;# 
  2650  019B                     	;# 
  2651  019B                     	;# 
  2652  019B                     	;# 
  2653  019C                     	;# 
  2654  019C                     	;# 
  2655  019C                     	;# 
  2656  019D                     	;# 
  2657  019D                     	;# 
  2658  019D                     	;# 
  2659  019E                     	;# 
  2660  019E                     	;# 
  2661  019E                     	;# 
  2662  019F                     	;# 
  2663  019F                     	;# 
  2664  019F                     	;# 
  2665  019F                     	;# 
  2666  019F                     	;# 
  2667  020C                     	;# 
  2668  020D                     	;# 
  2669  020E                     	;# 
  2670  0211                     	;# 
  2671  0211                     	;# 
  2672  0212                     	;# 
  2673  0212                     	;# 
  2674  0213                     	;# 
  2675  0213                     	;# 
  2676  0214                     	;# 
  2677  0214                     	;# 
  2678  0215                     	;# 
  2679  0215                     	;# 
  2680  0215                     	;# 
  2681  0215                     	;# 
  2682  0216                     	;# 
  2683  0216                     	;# 
  2684  0217                     	;# 
  2685  0217                     	;# 
  2686  0219                     	;# 
  2687  021A                     	;# 
  2688  021B                     	;# 
  2689  021C                     	;# 
  2690  021D                     	;# 
  2691  021D                     	;# 
  2692  021E                     	;# 
  2693  021F                     	;# 
  2694  028C                     	;# 
  2695  028D                     	;# 
  2696  028E                     	;# 
  2697  0291                     	;# 
  2698  0291                     	;# 
  2699  0292                     	;# 
  2700  0293                     	;# 
  2701  0294                     	;# 
  2702  0295                     	;# 
  2703  0295                     	;# 
  2704  0296                     	;# 
  2705  0297                     	;# 
  2706  0298                     	;# 
  2707  029F                     	;# 
  2708  030C                     	;# 
  2709  030D                     	;# 
  2710  030E                     	;# 
  2711  0311                     	;# 
  2712  0311                     	;# 
  2713  0312                     	;# 
  2714  0313                     	;# 
  2715  0314                     	;# 
  2716  0315                     	;# 
  2717  0315                     	;# 
  2718  0316                     	;# 
  2719  0317                     	;# 
  2720  0318                     	;# 
  2721  038C                     	;# 
  2722  038D                     	;# 
  2723  038E                     	;# 
  2724  0391                     	;# 
  2725  0392                     	;# 
  2726  0393                     	;# 
  2727  0394                     	;# 
  2728  0395                     	;# 
  2729  0396                     	;# 
  2730  0397                     	;# 
  2731  0398                     	;# 
  2732  0399                     	;# 
  2733  039A                     	;# 
  2734  039C                     	;# 
  2735  039D                     	;# 
  2736  039E                     	;# 
  2737  039F                     	;# 
  2738  0411                     	;# 
  2739  0411                     	;# 
  2740  0412                     	;# 
  2741  0413                     	;# 
  2742  0414                     	;# 
  2743  0415                     	;# 
  2744  0416                     	;# 
  2745  0417                     	;# 
  2746  0418                     	;# 
  2747  0418                     	;# 
  2748  0419                     	;# 
  2749  041A                     	;# 
  2750  041B                     	;# 
  2751  041C                     	;# 
  2752  041D                     	;# 
  2753  041E                     	;# 
  2754  041F                     	;# 
  2755  0498                     	;# 
  2756  0498                     	;# 
  2757  0499                     	;# 
  2758  049A                     	;# 
  2759  049B                     	;# 
  2760  049B                     	;# 
  2761  049C                     	;# 
  2762  049D                     	;# 
  2763  049E                     	;# 
  2764  049F                     	;# 
  2765  0617                     	;# 
  2766  0618                     	;# 
  2767  0619                     	;# 
  2768  0619                     	;# 
  2769  061A                     	;# 
  2770  061B                     	;# 
  2771  061C                     	;# 
  2772  061C                     	;# 
  2773  061F                     	;# 
  2774  0691                     	;# 
  2775  0692                     	;# 
  2776  0693                     	;# 
  2777  0694                     	;# 
  2778  0695                     	;# 
  2779  0696                     	;# 
  2780  0697                     	;# 
  2781  0698                     	;# 
  2782  0699                     	;# 
  2783  0711                     	;# 
  2784  0712                     	;# 
  2785  0713                     	;# 
  2786  0714                     	;# 
  2787  0715                     	;# 
  2788  0716                     	;# 
  2789  0717                     	;# 
  2790  0718                     	;# 
  2791  0719                     	;# 
  2792  0891                     	;# 
  2793  0891                     	;# 
  2794  0891                     	;# 
  2795  0891                     	;# 
  2796  0891                     	;# 
  2797  0891                     	;# 
  2798  0892                     	;# 
  2799  0892                     	;# 
  2800  0892                     	;# 
  2801  0893                     	;# 
  2802  0893                     	;# 
  2803  0893                     	;# 
  2804  0893                     	;# 
  2805  0893                     	;# 
  2806  0893                     	;# 
  2807  0894                     	;# 
  2808  0894                     	;# 
  2809  0894                     	;# 
  2810  0895                     	;# 
  2811  0895                     	;# 
  2812  0895                     	;# 
  2813  0896                     	;# 
  2814  0896                     	;# 
  2815  0896                     	;# 
  2816  089B                     	;# 
  2817  0911                     	;# 
  2818  0912                     	;# 
  2819  0913                     	;# 
  2820  0914                     	;# 
  2821  0915                     	;# 
  2822  0916                     	;# 
  2823  0918                     	;# 
  2824  0919                     	;# 
  2825  091A                     	;# 
  2826  091B                     	;# 
  2827  091C                     	;# 
  2828  091D                     	;# 
  2829  091E                     	;# 
  2830  091F                     	;# 
  2831  0E0F                     	;# 
  2832  0E10                     	;# 
  2833  0E11                     	;# 
  2834  0E12                     	;# 
  2835  0E13                     	;# 
  2836  0E14                     	;# 
  2837  0E15                     	;# 
  2838  0E16                     	;# 
  2839  0E17                     	;# 
  2840  0E18                     	;# 
  2841  0E19                     	;# 
  2842  0E1A                     	;# 
  2843  0E1B                     	;# 
  2844  0E1C                     	;# 
  2845  0E1D                     	;# 
  2846  0E1E                     	;# 
  2847  0E1F                     	;# 
  2848  0E20                     	;# 
  2849  0E21                     	;# 
  2850  0E22                     	;# 
  2851  0E24                     	;# 
  2852  0E25                     	;# 
  2853  0E28                     	;# 
  2854  0E29                     	;# 
  2855  0E2A                     	;# 
  2856  0E2B                     	;# 
  2857  0E2C                     	;# 
  2858  0E2D                     	;# 
  2859  0E2E                     	;# 
  2860  0E2F                     	;# 
  2861  0E90                     	;# 
  2862  0E91                     	;# 
  2863  0E92                     	;# 
  2864  0E94                     	;# 
  2865  0E95                     	;# 
  2866  0E9C                     	;# 
  2867  0E9D                     	;# 
  2868  0E9E                     	;# 
  2869  0E9F                     	;# 
  2870  0EA0                     	;# 
  2871  0EA1                     	;# 
  2872  0EA2                     	;# 
  2873  0EA3                     	;# 
  2874  0EA4                     	;# 
  2875  0EA5                     	;# 
  2876  0EA6                     	;# 
  2877  0EA7                     	;# 
  2878  0F0F                     	;# 
  2879  0F10                     	;# 
  2880  0F11                     	;# 
  2881  0F12                     	;# 
  2882  0F13                     	;# 
  2883  0F14                     	;# 
  2884  0F15                     	;# 
  2885  0F16                     	;# 
  2886  0F17                     	;# 
  2887  0F18                     	;# 
  2888  0F19                     	;# 
  2889  0F1A                     	;# 
  2890  0F1B                     	;# 
  2891  0F1C                     	;# 
  2892  0F1D                     	;# 
  2893  0F1E                     	;# 
  2894  0F1F                     	;# 
  2895  0F20                     	;# 
  2896  0F21                     	;# 
  2897  0F22                     	;# 
  2898  0F23                     	;# 
  2899  0F24                     	;# 
  2900  0F25                     	;# 
  2901  0F26                     	;# 
  2902  0F27                     	;# 
  2903  0F28                     	;# 
  2904  0F29                     	;# 
  2905  0F2A                     	;# 
  2906  0F2B                     	;# 
  2907  0F2C                     	;# 
  2908  0F2D                     	;# 
  2909  0F2E                     	;# 
  2910  0F2F                     	;# 
  2911  0F30                     	;# 
  2912  0F31                     	;# 
  2913  0F32                     	;# 
  2914  0F33                     	;# 
  2915  0F34                     	;# 
  2916  0F35                     	;# 
  2917  0F36                     	;# 
  2918  0F37                     	;# 
  2919  0FE4                     	;# 
  2920  0FE5                     	;# 
  2921  0FE6                     	;# 
  2922  0FE7                     	;# 
  2923  0FE8                     	;# 
  2924  0FE9                     	;# 
  2925  0FEA                     	;# 
  2926  0FEB                     	;# 
  2927  0FED                     	;# 
  2928  0FEE                     	;# 
  2929  0FEF                     	;# 
  2930  0000                     	;# 
  2931  0001                     	;# 
  2932  0002                     	;# 
  2933  0003                     	;# 
  2934  0004                     	;# 
  2935  0005                     	;# 
  2936  0006                     	;# 
  2937  0007                     	;# 
  2938  0008                     	;# 
  2939  0009                     	;# 
  2940  000A                     	;# 
  2941  000B                     	;# 
  2942  000C                     	;# 
  2943  000D                     	;# 
  2944  000E                     	;# 
  2945  0010                     	;# 
  2946  0011                     	;# 
  2947  0012                     	;# 
  2948  0013                     	;# 
  2949  0014                     	;# 
  2950  0015                     	;# 
  2951  0015                     	;# 
  2952  0016                     	;# 
  2953  0016                     	;# 
  2954  0017                     	;# 
  2955  0018                     	;# 
  2956  0019                     	;# 
  2957  0019                     	;# 
  2958  001A                     	;# 
  2959  001B                     	;# 
  2960  001C                     	;# 
  2961  001D                     	;# 
  2962  001E                     	;# 
  2963  001F                     	;# 
  2964  008C                     	;# 
  2965  008D                     	;# 
  2966  008E                     	;# 
  2967  0090                     	;# 
  2968  0091                     	;# 
  2969  0092                     	;# 
  2970  0093                     	;# 
  2971  0094                     	;# 
  2972  0097                     	;# 
  2973  009B                     	;# 
  2974  009B                     	;# 
  2975  009C                     	;# 
  2976  009D                     	;# 
  2977  009E                     	;# 
  2978  009F                     	;# 
  2979  010C                     	;# 
  2980  010D                     	;# 
  2981  010E                     	;# 
  2982  0111                     	;# 
  2983  0112                     	;# 
  2984  0113                     	;# 
  2985  0114                     	;# 
  2986  0115                     	;# 
  2987  0116                     	;# 
  2988  0117                     	;# 
  2989  0118                     	;# 
  2990  0119                     	;# 
  2991  018C                     	;# 
  2992  018D                     	;# 
  2993  018E                     	;# 
  2994  0197                     	;# 
  2995  0199                     	;# 
  2996  0199                     	;# 
  2997  0199                     	;# 
  2998  019A                     	;# 
  2999  019A                     	;# 
  3000  019A                     	;# 
  3001  019B                     	;# 
  3002  019B                     	;# 
  3003  019B                     	;# 
  3004  019B                     	;# 
  3005  019B                     	;# 
  3006  019C                     	;# 
  3007  019C                     	;# 
  3008  019C                     	;# 
  3009  019D                     	;# 
  3010  019D                     	;# 
  3011  019D                     	;# 
  3012  019E                     	;# 
  3013  019E                     	;# 
  3014  019E                     	;# 
  3015  019F                     	;# 
  3016  019F                     	;# 
  3017  019F                     	;# 
  3018  019F                     	;# 
  3019  019F                     	;# 
  3020  020C                     	;# 
  3021  020D                     	;# 
  3022  020E                     	;# 
  3023  0211                     	;# 
  3024  0211                     	;# 
  3025  0212                     	;# 
  3026  0212                     	;# 
  3027  0213                     	;# 
  3028  0213                     	;# 
  3029  0214                     	;# 
  3030  0214                     	;# 
  3031  0215                     	;# 
  3032  0215                     	;# 
  3033  0215                     	;# 
  3034  0215                     	;# 
  3035  0216                     	;# 
  3036  0216                     	;# 
  3037  0217                     	;# 
  3038  0217                     	;# 
  3039  0219                     	;# 
  3040  021A                     	;# 
  3041  021B                     	;# 
  3042  021C                     	;# 
  3043  021D                     	;# 
  3044  021D                     	;# 
  3045  021E                     	;# 
  3046  021F                     	;# 
  3047  028C                     	;# 
  3048  028D                     	;# 
  3049  028E                     	;# 
  3050  0291                     	;# 
  3051  0291                     	;# 
  3052  0292                     	;# 
  3053  0293                     	;# 
  3054  0294                     	;# 
  3055  0295                     	;# 
  3056  0295                     	;# 
  3057  0296                     	;# 
  3058  0297                     	;# 
  3059  0298                     	;# 
  3060  029F                     	;# 
  3061  030C                     	;# 
  3062  030D                     	;# 
  3063  030E                     	;# 
  3064  0311                     	;# 
  3065  0311                     	;# 
  3066  0312                     	;# 
  3067  0313                     	;# 
  3068  0314                     	;# 
  3069  0315                     	;# 
  3070  0315                     	;# 
  3071  0316                     	;# 
  3072  0317                     	;# 
  3073  0318                     	;# 
  3074  038C                     	;# 
  3075  038D                     	;# 
  3076  038E                     	;# 
  3077  0391                     	;# 
  3078  0392                     	;# 
  3079  0393                     	;# 
  3080  0394                     	;# 
  3081  0395                     	;# 
  3082  0396                     	;# 
  3083  0397                     	;# 
  3084  0398                     	;# 
  3085  0399                     	;# 
  3086  039A                     	;# 
  3087  039C                     	;# 
  3088  039D                     	;# 
  3089  039E                     	;# 
  3090  039F                     	;# 
  3091  0411                     	;# 
  3092  0411                     	;# 
  3093  0412                     	;# 
  3094  0413                     	;# 
  3095  0414                     	;# 
  3096  0415                     	;# 
  3097  0416                     	;# 
  3098  0417                     	;# 
  3099  0418                     	;# 
  3100  0418                     	;# 
  3101  0419                     	;# 
  3102  041A                     	;# 
  3103  041B                     	;# 
  3104  041C                     	;# 
  3105  041D                     	;# 
  3106  041E                     	;# 
  3107  041F                     	;# 
  3108  0498                     	;# 
  3109  0498                     	;# 
  3110  0499                     	;# 
  3111  049A                     	;# 
  3112  049B                     	;# 
  3113  049B                     	;# 
  3114  049C                     	;# 
  3115  049D                     	;# 
  3116  049E                     	;# 
  3117  049F                     	;# 
  3118  0617                     	;# 
  3119  0618                     	;# 
  3120  0619                     	;# 
  3121  0619                     	;# 
  3122  061A                     	;# 
  3123  061B                     	;# 
  3124  061C                     	;# 
  3125  061C                     	;# 
  3126  061F                     	;# 
  3127  0691                     	;# 
  3128  0692                     	;# 
  3129  0693                     	;# 
  3130  0694                     	;# 
  3131  0695                     	;# 
  3132  0696                     	;# 
  3133  0697                     	;# 
  3134  0698                     	;# 
  3135  0699                     	;# 
  3136  0711                     	;# 
  3137  0712                     	;# 
  3138  0713                     	;# 
  3139  0714                     	;# 
  3140  0715                     	;# 
  3141  0716                     	;# 
  3142  0717                     	;# 
  3143  0718                     	;# 
  3144  0719                     	;# 
  3145  0891                     	;# 
  3146  0891                     	;# 
  3147  0891                     	;# 
  3148  0891                     	;# 
  3149  0891                     	;# 
  3150  0891                     	;# 
  3151  0892                     	;# 
  3152  0892                     	;# 
  3153  0892                     	;# 
  3154  0893                     	;# 
  3155  0893                     	;# 
  3156  0893                     	;# 
  3157  0893                     	;# 
  3158  0893                     	;# 
  3159  0893                     	;# 
  3160  0894                     	;# 
  3161  0894                     	;# 
  3162  0894                     	;# 
  3163  0895                     	;# 
  3164  0895                     	;# 
  3165  0895                     	;# 
  3166  0896                     	;# 
  3167  0896                     	;# 
  3168  0896                     	;# 
  3169  089B                     	;# 
  3170  0911                     	;# 
  3171  0912                     	;# 
  3172  0913                     	;# 
  3173  0914                     	;# 
  3174  0915                     	;# 
  3175  0916                     	;# 
  3176  0918                     	;# 
  3177  0919                     	;# 
  3178  091A                     	;# 
  3179  091B                     	;# 
  3180  091C                     	;# 
  3181  091D                     	;# 
  3182  091E                     	;# 
  3183  091F                     	;# 
  3184  0E0F                     	;# 
  3185  0E10                     	;# 
  3186  0E11                     	;# 
  3187  0E12                     	;# 
  3188  0E13                     	;# 
  3189  0E14                     	;# 
  3190  0E15                     	;# 
  3191  0E16                     	;# 
  3192  0E17                     	;# 
  3193  0E18                     	;# 
  3194  0E19                     	;# 
  3195  0E1A                     	;# 
  3196  0E1B                     	;# 
  3197  0E1C                     	;# 
  3198  0E1D                     	;# 
  3199  0E1E                     	;# 
  3200  0E1F                     	;# 
  3201  0E20                     	;# 
  3202  0E21                     	;# 
  3203  0E22                     	;# 
  3204  0E24                     	;# 
  3205  0E25                     	;# 
  3206  0E28                     	;# 
  3207  0E29                     	;# 
  3208  0E2A                     	;# 
  3209  0E2B                     	;# 
  3210  0E2C                     	;# 
  3211  0E2D                     	;# 
  3212  0E2E                     	;# 
  3213  0E2F                     	;# 
  3214  0E90                     	;# 
  3215  0E91                     	;# 
  3216  0E92                     	;# 
  3217  0E94                     	;# 
  3218  0E95                     	;# 
  3219  0E9C                     	;# 
  3220  0E9D                     	;# 
  3221  0E9E                     	;# 
  3222  0E9F                     	;# 
  3223  0EA0                     	;# 
  3224  0EA1                     	;# 
  3225  0EA2                     	;# 
  3226  0EA3                     	;# 
  3227  0EA4                     	;# 
  3228  0EA5                     	;# 
  3229  0EA6                     	;# 
  3230  0EA7                     	;# 
  3231  0F0F                     	;# 
  3232  0F10                     	;# 
  3233  0F11                     	;# 
  3234  0F12                     	;# 
  3235  0F13                     	;# 
  3236  0F14                     	;# 
  3237  0F15                     	;# 
  3238  0F16                     	;# 
  3239  0F17                     	;# 
  3240  0F18                     	;# 
  3241  0F19                     	;# 
  3242  0F1A                     	;# 
  3243  0F1B                     	;# 
  3244  0F1C                     	;# 
  3245  0F1D                     	;# 
  3246  0F1E                     	;# 
  3247  0F1F                     	;# 
  3248  0F20                     	;# 
  3249  0F21                     	;# 
  3250  0F22                     	;# 
  3251  0F23                     	;# 
  3252  0F24                     	;# 
  3253  0F25                     	;# 
  3254  0F26                     	;# 
  3255  0F27                     	;# 
  3256  0F28                     	;# 
  3257  0F29                     	;# 
  3258  0F2A                     	;# 
  3259  0F2B                     	;# 
  3260  0F2C                     	;# 
  3261  0F2D                     	;# 
  3262  0F2E                     	;# 
  3263  0F2F                     	;# 
  3264  0F30                     	;# 
  3265  0F31                     	;# 
  3266  0F32                     	;# 
  3267  0F33                     	;# 
  3268  0F34                     	;# 
  3269  0F35                     	;# 
  3270  0F36                     	;# 
  3271  0F37                     	;# 
  3272  0FE4                     	;# 
  3273  0FE5                     	;# 
  3274  0FE6                     	;# 
  3275  0FE7                     	;# 
  3276  0FE8                     	;# 
  3277  0FE9                     	;# 
  3278  0FEA                     	;# 
  3279  0FEB                     	;# 
  3280  0FED                     	;# 
  3281  0FEE                     	;# 
  3282  0FEF                     	;# 
  3283  0000                     	;# 
  3284  0001                     	;# 
  3285  0002                     	;# 
  3286  0003                     	;# 
  3287  0004                     	;# 
  3288  0005                     	;# 
  3289  0006                     	;# 
  3290  0007                     	;# 
  3291  0008                     	;# 
  3292  0009                     	;# 
  3293  000A                     	;# 
  3294  000B                     	;# 
  3295  000C                     	;# 
  3296  000D                     	;# 
  3297  000E                     	;# 
  3298  0010                     	;# 
  3299  0011                     	;# 
  3300  0012                     	;# 
  3301  0013                     	;# 
  3302  0014                     	;# 
  3303  0015                     	;# 
  3304  0015                     	;# 
  3305  0016                     	;# 
  3306  0016                     	;# 
  3307  0017                     	;# 
  3308  0018                     	;# 
  3309  0019                     	;# 
  3310  0019                     	;# 
  3311  001A                     	;# 
  3312  001B                     	;# 
  3313  001C                     	;# 
  3314  001D                     	;# 
  3315  001E                     	;# 
  3316  001F                     	;# 
  3317  008C                     	;# 
  3318  008D                     	;# 
  3319  008E                     	;# 
  3320  0090                     	;# 
  3321  0091                     	;# 
  3322  0092                     	;# 
  3323  0093                     	;# 
  3324  0094                     	;# 
  3325  0097                     	;# 
  3326  009B                     	;# 
  3327  009B                     	;# 
  3328  009C                     	;# 
  3329  009D                     	;# 
  3330  009E                     	;# 
  3331  009F                     	;# 
  3332  010C                     	;# 
  3333  010D                     	;# 
  3334  010E                     	;# 
  3335  0111                     	;# 
  3336  0112                     	;# 
  3337  0113                     	;# 
  3338  0114                     	;# 
  3339  0115                     	;# 
  3340  0116                     	;# 
  3341  0117                     	;# 
  3342  0118                     	;# 
  3343  0119                     	;# 
  3344  018C                     	;# 
  3345  018D                     	;# 
  3346  018E                     	;# 
  3347  0197                     	;# 
  3348  0199                     	;# 
  3349  0199                     	;# 
  3350  0199                     	;# 
  3351  019A                     	;# 
  3352  019A                     	;# 
  3353  019A                     	;# 
  3354  019B                     	;# 
  3355  019B                     	;# 
  3356  019B                     	;# 
  3357  019B                     	;# 
  3358  019B                     	;# 
  3359  019C                     	;# 
  3360  019C                     	;# 
  3361  019C                     	;# 
  3362  019D                     	;# 
  3363  019D                     	;# 
  3364  019D                     	;# 
  3365  019E                     	;# 
  3366  019E                     	;# 
  3367  019E                     	;# 
  3368  019F                     	;# 
  3369  019F                     	;# 
  3370  019F                     	;# 
  3371  019F                     	;# 
  3372  019F                     	;# 
  3373  020C                     	;# 
  3374  020D                     	;# 
  3375  020E                     	;# 
  3376  0211                     	;# 
  3377  0211                     	;# 
  3378  0212                     	;# 
  3379  0212                     	;# 
  3380  0213                     	;# 
  3381  0213                     	;# 
  3382  0214                     	;# 
  3383  0214                     	;# 
  3384  0215                     	;# 
  3385  0215                     	;# 
  3386  0215                     	;# 
  3387  0215                     	;# 
  3388  0216                     	;# 
  3389  0216                     	;# 
  3390  0217                     	;# 
  3391  0217                     	;# 
  3392  0219                     	;# 
  3393  021A                     	;# 
  3394  021B                     	;# 
  3395  021C                     	;# 
  3396  021D                     	;# 
  3397  021D                     	;# 
  3398  021E                     	;# 
  3399  021F                     	;# 
  3400  028C                     	;# 
  3401  028D                     	;# 
  3402  028E                     	;# 
  3403  0291                     	;# 
  3404  0291                     	;# 
  3405  0292                     	;# 
  3406  0293                     	;# 
  3407  0294                     	;# 
  3408  0295                     	;# 
  3409  0295                     	;# 
  3410  0296                     	;# 
  3411  0297                     	;# 
  3412  0298                     	;# 
  3413  029F                     	;# 
  3414  030C                     	;# 
  3415  030D                     	;# 
  3416  030E                     	;# 
  3417  0311                     	;# 
  3418  0311                     	;# 
  3419  0312                     	;# 
  3420  0313                     	;# 
  3421  0314                     	;# 
  3422  0315                     	;# 
  3423  0315                     	;# 
  3424  0316                     	;# 
  3425  0317                     	;# 
  3426  0318                     	;# 
  3427  038C                     	;# 
  3428  038D                     	;# 
  3429  038E                     	;# 
  3430  0391                     	;# 
  3431  0392                     	;# 
  3432  0393                     	;# 
  3433  0394                     	;# 
  3434  0395                     	;# 
  3435  0396                     	;# 
  3436  0397                     	;# 
  3437  0398                     	;# 
  3438  0399                     	;# 
  3439  039A                     	;# 
  3440  039C                     	;# 
  3441  039D                     	;# 
  3442  039E                     	;# 
  3443  039F                     	;# 
  3444  0411                     	;# 
  3445  0411                     	;# 
  3446  0412                     	;# 
  3447  0413                     	;# 
  3448  0414                     	;# 
  3449  0415                     	;# 
  3450  0416                     	;# 
  3451  0417                     	;# 
  3452  0418                     	;# 
  3453  0418                     	;# 
  3454  0419                     	;# 
  3455  041A                     	;# 
  3456  041B                     	;# 
  3457  041C                     	;# 
  3458  041D                     	;# 
  3459  041E                     	;# 
  3460  041F                     	;# 
  3461  0498                     	;# 
  3462  0498                     	;# 
  3463  0499                     	;# 
  3464  049A                     	;# 
  3465  049B                     	;# 
  3466  049B                     	;# 
  3467  049C                     	;# 
  3468  049D                     	;# 
  3469  049E                     	;# 
  3470  049F                     	;# 
  3471  0617                     	;# 
  3472  0618                     	;# 
  3473  0619                     	;# 
  3474  0619                     	;# 
  3475  061A                     	;# 
  3476  061B                     	;# 
  3477  061C                     	;# 
  3478  061C                     	;# 
  3479  061F                     	;# 
  3480  0691                     	;# 
  3481  0692                     	;# 
  3482  0693                     	;# 
  3483  0694                     	;# 
  3484  0695                     	;# 
  3485  0696                     	;# 
  3486  0697                     	;# 
  3487  0698                     	;# 
  3488  0699                     	;# 
  3489  0711                     	;# 
  3490  0712                     	;# 
  3491  0713                     	;# 
  3492  0714                     	;# 
  3493  0715                     	;# 
  3494  0716                     	;# 
  3495  0717                     	;# 
  3496  0718                     	;# 
  3497  0719                     	;# 
  3498  0891                     	;# 
  3499  0891                     	;# 
  3500  0891                     	;# 
  3501  0891                     	;# 
  3502  0891                     	;# 
  3503  0891                     	;# 
  3504  0892                     	;# 
  3505  0892                     	;# 
  3506  0892                     	;# 
  3507  0893                     	;# 
  3508  0893                     	;# 
  3509  0893                     	;# 
  3510  0893                     	;# 
  3511  0893                     	;# 
  3512  0893                     	;# 
  3513  0894                     	;# 
  3514  0894                     	;# 
  3515  0894                     	;# 
  3516  0895                     	;# 
  3517  0895                     	;# 
  3518  0895                     	;# 
  3519  0896                     	;# 
  3520  0896                     	;# 
  3521  0896                     	;# 
  3522  089B                     	;# 
  3523  0911                     	;# 
  3524  0912                     	;# 
  3525  0913                     	;# 
  3526  0914                     	;# 
  3527  0915                     	;# 
  3528  0916                     	;# 
  3529  0918                     	;# 
  3530  0919                     	;# 
  3531  091A                     	;# 
  3532  091B                     	;# 
  3533  091C                     	;# 
  3534  091D                     	;# 
  3535  091E                     	;# 
  3536  091F                     	;# 
  3537  0E0F                     	;# 
  3538  0E10                     	;# 
  3539  0E11                     	;# 
  3540  0E12                     	;# 
  3541  0E13                     	;# 
  3542  0E14                     	;# 
  3543  0E15                     	;# 
  3544  0E16                     	;# 
  3545  0E17                     	;# 
  3546  0E18                     	;# 
  3547  0E19                     	;# 
  3548  0E1A                     	;# 
  3549  0E1B                     	;# 
  3550  0E1C                     	;# 
  3551  0E1D                     	;# 
  3552  0E1E                     	;# 
  3553  0E1F                     	;# 
  3554  0E20                     	;# 
  3555  0E21                     	;# 
  3556  0E22                     	;# 
  3557  0E24                     	;# 
  3558  0E25                     	;# 
  3559  0E28                     	;# 
  3560  0E29                     	;# 
  3561  0E2A                     	;# 
  3562  0E2B                     	;# 
  3563  0E2C                     	;# 
  3564  0E2D                     	;# 
  3565  0E2E                     	;# 
  3566  0E2F                     	;# 
  3567  0E90                     	;# 
  3568  0E91                     	;# 
  3569  0E92                     	;# 
  3570  0E94                     	;# 
  3571  0E95                     	;# 
  3572  0E9C                     	;# 
  3573  0E9D                     	;# 
  3574  0E9E                     	;# 
  3575  0E9F                     	;# 
  3576  0EA0                     	;# 
  3577  0EA1                     	;# 
  3578  0EA2                     	;# 
  3579  0EA3                     	;# 
  3580  0EA4                     	;# 
  3581  0EA5                     	;# 
  3582  0EA6                     	;# 
  3583  0EA7                     	;# 
  3584  0F0F                     	;# 
  3585  0F10                     	;# 
  3586  0F11                     	;# 
  3587  0F12                     	;# 
  3588  0F13                     	;# 
  3589  0F14                     	;# 
  3590  0F15                     	;# 
  3591  0F16                     	;# 
  3592  0F17                     	;# 
  3593  0F18                     	;# 
  3594  0F19                     	;# 
  3595  0F1A                     	;# 
  3596  0F1B                     	;# 
  3597  0F1C                     	;# 
  3598  0F1D                     	;# 
  3599  0F1E                     	;# 
  3600  0F1F                     	;# 
  3601  0F20                     	;# 
  3602  0F21                     	;# 
  3603  0F22                     	;# 
  3604  0F23                     	;# 
  3605  0F24                     	;# 
  3606  0F25                     	;# 
  3607  0F26                     	;# 
  3608  0F27                     	;# 
  3609  0F28                     	;# 
  3610  0F29                     	;# 
  3611  0F2A                     	;# 
  3612  0F2B                     	;# 
  3613  0F2C                     	;# 
  3614  0F2D                     	;# 
  3615  0F2E                     	;# 
  3616  0F2F                     	;# 
  3617  0F30                     	;# 
  3618  0F31                     	;# 
  3619  0F32                     	;# 
  3620  0F33                     	;# 
  3621  0F34                     	;# 
  3622  0F35                     	;# 
  3623  0F36                     	;# 
  3624  0F37                     	;# 
  3625  0FE4                     	;# 
  3626  0FE5                     	;# 
  3627  0FE6                     	;# 
  3628  0FE7                     	;# 
  3629  0FE8                     	;# 
  3630  0FE9                     	;# 
  3631  0FEA                     	;# 
  3632  0FEB                     	;# 
  3633  0FED                     	;# 
  3634  0FEE                     	;# 
  3635  0FEF                     	;# 
  3636                           
  3637                           	psect	eeprom_data
  3638  0000  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3639  0008  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3640  0010  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3641  0018  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3642  0020  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3643  0028  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3644  0030  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3645  0038  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3646  0040  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3647  0048  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3648  0050  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3649  0058  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3650  0060  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3651  0068  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3652  0070  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3653  0078  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3654  0080  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3655  0088  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3656  0090  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3657  0098  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3658  00A0  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3659  00A8  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3660  00B0  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3661  00B8  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3662  00C0  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3663  00C8  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3664  00D0  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3665  00D8  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3666  00E0  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3667  00E8  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3668  00F0  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3669  00F8  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3670  0000                     	;# 
  3671  0001                     	;# 
  3672  0002                     	;# 
  3673  0003                     	;# 
  3674  0004                     	;# 
  3675  0005                     	;# 
  3676  0006                     	;# 
  3677  0007                     	;# 
  3678  0008                     	;# 
  3679  0009                     	;# 
  3680  000A                     	;# 
  3681  000B                     	;# 
  3682  000C                     	;# 
  3683  000D                     	;# 
  3684  000E                     	;# 
  3685  0010                     	;# 
  3686  0011                     	;# 
  3687  0012                     	;# 
  3688  0013                     	;# 
  3689  0014                     	;# 
  3690  0015                     	;# 
  3691  0015                     	;# 
  3692  0016                     	;# 
  3693  0016                     	;# 
  3694  0017                     	;# 
  3695  0018                     	;# 
  3696  0019                     	;# 
  3697  0019                     	;# 
  3698  001A                     	;# 
  3699  001B                     	;# 
  3700  001C                     	;# 
  3701  001D                     	;# 
  3702  001E                     	;# 
  3703  001F                     	;# 
  3704  008C                     	;# 
  3705  008D                     	;# 
  3706  008E                     	;# 
  3707  0090                     	;# 
  3708  0091                     	;# 
  3709  0092                     	;# 
  3710  0093                     	;# 
  3711  0094                     	;# 
  3712  0097                     	;# 
  3713  009B                     	;# 
  3714  009B                     	;# 
  3715  009C                     	;# 
  3716  009D                     	;# 
  3717  009E                     	;# 
  3718  009F                     	;# 
  3719  010C                     	;# 
  3720  010D                     	;# 
  3721  010E                     	;# 
  3722  0111                     	;# 
  3723  0112                     	;# 
  3724  0113                     	;# 
  3725  0114                     	;# 
  3726  0115                     	;# 
  3727  0116                     	;# 
  3728  0117                     	;# 
  3729  0118                     	;# 
  3730  0119                     	;# 
  3731  018C                     	;# 
  3732  018D                     	;# 
  3733  018E                     	;# 
  3734  0197                     	;# 
  3735  0199                     	;# 
  3736  0199                     	;# 
  3737  0199                     	;# 
  3738  019A                     	;# 
  3739  019A                     	;# 
  3740  019A                     	;# 
  3741  019B                     	;# 
  3742  019B                     	;# 
  3743  019B                     	;# 
  3744  019B                     	;# 
  3745  019B                     	;# 
  3746  019C                     	;# 
  3747  019C                     	;# 
  3748  019C                     	;# 
  3749  019D                     	;# 
  3750  019D                     	;# 
  3751  019D                     	;# 
  3752  019E                     	;# 
  3753  019E                     	;# 
  3754  019E                     	;# 
  3755  019F                     	;# 
  3756  019F                     	;# 
  3757  019F                     	;# 
  3758  019F                     	;# 
  3759  019F                     	;# 
  3760  020C                     	;# 
  3761  020D                     	;# 
  3762  020E                     	;# 
  3763  0211                     	;# 
  3764  0211                     	;# 
  3765  0212                     	;# 
  3766  0212                     	;# 
  3767  0213                     	;# 
  3768  0213                     	;# 
  3769  0214                     	;# 
  3770  0214                     	;# 
  3771  0215                     	;# 
  3772  0215                     	;# 
  3773  0215                     	;# 
  3774  0215                     	;# 
  3775  0216                     	;# 
  3776  0216                     	;# 
  3777  0217                     	;# 
  3778  0217                     	;# 
  3779  0219                     	;# 
  3780  021A                     	;# 
  3781  021B                     	;# 
  3782  021C                     	;# 
  3783  021D                     	;# 
  3784  021D                     	;# 
  3785  021E                     	;# 
  3786  021F                     	;# 
  3787  028C                     	;# 
  3788  028D                     	;# 
  3789  028E                     	;# 
  3790  0291                     	;# 
  3791  0291                     	;# 
  3792  0292                     	;# 
  3793  0293                     	;# 
  3794  0294                     	;# 
  3795  0295                     	;# 
  3796  0295                     	;# 
  3797  0296                     	;# 
  3798  0297                     	;# 
  3799  0298                     	;# 
  3800  029F                     	;# 
  3801  030C                     	;# 
  3802  030D                     	;# 
  3803  030E                     	;# 
  3804  0311                     	;# 
  3805  0311                     	;# 
  3806  0312                     	;# 
  3807  0313                     	;# 
  3808  0314                     	;# 
  3809  0315                     	;# 
  3810  0315                     	;# 
  3811  0316                     	;# 
  3812  0317                     	;# 
  3813  0318                     	;# 
  3814  038C                     	;# 
  3815  038D                     	;# 
  3816  038E                     	;# 
  3817  0391                     	;# 
  3818  0392                     	;# 
  3819  0393                     	;# 
  3820  0394                     	;# 
  3821  0395                     	;# 
  3822  0396                     	;# 
  3823  0397                     	;# 
  3824  0398                     	;# 
  3825  0399                     	;# 
  3826  039A                     	;# 
  3827  039C                     	;# 
  3828  039D                     	;# 
  3829  039E                     	;# 
  3830  039F                     	;# 
  3831  0411                     	;# 
  3832  0411                     	;# 
  3833  0412                     	;# 
  3834  0413                     	;# 
  3835  0414                     	;# 
  3836  0415                     	;# 
  3837  0416                     	;# 
  3838  0417                     	;# 
  3839  0418                     	;# 
  3840  0418                     	;# 
  3841  0419                     	;# 
  3842  041A                     	;# 
  3843  041B                     	;# 
  3844  041C                     	;# 
  3845  041D                     	;# 
  3846  041E                     	;# 
  3847  041F                     	;# 
  3848  0498                     	;# 
  3849  0498                     	;# 
  3850  0499                     	;# 
  3851  049A                     	;# 
  3852  049B                     	;# 
  3853  049B                     	;# 
  3854  049C                     	;# 
  3855  049D                     	;# 
  3856  049E                     	;# 
  3857  049F                     	;# 
  3858  0617                     	;# 
  3859  0618                     	;# 
  3860  0619                     	;# 
  3861  0619                     	;# 
  3862  061A                     	;# 
  3863  061B                     	;# 
  3864  061C                     	;# 
  3865  061C                     	;# 
  3866  061F                     	;# 
  3867  0691                     	;# 
  3868  0692                     	;# 
  3869  0693                     	;# 
  3870  0694                     	;# 
  3871  0695                     	;# 
  3872  0696                     	;# 
  3873  0697                     	;# 
  3874  0698                     	;# 
  3875  0699                     	;# 
  3876  0711                     	;# 
  3877  0712                     	;# 
  3878  0713                     	;# 
  3879  0714                     	;# 
  3880  0715                     	;# 
  3881  0716                     	;# 
  3882  0717                     	;# 
  3883  0718                     	;# 
  3884  0719                     	;# 
  3885  0891                     	;# 
  3886  0891                     	;# 
  3887  0891                     	;# 
  3888  0891                     	;# 
  3889  0891                     	;# 
  3890  0891                     	;# 
  3891  0892                     	;# 
  3892  0892                     	;# 
  3893  0892                     	;# 
  3894  0893                     	;# 
  3895  0893                     	;# 
  3896  0893                     	;# 
  3897  0893                     	;# 
  3898  0893                     	;# 
  3899  0893                     	;# 
  3900  0894                     	;# 
  3901  0894                     	;# 
  3902  0894                     	;# 
  3903  0895                     	;# 
  3904  0895                     	;# 
  3905  0895                     	;# 
  3906  0896                     	;# 
  3907  0896                     	;# 
  3908  0896                     	;# 
  3909  089B                     	;# 
  3910  0911                     	;# 
  3911  0912                     	;# 
  3912  0913                     	;# 
  3913  0914                     	;# 
  3914  0915                     	;# 
  3915  0916                     	;# 
  3916  0918                     	;# 
  3917  0919                     	;# 
  3918  091A                     	;# 
  3919  091B                     	;# 
  3920  091C                     	;# 
  3921  091D                     	;# 
  3922  091E                     	;# 
  3923  091F                     	;# 
  3924  0E0F                     	;# 
  3925  0E10                     	;# 
  3926  0E11                     	;# 
  3927  0E12                     	;# 
  3928  0E13                     	;# 
  3929  0E14                     	;# 
  3930  0E15                     	;# 
  3931  0E16                     	;# 
  3932  0E17                     	;# 
  3933  0E18                     	;# 
  3934  0E19                     	;# 
  3935  0E1A                     	;# 
  3936  0E1B                     	;# 
  3937  0E1C                     	;# 
  3938  0E1D                     	;# 
  3939  0E1E                     	;# 
  3940  0E1F                     	;# 
  3941  0E20                     	;# 
  3942  0E21                     	;# 
  3943  0E22                     	;# 
  3944  0E24                     	;# 
  3945  0E25                     	;# 
  3946  0E28                     	;# 
  3947  0E29                     	;# 
  3948  0E2A                     	;# 
  3949  0E2B                     	;# 
  3950  0E2C                     	;# 
  3951  0E2D                     	;# 
  3952  0E2E                     	;# 
  3953  0E2F                     	;# 
  3954  0E90                     	;# 
  3955  0E91                     	;# 
  3956  0E92                     	;# 
  3957  0E94                     	;# 
  3958  0E95                     	;# 
  3959  0E9C                     	;# 
  3960  0E9D                     	;# 
  3961  0E9E                     	;# 
  3962  0E9F                     	;# 
  3963  0EA0                     	;# 
  3964  0EA1                     	;# 
  3965  0EA2                     	;# 
  3966  0EA3                     	;# 
  3967  0EA4                     	;# 
  3968  0EA5                     	;# 
  3969  0EA6                     	;# 
  3970  0EA7                     	;# 
  3971  0F0F                     	;# 
  3972  0F10                     	;# 
  3973  0F11                     	;# 
  3974  0F12                     	;# 
  3975  0F13                     	;# 
  3976  0F14                     	;# 
  3977  0F15                     	;# 
  3978  0F16                     	;# 
  3979  0F17                     	;# 
  3980  0F18                     	;# 
  3981  0F19                     	;# 
  3982  0F1A                     	;# 
  3983  0F1B                     	;# 
  3984  0F1C                     	;# 
  3985  0F1D                     	;# 
  3986  0F1E                     	;# 
  3987  0F1F                     	;# 
  3988  0F20                     	;# 
  3989  0F21                     	;# 
  3990  0F22                     	;# 
  3991  0F23                     	;# 
  3992  0F24                     	;# 
  3993  0F25                     	;# 
  3994  0F26                     	;# 
  3995  0F27                     	;# 
  3996  0F28                     	;# 
  3997  0F29                     	;# 
  3998  0F2A                     	;# 
  3999  0F2B                     	;# 
  4000  0F2C                     	;# 
  4001  0F2D                     	;# 
  4002  0F2E                     	;# 
  4003  0F2F                     	;# 
  4004  0F30                     	;# 
  4005  0F31                     	;# 
  4006  0F32                     	;# 
  4007  0F33                     	;# 
  4008  0F34                     	;# 
  4009  0F35                     	;# 
  4010  0F36                     	;# 
  4011  0F37                     	;# 
  4012  0FE4                     	;# 
  4013  0FE5                     	;# 
  4014  0FE6                     	;# 
  4015  0FE7                     	;# 
  4016  0FE8                     	;# 
  4017  0FE9                     	;# 
  4018  0FEA                     	;# 
  4019  0FEB                     	;# 
  4020  0FED                     	;# 
  4021  0FEE                     	;# 
  4022  0FEF                     	;_spi1_send_buffer_data
  4023                           
  4024                           	psect	idataBANK0
  4025  06A3                     __pidataBANK0:	
  4026                           
  4027                           ;initializer for _st_dataLength
  4028  06A3  34FF               	retlw	255
  4029  06A4  34FF               	retlw	255
  4030                           
  4031                           	psect	idataBANK1
  4032  06A5                     __pidataBANK1:	
  4033                           
  4034                           ;initializer for _direction
  4035  06A5  3401               	retlw	1
  4036  06A6  3400               	retlw	0
  4037                           
  4038                           	psect	stringtext1
  4039  06A7                     __pstringtext1:	
  4040  06A7                     _MACHINE_ID:	
  4041  06A7  3401               	retlw	1
  4042  06A8  3400               	retlw	0
  4043  06A9                     __end_of_MACHINE_ID:	
  4044                           
  4045                           	psect	stringtext2
  4046  06A9                     __pstringtext2:	
  4047  06A9                     _VENDER_ID:	
  4048  06A9  3401               	retlw	1
  4049  06AA  3400               	retlw	0
  4050  06AB                     __end_of_VENDER_ID:	
  4051                           
  4052                           	psect	bitnvCOMMON
  4053  03C0                     __pbitnvCOMMON:	
  4054  03C0                     _isEndPointTrig:	
  4055  03C0                     	ds	1
  4056  000E                     _PORTC	set	14
  4057  000D                     _PORTB	set	13
  4058  000C                     _PORTA	set	12
  4059  000B                     _INTCONbits	set	11
  4060  0010                     _PIR0bits	set	16
  4061  0012                     _PIR2bits	set	18
  4062  0011                     _PIR1bits	set	17
  4063  008E                     _TRISC	set	142
  4064  008D                     _TRISB	set	141
  4065  008C                     _TRISA	set	140
  4066  0092                     _PIE2bits	set	146
  4067  0091                     _PIE1bits	set	145
  4068  0090                     _PIE0bits	set	144
  4069  008E                     _TRISCbits	set	142
  4070  008D                     _TRISBbits	set	141
  4071  010C                     _LATAbits	set	268
  4072  018E                     _ANSELC	set	398
  4073  018D                     _ANSELB	set	397
  4074  018C                     _ANSELA	set	396
  4075  021C                     _SSP2STATbits	set	540
  4076  021D                     _SSP2CON1bits	set	541
  4077  021F                     _SSP2CON3bits	set	543
  4078  0214                     _SSP1STATbits	set	532
  4079  0215                     _SSP1CON1bits	set	533
  4080  0217                     _SSP1CON3bits	set	535
  4081  020C                     _WPUA	set	524
  4082  020D                     _WPUB	set	525
  4083  020E                     _WPUC	set	526
  4084  0219                     _SSP2BUF	set	537
  4085  0211                     _SSP1BUF	set	529
  4086  0392                     _IOCANbits	set	914
  4087  0391                     _IOCAPbits	set	913
  4088  038C                     _INLVLAbits	set	908
  4089  038E                     _INLVLCbits	set	910
  4090  038D                     _INLVLBbits	set	909
  4091  0393                     _IOCAFbits	set	915
  4092  091E                     _OSCTUNEbits	set	2334
  4093  091F                     _OSCFRQbits	set	2335
  4094  0E1F                     _SSP2SSPPSbits	set	3615
  4095  0E22                     _SSP1SSPPSbits	set	3618
  4096  0E9F                     _RB7PPS	set	3743
  4097  0E92                     _RA2PPS	set	3730
  4098  0EA2                     _RC2PPS	set	3746
  4099                           
  4100                           ; #config settings
  4101  0000                     
  4102                           	psect	cinit
  4103  005F                     start_initialization:	
  4104  005F                     __initialization:		;BIGRAM
  4105                           
  4106                           ; Initialize objects allocated to BANK0
  4107  005F  3186  26A3  3180   	fcall	__pidataBANK0	;fetch initializer
  4108  0062  00EC               	movwf	__pdataBANK0& (0+127)
  4109  0063  3186  26A4  3180   	fcall	__pidataBANK0+1	;fetch initializer
  4110  0066  00ED               	movwf	(__pdataBANK0+1)& (0+127)
  4111                           
  4112                           ; Initialize objects allocated to BANK1
  4113  0067  0021               	movlb	1	; select bank1
  4114  0068  3186  26A5  3180   	fcall	__pidataBANK1	;fetch initializer
  4115  006B  00ED               	movwf	__pdataBANK1& (0+127)
  4116  006C  3186  26A6  3180   	fcall	__pidataBANK1+1	;fetch initializer
  4117  006F  00EE               	movwf	(__pdataBANK1+1)& (0+127)
  4118                           
  4119                           ; Clear objects allocated to BIGRAM
  4120  0070  30F0               	movlw	low (0+9456)
  4121  0071  0084               	movwf	4
  4122  0072  3024               	movlw	high (0+9456)
  4123  0073  0085               	movwf	5
  4124  0074  3000               	movlw	0
  4125  0075  00FE               	movwf	btemp
  4126  0076  3003               	movlw	3
  4127  0077  00FF               	movwf	btemp+1
  4128  0078  3186  2658  3180   	fcall	clear_ram0
  4129                           
  4130                           ; Clear objects allocated to BITCOMMON
  4131  007B  01F0               	clrf	(__pbitbssCOMMON/(0+8))& (0+127)
  4132                           
  4133                           ; Clear objects allocated to COMMON
  4134  007C  01F9               	clrf	__pbssCOMMON& (0+127)
  4135                           
  4136                           ; Clear objects allocated to BANK0
  4137  007D  3048               	movlw	low __pbssBANK0
  4138  007E  0084               	movwf	4
  4139  007F  3000               	movlw	high __pbssBANK0
  4140  0080  0085               	movwf	5
  4141  0081  3024               	movlw	36
  4142  0082  00FE               	movwf	btemp
  4143  0083  3000               	movlw	0
  4144  0084  00FF               	movwf	btemp+1
  4145  0085  3186  2658  3180   	fcall	clear_ram0
  4146                           
  4147                           ; Clear objects allocated to BANK1
  4148  0088  30A0               	movlw	low __pbssBANK1
  4149  0089  0084               	movwf	4
  4150  008A  3000               	movlw	high __pbssBANK1
  4151  008B  0085               	movwf	5
  4152  008C  3043               	movlw	67
  4153  008D  00FE               	movwf	btemp
  4154  008E  3000               	movlw	0
  4155  008F  00FF               	movwf	btemp+1
  4156  0090  3186  2658  3180   	fcall	clear_ram0
  4157                           
  4158                           ; Clear objects allocated to BANK2
  4159  0093  3020               	movlw	low __pbssBANK2
  4160  0094  0084               	movwf	4
  4161  0095  3001               	movlw	high __pbssBANK2
  4162  0096  0085               	movwf	5
  4163  0097  3012               	movlw	18
  4164  0098  00FE               	movwf	btemp
  4165  0099  3000               	movlw	0
  4166  009A  00FF               	movwf	btemp+1
  4167  009B  3186  2658         	fcall	clear_ram0
  4168  009D                     end_of_initialization:	
  4169                           ;End of C runtime variable initialization code
  4170                           
  4171  009D                     __end_of__initialization:	
  4172  009D  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  4173  009E  0020               	movlb	0
  4174  009F  3184  2C93         	ljmp	_main	;jump to C main() function
  4175                           
  4176                           	psect	bitbssCOMMON
  4177  0380                     __pbitbssCOMMON:	
  4178  0380                     _isMycargo:	
  4179  0380                     	ds	1
  4180  0381                     _workingcounta3:	
  4181  0381                     	ds	1
  4182  0382                     _workingcounta2:	
  4183  0382                     	ds	1
  4184  0383                     _workingcounta1:	
  4185  0383                     	ds	1
  4186  0384                     _workingcounta0:	
  4187  0384                     	ds	1
  4188  0385                     _ra3condision:	
  4189  0385                     	ds	1
  4190  0386                     _isreadTrain:	
  4191  0386                     	ds	1
  4192  0387                     _isCalibrated:	
  4193  0387                     	ds	1
  4194                           
  4195                           	psect	bssCOMMON
  4196  0079                     __pbssCOMMON:	
  4197  0079                     _spi1_Read_data:	
  4198  0079                     	ds	1
  4199                           
  4200                           	psect	bssBANK0
  4201  0048                     __pbssBANK0:	
  4202  0048                     _cargoData:	
  4203  0048                     	ds	16
  4204  0058                     _send_count1:	
  4205  0058                     	ds	2
  4206  005A                     _trainPos:	
  4207  005A                     	ds	2
  4208  005C                     _read_count2:	
  4209  005C                     	ds	2
  4210  005E                     _countabuf:	
  4211  005E                     	ds	2
  4212  0060                     _read_count1:	
  4213  0060                     	ds	2
  4214  0062                     _count2:	
  4215  0062                     	ds	2
  4216  0064                     _count1:	
  4217  0064                     	ds	2
  4218  0066                     _readNG:	
  4219  0066                     	ds	1
  4220  0067                     _readOK:	
  4221  0067                     	ds	1
  4222  0068                     _spi2_Read_data:	
  4223  0068                     	ds	1
  4224  0069                     _send_data:	
  4225  0069                     	ds	1
  4226  006A                     _st_type:	
  4227  006A                     	ds	1
  4228  006B                     _spi2_Send_data:	
  4229  006B                     	ds	1
  4230                           
  4231                           	psect	dataBANK0
  4232  006C                     __pdataBANK0:	
  4233  006C                     _st_dataLength:	
  4234  006C                     	ds	2
  4235                           
  4236                           	psect	bssBANK1
  4237  00A0                     __pbssBANK1:	
  4238  00A0                     _comu_types:	
  4239  00A0                     	ds	18
  4240  00B2                     _command:	
  4241  00B2                     	ds	18
  4242  00C4                     _calibdata:	
  4243  00C4                     	ds	9
  4244  00CD                     _linkInfo:	
  4245  00CD                     	ds	6
  4246  00D3                     _cargoWorkingCount:	
  4247  00D3                     	ds	4
  4248  00D7                     _startTrainBytes:	
  4249  00D7                     	ds	4
  4250  00DB                     _cargoLengthnuf:	
  4251  00DB                     	ds	2
  4252  00DD                     _linkAngle:	
  4253  00DD                     	ds	2
  4254  00DF                     _spi1_send_count:	
  4255  00DF                     	ds	2
  4256  00E1                     _counta2:	
  4257  00E1                     	ds	2
  4258                           
  4259                           	psect	dataBANK1
  4260  00ED                     __pdataBANK1:	
  4261  00ED                     _direction:	
  4262  00ED                     	ds	2
  4263                           
  4264                           	psect	bssBANK2
  4265  0120                     __pbssBANK2:	
  4266  0120                     _cargo_index:	
  4267  0120                     	ds	18
  4268                           
  4269                           	psect	clrtext
  4270  0658                     clear_ram0:	
  4271                           ;	Called with FSR0 containing the base address, and
  4272                           ;	btemp/btemp+1 has the size to clear
  4273                           
  4274  0658  0064               	clrwdt	;clear the watchdog before getting into this loop
  4275  0659                     clrloop0:	
  4276  0659  0180               	clrf	0	;clear RAM location pointed to by FSR
  4277  065A  3101               	addfsr 0,1
  4278  065B  3001               	movlw	1
  4279  065C  02FE               	subwf	126,f
  4280  065D  3000               	movlw	0
  4281  065E  3BFF               	subwfb	127,f
  4282  065F  087F               	movf	127,w
  4283  0660  047E               	iorwf	126,w
  4284  0661  1903               	btfsc	3,2
  4285  0662  3400               	retlw	0	;all done for this memory range, return
  4286  0663  2E59               	goto	clrloop0	;have we reached the end yet?
  4287                           
  4288                           	psect	cstackBANK1
  4289  00E3                     __pcstackBANK1:	
  4290  00E3                     Calibrate_download@buflong:	
  4291                           
  4292                           ; 4 bytes @ 0x0
  4293  00E3                     	ds	4
  4294  00E7                     Calibrate_download@bufint:	
  4295                           
  4296                           ; 2 bytes @ 0x4
  4297  00E7                     	ds	2
  4298  00E9                     Calibrate_download@spi_Read_data:	
  4299                           
  4300                           ; 1 bytes @ 0x6
  4301  00E9                     	ds	1
  4302  00EA                     setComunicateMode@m_type:	
  4303                           
  4304                           ; 1 bytes @ 0x7
  4305  00EA                     	ds	1
  4306  00EB                     setComunicateMode@i:	
  4307                           
  4308                           ; 2 bytes @ 0x8
  4309  00EB                     	ds	2
  4310                           
  4311                           	psect	cstackCOMMON
  4312  0071                     __pcstackCOMMON:	
  4313  0071                     ?_isTrainSt:	
  4314  0071                     ?_isSPI1read:	
  4315                           ; 1 bit 
  4316                           
  4317  0071                     ?_setComunicateMode:	
  4318                           ; 1 bit 
  4319                           
  4320  0071                     ?_isSPI2read:	
  4321                           ; 1 bit 
  4322                           
  4323  0071                     ?_clutchaction:	
  4324                           ; 1 bit 
  4325                           
  4326  0071                     ?_isEndpoint:	
  4327                           ; 1 bit 
  4328                           
  4329  0071                     ?_setSPI1sendData:	
  4330                           ; 1 bit 
  4331                           
  4332  0071                     ??_setSPI1sendData:	
  4333                           ; 1 bytes @ 0x0
  4334                           
  4335  0071                     ?_addAngle:	
  4336                           ; 1 bytes @ 0x0
  4337                           
  4338  0071                     ?_clear:	
  4339                           ; 1 bytes @ 0x0
  4340                           
  4341  0071                     ?_resetTrainData:	
  4342                           ; 1 bytes @ 0x0
  4343                           
  4344  0071                     ?_initComand:	
  4345                           ; 1 bytes @ 0x0
  4346                           
  4347  0071                     ?_initComu_types:	
  4348                           ; 1 bytes @ 0x0
  4349                           
  4350  0071                     ?_InitCalibrate:	
  4351                           ; 1 bytes @ 0x0
  4352                           
  4353  0071                     ?_spi_init:	
  4354                           ; 1 bytes @ 0x0
  4355                           
  4356  0071                     ?_initCargo:	
  4357                           ; 1 bytes @ 0x0
  4358                           
  4359  0071                     ?_read_train:	
  4360                           ; 1 bytes @ 0x0
  4361                           
  4362  0071                     ?_setSPI2sendData:	
  4363                           ; 1 bytes @ 0x0
  4364                           
  4365  0071                     ?_restartCargo:	
  4366                           ; 1 bytes @ 0x0
  4367                           
  4368  0071                     ?_spi1_init:	
  4369                           ; 1 bytes @ 0x0
  4370                           
  4371  0071                     ?_spi2_init:	
  4372                           ; 1 bytes @ 0x0
  4373                           
  4374  0071                     ?_readCargo:	
  4375                           ; 1 bytes @ 0x0
  4376                           
  4377  0071                     ?_setCargoAngle:	
  4378                           ; 1 bytes @ 0x0
  4379                           
  4380  0071                     ?_InterMSSP:	
  4381                           ; 1 bytes @ 0x0
  4382                           
  4383  0071                     ?_initbuffer:	
  4384                           ; 1 bytes @ 0x0
  4385                           
  4386  0071                     ?_init:	
  4387                           ; 1 bytes @ 0x0
  4388                           
  4389  0071                     ?_io_init:	
  4390                           ; 1 bytes @ 0x0
  4391                           
  4392  0071                     ?_initTrain:	
  4393                           ; 1 bytes @ 0x0
  4394                           
  4395  0071                     ?_main:	
  4396                           ; 1 bytes @ 0x0
  4397                           
  4398  0071                     ??_isSPI2read:	
  4399                           ; 1 bytes @ 0x0
  4400                           
  4401  0071                     ?_setSPI1sendDataManual:	
  4402                           ; 1 bytes @ 0x0
  4403                           
  4404  0071                     ?_Calibrate_download:	
  4405                           ; 1 bytes @ 0x0
  4406                           
  4407  0071                     setCargoAngle@m_linkAngleTo:	
  4408                           ; 1 bytes @ 0x0
  4409                           
  4410                           
  4411                           ; 2 bytes @ 0x0
  4412  0071                     	ds	2
  4413  0073                     ??_addAngle:	
  4414  0073                     ??_setCargoAngle:	
  4415                           ; 1 bytes @ 0x2
  4416                           
  4417  0073                     ??_InterMSSP:	
  4418                           ; 1 bytes @ 0x2
  4419                           
  4420                           
  4421                           ; 1 bytes @ 0x2
  4422  0073                     	ds	5
  4423                           
  4424                           	psect	cstackBANK0
  4425  0020                     __pcstackBANK0:	
  4426  0020                     ??_clear:	
  4427  0020                     ??_isTrainSt:	
  4428                           ; 1 bytes @ 0x0
  4429                           
  4430  0020                     ??_resetTrainData:	
  4431                           ; 1 bytes @ 0x0
  4432                           
  4433  0020                     ??_initComand:	
  4434                           ; 1 bytes @ 0x0
  4435                           
  4436  0020                     ??_initComu_types:	
  4437                           ; 1 bytes @ 0x0
  4438                           
  4439  0020                     ??_initCargo:	
  4440                           ; 1 bytes @ 0x0
  4441                           
  4442  0020                     ??_isSPI1read:	
  4443                           ; 1 bytes @ 0x0
  4444                           
  4445  0020                     ??_read_train:	
  4446                           ; 1 bytes @ 0x0
  4447                           
  4448  0020                     ??_setSPI2sendData:	
  4449                           ; 1 bytes @ 0x0
  4450                           
  4451  0020                     ??_restartCargo:	
  4452                           ; 1 bytes @ 0x0
  4453                           
  4454  0020                     ??_spi1_init:	
  4455                           ; 1 bytes @ 0x0
  4456                           
  4457  0020                     ??_spi2_init:	
  4458                           ; 1 bytes @ 0x0
  4459                           
  4460  0020                     ??_initbuffer:	
  4461                           ; 1 bytes @ 0x0
  4462                           
  4463  0020                     ??_io_init:	
  4464                           ; 1 bytes @ 0x0
  4465                           
  4466  0020                     ??_setSPI1sendDataManual:	
  4467                           ; 1 bytes @ 0x0
  4468                           
  4469  0020                     ??_clutchaction:	
  4470                           ; 1 bytes @ 0x0
  4471                           
  4472  0020                     ?_getCargoData:	
  4473                           ; 1 bytes @ 0x0
  4474                           
  4475  0020                     setSPI1sendDataManual@data:	
  4476                           ; 16 bytes @ 0x0
  4477                           
  4478  0020                     clutchaction@comannd:	
  4479                           ; 1 bytes @ 0x0
  4480                           
  4481                           
  4482                           ; 1 bytes @ 0x0
  4483  0020                     	ds	1
  4484  0021                     ??_isEndpoint:	
  4485  0021                     spi1_init@dummy:	
  4486                           ; 1 bytes @ 0x1
  4487                           
  4488  0021                     spi2_init@dummy:	
  4489                           ; 1 bytes @ 0x1
  4490                           
  4491                           
  4492                           ; 1 bytes @ 0x1
  4493  0021                     	ds	1
  4494  0022                     ??_spi_init:	
  4495  0022                     initbuffer@i:	
  4496                           ; 1 bytes @ 0x2
  4497                           
  4498  0022                     read_train@bufint:	
  4499                           ; 2 bytes @ 0x2
  4500                           
  4501                           
  4502                           ; 2 bytes @ 0x2
  4503  0022                     	ds	2
  4504  0024                     ??_init:	
  4505                           
  4506                           ; 1 bytes @ 0x4
  4507  0024                     	ds	2
  4508  0026                     isEndpoint@spi2data:	
  4509                           
  4510                           ; 1 bytes @ 0x6
  4511  0026                     	ds	2
  4512  0028                     isTrainSt@buf:	
  4513                           
  4514                           ; 1 bytes @ 0x8
  4515  0028                     	ds	1
  4516  0029                     ??_initTrain:	
  4517                           
  4518                           ; 1 bytes @ 0x9
  4519  0029                     	ds	7
  4520  0030                     ??_getCargoData:	
  4521                           
  4522                           ; 1 bytes @ 0x10
  4523  0030                     	ds	1
  4524  0031                     ??_InitCalibrate:	
  4525  0031                     ??_readCargo:	
  4526                           ; 1 bytes @ 0x11
  4527                           
  4528                           
  4529                           ; 1 bytes @ 0x11
  4530  0031                     	ds	1
  4531  0032                     InitCalibrate@cargoData:	
  4532                           
  4533                           ; 16 bytes @ 0x12
  4534  0032                     	ds	4
  4535  0036                     readCargo@buflong:	
  4536                           
  4537                           ; 4 bytes @ 0x16
  4538  0036                     	ds	4
  4539  003A                     readCargo@bufint:	
  4540                           
  4541                           ; 2 bytes @ 0x1A
  4542  003A                     	ds	2
  4543  003C                     readCargo@spi1_Read_data:	
  4544                           
  4545                           ; 1 bytes @ 0x1C
  4546  003C                     	ds	6
  4547  0042                     ??_Calibrate_download:	
  4548                           
  4549                           ; 1 bytes @ 0x22
  4550  0042                     	ds	5
  4551  0047                     ??_setComunicateMode:	
  4552                           
  4553                           ; 1 bytes @ 0x27
  4554  0047                     	ds	1
  4555  0048                     ??_main:	
  4556                           
  4557                           	psect	maintext
  4558  0493                     __pmaintext:	
  4559                           ; 1 bytes @ 0x28
  4560 ;;
  4561 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  4562 ;;
  4563 ;; *************** function _main *****************
  4564 ;; Defined at:
  4565 ;;		line 163 in file "D:/programdata/16F18346_Link_IC.X/main.c"
  4566 ;; Parameters:    Size  Location     Type
  4567 ;;		None
  4568 ;; Auto vars:     Size  Location     Type
  4569 ;;		None
  4570 ;; Return value:  Size  Location     Type
  4571 ;;                  1    wreg      void 
  4572 ;; Registers used:
  4573 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4574 ;; Tracked objects:
  4575 ;;		On entry : B1F/0
  4576 ;;		On exit  : 0/0
  4577 ;;		Unchanged: 0/0
  4578 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4579 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4580 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4581 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4582 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4583 ;;Total ram usage:        0 bytes
  4584 ;; Hardware stack levels required when called:    7
  4585 ;; This function calls:
  4586 ;;		_InitCalibrate
  4587 ;;		_init
  4588 ;;		_initCargo
  4589 ;;		_initComand
  4590 ;;		_initComu_types
  4591 ;;		_initTrain
  4592 ;;		_io_init
  4593 ;;		_isSPI1read
  4594 ;;		_read_train
  4595 ;;		_setComunicateMode
  4596 ;;		_setSPI2sendData
  4597 ;;		_spi_init
  4598 ;; This function is called by:
  4599 ;;		Startup code after reset
  4600 ;; This function uses a non-reentrant model
  4601 ;;
  4602                           
  4603                           
  4604                           ;psect for function _main
  4605  0493                     _main:	
  4606                           
  4607                           ;main.c: 164: initComand();
  4608                           
  4609                           ;incstack = 0
  4610                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4611  0493  3182  22E3  3184   	fcall	_initComand
  4612                           
  4613                           ;main.c: 165: initComu_types();
  4614  0496  3182  2276  3184   	fcall	_initComu_types
  4615                           
  4616                           ;main.c: 166: InitCalibrate();
  4617  0499  3184  24C1  3184   	fcall	_InitCalibrate
  4618                           
  4619                           ;main.c: 167: init();
  4620  049C  3185  2516  3184   	fcall	_init
  4621                           
  4622                           ;main.c: 168: io_init();
  4623  049F  3186  2685  3184   	fcall	_io_init
  4624                           
  4625                           ;main.c: 169: spi_init();
  4626  04A2  3186  267B  3184   	fcall	_spi_init
  4627                           
  4628                           ;main.c: 170: initCargo();
  4629  04A5  3185  25E7  3184   	fcall	_initCargo
  4630                           
  4631                           ;main.c: 171: LATAbits.LATA0 = 1;
  4632  04A8  0022               	movlb	2	; select bank2
  4633  04A9  140C               	bsf	12,0	;volatile
  4634  04AA                     l2884:	
  4635                           ;main.c: 172: while(1){
  4636                           
  4637                           
  4638                           ;main.c: 173: if(!isSPI1read()){
  4639  04AA  3186  2624  3184   	fcall	_isSPI1read
  4640  04AD  1803               	btfsc	3,0
  4641  04AE  2CAA               	goto	l2884
  4642                           
  4643                           ;main.c: 174: initTrain();
  4644  04AF  3183  2350  3184   	fcall	_initTrain
  4645                           
  4646                           ;main.c: 175: if(isreadTrain){
  4647  04B2  1F70               	btfss	_isreadTrain/(0+8),_isreadTrain& (0+7)
  4648  04B3  2CBA               	goto	l2892
  4649                           
  4650                           ;main.c: 176: setComunicateMode(st_type);
  4651  04B4  0020               	movlb	0	; select bank0
  4652  04B5  086A               	movf	_st_type,w
  4653  04B6  3184  241D  3184   	fcall	_setComunicateMode
  4654                           
  4655                           ;main.c: 177: }else{
  4656  04B9  2CBD               	goto	l2894
  4657  04BA                     l2892:	
  4658                           
  4659                           ;main.c: 178: read_train();
  4660  04BA  3183  23DB  3184   	fcall	_read_train
  4661  04BD                     l2894:	
  4662                           
  4663                           ;main.c: 179: }
  4664                           ;main.c: 180: setSPI2sendData();
  4665  04BD  3185  253E  3184   	fcall	_setSPI2sendData
  4666  04C0  2CAA               	goto	l2884
  4667  04C1                     __end_of_main:	
  4668                           ;main.c: 181: }
  4669                           ;main.c: 182: };
  4670                           ;main.c: 183: return;
  4671                           
  4672                           
  4673                           	psect	text1
  4674  067B                     __ptext1:	
  4675 ;; *************** function _spi_init *****************
  4676 ;; Defined at:
  4677 ;;		line 22 in file "D:/programdata/16F18346_Link_IC.X/spiControl.c"
  4678 ;; Parameters:    Size  Location     Type
  4679 ;;		None
  4680 ;; Auto vars:     Size  Location     Type
  4681 ;;		None
  4682 ;; Return value:  Size  Location     Type
  4683 ;;                  1    wreg      void 
  4684 ;; Registers used:
  4685 ;;		wreg, status,2, status,0, pclath, cstack
  4686 ;; Tracked objects:
  4687 ;;		On entry : 0/0
  4688 ;;		On exit  : 0/0
  4689 ;;		Unchanged: 0/0
  4690 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4691 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4692 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4693 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4694 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4695 ;;Total ram usage:        0 bytes
  4696 ;; Hardware stack levels used:    1
  4697 ;; Hardware stack levels required when called:    4
  4698 ;; This function calls:
  4699 ;;		_spi1_init
  4700 ;;		_spi2_init
  4701 ;; This function is called by:
  4702 ;;		_main
  4703 ;; This function uses a non-reentrant model
  4704 ;;
  4705                           
  4706                           
  4707                           ;psect for function _spi_init
  4708  067B                     _spi_init:	
  4709                           
  4710                           ;spiControl.c: 23: INTCONbits.PEIE = 0;
  4711                           
  4712                           ;incstack = 0
  4713                           ; Regs used in _spi_init: [wreg+status,2+status,0+pclath+cstack]
  4714  067B  130B               	bcf	11,6	;volatile
  4715                           
  4716                           ;spiControl.c: 24: INTCONbits.GIE = 0;
  4717  067C  138B               	bcf	11,7	;volatile
  4718                           
  4719                           ;spiControl.c: 25: spi1_init();
  4720  067D  3185  25A7  3186   	fcall	_spi1_init
  4721                           
  4722                           ;spiControl.c: 26: spi2_init();
  4723  0680  3185  2563         	fcall	_spi2_init
  4724                           
  4725                           ;spiControl.c: 27: INTCONbits.PEIE = 1;
  4726  0682  170B               	bsf	11,6	;volatile
  4727                           
  4728                           ;spiControl.c: 28: INTCONbits.GIE = 1;
  4729  0683  178B               	bsf	11,7	;volatile
  4730  0684  0008               	return
  4731  0685                     __end_of_spi_init:	
  4732                           
  4733                           	psect	text2
  4734  0563                     __ptext2:	
  4735 ;; *************** function _spi2_init *****************
  4736 ;; Defined at:
  4737 ;;		line 49 in file "D:/programdata/16F18346_Link_IC.X/spiControl.c"
  4738 ;; Parameters:    Size  Location     Type
  4739 ;;		None
  4740 ;; Auto vars:     Size  Location     Type
  4741 ;;  dummy           1    1[BANK0 ] unsigned char 
  4742 ;; Return value:  Size  Location     Type
  4743 ;;                  1    wreg      void 
  4744 ;; Registers used:
  4745 ;;		wreg, status,2, status,0
  4746 ;; Tracked objects:
  4747 ;;		On entry : 0/0
  4748 ;;		On exit  : 0/0
  4749 ;;		Unchanged: 0/0
  4750 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4751 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4752 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4753 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4754 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4755 ;;Total ram usage:        2 bytes
  4756 ;; Hardware stack levels used:    1
  4757 ;; Hardware stack levels required when called:    3
  4758 ;; This function calls:
  4759 ;;		Nothing
  4760 ;; This function is called by:
  4761 ;;		_spi_init
  4762 ;; This function uses a non-reentrant model
  4763 ;;
  4764                           
  4765                           
  4766                           ;psect for function _spi2_init
  4767  0563                     _spi2_init:	
  4768                           
  4769                           ;spiControl.c: 50: unsigned char dummy;
  4770                           ;spiControl.c: 51: SSP2CON3bits.PCIE = 0;
  4771                           
  4772                           ;incstack = 0
  4773                           ; Regs used in _spi2_init: [wreg+status,2+status,0]
  4774  0563  0024               	movlb	4	; select bank4
  4775  0564  131F               	bcf	31,6	;volatile
  4776                           
  4777                           ;spiControl.c: 52: RA2PPS = 0b11011;
  4778  0565  301B               	movlw	27
  4779  0566  003D               	movlb	29	; select bank29
  4780  0567  0092               	movwf	18	;volatile
  4781                           
  4782                           ;spiControl.c: 53: RB7PPS = 0b11010;
  4783  0568  301A               	movlw	26
  4784  0569  009F               	movwf	31	;volatile
  4785                           
  4786                           ;spiControl.c: 54: SSP2SSPPSbits.SSP2SSPPS = 0b01111;
  4787  056A  003C               	movlb	28	; select bank28
  4788  056B  081F               	movf	31,w	;volatile
  4789  056C  39E0               	andlw	-32
  4790  056D  380F               	iorlw	15
  4791  056E  009F               	movwf	31	;volatile
  4792                           
  4793                           ;spiControl.c: 55: SSP2CON1bits.SSPOV = 1;
  4794  056F  0024               	movlb	4	; select bank4
  4795  0570  171D               	bsf	29,6	;volatile
  4796                           
  4797                           ;spiControl.c: 56: SSP2CON1bits.SSPEN = 1;
  4798  0571  169D               	bsf	29,5	;volatile
  4799                           
  4800                           ;spiControl.c: 57: SSP2CON1bits.SSPM = 0b0001;
  4801  0572  081D               	movf	29,w	;volatile
  4802  0573  39F0               	andlw	-16
  4803  0574  3801               	iorlw	1
  4804  0575  009D               	movwf	29	;volatile
  4805                           
  4806                           ;spiControl.c: 58: SSP2CON3bits.BOEN = 1;
  4807  0576  161F               	bsf	31,4	;volatile
  4808                           
  4809                           ;spiControl.c: 59: SSP2STATbits.SMP = 0;
  4810  0577  139C               	bcf	28,7	;volatile
  4811                           
  4812                           ;spiControl.c: 60: SSP2STATbits.CKE = 0;
  4813  0578  131C               	bcf	28,6	;volatile
  4814                           
  4815                           ;spiControl.c: 61: SSP2CON1bits.CKP = 0;
  4816  0579  121D               	bcf	29,4	;volatile
  4817                           
  4818                           ;spiControl.c: 62: PIE2bits.SSP2IE = 1;
  4819  057A  0021               	movlb	1	; select bank1
  4820  057B  1592               	bsf	18,3	;volatile
  4821                           
  4822                           ;spiControl.c: 63: PIR2bits.SSP2IF = 0;
  4823  057C  0020               	movlb	0	; select bank0
  4824  057D  1192               	bcf	18,3	;volatile
  4825                           
  4826                           ;spiControl.c: 64: dummy = SSP2BUF;
  4827  057E  0024               	movlb	4	; select bank4
  4828  057F  0819               	movf	25,w	;volatile
  4829  0580  0020               	movlb	0	; select bank0
  4830  0581  00A0               	movwf	??_spi2_init
  4831  0582  0820               	movf	??_spi2_init,w
  4832  0583  00A1               	movwf	spi2_init@dummy
  4833  0584  0008               	return
  4834  0585                     __end_of_spi2_init:	
  4835                           
  4836                           	psect	text3
  4837  05A7                     __ptext3:	
  4838 ;; *************** function _spi1_init *****************
  4839 ;; Defined at:
  4840 ;;		line 33 in file "D:/programdata/16F18346_Link_IC.X/spiControl.c"
  4841 ;; Parameters:    Size  Location     Type
  4842 ;;		None
  4843 ;; Auto vars:     Size  Location     Type
  4844 ;;  dummy           1    1[BANK0 ] unsigned char 
  4845 ;; Return value:  Size  Location     Type
  4846 ;;                  1    wreg      void 
  4847 ;; Registers used:
  4848 ;;		wreg, status,2, status,0
  4849 ;; Tracked objects:
  4850 ;;		On entry : 0/0
  4851 ;;		On exit  : 0/0
  4852 ;;		Unchanged: 0/0
  4853 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4854 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4855 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4856 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4857 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4858 ;;Total ram usage:        2 bytes
  4859 ;; Hardware stack levels used:    1
  4860 ;; Hardware stack levels required when called:    3
  4861 ;; This function calls:
  4862 ;;		Nothing
  4863 ;; This function is called by:
  4864 ;;		_spi_init
  4865 ;; This function uses a non-reentrant model
  4866 ;;
  4867                           
  4868                           
  4869                           ;psect for function _spi1_init
  4870  05A7                     _spi1_init:	
  4871                           
  4872                           ;spiControl.c: 34: unsigned char dummy;
  4873                           ;spiControl.c: 35: SSP1CON3bits.PCIE = 0;
  4874                           
  4875                           ;incstack = 0
  4876                           ; Regs used in _spi1_init: [wreg+status,2+status,0]
  4877  05A7  0024               	movlb	4	; select bank4
  4878  05A8  1317               	bcf	23,6	;volatile
  4879                           
  4880                           ;spiControl.c: 36: RC2PPS = 0b11001;
  4881  05A9  3019               	movlw	25
  4882  05AA  003D               	movlb	29	; select bank29
  4883  05AB  00A2               	movwf	34	;volatile
  4884                           
  4885                           ;spiControl.c: 37: SSP1SSPPSbits.SSP1SSPPS = 0b10110;
  4886  05AC  003C               	movlb	28	; select bank28
  4887  05AD  0822               	movf	34,w	;volatile
  4888  05AE  39E0               	andlw	-32
  4889  05AF  3816               	iorlw	22
  4890  05B0  00A2               	movwf	34	;volatile
  4891                           
  4892                           ;spiControl.c: 38: SSP1CON1bits.SSPOV = 1;
  4893  05B1  0024               	movlb	4	; select bank4
  4894  05B2  1715               	bsf	21,6	;volatile
  4895                           
  4896                           ;spiControl.c: 39: SSP1CON1bits.SSPEN = 1;
  4897  05B3  1695               	bsf	21,5	;volatile
  4898                           
  4899                           ;spiControl.c: 40: SSP1CON1bits.SSPM = 0b0100;
  4900  05B4  0815               	movf	21,w	;volatile
  4901  05B5  39F0               	andlw	-16
  4902  05B6  3804               	iorlw	4
  4903  05B7  0095               	movwf	21	;volatile
  4904                           
  4905                           ;spiControl.c: 41: SSP1CON3bits.BOEN = 1;
  4906  05B8  1617               	bsf	23,4	;volatile
  4907                           
  4908                           ;spiControl.c: 42: SSP1STATbits.SMP = 0;
  4909  05B9  1394               	bcf	20,7	;volatile
  4910                           
  4911                           ;spiControl.c: 43: SSP1STATbits.CKE = 0;
  4912  05BA  1314               	bcf	20,6	;volatile
  4913                           
  4914                           ;spiControl.c: 44: SSP1CON1bits.CKP = 0;
  4915  05BB  1215               	bcf	21,4	;volatile
  4916                           
  4917                           ;spiControl.c: 45: PIE1bits.SSP1IE = 1;
  4918  05BC  0021               	movlb	1	; select bank1
  4919  05BD  1591               	bsf	17,3	;volatile
  4920                           
  4921                           ;spiControl.c: 46: PIR1bits.SSP1IF = 0;
  4922  05BE  0020               	movlb	0	; select bank0
  4923  05BF  1191               	bcf	17,3	;volatile
  4924                           
  4925                           ;spiControl.c: 47: dummy = SSP1BUF;
  4926  05C0  0024               	movlb	4	; select bank4
  4927  05C1  0811               	movf	17,w	;volatile
  4928  05C2  0020               	movlb	0	; select bank0
  4929  05C3  00A0               	movwf	??_spi1_init
  4930  05C4  0820               	movf	??_spi1_init,w
  4931  05C5  00A1               	movwf	spi1_init@dummy
  4932  05C6  0008               	return
  4933  05C7                     __end_of_spi1_init:	
  4934                           
  4935                           	psect	text4
  4936  053E                     __ptext4:	
  4937 ;; *************** function _setSPI2sendData *****************
  4938 ;; Defined at:
  4939 ;;		line 106 in file "D:/programdata/16F18346_Link_IC.X/spiControl.c"
  4940 ;; Parameters:    Size  Location     Type
  4941 ;;		None
  4942 ;; Auto vars:     Size  Location     Type
  4943 ;;		None
  4944 ;; Return value:  Size  Location     Type
  4945 ;;                  1    wreg      void 
  4946 ;; Registers used:
  4947 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4948 ;; Tracked objects:
  4949 ;;		On entry : 0/0
  4950 ;;		On exit  : 0/0
  4951 ;;		Unchanged: 0/0
  4952 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4953 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4954 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4955 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4956 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4957 ;;Total ram usage:        4 bytes
  4958 ;; Hardware stack levels used:    1
  4959 ;; Hardware stack levels required when called:    3
  4960 ;; This function calls:
  4961 ;;		Nothing
  4962 ;; This function is called by:
  4963 ;;		_main
  4964 ;; This function uses a non-reentrant model
  4965 ;;
  4966                           
  4967                           
  4968                           ;psect for function _setSPI2sendData
  4969  053E                     _setSPI2sendData:	
  4970                           
  4971                           ;spiControl.c: 107: if(linkInfo.endpoint == 0){
  4972                           
  4973                           ;incstack = 0
  4974                           ; Regs used in _setSPI2sendData: [wreg+fsr1l+fsr1h+status,2+status,0]
  4975  053E  0021               	movlb	1	; select bank1
  4976  053F  0852               	movf	(_linkInfo^(0+128)+5),w
  4977  0540  1D03               	btfss	3,2
  4978  0541  2D47               	goto	l2862
  4979                           
  4980                           ;spiControl.c: 108: SSP2BUF = spi2_Send_data;
  4981  0542  0020               	movlb	0	; select bank0
  4982  0543  086B               	movf	_spi2_Send_data,w
  4983  0544  0024               	movlb	4	; select bank4
  4984  0545  0099               	movwf	25	;volatile
  4985                           
  4986                           ;spiControl.c: 109: }else{
  4987  0546  0008               	return
  4988  0547                     l2862:	
  4989                           
  4990                           ;spiControl.c: 110: spi2_buffer_data[count2] = spi2_Send_data;
  4991  0547  30F0               	movlw	240
  4992  0548  0020               	movlb	0	; select bank0
  4993  0549  00A0               	movwf	??_setSPI2sendData
  4994  054A  3025               	movlw	37
  4995  054B  00A1               	movwf	??_setSPI2sendData+1
  4996  054C  0862               	movf	_count2,w
  4997  054D  0720               	addwf	??_setSPI2sendData,w
  4998  054E  00A2               	movwf	??_setSPI2sendData+2
  4999  054F  0863               	movf	_count2+1,w
  5000  0550  3D21               	addwfc	??_setSPI2sendData+1,w
  5001  0551  00A3               	movwf	??_setSPI2sendData+3
  5002  0552  0822               	movf	??_setSPI2sendData+2,w
  5003  0553  0086               	movwf	6
  5004  0554  0823               	movf	??_setSPI2sendData+3,w
  5005  0555  0087               	movwf	7
  5006  0556  086B               	movf	_spi2_Send_data,w
  5007  0557  0081               	movwf	1
  5008                           
  5009                           ;spiControl.c: 111: count2++;
  5010  0558  3001               	movlw	1
  5011  0559  07E2               	addwf	_count2,f
  5012  055A  3000               	movlw	0
  5013  055B  3DE3               	addwfc	_count2+1,f
  5014                           
  5015                           ;spiControl.c: 112: if(count2 == 256){
  5016  055C  0363               	decf	_count2+1,w
  5017  055D  0462               	iorwf	_count2,w
  5018  055E  1D03               	btfss	3,2
  5019  055F  0008               	return
  5020                           
  5021                           ;spiControl.c: 113: count2 = 0;
  5022  0560  01E2               	clrf	_count2
  5023  0561  01E3               	clrf	_count2+1
  5024  0562  0008               	return
  5025  0563                     __end_of_setSPI2sendData:	
  5026                           
  5027                           	psect	text5
  5028  041D                     __ptext5:	
  5029 ;; *************** function _setComunicateMode *****************
  5030 ;; Defined at:
  5031 ;;		line 38 in file "D:/programdata/16F18346_Link_IC.X/comu_type.c"
  5032 ;; Parameters:    Size  Location     Type
  5033 ;;  m_type          1    wreg     unsigned char 
  5034 ;; Auto vars:     Size  Location     Type
  5035 ;;  m_type          1    7[BANK1 ] unsigned char 
  5036 ;;  i               2    8[BANK1 ] int 
  5037 ;; Return value:  Size  Location     Type
  5038 ;;		None               void
  5039 ;; Registers used:
  5040 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5041 ;; Tracked objects:
  5042 ;;		On entry : 0/0
  5043 ;;		On exit  : 0/0
  5044 ;;		Unchanged: 0/0
  5045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5046 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5047 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5048 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5049 ;;      Totals:         0       1       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5050 ;;Total ram usage:        4 bytes
  5051 ;; Hardware stack levels used:    1
  5052 ;; Hardware stack levels required when called:    6
  5053 ;; This function calls:
  5054 ;;		_Calibrate_download
  5055 ;;		_readCargo
  5056 ;; This function is called by:
  5057 ;;		_main
  5058 ;; This function uses a non-reentrant model
  5059 ;;
  5060                           
  5061                           
  5062                           ;psect for function _setComunicateMode
  5063  041D                     _setComunicateMode:	
  5064                           
  5065                           ;incstack = 0
  5066                           ; Regs used in _setComunicateMode: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5067                           ;setComunicateMode@m_type stored from wreg
  5068  041D  0021               	movlb	1	; select bank1
  5069  041E  00EA               	movwf	setComunicateMode@m_type^(0+128)
  5070                           
  5071                           ;comu_type.c: 39: for(int i = 0; i < 18; i++){
  5072  041F  01EB               	clrf	setComunicateMode@i^(0+128)
  5073  0420  01EC               	clrf	(setComunicateMode@i+1)^(0+128)
  5074  0421                     L1:	
  5075  0421  086C               	movf	(setComunicateMode@i+1)^(0+128),w
  5076  0422  3A80               	xorlw	128
  5077  0423  0020               	movlb	0	; select bank0
  5078  0424  00C7               	movwf	??_setComunicateMode
  5079  0425  3080               	movlw	128
  5080  0426  0247               	subwf	??_setComunicateMode,w
  5081  0427  1D03               	skipz
  5082  0428  2C2C               	goto	u1275
  5083  0429  3012               	movlw	18
  5084  042A  0021               	movlb	1	; select bank1
  5085  042B  026B               	subwf	setComunicateMode@i^(0+128),w
  5086  042C                     u1275:	
  5087  042C  1803               	btfsc	3,0
  5088  042D  0008               	return
  5089                           
  5090                           ;comu_type.c: 40: if(comu_types[i] == m_type){
  5091  042E  0021               	movlb	1	; select bank1
  5092  042F  086B               	movf	setComunicateMode@i^(0+128),w
  5093  0430  3EA0               	addlw	(low (_comu_types| 0))& (0+255)
  5094  0431  0086               	movwf	6
  5095  0432  0187               	clrf	7
  5096  0433  0801               	movf	1,w
  5097  0434  066A               	xorwf	setComunicateMode@m_type^(0+128),w
  5098  0435  1903               	btfsc	3,2
  5099  0436  2C40               	goto	l2824
  5100  0437  2C54               	goto	l2826
  5101  0438                     l2814:	
  5102                           ;comu_type.c: 42: case 0:
  5103                           
  5104                           ;comu_type.c: 41: switch(i){
  5105                           
  5106                           
  5107                           ;comu_type.c: 43: Calibrate_download(spi1_Read_data);
  5108  0438  0879               	movf	_spi1_Read_data,w
  5109  0439  3180  20A1         	fcall	_Calibrate_download
  5110                           
  5111                           ;comu_type.c: 44: return 1;
  5112                           ;	Return value of _setComunicateMode is never used
  5113  043B  0008               	return
  5114  043C                     l2818:	
  5115                           ;comu_type.c: 45: case 1:
  5116                           
  5117                           
  5118                           ;comu_type.c: 46: readCargo(spi1_Read_data);
  5119  043C  0879               	movf	_spi1_Read_data,w
  5120  043D  3181  2196         	fcall	_readCargo
  5121                           
  5122                           ;comu_type.c: 51: return 1;
  5123                           ;	Return value of _setComunicateMode is never used
  5124                           
  5125                           ;comu_type.c: 50: case 3:
  5126                           
  5127                           ;comu_type.c: 49: return 1;
  5128                           ;	Return value of _setComunicateMode is never used
  5129                           
  5130                           ;comu_type.c: 48: case 2:
  5131                           
  5132                           ;comu_type.c: 47: return 1;
  5133                           ;	Return value of _setComunicateMode is never used
  5134  043F  0008               	return
  5135  0440                     l2824:	
  5136                           ;comu_type.c: 52: }
  5137                           
  5138                           
  5139                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5140                           ; Switch size 1, requested type "space"
  5141                           ; Number of cases is 1, Range of values is 0 to 0
  5142                           ; switch strategies available:
  5143                           ; Name         Instructions Cycles
  5144                           ; simple_byte            4     3 (average)
  5145                           ; direct_byte            8     6 (fixed)
  5146                           ; jumptable            260     6 (fixed)
  5147                           ;	Chosen strategy is simple_byte
  5148  0440  0021               	movlb	1	; select bank1
  5149  0441  086C               	movf	(setComunicateMode@i+1)^(0+128),w
  5150  0442  3A00               	xorlw	0	; case 0
  5151  0443  1903               	skipnz
  5152  0444  2C46               	goto	l3022
  5153  0445  2C54               	goto	l2826
  5154  0446                     l3022:	
  5155                           
  5156                           ; Switch size 1, requested type "space"
  5157                           ; Number of cases is 4, Range of values is 0 to 3
  5158                           ; switch strategies available:
  5159                           ; Name         Instructions Cycles
  5160                           ; simple_byte           13     7 (average)
  5161                           ; direct_byte           14     6 (fixed)
  5162                           ; jumptable            260     6 (fixed)
  5163                           ;	Chosen strategy is simple_byte
  5164  0446  086B               	movf	setComunicateMode@i^(0+128),w
  5165  0447  3A00               	xorlw	0	; case 0
  5166  0448  1903               	skipnz
  5167  0449  2C38               	goto	l2814
  5168  044A  3A01               	xorlw	1	; case 1
  5169  044B  1903               	skipnz
  5170  044C  2C3C               	goto	l2818
  5171  044D  3A03               	xorlw	3	; case 2
  5172  044E  1903               	skipnz
  5173  044F  2C5A               	goto	l450
  5174  0450  3A01               	xorlw	1	; case 3
  5175  0451  1903               	skipnz
  5176  0452  2C5A               	goto	l450
  5177  0453  2C54               	goto	l2826
  5178  0454                     l2826:	
  5179  0454  3001               	movlw	1
  5180  0455  0021               	movlb	1	; select bank1
  5181  0456  07EB               	addwf	setComunicateMode@i^(0+128),f
  5182  0457  3000               	movlw	0
  5183  0458  3DEC               	addwfc	(setComunicateMode@i+1)^(0+128),f
  5184  0459  2C21               	goto	L1
  5185  045A                     l450:	
  5186                           ;comu_type.c: 53: }
  5187                           ;comu_type.c: 54: }
  5188                           ;comu_type.c: 55: return 0;
  5189                           ;	Return value of _setComunicateMode is never used
  5190                           
  5191  045A  0008               	return
  5192  045B                     __end_of_setComunicateMode:	
  5193                           
  5194                           	psect	text6
  5195  0196                     __ptext6:	
  5196 ;; *************** function _readCargo *****************
  5197 ;; Defined at:
  5198 ;;		line 15 in file "D:/programdata/16F18346_Link_IC.X/normal_mode.c"
  5199 ;; Parameters:    Size  Location     Type
  5200 ;;  spi1_Read_da    1    wreg     unsigned char 
  5201 ;; Auto vars:     Size  Location     Type
  5202 ;;  spi1_Read_da    1   28[BANK0 ] unsigned char 
  5203 ;;  buflong         4   22[BANK0 ] unsigned long 
  5204 ;;  bufint          2   26[BANK0 ] unsigned int 
  5205 ;; Return value:  Size  Location     Type
  5206 ;;                  1    wreg      void 
  5207 ;; Registers used:
  5208 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5209 ;; Tracked objects:
  5210 ;;		On entry : 0/0
  5211 ;;		On exit  : 0/0
  5212 ;;		Unchanged: 0/0
  5213 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5214 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5215 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5216 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5217 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5218 ;;Total ram usage:       12 bytes
  5219 ;; Hardware stack levels used:    1
  5220 ;; Hardware stack levels required when called:    4
  5221 ;; This function calls:
  5222 ;;		_clutchaction
  5223 ;;		_getCargoData
  5224 ;;		_restartCargo
  5225 ;; This function is called by:
  5226 ;;		_setComunicateMode
  5227 ;; This function uses a non-reentrant model
  5228 ;;
  5229                           
  5230                           
  5231                           ;psect for function _readCargo
  5232  0196                     _readCargo:	
  5233                           
  5234                           ;incstack = 0
  5235                           ; Regs used in _readCargo: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5236                           ;readCargo@spi1_Read_data stored from wreg
  5237  0196  0020               	movlb	0	; select bank0
  5238  0197  00BC               	movwf	readCargo@spi1_Read_data
  5239                           
  5240                           ;normal_mode.c: 16: unsigned int bufint = spi1_Read_data;
  5241  0198  083C               	movf	readCargo@spi1_Read_data,w
  5242  0199  00B1               	movwf	??_readCargo
  5243  019A  01B2               	clrf	??_readCargo+1
  5244  019B  0831               	movf	??_readCargo,w
  5245  019C  00BA               	movwf	readCargo@bufint
  5246  019D  0832               	movf	??_readCargo+1,w
  5247  019E  00BB               	movwf	readCargo@bufint+1
  5248                           
  5249                           ;normal_mode.c: 17: unsigned long buflong = spi1_Read_data;
  5250  019F  083C               	movf	readCargo@spi1_Read_data,w
  5251  01A0  00B1               	movwf	??_readCargo
  5252  01A1  01B2               	clrf	??_readCargo+1
  5253  01A2  01B3               	clrf	??_readCargo+2
  5254  01A3  01B4               	clrf	??_readCargo+3
  5255  01A4  0834               	movf	??_readCargo+3,w
  5256  01A5  00B9               	movwf	readCargo@buflong+3
  5257  01A6  0833               	movf	??_readCargo+2,w
  5258  01A7  00B8               	movwf	readCargo@buflong+2
  5259  01A8  0832               	movf	??_readCargo+1,w
  5260  01A9  00B7               	movwf	readCargo@buflong+1
  5261  01AA  0831               	movf	??_readCargo,w
  5262  01AB  00B6               	movwf	readCargo@buflong
  5263                           
  5264                           ;normal_mode.c: 18: cargoData = getCargoData();
  5265  01AC  3186  2614  3181   	fcall	_getCargoData
  5266  01AF  0020               	movlb	0	; select bank0
  5267  01B0  3020               	movlw	low ?_getCargoData
  5268  01B1  0086               	movwf	6
  5269  01B2  3000               	movlw	high ?_getCargoData
  5270  01B3  0087               	movwf	7
  5271  01B4  3048               	movlw	low _cargoData
  5272  01B5  0084               	movwf	4
  5273  01B6  3000               	movlw	high _cargoData
  5274  01B7  0085               	movwf	5
  5275  01B8  3010               	movlw	16
  5276  01B9  00B1               	movwf	??_readCargo
  5277  01BA                     u1170:	
  5278  01BA  0016               	moviw fsr1++
  5279  01BB  001A               	movwi fsr0++
  5280  01BC  0BB1               	decfsz	??_readCargo,f
  5281  01BD  29BA               	goto	u1170
  5282                           
  5283                           ;normal_mode.c: 19: if(isMycargo){
  5284  01BE  1870               	btfsc	_isMycargo/(0+8),_isMycargo& (0+7)
  5285  01BF  2A46               	goto	l2680
  5286  01C0  2A55               	goto	l2682
  5287  01C1                     l2638:	
  5288                           ;normal_mode.c: 21: case 0:
  5289                           
  5290                           ;normal_mode.c: 20: switch(countabuf){
  5291                           
  5292                           
  5293                           ;normal_mode.c: 22: cargoData.cargoLength = (bufint << 8 | 0x00FF);
  5294  01C1  083A               	movf	readCargo@bufint,w
  5295  01C2  00B2               	movwf	??_readCargo+1
  5296  01C3  01B1               	clrf	??_readCargo
  5297  01C4  30FF               	movlw	255
  5298  01C5  0431               	iorwf	??_readCargo,w
  5299  01C6  00C8               	movwf	_cargoData
  5300  01C7  3000               	movlw	0
  5301  01C8  0432               	iorwf	??_readCargo+1,w
  5302  01C9  29D5               	goto	L2
  5303  01CA                     l2640:	
  5304                           ;normal_mode.c: 24: case 1:
  5305                           
  5306                           ;normal_mode.c: 23: break;
  5307                           
  5308                           
  5309                           ;normal_mode.c: 25: cargoData.cargoLength = cargoData.cargoLength & (bufint | 0xFF00);
  5310  01CA  3000               	movlw	0
  5311  01CB  043A               	iorwf	readCargo@bufint,w
  5312  01CC  00B1               	movwf	??_readCargo
  5313  01CD  30FF               	movlw	255
  5314  01CE  043B               	iorwf	readCargo@bufint+1,w
  5315  01CF  00B2               	movwf	??_readCargo+1
  5316  01D0  0848               	movf	_cargoData,w
  5317  01D1  0531               	andwf	??_readCargo,w
  5318  01D2  00C8               	movwf	_cargoData
  5319  01D3  0849               	movf	_cargoData+1,w
  5320  01D4  0532               	andwf	??_readCargo+1,w
  5321  01D5                     L2:	
  5322  01D5  00C9               	movwf	_cargoData+1
  5323                           
  5324                           ;normal_mode.c: 26: break;
  5325  01D6  2A55               	goto	l2682
  5326  01D7                     l2642:	
  5327                           ;normal_mode.c: 27: case 2:
  5328                           
  5329                           
  5330                           ;normal_mode.c: 28: cargoData.command = spi1_Read_data;
  5331  01D7  083C               	movf	readCargo@spi1_Read_data,w
  5332  01D8  00B1               	movwf	??_readCargo
  5333  01D9  0831               	movf	??_readCargo,w
  5334  01DA  00CA               	movwf	_cargoData+2
  5335                           
  5336                           ;normal_mode.c: 29: break;
  5337  01DB  2A55               	goto	l2682
  5338  01DC                     l2644:	
  5339                           ;normal_mode.c: 30: case 3:
  5340                           
  5341                           
  5342                           ;normal_mode.c: 31: cargoData.index = spi1_Read_data;
  5343  01DC  083C               	movf	readCargo@spi1_Read_data,w
  5344  01DD  00B1               	movwf	??_readCargo
  5345  01DE  0831               	movf	??_readCargo,w
  5346  01DF  00CB               	movwf	_cargoData+3
  5347                           
  5348                           ;normal_mode.c: 32: break;
  5349  01E0  2A55               	goto	l2682
  5350  01E1                     l2646:	
  5351                           ;normal_mode.c: 33: case 4:
  5352                           
  5353                           
  5354                           ;normal_mode.c: 34: cargoData.address = spi1_Read_data;
  5355  01E1  083C               	movf	readCargo@spi1_Read_data,w
  5356  01E2  00B1               	movwf	??_readCargo
  5357  01E3  0831               	movf	??_readCargo,w
  5358  01E4  00CC               	movwf	_cargoData+4
  5359                           
  5360                           ;normal_mode.c: 35: if(cargoData.address != linkInfo.My_address){
  5361  01E5  084C               	movf	_cargoData+4,w
  5362  01E6  0021               	movlb	1	; select bank1
  5363  01E7  064D               	xorwf	_linkInfo^(0+128),w
  5364  01E8  1903               	skipnz
  5365  01E9  2A55               	goto	l2682
  5366                           
  5367                           ;normal_mode.c: 36: restartCargo();
  5368  01EA  3186  2631  3181   	fcall	_restartCargo
  5369                           
  5370                           ;normal_mode.c: 37: isMycargo = 0;
  5371  01ED  1070               	bcf	_isMycargo/(0+8),_isMycargo& (0+7)
  5372                           
  5373                           ;normal_mode.c: 39: }
  5374                           ;normal_mode.c: 40: break;
  5375                           
  5376                           ;normal_mode.c: 38: }else{
  5377  01EE  2A55               	goto	l2682
  5378  01EF                     l2652:	
  5379                           ;normal_mode.c: 41: case 5:
  5380                           
  5381                           
  5382                           ;normal_mode.c: 42: spi2_Send_data = (cargoData.linkAngleTo >> 8 & 0x00ff);
  5383  01EF  0020               	movlb	0	; select bank0
  5384  01F0  084E               	movf	_cargoData+6,w
  5385  01F1  2A42               	goto	L12
  5386  01F2                     l2654:	
  5387                           ;normal_mode.c: 44: case 6:
  5388                           
  5389                           ;normal_mode.c: 43: break;
  5390                           
  5391                           
  5392                           ;normal_mode.c: 45: spi2_Send_data = (cargoData.linkAngleTo & 0x00ff);
  5393  01F2  084D               	movf	_cargoData+5,w
  5394  01F3  2A42               	goto	L12
  5395  01F4                     l2656:	
  5396                           ;normal_mode.c: 47: case 7:
  5397                           
  5398                           ;normal_mode.c: 46: break;
  5399                           
  5400                           
  5401                           ;normal_mode.c: 48: spi2_Send_data = (cargoData.linkAngleBack >> 8 & 0x00ff);
  5402  01F4  0850               	movf	_cargoData+8,w
  5403  01F5  2A42               	goto	L12
  5404  01F6                     l2658:	
  5405                           ;normal_mode.c: 50: case 8:
  5406                           
  5407                           ;normal_mode.c: 49: break;
  5408                           
  5409                           
  5410                           ;normal_mode.c: 51: spi2_Send_data = (cargoData.linkAngleBack & 0x00ff);
  5411  01F6  084F               	movf	_cargoData+7,w
  5412  01F7  2A42               	goto	L12
  5413  01F8                     l2660:	
  5414                           ;normal_mode.c: 53: case 9:
  5415                           
  5416                           ;normal_mode.c: 52: break;
  5417                           
  5418                           
  5419                           ;normal_mode.c: 54: spi2_Send_data = (cargoData.passedTime >> 8 & 0x00ff);
  5420  01F8  0852               	movf	_cargoData+10,w
  5421  01F9  2A42               	goto	L12
  5422  01FA                     l2662:	
  5423                           ;normal_mode.c: 56: case 10:
  5424                           
  5425                           ;normal_mode.c: 55: break;
  5426                           
  5427                           
  5428                           ;normal_mode.c: 57: spi2_Send_data = (cargoData.passedTime & 0x00ff);
  5429  01FA  0851               	movf	_cargoData+9,w
  5430  01FB  2A42               	goto	L12
  5431  01FC                     l2664:	
  5432                           ;normal_mode.c: 59: case 11:
  5433                           
  5434                           ;normal_mode.c: 58: break;
  5435                           
  5436                           
  5437                           ;normal_mode.c: 60: cargoData.clutchMode = spi1_Read_data;
  5438  01FC  083C               	movf	readCargo@spi1_Read_data,w
  5439  01FD  00B1               	movwf	??_readCargo
  5440  01FE  0831               	movf	??_readCargo,w
  5441  01FF  00D3               	movwf	_cargoData+11
  5442                           
  5443                           ;normal_mode.c: 61: clutchaction(cargoData.clutchMode);
  5444  0200  0853               	movf	_cargoData+11,w
  5445  0201  3186  2670  3181   	fcall	_clutchaction
  5446                           
  5447                           ;normal_mode.c: 62: break;
  5448  0204  2A55               	goto	l2682
  5449  0205                     l2668:	
  5450                           ;normal_mode.c: 63: case 12:
  5451                           
  5452                           
  5453                           ;normal_mode.c: 64: cargoData.WorkingCount++;
  5454  0205  3001               	movlw	1
  5455  0206  0020               	movlb	0	; select bank0
  5456  0207  07D4               	addwf	_cargoData+12,f
  5457  0208  3000               	movlw	0
  5458  0209  3DD5               	addwfc	_cargoData+13,f
  5459  020A  3000               	movlw	0
  5460  020B  3DD6               	addwfc	_cargoData+14,f
  5461  020C  3000               	movlw	0
  5462  020D  3DD7               	addwfc	_cargoData+15,f
  5463                           
  5464                           ;normal_mode.c: 65: spi2_Send_data = (cargoData.WorkingCount >> 24 & 0x000000ff);
  5465  020E  0854               	movf	_cargoData+12,w
  5466  020F  00B1               	movwf	??_readCargo
  5467  0210  0855               	movf	_cargoData+13,w
  5468  0211  00B2               	movwf	??_readCargo+1
  5469  0212  0856               	movf	_cargoData+14,w
  5470  0213  00B3               	movwf	??_readCargo+2
  5471  0214  0857               	movf	_cargoData+15,w
  5472  0215  00B4               	movwf	??_readCargo+3
  5473  0216  3018               	movlw	24
  5474  0217                     u1205:	
  5475  0217  36B4               	lsrf	??_readCargo+3,f
  5476  0218  0CB3               	rrf	??_readCargo+2,f
  5477  0219  0CB2               	rrf	??_readCargo+1,f
  5478  021A  0CB1               	rrf	??_readCargo,f
  5479  021B  0B89               	decfsz	9,f
  5480  021C  2A17               	goto	u1205
  5481  021D  2A3D               	goto	L14
  5482  021E                     l2672:	
  5483                           ;normal_mode.c: 67: case 13:
  5484                           
  5485                           ;normal_mode.c: 66: break;
  5486                           
  5487                           
  5488                           ;normal_mode.c: 68: spi2_Send_data = (cargoData.WorkingCount >> 16 & 0x000000ff);
  5489  021E  0854               	movf	_cargoData+12,w
  5490  021F  00B1               	movwf	??_readCargo
  5491  0220  0855               	movf	_cargoData+13,w
  5492  0221  00B2               	movwf	??_readCargo+1
  5493  0222  0856               	movf	_cargoData+14,w
  5494  0223  00B3               	movwf	??_readCargo+2
  5495  0224  0857               	movf	_cargoData+15,w
  5496  0225  00B4               	movwf	??_readCargo+3
  5497  0226  3010               	movlw	16
  5498  0227                     u1215:	
  5499  0227  36B4               	lsrf	??_readCargo+3,f
  5500  0228  0CB3               	rrf	??_readCargo+2,f
  5501  0229  0CB2               	rrf	??_readCargo+1,f
  5502  022A  0CB1               	rrf	??_readCargo,f
  5503  022B  0B89               	decfsz	9,f
  5504  022C  2A27               	goto	u1215
  5505  022D  2A3D               	goto	L14
  5506  022E                     l2674:	
  5507                           ;normal_mode.c: 70: case 14:
  5508                           
  5509                           ;normal_mode.c: 69: break;
  5510                           
  5511                           
  5512                           ;normal_mode.c: 71: spi2_Send_data = (cargoData.WorkingCount >> 8 & 0x000000ff);
  5513  022E  0854               	movf	_cargoData+12,w
  5514  022F  00B1               	movwf	??_readCargo
  5515  0230  0855               	movf	_cargoData+13,w
  5516  0231  00B2               	movwf	??_readCargo+1
  5517  0232  0856               	movf	_cargoData+14,w
  5518  0233  00B3               	movwf	??_readCargo+2
  5519  0234  0857               	movf	_cargoData+15,w
  5520  0235  00B4               	movwf	??_readCargo+3
  5521  0236  3008               	movlw	8
  5522  0237                     u1225:	
  5523  0237  36B4               	lsrf	??_readCargo+3,f
  5524  0238  0CB3               	rrf	??_readCargo+2,f
  5525  0239  0CB2               	rrf	??_readCargo+1,f
  5526  023A  0CB1               	rrf	??_readCargo,f
  5527  023B  0B89               	decfsz	9,f
  5528  023C  2A37               	goto	u1225
  5529  023D                     L14:	
  5530  023D  0831               	movf	??_readCargo,w
  5531  023E  00B5               	movwf	??_readCargo+4
  5532  023F  0835               	movf	??_readCargo+4,w
  5533  0240  2A44               	goto	L11
  5534  0241                     l2676:	
  5535                           ;normal_mode.c: 73: case 15:
  5536                           
  5537                           ;normal_mode.c: 72: break;
  5538                           
  5539                           
  5540                           ;normal_mode.c: 74: spi2_Send_data = (cargoData.WorkingCount & 0x000000ff);
  5541  0241  0854               	movf	_cargoData+12,w
  5542  0242                     L12:	
  5543  0242  00B1               	movwf	??_readCargo
  5544  0243  0831               	movf	??_readCargo,w
  5545  0244                     L11:	
  5546  0244  00EB               	movwf	_spi2_Send_data
  5547                           
  5548                           ;normal_mode.c: 76: }
  5549                           
  5550                           ;normal_mode.c: 75: break;
  5551  0245  2A55               	goto	l2682
  5552  0246                     l2680:	
  5553                           
  5554                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5555                           ; Switch size 1, requested type "space"
  5556                           ; Number of cases is 1, Range of values is 0 to 0
  5557                           ; switch strategies available:
  5558                           ; Name         Instructions Cycles
  5559                           ; simple_byte            4     3 (average)
  5560                           ; direct_byte            8     6 (fixed)
  5561                           ; jumptable            260     6 (fixed)
  5562                           ;	Chosen strategy is simple_byte
  5563  0246  085F               	movf	_countabuf+1,w
  5564  0247  3A00               	xorlw	0	; case 0
  5565  0248  1903               	skipnz
  5566  0249  2A4B               	goto	l3024
  5567  024A  2A55               	goto	l2682
  5568  024B                     l3024:	
  5569                           
  5570                           ; Switch size 1, requested type "space"
  5571                           ; Number of cases is 16, Range of values is 0 to 15
  5572                           ; switch strategies available:
  5573                           ; Name         Instructions Cycles
  5574                           ; direct_byte           38     6 (fixed)
  5575                           ; simple_byte           49    25 (average)
  5576                           ; jumptable            260     6 (fixed)
  5577                           ;	Chosen strategy is direct_byte
  5578  024B  085E               	movf	_countabuf,w
  5579  024C  0084               	movwf	4
  5580  024D  3010               	movlw	16
  5581  024E  0204               	subwf	4,w
  5582  024F  1803               	skipnc
  5583  0250  2A55               	goto	l2682
  5584  0251  3185               	movlp	high S3026
  5585  0252  3504               	lslf	4,w
  5586  0253  3EC7               	addlw	low S3026
  5587  0254  0082               	movwf	2
  5588  0255                     l2682:	
  5589                           
  5590                           ;normal_mode.c: 77: }
  5591                           ;normal_mode.c: 79: countabuf++;
  5592  0255  3001               	movlw	1
  5593  0256  0020               	movlb	0	; select bank0
  5594  0257  07DE               	addwf	_countabuf,f
  5595  0258  3000               	movlw	0
  5596  0259  3DDF               	addwfc	_countabuf+1,f
  5597                           
  5598                           ;normal_mode.c: 80: if(cargoData.cargoLength <= countabuf){
  5599  025A  0849               	movf	_cargoData+1,w
  5600  025B  025F               	subwf	_countabuf+1,w
  5601  025C  1D03               	skipz
  5602  025D  2A60               	goto	u1235
  5603  025E  0848               	movf	_cargoData,w
  5604  025F  025E               	subwf	_countabuf,w
  5605  0260                     u1235:	
  5606  0260  1C03               	skipc
  5607  0261  0008               	return
  5608                           
  5609                           ;normal_mode.c: 81: cargoLengthnuf = 0;
  5610  0262  0021               	movlb	1	; select bank1
  5611  0263  01DB               	clrf	_cargoLengthnuf^(0+128)
  5612  0264  01DC               	clrf	(_cargoLengthnuf+1)^(0+128)
  5613                           
  5614                           ;normal_mode.c: 82: cargoWorkingCount = 0;
  5615  0265  3000               	movlw	0
  5616  0266  00D6               	movwf	(_cargoWorkingCount+3)^(0+128)
  5617  0267  3000               	movlw	0
  5618  0268  00D5               	movwf	(_cargoWorkingCount+2)^(0+128)
  5619  0269  3000               	movlw	0
  5620  026A  00D4               	movwf	(_cargoWorkingCount+1)^(0+128)
  5621  026B  3000               	movlw	0
  5622  026C  00D3               	movwf	_cargoWorkingCount^(0+128)
  5623                           
  5624                           ;normal_mode.c: 83: cargoData.cargoLength = 0xFFFF;
  5625  026D  30FF               	movlw	255
  5626  026E  0020               	movlb	0	; select bank0
  5627  026F  00C8               	movwf	_cargoData
  5628  0270  30FF               	movlw	255
  5629  0271  00C9               	movwf	_cargoData+1
  5630                           
  5631                           ;normal_mode.c: 84: countabuf = 0;
  5632  0272  01DE               	clrf	_countabuf
  5633  0273  01DF               	clrf	_countabuf+1
  5634                           
  5635                           ;normal_mode.c: 85: isMycargo = 1;
  5636  0274  1470               	bsf	_isMycargo/(0+8),_isMycargo& (0+7)
  5637  0275  0008               	return
  5638  0276                     __end_of_readCargo:	
  5639                           
  5640                           	psect	swtext1
  5641  05C7                     __pswtext1:	
  5642  05C7                     S3026:	
  5643  05C7  3181  29C1         	ljmp	l2638
  5644  05C9  3181  29CA         	ljmp	l2640
  5645  05CB  3181  29D7         	ljmp	l2642
  5646  05CD  3181  29DC         	ljmp	l2644
  5647  05CF  3181  29E1         	ljmp	l2646
  5648  05D1  3181  29EF         	ljmp	l2652
  5649  05D3  3181  29F2         	ljmp	l2654
  5650  05D5  3181  29F4         	ljmp	l2656
  5651  05D7  3181  29F6         	ljmp	l2658
  5652  05D9  3181  29F8         	ljmp	l2660
  5653  05DB  3181  29FA         	ljmp	l2662
  5654  05DD  3181  29FC         	ljmp	l2664
  5655  05DF  3182  2A05         	ljmp	l2668
  5656  05E1  3182  2A1E         	ljmp	l2672
  5657  05E3  3182  2A2E         	ljmp	l2674
  5658  05E5  3182  2A41         	ljmp	l2676
  5659                           
  5660                           	psect	text7
  5661  0670                     __ptext7:	
  5662 ;; *************** function _clutchaction *****************
  5663 ;; Defined at:
  5664 ;;		line 68 in file "D:/programdata/16F18346_Link_IC.X/command.c"
  5665 ;; Parameters:    Size  Location     Type
  5666 ;;  comannd         1    wreg     unsigned char 
  5667 ;; Auto vars:     Size  Location     Type
  5668 ;;  comannd         1    0[BANK0 ] unsigned char 
  5669 ;; Return value:  Size  Location     Type
  5670 ;;		None               void
  5671 ;; Registers used:
  5672 ;;		wreg, status,2, status,0
  5673 ;; Tracked objects:
  5674 ;;		On entry : 0/0
  5675 ;;		On exit  : 0/0
  5676 ;;		Unchanged: 0/0
  5677 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5678 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5679 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5680 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5681 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5682 ;;Total ram usage:        1 bytes
  5683 ;; Hardware stack levels used:    1
  5684 ;; Hardware stack levels required when called:    3
  5685 ;; This function calls:
  5686 ;;		Nothing
  5687 ;; This function is called by:
  5688 ;;		_readCargo
  5689 ;; This function uses a non-reentrant model
  5690 ;;
  5691                           
  5692                           
  5693                           ;psect for function _clutchaction
  5694  0670                     _clutchaction:	
  5695                           
  5696                           ;incstack = 0
  5697                           ; Regs used in _clutchaction: [wreg+status,2+status,0]
  5698                           ;clutchaction@comannd stored from wreg
  5699  0670  0020               	movlb	0	; select bank0
  5700  0671  00A0               	movwf	clutchaction@comannd
  5701                           
  5702                           ;command.c: 69: if(comannd == 1){
  5703  0672  0320               	decf	clutchaction@comannd,w
  5704  0673  1D03               	btfss	3,2
  5705  0674  2E78               	goto	l340
  5706                           
  5707                           ;command.c: 70: LATAbits.LATA0 = 1;
  5708  0675  0022               	movlb	2	; select bank2
  5709  0676  140C               	bsf	12,0	;volatile
  5710                           
  5711                           ;command.c: 71: }else{
  5712  0677  0008               	return
  5713  0678                     l340:	
  5714                           
  5715                           ;command.c: 72: LATAbits.LATA0 = 0;
  5716  0678  0022               	movlb	2	; select bank2
  5717  0679  100C               	bcf	12,0	;volatile
  5718  067A  0008               	return
  5719  067B                     __end_of_clutchaction:	
  5720                           
  5721                           	psect	text8
  5722  00A1                     __ptext8:	
  5723 ;; *************** function _Calibrate_download *****************
  5724 ;; Defined at:
  5725 ;;		line 74 in file "D:/programdata/16F18346_Link_IC.X/calibrate_mode.c"
  5726 ;; Parameters:    Size  Location     Type
  5727 ;;  spi_Read_dat    1    wreg     unsigned char 
  5728 ;; Auto vars:     Size  Location     Type
  5729 ;;  spi_Read_dat    1    6[BANK1 ] unsigned char 
  5730 ;;  buflong         4    0[BANK1 ] unsigned long 
  5731 ;;  bufint          2    4[BANK1 ] unsigned int 
  5732 ;; Return value:  Size  Location     Type
  5733 ;;                  1    wreg      void 
  5734 ;; Registers used:
  5735 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5736 ;; Tracked objects:
  5737 ;;		On entry : 0/0
  5738 ;;		On exit  : 0/0
  5739 ;;		Unchanged: 0/0
  5740 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5741 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5742 ;;      Locals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5743 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5744 ;;      Totals:         0       5       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5745 ;;Total ram usage:       12 bytes
  5746 ;; Hardware stack levels used:    1
  5747 ;; Hardware stack levels required when called:    5
  5748 ;; This function calls:
  5749 ;;		_InitCalibrate
  5750 ;;		_isEndpoint
  5751 ;; This function is called by:
  5752 ;;		_setComunicateMode
  5753 ;; This function uses a non-reentrant model
  5754 ;;
  5755                           
  5756                           
  5757                           ;psect for function _Calibrate_download
  5758  00A1                     _Calibrate_download:	
  5759                           
  5760                           ;incstack = 0
  5761                           ; Regs used in _Calibrate_download: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5762                           ;Calibrate_download@spi_Read_data stored from wreg
  5763  00A1  0021               	movlb	1	; select bank1
  5764  00A2  00E9               	movwf	Calibrate_download@spi_Read_data^(0+128)
  5765                           
  5766                           ;calibrate_mode.c: 76: unsigned int bufint = spi_Read_data;
  5767  00A3  0869               	movf	Calibrate_download@spi_Read_data^(0+128),w
  5768  00A4  0020               	movlb	0	; select bank0
  5769  00A5  00C2               	movwf	??_Calibrate_download
  5770  00A6  01C3               	clrf	??_Calibrate_download+1
  5771  00A7  0842               	movf	??_Calibrate_download,w
  5772  00A8  0021               	movlb	1	; select bank1
  5773  00A9  00E7               	movwf	Calibrate_download@bufint^(0+128)
  5774  00AA  0020               	movlb	0	; select bank0
  5775  00AB  0843               	movf	??_Calibrate_download+1,w
  5776  00AC  0021               	movlb	1	; select bank1
  5777  00AD  00E8               	movwf	(Calibrate_download@bufint+1)^(0+128)
  5778                           
  5779                           ;calibrate_mode.c: 77: unsigned long buflong = spi_Read_data;
  5780  00AE  0869               	movf	Calibrate_download@spi_Read_data^(0+128),w
  5781  00AF  0020               	movlb	0	; select bank0
  5782  00B0  00C2               	movwf	??_Calibrate_download
  5783  00B1  01C3               	clrf	??_Calibrate_download+1
  5784  00B2  01C4               	clrf	??_Calibrate_download+2
  5785  00B3  01C5               	clrf	??_Calibrate_download+3
  5786  00B4  0845               	movf	??_Calibrate_download+3,w
  5787  00B5  0021               	movlb	1	; select bank1
  5788  00B6  00E6               	movwf	(Calibrate_download@buflong+3)^(0+128)
  5789  00B7  0020               	movlb	0	; select bank0
  5790  00B8  0844               	movf	??_Calibrate_download+2,w
  5791  00B9  0021               	movlb	1	; select bank1
  5792  00BA  00E5               	movwf	(Calibrate_download@buflong+2)^(0+128)
  5793  00BB  0020               	movlb	0	; select bank0
  5794  00BC  0843               	movf	??_Calibrate_download+1,w
  5795  00BD  0021               	movlb	1	; select bank1
  5796  00BE  00E4               	movwf	(Calibrate_download@buflong+1)^(0+128)
  5797  00BF  0020               	movlb	0	; select bank0
  5798  00C0  0842               	movf	??_Calibrate_download,w
  5799  00C1  0021               	movlb	1	; select bank1
  5800  00C2  00E3               	movwf	Calibrate_download@buflong^(0+128)
  5801                           
  5802                           ;calibrate_mode.c: 78: isEndpoint();
  5803  00C3  3184  245B  3180   	fcall	_isEndpoint
  5804                           
  5805                           ;calibrate_mode.c: 79: switch(countabuf){
  5806  00C6  296D               	goto	l2614
  5807  00C7                     l2580:	
  5808                           ;calibrate_mode.c: 80: case 0:
  5809                           
  5810                           
  5811                           ;calibrate_mode.c: 81: InitCalibrate();
  5812  00C7  3184  24C1  3180   	fcall	_InitCalibrate
  5813                           
  5814                           ;calibrate_mode.c: 82: calibdata.cargoLength = (bufint << 8 | 0x00FF);
  5815  00CA  0021               	movlb	1	; select bank1
  5816  00CB  0867               	movf	Calibrate_download@bufint^(0+128),w
  5817  00CC  0020               	movlb	0	; select bank0
  5818  00CD  00C3               	movwf	??_Calibrate_download+1
  5819  00CE  01C2               	clrf	??_Calibrate_download
  5820  00CF  30FF               	movlw	255
  5821  00D0  0442               	iorwf	??_Calibrate_download,w
  5822  00D1  0021               	movlb	1	; select bank1
  5823  00D2  00C4               	movwf	_calibdata^(0+128)
  5824  00D3  3000               	movlw	0
  5825  00D4  0020               	movlb	0	; select bank0
  5826  00D5  0443               	iorwf	??_Calibrate_download+1,w
  5827  00D6  28EA               	goto	L15
  5828  00D7                     l2586:	
  5829                           ;calibrate_mode.c: 85: case 1:
  5830                           
  5831                           ;calibrate_mode.c: 84: break;
  5832                           
  5833                           ;calibrate_mode.c: 83: spi2_Send_data = spi_Read_data;
  5834                           
  5835                           
  5836                           ;calibrate_mode.c: 86: calibdata.cargoLength = calibdata.cargoLength & (bufint | 0xFF00)
      +                          ;
  5837  00D7  3000               	movlw	0
  5838  00D8  0021               	movlb	1	; select bank1
  5839  00D9  0467               	iorwf	Calibrate_download@bufint^(0+128),w
  5840  00DA  0020               	movlb	0	; select bank0
  5841  00DB  00C2               	movwf	??_Calibrate_download
  5842  00DC  30FF               	movlw	255
  5843  00DD  0021               	movlb	1	; select bank1
  5844  00DE  0468               	iorwf	(Calibrate_download@bufint+1)^(0+128),w
  5845  00DF  0020               	movlb	0	; select bank0
  5846  00E0  00C3               	movwf	??_Calibrate_download+1
  5847  00E1  0021               	movlb	1	; select bank1
  5848  00E2  0844               	movf	_calibdata^(0+128),w
  5849  00E3  0020               	movlb	0	; select bank0
  5850  00E4  0542               	andwf	??_Calibrate_download,w
  5851  00E5  0021               	movlb	1	; select bank1
  5852  00E6  00C4               	movwf	_calibdata^(0+128)
  5853  00E7  0845               	movf	(_calibdata+1)^(0+128),w
  5854  00E8  0020               	movlb	0	; select bank0
  5855  00E9  0543               	andwf	??_Calibrate_download+1,w
  5856  00EA                     L15:	
  5857  00EA  0021               	movlb	1	; select bank1
  5858  00EB  00C5               	movwf	(_calibdata+1)^(0+128)
  5859  00EC  28FC               	goto	L17
  5860  00ED                     l2588:	
  5861                           ;calibrate_mode.c: 89: case 2:
  5862                           
  5863                           ;calibrate_mode.c: 88: break;
  5864                           
  5865                           ;calibrate_mode.c: 87: spi2_Send_data = spi_Read_data;
  5866                           
  5867                           
  5868                           ;calibrate_mode.c: 90: calibdata.command = spi_Read_data;
  5869  00ED  0021               	movlb	1	; select bank1
  5870  00EE  0869               	movf	Calibrate_download@spi_Read_data^(0+128),w
  5871  00EF  0020               	movlb	0	; select bank0
  5872  00F0  00C2               	movwf	??_Calibrate_download
  5873  00F1  0842               	movf	??_Calibrate_download,w
  5874  00F2  0021               	movlb	1	; select bank1
  5875  00F3  00C6               	movwf	(_calibdata^(0+128)+2)
  5876  00F4  28FC               	goto	L17
  5877  00F5                     l2590:	
  5878                           ;calibrate_mode.c: 93: case 3:
  5879                           
  5880                           ;calibrate_mode.c: 92: break;
  5881                           
  5882                           ;calibrate_mode.c: 91: spi2_Send_data = spi_Read_data;
  5883                           
  5884                           
  5885                           ;calibrate_mode.c: 94: calibdata.index = spi_Read_data;
  5886  00F5  0021               	movlb	1	; select bank1
  5887  00F6  0869               	movf	Calibrate_download@spi_Read_data^(0+128),w
  5888  00F7  0020               	movlb	0	; select bank0
  5889  00F8  00C2               	movwf	??_Calibrate_download
  5890  00F9  0842               	movf	??_Calibrate_download,w
  5891  00FA  0021               	movlb	1	; select bank1
  5892  00FB  00C7               	movwf	(_calibdata^(0+128)+3)
  5893  00FC                     L17:	
  5894                           
  5895                           ;calibrate_mode.c: 95: spi2_Send_data = spi_Read_data;
  5896  00FC  0869               	movf	Calibrate_download@spi_Read_data^(0+128),w
  5897  00FD  2968               	goto	L26
  5898  00FE                     l2592:	
  5899                           ;calibrate_mode.c: 97: case 4:
  5900                           
  5901                           ;calibrate_mode.c: 96: break;
  5902                           
  5903                           
  5904                           ;calibrate_mode.c: 98: linkInfo.My_address = spi_Read_data +1;
  5905  00FE  0021               	movlb	1	; select bank1
  5906  00FF  0869               	movf	Calibrate_download@spi_Read_data^(0+128),w
  5907  0100  3E01               	addlw	1
  5908  0101  0020               	movlb	0	; select bank0
  5909  0102  00C2               	movwf	??_Calibrate_download
  5910  0103  0842               	movf	??_Calibrate_download,w
  5911  0104  0021               	movlb	1	; select bank1
  5912  0105  00CD               	movwf	_linkInfo^(0+128)
  5913  0106  2967               	goto	l2610
  5914  0107                     l2596:	
  5915                           ;calibrate_mode.c: 101: case 5:
  5916                           
  5917                           ;calibrate_mode.c: 100: break;
  5918                           
  5919                           ;calibrate_mode.c: 99: spi2_Send_data = linkInfo.My_address;
  5920                           
  5921                           
  5922                           ;calibrate_mode.c: 102: calibdata.WorkingCount++;
  5923  0107  3001               	movlw	1
  5924  0108  0021               	movlb	1	; select bank1
  5925  0109  07C8               	addwf	(_calibdata^(0+128)+4),f
  5926  010A  3000               	movlw	0
  5927  010B  3DC9               	addwfc	((_calibdata+1)^(0+128)+4),f
  5928  010C  3000               	movlw	0
  5929  010D  3DCA               	addwfc	((_calibdata+2)^(0+128)+4),f
  5930  010E  3000               	movlw	0
  5931  010F  3DCB               	addwfc	((_calibdata+3)^(0+128)+4),f
  5932                           
  5933                           ;calibrate_mode.c: 103: spi2_Send_data = (calibdata.WorkingCount >> 24 & 0x000000ff);
  5934  0110  0848               	movf	(_calibdata^(0+128)+4),w
  5935  0111  0020               	movlb	0	; select bank0
  5936  0112  00C2               	movwf	??_Calibrate_download
  5937  0113  0021               	movlb	1	; select bank1
  5938  0114  0849               	movf	((_calibdata+1)^(0+128)+4),w
  5939  0115  0020               	movlb	0	; select bank0
  5940  0116  00C3               	movwf	??_Calibrate_download+1
  5941  0117  0021               	movlb	1	; select bank1
  5942  0118  084A               	movf	((_calibdata+2)^(0+128)+4),w
  5943  0119  0020               	movlb	0	; select bank0
  5944  011A  00C4               	movwf	??_Calibrate_download+2
  5945  011B  0021               	movlb	1	; select bank1
  5946  011C  084B               	movf	((_calibdata+3)^(0+128)+4),w
  5947  011D  0020               	movlb	0	; select bank0
  5948  011E  00C5               	movwf	??_Calibrate_download+3
  5949  011F  3018               	movlw	24
  5950  0120                     u1125:	
  5951  0120  36C5               	lsrf	??_Calibrate_download+3,f
  5952  0121  0CC4               	rrf	??_Calibrate_download+2,f
  5953  0122  0CC3               	rrf	??_Calibrate_download+1,f
  5954  0123  0CC2               	rrf	??_Calibrate_download,f
  5955  0124  0B89               	decfsz	9,f
  5956  0125  2920               	goto	u1125
  5957  0126  2956               	goto	L25
  5958  0127                     l2600:	
  5959                           ;calibrate_mode.c: 105: case 6:
  5960                           
  5961                           ;calibrate_mode.c: 104: break;
  5962                           
  5963                           
  5964                           ;calibrate_mode.c: 106: spi2_Send_data = (calibdata.WorkingCount >> 16 & 0x000000ff);
  5965  0127  0021               	movlb	1	; select bank1
  5966  0128  0848               	movf	(_calibdata^(0+128)+4),w
  5967  0129  0020               	movlb	0	; select bank0
  5968  012A  00C2               	movwf	??_Calibrate_download
  5969  012B  0021               	movlb	1	; select bank1
  5970  012C  0849               	movf	((_calibdata+1)^(0+128)+4),w
  5971  012D  0020               	movlb	0	; select bank0
  5972  012E  00C3               	movwf	??_Calibrate_download+1
  5973  012F  0021               	movlb	1	; select bank1
  5974  0130  084A               	movf	((_calibdata+2)^(0+128)+4),w
  5975  0131  0020               	movlb	0	; select bank0
  5976  0132  00C4               	movwf	??_Calibrate_download+2
  5977  0133  0021               	movlb	1	; select bank1
  5978  0134  084B               	movf	((_calibdata+3)^(0+128)+4),w
  5979  0135  0020               	movlb	0	; select bank0
  5980  0136  00C5               	movwf	??_Calibrate_download+3
  5981  0137  3010               	movlw	16
  5982  0138                     u1135:	
  5983  0138  36C5               	lsrf	??_Calibrate_download+3,f
  5984  0139  0CC4               	rrf	??_Calibrate_download+2,f
  5985  013A  0CC3               	rrf	??_Calibrate_download+1,f
  5986  013B  0CC2               	rrf	??_Calibrate_download,f
  5987  013C  0B89               	decfsz	9,f
  5988  013D  2938               	goto	u1135
  5989  013E  2956               	goto	L25
  5990  013F                     l2602:	
  5991                           ;calibrate_mode.c: 108: case 7:
  5992                           
  5993                           ;calibrate_mode.c: 107: break;
  5994                           
  5995                           
  5996                           ;calibrate_mode.c: 109: spi2_Send_data = (calibdata.WorkingCount >> 8 & 0x000000ff);
  5997  013F  0021               	movlb	1	; select bank1
  5998  0140  0848               	movf	(_calibdata^(0+128)+4),w
  5999  0141  0020               	movlb	0	; select bank0
  6000  0142  00C2               	movwf	??_Calibrate_download
  6001  0143  0021               	movlb	1	; select bank1
  6002  0144  0849               	movf	((_calibdata+1)^(0+128)+4),w
  6003  0145  0020               	movlb	0	; select bank0
  6004  0146  00C3               	movwf	??_Calibrate_download+1
  6005  0147  0021               	movlb	1	; select bank1
  6006  0148  084A               	movf	((_calibdata+2)^(0+128)+4),w
  6007  0149  0020               	movlb	0	; select bank0
  6008  014A  00C4               	movwf	??_Calibrate_download+2
  6009  014B  0021               	movlb	1	; select bank1
  6010  014C  084B               	movf	((_calibdata+3)^(0+128)+4),w
  6011  014D  0020               	movlb	0	; select bank0
  6012  014E  00C5               	movwf	??_Calibrate_download+3
  6013  014F  3008               	movlw	8
  6014  0150                     u1145:	
  6015  0150  36C5               	lsrf	??_Calibrate_download+3,f
  6016  0151  0CC4               	rrf	??_Calibrate_download+2,f
  6017  0152  0CC3               	rrf	??_Calibrate_download+1,f
  6018  0153  0CC2               	rrf	??_Calibrate_download,f
  6019  0154  0B89               	decfsz	9,f
  6020  0155  2950               	goto	u1145
  6021  0156                     L25:	
  6022  0156  0842               	movf	??_Calibrate_download,w
  6023  0157  00C6               	movwf	??_Calibrate_download+4
  6024  0158  0846               	movf	??_Calibrate_download+4,w
  6025  0159  296B               	goto	L23
  6026  015A                     l2604:	
  6027                           ;calibrate_mode.c: 111: case 8:
  6028                           
  6029                           ;calibrate_mode.c: 110: break;
  6030                           
  6031                           
  6032                           ;calibrate_mode.c: 112: spi2_Send_data = (calibdata.WorkingCount & 0x000000ff);
  6033  015A  0021               	movlb	1	; select bank1
  6034  015B  0848               	movf	(_calibdata^(0+128)+4),w
  6035  015C  2968               	goto	L26
  6036  015D                     l416:	
  6037                           ;calibrate_mode.c: 114: case 9:
  6038                           
  6039                           ;calibrate_mode.c: 113: break;
  6040                           
  6041                           
  6042                           ;calibrate_mode.c: 115: LATAbits.LATA0 = 0;
  6043  015D  0022               	movlb	2	; select bank2
  6044  015E  100C               	bcf	12,0	;volatile
  6045                           
  6046                           ;calibrate_mode.c: 116: if(isEndPointTrig == 1){
  6047  015F  1C78               	btfss	_isEndPointTrig/(0+8),_isEndPointTrig& (0+7)
  6048  0160  2965               	goto	l2608
  6049                           
  6050                           ;calibrate_mode.c: 117: linkInfo.endpoint = 1;
  6051  0161  0021               	movlb	1	; select bank1
  6052  0162  01D2               	clrf	(_linkInfo^(0+128)+5)
  6053  0163  0AD2               	incf	(_linkInfo^(0+128)+5),f
  6054                           
  6055                           ;calibrate_mode.c: 118: }else{
  6056  0164  2967               	goto	l2610
  6057  0165                     l2608:	
  6058                           
  6059                           ;calibrate_mode.c: 119: linkInfo.endpoint = 0;
  6060  0165  0021               	movlb	1	; select bank1
  6061  0166  01D2               	clrf	(_linkInfo^(0+128)+5)
  6062  0167                     l2610:	
  6063                           
  6064                           ;calibrate_mode.c: 120: }
  6065                           ;calibrate_mode.c: 121: spi2_Send_data = linkInfo.My_address;
  6066  0167  084D               	movf	_linkInfo^(0+128),w
  6067  0168                     L26:	
  6068  0168  0020               	movlb	0	; select bank0
  6069  0169  00C2               	movwf	??_Calibrate_download
  6070  016A  0842               	movf	??_Calibrate_download,w
  6071  016B                     L23:	
  6072  016B  00EB               	movwf	_spi2_Send_data
  6073                           
  6074                           ;calibrate_mode.c: 123: }
  6075                           
  6076                           ;calibrate_mode.c: 122: break;
  6077  016C  297D               	goto	l2616
  6078  016D                     l2614:	
  6079                           
  6080                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6081                           ; Switch size 1, requested type "space"
  6082                           ; Number of cases is 1, Range of values is 0 to 0
  6083                           ; switch strategies available:
  6084                           ; Name         Instructions Cycles
  6085                           ; simple_byte            4     3 (average)
  6086                           ; direct_byte            8     6 (fixed)
  6087                           ; jumptable            260     6 (fixed)
  6088                           ;	Chosen strategy is simple_byte
  6089  016D  0020               	movlb	0	; select bank0
  6090  016E  085F               	movf	_countabuf+1,w
  6091  016F  3A00               	xorlw	0	; case 0
  6092  0170  1903               	skipnz
  6093  0171  2973               	goto	l3028
  6094  0172  297D               	goto	l2616
  6095  0173                     l3028:	
  6096                           
  6097                           ; Switch size 1, requested type "space"
  6098                           ; Number of cases is 10, Range of values is 0 to 9
  6099                           ; switch strategies available:
  6100                           ; Name         Instructions Cycles
  6101                           ; direct_byte           26     6 (fixed)
  6102                           ; simple_byte           31    16 (average)
  6103                           ; jumptable            260     6 (fixed)
  6104                           ;	Chosen strategy is direct_byte
  6105  0173  085E               	movf	_countabuf,w
  6106  0174  0084               	movwf	4
  6107  0175  300A               	movlw	10
  6108  0176  0204               	subwf	4,w
  6109  0177  1803               	skipnc
  6110  0178  297D               	goto	l2616
  6111  0179  3186               	movlp	high S3030
  6112  017A  3504               	lslf	4,w
  6113  017B  3E00               	addlw	low S3030
  6114  017C  0082               	movwf	2
  6115  017D                     l2616:	
  6116                           
  6117                           ;calibrate_mode.c: 125: countabuf++;
  6118  017D  3001               	movlw	1
  6119  017E  07DE               	addwf	_countabuf,f
  6120  017F  3000               	movlw	0
  6121  0180  3DDF               	addwfc	_countabuf+1,f
  6122                           
  6123                           ;calibrate_mode.c: 126: if(calibdata.cargoLength <= countabuf){
  6124  0181  0021               	movlb	1	; select bank1
  6125  0182  0845               	movf	(_calibdata+1)^(0+128),w
  6126  0183  0020               	movlb	0	; select bank0
  6127  0184  025F               	subwf	_countabuf+1,w
  6128  0185  1D03               	skipz
  6129  0186  298B               	goto	u1165
  6130  0187  0021               	movlb	1	; select bank1
  6131  0188  0844               	movf	_calibdata^(0+128),w
  6132  0189  0020               	movlb	0	; select bank0
  6133  018A  025E               	subwf	_countabuf,w
  6134  018B                     u1165:	
  6135  018B  1C03               	skipc
  6136  018C  0008               	return
  6137                           
  6138                           ;calibrate_mode.c: 127: calibdata.cargoLength = 0xFFFF;
  6139  018D  30FF               	movlw	255
  6140  018E  0021               	movlb	1	; select bank1
  6141  018F  00C4               	movwf	_calibdata^(0+128)
  6142  0190  30FF               	movlw	255
  6143  0191  00C5               	movwf	(_calibdata^(0+128)+1)
  6144                           
  6145                           ;calibrate_mode.c: 128: countabuf = 0;
  6146  0192  0020               	movlb	0	; select bank0
  6147  0193  01DE               	clrf	_countabuf
  6148  0194  01DF               	clrf	_countabuf+1
  6149  0195  0008               	return
  6150  0196                     __end_of_Calibrate_download:	
  6151                           
  6152                           	psect	swtext2
  6153  0600                     __pswtext2:	
  6154  0600                     S3030:	
  6155  0600  3180  28C7         	ljmp	l2580
  6156  0602  3180  28D7         	ljmp	l2586
  6157  0604  3180  28ED         	ljmp	l2588
  6158  0606  3180  28F5         	ljmp	l2590
  6159  0608  3180  28FE         	ljmp	l2592
  6160  060A  3181  2907         	ljmp	l2596
  6161  060C  3181  2927         	ljmp	l2600
  6162  060E  3181  293F         	ljmp	l2602
  6163  0610  3181  295A         	ljmp	l2604
  6164  0612  3181  295D         	ljmp	l416
  6165                           
  6166                           	psect	text9
  6167  045B                     __ptext9:	
  6168 ;; *************** function _isEndpoint *****************
  6169 ;; Defined at:
  6170 ;;		line 30 in file "D:/programdata/16F18346_Link_IC.X/calibrate_mode.c"
  6171 ;; Parameters:    Size  Location     Type
  6172 ;;		None
  6173 ;; Auto vars:     Size  Location     Type
  6174 ;;  spi2data        1    6[BANK0 ] unsigned char 
  6175 ;; Return value:  Size  Location     Type
  6176 ;;		None               void
  6177 ;; Registers used:
  6178 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6179 ;; Tracked objects:
  6180 ;;		On entry : 0/0
  6181 ;;		On exit  : 0/0
  6182 ;;		Unchanged: 0/0
  6183 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6184 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6185 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6186 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6187 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6188 ;;Total ram usage:        6 bytes
  6189 ;; Hardware stack levels used:    1
  6190 ;; Hardware stack levels required when called:    4
  6191 ;; This function calls:
  6192 ;;		_setSPI1sendDataManual
  6193 ;; This function is called by:
  6194 ;;		_Calibrate_download
  6195 ;; This function uses a non-reentrant model
  6196 ;;
  6197                           
  6198                           
  6199                           ;psect for function _isEndpoint
  6200  045B                     _isEndpoint:	
  6201                           
  6202                           ;calibrate_mode.c: 31: unsigned char spi2data = 0;
  6203                           
  6204                           ;incstack = 0
  6205                           ; Regs used in _isEndpoint: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6206  045B  0020               	movlb	0	; select bank0
  6207  045C  01A6               	clrf	isEndpoint@spi2data
  6208                           
  6209                           ;calibrate_mode.c: 32: if(count2 > 1){
  6210  045D  3000               	movlw	0
  6211  045E  0263               	subwf	_count2+1,w
  6212  045F  3002               	movlw	2
  6213  0460  1903               	skipnz
  6214  0461  0262               	subwf	_count2,w
  6215  0462  1C03               	skipc
  6216  0463  2C78               	goto	l2486
  6217                           
  6218                           ;calibrate_mode.c: 33: spi2data = spi2_buffer_data[count2 -1];
  6219  0464  0862               	movf	_count2,w
  6220  0465  3EFF               	addlw	255
  6221  0466  00A1               	movwf	??_isEndpoint
  6222  0467  30FF               	movlw	255
  6223  0468  3D63               	addwfc	_count2+1,w
  6224  0469  00A2               	movwf	??_isEndpoint+1
  6225  046A  30F0               	movlw	240
  6226  046B  00A3               	movwf	??_isEndpoint+2
  6227  046C  3025               	movlw	37
  6228  046D  00A4               	movwf	??_isEndpoint+3
  6229  046E  0821               	movf	??_isEndpoint,w
  6230  046F  0723               	addwf	??_isEndpoint+2,w
  6231  0470  0086               	movwf	6
  6232  0471  0822               	movf	??_isEndpoint+1,w
  6233  0472  3D24               	addwfc	??_isEndpoint+3,w
  6234  0473  0087               	movwf	7
  6235  0474  0801               	movf	1,w
  6236  0475  00A5               	movwf	??_isEndpoint+4
  6237  0476  0825               	movf	??_isEndpoint+4,w
  6238  0477  2C85               	goto	L27
  6239  0478                     l2486:	
  6240                           ;calibrate_mode.c: 34: }else{
  6241                           
  6242                           
  6243                           ;calibrate_mode.c: 35: spi2data = spi2_buffer_data[count2];
  6244  0478  30F0               	movlw	240
  6245  0479  00A1               	movwf	??_isEndpoint
  6246  047A  3025               	movlw	37
  6247  047B  00A2               	movwf	??_isEndpoint+1
  6248  047C  0862               	movf	_count2,w
  6249  047D  0721               	addwf	??_isEndpoint,w
  6250  047E  0086               	movwf	6
  6251  047F  0863               	movf	_count2+1,w
  6252  0480  3D22               	addwfc	??_isEndpoint+1,w
  6253  0481  0087               	movwf	7
  6254  0482  0801               	movf	1,w
  6255  0483  00A3               	movwf	??_isEndpoint+2
  6256  0484  0823               	movf	??_isEndpoint+2,w
  6257  0485                     L27:	
  6258  0485  00A6               	movwf	isEndpoint@spi2data
  6259                           
  6260                           ;calibrate_mode.c: 36: }
  6261                           ;calibrate_mode.c: 37: if(spi2data < 255){
  6262  0486  0A26               	incf	isEndpoint@spi2data,w
  6263  0487  1903               	btfsc	3,2
  6264  0488  2C8D               	goto	l385
  6265                           
  6266                           ;calibrate_mode.c: 38: LATAbits.LATA0 = 0;
  6267  0489  0022               	movlb	2	; select bank2
  6268  048A  100C               	bcf	12,0	;volatile
  6269                           
  6270                           ;calibrate_mode.c: 39: isEndPointTrig = 0;
  6271  048B  1078               	bcf	_isEndPointTrig/(0+8),_isEndPointTrig& (0+7)
  6272                           
  6273                           ;calibrate_mode.c: 40: }else{
  6274  048C  0008               	return
  6275  048D                     l385:	
  6276                           
  6277                           ;calibrate_mode.c: 41: LATAbits.LATA0 = 1;
  6278  048D  0022               	movlb	2	; select bank2
  6279  048E  140C               	bsf	12,0	;volatile
  6280                           
  6281                           ;calibrate_mode.c: 42: setSPI1sendDataManual(0x00);
  6282  048F  3000               	movlw	0
  6283  0490  3186  2697         	fcall	_setSPI1sendDataManual
  6284  0492  0008               	return
  6285  0493                     __end_of_isEndpoint:	
  6286                           ;calibrate_mode.c: 43: }
  6287                           ;calibrate_mode.c: 44: return isEndPointTrig;
  6288                           ;	Return value of _isEndpoint is never used
  6289                           
  6290                           
  6291                           	psect	text10
  6292  0697                     __ptext10:	
  6293 ;; *************** function _setSPI1sendDataManual *****************
  6294 ;; Defined at:
  6295 ;;		line 103 in file "D:/programdata/16F18346_Link_IC.X/spiControl.c"
  6296 ;; Parameters:    Size  Location     Type
  6297 ;;  data            1    wreg     unsigned char 
  6298 ;; Auto vars:     Size  Location     Type
  6299 ;;  data            1    0[BANK0 ] unsigned char 
  6300 ;; Return value:  Size  Location     Type
  6301 ;;                  1    wreg      void 
  6302 ;; Registers used:
  6303 ;;		wreg
  6304 ;; Tracked objects:
  6305 ;;		On entry : 0/0
  6306 ;;		On exit  : 0/0
  6307 ;;		Unchanged: 0/0
  6308 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6309 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6310 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6311 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6312 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6313 ;;Total ram usage:        1 bytes
  6314 ;; Hardware stack levels used:    1
  6315 ;; Hardware stack levels required when called:    3
  6316 ;; This function calls:
  6317 ;;		Nothing
  6318 ;; This function is called by:
  6319 ;;		_isEndpoint
  6320 ;; This function uses a non-reentrant model
  6321 ;;
  6322                           
  6323                           
  6324                           ;psect for function _setSPI1sendDataManual
  6325  0697                     _setSPI1sendDataManual:	
  6326                           
  6327                           ;incstack = 0
  6328                           ; Regs used in _setSPI1sendDataManual: [wreg]
  6329                           ;setSPI1sendDataManual@data stored from wreg
  6330  0697  0020               	movlb	0	; select bank0
  6331  0698  00A0               	movwf	setSPI1sendDataManual@data
  6332                           
  6333                           ;spiControl.c: 104: SSP1BUF = data;
  6334  0699  0820               	movf	setSPI1sendDataManual@data,w
  6335  069A  0024               	movlb	4	; select bank4
  6336  069B  0091               	movwf	17	;volatile
  6337  069C  0008               	return
  6338  069D                     __end_of_setSPI1sendDataManual:	
  6339                           
  6340                           	psect	text11
  6341  04C1                     __ptext11:	
  6342 ;; *************** function _InitCalibrate *****************
  6343 ;; Defined at:
  6344 ;;		line 62 in file "D:/programdata/16F18346_Link_IC.X/calibrate_mode.c"
  6345 ;; Parameters:    Size  Location     Type
  6346 ;;		None
  6347 ;; Auto vars:     Size  Location     Type
  6348 ;;  cargoData      16   18[BANK0 ] struct .
  6349 ;; Return value:  Size  Location     Type
  6350 ;;                  1    wreg      void 
  6351 ;; Registers used:
  6352 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6353 ;; Tracked objects:
  6354 ;;		On entry : 0/0
  6355 ;;		On exit  : 0/0
  6356 ;;		Unchanged: 0/0
  6357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6358 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6359 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6360 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6361 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6362 ;;Total ram usage:       17 bytes
  6363 ;; Hardware stack levels used:    1
  6364 ;; Hardware stack levels required when called:    4
  6365 ;; This function calls:
  6366 ;;		_getCargoData
  6367 ;; This function is called by:
  6368 ;;		_main
  6369 ;;		_Calibrate_download
  6370 ;; This function uses a non-reentrant model
  6371 ;;
  6372                           
  6373                           
  6374                           ;psect for function _InitCalibrate
  6375  04C1                     _InitCalibrate:	
  6376                           
  6377                           ;calibrate_mode.c: 63: isEndPointTrig = 1;
  6378                           
  6379                           ;incstack = 0
  6380                           ; Regs used in _InitCalibrate: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6381  04C1  1478               	bsf	_isEndPointTrig/(0+8),_isEndPointTrig& (0+7)
  6382                           
  6383                           ;calibrate_mode.c: 64: calibdata.cargoLength = 0xFFFF;
  6384  04C2  30FF               	movlw	255
  6385  04C3  0021               	movlb	1	; select bank1
  6386  04C4  00C4               	movwf	_calibdata^(0+128)
  6387  04C5  30FF               	movlw	255
  6388  04C6  00C5               	movwf	(_calibdata^(0+128)+1)
  6389                           
  6390                           ;calibrate_mode.c: 65: calibdata.index = 0x00;
  6391  04C7  01C7               	clrf	(_calibdata^(0+128)+3)
  6392                           
  6393                           ;calibrate_mode.c: 66: calibdata.command =0x00;
  6394  04C8  01C6               	clrf	(_calibdata^(0+128)+2)
  6395                           
  6396                           ;calibrate_mode.c: 67: calibdata.WorkingCount = 0;
  6397  04C9  3000               	movlw	0
  6398  04CA  00CB               	movwf	((_calibdata+3)^(0+128)+4)
  6399  04CB  3000               	movlw	0
  6400  04CC  00CA               	movwf	((_calibdata+2)^(0+128)+4)
  6401  04CD  3000               	movlw	0
  6402  04CE  00C9               	movwf	((_calibdata+1)^(0+128)+4)
  6403  04CF  3000               	movlw	0
  6404  04D0  00C8               	movwf	(_calibdata^(0+128)+4)
  6405                           
  6406                           ;calibrate_mode.c: 68: CargoData cargoData = getCargoData();
  6407  04D1  3186  2614  3184   	fcall	_getCargoData
  6408  04D4  0020               	movlb	0	; select bank0
  6409  04D5  3020               	movlw	low ?_getCargoData
  6410  04D6  0086               	movwf	6
  6411  04D7  3000               	movlw	high ?_getCargoData
  6412  04D8  0087               	movwf	7
  6413  04D9  3032               	movlw	low InitCalibrate@cargoData
  6414  04DA  0084               	movwf	4
  6415  04DB  3000               	movlw	high InitCalibrate@cargoData
  6416  04DC  0085               	movwf	5
  6417  04DD  3010               	movlw	16
  6418  04DE  00B1               	movwf	??_InitCalibrate
  6419  04DF                     u1040:	
  6420  04DF  0016               	moviw fsr1++
  6421  04E0  001A               	movwi fsr0++
  6422  04E1  0BB1               	decfsz	??_InitCalibrate,f
  6423  04E2  2CDF               	goto	u1040
  6424                           
  6425                           ;calibrate_mode.c: 69: cargoData.linkAngleTo = 0;
  6426  04E3  01B7               	clrf	InitCalibrate@cargoData+5
  6427  04E4  01B8               	clrf	InitCalibrate@cargoData+6
  6428                           
  6429                           ;calibrate_mode.c: 70: linkInfo.endpoint = 0;
  6430  04E5  0021               	movlb	1	; select bank1
  6431  04E6  01D2               	clrf	(_linkInfo^(0+128)+5)
  6432                           
  6433                           ;calibrate_mode.c: 71: linkInfo.My_address = 0;
  6434  04E7  01CD               	clrf	_linkInfo^(0+128)
  6435                           
  6436                           ;calibrate_mode.c: 72: countabuf = 0;
  6437  04E8  0020               	movlb	0	; select bank0
  6438  04E9  01DE               	clrf	_countabuf
  6439  04EA  01DF               	clrf	_countabuf+1
  6440  04EB  0008               	return
  6441  04EC                     __end_of_InitCalibrate:	
  6442                           
  6443                           	psect	text12
  6444  0614                     __ptext12:	
  6445 ;; *************** function _getCargoData *****************
  6446 ;; Defined at:
  6447 ;;		line 8 in file "struct.c"
  6448 ;; Parameters:    Size  Location     Type
  6449 ;;		None
  6450 ;; Auto vars:     Size  Location     Type
  6451 ;;		None
  6452 ;; Return value:  Size  Location     Type
  6453 ;;                  16    0[BANK0 ] struct .
  6454 ;; Registers used:
  6455 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  6456 ;; Tracked objects:
  6457 ;;		On entry : 0/0
  6458 ;;		On exit  : 0/0
  6459 ;;		Unchanged: 0/0
  6460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6461 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6462 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6463 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6464 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6465 ;;Total ram usage:       17 bytes
  6466 ;; Hardware stack levels used:    1
  6467 ;; Hardware stack levels required when called:    3
  6468 ;; This function calls:
  6469 ;;		Nothing
  6470 ;; This function is called by:
  6471 ;;		_InitCalibrate
  6472 ;;		_readCargo
  6473 ;;		_setCargo_Angle
  6474 ;; This function uses a non-reentrant model
  6475 ;;
  6476                           
  6477                           
  6478                           ;psect for function _getCargoData
  6479  0614                     _getCargoData:	
  6480                           
  6481                           ;struct.c: 9: return cargoData;
  6482                           
  6483                           ;incstack = 0
  6484                           ; Regs used in _getCargoData: [wreg-fsr1h+status,2+status,0]
  6485  0614  3048               	movlw	low _cargoData
  6486  0615  0086               	movwf	6
  6487  0616  3000               	movlw	high _cargoData
  6488  0617  0087               	movwf	7
  6489  0618  3020               	movlw	low ?_getCargoData
  6490  0619  0084               	movwf	4
  6491  061A  3000               	movlw	high ?_getCargoData
  6492  061B  0085               	movwf	5
  6493  061C  3010               	movlw	16
  6494  061D  0020               	movlb	0	; select bank0
  6495  061E  00B0               	movwf	??_getCargoData
  6496  061F                     u1030:	
  6497  061F  0016               	moviw fsr1++
  6498  0620  001A               	movwi fsr0++
  6499  0621  0BB0               	decfsz	??_getCargoData,f
  6500  0622  2E1F               	goto	u1030
  6501  0623  0008               	return
  6502  0624                     __end_of_getCargoData:	
  6503                           
  6504                           	psect	text13
  6505  03DB                     __ptext13:	
  6506 ;; *************** function _read_train *****************
  6507 ;; Defined at:
  6508 ;;		line 203 in file "D:/programdata/16F18346_Link_IC.X/main.c"
  6509 ;; Parameters:    Size  Location     Type
  6510 ;;		None
  6511 ;; Auto vars:     Size  Location     Type
  6512 ;;  bufint          2    2[BANK0 ] unsigned int 
  6513 ;; Return value:  Size  Location     Type
  6514 ;;                  1    wreg      void 
  6515 ;; Registers used:
  6516 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6517 ;; Tracked objects:
  6518 ;;		On entry : 0/0
  6519 ;;		On exit  : 0/0
  6520 ;;		Unchanged: 0/0
  6521 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6522 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6523 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6524 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6525 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6526 ;;Total ram usage:        4 bytes
  6527 ;; Hardware stack levels used:    1
  6528 ;; Hardware stack levels required when called:    3
  6529 ;; This function calls:
  6530 ;;		Nothing
  6531 ;; This function is called by:
  6532 ;;		_main
  6533 ;; This function uses a non-reentrant model
  6534 ;;
  6535                           
  6536                           
  6537                           ;psect for function _read_train
  6538  03DB                     _read_train:	
  6539                           
  6540                           ;main.c: 204: unsigned int bufint = spi1_Read_data;
  6541                           
  6542                           ;incstack = 0
  6543                           ; Regs used in _read_train: [wreg-fsr0h+status,2+status,0]
  6544  03DB  0879               	movf	_spi1_Read_data,w
  6545  03DC  0020               	movlb	0	; select bank0
  6546  03DD  00A0               	movwf	??_read_train
  6547  03DE  01A1               	clrf	??_read_train+1
  6548  03DF  0820               	movf	??_read_train,w
  6549  03E0  00A2               	movwf	read_train@bufint
  6550  03E1  0821               	movf	??_read_train+1,w
  6551  03E2  00A3               	movwf	read_train@bufint+1
  6552                           
  6553                           ;main.c: 205: switch(trainPos){
  6554  03E3  2C00               	goto	l2844
  6555  03E4                     l2834:	
  6556                           ;main.c: 206: case 1:
  6557                           
  6558                           
  6559                           ;main.c: 207: st_dataLength = (bufint << 8 | 0x00FF);
  6560  03E4  0822               	movf	read_train@bufint,w
  6561  03E5  00A1               	movwf	??_read_train+1
  6562  03E6  01A0               	clrf	??_read_train
  6563  03E7  30FF               	movlw	255
  6564  03E8  0420               	iorwf	??_read_train,w
  6565  03E9  00EC               	movwf	_st_dataLength
  6566  03EA  3000               	movlw	0
  6567  03EB  0421               	iorwf	??_read_train+1,w
  6568  03EC  2BF8               	goto	L28
  6569  03ED                     l2836:	
  6570                           ;main.c: 209: case 2:
  6571                           
  6572                           ;main.c: 208: break;
  6573                           
  6574                           
  6575                           ;main.c: 210: st_dataLength = st_dataLength & (bufint | 0xFF00);
  6576  03ED  3000               	movlw	0
  6577  03EE  0422               	iorwf	read_train@bufint,w
  6578  03EF  00A0               	movwf	??_read_train
  6579  03F0  30FF               	movlw	255
  6580  03F1  0423               	iorwf	read_train@bufint+1,w
  6581  03F2  00A1               	movwf	??_read_train+1
  6582  03F3  086C               	movf	_st_dataLength,w
  6583  03F4  0520               	andwf	??_read_train,w
  6584  03F5  00EC               	movwf	_st_dataLength
  6585  03F6  086D               	movf	_st_dataLength+1,w
  6586  03F7  0521               	andwf	??_read_train+1,w
  6587  03F8                     L28:	
  6588  03F8  00ED               	movwf	_st_dataLength+1
  6589                           
  6590                           ;main.c: 211: break;
  6591  03F9  2C10               	goto	l2846
  6592  03FA                     l2838:	
  6593                           ;main.c: 212: case 3:
  6594                           
  6595                           
  6596                           ;main.c: 213: st_type = spi1_Read_data;
  6597  03FA  0879               	movf	_spi1_Read_data,w
  6598  03FB  00A0               	movwf	??_read_train
  6599  03FC  0820               	movf	??_read_train,w
  6600  03FD  00EA               	movwf	_st_type
  6601                           
  6602                           ;main.c: 214: isreadTrain = 1;
  6603  03FE  1770               	bsf	_isreadTrain/(0+8),_isreadTrain& (0+7)
  6604                           
  6605                           ;main.c: 218: }
  6606                           
  6607                           ;main.c: 217: break;
  6608                           
  6609                           ;main.c: 216: default :
  6610                           
  6611                           ;main.c: 215: break;
  6612  03FF  2C10               	goto	l2846
  6613  0400                     l2844:	
  6614                           
  6615                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6616                           ; Switch size 1, requested type "space"
  6617                           ; Number of cases is 1, Range of values is 0 to 0
  6618                           ; switch strategies available:
  6619                           ; Name         Instructions Cycles
  6620                           ; simple_byte            4     3 (average)
  6621                           ; direct_byte            8     6 (fixed)
  6622                           ; jumptable            260     6 (fixed)
  6623                           ;	Chosen strategy is simple_byte
  6624  0400  085B               	movf	_trainPos+1,w
  6625  0401  3A00               	xorlw	0	; case 0
  6626  0402  1903               	skipnz
  6627  0403  2C05               	goto	l3032
  6628  0404  2C10               	goto	l2846
  6629  0405                     l3032:	
  6630                           
  6631                           ; Switch size 1, requested type "space"
  6632                           ; Number of cases is 3, Range of values is 1 to 3
  6633                           ; switch strategies available:
  6634                           ; Name         Instructions Cycles
  6635                           ; simple_byte           10     6 (average)
  6636                           ; direct_byte           15     9 (fixed)
  6637                           ; jumptable            263     9 (fixed)
  6638                           ;	Chosen strategy is simple_byte
  6639  0405  085A               	movf	_trainPos,w
  6640  0406  3A01               	xorlw	1	; case 1
  6641  0407  1903               	skipnz
  6642  0408  2BE4               	goto	l2834
  6643  0409  3A03               	xorlw	3	; case 2
  6644  040A  1903               	skipnz
  6645  040B  2BED               	goto	l2836
  6646  040C  3A01               	xorlw	1	; case 3
  6647  040D  1903               	skipnz
  6648  040E  2BFA               	goto	l2838
  6649  040F  2C10               	goto	l2846
  6650  0410                     l2846:	
  6651                           
  6652                           ;main.c: 220: if(read_count1 == 256){
  6653  0410  0361               	decf	_read_count1+1,w
  6654  0411  0460               	iorwf	_read_count1,w
  6655  0412  1D03               	btfss	3,2
  6656  0413  2C16               	goto	l2850
  6657                           
  6658                           ;main.c: 221: read_count1 = 0;
  6659  0414  01E0               	clrf	_read_count1
  6660  0415  01E1               	clrf	_read_count1+1
  6661  0416                     l2850:	
  6662                           
  6663                           ;main.c: 222: }
  6664                           ;main.c: 223: if(read_count2 == 256){
  6665  0416  035D               	decf	_read_count2+1,w
  6666  0417  045C               	iorwf	_read_count2,w
  6667  0418  1D03               	btfss	3,2
  6668  0419  0008               	return
  6669                           
  6670                           ;main.c: 224: read_count2 = 0;
  6671  041A  01DC               	clrf	_read_count2
  6672  041B  01DD               	clrf	_read_count2+1
  6673  041C  0008               	return
  6674  041D                     __end_of_read_train:	
  6675                           
  6676                           	psect	text14
  6677  0624                     __ptext14:	
  6678 ;; *************** function _isSPI1read *****************
  6679 ;; Defined at:
  6680 ;;		line 67 in file "D:/programdata/16F18346_Link_IC.X/spiControl.c"
  6681 ;; Parameters:    Size  Location     Type
  6682 ;;		None
  6683 ;; Auto vars:     Size  Location     Type
  6684 ;;		None
  6685 ;; Return value:  Size  Location     Type
  6686 ;;		None               void
  6687 ;; Registers used:
  6688 ;;		wreg, status,2, status,0
  6689 ;; Tracked objects:
  6690 ;;		On entry : 0/0
  6691 ;;		On exit  : 0/0
  6692 ;;		Unchanged: 0/0
  6693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6694 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6695 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6697 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6698 ;;Total ram usage:        0 bytes
  6699 ;; Hardware stack levels used:    1
  6700 ;; Hardware stack levels required when called:    3
  6701 ;; This function calls:
  6702 ;;		Nothing
  6703 ;; This function is called by:
  6704 ;;		_main
  6705 ;; This function uses a non-reentrant model
  6706 ;;
  6707                           
  6708                           
  6709                           ;psect for function _isSPI1read
  6710  0624                     _isSPI1read:	
  6711                           
  6712                           ;spiControl.c: 68: if(read_count1 == count1){
  6713                           
  6714                           ;incstack = 0
  6715                           ; Regs used in _isSPI1read: [wreg+status,2+status,0]
  6716  0624  0020               	movlb	0	; select bank0
  6717  0625  0865               	movf	_count1+1,w
  6718  0626  0661               	xorwf	_read_count1+1,w
  6719  0627  1D03               	skipz
  6720  0628  2E2B               	goto	u1265
  6721  0629  0864               	movf	_count1,w
  6722  062A  0660               	xorwf	_read_count1,w
  6723  062B                     u1265:	
  6724  062B  1D03               	skipz
  6725  062C  2E2F               	goto	l2800
  6726                           
  6727                           ;spiControl.c: 69: return 1;
  6728  062D  1403               	setc
  6729                           
  6730                           ;spiControl.c: 70: }else{
  6731  062E  0008               	return
  6732  062F                     l2800:	
  6733                           
  6734                           ;spiControl.c: 71: return 0;
  6735  062F  1003               	clrc
  6736  0630  0008               	return
  6737  0631                     __end_of_isSPI1read:	
  6738                           
  6739                           	psect	text15
  6740  0685                     __ptext15:	
  6741 ;; *************** function _io_init *****************
  6742 ;; Defined at:
  6743 ;;		line 132 in file "D:/programdata/16F18346_Link_IC.X/main.c"
  6744 ;; Parameters:    Size  Location     Type
  6745 ;;		None
  6746 ;; Auto vars:     Size  Location     Type
  6747 ;;		None
  6748 ;; Return value:  Size  Location     Type
  6749 ;;                  1    wreg      void 
  6750 ;; Registers used:
  6751 ;;		None
  6752 ;; Tracked objects:
  6753 ;;		On entry : 0/0
  6754 ;;		On exit  : 0/0
  6755 ;;		Unchanged: 0/0
  6756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6757 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6758 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6760 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6761 ;;Total ram usage:        0 bytes
  6762 ;; Hardware stack levels used:    1
  6763 ;; Hardware stack levels required when called:    3
  6764 ;; This function calls:
  6765 ;;		Nothing
  6766 ;; This function is called by:
  6767 ;;		_main
  6768 ;; This function uses a non-reentrant model
  6769 ;;
  6770                           
  6771                           
  6772                           ;psect for function _io_init
  6773  0685                     _io_init:	
  6774                           
  6775                           ;main.c: 133: PIE0bits.IOCIE = 1;
  6776                           
  6777                           ;incstack = 0
  6778                           ; Regs used in _io_init: []
  6779  0685  0021               	movlb	1	; select bank1
  6780  0686  1610               	bsf	16,4	;volatile
  6781                           
  6782                           ;main.c: 134: IOCAPbits.IOCAP3 = 1;
  6783  0687  0027               	movlb	7	; select bank7
  6784  0688  1591               	bsf	17,3	;volatile
  6785                           
  6786                           ;main.c: 135: IOCANbits.IOCAN3 = 1;
  6787  0689  1592               	bsf	18,3	;volatile
  6788                           
  6789                           ;main.c: 136: PIE0bits.INTE = 1;
  6790  068A  0021               	movlb	1	; select bank1
  6791  068B  1410               	bsf	16,0	;volatile
  6792                           
  6793                           ;main.c: 137: INTCONbits.INTEDG = 1;
  6794  068C  140B               	bsf	11,0	;volatile
  6795  068D  0008               	return
  6796  068E                     __end_of_io_init:	
  6797                           
  6798                           	psect	text16
  6799  0350                     __ptext16:	
  6800 ;; *************** function _initTrain *****************
  6801 ;; Defined at:
  6802 ;;		line 140 in file "D:/programdata/16F18346_Link_IC.X/main.c"
  6803 ;; Parameters:    Size  Location     Type
  6804 ;;		None
  6805 ;; Auto vars:     Size  Location     Type
  6806 ;;		None
  6807 ;; Return value:  Size  Location     Type
  6808 ;;                  1    wreg      void 
  6809 ;; Registers used:
  6810 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6811 ;; Tracked objects:
  6812 ;;		On entry : 0/0
  6813 ;;		On exit  : 0/0
  6814 ;;		Unchanged: 0/0
  6815 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6816 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6817 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6818 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6819 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6820 ;;Total ram usage:        3 bytes
  6821 ;; Hardware stack levels used:    1
  6822 ;; Hardware stack levels required when called:    5
  6823 ;; This function calls:
  6824 ;;		_isTrainSt
  6825 ;;		_resetTrainData
  6826 ;; This function is called by:
  6827 ;;		_main
  6828 ;; This function uses a non-reentrant model
  6829 ;;
  6830                           
  6831                           
  6832                           ;psect for function _initTrain
  6833  0350                     _initTrain:	
  6834                           
  6835                           ;main.c: 141: spi1_Read_data = spi1_buffer_data[read_count1];
  6836                           
  6837                           ;incstack = 0
  6838                           ; Regs used in _initTrain: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6839  0350  30F0               	movlw	240
  6840  0351  0020               	movlb	0	; select bank0
  6841  0352  00A9               	movwf	??_initTrain
  6842  0353  3026               	movlw	38
  6843  0354  00AA               	movwf	??_initTrain+1
  6844  0355  0860               	movf	_read_count1,w
  6845  0356  0729               	addwf	??_initTrain,w
  6846  0357  0086               	movwf	6
  6847  0358  0861               	movf	_read_count1+1,w
  6848  0359  3D2A               	addwfc	??_initTrain+1,w
  6849  035A  0087               	movwf	7
  6850  035B  0801               	movf	1,w
  6851  035C  00AB               	movwf	??_initTrain+2
  6852  035D  082B               	movf	??_initTrain+2,w
  6853  035E  00F9               	movwf	_spi1_Read_data
  6854                           
  6855                           ;main.c: 142: spi2_Send_data = spi1_Read_data;
  6856  035F  0879               	movf	_spi1_Read_data,w
  6857  0360  00A9               	movwf	??_initTrain
  6858  0361  0829               	movf	??_initTrain,w
  6859  0362  00EB               	movwf	_spi2_Send_data
  6860                           
  6861                           ;main.c: 143: read_count1++;
  6862  0363  3001               	movlw	1
  6863  0364  07E0               	addwf	_read_count1,f
  6864  0365  3000               	movlw	0
  6865  0366  3DE1               	addwfc	_read_count1+1,f
  6866                           
  6867                           ;main.c: 144: if(isTrainSt(spi1_Read_data)){
  6868  0367  0879               	movf	_spi1_Read_data,w
  6869  0368  3183  2396  3183   	fcall	_isTrainSt
  6870  036B  1C03               	btfss	3,0
  6871  036C  2B7C               	goto	l2760
  6872                           
  6873                           ;main.c: 145: trainPos = 0;
  6874  036D  0020               	movlb	0	; select bank0
  6875  036E  01DA               	clrf	_trainPos
  6876  036F  01DB               	clrf	_trainPos+1
  6877                           
  6878                           ;main.c: 146: read_count1 = 0;
  6879  0370  01E0               	clrf	_read_count1
  6880  0371  01E1               	clrf	_read_count1+1
  6881                           
  6882                           ;main.c: 147: resetTrainData();
  6883  0372  3186  268E  3183   	fcall	_resetTrainData
  6884                           
  6885                           ;main.c: 148: isreadTrain = 0;
  6886  0375  1370               	bcf	_isreadTrain/(0+8),_isreadTrain& (0+7)
  6887                           
  6888                           ;main.c: 149: count1 = 0;
  6889  0376  0020               	movlb	0	; select bank0
  6890  0377  01E4               	clrf	_count1
  6891  0378  01E5               	clrf	_count1+1
  6892                           
  6893                           ;main.c: 150: countabuf = 0;
  6894  0379  01DE               	clrf	_countabuf
  6895  037A  01DF               	clrf	_countabuf+1
  6896                           
  6897                           ;main.c: 151: }else{
  6898  037B  2B81               	goto	l134
  6899  037C                     l2760:	
  6900                           
  6901                           ;main.c: 152: trainPos++;
  6902  037C  3001               	movlw	1
  6903  037D  0020               	movlb	0	; select bank0
  6904  037E  07DA               	addwf	_trainPos,f
  6905  037F  3000               	movlw	0
  6906  0380  3DDB               	addwfc	_trainPos+1,f
  6907  0381                     l134:	
  6908                           
  6909                           ;main.c: 153: }
  6910                           ;main.c: 154: if(st_dataLength < trainPos){
  6911  0381  085B               	movf	_trainPos+1,w
  6912  0382  026D               	subwf	_st_dataLength+1,w
  6913  0383  1D03               	skipz
  6914  0384  2B87               	goto	u1255
  6915  0385  085A               	movf	_trainPos,w
  6916  0386  026C               	subwf	_st_dataLength,w
  6917  0387                     u1255:	
  6918  0387  1803               	skipnc
  6919  0388  0008               	return
  6920                           
  6921                           ;main.c: 155: trainPos = 0;
  6922  0389  01DA               	clrf	_trainPos
  6923  038A  01DB               	clrf	_trainPos+1
  6924                           
  6925                           ;main.c: 156: read_count1 = 0;
  6926  038B  01E0               	clrf	_read_count1
  6927  038C  01E1               	clrf	_read_count1+1
  6928                           
  6929                           ;main.c: 157: resetTrainData();
  6930  038D  3186  268E         	fcall	_resetTrainData
  6931                           
  6932                           ;main.c: 158: isreadTrain = 0;
  6933  038F  1370               	bcf	_isreadTrain/(0+8),_isreadTrain& (0+7)
  6934                           
  6935                           ;main.c: 159: count1 = 0;
  6936  0390  0020               	movlb	0	; select bank0
  6937  0391  01E4               	clrf	_count1
  6938  0392  01E5               	clrf	_count1+1
  6939                           
  6940                           ;main.c: 160: countabuf = 0;
  6941  0393  01DE               	clrf	_countabuf
  6942  0394  01DF               	clrf	_countabuf+1
  6943  0395  0008               	return
  6944  0396                     __end_of_initTrain:	
  6945                           
  6946                           	psect	text17
  6947  068E                     __ptext17:	
  6948 ;; *************** function _resetTrainData *****************
  6949 ;; Defined at:
  6950 ;;		line 185 in file "D:/programdata/16F18346_Link_IC.X/main.c"
  6951 ;; Parameters:    Size  Location     Type
  6952 ;;		None
  6953 ;; Auto vars:     Size  Location     Type
  6954 ;;		None
  6955 ;; Return value:  Size  Location     Type
  6956 ;;                  1    wreg      void 
  6957 ;; Registers used:
  6958 ;;		wreg, status,2, status,0, pclath, cstack
  6959 ;; Tracked objects:
  6960 ;;		On entry : 0/0
  6961 ;;		On exit  : 0/0
  6962 ;;		Unchanged: 0/0
  6963 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6964 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6965 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6967 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6968 ;;Total ram usage:        0 bytes
  6969 ;; Hardware stack levels used:    1
  6970 ;; Hardware stack levels required when called:    4
  6971 ;; This function calls:
  6972 ;;		_restartCargo
  6973 ;; This function is called by:
  6974 ;;		_initTrain
  6975 ;; This function uses a non-reentrant model
  6976 ;;
  6977                           
  6978                           
  6979                           ;psect for function _resetTrainData
  6980  068E                     _resetTrainData:	
  6981                           
  6982                           ;main.c: 186: st_dataLength = 0xFFFF;
  6983                           
  6984                           ;incstack = 0
  6985                           ; Regs used in _resetTrainData: [wreg+status,2+status,0+pclath+cstack]
  6986  068E  30FF               	movlw	255
  6987  068F  0020               	movlb	0	; select bank0
  6988  0690  00EC               	movwf	_st_dataLength
  6989  0691  30FF               	movlw	255
  6990  0692  00ED               	movwf	_st_dataLength+1
  6991                           
  6992                           ;main.c: 187: st_type = 0;
  6993  0693  01EA               	clrf	_st_type
  6994                           
  6995                           ;main.c: 188: restartCargo();
  6996  0694  3186  2631         	fcall	_restartCargo
  6997  0696  0008               	return
  6998  0697                     __end_of_resetTrainData:	
  6999                           
  7000                           	psect	text18
  7001  0631                     __ptext18:	
  7002 ;; *************** function _restartCargo *****************
  7003 ;; Defined at:
  7004 ;;		line 33 in file "struct.c"
  7005 ;; Parameters:    Size  Location     Type
  7006 ;;		None
  7007 ;; Auto vars:     Size  Location     Type
  7008 ;;		None
  7009 ;; Return value:  Size  Location     Type
  7010 ;;                  1    wreg      void 
  7011 ;; Registers used:
  7012 ;;		wreg, status,2
  7013 ;; Tracked objects:
  7014 ;;		On entry : 0/0
  7015 ;;		On exit  : 0/0
  7016 ;;		Unchanged: 0/0
  7017 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7018 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7019 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7020 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7021 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7022 ;;Total ram usage:        0 bytes
  7023 ;; Hardware stack levels used:    1
  7024 ;; Hardware stack levels required when called:    3
  7025 ;; This function calls:
  7026 ;;		Nothing
  7027 ;; This function is called by:
  7028 ;;		_resetTrainData
  7029 ;;		_readCargo
  7030 ;; This function uses a non-reentrant model
  7031 ;;
  7032                           
  7033                           
  7034                           ;psect for function _restartCargo
  7035  0631                     _restartCargo:	
  7036                           
  7037                           ;struct.c: 34: cargoData.WorkingCount = 0;
  7038                           
  7039                           ;incstack = 0
  7040                           ; Regs used in _restartCargo: [wreg+status,2]
  7041  0631  3000               	movlw	0
  7042  0632  0020               	movlb	0	; select bank0
  7043  0633  00D7               	movwf	_cargoData+15
  7044  0634  3000               	movlw	0
  7045  0635  00D6               	movwf	_cargoData+14
  7046  0636  3000               	movlw	0
  7047  0637  00D5               	movwf	_cargoData+13
  7048  0638  3000               	movlw	0
  7049  0639  00D4               	movwf	_cargoData+12
  7050                           
  7051                           ;struct.c: 35: cargoData.address = 0;
  7052  063A  01CC               	clrf	_cargoData+4
  7053                           
  7054                           ;struct.c: 36: cargoData.command = 0;
  7055  063B  01CA               	clrf	_cargoData+2
  7056                           
  7057                           ;struct.c: 37: cargoData.index = 0;
  7058  063C  01CB               	clrf	_cargoData+3
  7059  063D  0008               	return
  7060  063E                     __end_of_restartCargo:	
  7061                           
  7062                           	psect	text19
  7063  0396                     __ptext19:	
  7064 ;; *************** function _isTrainSt *****************
  7065 ;; Defined at:
  7066 ;;		line 191 in file "D:/programdata/16F18346_Link_IC.X/main.c"
  7067 ;; Parameters:    Size  Location     Type
  7068 ;;  buf             1    wreg     unsigned char 
  7069 ;; Auto vars:     Size  Location     Type
  7070 ;;  buf             1    8[BANK0 ] unsigned char 
  7071 ;; Return value:  Size  Location     Type
  7072 ;;		None               void
  7073 ;; Registers used:
  7074 ;;		wreg, status,2, status,0
  7075 ;; Tracked objects:
  7076 ;;		On entry : 0/0
  7077 ;;		On exit  : 0/0
  7078 ;;		Unchanged: 0/0
  7079 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7080 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7081 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7082 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7083 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7084 ;;Total ram usage:        9 bytes
  7085 ;; Hardware stack levels used:    1
  7086 ;; Hardware stack levels required when called:    3
  7087 ;; This function calls:
  7088 ;;		Nothing
  7089 ;; This function is called by:
  7090 ;;		_initTrain
  7091 ;; This function uses a non-reentrant model
  7092 ;;
  7093                           
  7094                           
  7095                           ;psect for function _isTrainSt
  7096  0396                     _isTrainSt:	
  7097                           
  7098                           ;incstack = 0
  7099                           ; Regs used in _isTrainSt: [wreg+status,2+status,0]
  7100                           ;isTrainSt@buf stored from wreg
  7101  0396  0020               	movlb	0	; select bank0
  7102  0397  00A8               	movwf	isTrainSt@buf
  7103                           
  7104                           ;main.c: 192: startTrainBytes = startTrainBytes << 8 | buf;
  7105  0398  0828               	movf	isTrainSt@buf,w
  7106  0399  00A0               	movwf	??_isTrainSt
  7107  039A  01A1               	clrf	??_isTrainSt+1
  7108  039B  01A2               	clrf	??_isTrainSt+2
  7109  039C  01A3               	clrf	??_isTrainSt+3
  7110  039D  0021               	movlb	1	; select bank1
  7111  039E  0857               	movf	_startTrainBytes^(0+128),w
  7112  039F  0020               	movlb	0	; select bank0
  7113  03A0  00A4               	movwf	??_isTrainSt+4
  7114  03A1  0021               	movlb	1	; select bank1
  7115  03A2  0858               	movf	(_startTrainBytes+1)^(0+128),w
  7116  03A3  0020               	movlb	0	; select bank0
  7117  03A4  00A5               	movwf	??_isTrainSt+5
  7118  03A5  0021               	movlb	1	; select bank1
  7119  03A6  0859               	movf	(_startTrainBytes+2)^(0+128),w
  7120  03A7  0020               	movlb	0	; select bank0
  7121  03A8  00A6               	movwf	??_isTrainSt+6
  7122  03A9  0021               	movlb	1	; select bank1
  7123  03AA  085A               	movf	(_startTrainBytes+3)^(0+128),w
  7124  03AB  0020               	movlb	0	; select bank0
  7125  03AC  00A7               	movwf	??_isTrainSt+7
  7126  03AD  3008               	movlw	8
  7127  03AE                     u1105:	
  7128  03AE  35A4               	lslf	??_isTrainSt+4,f
  7129  03AF  0DA5               	rlf	??_isTrainSt+5,f
  7130  03B0  0DA6               	rlf	??_isTrainSt+6,f
  7131  03B1  0DA7               	rlf	??_isTrainSt+7,f
  7132  03B2  0B89               	decfsz	9,f
  7133  03B3  2BAE               	goto	u1105
  7134  03B4  0824               	movf	??_isTrainSt+4,w
  7135  03B5  04A0               	iorwf	??_isTrainSt,f
  7136  03B6  0825               	movf	??_isTrainSt+5,w
  7137  03B7  04A1               	iorwf	??_isTrainSt+1,f
  7138  03B8  0826               	movf	??_isTrainSt+6,w
  7139  03B9  04A2               	iorwf	??_isTrainSt+2,f
  7140  03BA  0827               	movf	??_isTrainSt+7,w
  7141  03BB  04A3               	iorwf	??_isTrainSt+3,f
  7142  03BC  0823               	movf	??_isTrainSt+3,w
  7143  03BD  0021               	movlb	1	; select bank1
  7144  03BE  00DA               	movwf	(_startTrainBytes+3)^(0+128)
  7145  03BF  0020               	movlb	0	; select bank0
  7146  03C0  0822               	movf	??_isTrainSt+2,w
  7147  03C1  0021               	movlb	1	; select bank1
  7148  03C2  00D9               	movwf	(_startTrainBytes+2)^(0+128)
  7149  03C3  0020               	movlb	0	; select bank0
  7150  03C4  0821               	movf	??_isTrainSt+1,w
  7151  03C5  0021               	movlb	1	; select bank1
  7152  03C6  00D8               	movwf	(_startTrainBytes+1)^(0+128)
  7153  03C7  0020               	movlb	0	; select bank0
  7154  03C8  0820               	movf	??_isTrainSt,w
  7155  03C9  0021               	movlb	1	; select bank1
  7156  03CA  00D7               	movwf	_startTrainBytes^(0+128)
  7157                           
  7158                           ;main.c: 193: if(startTrainBytes == 0xFFFFFFFF){
  7159  03CB  0A57               	incf	_startTrainBytes^(0+128),w
  7160  03CC  1D03               	skipz
  7161  03CD  2BD9               	goto	l2518
  7162  03CE  0A58               	incf	(_startTrainBytes+1)^(0+128),w
  7163  03CF  1D03               	skipz
  7164  03D0  2BD9               	goto	l2518
  7165  03D1  0A59               	incf	(_startTrainBytes+2)^(0+128),w
  7166  03D2  1D03               	skipz
  7167  03D3  2BD9               	goto	l2518
  7168  03D4  0A5A               	incf	(_startTrainBytes+3)^(0+128),w
  7169  03D5  1D03               	btfss	3,2
  7170  03D6  2BD9               	goto	l2518
  7171                           
  7172                           ;main.c: 194: return 1;
  7173  03D7  1403               	setc
  7174                           
  7175                           ;main.c: 195: }else{
  7176  03D8  0008               	return
  7177  03D9                     l2518:	
  7178                           
  7179                           ;main.c: 196: return 0;
  7180  03D9  1003               	clrc
  7181  03DA  0008               	return
  7182  03DB                     __end_of_isTrainSt:	
  7183                           
  7184                           	psect	text20
  7185  0276                     __ptext20:	
  7186 ;; *************** function _initComu_types *****************
  7187 ;; Defined at:
  7188 ;;		line 18 in file "D:/programdata/16F18346_Link_IC.X/comu_type.c"
  7189 ;; Parameters:    Size  Location     Type
  7190 ;;		None
  7191 ;; Auto vars:     Size  Location     Type
  7192 ;;		None
  7193 ;; Return value:  Size  Location     Type
  7194 ;;                  1    wreg      void 
  7195 ;; Registers used:
  7196 ;;		wreg
  7197 ;; Tracked objects:
  7198 ;;		On entry : 0/0
  7199 ;;		On exit  : 0/0
  7200 ;;		Unchanged: 0/0
  7201 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7202 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7203 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7204 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7205 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7206 ;;Total ram usage:        1 bytes
  7207 ;; Hardware stack levels used:    1
  7208 ;; Hardware stack levels required when called:    3
  7209 ;; This function calls:
  7210 ;;		Nothing
  7211 ;; This function is called by:
  7212 ;;		_main
  7213 ;; This function uses a non-reentrant model
  7214 ;;
  7215                           
  7216                           
  7217                           ;psect for function _initComu_types
  7218  0276                     _initComu_types:	
  7219                           
  7220                           ;comu_type.c: 19: comu_types[0] = 0b00111111;
  7221                           
  7222                           ;incstack = 0
  7223                           ; Regs used in _initComu_types: [wreg]
  7224  0276  303F               	movlw	63
  7225  0277  0020               	movlb	0	; select bank0
  7226  0278  00A0               	movwf	??_initComu_types
  7227  0279  0820               	movf	??_initComu_types,w
  7228  027A  0021               	movlb	1	; select bank1
  7229  027B  00A0               	movwf	_comu_types^(0+128)
  7230                           
  7231                           ;comu_type.c: 20: comu_types[1] = 0b01111111;
  7232  027C  307F               	movlw	127
  7233  027D  0020               	movlb	0	; select bank0
  7234  027E  00A0               	movwf	??_initComu_types
  7235  027F  0820               	movf	??_initComu_types,w
  7236  0280  0021               	movlb	1	; select bank1
  7237  0281  00A1               	movwf	(_comu_types^(0+128)+1)
  7238                           
  7239                           ;comu_type.c: 21: comu_types[2] = 0b10011111;
  7240  0282  309F               	movlw	159
  7241  0283  0020               	movlb	0	; select bank0
  7242  0284  00A0               	movwf	??_initComu_types
  7243  0285  0820               	movf	??_initComu_types,w
  7244  0286  0021               	movlb	1	; select bank1
  7245  0287  00A2               	movwf	(_comu_types^(0+128)+2)
  7246                           
  7247                           ;comu_type.c: 22: comu_types[3] = 0b10101111;
  7248  0288  30AF               	movlw	175
  7249  0289  0020               	movlb	0	; select bank0
  7250  028A  00A0               	movwf	??_initComu_types
  7251  028B  0820               	movf	??_initComu_types,w
  7252  028C  0021               	movlb	1	; select bank1
  7253  028D  00A3               	movwf	(_comu_types^(0+128)+3)
  7254                           
  7255                           ;comu_type.c: 23: comu_types[4] = 0b10111111;
  7256  028E  30BF               	movlw	191
  7257  028F  0020               	movlb	0	; select bank0
  7258  0290  00A0               	movwf	??_initComu_types
  7259  0291  0820               	movf	??_initComu_types,w
  7260  0292  0021               	movlb	1	; select bank1
  7261  0293  00A4               	movwf	(_comu_types^(0+128)+4)
  7262                           
  7263                           ;comu_type.c: 24: comu_types[5] = 0b11001111;
  7264  0294  30CF               	movlw	207
  7265  0295  0020               	movlb	0	; select bank0
  7266  0296  00A0               	movwf	??_initComu_types
  7267  0297  0820               	movf	??_initComu_types,w
  7268  0298  0021               	movlb	1	; select bank1
  7269  0299  00A5               	movwf	(_comu_types^(0+128)+5)
  7270                           
  7271                           ;comu_type.c: 25: comu_types[6] = 0b11010111;
  7272  029A  30D7               	movlw	215
  7273  029B  0020               	movlb	0	; select bank0
  7274  029C  00A0               	movwf	??_initComu_types
  7275  029D  0820               	movf	??_initComu_types,w
  7276  029E  0021               	movlb	1	; select bank1
  7277  029F  00A6               	movwf	(_comu_types^(0+128)+6)
  7278                           
  7279                           ;comu_type.c: 26: comu_types[7] = 0b11011111;
  7280  02A0  30DF               	movlw	223
  7281  02A1  0020               	movlb	0	; select bank0
  7282  02A2  00A0               	movwf	??_initComu_types
  7283  02A3  0820               	movf	??_initComu_types,w
  7284  02A4  0021               	movlb	1	; select bank1
  7285  02A5  00A7               	movwf	(_comu_types^(0+128)+7)
  7286                           
  7287                           ;comu_type.c: 27: comu_types[8] = 0b11100111;
  7288  02A6  30E7               	movlw	231
  7289  02A7  0020               	movlb	0	; select bank0
  7290  02A8  00A0               	movwf	??_initComu_types
  7291  02A9  0820               	movf	??_initComu_types,w
  7292  02AA  0021               	movlb	1	; select bank1
  7293  02AB  00A8               	movwf	(_comu_types^(0+128)+8)
  7294                           
  7295                           ;comu_type.c: 28: comu_types[9] = 0b11101011;
  7296  02AC  30EB               	movlw	235
  7297  02AD  0020               	movlb	0	; select bank0
  7298  02AE  00A0               	movwf	??_initComu_types
  7299  02AF  0820               	movf	??_initComu_types,w
  7300  02B0  0021               	movlb	1	; select bank1
  7301  02B1  00A9               	movwf	(_comu_types^(0+128)+9)
  7302                           
  7303                           ;comu_type.c: 29: comu_types[10] = 0b11101111;
  7304  02B2  30EF               	movlw	239
  7305  02B3  0020               	movlb	0	; select bank0
  7306  02B4  00A0               	movwf	??_initComu_types
  7307  02B5  0820               	movf	??_initComu_types,w
  7308  02B6  0021               	movlb	1	; select bank1
  7309  02B7  00AA               	movwf	(_comu_types^(0+128)+10)
  7310                           
  7311                           ;comu_type.c: 30: comu_types[11] = 0b11110001;
  7312  02B8  30F1               	movlw	241
  7313  02B9  0020               	movlb	0	; select bank0
  7314  02BA  00A0               	movwf	??_initComu_types
  7315  02BB  0820               	movf	??_initComu_types,w
  7316  02BC  0021               	movlb	1	; select bank1
  7317  02BD  00AB               	movwf	(_comu_types^(0+128)+11)
  7318                           
  7319                           ;comu_type.c: 31: comu_types[12] = 0b11110011;
  7320  02BE  30F3               	movlw	243
  7321  02BF  0020               	movlb	0	; select bank0
  7322  02C0  00A0               	movwf	??_initComu_types
  7323  02C1  0820               	movf	??_initComu_types,w
  7324  02C2  0021               	movlb	1	; select bank1
  7325  02C3  00AC               	movwf	(_comu_types^(0+128)+12)
  7326                           
  7327                           ;comu_type.c: 32: comu_types[13] = 0b11110101;
  7328  02C4  30F5               	movlw	245
  7329  02C5  0020               	movlb	0	; select bank0
  7330  02C6  00A0               	movwf	??_initComu_types
  7331  02C7  0820               	movf	??_initComu_types,w
  7332  02C8  0021               	movlb	1	; select bank1
  7333  02C9  00AD               	movwf	(_comu_types^(0+128)+13)
  7334                           
  7335                           ;comu_type.c: 33: comu_types[14] = 0b11110111;
  7336  02CA  30F7               	movlw	247
  7337  02CB  0020               	movlb	0	; select bank0
  7338  02CC  00A0               	movwf	??_initComu_types
  7339  02CD  0820               	movf	??_initComu_types,w
  7340  02CE  0021               	movlb	1	; select bank1
  7341  02CF  00AE               	movwf	(_comu_types^(0+128)+14)
  7342                           
  7343                           ;comu_type.c: 34: comu_types[15] = 0b11111000;
  7344  02D0  30F8               	movlw	248
  7345  02D1  0020               	movlb	0	; select bank0
  7346  02D2  00A0               	movwf	??_initComu_types
  7347  02D3  0820               	movf	??_initComu_types,w
  7348  02D4  0021               	movlb	1	; select bank1
  7349  02D5  00AF               	movwf	(_comu_types^(0+128)+15)
  7350                           
  7351                           ;comu_type.c: 35: comu_types[16] = 0b11111001;
  7352  02D6  30F9               	movlw	249
  7353  02D7  0020               	movlb	0	; select bank0
  7354  02D8  00A0               	movwf	??_initComu_types
  7355  02D9  0820               	movf	??_initComu_types,w
  7356  02DA  0021               	movlb	1	; select bank1
  7357  02DB  00B0               	movwf	(_comu_types^(0+128)+16)
  7358                           
  7359                           ;comu_type.c: 36: comu_types[17] = 0b11111010;
  7360  02DC  30FA               	movlw	250
  7361  02DD  0020               	movlb	0	; select bank0
  7362  02DE  00A0               	movwf	??_initComu_types
  7363  02DF  0820               	movf	??_initComu_types,w
  7364  02E0  0021               	movlb	1	; select bank1
  7365  02E1  00B1               	movwf	(_comu_types^(0+128)+17)
  7366  02E2  0008               	return
  7367  02E3                     __end_of_initComu_types:	
  7368                           
  7369                           	psect	text21
  7370  02E3                     __ptext21:	
  7371 ;; *************** function _initComand *****************
  7372 ;; Defined at:
  7373 ;;		line 12 in file "D:/programdata/16F18346_Link_IC.X/command.c"
  7374 ;; Parameters:    Size  Location     Type
  7375 ;;		None
  7376 ;; Auto vars:     Size  Location     Type
  7377 ;;		None
  7378 ;; Return value:  Size  Location     Type
  7379 ;;                  1    wreg      void 
  7380 ;; Registers used:
  7381 ;;		wreg
  7382 ;; Tracked objects:
  7383 ;;		On entry : 0/0
  7384 ;;		On exit  : 0/0
  7385 ;;		Unchanged: 0/0
  7386 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7387 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7388 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7389 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7390 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7391 ;;Total ram usage:        1 bytes
  7392 ;; Hardware stack levels used:    1
  7393 ;; Hardware stack levels required when called:    3
  7394 ;; This function calls:
  7395 ;;		Nothing
  7396 ;; This function is called by:
  7397 ;;		_main
  7398 ;; This function uses a non-reentrant model
  7399 ;;
  7400                           
  7401                           
  7402                           ;psect for function _initComand
  7403  02E3                     _initComand:	
  7404                           
  7405                           ;command.c: 13: command[0] = 0b00111111;
  7406                           
  7407                           ;incstack = 0
  7408                           ; Regs used in _initComand: [wreg]
  7409  02E3  303F               	movlw	63
  7410  02E4  0020               	movlb	0	; select bank0
  7411  02E5  00A0               	movwf	??_initComand
  7412  02E6  0820               	movf	??_initComand,w
  7413  02E7  0021               	movlb	1	; select bank1
  7414  02E8  00B2               	movwf	_command^(0+128)
  7415                           
  7416                           ;command.c: 14: command[1] = 0b01111111;
  7417  02E9  307F               	movlw	127
  7418  02EA  0020               	movlb	0	; select bank0
  7419  02EB  00A0               	movwf	??_initComand
  7420  02EC  0820               	movf	??_initComand,w
  7421  02ED  0021               	movlb	1	; select bank1
  7422  02EE  00B3               	movwf	(_command^(0+128)+1)
  7423                           
  7424                           ;command.c: 15: command[2] = 0b10011111;
  7425  02EF  309F               	movlw	159
  7426  02F0  0020               	movlb	0	; select bank0
  7427  02F1  00A0               	movwf	??_initComand
  7428  02F2  0820               	movf	??_initComand,w
  7429  02F3  0021               	movlb	1	; select bank1
  7430  02F4  00B4               	movwf	(_command^(0+128)+2)
  7431                           
  7432                           ;command.c: 16: command[3] = 0b10101111;
  7433  02F5  30AF               	movlw	175
  7434  02F6  0020               	movlb	0	; select bank0
  7435  02F7  00A0               	movwf	??_initComand
  7436  02F8  0820               	movf	??_initComand,w
  7437  02F9  0021               	movlb	1	; select bank1
  7438  02FA  00B5               	movwf	(_command^(0+128)+3)
  7439                           
  7440                           ;command.c: 17: command[4] = 0b10111111;
  7441  02FB  30BF               	movlw	191
  7442  02FC  0020               	movlb	0	; select bank0
  7443  02FD  00A0               	movwf	??_initComand
  7444  02FE  0820               	movf	??_initComand,w
  7445  02FF  0021               	movlb	1	; select bank1
  7446  0300  00B6               	movwf	(_command^(0+128)+4)
  7447                           
  7448                           ;command.c: 18: command[5] = 0b11001111;
  7449  0301  30CF               	movlw	207
  7450  0302  0020               	movlb	0	; select bank0
  7451  0303  00A0               	movwf	??_initComand
  7452  0304  0820               	movf	??_initComand,w
  7453  0305  0021               	movlb	1	; select bank1
  7454  0306  00B7               	movwf	(_command^(0+128)+5)
  7455                           
  7456                           ;command.c: 19: command[6] = 0b11010111;
  7457  0307  30D7               	movlw	215
  7458  0308  0020               	movlb	0	; select bank0
  7459  0309  00A0               	movwf	??_initComand
  7460  030A  0820               	movf	??_initComand,w
  7461  030B  0021               	movlb	1	; select bank1
  7462  030C  00B8               	movwf	(_command^(0+128)+6)
  7463                           
  7464                           ;command.c: 20: command[7] = 0b11011111;
  7465  030D  30DF               	movlw	223
  7466  030E  0020               	movlb	0	; select bank0
  7467  030F  00A0               	movwf	??_initComand
  7468  0310  0820               	movf	??_initComand,w
  7469  0311  0021               	movlb	1	; select bank1
  7470  0312  00B9               	movwf	(_command^(0+128)+7)
  7471                           
  7472                           ;command.c: 21: command[8] = 0b11100111;
  7473  0313  30E7               	movlw	231
  7474  0314  0020               	movlb	0	; select bank0
  7475  0315  00A0               	movwf	??_initComand
  7476  0316  0820               	movf	??_initComand,w
  7477  0317  0021               	movlb	1	; select bank1
  7478  0318  00BA               	movwf	(_command^(0+128)+8)
  7479                           
  7480                           ;command.c: 22: command[9] = 0b11101011;
  7481  0319  30EB               	movlw	235
  7482  031A  0020               	movlb	0	; select bank0
  7483  031B  00A0               	movwf	??_initComand
  7484  031C  0820               	movf	??_initComand,w
  7485  031D  0021               	movlb	1	; select bank1
  7486  031E  00BB               	movwf	(_command^(0+128)+9)
  7487                           
  7488                           ;command.c: 23: command[10] = 0b11101111;
  7489  031F  30EF               	movlw	239
  7490  0320  0020               	movlb	0	; select bank0
  7491  0321  00A0               	movwf	??_initComand
  7492  0322  0820               	movf	??_initComand,w
  7493  0323  0021               	movlb	1	; select bank1
  7494  0324  00BC               	movwf	(_command^(0+128)+10)
  7495                           
  7496                           ;command.c: 24: command[11] = 0b11110001;
  7497  0325  30F1               	movlw	241
  7498  0326  0020               	movlb	0	; select bank0
  7499  0327  00A0               	movwf	??_initComand
  7500  0328  0820               	movf	??_initComand,w
  7501  0329  0021               	movlb	1	; select bank1
  7502  032A  00BD               	movwf	(_command^(0+128)+11)
  7503                           
  7504                           ;command.c: 25: command[12] = 0b11110011;
  7505  032B  30F3               	movlw	243
  7506  032C  0020               	movlb	0	; select bank0
  7507  032D  00A0               	movwf	??_initComand
  7508  032E  0820               	movf	??_initComand,w
  7509  032F  0021               	movlb	1	; select bank1
  7510  0330  00BE               	movwf	(_command^(0+128)+12)
  7511                           
  7512                           ;command.c: 26: command[13] = 0b11110101;
  7513  0331  30F5               	movlw	245
  7514  0332  0020               	movlb	0	; select bank0
  7515  0333  00A0               	movwf	??_initComand
  7516  0334  0820               	movf	??_initComand,w
  7517  0335  0021               	movlb	1	; select bank1
  7518  0336  00BF               	movwf	(_command^(0+128)+13)
  7519                           
  7520                           ;command.c: 27: command[14] = 0b11110111;
  7521  0337  30F7               	movlw	247
  7522  0338  0020               	movlb	0	; select bank0
  7523  0339  00A0               	movwf	??_initComand
  7524  033A  0820               	movf	??_initComand,w
  7525  033B  0021               	movlb	1	; select bank1
  7526  033C  00C0               	movwf	(_command^(0+128)+14)
  7527                           
  7528                           ;command.c: 28: command[15] = 0b11111000;
  7529  033D  30F8               	movlw	248
  7530  033E  0020               	movlb	0	; select bank0
  7531  033F  00A0               	movwf	??_initComand
  7532  0340  0820               	movf	??_initComand,w
  7533  0341  0021               	movlb	1	; select bank1
  7534  0342  00C1               	movwf	(_command^(0+128)+15)
  7535                           
  7536                           ;command.c: 29: command[16] = 0b11111001;
  7537  0343  30F9               	movlw	249
  7538  0344  0020               	movlb	0	; select bank0
  7539  0345  00A0               	movwf	??_initComand
  7540  0346  0820               	movf	??_initComand,w
  7541  0347  0021               	movlb	1	; select bank1
  7542  0348  00C2               	movwf	(_command^(0+128)+16)
  7543                           
  7544                           ;command.c: 30: command[17] = 0b11111010;
  7545  0349  30FA               	movlw	250
  7546  034A  0020               	movlb	0	; select bank0
  7547  034B  00A0               	movwf	??_initComand
  7548  034C  0820               	movf	??_initComand,w
  7549  034D  0021               	movlb	1	; select bank1
  7550  034E  00C3               	movwf	(_command^(0+128)+17)
  7551  034F  0008               	return
  7552  0350                     __end_of_initComand:	
  7553                           
  7554                           	psect	text22
  7555  05E7                     __ptext22:	
  7556 ;; *************** function _initCargo *****************
  7557 ;; Defined at:
  7558 ;;		line 14 in file "struct.c"
  7559 ;; Parameters:    Size  Location     Type
  7560 ;;		None
  7561 ;; Auto vars:     Size  Location     Type
  7562 ;;		None
  7563 ;; Return value:  Size  Location     Type
  7564 ;;                  1    wreg      void 
  7565 ;; Registers used:
  7566 ;;		wreg, status,2
  7567 ;; Tracked objects:
  7568 ;;		On entry : 0/0
  7569 ;;		On exit  : 0/0
  7570 ;;		Unchanged: 0/0
  7571 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7572 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7573 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7574 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7575 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7576 ;;Total ram usage:        0 bytes
  7577 ;; Hardware stack levels used:    1
  7578 ;; Hardware stack levels required when called:    3
  7579 ;; This function calls:
  7580 ;;		Nothing
  7581 ;; This function is called by:
  7582 ;;		_main
  7583 ;; This function uses a non-reentrant model
  7584 ;;
  7585                           
  7586                           
  7587                           ;psect for function _initCargo
  7588  05E7                     _initCargo:	
  7589                           
  7590                           ;struct.c: 15: isMycargo = 1;
  7591                           
  7592                           ;incstack = 0
  7593                           ; Regs used in _initCargo: [wreg+status,2]
  7594  05E7  1470               	bsf	_isMycargo/(0+8),_isMycargo& (0+7)
  7595                           
  7596                           ;struct.c: 16: cargoData.WorkingCount = 0;
  7597  05E8  3000               	movlw	0
  7598  05E9  0020               	movlb	0	; select bank0
  7599  05EA  00D7               	movwf	_cargoData+15
  7600  05EB  3000               	movlw	0
  7601  05EC  00D6               	movwf	_cargoData+14
  7602  05ED  3000               	movlw	0
  7603  05EE  00D5               	movwf	_cargoData+13
  7604  05EF  3000               	movlw	0
  7605  05F0  00D4               	movwf	_cargoData+12
  7606                           
  7607                           ;struct.c: 17: cargoData.address = 0;
  7608  05F1  01CC               	clrf	_cargoData+4
  7609                           
  7610                           ;struct.c: 18: cargoData.cargoLength = 0xFFFF;
  7611  05F2  30FF               	movlw	255
  7612  05F3  00C8               	movwf	_cargoData
  7613  05F4  30FF               	movlw	255
  7614  05F5  00C9               	movwf	_cargoData+1
  7615                           
  7616                           ;struct.c: 19: cargoData.clutchMode = 0;
  7617  05F6  01D3               	clrf	_cargoData+11
  7618                           
  7619                           ;struct.c: 20: cargoData.command = 0;
  7620  05F7  01CA               	clrf	_cargoData+2
  7621                           
  7622                           ;struct.c: 21: cargoData.index = 0;
  7623  05F8  01CB               	clrf	_cargoData+3
  7624                           
  7625                           ;struct.c: 22: cargoData.linkAngleTo = 0;
  7626  05F9  01CD               	clrf	_cargoData+5
  7627  05FA  01CE               	clrf	_cargoData+6
  7628                           
  7629                           ;struct.c: 23: cargoData.passedTime = 0;
  7630  05FB  01D1               	clrf	_cargoData+9
  7631  05FC  01D2               	clrf	_cargoData+10
  7632  05FD  0008               	return
  7633  05FE                     __end_of_initCargo:	
  7634                           
  7635                           	psect	text23
  7636  0516                     __ptext23:	
  7637 ;; *************** function _init *****************
  7638 ;; Defined at:
  7639 ;;		line 105 in file "D:/programdata/16F18346_Link_IC.X/main.c"
  7640 ;; Parameters:    Size  Location     Type
  7641 ;;		None
  7642 ;; Auto vars:     Size  Location     Type
  7643 ;;		None
  7644 ;; Return value:  Size  Location     Type
  7645 ;;                  1    wreg      void 
  7646 ;; Registers used:
  7647 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7648 ;; Tracked objects:
  7649 ;;		On entry : 0/0
  7650 ;;		On exit  : 0/0
  7651 ;;		Unchanged: 0/0
  7652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7653 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7654 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7655 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7656 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7657 ;;Total ram usage:        0 bytes
  7658 ;; Hardware stack levels used:    1
  7659 ;; Hardware stack levels required when called:    4
  7660 ;; This function calls:
  7661 ;;		_clear
  7662 ;;		_initbuffer
  7663 ;; This function is called by:
  7664 ;;		_main
  7665 ;; This function uses a non-reentrant model
  7666 ;;
  7667                           
  7668                           
  7669                           ;psect for function _init
  7670  0516                     _init:	
  7671                           
  7672                           ;main.c: 106: count1 = 0;
  7673                           
  7674                           ;incstack = 0
  7675                           ; Regs used in _init: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7676  0516  0020               	movlb	0	; select bank0
  7677  0517  01E4               	clrf	_count1
  7678  0518  01E5               	clrf	_count1+1
  7679                           
  7680                           ;main.c: 107: count2 = 0;
  7681  0519  01E2               	clrf	_count2
  7682  051A  01E3               	clrf	_count2+1
  7683                           
  7684                           ;main.c: 108: initbuffer();
  7685  051B  3184  24EC  3185   	fcall	_initbuffer
  7686                           
  7687                           ;main.c: 110: OSCFRQbits.HFFRQ = 0b0111;
  7688  051E  0032               	movlb	18	; select bank18
  7689  051F  081F               	movf	31,w	;volatile
  7690  0520  39F0               	andlw	-16
  7691  0521  3807               	iorlw	7
  7692  0522  009F               	movwf	31	;volatile
  7693                           
  7694                           ;main.c: 111: OSCTUNEbits.HFTUN = 0b000000;
  7695  0523  30C0               	movlw	-64
  7696  0524  059E               	andwf	30,f	;volatile
  7697                           
  7698                           ;main.c: 112: clear();
  7699  0525  3186  263E         	fcall	_clear
  7700                           
  7701                           ;main.c: 113: WPUC = 0b11111111;
  7702  0527  30FF               	movlw	255
  7703  0528  0024               	movlb	4	; select bank4
  7704  0529  008E               	movwf	14	;volatile
  7705                           
  7706                           ;main.c: 114: WPUB = 0b11111111;
  7707  052A  30FF               	movlw	255
  7708  052B  008D               	movwf	13	;volatile
  7709                           
  7710                           ;main.c: 115: WPUA = 0b11111111;
  7711  052C  30FF               	movlw	255
  7712  052D  008C               	movwf	12	;volatile
  7713                           
  7714                           ;main.c: 116: TRISBbits.TRISB6 = 1;
  7715  052E  0021               	movlb	1	; select bank1
  7716  052F  170D               	bsf	13,6	;volatile
  7717                           
  7718                           ;main.c: 117: TRISBbits.TRISB4 = 1;
  7719  0530  160D               	bsf	13,4	;volatile
  7720                           
  7721                           ;main.c: 118: TRISCbits.TRISC6 = 1;
  7722  0531  170E               	bsf	14,6	;volatile
  7723                           
  7724                           ;main.c: 119: INLVLBbits.INLVLB4 = 0;
  7725  0532  0027               	movlb	7	; select bank7
  7726  0533  120D               	bcf	13,4	;volatile
  7727                           
  7728                           ;main.c: 120: INLVLBbits.INLVLB6 = 0;
  7729  0534  130D               	bcf	13,6	;volatile
  7730                           
  7731                           ;main.c: 121: INLVLCbits.INLVLC5 = 0;
  7732  0535  128E               	bcf	14,5	;volatile
  7733                           
  7734                           ;main.c: 123: TRISBbits.TRISB5 = 1;
  7735  0536  0021               	movlb	1	; select bank1
  7736  0537  168D               	bsf	13,5	;volatile
  7737                           
  7738                           ;main.c: 124: INLVLBbits.INLVLB5 = 0;
  7739  0538  0027               	movlb	7	; select bank7
  7740  0539  128D               	bcf	13,5	;volatile
  7741                           
  7742                           ;main.c: 125: INLVLBbits.INLVLB7 = 0;
  7743  053A  138D               	bcf	13,7	;volatile
  7744                           
  7745                           ;main.c: 126: INLVLAbits.INLVLA1 = 0;
  7746  053B  108C               	bcf	12,1	;volatile
  7747                           
  7748                           ;main.c: 127: INLVLAbits.INLVLA2 = 0;
  7749  053C  110C               	bcf	12,2	;volatile
  7750  053D  0008               	return
  7751  053E                     __end_of_init:	
  7752                           ;main.c: 129: return;
  7753                           
  7754                           
  7755                           	psect	text24
  7756  04EC                     __ptext24:	
  7757 ;; *************** function _initbuffer *****************
  7758 ;; Defined at:
  7759 ;;		line 99 in file "D:/programdata/16F18346_Link_IC.X/main.c"
  7760 ;; Parameters:    Size  Location     Type
  7761 ;;		None
  7762 ;; Auto vars:     Size  Location     Type
  7763 ;;  i               2    2[BANK0 ] int 
  7764 ;; Return value:  Size  Location     Type
  7765 ;;                  1    wreg      void 
  7766 ;; Registers used:
  7767 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7768 ;; Tracked objects:
  7769 ;;		On entry : 0/0
  7770 ;;		On exit  : 0/0
  7771 ;;		Unchanged: 0/0
  7772 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7773 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7774 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7775 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7776 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7777 ;;Total ram usage:        4 bytes
  7778 ;; Hardware stack levels used:    1
  7779 ;; Hardware stack levels required when called:    3
  7780 ;; This function calls:
  7781 ;;		Nothing
  7782 ;; This function is called by:
  7783 ;;		_init
  7784 ;; This function uses a non-reentrant model
  7785 ;;
  7786                           
  7787                           
  7788                           ;psect for function _initbuffer
  7789  04EC                     _initbuffer:	
  7790                           
  7791                           ;main.c: 100: for(int i = 0; i < 256; i++){
  7792                           
  7793                           ;incstack = 0
  7794                           ; Regs used in _initbuffer: [wreg+fsr1l+fsr1h+status,2+status,0]
  7795  04EC  0020               	movlb	0	; select bank0
  7796  04ED  01A2               	clrf	initbuffer@i
  7797  04EE  01A3               	clrf	initbuffer@i+1
  7798  04EF                     L29:	
  7799  04EF  0823               	movf	initbuffer@i+1,w
  7800  04F0  3A80               	xorlw	128
  7801  04F1  00A0               	movwf	??_initbuffer
  7802  04F2  3081               	movlw	129
  7803  04F3  0220               	subwf	??_initbuffer,w
  7804  04F4  1D03               	skipz
  7805  04F5  2CF8               	goto	u1085
  7806  04F6  3000               	movlw	0
  7807  04F7  0222               	subwf	initbuffer@i,w
  7808  04F8                     u1085:	
  7809  04F8  1803               	btfsc	3,0
  7810  04F9  0008               	return
  7811                           
  7812                           ;main.c: 101: spi1_buffer_data[i] = 0;
  7813  04FA  30F0               	movlw	240
  7814  04FB  0020               	movlb	0	; select bank0
  7815  04FC  00A0               	movwf	??_initbuffer
  7816  04FD  3026               	movlw	38
  7817  04FE  00A1               	movwf	??_initbuffer+1
  7818  04FF  0822               	movf	initbuffer@i,w
  7819  0500  0720               	addwf	??_initbuffer,w
  7820  0501  0086               	movwf	6
  7821  0502  0823               	movf	initbuffer@i+1,w
  7822  0503  3D21               	addwfc	??_initbuffer+1,w
  7823  0504  0087               	movwf	7
  7824  0505  0181               	clrf	1
  7825                           
  7826                           ;main.c: 102: spi2_buffer_data[i] = 0;
  7827  0506  30F0               	movlw	240
  7828  0507  00A0               	movwf	??_initbuffer
  7829  0508  3025               	movlw	37
  7830  0509  00A1               	movwf	??_initbuffer+1
  7831  050A  0822               	movf	initbuffer@i,w
  7832  050B  0720               	addwf	??_initbuffer,w
  7833  050C  0086               	movwf	6
  7834  050D  0823               	movf	initbuffer@i+1,w
  7835  050E  3D21               	addwfc	??_initbuffer+1,w
  7836  050F  0087               	movwf	7
  7837  0510  0181               	clrf	1
  7838  0511  3001               	movlw	1
  7839  0512  07A2               	addwf	initbuffer@i,f
  7840  0513  3000               	movlw	0
  7841  0514  3DA3               	addwfc	initbuffer@i+1,f
  7842  0515  2CEF               	goto	L29
  7843  0516                     __end_of_initbuffer:	
  7844                           
  7845                           	psect	text25
  7846  063E                     __ptext25:	
  7847 ;; *************** function _clear *****************
  7848 ;; Defined at:
  7849 ;;		line 9 in file "D:/programdata/16F18346_Link_IC.X/util.c"
  7850 ;; Parameters:    Size  Location     Type
  7851 ;;		None
  7852 ;; Auto vars:     Size  Location     Type
  7853 ;;		None
  7854 ;; Return value:  Size  Location     Type
  7855 ;;                  1    wreg      void 
  7856 ;; Registers used:
  7857 ;;		status,2
  7858 ;; Tracked objects:
  7859 ;;		On entry : 0/0
  7860 ;;		On exit  : 0/0
  7861 ;;		Unchanged: 0/0
  7862 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7863 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7864 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7865 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7866 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7867 ;;Total ram usage:        0 bytes
  7868 ;; Hardware stack levels used:    1
  7869 ;; Hardware stack levels required when called:    3
  7870 ;; This function calls:
  7871 ;;		Nothing
  7872 ;; This function is called by:
  7873 ;;		_init
  7874 ;; This function uses a non-reentrant model
  7875 ;;
  7876                           
  7877                           
  7878                           ;psect for function _clear
  7879  063E                     _clear:	
  7880                           
  7881                           ;util.c: 10: ANSELA = 0x00;
  7882                           
  7883                           ;incstack = 0
  7884                           ; Regs used in _clear: [status,2]
  7885  063E  0023               	movlb	3	; select bank3
  7886  063F  018C               	clrf	12	;volatile
  7887                           
  7888                           ;util.c: 11: ANSELB = 0x00;
  7889  0640  018D               	clrf	13	;volatile
  7890                           
  7891                           ;util.c: 12: ANSELC = 0x00;
  7892  0641  018E               	clrf	14	;volatile
  7893                           
  7894                           ;util.c: 13: PORTA = 0x00;
  7895  0642  0020               	movlb	0	; select bank0
  7896  0643  018C               	clrf	12	;volatile
  7897                           
  7898                           ;util.c: 14: PORTB = 0x00;
  7899  0644  018D               	clrf	13	;volatile
  7900                           
  7901                           ;util.c: 15: PORTC = 0x00;
  7902  0645  018E               	clrf	14	;volatile
  7903                           
  7904                           ;util.c: 16: TRISA = 0x00;
  7905  0646  0021               	movlb	1	; select bank1
  7906  0647  018C               	clrf	12	;volatile
  7907                           
  7908                           ;util.c: 17: TRISB = 0x00;
  7909  0648  018D               	clrf	13	;volatile
  7910                           
  7911                           ;util.c: 18: TRISC = 0x00;
  7912  0649  018E               	clrf	14	;volatile
  7913  064A  0008               	return
  7914  064B                     __end_of_clear:	
  7915                           
  7916                           	psect	intentry
  7917  0004                     __pintentry:	
  7918 ;; *************** function _InterMSSP *****************
  7919 ;; Defined at:
  7920 ;;		line 69 in file "D:/programdata/16F18346_Link_IC.X/main.c"
  7921 ;; Parameters:    Size  Location     Type
  7922 ;;		None
  7923 ;; Auto vars:     Size  Location     Type
  7924 ;;		None
  7925 ;; Return value:  Size  Location     Type
  7926 ;;                  1    wreg      void 
  7927 ;; Registers used:
  7928 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7929 ;; Tracked objects:
  7930 ;;		On entry : 0/0
  7931 ;;		On exit  : 0/0
  7932 ;;		Unchanged: 0/0
  7933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7934 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7935 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7936 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7937 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7938 ;;Total ram usage:        5 bytes
  7939 ;; Hardware stack levels used:    1
  7940 ;; Hardware stack levels required when called:    2
  7941 ;; This function calls:
  7942 ;;		_addAngle
  7943 ;;		_setSPI1sendData
  7944 ;; This function is called by:
  7945 ;;		Interrupt level 1
  7946 ;; This function uses a non-reentrant model
  7947 ;;
  7948                           
  7949  0004                     _InterMSSP:	
  7950                           
  7951                           ;incstack = 0
  7952  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  7953                           
  7954                           ; Regs used in _InterMSSP: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7955  0005  3180               	pagesel	$
  7956  0006  0020               	movlb	0	; select bank0
  7957  0007  087F               	movf	127,w
  7958  0008  00F7               	movwf	??_InterMSSP+4
  7959                           
  7960                           ;main.c: 71: if (PIR1bits.SSP1IF == 1) {
  7961  0009  1D91               	btfss	17,3	;volatile
  7962  000A  282A               	goto	i1l2174
  7963                           
  7964                           ;main.c: 72: spi1_buffer_data[count1] = SSP1BUF;
  7965  000B  30F0               	movlw	240
  7966  000C  00F3               	movwf	??_InterMSSP
  7967  000D  3026               	movlw	38
  7968  000E  00F4               	movwf	??_InterMSSP+1
  7969  000F  0864               	movf	_count1,w
  7970  0010  0773               	addwf	??_InterMSSP,w
  7971  0011  00F5               	movwf	??_InterMSSP+2
  7972  0012  0865               	movf	_count1+1,w
  7973  0013  3D74               	addwfc	??_InterMSSP+1,w
  7974  0014  00F6               	movwf	??_InterMSSP+3
  7975  0015  0875               	movf	??_InterMSSP+2,w
  7976  0016  0086               	movwf	6
  7977  0017  0876               	movf	??_InterMSSP+3,w
  7978  0018  0087               	movwf	7
  7979  0019  0024               	movlb	4	; select bank4
  7980  001A  0811               	movf	17,w	;volatile
  7981  001B  0081               	movwf	1
  7982                           
  7983                           ;main.c: 73: setSPI1sendData();
  7984  001C  3185  2585  3180   	fcall	_setSPI1sendData
  7985                           
  7986                           ;main.c: 74: count1++;
  7987  001F  3001               	movlw	1
  7988  0020  0020               	movlb	0	; select bank0
  7989  0021  07E4               	addwf	_count1,f
  7990  0022  3000               	movlw	0
  7991  0023  3DE5               	addwfc	_count1+1,f
  7992                           
  7993                           ;main.c: 75: if(count1 == 256){
  7994  0024  0365               	decf	_count1+1,w
  7995  0025  0464               	iorwf	_count1,w
  7996  0026  1D03               	btfss	3,2
  7997  0027  282A               	goto	i1l2174
  7998                           
  7999                           ;main.c: 76: count1 = 0;
  8000  0028  01E4               	clrf	_count1
  8001  0029  01E5               	clrf	_count1+1
  8002  002A                     i1l2174:	
  8003                           
  8004                           ;main.c: 77: }
  8005                           ;main.c: 78: }
  8006                           ;main.c: 79: if(linkInfo.endpoint == 0){
  8007  002A  0021               	movlb	1	; select bank1
  8008  002B  0852               	movf	(_linkInfo^(0+128)+5),w
  8009  002C  1D03               	btfss	3,2
  8010  002D  284D               	goto	i1l2186
  8011                           
  8012                           ;main.c: 80: if (PIR2bits.SSP2IF == 1) {
  8013  002E  0020               	movlb	0	; select bank0
  8014  002F  1D92               	btfss	18,3	;volatile
  8015  0030  284D               	goto	i1l2186
  8016                           
  8017                           ;main.c: 81: spi2_buffer_data[count2] = SSP2BUF;
  8018  0031  30F0               	movlw	240
  8019  0032  00F3               	movwf	??_InterMSSP
  8020  0033  3025               	movlw	37
  8021  0034  00F4               	movwf	??_InterMSSP+1
  8022  0035  0862               	movf	_count2,w
  8023  0036  0773               	addwf	??_InterMSSP,w
  8024  0037  00F5               	movwf	??_InterMSSP+2
  8025  0038  0863               	movf	_count2+1,w
  8026  0039  3D74               	addwfc	??_InterMSSP+1,w
  8027  003A  00F6               	movwf	??_InterMSSP+3
  8028  003B  0875               	movf	??_InterMSSP+2,w
  8029  003C  0086               	movwf	6
  8030  003D  0876               	movf	??_InterMSSP+3,w
  8031  003E  0087               	movwf	7
  8032  003F  0024               	movlb	4	; select bank4
  8033  0040  0819               	movf	25,w	;volatile
  8034  0041  0081               	movwf	1
  8035                           
  8036                           ;main.c: 82: count2++;
  8037  0042  3001               	movlw	1
  8038  0043  0020               	movlb	0	; select bank0
  8039  0044  07E2               	addwf	_count2,f
  8040  0045  3000               	movlw	0
  8041  0046  3DE3               	addwfc	_count2+1,f
  8042                           
  8043                           ;main.c: 83: if(count2 == 256){
  8044  0047  0363               	decf	_count2+1,w
  8045  0048  0462               	iorwf	_count2,w
  8046  0049  1D03               	btfss	3,2
  8047  004A  284D               	goto	i1l2186
  8048                           
  8049                           ;main.c: 84: count2 = 0;
  8050  004B  01E2               	clrf	_count2
  8051  004C  01E3               	clrf	_count2+1
  8052  004D                     i1l2186:	
  8053                           
  8054                           ;main.c: 85: }
  8055                           ;main.c: 86: }
  8056                           ;main.c: 87: }
  8057                           ;main.c: 89: if(IOCAFbits.IOCAF3 == 1){
  8058  004D  0027               	movlb	7	; select bank7
  8059  004E  1D93               	btfss	19,3	;volatile
  8060  004F  2852               	goto	i1l2190
  8061                           
  8062                           ;main.c: 90: addAngle();
  8063  0050  3186  2664         	fcall	_addAngle
  8064  0052                     i1l2190:	
  8065                           
  8066                           ;main.c: 91: }
  8067                           ;main.c: 92: IOCAFbits.IOCAF3 = 0;
  8068  0052  0027               	movlb	7	; select bank7
  8069  0053  1193               	bcf	19,3	;volatile
  8070                           
  8071                           ;main.c: 94: PIR1bits.SSP1IF = 0 ;
  8072  0054  0020               	movlb	0	; select bank0
  8073  0055  1191               	bcf	17,3	;volatile
  8074                           
  8075                           ;main.c: 95: PIR2bits.SSP2IF = 0 ;
  8076  0056  1192               	bcf	18,3	;volatile
  8077                           
  8078                           ;main.c: 96: PIR0bits.INTF = 0;
  8079  0057  1010               	bcf	16,0	;volatile
  8080                           
  8081                           ;main.c: 97: PIR0bits.IOCIF = 0;
  8082  0058  1210               	bcf	16,4	;volatile
  8083  0059  0877               	movf	??_InterMSSP+4,w
  8084  005A  00FF               	movwf	127
  8085  005B  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  8086  005C  0009               	retfie
  8087  005D                     __end_of_InterMSSP:	
  8088                           
  8089                           	psect	text27
  8090  0585                     __ptext27:	
  8091 ;; *************** function _setSPI1sendData *****************
  8092 ;; Defined at:
  8093 ;;		line 92 in file "D:/programdata/16F18346_Link_IC.X/spiControl.c"
  8094 ;; Parameters:    Size  Location     Type
  8095 ;;		None
  8096 ;; Auto vars:     Size  Location     Type
  8097 ;;		None
  8098 ;; Return value:  Size  Location     Type
  8099 ;;                  1    wreg      void 
  8100 ;; Registers used:
  8101 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8102 ;; Tracked objects:
  8103 ;;		On entry : 0/0
  8104 ;;		On exit  : 0/0
  8105 ;;		Unchanged: 0/0
  8106 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8107 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8108 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8109 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8110 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8111 ;;Total ram usage:        2 bytes
  8112 ;; Hardware stack levels used:    1
  8113 ;; Hardware stack levels required when called:    1
  8114 ;; This function calls:
  8115 ;;		_isSPI2read
  8116 ;; This function is called by:
  8117 ;;		_InterMSSP
  8118 ;; This function uses a non-reentrant model
  8119 ;;
  8120                           
  8121                           
  8122                           ;psect for function _setSPI1sendData
  8123  0585                     _setSPI1sendData:	
  8124                           
  8125                           ;spiControl.c: 93: if(!(isSPI2read() == 1)){
  8126                           
  8127                           ;incstack = 0
  8128                           ; Regs used in _setSPI1sendData: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8129  0585  3186  264B  3185   	fcall	_isSPI2read
  8130  0588  1803               	btfsc	3,0
  8131  0589  2DA4               	goto	i1l1972
  8132                           
  8133                           ;spiControl.c: 94: SSP1BUF = spi2_buffer_data[read_count2];
  8134  058A  30F0               	movlw	240
  8135  058B  00F1               	movwf	??_setSPI1sendData
  8136  058C  3025               	movlw	37
  8137  058D  00F2               	movwf	??_setSPI1sendData+1
  8138  058E  0020               	movlb	0	; select bank0
  8139  058F  085C               	movf	_read_count2,w
  8140  0590  0771               	addwf	??_setSPI1sendData,w
  8141  0591  0086               	movwf	6
  8142  0592  085D               	movf	_read_count2+1,w
  8143  0593  3D72               	addwfc	??_setSPI1sendData+1,w
  8144  0594  0087               	movwf	7
  8145  0595  0801               	movf	1,w
  8146  0596  0024               	movlb	4	; select bank4
  8147  0597  0091               	movwf	17	;volatile
  8148                           
  8149                           ;spiControl.c: 95: read_count2++;
  8150  0598  3001               	movlw	1
  8151  0599  0020               	movlb	0	; select bank0
  8152  059A  07DC               	addwf	_read_count2,f
  8153  059B  3000               	movlw	0
  8154  059C  3DDD               	addwfc	_read_count2+1,f
  8155                           
  8156                           ;spiControl.c: 96: if(read_count2 == 256){
  8157  059D  035D               	decf	_read_count2+1,w
  8158  059E  045C               	iorwf	_read_count2,w
  8159  059F  1D03               	btfss	3,2
  8160  05A0  0008               	return
  8161                           
  8162                           ;spiControl.c: 97: read_count2 = 0;
  8163  05A1  01DC               	clrf	_read_count2
  8164  05A2  01DD               	clrf	_read_count2+1
  8165                           
  8166                           ;spiControl.c: 98: }
  8167                           ;spiControl.c: 99: }else{
  8168  05A3  0008               	return
  8169  05A4                     i1l1972:	
  8170                           
  8171                           ;spiControl.c: 100: SSP1BUF = 0x00;
  8172  05A4  0024               	movlb	4	; select bank4
  8173  05A5  0191               	clrf	17	;volatile
  8174  05A6  0008               	return
  8175  05A7                     __end_of_setSPI1sendData:	
  8176                           
  8177                           	psect	text28
  8178  064B                     __ptext28:	
  8179 ;; *************** function _isSPI2read *****************
  8180 ;; Defined at:
  8181 ;;		line 76 in file "D:/programdata/16F18346_Link_IC.X/spiControl.c"
  8182 ;; Parameters:    Size  Location     Type
  8183 ;;		None
  8184 ;; Auto vars:     Size  Location     Type
  8185 ;;		None
  8186 ;; Return value:  Size  Location     Type
  8187 ;;		None               void
  8188 ;; Registers used:
  8189 ;;		wreg, status,2, status,0
  8190 ;; Tracked objects:
  8191 ;;		On entry : 0/0
  8192 ;;		On exit  : 0/0
  8193 ;;		Unchanged: 0/0
  8194 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8195 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8196 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8197 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8198 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8199 ;;Total ram usage:        0 bytes
  8200 ;; Hardware stack levels used:    1
  8201 ;; This function calls:
  8202 ;;		Nothing
  8203 ;; This function is called by:
  8204 ;;		_setSPI1sendData
  8205 ;; This function uses a non-reentrant model
  8206 ;;
  8207                           
  8208                           
  8209                           ;psect for function _isSPI2read
  8210  064B                     _isSPI2read:	
  8211                           
  8212                           ;spiControl.c: 77: if(read_count2 == count2){
  8213                           
  8214                           ;incstack = 0
  8215                           ; Regs used in _isSPI2read: [wreg+status,2+status,0]
  8216  064B  0020               	movlb	0	; select bank0
  8217  064C  0863               	movf	_count2+1,w
  8218  064D  065D               	xorwf	_read_count2+1,w
  8219  064E  1D03               	skipz
  8220  064F  2E52               	goto	u56_25
  8221  0650  0862               	movf	_count2,w
  8222  0651  065C               	xorwf	_read_count2,w
  8223  0652                     u56_25:	
  8224  0652  1D03               	skipz
  8225  0653  2E56               	goto	i1l1832
  8226                           
  8227                           ;spiControl.c: 78: return 1;
  8228  0654  1403               	setc
  8229                           
  8230                           ;spiControl.c: 79: }else{
  8231  0655  0008               	return
  8232  0656                     i1l1832:	
  8233                           
  8234                           ;spiControl.c: 80: return 0;
  8235  0656  1003               	clrc
  8236  0657  0008               	return
  8237  0658                     __end_of_isSPI2read:	
  8238                           
  8239                           	psect	text29
  8240  0664                     __ptext29:	
  8241 ;; *************** function _addAngle *****************
  8242 ;; Defined at:
  8243 ;;		line 29 in file "D:/programdata/16F18346_Link_IC.X/IO_control.c"
  8244 ;; Parameters:    Size  Location     Type
  8245 ;;		None
  8246 ;; Auto vars:     Size  Location     Type
  8247 ;;		None
  8248 ;; Return value:  Size  Location     Type
  8249 ;;                  1    wreg      void 
  8250 ;; Registers used:
  8251 ;;		wreg, status,2, status,0, pclath, cstack
  8252 ;; Tracked objects:
  8253 ;;		On entry : 0/0
  8254 ;;		On exit  : 0/0
  8255 ;;		Unchanged: 0/0
  8256 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8257 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8258 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8260 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8261 ;;Total ram usage:        0 bytes
  8262 ;; Hardware stack levels used:    1
  8263 ;; Hardware stack levels required when called:    1
  8264 ;; This function calls:
  8265 ;;		_setCargoAngle
  8266 ;; This function is called by:
  8267 ;;		_InterMSSP
  8268 ;; This function uses a non-reentrant model
  8269 ;;
  8270                           
  8271                           
  8272                           ;psect for function _addAngle
  8273  0664                     _addAngle:	
  8274                           
  8275                           ;IO_control.c: 30: linkAngle += direction;
  8276                           
  8277                           ;incstack = 0
  8278                           ; Regs used in _addAngle: [wreg+status,2+status,0+pclath+cstack]
  8279  0664  0021               	movlb	1	; select bank1
  8280  0665  086D               	movf	_direction^(0+128),w
  8281  0666  07DD               	addwf	_linkAngle^(0+128),f
  8282  0667  086E               	movf	(_direction+1)^(0+128),w
  8283  0668  3DDE               	addwfc	(_linkAngle+1)^(0+128),f
  8284                           
  8285                           ;IO_control.c: 31: setCargoAngle(linkAngle);
  8286  0669  085E               	movf	(_linkAngle+1)^(0+128),w
  8287  066A  00F2               	movwf	setCargoAngle@m_linkAngleTo+1
  8288  066B  085D               	movf	_linkAngle^(0+128),w
  8289  066C  00F1               	movwf	setCargoAngle@m_linkAngleTo
  8290  066D  3186  269D         	fcall	_setCargoAngle
  8291  066F  0008               	return
  8292  0670                     __end_of_addAngle:	
  8293                           
  8294                           	psect	text30
  8295  069D                     __ptext30:	
  8296 ;; *************** function _setCargoAngle *****************
  8297 ;; Defined at:
  8298 ;;		line 39 in file "struct.c"
  8299 ;; Parameters:    Size  Location     Type
  8300 ;;  m_linkAngleT    2    0[COMMON] int 
  8301 ;; Auto vars:     Size  Location     Type
  8302 ;;		None
  8303 ;; Return value:  Size  Location     Type
  8304 ;;                  1    wreg      void 
  8305 ;; Registers used:
  8306 ;;		wreg
  8307 ;; Tracked objects:
  8308 ;;		On entry : 0/0
  8309 ;;		On exit  : 0/0
  8310 ;;		Unchanged: 0/0
  8311 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8312 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8313 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8315 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8316 ;;Total ram usage:        2 bytes
  8317 ;; Hardware stack levels used:    1
  8318 ;; This function calls:
  8319 ;;		Nothing
  8320 ;; This function is called by:
  8321 ;;		_addAngle
  8322 ;; This function uses a non-reentrant model
  8323 ;;
  8324                           
  8325                           
  8326                           ;psect for function _setCargoAngle
  8327  069D                     _setCargoAngle:	
  8328                           
  8329                           ;struct.c: 40: cargoData.linkAngleTo = m_linkAngleTo;
  8330                           
  8331                           ;incstack = 0
  8332                           ; Regs used in _setCargoAngle: [wreg]
  8333  069D  0872               	movf	setCargoAngle@m_linkAngleTo+1,w
  8334  069E  0020               	movlb	0	; select bank0
  8335  069F  00CE               	movwf	_cargoData+6
  8336  06A0  0871               	movf	setCargoAngle@m_linkAngleTo,w
  8337  06A1  00CD               	movwf	_cargoData+5
  8338  06A2  0008               	return
  8339  06A3                     __end_of_setCargoAngle:	
  8340  007E                     btemp	set	126	;btemp
  8341  007E                     int$flags	set	126
  8342  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    4
    Data        4
    BSS         122
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      10
    BANK0            80     40      78
    BANK1            80     10      79
    BANK2            80      0      18
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           64      0       0
    BANK16            0      0       0
    BANK17            0      0       0
    BANK18            0      0       0
    BANK19            0      0       0
    BANK20            0      0       0
    BANK21            0      0       0
    BANK22            0      0       0
    BANK23            0      0       0
    BANK24            0      0       0
    BANK25            0      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _InterMSSP in COMMON

    _InterMSSP->_setSPI1sendData
    _addAngle->_setCargoAngle

Critical Paths under _main in BANK0

    _main->_setComunicateMode
    _spi_init->_spi1_init
    _spi_init->_spi2_init
    _setComunicateMode->_Calibrate_download
    _readCargo->_getCargoData
    _Calibrate_download->_InitCalibrate
    _isEndpoint->_setSPI1sendDataManual
    _InitCalibrate->_getCargoData
    _initTrain->_isTrainSt
    _init->_initbuffer

Critical Paths under _InterMSSP in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_setComunicateMode
    _setComunicateMode->_Calibrate_download

Critical Paths under _InterMSSP in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterMSSP in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterMSSP in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _InterMSSP in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _InterMSSP in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _InterMSSP in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _InterMSSP in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _InterMSSP in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _InterMSSP in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _InterMSSP in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _InterMSSP in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _InterMSSP in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _InterMSSP in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _InterMSSP in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _InterMSSP in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _InterMSSP in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _InterMSSP in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _InterMSSP in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _InterMSSP in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _InterMSSP in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _InterMSSP in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _InterMSSP in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _InterMSSP in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _InterMSSP in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _InterMSSP in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1176
                      _InitCalibrate
                               _init
                          _initCargo
                         _initComand
                     _initComu_types
                          _initTrain
                            _io_init
                         _isSPI1read
                         _read_train
                  _setComunicateMode
                    _setSPI2sendData
                           _spi_init
 ---------------------------------------------------------------------------------
 (1) _spi_init                                             0     0      0       6
                          _spi1_init
                          _spi2_init
 ---------------------------------------------------------------------------------
 (2) _spi2_init                                            2     2      0       3
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _spi1_init                                            2     2      0       3
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _setSPI2sendData                                      4     4      0       0
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _setComunicateMode                                    4     4      0     904
                                             39 BANK0      1     1      0
                                              7 BANK1      3     3      0
                 _Calibrate_download
                          _readCargo
 ---------------------------------------------------------------------------------
 (2) _readCargo                                           12    12      0     285
                                             17 BANK0     12    12      0
                       _clutchaction
                       _getCargoData
                       _restartCargo
 ---------------------------------------------------------------------------------
 (3) _clutchaction                                         1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _Calibrate_download                                  12    12      0     458
                                             34 BANK0      5     5      0
                                              0 BANK1      7     7      0
                      _InitCalibrate
                         _isEndpoint
 ---------------------------------------------------------------------------------
 (3) _isEndpoint                                           6     6      0      71
                                              1 BANK0      6     6      0
              _setSPI1sendDataManual
 ---------------------------------------------------------------------------------
 (4) _setSPI1sendDataManual                                1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _InitCalibrate                                       17    17      0      40
                                             17 BANK0     17    17      0
                       _getCargoData
 ---------------------------------------------------------------------------------
 (3) _getCargoData                                        17     1     16       0
                                              0 BANK0     17     1     16
 ---------------------------------------------------------------------------------
 (1) _read_train                                           4     4      0      65
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _isSPI1read                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _io_init                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initTrain                                            3     3      0      31
                                              9 BANK0      3     3      0
                          _isTrainSt
                     _resetTrainData
 ---------------------------------------------------------------------------------
 (2) _resetTrainData                                       0     0      0       0
                       _restartCargo
 ---------------------------------------------------------------------------------
 (3) _restartCargo                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _isTrainSt                                            9     9      0      31
                                              0 BANK0      9     9      0
 ---------------------------------------------------------------------------------
 (1) _initComu_types                                       1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _initComand                                           1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _initCargo                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0     130
                              _clear
                         _initbuffer
 ---------------------------------------------------------------------------------
 (2) _initbuffer                                           4     4      0     130
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) _clear                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _InterMSSP                                            5     5      0      75
                                              2 COMMON     5     5      0
                           _addAngle
                    _setSPI1sendData
 ---------------------------------------------------------------------------------
 (6) _setSPI1sendData                                      2     2      0       0
                                              0 COMMON     2     2      0
                         _isSPI2read
 ---------------------------------------------------------------------------------
 (7) _isSPI2read                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _addAngle                                             0     0      0      75
                      _setCargoAngle
 ---------------------------------------------------------------------------------
 (7) _setCargoAngle                                        2     0      2      75
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _InitCalibrate
     _getCargoData
   _init
     _clear
     _initbuffer
   _initCargo
   _initComand
   _initComu_types
   _initTrain
     _isTrainSt
     _resetTrainData
       _restartCargo
   _io_init
   _isSPI1read
   _read_train
   _setComunicateMode
     _Calibrate_download
       _InitCalibrate
         _getCargoData
       _isEndpoint
         _setSPI1sendDataManual
     _readCargo
       _clutchaction
       _getCargoData
       _restartCargo
   _setSPI2sendData
   _spi_init
     _spi1_init
     _spi2_init

 _InterMSSP (ROOT)
   _addAngle
     _setCargoAngle
   _setSPI1sendData
     _isSPI2read

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       2       1       14.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      7       A       2       71.4%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     28      4E       5       97.5%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      A      4F       7       98.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      12       9       22.5%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
ABS                  0      0      B9      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
DATA                 0      0      B9      28        0.0%
BANK11              50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITBANK12           50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12              50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITBANK13           50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13              50      0       0      33        0.0%
BITBANK14           50      0       0      34        0.0%
BANK14              50      0       0      35        0.0%
BITBANK15           50      0       0      36        0.0%
BANK15              40      0       0      37        0.0%
BITBANK16           50      0       0      38        0.0%
BANK16               0      0       0      39        0.0%
BITBANK17           50      0       0      40        0.0%
BANK17               0      0       0      41        0.0%
BITBANK18           50      0       0      42        0.0%
BANK18               0      0       0      43        0.0%
BITBANK19           50      0       0      44        0.0%
BANK19               0      0       0      45        0.0%
BITBANK20           50      0       0      46        0.0%
BANK20               0      0       0      47        0.0%
BITBANK21           50      0       0      48        0.0%
BANK21               0      0       0      49        0.0%
BITBANK22           50      0       0      50        0.0%
BANK22               0      0       0      51        0.0%
BITBANK23           50      0       0      52        0.0%
BANK23               0      0       0      53        0.0%
BITBANK24           50      0       0      54        0.0%
BANK24               0      0       0      55        0.0%
BITBANK25           20      0       0      56        0.0%
BANK25               0      0       0      57        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sun May 20 11:11:41 2018

                  _InitCalibrate 04C1                                pc 0002                      __CFG_CP$OFF 0000  
                 _cargoLengthnuf 00DB                              l134 0381                              l340 0678  
                            l416 015D                              l450 045A                              l385 048D  
                   __CFG_CPD$OFF 0000                              wreg 0009          setComunicateMode@m_type 00EA  
                           S3030 0600                             S3026 05C7         Calibrate_download@bufint 00E7  
                   __CFG_LVP$OFF 0000                             l3022 0446                             l3032 0405  
                           l3024 024B                             l3028 0173                             l2600 0127  
                           l2610 0167                             l2602 013F                             l2604 015A  
                           l2518 03D9                             l2614 016D                             l2800 062F  
                           l2608 0165                             l2616 017D                             l2640 01CA  
                           l2642 01D7                             l2580 00C7                             l2660 01F8  
                           l2652 01EF                             l2644 01DC                             l2486 0478  
                           l2590 00F5                             l2662 01FA                             l2654 01F2  
                           l2646 01E1                             l2638 01C1                             l2814 0438  
                           l2760 037C                             l2592 00FE                             l2672 021E  
                           l2664 01FC                             l2656 01F4                             l2680 0246  
                           l2824 0440                             l2850 0416                             l2834 03E4  
                           l2586 00D7                             l2674 022E                             l2658 01F6  
                           l2682 0255                             l2818 043C                             l2826 0454  
                           l2836 03ED                             l2844 0400                             l2596 0107  
                           l2588 00ED                             l2676 0241                             l2668 0205  
                           l2838 03FA                             l2846 0410                             l2862 0547  
                           l2892 04BA                             l2884 04AA                             l2894 04BD  
                           u1030 061F                             u1040 04DF                             u1105 03AE  
                           u1125 0120                             u1205 0217                             u1135 0138  
                           u1215 0227                             u1145 0150                             u1225 0237  
                           u1170 01BA                             u1235 0260                             u1085 04F8  
                           u1165 018B                             u1255 0387                             u1265 062B  
                           u1275 042C                             _WPUA 020C                             _WPUB 020D  
                           _WPUC 020E                     __CFG_WRT$OFF 0000                    __CFG_FCMEN$ON 0000  
                  ?_clutchaction 0071                             _main 0493                             _init 0516  
                           fsr0h 0005                             fsr1h 0007                             indf0 0000  
                           fsr0l 0004                             indf1 0001                             fsr1l 0006  
                           btemp 007E                    __CFG_BOREN$ON 0000                             start 005D  
                  __CFG_CSWEN$ON 0000                   ?_InitCalibrate 0071                            ?_main 0071  
                          ?_init 0071                    __CFG_WDTE$OFF 0000                   __CFG_DEBUG$OFF 0000  
           __end_of_getCargoData 0624                            _PORTA 000C                            _PORTB 000D  
                          _PORTC 000E                            u56_25 0652                            _TRISA 008C  
                          _TRISB 008D                            _TRISC 008E               setComunicateMode@i 00EB  
 __size_of_setSPI1sendDataManual 0006    __end_of_setSPI1sendDataManual 069D                            _clear 063E  
                __end_of_io_init 068E                   __pbitbssCOMMON 0380                   ??_clutchaction 0020  
                 __CFG_BORV$HIGH 0000                            status 0003                            wtemp0 007E  
                 __CFG_MCLRE$OFF 0000                  __initialization 005F                     __end_of_main 04C1  
                   __end_of_init 053E                           ??_main 0048                           ??_init 0024  
                         ?_clear 0071                 __end_of_addAngle 0670                           _ANSELA 018C  
                         _ANSELB 018D                           _ANSELC 018E                           _RA2PPS 0E92  
                         _RC2PPS 0EA2                           _RB7PPS 0E9F                           i1l2190 0052  
                         i1l2174 002A                           i1l2186 004D                           i1l1832 0656  
                         i1l1972 05A4         __size_of_setSPI1sendData 0022               __size_of_InterMSSP 0059  
                ??_InitCalibrate 0031                __end_of_VENDER_ID 06AB                   __CFG_PWRTE$OFF 0000  
       __size_of_setSPI2sendData 0025          __size_of_resetTrainData 0009      __size_of_Calibrate_download 00F5  
                 __CFG_STVREN$ON 0000                           _count1 0064                           _count2 0062  
                         _readNG 0066                           _readOK 0067          __size_of_initComu_types 006D  
                      ??_io_init 0020                 __end_of_spi_init 0685                      initbuffer@i 0022  
                   isTrainSt@buf 0028                     _ra3condision 0385          __end_of__initialization 009D  
                 __pcstackCOMMON 0071                     __pidataBANK0 06A3                     __pidataBANK1 06A5  
             __end_of_MACHINE_ID 06A9                    __end_of_clear 064B            __size_of_getCargoData 0010  
           __end_of_clutchaction 067B                __end_of_InterMSSP 005D                  __CFG_LPBOREN$ON 0000  
                        ??_clear 0020                       __pbssBANK0 0048                       __pbssBANK1 00A0  
                     __pbssBANK2 0120               __size_of_isTrainSt 0045              clutchaction@comannd 0020  
         InitCalibrate@cargoData 0032               __size_of_initCargo 0017               __size_of_readCargo 00E0  
                _startTrainBytes 00D7               __size_of_initTrain 0046                       _isSPI1read 0624  
                     _isSPI2read 064B                     _getCargoData 0614                       __pmaintext 0493  
             __size_of_spi1_init 0020               __size_of_spi2_init 0022                  __CFG_PPS1WAY$ON 0000  
              ??_setSPI1sendData 0071                       __pintentry 0004  Calibrate_download@spi_Read_data 00E9  
                      ?_addAngle 0071                ??_setSPI2sendData 0020              __CFG_RSTOSC$HFINT32 0000  
                     _isEndpoint 045B                     _isCalibrated 0387           __size_of_setCargoAngle 0006  
                        _SSP1BUF 0211                          _SSP2BUF 0219                       _comu_types 00A0  
                 _resetTrainData 068E                       _initComand 02E3                        ?_spi_init 0071  
                     ??_addAngle 0073                __end_of_isTrainSt 03DB                       _initbuffer 04EC  
                 _initComu_types 0276               isEndpoint@spi2data 0026                          __ptext1 067B  
                        __ptext2 0563                          __ptext3 05A7                          __ptext4 053E  
                        __ptext5 041D                          __ptext6 0196                          __ptext7 0670  
                        __ptext8 00A1                __end_of_initCargo 05FE                          __ptext9 045B  
                     _read_train 03DB                          _command 00B2                __end_of_readCargo 0276  
                        _counta2 00E1                          _io_init 0685                __end_of_initTrain 0396  
                  ?_restartCargo 0071                        _IOCAFbits 0393                        _IOCANbits 0392  
                      _IOCAPbits 0391                __end_of_spi1_init 05C7                __end_of_spi2_init 0585  
                        _st_type 006A                          clrloop0 0659            _setSPI1sendDataManual 0697  
           end_of_initialization 009D           __end_of_resetTrainData 0697                      ?_isSPI1read 0071  
                    ?_isSPI2read 0071                    _setCargoAngle 069D            __size_of_clutchaction 000B  
                     ??_spi_init 0022                        _VENDER_ID 06A9                 readCargo@buflong 0036  
         __end_of_initComu_types 02E3                   spi1_init@dummy 0021                      ?_isEndpoint 0071  
                 ??_restartCargo 0020                        _TRISBbits 008D                        _TRISCbits 008E  
               __CFG_FEXTOSC$OFF 0000                   spi2_init@dummy 0021                     _clutchaction 0670  
                ?_resetTrainData 0071       __end_of_Calibrate_download 0196                   ?_setCargoAngle 0071  
                    ?_initComand 0071            __end_of_InitCalibrate 04EC                  ?_initComu_types 0071  
                    ?_initbuffer 0071                      ?_read_train 0071              __size_of_isSPI1read 000D  
            __size_of_isSPI2read 000D                    __pbitnvCOMMON 03C0              start_initialization 005F  
         ?_setSPI1sendDataManual 0071                        _InterMSSP 0004                   _isEndPointTrig 03C0  
                _setSPI1sendData 0585                  _setSPI2sendData 053E              __size_of_isEndpoint 0038  
                    __pdataBANK0 006C                      __pdataBANK1 00ED                _setComunicateMode 041D  
              __size_of_addAngle 000C               ?_setComunicateMode 0071                      __pbssBIGRAM 24F0  
                    __pbssCOMMON 0079                        ___latbits 0003                    __pcstackBANK0 0020  
                  __pcstackBANK1 00E3                      _cargo_index 0120              ??_setComunicateMode 0047  
            __size_of_initComand 006D                       ?_InterMSSP 0071                        _calibdata 00C4  
            __size_of_initbuffer 002A                        _cargoData 0048                  ??_setCargoAngle 0073  
              _cargoWorkingCount 00D3              __size_of_read_train 0042             __end_of_restartCargo 063E  
          _spi1_send_buffer_data 24F0        Calibrate_download@buflong 00E3        __end_of_setComunicateMode 045B  
                      _direction 00ED          readCargo@spi1_Read_data 003C                __size_of_spi_init 000A  
                      __pswtext1 05C7                        __pswtext2 0600                        _isMycargo 0380  
                       ?_io_init 0071                        _isTrainSt 0396                        _countabuf 005E  
                      _initCargo 05E7                        _readCargo 0196                        _linkAngle 00DD  
        __end_of_setSPI1sendData 05A7                        _initTrain 0350                   __size_of_clear 000D  
        __end_of_setSPI2sendData 0563                        _spi1_init 05A7                        _spi2_init 0563  
                       _LATAbits 010C                     ??_isSPI1read 0020                     ??_isSPI2read 0071  
                      clear_ram0 0658       setCargoAngle@m_linkAngleTo 0071                         _PIE0bits 0090  
                       _PIE1bits 0091                         _PIE2bits 0092                        _send_data 0069  
                       _PIR0bits 0010                         _PIR1bits 0011                         _PIR2bits 0012  
                readCargo@bufint 003A                     ??_isEndpoint 0021                       ?_isTrainSt 0071  
             __end_of_isSPI1read 0631               __end_of_isSPI2read 0658                       ?_initCargo 0071  
                  _SSP1SSPPSbits 0E22                       ?_readCargo 0071                       ?_initTrain 0071  
                    ??_InterMSSP 0073                    _SSP2SSPPSbits 0E1F                 ??_resetTrainData 0020  
                     ?_spi1_init 0071                       ?_spi2_init 0071                 ??_initComu_types 0020  
             __end_of_isEndpoint 0493                     ??_initComand 0020       __size_of_setComunicateMode 003E  
                       _addAngle 0664                     ??_initbuffer 0020                 _spi1_buffer_data 26F0  
                   ??_read_train 0020               _Calibrate_download 00A1          ??_setSPI1sendDataManual 0020  
                 _workingcounta0 0384                   _workingcounta1 0383                   _workingcounta2 0382  
                 _workingcounta3 0381                 __size_of_io_init 0009                       _MACHINE_ID 06A7  
                    _read_count1 0060                      _read_count2 005C              ?_Calibrate_download 0071  
               ?_setSPI1sendData 0071                         __ptext10 0697                         __ptext11 04C1  
                       __ptext20 0276                         __ptext12 0614                         __ptext21 02E3  
                       __ptext13 03DB                         __ptext30 069D                         __ptext22 05E7  
                       __ptext14 0624                         __ptext23 0516                         __ptext15 0685  
                       __ptext24 04EC                         __ptext16 0350                         __ptext25 063E  
                       __ptext17 068E                         __ptext18 0631                         __ptext27 0585  
                       __ptext19 0396                         __ptext28 064B                         __ptext29 0664  
                   _SSP1CON1bits 0215                     _SSP1CON3bits 0217               __end_of_initComand 0350  
               ?_setSPI2sendData 0071                     _SSP2CON1bits 021D                   _spi1_Read_data 0079  
                   _SSP2CON3bits 021F            __size_of_restartCargo 000D                         _linkInfo 00CD  
                  __size_of_main 002E                    __size_of_init 0028               __end_of_initbuffer 0516  
                  ?_getCargoData 0020                   _spi2_Read_data 0068               __end_of_read_train 041D  
           ??_Calibrate_download 0042                      _isreadTrain 0386                         _spi_init 067B  
                       int$flags 007E                         _trainPos 005A                   _spi2_Send_data 006B  
                   _SSP1STATbits 0214                 _spi2_buffer_data 25F0                     _SSP2STATbits 021C  
                  _st_dataLength 006C                       _INLVLAbits 038C                       _INLVLBbits 038D  
                     _INLVLCbits 038E                      ??_isTrainSt 0020                      _OSCTUNEbits 091E  
                     _INTCONbits 000B                      ??_initCargo 0020                     _restartCargo 0631  
                    ??_readCargo 0031                      ??_initTrain 0029           __size_of_InitCalibrate 002B  
                    _send_count1 0058                         intlevel1 0000                      ??_spi1_init 0020  
                    ??_spi2_init 0020                   ??_getCargoData 0030                __CFG_CLKOUTEN$OFF 0000  
                     _OSCFRQbits 091F                    __pstringtext1 06A7                    __pstringtext2 06A9  
      setSPI1sendDataManual@data 0020                 read_train@bufint 0022                  _spi1_send_count 00DF  
          __end_of_setCargoAngle 06A3  



Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Wed Jun 20 16:41:24 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F18346
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	eeprom_data,global,class=EEDATA,space=3,delta=2
     5                           	psect	idataCOMMON,global,class=CODE,delta=2
     6                           	psect	idataBANK1,global,class=CODE,delta=2
     7                           	psect	stringtext1,global,class=STRCODE,delta=2
     8                           	psect	stringtext2,global,class=STRCODE,delta=2
     9                           	psect	bitnvCOMMON,global,bit,class=COMMON,space=1,delta=1
    10                           	psect	cinit,global,class=CODE,merge=1,delta=2
    11                           	psect	bitbssCOMMON,global,bit,class=COMMON,space=1,delta=1
    12                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    18                           	psect	clrtext,global,class=CODE,delta=2
    19                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    20                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    21                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    22                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    23                           	psect	text1,local,class=CODE,merge=1,delta=2
    24                           	psect	text2,local,class=CODE,merge=1,delta=2
    25                           	psect	text3,local,class=CODE,merge=1,delta=2
    26                           	psect	text4,local,class=CODE,merge=1,delta=2
    27                           	psect	text5,local,class=CODE,merge=1,delta=2
    28                           	psect	swtext1,local,class=CONST,delta=2
    29                           	psect	text6,local,class=CODE,merge=1,delta=2
    30                           	psect	swtext2,local,class=CONST,delta=2
    31                           	psect	text7,local,class=CODE,merge=1,delta=2
    32                           	psect	text8,local,class=CODE,merge=1,delta=2
    33                           	psect	swtext3,local,class=CONST,delta=2
    34                           	psect	text9,local,class=CODE,merge=1,delta=2
    35                           	psect	text10,local,class=CODE,merge=1,delta=2
    36                           	psect	swtext4,local,class=CONST,delta=2
    37                           	psect	text11,local,class=CODE,merge=1,delta=2
    38                           	psect	text12,local,class=CODE,merge=1,delta=2
    39                           	psect	text13,local,class=CODE,merge=1,delta=2
    40                           	psect	text14,local,class=CODE,merge=1,delta=2
    41                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    42                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    43                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    44                           	psect	text18,local,class=CODE,merge=1,delta=2
    45                           	psect	text19,local,class=CODE,merge=1,delta=2
    46                           	psect	text20,local,class=CODE,merge=1,delta=2
    47                           	psect	text21,local,class=CODE,merge=1,delta=2
    48                           	psect	text22,local,class=CODE,merge=1,delta=2
    49                           	psect	text23,local,class=CODE,merge=1,delta=2
    50                           	psect	text24,local,class=CODE,merge=1,delta=2
    51                           	psect	text25,local,class=CODE,merge=1,delta=2
    52                           	psect	text26,local,class=CODE,merge=1,delta=2
    53                           	psect	text27,local,class=CODE,merge=1,delta=2
    54                           	psect	text28,local,class=CODE,merge=1,delta=2
    55                           	psect	text29,local,class=CODE,merge=1,delta=2
    56                           	psect	text30,local,class=CODE,merge=1,delta=2
    57                           	psect	text31,local,class=CODE,merge=1,delta=2
    58                           	psect	text32,local,class=CODE,merge=1,delta=2
    59                           	psect	intentry,global,class=CODE,delta=2
    60                           	psect	text34,local,class=CODE,merge=1,delta=2
    61                           	psect	text35,local,class=CODE,merge=1,delta=2
    62                           	psect	text36,local,class=CODE,merge=1,delta=2
    63                           	psect	text37,local,class=CODE,merge=1,delta=2
    64                           	dabs	1,0xCA0,32
    65                           	dabs	1,0xC20,80
    66                           	dabs	1,0xBA0,80
    67                           	dabs	1,0xB30,64
    68                           	dabs	1,0xB20,16
    69                           	dabs	1,0xAA0,80
    70                           	dabs	1,0xA20,80
    71                           	dabs	1,0x9A0,80
    72                           	dabs	1,0x920,80
    73                           	dabs	1,0x8A0,80
    74                           	dabs	1,0x820,80
    75                           	dabs	1,0x7E0,16
    76                           	dabs	1,0x24F0,0,_spi1_send_buffer_data
    77                           	dabs	1,0x25F0,0,_spi2_buffer_data
    78                           	dabs	1,0x26F0,0,_spi1_buffer_data
    79                           	dabs	1,0x7E,2
    80  0000                     
    81                           ; Version 1.45
    82                           ; Generated 16/11/2017 GMT
    83                           ; 
    84                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    85                           ; All rights reserved.
    86                           ; 
    87                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    88                           ; 
    89                           ; Redistribution and use in source and binary forms, with or without modification, are
    90                           ; permitted provided that the following conditions are met:
    91                           ; 
    92                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    93                           ;        conditions and the following disclaimer.
    94                           ; 
    95                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    96                           ;        of conditions and the following disclaimer in the documentation and/or other
    97                           ;        materials provided with the distribution.
    98                           ; 
    99                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   100                           ;        software without specific prior written permission.
   101                           ; 
   102                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   103                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   104                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   105                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   106                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   107                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   108                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   109                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   110                           ; 
   111                           ; 
   112                           ; Code-generator required, PIC16F18346 Definitions
   113                           ; 
   114                           ; SFR Addresses
   115  0000                     	;# 
   116  0001                     	;# 
   117  0002                     	;# 
   118  0003                     	;# 
   119  0004                     	;# 
   120  0005                     	;# 
   121  0006                     	;# 
   122  0007                     	;# 
   123  0008                     	;# 
   124  0009                     	;# 
   125  000A                     	;# 
   126  000B                     	;# 
   127  000C                     	;# 
   128  000D                     	;# 
   129  000E                     	;# 
   130  0010                     	;# 
   131  0011                     	;# 
   132  0012                     	;# 
   133  0013                     	;# 
   134  0014                     	;# 
   135  0015                     	;# 
   136  0015                     	;# 
   137  0016                     	;# 
   138  0016                     	;# 
   139  0017                     	;# 
   140  0018                     	;# 
   141  0019                     	;# 
   142  0019                     	;# 
   143  001A                     	;# 
   144  001B                     	;# 
   145  001C                     	;# 
   146  001D                     	;# 
   147  001E                     	;# 
   148  001F                     	;# 
   149  008C                     	;# 
   150  008D                     	;# 
   151  008E                     	;# 
   152  0090                     	;# 
   153  0091                     	;# 
   154  0092                     	;# 
   155  0093                     	;# 
   156  0094                     	;# 
   157  0097                     	;# 
   158  009B                     	;# 
   159  009B                     	;# 
   160  009C                     	;# 
   161  009D                     	;# 
   162  009E                     	;# 
   163  009F                     	;# 
   164  010C                     	;# 
   165  010D                     	;# 
   166  010E                     	;# 
   167  0111                     	;# 
   168  0112                     	;# 
   169  0113                     	;# 
   170  0114                     	;# 
   171  0115                     	;# 
   172  0116                     	;# 
   173  0117                     	;# 
   174  0118                     	;# 
   175  0119                     	;# 
   176  018C                     	;# 
   177  018D                     	;# 
   178  018E                     	;# 
   179  0197                     	;# 
   180  0199                     	;# 
   181  0199                     	;# 
   182  0199                     	;# 
   183  019A                     	;# 
   184  019A                     	;# 
   185  019A                     	;# 
   186  019B                     	;# 
   187  019B                     	;# 
   188  019B                     	;# 
   189  019B                     	;# 
   190  019B                     	;# 
   191  019C                     	;# 
   192  019C                     	;# 
   193  019C                     	;# 
   194  019D                     	;# 
   195  019D                     	;# 
   196  019D                     	;# 
   197  019E                     	;# 
   198  019E                     	;# 
   199  019E                     	;# 
   200  019F                     	;# 
   201  019F                     	;# 
   202  019F                     	;# 
   203  019F                     	;# 
   204  019F                     	;# 
   205  020C                     	;# 
   206  020D                     	;# 
   207  020E                     	;# 
   208  0211                     	;# 
   209  0211                     	;# 
   210  0212                     	;# 
   211  0212                     	;# 
   212  0213                     	;# 
   213  0213                     	;# 
   214  0214                     	;# 
   215  0214                     	;# 
   216  0215                     	;# 
   217  0215                     	;# 
   218  0215                     	;# 
   219  0215                     	;# 
   220  0216                     	;# 
   221  0216                     	;# 
   222  0217                     	;# 
   223  0217                     	;# 
   224  0219                     	;# 
   225  021A                     	;# 
   226  021B                     	;# 
   227  021C                     	;# 
   228  021D                     	;# 
   229  021D                     	;# 
   230  021E                     	;# 
   231  021F                     	;# 
   232  028C                     	;# 
   233  028D                     	;# 
   234  028E                     	;# 
   235  0291                     	;# 
   236  0291                     	;# 
   237  0292                     	;# 
   238  0293                     	;# 
   239  0294                     	;# 
   240  0295                     	;# 
   241  0295                     	;# 
   242  0296                     	;# 
   243  0297                     	;# 
   244  0298                     	;# 
   245  029F                     	;# 
   246  030C                     	;# 
   247  030D                     	;# 
   248  030E                     	;# 
   249  0311                     	;# 
   250  0311                     	;# 
   251  0312                     	;# 
   252  0313                     	;# 
   253  0314                     	;# 
   254  0315                     	;# 
   255  0315                     	;# 
   256  0316                     	;# 
   257  0317                     	;# 
   258  0318                     	;# 
   259  038C                     	;# 
   260  038D                     	;# 
   261  038E                     	;# 
   262  0391                     	;# 
   263  0392                     	;# 
   264  0393                     	;# 
   265  0394                     	;# 
   266  0395                     	;# 
   267  0396                     	;# 
   268  0397                     	;# 
   269  0398                     	;# 
   270  0399                     	;# 
   271  039A                     	;# 
   272  039C                     	;# 
   273  039D                     	;# 
   274  039E                     	;# 
   275  039F                     	;# 
   276  0411                     	;# 
   277  0411                     	;# 
   278  0412                     	;# 
   279  0413                     	;# 
   280  0414                     	;# 
   281  0415                     	;# 
   282  0416                     	;# 
   283  0417                     	;# 
   284  0418                     	;# 
   285  0418                     	;# 
   286  0419                     	;# 
   287  041A                     	;# 
   288  041B                     	;# 
   289  041C                     	;# 
   290  041D                     	;# 
   291  041E                     	;# 
   292  041F                     	;# 
   293  0498                     	;# 
   294  0498                     	;# 
   295  0499                     	;# 
   296  049A                     	;# 
   297  049B                     	;# 
   298  049B                     	;# 
   299  049C                     	;# 
   300  049D                     	;# 
   301  049E                     	;# 
   302  049F                     	;# 
   303  0617                     	;# 
   304  0618                     	;# 
   305  0619                     	;# 
   306  0619                     	;# 
   307  061A                     	;# 
   308  061B                     	;# 
   309  061C                     	;# 
   310  061C                     	;# 
   311  061F                     	;# 
   312  0691                     	;# 
   313  0692                     	;# 
   314  0693                     	;# 
   315  0694                     	;# 
   316  0695                     	;# 
   317  0696                     	;# 
   318  0697                     	;# 
   319  0698                     	;# 
   320  0699                     	;# 
   321  0711                     	;# 
   322  0712                     	;# 
   323  0713                     	;# 
   324  0714                     	;# 
   325  0715                     	;# 
   326  0716                     	;# 
   327  0717                     	;# 
   328  0718                     	;# 
   329  0719                     	;# 
   330  0891                     	;# 
   331  0891                     	;# 
   332  0891                     	;# 
   333  0891                     	;# 
   334  0891                     	;# 
   335  0891                     	;# 
   336  0892                     	;# 
   337  0892                     	;# 
   338  0892                     	;# 
   339  0893                     	;# 
   340  0893                     	;# 
   341  0893                     	;# 
   342  0893                     	;# 
   343  0893                     	;# 
   344  0893                     	;# 
   345  0894                     	;# 
   346  0894                     	;# 
   347  0894                     	;# 
   348  0895                     	;# 
   349  0895                     	;# 
   350  0895                     	;# 
   351  0896                     	;# 
   352  0896                     	;# 
   353  0896                     	;# 
   354  089B                     	;# 
   355  0911                     	;# 
   356  0912                     	;# 
   357  0913                     	;# 
   358  0914                     	;# 
   359  0915                     	;# 
   360  0916                     	;# 
   361  0918                     	;# 
   362  0919                     	;# 
   363  091A                     	;# 
   364  091B                     	;# 
   365  091C                     	;# 
   366  091D                     	;# 
   367  091E                     	;# 
   368  091F                     	;# 
   369  0E0F                     	;# 
   370  0E10                     	;# 
   371  0E11                     	;# 
   372  0E12                     	;# 
   373  0E13                     	;# 
   374  0E14                     	;# 
   375  0E15                     	;# 
   376  0E16                     	;# 
   377  0E17                     	;# 
   378  0E18                     	;# 
   379  0E19                     	;# 
   380  0E1A                     	;# 
   381  0E1B                     	;# 
   382  0E1C                     	;# 
   383  0E1D                     	;# 
   384  0E1E                     	;# 
   385  0E1F                     	;# 
   386  0E20                     	;# 
   387  0E21                     	;# 
   388  0E22                     	;# 
   389  0E24                     	;# 
   390  0E25                     	;# 
   391  0E28                     	;# 
   392  0E29                     	;# 
   393  0E2A                     	;# 
   394  0E2B                     	;# 
   395  0E2C                     	;# 
   396  0E2D                     	;# 
   397  0E2E                     	;# 
   398  0E2F                     	;# 
   399  0E90                     	;# 
   400  0E91                     	;# 
   401  0E92                     	;# 
   402  0E94                     	;# 
   403  0E95                     	;# 
   404  0E9C                     	;# 
   405  0E9D                     	;# 
   406  0E9E                     	;# 
   407  0E9F                     	;# 
   408  0EA0                     	;# 
   409  0EA1                     	;# 
   410  0EA2                     	;# 
   411  0EA3                     	;# 
   412  0EA4                     	;# 
   413  0EA5                     	;# 
   414  0EA6                     	;# 
   415  0EA7                     	;# 
   416  0F0F                     	;# 
   417  0F10                     	;# 
   418  0F11                     	;# 
   419  0F12                     	;# 
   420  0F13                     	;# 
   421  0F14                     	;# 
   422  0F15                     	;# 
   423  0F16                     	;# 
   424  0F17                     	;# 
   425  0F18                     	;# 
   426  0F19                     	;# 
   427  0F1A                     	;# 
   428  0F1B                     	;# 
   429  0F1C                     	;# 
   430  0F1D                     	;# 
   431  0F1E                     	;# 
   432  0F1F                     	;# 
   433  0F20                     	;# 
   434  0F21                     	;# 
   435  0F22                     	;# 
   436  0F23                     	;# 
   437  0F24                     	;# 
   438  0F25                     	;# 
   439  0F26                     	;# 
   440  0F27                     	;# 
   441  0F28                     	;# 
   442  0F29                     	;# 
   443  0F2A                     	;# 
   444  0F2B                     	;# 
   445  0F2C                     	;# 
   446  0F2D                     	;# 
   447  0F2E                     	;# 
   448  0F2F                     	;# 
   449  0F30                     	;# 
   450  0F31                     	;# 
   451  0F32                     	;# 
   452  0F33                     	;# 
   453  0F34                     	;# 
   454  0F35                     	;# 
   455  0F36                     	;# 
   456  0F37                     	;# 
   457  0FE4                     	;# 
   458  0FE5                     	;# 
   459  0FE6                     	;# 
   460  0FE7                     	;# 
   461  0FE8                     	;# 
   462  0FE9                     	;# 
   463  0FEA                     	;# 
   464  0FEB                     	;# 
   465  0FED                     	;# 
   466  0FEE                     	;# 
   467  0FEF                     	;# 
   468  0000                     	;# 
   469  0001                     	;# 
   470  0002                     	;# 
   471  0003                     	;# 
   472  0004                     	;# 
   473  0005                     	;# 
   474  0006                     	;# 
   475  0007                     	;# 
   476  0008                     	;# 
   477  0009                     	;# 
   478  000A                     	;# 
   479  000B                     	;# 
   480  000C                     	;# 
   481  000D                     	;# 
   482  000E                     	;# 
   483  0010                     	;# 
   484  0011                     	;# 
   485  0012                     	;# 
   486  0013                     	;# 
   487  0014                     	;# 
   488  0015                     	;# 
   489  0015                     	;# 
   490  0016                     	;# 
   491  0016                     	;# 
   492  0017                     	;# 
   493  0018                     	;# 
   494  0019                     	;# 
   495  0019                     	;# 
   496  001A                     	;# 
   497  001B                     	;# 
   498  001C                     	;# 
   499  001D                     	;# 
   500  001E                     	;# 
   501  001F                     	;# 
   502  008C                     	;# 
   503  008D                     	;# 
   504  008E                     	;# 
   505  0090                     	;# 
   506  0091                     	;# 
   507  0092                     	;# 
   508  0093                     	;# 
   509  0094                     	;# 
   510  0097                     	;# 
   511  009B                     	;# 
   512  009B                     	;# 
   513  009C                     	;# 
   514  009D                     	;# 
   515  009E                     	;# 
   516  009F                     	;# 
   517  010C                     	;# 
   518  010D                     	;# 
   519  010E                     	;# 
   520  0111                     	;# 
   521  0112                     	;# 
   522  0113                     	;# 
   523  0114                     	;# 
   524  0115                     	;# 
   525  0116                     	;# 
   526  0117                     	;# 
   527  0118                     	;# 
   528  0119                     	;# 
   529  018C                     	;# 
   530  018D                     	;# 
   531  018E                     	;# 
   532  0197                     	;# 
   533  0199                     	;# 
   534  0199                     	;# 
   535  0199                     	;# 
   536  019A                     	;# 
   537  019A                     	;# 
   538  019A                     	;# 
   539  019B                     	;# 
   540  019B                     	;# 
   541  019B                     	;# 
   542  019B                     	;# 
   543  019B                     	;# 
   544  019C                     	;# 
   545  019C                     	;# 
   546  019C                     	;# 
   547  019D                     	;# 
   548  019D                     	;# 
   549  019D                     	;# 
   550  019E                     	;# 
   551  019E                     	;# 
   552  019E                     	;# 
   553  019F                     	;# 
   554  019F                     	;# 
   555  019F                     	;# 
   556  019F                     	;# 
   557  019F                     	;# 
   558  020C                     	;# 
   559  020D                     	;# 
   560  020E                     	;# 
   561  0211                     	;# 
   562  0211                     	;# 
   563  0212                     	;# 
   564  0212                     	;# 
   565  0213                     	;# 
   566  0213                     	;# 
   567  0214                     	;# 
   568  0214                     	;# 
   569  0215                     	;# 
   570  0215                     	;# 
   571  0215                     	;# 
   572  0215                     	;# 
   573  0216                     	;# 
   574  0216                     	;# 
   575  0217                     	;# 
   576  0217                     	;# 
   577  0219                     	;# 
   578  021A                     	;# 
   579  021B                     	;# 
   580  021C                     	;# 
   581  021D                     	;# 
   582  021D                     	;# 
   583  021E                     	;# 
   584  021F                     	;# 
   585  028C                     	;# 
   586  028D                     	;# 
   587  028E                     	;# 
   588  0291                     	;# 
   589  0291                     	;# 
   590  0292                     	;# 
   591  0293                     	;# 
   592  0294                     	;# 
   593  0295                     	;# 
   594  0295                     	;# 
   595  0296                     	;# 
   596  0297                     	;# 
   597  0298                     	;# 
   598  029F                     	;# 
   599  030C                     	;# 
   600  030D                     	;# 
   601  030E                     	;# 
   602  0311                     	;# 
   603  0311                     	;# 
   604  0312                     	;# 
   605  0313                     	;# 
   606  0314                     	;# 
   607  0315                     	;# 
   608  0315                     	;# 
   609  0316                     	;# 
   610  0317                     	;# 
   611  0318                     	;# 
   612  038C                     	;# 
   613  038D                     	;# 
   614  038E                     	;# 
   615  0391                     	;# 
   616  0392                     	;# 
   617  0393                     	;# 
   618  0394                     	;# 
   619  0395                     	;# 
   620  0396                     	;# 
   621  0397                     	;# 
   622  0398                     	;# 
   623  0399                     	;# 
   624  039A                     	;# 
   625  039C                     	;# 
   626  039D                     	;# 
   627  039E                     	;# 
   628  039F                     	;# 
   629  0411                     	;# 
   630  0411                     	;# 
   631  0412                     	;# 
   632  0413                     	;# 
   633  0414                     	;# 
   634  0415                     	;# 
   635  0416                     	;# 
   636  0417                     	;# 
   637  0418                     	;# 
   638  0418                     	;# 
   639  0419                     	;# 
   640  041A                     	;# 
   641  041B                     	;# 
   642  041C                     	;# 
   643  041D                     	;# 
   644  041E                     	;# 
   645  041F                     	;# 
   646  0498                     	;# 
   647  0498                     	;# 
   648  0499                     	;# 
   649  049A                     	;# 
   650  049B                     	;# 
   651  049B                     	;# 
   652  049C                     	;# 
   653  049D                     	;# 
   654  049E                     	;# 
   655  049F                     	;# 
   656  0617                     	;# 
   657  0618                     	;# 
   658  0619                     	;# 
   659  0619                     	;# 
   660  061A                     	;# 
   661  061B                     	;# 
   662  061C                     	;# 
   663  061C                     	;# 
   664  061F                     	;# 
   665  0691                     	;# 
   666  0692                     	;# 
   667  0693                     	;# 
   668  0694                     	;# 
   669  0695                     	;# 
   670  0696                     	;# 
   671  0697                     	;# 
   672  0698                     	;# 
   673  0699                     	;# 
   674  0711                     	;# 
   675  0712                     	;# 
   676  0713                     	;# 
   677  0714                     	;# 
   678  0715                     	;# 
   679  0716                     	;# 
   680  0717                     	;# 
   681  0718                     	;# 
   682  0719                     	;# 
   683  0891                     	;# 
   684  0891                     	;# 
   685  0891                     	;# 
   686  0891                     	;# 
   687  0891                     	;# 
   688  0891                     	;# 
   689  0892                     	;# 
   690  0892                     	;# 
   691  0892                     	;# 
   692  0893                     	;# 
   693  0893                     	;# 
   694  0893                     	;# 
   695  0893                     	;# 
   696  0893                     	;# 
   697  0893                     	;# 
   698  0894                     	;# 
   699  0894                     	;# 
   700  0894                     	;# 
   701  0895                     	;# 
   702  0895                     	;# 
   703  0895                     	;# 
   704  0896                     	;# 
   705  0896                     	;# 
   706  0896                     	;# 
   707  089B                     	;# 
   708  0911                     	;# 
   709  0912                     	;# 
   710  0913                     	;# 
   711  0914                     	;# 
   712  0915                     	;# 
   713  0916                     	;# 
   714  0918                     	;# 
   715  0919                     	;# 
   716  091A                     	;# 
   717  091B                     	;# 
   718  091C                     	;# 
   719  091D                     	;# 
   720  091E                     	;# 
   721  091F                     	;# 
   722  0E0F                     	;# 
   723  0E10                     	;# 
   724  0E11                     	;# 
   725  0E12                     	;# 
   726  0E13                     	;# 
   727  0E14                     	;# 
   728  0E15                     	;# 
   729  0E16                     	;# 
   730  0E17                     	;# 
   731  0E18                     	;# 
   732  0E19                     	;# 
   733  0E1A                     	;# 
   734  0E1B                     	;# 
   735  0E1C                     	;# 
   736  0E1D                     	;# 
   737  0E1E                     	;# 
   738  0E1F                     	;# 
   739  0E20                     	;# 
   740  0E21                     	;# 
   741  0E22                     	;# 
   742  0E24                     	;# 
   743  0E25                     	;# 
   744  0E28                     	;# 
   745  0E29                     	;# 
   746  0E2A                     	;# 
   747  0E2B                     	;# 
   748  0E2C                     	;# 
   749  0E2D                     	;# 
   750  0E2E                     	;# 
   751  0E2F                     	;# 
   752  0E90                     	;# 
   753  0E91                     	;# 
   754  0E92                     	;# 
   755  0E94                     	;# 
   756  0E95                     	;# 
   757  0E9C                     	;# 
   758  0E9D                     	;# 
   759  0E9E                     	;# 
   760  0E9F                     	;# 
   761  0EA0                     	;# 
   762  0EA1                     	;# 
   763  0EA2                     	;# 
   764  0EA3                     	;# 
   765  0EA4                     	;# 
   766  0EA5                     	;# 
   767  0EA6                     	;# 
   768  0EA7                     	;# 
   769  0F0F                     	;# 
   770  0F10                     	;# 
   771  0F11                     	;# 
   772  0F12                     	;# 
   773  0F13                     	;# 
   774  0F14                     	;# 
   775  0F15                     	;# 
   776  0F16                     	;# 
   777  0F17                     	;# 
   778  0F18                     	;# 
   779  0F19                     	;# 
   780  0F1A                     	;# 
   781  0F1B                     	;# 
   782  0F1C                     	;# 
   783  0F1D                     	;# 
   784  0F1E                     	;# 
   785  0F1F                     	;# 
   786  0F20                     	;# 
   787  0F21                     	;# 
   788  0F22                     	;# 
   789  0F23                     	;# 
   790  0F24                     	;# 
   791  0F25                     	;# 
   792  0F26                     	;# 
   793  0F27                     	;# 
   794  0F28                     	;# 
   795  0F29                     	;# 
   796  0F2A                     	;# 
   797  0F2B                     	;# 
   798  0F2C                     	;# 
   799  0F2D                     	;# 
   800  0F2E                     	;# 
   801  0F2F                     	;# 
   802  0F30                     	;# 
   803  0F31                     	;# 
   804  0F32                     	;# 
   805  0F33                     	;# 
   806  0F34                     	;# 
   807  0F35                     	;# 
   808  0F36                     	;# 
   809  0F37                     	;# 
   810  0FE4                     	;# 
   811  0FE5                     	;# 
   812  0FE6                     	;# 
   813  0FE7                     	;# 
   814  0FE8                     	;# 
   815  0FE9                     	;# 
   816  0FEA                     	;# 
   817  0FEB                     	;# 
   818  0FED                     	;# 
   819  0FEE                     	;# 
   820  0FEF                     	;# 
   821  0000                     	;# 
   822  0001                     	;# 
   823  0002                     	;# 
   824  0003                     	;# 
   825  0004                     	;# 
   826  0005                     	;# 
   827  0006                     	;# 
   828  0007                     	;# 
   829  0008                     	;# 
   830  0009                     	;# 
   831  000A                     	;# 
   832  000B                     	;# 
   833  000C                     	;# 
   834  000D                     	;# 
   835  000E                     	;# 
   836  0010                     	;# 
   837  0011                     	;# 
   838  0012                     	;# 
   839  0013                     	;# 
   840  0014                     	;# 
   841  0015                     	;# 
   842  0015                     	;# 
   843  0016                     	;# 
   844  0016                     	;# 
   845  0017                     	;# 
   846  0018                     	;# 
   847  0019                     	;# 
   848  0019                     	;# 
   849  001A                     	;# 
   850  001B                     	;# 
   851  001C                     	;# 
   852  001D                     	;# 
   853  001E                     	;# 
   854  001F                     	;# 
   855  008C                     	;# 
   856  008D                     	;# 
   857  008E                     	;# 
   858  0090                     	;# 
   859  0091                     	;# 
   860  0092                     	;# 
   861  0093                     	;# 
   862  0094                     	;# 
   863  0097                     	;# 
   864  009B                     	;# 
   865  009B                     	;# 
   866  009C                     	;# 
   867  009D                     	;# 
   868  009E                     	;# 
   869  009F                     	;# 
   870  010C                     	;# 
   871  010D                     	;# 
   872  010E                     	;# 
   873  0111                     	;# 
   874  0112                     	;# 
   875  0113                     	;# 
   876  0114                     	;# 
   877  0115                     	;# 
   878  0116                     	;# 
   879  0117                     	;# 
   880  0118                     	;# 
   881  0119                     	;# 
   882  018C                     	;# 
   883  018D                     	;# 
   884  018E                     	;# 
   885  0197                     	;# 
   886  0199                     	;# 
   887  0199                     	;# 
   888  0199                     	;# 
   889  019A                     	;# 
   890  019A                     	;# 
   891  019A                     	;# 
   892  019B                     	;# 
   893  019B                     	;# 
   894  019B                     	;# 
   895  019B                     	;# 
   896  019B                     	;# 
   897  019C                     	;# 
   898  019C                     	;# 
   899  019C                     	;# 
   900  019D                     	;# 
   901  019D                     	;# 
   902  019D                     	;# 
   903  019E                     	;# 
   904  019E                     	;# 
   905  019E                     	;# 
   906  019F                     	;# 
   907  019F                     	;# 
   908  019F                     	;# 
   909  019F                     	;# 
   910  019F                     	;# 
   911  020C                     	;# 
   912  020D                     	;# 
   913  020E                     	;# 
   914  0211                     	;# 
   915  0211                     	;# 
   916  0212                     	;# 
   917  0212                     	;# 
   918  0213                     	;# 
   919  0213                     	;# 
   920  0214                     	;# 
   921  0214                     	;# 
   922  0215                     	;# 
   923  0215                     	;# 
   924  0215                     	;# 
   925  0215                     	;# 
   926  0216                     	;# 
   927  0216                     	;# 
   928  0217                     	;# 
   929  0217                     	;# 
   930  0219                     	;# 
   931  021A                     	;# 
   932  021B                     	;# 
   933  021C                     	;# 
   934  021D                     	;# 
   935  021D                     	;# 
   936  021E                     	;# 
   937  021F                     	;# 
   938  028C                     	;# 
   939  028D                     	;# 
   940  028E                     	;# 
   941  0291                     	;# 
   942  0291                     	;# 
   943  0292                     	;# 
   944  0293                     	;# 
   945  0294                     	;# 
   946  0295                     	;# 
   947  0295                     	;# 
   948  0296                     	;# 
   949  0297                     	;# 
   950  0298                     	;# 
   951  029F                     	;# 
   952  030C                     	;# 
   953  030D                     	;# 
   954  030E                     	;# 
   955  0311                     	;# 
   956  0311                     	;# 
   957  0312                     	;# 
   958  0313                     	;# 
   959  0314                     	;# 
   960  0315                     	;# 
   961  0315                     	;# 
   962  0316                     	;# 
   963  0317                     	;# 
   964  0318                     	;# 
   965  038C                     	;# 
   966  038D                     	;# 
   967  038E                     	;# 
   968  0391                     	;# 
   969  0392                     	;# 
   970  0393                     	;# 
   971  0394                     	;# 
   972  0395                     	;# 
   973  0396                     	;# 
   974  0397                     	;# 
   975  0398                     	;# 
   976  0399                     	;# 
   977  039A                     	;# 
   978  039C                     	;# 
   979  039D                     	;# 
   980  039E                     	;# 
   981  039F                     	;# 
   982  0411                     	;# 
   983  0411                     	;# 
   984  0412                     	;# 
   985  0413                     	;# 
   986  0414                     	;# 
   987  0415                     	;# 
   988  0416                     	;# 
   989  0417                     	;# 
   990  0418                     	;# 
   991  0418                     	;# 
   992  0419                     	;# 
   993  041A                     	;# 
   994  041B                     	;# 
   995  041C                     	;# 
   996  041D                     	;# 
   997  041E                     	;# 
   998  041F                     	;# 
   999  0498                     	;# 
  1000  0498                     	;# 
  1001  0499                     	;# 
  1002  049A                     	;# 
  1003  049B                     	;# 
  1004  049B                     	;# 
  1005  049C                     	;# 
  1006  049D                     	;# 
  1007  049E                     	;# 
  1008  049F                     	;# 
  1009  0617                     	;# 
  1010  0618                     	;# 
  1011  0619                     	;# 
  1012  0619                     	;# 
  1013  061A                     	;# 
  1014  061B                     	;# 
  1015  061C                     	;# 
  1016  061C                     	;# 
  1017  061F                     	;# 
  1018  0691                     	;# 
  1019  0692                     	;# 
  1020  0693                     	;# 
  1021  0694                     	;# 
  1022  0695                     	;# 
  1023  0696                     	;# 
  1024  0697                     	;# 
  1025  0698                     	;# 
  1026  0699                     	;# 
  1027  0711                     	;# 
  1028  0712                     	;# 
  1029  0713                     	;# 
  1030  0714                     	;# 
  1031  0715                     	;# 
  1032  0716                     	;# 
  1033  0717                     	;# 
  1034  0718                     	;# 
  1035  0719                     	;# 
  1036  0891                     	;# 
  1037  0891                     	;# 
  1038  0891                     	;# 
  1039  0891                     	;# 
  1040  0891                     	;# 
  1041  0891                     	;# 
  1042  0892                     	;# 
  1043  0892                     	;# 
  1044  0892                     	;# 
  1045  0893                     	;# 
  1046  0893                     	;# 
  1047  0893                     	;# 
  1048  0893                     	;# 
  1049  0893                     	;# 
  1050  0893                     	;# 
  1051  0894                     	;# 
  1052  0894                     	;# 
  1053  0894                     	;# 
  1054  0895                     	;# 
  1055  0895                     	;# 
  1056  0895                     	;# 
  1057  0896                     	;# 
  1058  0896                     	;# 
  1059  0896                     	;# 
  1060  089B                     	;# 
  1061  0911                     	;# 
  1062  0912                     	;# 
  1063  0913                     	;# 
  1064  0914                     	;# 
  1065  0915                     	;# 
  1066  0916                     	;# 
  1067  0918                     	;# 
  1068  0919                     	;# 
  1069  091A                     	;# 
  1070  091B                     	;# 
  1071  091C                     	;# 
  1072  091D                     	;# 
  1073  091E                     	;# 
  1074  091F                     	;# 
  1075  0E0F                     	;# 
  1076  0E10                     	;# 
  1077  0E11                     	;# 
  1078  0E12                     	;# 
  1079  0E13                     	;# 
  1080  0E14                     	;# 
  1081  0E15                     	;# 
  1082  0E16                     	;# 
  1083  0E17                     	;# 
  1084  0E18                     	;# 
  1085  0E19                     	;# 
  1086  0E1A                     	;# 
  1087  0E1B                     	;# 
  1088  0E1C                     	;# 
  1089  0E1D                     	;# 
  1090  0E1E                     	;# 
  1091  0E1F                     	;# 
  1092  0E20                     	;# 
  1093  0E21                     	;# 
  1094  0E22                     	;# 
  1095  0E24                     	;# 
  1096  0E25                     	;# 
  1097  0E28                     	;# 
  1098  0E29                     	;# 
  1099  0E2A                     	;# 
  1100  0E2B                     	;# 
  1101  0E2C                     	;# 
  1102  0E2D                     	;# 
  1103  0E2E                     	;# 
  1104  0E2F                     	;# 
  1105  0E90                     	;# 
  1106  0E91                     	;# 
  1107  0E92                     	;# 
  1108  0E94                     	;# 
  1109  0E95                     	;# 
  1110  0E9C                     	;# 
  1111  0E9D                     	;# 
  1112  0E9E                     	;# 
  1113  0E9F                     	;# 
  1114  0EA0                     	;# 
  1115  0EA1                     	;# 
  1116  0EA2                     	;# 
  1117  0EA3                     	;# 
  1118  0EA4                     	;# 
  1119  0EA5                     	;# 
  1120  0EA6                     	;# 
  1121  0EA7                     	;# 
  1122  0F0F                     	;# 
  1123  0F10                     	;# 
  1124  0F11                     	;# 
  1125  0F12                     	;# 
  1126  0F13                     	;# 
  1127  0F14                     	;# 
  1128  0F15                     	;# 
  1129  0F16                     	;# 
  1130  0F17                     	;# 
  1131  0F18                     	;# 
  1132  0F19                     	;# 
  1133  0F1A                     	;# 
  1134  0F1B                     	;# 
  1135  0F1C                     	;# 
  1136  0F1D                     	;# 
  1137  0F1E                     	;# 
  1138  0F1F                     	;# 
  1139  0F20                     	;# 
  1140  0F21                     	;# 
  1141  0F22                     	;# 
  1142  0F23                     	;# 
  1143  0F24                     	;# 
  1144  0F25                     	;# 
  1145  0F26                     	;# 
  1146  0F27                     	;# 
  1147  0F28                     	;# 
  1148  0F29                     	;# 
  1149  0F2A                     	;# 
  1150  0F2B                     	;# 
  1151  0F2C                     	;# 
  1152  0F2D                     	;# 
  1153  0F2E                     	;# 
  1154  0F2F                     	;# 
  1155  0F30                     	;# 
  1156  0F31                     	;# 
  1157  0F32                     	;# 
  1158  0F33                     	;# 
  1159  0F34                     	;# 
  1160  0F35                     	;# 
  1161  0F36                     	;# 
  1162  0F37                     	;# 
  1163  0FE4                     	;# 
  1164  0FE5                     	;# 
  1165  0FE6                     	;# 
  1166  0FE7                     	;# 
  1167  0FE8                     	;# 
  1168  0FE9                     	;# 
  1169  0FEA                     	;# 
  1170  0FEB                     	;# 
  1171  0FED                     	;# 
  1172  0FEE                     	;# 
  1173  0FEF                     	;# 
  1174  0000                     	;# 
  1175  0001                     	;# 
  1176  0002                     	;# 
  1177  0003                     	;# 
  1178  0004                     	;# 
  1179  0005                     	;# 
  1180  0006                     	;# 
  1181  0007                     	;# 
  1182  0008                     	;# 
  1183  0009                     	;# 
  1184  000A                     	;# 
  1185  000B                     	;# 
  1186  000C                     	;# 
  1187  000D                     	;# 
  1188  000E                     	;# 
  1189  0010                     	;# 
  1190  0011                     	;# 
  1191  0012                     	;# 
  1192  0013                     	;# 
  1193  0014                     	;# 
  1194  0015                     	;# 
  1195  0015                     	;# 
  1196  0016                     	;# 
  1197  0016                     	;# 
  1198  0017                     	;# 
  1199  0018                     	;# 
  1200  0019                     	;# 
  1201  0019                     	;# 
  1202  001A                     	;# 
  1203  001B                     	;# 
  1204  001C                     	;# 
  1205  001D                     	;# 
  1206  001E                     	;# 
  1207  001F                     	;# 
  1208  008C                     	;# 
  1209  008D                     	;# 
  1210  008E                     	;# 
  1211  0090                     	;# 
  1212  0091                     	;# 
  1213  0092                     	;# 
  1214  0093                     	;# 
  1215  0094                     	;# 
  1216  0097                     	;# 
  1217  009B                     	;# 
  1218  009B                     	;# 
  1219  009C                     	;# 
  1220  009D                     	;# 
  1221  009E                     	;# 
  1222  009F                     	;# 
  1223  010C                     	;# 
  1224  010D                     	;# 
  1225  010E                     	;# 
  1226  0111                     	;# 
  1227  0112                     	;# 
  1228  0113                     	;# 
  1229  0114                     	;# 
  1230  0115                     	;# 
  1231  0116                     	;# 
  1232  0117                     	;# 
  1233  0118                     	;# 
  1234  0119                     	;# 
  1235  018C                     	;# 
  1236  018D                     	;# 
  1237  018E                     	;# 
  1238  0197                     	;# 
  1239  0199                     	;# 
  1240  0199                     	;# 
  1241  0199                     	;# 
  1242  019A                     	;# 
  1243  019A                     	;# 
  1244  019A                     	;# 
  1245  019B                     	;# 
  1246  019B                     	;# 
  1247  019B                     	;# 
  1248  019B                     	;# 
  1249  019B                     	;# 
  1250  019C                     	;# 
  1251  019C                     	;# 
  1252  019C                     	;# 
  1253  019D                     	;# 
  1254  019D                     	;# 
  1255  019D                     	;# 
  1256  019E                     	;# 
  1257  019E                     	;# 
  1258  019E                     	;# 
  1259  019F                     	;# 
  1260  019F                     	;# 
  1261  019F                     	;# 
  1262  019F                     	;# 
  1263  019F                     	;# 
  1264  020C                     	;# 
  1265  020D                     	;# 
  1266  020E                     	;# 
  1267  0211                     	;# 
  1268  0211                     	;# 
  1269  0212                     	;# 
  1270  0212                     	;# 
  1271  0213                     	;# 
  1272  0213                     	;# 
  1273  0214                     	;# 
  1274  0214                     	;# 
  1275  0215                     	;# 
  1276  0215                     	;# 
  1277  0215                     	;# 
  1278  0215                     	;# 
  1279  0216                     	;# 
  1280  0216                     	;# 
  1281  0217                     	;# 
  1282  0217                     	;# 
  1283  0219                     	;# 
  1284  021A                     	;# 
  1285  021B                     	;# 
  1286  021C                     	;# 
  1287  021D                     	;# 
  1288  021D                     	;# 
  1289  021E                     	;# 
  1290  021F                     	;# 
  1291  028C                     	;# 
  1292  028D                     	;# 
  1293  028E                     	;# 
  1294  0291                     	;# 
  1295  0291                     	;# 
  1296  0292                     	;# 
  1297  0293                     	;# 
  1298  0294                     	;# 
  1299  0295                     	;# 
  1300  0295                     	;# 
  1301  0296                     	;# 
  1302  0297                     	;# 
  1303  0298                     	;# 
  1304  029F                     	;# 
  1305  030C                     	;# 
  1306  030D                     	;# 
  1307  030E                     	;# 
  1308  0311                     	;# 
  1309  0311                     	;# 
  1310  0312                     	;# 
  1311  0313                     	;# 
  1312  0314                     	;# 
  1313  0315                     	;# 
  1314  0315                     	;# 
  1315  0316                     	;# 
  1316  0317                     	;# 
  1317  0318                     	;# 
  1318  038C                     	;# 
  1319  038D                     	;# 
  1320  038E                     	;# 
  1321  0391                     	;# 
  1322  0392                     	;# 
  1323  0393                     	;# 
  1324  0394                     	;# 
  1325  0395                     	;# 
  1326  0396                     	;# 
  1327  0397                     	;# 
  1328  0398                     	;# 
  1329  0399                     	;# 
  1330  039A                     	;# 
  1331  039C                     	;# 
  1332  039D                     	;# 
  1333  039E                     	;# 
  1334  039F                     	;# 
  1335  0411                     	;# 
  1336  0411                     	;# 
  1337  0412                     	;# 
  1338  0413                     	;# 
  1339  0414                     	;# 
  1340  0415                     	;# 
  1341  0416                     	;# 
  1342  0417                     	;# 
  1343  0418                     	;# 
  1344  0418                     	;# 
  1345  0419                     	;# 
  1346  041A                     	;# 
  1347  041B                     	;# 
  1348  041C                     	;# 
  1349  041D                     	;# 
  1350  041E                     	;# 
  1351  041F                     	;# 
  1352  0498                     	;# 
  1353  0498                     	;# 
  1354  0499                     	;# 
  1355  049A                     	;# 
  1356  049B                     	;# 
  1357  049B                     	;# 
  1358  049C                     	;# 
  1359  049D                     	;# 
  1360  049E                     	;# 
  1361  049F                     	;# 
  1362  0617                     	;# 
  1363  0618                     	;# 
  1364  0619                     	;# 
  1365  0619                     	;# 
  1366  061A                     	;# 
  1367  061B                     	;# 
  1368  061C                     	;# 
  1369  061C                     	;# 
  1370  061F                     	;# 
  1371  0691                     	;# 
  1372  0692                     	;# 
  1373  0693                     	;# 
  1374  0694                     	;# 
  1375  0695                     	;# 
  1376  0696                     	;# 
  1377  0697                     	;# 
  1378  0698                     	;# 
  1379  0699                     	;# 
  1380  0711                     	;# 
  1381  0712                     	;# 
  1382  0713                     	;# 
  1383  0714                     	;# 
  1384  0715                     	;# 
  1385  0716                     	;# 
  1386  0717                     	;# 
  1387  0718                     	;# 
  1388  0719                     	;# 
  1389  0891                     	;# 
  1390  0891                     	;# 
  1391  0891                     	;# 
  1392  0891                     	;# 
  1393  0891                     	;# 
  1394  0891                     	;# 
  1395  0892                     	;# 
  1396  0892                     	;# 
  1397  0892                     	;# 
  1398  0893                     	;# 
  1399  0893                     	;# 
  1400  0893                     	;# 
  1401  0893                     	;# 
  1402  0893                     	;# 
  1403  0893                     	;# 
  1404  0894                     	;# 
  1405  0894                     	;# 
  1406  0894                     	;# 
  1407  0895                     	;# 
  1408  0895                     	;# 
  1409  0895                     	;# 
  1410  0896                     	;# 
  1411  0896                     	;# 
  1412  0896                     	;# 
  1413  089B                     	;# 
  1414  0911                     	;# 
  1415  0912                     	;# 
  1416  0913                     	;# 
  1417  0914                     	;# 
  1418  0915                     	;# 
  1419  0916                     	;# 
  1420  0918                     	;# 
  1421  0919                     	;# 
  1422  091A                     	;# 
  1423  091B                     	;# 
  1424  091C                     	;# 
  1425  091D                     	;# 
  1426  091E                     	;# 
  1427  091F                     	;# 
  1428  0E0F                     	;# 
  1429  0E10                     	;# 
  1430  0E11                     	;# 
  1431  0E12                     	;# 
  1432  0E13                     	;# 
  1433  0E14                     	;# 
  1434  0E15                     	;# 
  1435  0E16                     	;# 
  1436  0E17                     	;# 
  1437  0E18                     	;# 
  1438  0E19                     	;# 
  1439  0E1A                     	;# 
  1440  0E1B                     	;# 
  1441  0E1C                     	;# 
  1442  0E1D                     	;# 
  1443  0E1E                     	;# 
  1444  0E1F                     	;# 
  1445  0E20                     	;# 
  1446  0E21                     	;# 
  1447  0E22                     	;# 
  1448  0E24                     	;# 
  1449  0E25                     	;# 
  1450  0E28                     	;# 
  1451  0E29                     	;# 
  1452  0E2A                     	;# 
  1453  0E2B                     	;# 
  1454  0E2C                     	;# 
  1455  0E2D                     	;# 
  1456  0E2E                     	;# 
  1457  0E2F                     	;# 
  1458  0E90                     	;# 
  1459  0E91                     	;# 
  1460  0E92                     	;# 
  1461  0E94                     	;# 
  1462  0E95                     	;# 
  1463  0E9C                     	;# 
  1464  0E9D                     	;# 
  1465  0E9E                     	;# 
  1466  0E9F                     	;# 
  1467  0EA0                     	;# 
  1468  0EA1                     	;# 
  1469  0EA2                     	;# 
  1470  0EA3                     	;# 
  1471  0EA4                     	;# 
  1472  0EA5                     	;# 
  1473  0EA6                     	;# 
  1474  0EA7                     	;# 
  1475  0F0F                     	;# 
  1476  0F10                     	;# 
  1477  0F11                     	;# 
  1478  0F12                     	;# 
  1479  0F13                     	;# 
  1480  0F14                     	;# 
  1481  0F15                     	;# 
  1482  0F16                     	;# 
  1483  0F17                     	;# 
  1484  0F18                     	;# 
  1485  0F19                     	;# 
  1486  0F1A                     	;# 
  1487  0F1B                     	;# 
  1488  0F1C                     	;# 
  1489  0F1D                     	;# 
  1490  0F1E                     	;# 
  1491  0F1F                     	;# 
  1492  0F20                     	;# 
  1493  0F21                     	;# 
  1494  0F22                     	;# 
  1495  0F23                     	;# 
  1496  0F24                     	;# 
  1497  0F25                     	;# 
  1498  0F26                     	;# 
  1499  0F27                     	;# 
  1500  0F28                     	;# 
  1501  0F29                     	;# 
  1502  0F2A                     	;# 
  1503  0F2B                     	;# 
  1504  0F2C                     	;# 
  1505  0F2D                     	;# 
  1506  0F2E                     	;# 
  1507  0F2F                     	;# 
  1508  0F30                     	;# 
  1509  0F31                     	;# 
  1510  0F32                     	;# 
  1511  0F33                     	;# 
  1512  0F34                     	;# 
  1513  0F35                     	;# 
  1514  0F36                     	;# 
  1515  0F37                     	;# 
  1516  0FE4                     	;# 
  1517  0FE5                     	;# 
  1518  0FE6                     	;# 
  1519  0FE7                     	;# 
  1520  0FE8                     	;# 
  1521  0FE9                     	;# 
  1522  0FEA                     	;# 
  1523  0FEB                     	;# 
  1524  0FED                     	;# 
  1525  0FEE                     	;# 
  1526  0FEF                     	;# 
  1527  0000                     	;# 
  1528  0001                     	;# 
  1529  0002                     	;# 
  1530  0003                     	;# 
  1531  0004                     	;# 
  1532  0005                     	;# 
  1533  0006                     	;# 
  1534  0007                     	;# 
  1535  0008                     	;# 
  1536  0009                     	;# 
  1537  000A                     	;# 
  1538  000B                     	;# 
  1539  000C                     	;# 
  1540  000D                     	;# 
  1541  000E                     	;# 
  1542  0010                     	;# 
  1543  0011                     	;# 
  1544  0012                     	;# 
  1545  0013                     	;# 
  1546  0014                     	;# 
  1547  0015                     	;# 
  1548  0015                     	;# 
  1549  0016                     	;# 
  1550  0016                     	;# 
  1551  0017                     	;# 
  1552  0018                     	;# 
  1553  0019                     	;# 
  1554  0019                     	;# 
  1555  001A                     	;# 
  1556  001B                     	;# 
  1557  001C                     	;# 
  1558  001D                     	;# 
  1559  001E                     	;# 
  1560  001F                     	;# 
  1561  008C                     	;# 
  1562  008D                     	;# 
  1563  008E                     	;# 
  1564  0090                     	;# 
  1565  0091                     	;# 
  1566  0092                     	;# 
  1567  0093                     	;# 
  1568  0094                     	;# 
  1569  0097                     	;# 
  1570  009B                     	;# 
  1571  009B                     	;# 
  1572  009C                     	;# 
  1573  009D                     	;# 
  1574  009E                     	;# 
  1575  009F                     	;# 
  1576  010C                     	;# 
  1577  010D                     	;# 
  1578  010E                     	;# 
  1579  0111                     	;# 
  1580  0112                     	;# 
  1581  0113                     	;# 
  1582  0114                     	;# 
  1583  0115                     	;# 
  1584  0116                     	;# 
  1585  0117                     	;# 
  1586  0118                     	;# 
  1587  0119                     	;# 
  1588  018C                     	;# 
  1589  018D                     	;# 
  1590  018E                     	;# 
  1591  0197                     	;# 
  1592  0199                     	;# 
  1593  0199                     	;# 
  1594  0199                     	;# 
  1595  019A                     	;# 
  1596  019A                     	;# 
  1597  019A                     	;# 
  1598  019B                     	;# 
  1599  019B                     	;# 
  1600  019B                     	;# 
  1601  019B                     	;# 
  1602  019B                     	;# 
  1603  019C                     	;# 
  1604  019C                     	;# 
  1605  019C                     	;# 
  1606  019D                     	;# 
  1607  019D                     	;# 
  1608  019D                     	;# 
  1609  019E                     	;# 
  1610  019E                     	;# 
  1611  019E                     	;# 
  1612  019F                     	;# 
  1613  019F                     	;# 
  1614  019F                     	;# 
  1615  019F                     	;# 
  1616  019F                     	;# 
  1617  020C                     	;# 
  1618  020D                     	;# 
  1619  020E                     	;# 
  1620  0211                     	;# 
  1621  0211                     	;# 
  1622  0212                     	;# 
  1623  0212                     	;# 
  1624  0213                     	;# 
  1625  0213                     	;# 
  1626  0214                     	;# 
  1627  0214                     	;# 
  1628  0215                     	;# 
  1629  0215                     	;# 
  1630  0215                     	;# 
  1631  0215                     	;# 
  1632  0216                     	;# 
  1633  0216                     	;# 
  1634  0217                     	;# 
  1635  0217                     	;# 
  1636  0219                     	;# 
  1637  021A                     	;# 
  1638  021B                     	;# 
  1639  021C                     	;# 
  1640  021D                     	;# 
  1641  021D                     	;# 
  1642  021E                     	;# 
  1643  021F                     	;# 
  1644  028C                     	;# 
  1645  028D                     	;# 
  1646  028E                     	;# 
  1647  0291                     	;# 
  1648  0291                     	;# 
  1649  0292                     	;# 
  1650  0293                     	;# 
  1651  0294                     	;# 
  1652  0295                     	;# 
  1653  0295                     	;# 
  1654  0296                     	;# 
  1655  0297                     	;# 
  1656  0298                     	;# 
  1657  029F                     	;# 
  1658  030C                     	;# 
  1659  030D                     	;# 
  1660  030E                     	;# 
  1661  0311                     	;# 
  1662  0311                     	;# 
  1663  0312                     	;# 
  1664  0313                     	;# 
  1665  0314                     	;# 
  1666  0315                     	;# 
  1667  0315                     	;# 
  1668  0316                     	;# 
  1669  0317                     	;# 
  1670  0318                     	;# 
  1671  038C                     	;# 
  1672  038D                     	;# 
  1673  038E                     	;# 
  1674  0391                     	;# 
  1675  0392                     	;# 
  1676  0393                     	;# 
  1677  0394                     	;# 
  1678  0395                     	;# 
  1679  0396                     	;# 
  1680  0397                     	;# 
  1681  0398                     	;# 
  1682  0399                     	;# 
  1683  039A                     	;# 
  1684  039C                     	;# 
  1685  039D                     	;# 
  1686  039E                     	;# 
  1687  039F                     	;# 
  1688  0411                     	;# 
  1689  0411                     	;# 
  1690  0412                     	;# 
  1691  0413                     	;# 
  1692  0414                     	;# 
  1693  0415                     	;# 
  1694  0416                     	;# 
  1695  0417                     	;# 
  1696  0418                     	;# 
  1697  0418                     	;# 
  1698  0419                     	;# 
  1699  041A                     	;# 
  1700  041B                     	;# 
  1701  041C                     	;# 
  1702  041D                     	;# 
  1703  041E                     	;# 
  1704  041F                     	;# 
  1705  0498                     	;# 
  1706  0498                     	;# 
  1707  0499                     	;# 
  1708  049A                     	;# 
  1709  049B                     	;# 
  1710  049B                     	;# 
  1711  049C                     	;# 
  1712  049D                     	;# 
  1713  049E                     	;# 
  1714  049F                     	;# 
  1715  0617                     	;# 
  1716  0618                     	;# 
  1717  0619                     	;# 
  1718  0619                     	;# 
  1719  061A                     	;# 
  1720  061B                     	;# 
  1721  061C                     	;# 
  1722  061C                     	;# 
  1723  061F                     	;# 
  1724  0691                     	;# 
  1725  0692                     	;# 
  1726  0693                     	;# 
  1727  0694                     	;# 
  1728  0695                     	;# 
  1729  0696                     	;# 
  1730  0697                     	;# 
  1731  0698                     	;# 
  1732  0699                     	;# 
  1733  0711                     	;# 
  1734  0712                     	;# 
  1735  0713                     	;# 
  1736  0714                     	;# 
  1737  0715                     	;# 
  1738  0716                     	;# 
  1739  0717                     	;# 
  1740  0718                     	;# 
  1741  0719                     	;# 
  1742  0891                     	;# 
  1743  0891                     	;# 
  1744  0891                     	;# 
  1745  0891                     	;# 
  1746  0891                     	;# 
  1747  0891                     	;# 
  1748  0892                     	;# 
  1749  0892                     	;# 
  1750  0892                     	;# 
  1751  0893                     	;# 
  1752  0893                     	;# 
  1753  0893                     	;# 
  1754  0893                     	;# 
  1755  0893                     	;# 
  1756  0893                     	;# 
  1757  0894                     	;# 
  1758  0894                     	;# 
  1759  0894                     	;# 
  1760  0895                     	;# 
  1761  0895                     	;# 
  1762  0895                     	;# 
  1763  0896                     	;# 
  1764  0896                     	;# 
  1765  0896                     	;# 
  1766  089B                     	;# 
  1767  0911                     	;# 
  1768  0912                     	;# 
  1769  0913                     	;# 
  1770  0914                     	;# 
  1771  0915                     	;# 
  1772  0916                     	;# 
  1773  0918                     	;# 
  1774  0919                     	;# 
  1775  091A                     	;# 
  1776  091B                     	;# 
  1777  091C                     	;# 
  1778  091D                     	;# 
  1779  091E                     	;# 
  1780  091F                     	;# 
  1781  0E0F                     	;# 
  1782  0E10                     	;# 
  1783  0E11                     	;# 
  1784  0E12                     	;# 
  1785  0E13                     	;# 
  1786  0E14                     	;# 
  1787  0E15                     	;# 
  1788  0E16                     	;# 
  1789  0E17                     	;# 
  1790  0E18                     	;# 
  1791  0E19                     	;# 
  1792  0E1A                     	;# 
  1793  0E1B                     	;# 
  1794  0E1C                     	;# 
  1795  0E1D                     	;# 
  1796  0E1E                     	;# 
  1797  0E1F                     	;# 
  1798  0E20                     	;# 
  1799  0E21                     	;# 
  1800  0E22                     	;# 
  1801  0E24                     	;# 
  1802  0E25                     	;# 
  1803  0E28                     	;# 
  1804  0E29                     	;# 
  1805  0E2A                     	;# 
  1806  0E2B                     	;# 
  1807  0E2C                     	;# 
  1808  0E2D                     	;# 
  1809  0E2E                     	;# 
  1810  0E2F                     	;# 
  1811  0E90                     	;# 
  1812  0E91                     	;# 
  1813  0E92                     	;# 
  1814  0E94                     	;# 
  1815  0E95                     	;# 
  1816  0E9C                     	;# 
  1817  0E9D                     	;# 
  1818  0E9E                     	;# 
  1819  0E9F                     	;# 
  1820  0EA0                     	;# 
  1821  0EA1                     	;# 
  1822  0EA2                     	;# 
  1823  0EA3                     	;# 
  1824  0EA4                     	;# 
  1825  0EA5                     	;# 
  1826  0EA6                     	;# 
  1827  0EA7                     	;# 
  1828  0F0F                     	;# 
  1829  0F10                     	;# 
  1830  0F11                     	;# 
  1831  0F12                     	;# 
  1832  0F13                     	;# 
  1833  0F14                     	;# 
  1834  0F15                     	;# 
  1835  0F16                     	;# 
  1836  0F17                     	;# 
  1837  0F18                     	;# 
  1838  0F19                     	;# 
  1839  0F1A                     	;# 
  1840  0F1B                     	;# 
  1841  0F1C                     	;# 
  1842  0F1D                     	;# 
  1843  0F1E                     	;# 
  1844  0F1F                     	;# 
  1845  0F20                     	;# 
  1846  0F21                     	;# 
  1847  0F22                     	;# 
  1848  0F23                     	;# 
  1849  0F24                     	;# 
  1850  0F25                     	;# 
  1851  0F26                     	;# 
  1852  0F27                     	;# 
  1853  0F28                     	;# 
  1854  0F29                     	;# 
  1855  0F2A                     	;# 
  1856  0F2B                     	;# 
  1857  0F2C                     	;# 
  1858  0F2D                     	;# 
  1859  0F2E                     	;# 
  1860  0F2F                     	;# 
  1861  0F30                     	;# 
  1862  0F31                     	;# 
  1863  0F32                     	;# 
  1864  0F33                     	;# 
  1865  0F34                     	;# 
  1866  0F35                     	;# 
  1867  0F36                     	;# 
  1868  0F37                     	;# 
  1869  0FE4                     	;# 
  1870  0FE5                     	;# 
  1871  0FE6                     	;# 
  1872  0FE7                     	;# 
  1873  0FE8                     	;# 
  1874  0FE9                     	;# 
  1875  0FEA                     	;# 
  1876  0FEB                     	;# 
  1877  0FED                     	;# 
  1878  0FEE                     	;# 
  1879  0FEF                     	;# 
  1880  0000                     	;# 
  1881  0001                     	;# 
  1882  0002                     	;# 
  1883  0003                     	;# 
  1884  0004                     	;# 
  1885  0005                     	;# 
  1886  0006                     	;# 
  1887  0007                     	;# 
  1888  0008                     	;# 
  1889  0009                     	;# 
  1890  000A                     	;# 
  1891  000B                     	;# 
  1892  000C                     	;# 
  1893  000D                     	;# 
  1894  000E                     	;# 
  1895  0010                     	;# 
  1896  0011                     	;# 
  1897  0012                     	;# 
  1898  0013                     	;# 
  1899  0014                     	;# 
  1900  0015                     	;# 
  1901  0015                     	;# 
  1902  0016                     	;# 
  1903  0016                     	;# 
  1904  0017                     	;# 
  1905  0018                     	;# 
  1906  0019                     	;# 
  1907  0019                     	;# 
  1908  001A                     	;# 
  1909  001B                     	;# 
  1910  001C                     	;# 
  1911  001D                     	;# 
  1912  001E                     	;# 
  1913  001F                     	;# 
  1914  008C                     	;# 
  1915  008D                     	;# 
  1916  008E                     	;# 
  1917  0090                     	;# 
  1918  0091                     	;# 
  1919  0092                     	;# 
  1920  0093                     	;# 
  1921  0094                     	;# 
  1922  0097                     	;# 
  1923  009B                     	;# 
  1924  009B                     	;# 
  1925  009C                     	;# 
  1926  009D                     	;# 
  1927  009E                     	;# 
  1928  009F                     	;# 
  1929  010C                     	;# 
  1930  010D                     	;# 
  1931  010E                     	;# 
  1932  0111                     	;# 
  1933  0112                     	;# 
  1934  0113                     	;# 
  1935  0114                     	;# 
  1936  0115                     	;# 
  1937  0116                     	;# 
  1938  0117                     	;# 
  1939  0118                     	;# 
  1940  0119                     	;# 
  1941  018C                     	;# 
  1942  018D                     	;# 
  1943  018E                     	;# 
  1944  0197                     	;# 
  1945  0199                     	;# 
  1946  0199                     	;# 
  1947  0199                     	;# 
  1948  019A                     	;# 
  1949  019A                     	;# 
  1950  019A                     	;# 
  1951  019B                     	;# 
  1952  019B                     	;# 
  1953  019B                     	;# 
  1954  019B                     	;# 
  1955  019B                     	;# 
  1956  019C                     	;# 
  1957  019C                     	;# 
  1958  019C                     	;# 
  1959  019D                     	;# 
  1960  019D                     	;# 
  1961  019D                     	;# 
  1962  019E                     	;# 
  1963  019E                     	;# 
  1964  019E                     	;# 
  1965  019F                     	;# 
  1966  019F                     	;# 
  1967  019F                     	;# 
  1968  019F                     	;# 
  1969  019F                     	;# 
  1970  020C                     	;# 
  1971  020D                     	;# 
  1972  020E                     	;# 
  1973  0211                     	;# 
  1974  0211                     	;# 
  1975  0212                     	;# 
  1976  0212                     	;# 
  1977  0213                     	;# 
  1978  0213                     	;# 
  1979  0214                     	;# 
  1980  0214                     	;# 
  1981  0215                     	;# 
  1982  0215                     	;# 
  1983  0215                     	;# 
  1984  0215                     	;# 
  1985  0216                     	;# 
  1986  0216                     	;# 
  1987  0217                     	;# 
  1988  0217                     	;# 
  1989  0219                     	;# 
  1990  021A                     	;# 
  1991  021B                     	;# 
  1992  021C                     	;# 
  1993  021D                     	;# 
  1994  021D                     	;# 
  1995  021E                     	;# 
  1996  021F                     	;# 
  1997  028C                     	;# 
  1998  028D                     	;# 
  1999  028E                     	;# 
  2000  0291                     	;# 
  2001  0291                     	;# 
  2002  0292                     	;# 
  2003  0293                     	;# 
  2004  0294                     	;# 
  2005  0295                     	;# 
  2006  0295                     	;# 
  2007  0296                     	;# 
  2008  0297                     	;# 
  2009  0298                     	;# 
  2010  029F                     	;# 
  2011  030C                     	;# 
  2012  030D                     	;# 
  2013  030E                     	;# 
  2014  0311                     	;# 
  2015  0311                     	;# 
  2016  0312                     	;# 
  2017  0313                     	;# 
  2018  0314                     	;# 
  2019  0315                     	;# 
  2020  0315                     	;# 
  2021  0316                     	;# 
  2022  0317                     	;# 
  2023  0318                     	;# 
  2024  038C                     	;# 
  2025  038D                     	;# 
  2026  038E                     	;# 
  2027  0391                     	;# 
  2028  0392                     	;# 
  2029  0393                     	;# 
  2030  0394                     	;# 
  2031  0395                     	;# 
  2032  0396                     	;# 
  2033  0397                     	;# 
  2034  0398                     	;# 
  2035  0399                     	;# 
  2036  039A                     	;# 
  2037  039C                     	;# 
  2038  039D                     	;# 
  2039  039E                     	;# 
  2040  039F                     	;# 
  2041  0411                     	;# 
  2042  0411                     	;# 
  2043  0412                     	;# 
  2044  0413                     	;# 
  2045  0414                     	;# 
  2046  0415                     	;# 
  2047  0416                     	;# 
  2048  0417                     	;# 
  2049  0418                     	;# 
  2050  0418                     	;# 
  2051  0419                     	;# 
  2052  041A                     	;# 
  2053  041B                     	;# 
  2054  041C                     	;# 
  2055  041D                     	;# 
  2056  041E                     	;# 
  2057  041F                     	;# 
  2058  0498                     	;# 
  2059  0498                     	;# 
  2060  0499                     	;# 
  2061  049A                     	;# 
  2062  049B                     	;# 
  2063  049B                     	;# 
  2064  049C                     	;# 
  2065  049D                     	;# 
  2066  049E                     	;# 
  2067  049F                     	;# 
  2068  0617                     	;# 
  2069  0618                     	;# 
  2070  0619                     	;# 
  2071  0619                     	;# 
  2072  061A                     	;# 
  2073  061B                     	;# 
  2074  061C                     	;# 
  2075  061C                     	;# 
  2076  061F                     	;# 
  2077  0691                     	;# 
  2078  0692                     	;# 
  2079  0693                     	;# 
  2080  0694                     	;# 
  2081  0695                     	;# 
  2082  0696                     	;# 
  2083  0697                     	;# 
  2084  0698                     	;# 
  2085  0699                     	;# 
  2086  0711                     	;# 
  2087  0712                     	;# 
  2088  0713                     	;# 
  2089  0714                     	;# 
  2090  0715                     	;# 
  2091  0716                     	;# 
  2092  0717                     	;# 
  2093  0718                     	;# 
  2094  0719                     	;# 
  2095  0891                     	;# 
  2096  0891                     	;# 
  2097  0891                     	;# 
  2098  0891                     	;# 
  2099  0891                     	;# 
  2100  0891                     	;# 
  2101  0892                     	;# 
  2102  0892                     	;# 
  2103  0892                     	;# 
  2104  0893                     	;# 
  2105  0893                     	;# 
  2106  0893                     	;# 
  2107  0893                     	;# 
  2108  0893                     	;# 
  2109  0893                     	;# 
  2110  0894                     	;# 
  2111  0894                     	;# 
  2112  0894                     	;# 
  2113  0895                     	;# 
  2114  0895                     	;# 
  2115  0895                     	;# 
  2116  0896                     	;# 
  2117  0896                     	;# 
  2118  0896                     	;# 
  2119  089B                     	;# 
  2120  0911                     	;# 
  2121  0912                     	;# 
  2122  0913                     	;# 
  2123  0914                     	;# 
  2124  0915                     	;# 
  2125  0916                     	;# 
  2126  0918                     	;# 
  2127  0919                     	;# 
  2128  091A                     	;# 
  2129  091B                     	;# 
  2130  091C                     	;# 
  2131  091D                     	;# 
  2132  091E                     	;# 
  2133  091F                     	;# 
  2134  0E0F                     	;# 
  2135  0E10                     	;# 
  2136  0E11                     	;# 
  2137  0E12                     	;# 
  2138  0E13                     	;# 
  2139  0E14                     	;# 
  2140  0E15                     	;# 
  2141  0E16                     	;# 
  2142  0E17                     	;# 
  2143  0E18                     	;# 
  2144  0E19                     	;# 
  2145  0E1A                     	;# 
  2146  0E1B                     	;# 
  2147  0E1C                     	;# 
  2148  0E1D                     	;# 
  2149  0E1E                     	;# 
  2150  0E1F                     	;# 
  2151  0E20                     	;# 
  2152  0E21                     	;# 
  2153  0E22                     	;# 
  2154  0E24                     	;# 
  2155  0E25                     	;# 
  2156  0E28                     	;# 
  2157  0E29                     	;# 
  2158  0E2A                     	;# 
  2159  0E2B                     	;# 
  2160  0E2C                     	;# 
  2161  0E2D                     	;# 
  2162  0E2E                     	;# 
  2163  0E2F                     	;# 
  2164  0E90                     	;# 
  2165  0E91                     	;# 
  2166  0E92                     	;# 
  2167  0E94                     	;# 
  2168  0E95                     	;# 
  2169  0E9C                     	;# 
  2170  0E9D                     	;# 
  2171  0E9E                     	;# 
  2172  0E9F                     	;# 
  2173  0EA0                     	;# 
  2174  0EA1                     	;# 
  2175  0EA2                     	;# 
  2176  0EA3                     	;# 
  2177  0EA4                     	;# 
  2178  0EA5                     	;# 
  2179  0EA6                     	;# 
  2180  0EA7                     	;# 
  2181  0F0F                     	;# 
  2182  0F10                     	;# 
  2183  0F11                     	;# 
  2184  0F12                     	;# 
  2185  0F13                     	;# 
  2186  0F14                     	;# 
  2187  0F15                     	;# 
  2188  0F16                     	;# 
  2189  0F17                     	;# 
  2190  0F18                     	;# 
  2191  0F19                     	;# 
  2192  0F1A                     	;# 
  2193  0F1B                     	;# 
  2194  0F1C                     	;# 
  2195  0F1D                     	;# 
  2196  0F1E                     	;# 
  2197  0F1F                     	;# 
  2198  0F20                     	;# 
  2199  0F21                     	;# 
  2200  0F22                     	;# 
  2201  0F23                     	;# 
  2202  0F24                     	;# 
  2203  0F25                     	;# 
  2204  0F26                     	;# 
  2205  0F27                     	;# 
  2206  0F28                     	;# 
  2207  0F29                     	;# 
  2208  0F2A                     	;# 
  2209  0F2B                     	;# 
  2210  0F2C                     	;# 
  2211  0F2D                     	;# 
  2212  0F2E                     	;# 
  2213  0F2F                     	;# 
  2214  0F30                     	;# 
  2215  0F31                     	;# 
  2216  0F32                     	;# 
  2217  0F33                     	;# 
  2218  0F34                     	;# 
  2219  0F35                     	;# 
  2220  0F36                     	;# 
  2221  0F37                     	;# 
  2222  0FE4                     	;# 
  2223  0FE5                     	;# 
  2224  0FE6                     	;# 
  2225  0FE7                     	;# 
  2226  0FE8                     	;# 
  2227  0FE9                     	;# 
  2228  0FEA                     	;# 
  2229  0FEB                     	;# 
  2230  0FED                     	;# 
  2231  0FEE                     	;# 
  2232  0FEF                     	;# 
  2233  0000                     	;# 
  2234  0001                     	;# 
  2235  0002                     	;# 
  2236  0003                     	;# 
  2237  0004                     	;# 
  2238  0005                     	;# 
  2239  0006                     	;# 
  2240  0007                     	;# 
  2241  0008                     	;# 
  2242  0009                     	;# 
  2243  000A                     	;# 
  2244  000B                     	;# 
  2245  000C                     	;# 
  2246  000D                     	;# 
  2247  000E                     	;# 
  2248  0010                     	;# 
  2249  0011                     	;# 
  2250  0012                     	;# 
  2251  0013                     	;# 
  2252  0014                     	;# 
  2253  0015                     	;# 
  2254  0015                     	;# 
  2255  0016                     	;# 
  2256  0016                     	;# 
  2257  0017                     	;# 
  2258  0018                     	;# 
  2259  0019                     	;# 
  2260  0019                     	;# 
  2261  001A                     	;# 
  2262  001B                     	;# 
  2263  001C                     	;# 
  2264  001D                     	;# 
  2265  001E                     	;# 
  2266  001F                     	;# 
  2267  008C                     	;# 
  2268  008D                     	;# 
  2269  008E                     	;# 
  2270  0090                     	;# 
  2271  0091                     	;# 
  2272  0092                     	;# 
  2273  0093                     	;# 
  2274  0094                     	;# 
  2275  0097                     	;# 
  2276  009B                     	;# 
  2277  009B                     	;# 
  2278  009C                     	;# 
  2279  009D                     	;# 
  2280  009E                     	;# 
  2281  009F                     	;# 
  2282  010C                     	;# 
  2283  010D                     	;# 
  2284  010E                     	;# 
  2285  0111                     	;# 
  2286  0112                     	;# 
  2287  0113                     	;# 
  2288  0114                     	;# 
  2289  0115                     	;# 
  2290  0116                     	;# 
  2291  0117                     	;# 
  2292  0118                     	;# 
  2293  0119                     	;# 
  2294  018C                     	;# 
  2295  018D                     	;# 
  2296  018E                     	;# 
  2297  0197                     	;# 
  2298  0199                     	;# 
  2299  0199                     	;# 
  2300  0199                     	;# 
  2301  019A                     	;# 
  2302  019A                     	;# 
  2303  019A                     	;# 
  2304  019B                     	;# 
  2305  019B                     	;# 
  2306  019B                     	;# 
  2307  019B                     	;# 
  2308  019B                     	;# 
  2309  019C                     	;# 
  2310  019C                     	;# 
  2311  019C                     	;# 
  2312  019D                     	;# 
  2313  019D                     	;# 
  2314  019D                     	;# 
  2315  019E                     	;# 
  2316  019E                     	;# 
  2317  019E                     	;# 
  2318  019F                     	;# 
  2319  019F                     	;# 
  2320  019F                     	;# 
  2321  019F                     	;# 
  2322  019F                     	;# 
  2323  020C                     	;# 
  2324  020D                     	;# 
  2325  020E                     	;# 
  2326  0211                     	;# 
  2327  0211                     	;# 
  2328  0212                     	;# 
  2329  0212                     	;# 
  2330  0213                     	;# 
  2331  0213                     	;# 
  2332  0214                     	;# 
  2333  0214                     	;# 
  2334  0215                     	;# 
  2335  0215                     	;# 
  2336  0215                     	;# 
  2337  0215                     	;# 
  2338  0216                     	;# 
  2339  0216                     	;# 
  2340  0217                     	;# 
  2341  0217                     	;# 
  2342  0219                     	;# 
  2343  021A                     	;# 
  2344  021B                     	;# 
  2345  021C                     	;# 
  2346  021D                     	;# 
  2347  021D                     	;# 
  2348  021E                     	;# 
  2349  021F                     	;# 
  2350  028C                     	;# 
  2351  028D                     	;# 
  2352  028E                     	;# 
  2353  0291                     	;# 
  2354  0291                     	;# 
  2355  0292                     	;# 
  2356  0293                     	;# 
  2357  0294                     	;# 
  2358  0295                     	;# 
  2359  0295                     	;# 
  2360  0296                     	;# 
  2361  0297                     	;# 
  2362  0298                     	;# 
  2363  029F                     	;# 
  2364  030C                     	;# 
  2365  030D                     	;# 
  2366  030E                     	;# 
  2367  0311                     	;# 
  2368  0311                     	;# 
  2369  0312                     	;# 
  2370  0313                     	;# 
  2371  0314                     	;# 
  2372  0315                     	;# 
  2373  0315                     	;# 
  2374  0316                     	;# 
  2375  0317                     	;# 
  2376  0318                     	;# 
  2377  038C                     	;# 
  2378  038D                     	;# 
  2379  038E                     	;# 
  2380  0391                     	;# 
  2381  0392                     	;# 
  2382  0393                     	;# 
  2383  0394                     	;# 
  2384  0395                     	;# 
  2385  0396                     	;# 
  2386  0397                     	;# 
  2387  0398                     	;# 
  2388  0399                     	;# 
  2389  039A                     	;# 
  2390  039C                     	;# 
  2391  039D                     	;# 
  2392  039E                     	;# 
  2393  039F                     	;# 
  2394  0411                     	;# 
  2395  0411                     	;# 
  2396  0412                     	;# 
  2397  0413                     	;# 
  2398  0414                     	;# 
  2399  0415                     	;# 
  2400  0416                     	;# 
  2401  0417                     	;# 
  2402  0418                     	;# 
  2403  0418                     	;# 
  2404  0419                     	;# 
  2405  041A                     	;# 
  2406  041B                     	;# 
  2407  041C                     	;# 
  2408  041D                     	;# 
  2409  041E                     	;# 
  2410  041F                     	;# 
  2411  0498                     	;# 
  2412  0498                     	;# 
  2413  0499                     	;# 
  2414  049A                     	;# 
  2415  049B                     	;# 
  2416  049B                     	;# 
  2417  049C                     	;# 
  2418  049D                     	;# 
  2419  049E                     	;# 
  2420  049F                     	;# 
  2421  0617                     	;# 
  2422  0618                     	;# 
  2423  0619                     	;# 
  2424  0619                     	;# 
  2425  061A                     	;# 
  2426  061B                     	;# 
  2427  061C                     	;# 
  2428  061C                     	;# 
  2429  061F                     	;# 
  2430  0691                     	;# 
  2431  0692                     	;# 
  2432  0693                     	;# 
  2433  0694                     	;# 
  2434  0695                     	;# 
  2435  0696                     	;# 
  2436  0697                     	;# 
  2437  0698                     	;# 
  2438  0699                     	;# 
  2439  0711                     	;# 
  2440  0712                     	;# 
  2441  0713                     	;# 
  2442  0714                     	;# 
  2443  0715                     	;# 
  2444  0716                     	;# 
  2445  0717                     	;# 
  2446  0718                     	;# 
  2447  0719                     	;# 
  2448  0891                     	;# 
  2449  0891                     	;# 
  2450  0891                     	;# 
  2451  0891                     	;# 
  2452  0891                     	;# 
  2453  0891                     	;# 
  2454  0892                     	;# 
  2455  0892                     	;# 
  2456  0892                     	;# 
  2457  0893                     	;# 
  2458  0893                     	;# 
  2459  0893                     	;# 
  2460  0893                     	;# 
  2461  0893                     	;# 
  2462  0893                     	;# 
  2463  0894                     	;# 
  2464  0894                     	;# 
  2465  0894                     	;# 
  2466  0895                     	;# 
  2467  0895                     	;# 
  2468  0895                     	;# 
  2469  0896                     	;# 
  2470  0896                     	;# 
  2471  0896                     	;# 
  2472  089B                     	;# 
  2473  0911                     	;# 
  2474  0912                     	;# 
  2475  0913                     	;# 
  2476  0914                     	;# 
  2477  0915                     	;# 
  2478  0916                     	;# 
  2479  0918                     	;# 
  2480  0919                     	;# 
  2481  091A                     	;# 
  2482  091B                     	;# 
  2483  091C                     	;# 
  2484  091D                     	;# 
  2485  091E                     	;# 
  2486  091F                     	;# 
  2487  0E0F                     	;# 
  2488  0E10                     	;# 
  2489  0E11                     	;# 
  2490  0E12                     	;# 
  2491  0E13                     	;# 
  2492  0E14                     	;# 
  2493  0E15                     	;# 
  2494  0E16                     	;# 
  2495  0E17                     	;# 
  2496  0E18                     	;# 
  2497  0E19                     	;# 
  2498  0E1A                     	;# 
  2499  0E1B                     	;# 
  2500  0E1C                     	;# 
  2501  0E1D                     	;# 
  2502  0E1E                     	;# 
  2503  0E1F                     	;# 
  2504  0E20                     	;# 
  2505  0E21                     	;# 
  2506  0E22                     	;# 
  2507  0E24                     	;# 
  2508  0E25                     	;# 
  2509  0E28                     	;# 
  2510  0E29                     	;# 
  2511  0E2A                     	;# 
  2512  0E2B                     	;# 
  2513  0E2C                     	;# 
  2514  0E2D                     	;# 
  2515  0E2E                     	;# 
  2516  0E2F                     	;# 
  2517  0E90                     	;# 
  2518  0E91                     	;# 
  2519  0E92                     	;# 
  2520  0E94                     	;# 
  2521  0E95                     	;# 
  2522  0E9C                     	;# 
  2523  0E9D                     	;# 
  2524  0E9E                     	;# 
  2525  0E9F                     	;# 
  2526  0EA0                     	;# 
  2527  0EA1                     	;# 
  2528  0EA2                     	;# 
  2529  0EA3                     	;# 
  2530  0EA4                     	;# 
  2531  0EA5                     	;# 
  2532  0EA6                     	;# 
  2533  0EA7                     	;# 
  2534  0F0F                     	;# 
  2535  0F10                     	;# 
  2536  0F11                     	;# 
  2537  0F12                     	;# 
  2538  0F13                     	;# 
  2539  0F14                     	;# 
  2540  0F15                     	;# 
  2541  0F16                     	;# 
  2542  0F17                     	;# 
  2543  0F18                     	;# 
  2544  0F19                     	;# 
  2545  0F1A                     	;# 
  2546  0F1B                     	;# 
  2547  0F1C                     	;# 
  2548  0F1D                     	;# 
  2549  0F1E                     	;# 
  2550  0F1F                     	;# 
  2551  0F20                     	;# 
  2552  0F21                     	;# 
  2553  0F22                     	;# 
  2554  0F23                     	;# 
  2555  0F24                     	;# 
  2556  0F25                     	;# 
  2557  0F26                     	;# 
  2558  0F27                     	;# 
  2559  0F28                     	;# 
  2560  0F29                     	;# 
  2561  0F2A                     	;# 
  2562  0F2B                     	;# 
  2563  0F2C                     	;# 
  2564  0F2D                     	;# 
  2565  0F2E                     	;# 
  2566  0F2F                     	;# 
  2567  0F30                     	;# 
  2568  0F31                     	;# 
  2569  0F32                     	;# 
  2570  0F33                     	;# 
  2571  0F34                     	;# 
  2572  0F35                     	;# 
  2573  0F36                     	;# 
  2574  0F37                     	;# 
  2575  0FE4                     	;# 
  2576  0FE5                     	;# 
  2577  0FE6                     	;# 
  2578  0FE7                     	;# 
  2579  0FE8                     	;# 
  2580  0FE9                     	;# 
  2581  0FEA                     	;# 
  2582  0FEB                     	;# 
  2583  0FED                     	;# 
  2584  0FEE                     	;# 
  2585  0FEF                     	;# 
  2586  0000                     	;# 
  2587  0001                     	;# 
  2588  0002                     	;# 
  2589  0003                     	;# 
  2590  0004                     	;# 
  2591  0005                     	;# 
  2592  0006                     	;# 
  2593  0007                     	;# 
  2594  0008                     	;# 
  2595  0009                     	;# 
  2596  000A                     	;# 
  2597  000B                     	;# 
  2598  000C                     	;# 
  2599  000D                     	;# 
  2600  000E                     	;# 
  2601  0010                     	;# 
  2602  0011                     	;# 
  2603  0012                     	;# 
  2604  0013                     	;# 
  2605  0014                     	;# 
  2606  0015                     	;# 
  2607  0015                     	;# 
  2608  0016                     	;# 
  2609  0016                     	;# 
  2610  0017                     	;# 
  2611  0018                     	;# 
  2612  0019                     	;# 
  2613  0019                     	;# 
  2614  001A                     	;# 
  2615  001B                     	;# 
  2616  001C                     	;# 
  2617  001D                     	;# 
  2618  001E                     	;# 
  2619  001F                     	;# 
  2620  008C                     	;# 
  2621  008D                     	;# 
  2622  008E                     	;# 
  2623  0090                     	;# 
  2624  0091                     	;# 
  2625  0092                     	;# 
  2626  0093                     	;# 
  2627  0094                     	;# 
  2628  0097                     	;# 
  2629  009B                     	;# 
  2630  009B                     	;# 
  2631  009C                     	;# 
  2632  009D                     	;# 
  2633  009E                     	;# 
  2634  009F                     	;# 
  2635  010C                     	;# 
  2636  010D                     	;# 
  2637  010E                     	;# 
  2638  0111                     	;# 
  2639  0112                     	;# 
  2640  0113                     	;# 
  2641  0114                     	;# 
  2642  0115                     	;# 
  2643  0116                     	;# 
  2644  0117                     	;# 
  2645  0118                     	;# 
  2646  0119                     	;# 
  2647  018C                     	;# 
  2648  018D                     	;# 
  2649  018E                     	;# 
  2650  0197                     	;# 
  2651  0199                     	;# 
  2652  0199                     	;# 
  2653  0199                     	;# 
  2654  019A                     	;# 
  2655  019A                     	;# 
  2656  019A                     	;# 
  2657  019B                     	;# 
  2658  019B                     	;# 
  2659  019B                     	;# 
  2660  019B                     	;# 
  2661  019B                     	;# 
  2662  019C                     	;# 
  2663  019C                     	;# 
  2664  019C                     	;# 
  2665  019D                     	;# 
  2666  019D                     	;# 
  2667  019D                     	;# 
  2668  019E                     	;# 
  2669  019E                     	;# 
  2670  019E                     	;# 
  2671  019F                     	;# 
  2672  019F                     	;# 
  2673  019F                     	;# 
  2674  019F                     	;# 
  2675  019F                     	;# 
  2676  020C                     	;# 
  2677  020D                     	;# 
  2678  020E                     	;# 
  2679  0211                     	;# 
  2680  0211                     	;# 
  2681  0212                     	;# 
  2682  0212                     	;# 
  2683  0213                     	;# 
  2684  0213                     	;# 
  2685  0214                     	;# 
  2686  0214                     	;# 
  2687  0215                     	;# 
  2688  0215                     	;# 
  2689  0215                     	;# 
  2690  0215                     	;# 
  2691  0216                     	;# 
  2692  0216                     	;# 
  2693  0217                     	;# 
  2694  0217                     	;# 
  2695  0219                     	;# 
  2696  021A                     	;# 
  2697  021B                     	;# 
  2698  021C                     	;# 
  2699  021D                     	;# 
  2700  021D                     	;# 
  2701  021E                     	;# 
  2702  021F                     	;# 
  2703  028C                     	;# 
  2704  028D                     	;# 
  2705  028E                     	;# 
  2706  0291                     	;# 
  2707  0291                     	;# 
  2708  0292                     	;# 
  2709  0293                     	;# 
  2710  0294                     	;# 
  2711  0295                     	;# 
  2712  0295                     	;# 
  2713  0296                     	;# 
  2714  0297                     	;# 
  2715  0298                     	;# 
  2716  029F                     	;# 
  2717  030C                     	;# 
  2718  030D                     	;# 
  2719  030E                     	;# 
  2720  0311                     	;# 
  2721  0311                     	;# 
  2722  0312                     	;# 
  2723  0313                     	;# 
  2724  0314                     	;# 
  2725  0315                     	;# 
  2726  0315                     	;# 
  2727  0316                     	;# 
  2728  0317                     	;# 
  2729  0318                     	;# 
  2730  038C                     	;# 
  2731  038D                     	;# 
  2732  038E                     	;# 
  2733  0391                     	;# 
  2734  0392                     	;# 
  2735  0393                     	;# 
  2736  0394                     	;# 
  2737  0395                     	;# 
  2738  0396                     	;# 
  2739  0397                     	;# 
  2740  0398                     	;# 
  2741  0399                     	;# 
  2742  039A                     	;# 
  2743  039C                     	;# 
  2744  039D                     	;# 
  2745  039E                     	;# 
  2746  039F                     	;# 
  2747  0411                     	;# 
  2748  0411                     	;# 
  2749  0412                     	;# 
  2750  0413                     	;# 
  2751  0414                     	;# 
  2752  0415                     	;# 
  2753  0416                     	;# 
  2754  0417                     	;# 
  2755  0418                     	;# 
  2756  0418                     	;# 
  2757  0419                     	;# 
  2758  041A                     	;# 
  2759  041B                     	;# 
  2760  041C                     	;# 
  2761  041D                     	;# 
  2762  041E                     	;# 
  2763  041F                     	;# 
  2764  0498                     	;# 
  2765  0498                     	;# 
  2766  0499                     	;# 
  2767  049A                     	;# 
  2768  049B                     	;# 
  2769  049B                     	;# 
  2770  049C                     	;# 
  2771  049D                     	;# 
  2772  049E                     	;# 
  2773  049F                     	;# 
  2774  0617                     	;# 
  2775  0618                     	;# 
  2776  0619                     	;# 
  2777  0619                     	;# 
  2778  061A                     	;# 
  2779  061B                     	;# 
  2780  061C                     	;# 
  2781  061C                     	;# 
  2782  061F                     	;# 
  2783  0691                     	;# 
  2784  0692                     	;# 
  2785  0693                     	;# 
  2786  0694                     	;# 
  2787  0695                     	;# 
  2788  0696                     	;# 
  2789  0697                     	;# 
  2790  0698                     	;# 
  2791  0699                     	;# 
  2792  0711                     	;# 
  2793  0712                     	;# 
  2794  0713                     	;# 
  2795  0714                     	;# 
  2796  0715                     	;# 
  2797  0716                     	;# 
  2798  0717                     	;# 
  2799  0718                     	;# 
  2800  0719                     	;# 
  2801  0891                     	;# 
  2802  0891                     	;# 
  2803  0891                     	;# 
  2804  0891                     	;# 
  2805  0891                     	;# 
  2806  0891                     	;# 
  2807  0892                     	;# 
  2808  0892                     	;# 
  2809  0892                     	;# 
  2810  0893                     	;# 
  2811  0893                     	;# 
  2812  0893                     	;# 
  2813  0893                     	;# 
  2814  0893                     	;# 
  2815  0893                     	;# 
  2816  0894                     	;# 
  2817  0894                     	;# 
  2818  0894                     	;# 
  2819  0895                     	;# 
  2820  0895                     	;# 
  2821  0895                     	;# 
  2822  0896                     	;# 
  2823  0896                     	;# 
  2824  0896                     	;# 
  2825  089B                     	;# 
  2826  0911                     	;# 
  2827  0912                     	;# 
  2828  0913                     	;# 
  2829  0914                     	;# 
  2830  0915                     	;# 
  2831  0916                     	;# 
  2832  0918                     	;# 
  2833  0919                     	;# 
  2834  091A                     	;# 
  2835  091B                     	;# 
  2836  091C                     	;# 
  2837  091D                     	;# 
  2838  091E                     	;# 
  2839  091F                     	;# 
  2840  0E0F                     	;# 
  2841  0E10                     	;# 
  2842  0E11                     	;# 
  2843  0E12                     	;# 
  2844  0E13                     	;# 
  2845  0E14                     	;# 
  2846  0E15                     	;# 
  2847  0E16                     	;# 
  2848  0E17                     	;# 
  2849  0E18                     	;# 
  2850  0E19                     	;# 
  2851  0E1A                     	;# 
  2852  0E1B                     	;# 
  2853  0E1C                     	;# 
  2854  0E1D                     	;# 
  2855  0E1E                     	;# 
  2856  0E1F                     	;# 
  2857  0E20                     	;# 
  2858  0E21                     	;# 
  2859  0E22                     	;# 
  2860  0E24                     	;# 
  2861  0E25                     	;# 
  2862  0E28                     	;# 
  2863  0E29                     	;# 
  2864  0E2A                     	;# 
  2865  0E2B                     	;# 
  2866  0E2C                     	;# 
  2867  0E2D                     	;# 
  2868  0E2E                     	;# 
  2869  0E2F                     	;# 
  2870  0E90                     	;# 
  2871  0E91                     	;# 
  2872  0E92                     	;# 
  2873  0E94                     	;# 
  2874  0E95                     	;# 
  2875  0E9C                     	;# 
  2876  0E9D                     	;# 
  2877  0E9E                     	;# 
  2878  0E9F                     	;# 
  2879  0EA0                     	;# 
  2880  0EA1                     	;# 
  2881  0EA2                     	;# 
  2882  0EA3                     	;# 
  2883  0EA4                     	;# 
  2884  0EA5                     	;# 
  2885  0EA6                     	;# 
  2886  0EA7                     	;# 
  2887  0F0F                     	;# 
  2888  0F10                     	;# 
  2889  0F11                     	;# 
  2890  0F12                     	;# 
  2891  0F13                     	;# 
  2892  0F14                     	;# 
  2893  0F15                     	;# 
  2894  0F16                     	;# 
  2895  0F17                     	;# 
  2896  0F18                     	;# 
  2897  0F19                     	;# 
  2898  0F1A                     	;# 
  2899  0F1B                     	;# 
  2900  0F1C                     	;# 
  2901  0F1D                     	;# 
  2902  0F1E                     	;# 
  2903  0F1F                     	;# 
  2904  0F20                     	;# 
  2905  0F21                     	;# 
  2906  0F22                     	;# 
  2907  0F23                     	;# 
  2908  0F24                     	;# 
  2909  0F25                     	;# 
  2910  0F26                     	;# 
  2911  0F27                     	;# 
  2912  0F28                     	;# 
  2913  0F29                     	;# 
  2914  0F2A                     	;# 
  2915  0F2B                     	;# 
  2916  0F2C                     	;# 
  2917  0F2D                     	;# 
  2918  0F2E                     	;# 
  2919  0F2F                     	;# 
  2920  0F30                     	;# 
  2921  0F31                     	;# 
  2922  0F32                     	;# 
  2923  0F33                     	;# 
  2924  0F34                     	;# 
  2925  0F35                     	;# 
  2926  0F36                     	;# 
  2927  0F37                     	;# 
  2928  0FE4                     	;# 
  2929  0FE5                     	;# 
  2930  0FE6                     	;# 
  2931  0FE7                     	;# 
  2932  0FE8                     	;# 
  2933  0FE9                     	;# 
  2934  0FEA                     	;# 
  2935  0FEB                     	;# 
  2936  0FED                     	;# 
  2937  0FEE                     	;# 
  2938  0FEF                     	;# 
  2939  0000                     	;# 
  2940  0001                     	;# 
  2941  0002                     	;# 
  2942  0003                     	;# 
  2943  0004                     	;# 
  2944  0005                     	;# 
  2945  0006                     	;# 
  2946  0007                     	;# 
  2947  0008                     	;# 
  2948  0009                     	;# 
  2949  000A                     	;# 
  2950  000B                     	;# 
  2951  000C                     	;# 
  2952  000D                     	;# 
  2953  000E                     	;# 
  2954  0010                     	;# 
  2955  0011                     	;# 
  2956  0012                     	;# 
  2957  0013                     	;# 
  2958  0014                     	;# 
  2959  0015                     	;# 
  2960  0015                     	;# 
  2961  0016                     	;# 
  2962  0016                     	;# 
  2963  0017                     	;# 
  2964  0018                     	;# 
  2965  0019                     	;# 
  2966  0019                     	;# 
  2967  001A                     	;# 
  2968  001B                     	;# 
  2969  001C                     	;# 
  2970  001D                     	;# 
  2971  001E                     	;# 
  2972  001F                     	;# 
  2973  008C                     	;# 
  2974  008D                     	;# 
  2975  008E                     	;# 
  2976  0090                     	;# 
  2977  0091                     	;# 
  2978  0092                     	;# 
  2979  0093                     	;# 
  2980  0094                     	;# 
  2981  0097                     	;# 
  2982  009B                     	;# 
  2983  009B                     	;# 
  2984  009C                     	;# 
  2985  009D                     	;# 
  2986  009E                     	;# 
  2987  009F                     	;# 
  2988  010C                     	;# 
  2989  010D                     	;# 
  2990  010E                     	;# 
  2991  0111                     	;# 
  2992  0112                     	;# 
  2993  0113                     	;# 
  2994  0114                     	;# 
  2995  0115                     	;# 
  2996  0116                     	;# 
  2997  0117                     	;# 
  2998  0118                     	;# 
  2999  0119                     	;# 
  3000  018C                     	;# 
  3001  018D                     	;# 
  3002  018E                     	;# 
  3003  0197                     	;# 
  3004  0199                     	;# 
  3005  0199                     	;# 
  3006  0199                     	;# 
  3007  019A                     	;# 
  3008  019A                     	;# 
  3009  019A                     	;# 
  3010  019B                     	;# 
  3011  019B                     	;# 
  3012  019B                     	;# 
  3013  019B                     	;# 
  3014  019B                     	;# 
  3015  019C                     	;# 
  3016  019C                     	;# 
  3017  019C                     	;# 
  3018  019D                     	;# 
  3019  019D                     	;# 
  3020  019D                     	;# 
  3021  019E                     	;# 
  3022  019E                     	;# 
  3023  019E                     	;# 
  3024  019F                     	;# 
  3025  019F                     	;# 
  3026  019F                     	;# 
  3027  019F                     	;# 
  3028  019F                     	;# 
  3029  020C                     	;# 
  3030  020D                     	;# 
  3031  020E                     	;# 
  3032  0211                     	;# 
  3033  0211                     	;# 
  3034  0212                     	;# 
  3035  0212                     	;# 
  3036  0213                     	;# 
  3037  0213                     	;# 
  3038  0214                     	;# 
  3039  0214                     	;# 
  3040  0215                     	;# 
  3041  0215                     	;# 
  3042  0215                     	;# 
  3043  0215                     	;# 
  3044  0216                     	;# 
  3045  0216                     	;# 
  3046  0217                     	;# 
  3047  0217                     	;# 
  3048  0219                     	;# 
  3049  021A                     	;# 
  3050  021B                     	;# 
  3051  021C                     	;# 
  3052  021D                     	;# 
  3053  021D                     	;# 
  3054  021E                     	;# 
  3055  021F                     	;# 
  3056  028C                     	;# 
  3057  028D                     	;# 
  3058  028E                     	;# 
  3059  0291                     	;# 
  3060  0291                     	;# 
  3061  0292                     	;# 
  3062  0293                     	;# 
  3063  0294                     	;# 
  3064  0295                     	;# 
  3065  0295                     	;# 
  3066  0296                     	;# 
  3067  0297                     	;# 
  3068  0298                     	;# 
  3069  029F                     	;# 
  3070  030C                     	;# 
  3071  030D                     	;# 
  3072  030E                     	;# 
  3073  0311                     	;# 
  3074  0311                     	;# 
  3075  0312                     	;# 
  3076  0313                     	;# 
  3077  0314                     	;# 
  3078  0315                     	;# 
  3079  0315                     	;# 
  3080  0316                     	;# 
  3081  0317                     	;# 
  3082  0318                     	;# 
  3083  038C                     	;# 
  3084  038D                     	;# 
  3085  038E                     	;# 
  3086  0391                     	;# 
  3087  0392                     	;# 
  3088  0393                     	;# 
  3089  0394                     	;# 
  3090  0395                     	;# 
  3091  0396                     	;# 
  3092  0397                     	;# 
  3093  0398                     	;# 
  3094  0399                     	;# 
  3095  039A                     	;# 
  3096  039C                     	;# 
  3097  039D                     	;# 
  3098  039E                     	;# 
  3099  039F                     	;# 
  3100  0411                     	;# 
  3101  0411                     	;# 
  3102  0412                     	;# 
  3103  0413                     	;# 
  3104  0414                     	;# 
  3105  0415                     	;# 
  3106  0416                     	;# 
  3107  0417                     	;# 
  3108  0418                     	;# 
  3109  0418                     	;# 
  3110  0419                     	;# 
  3111  041A                     	;# 
  3112  041B                     	;# 
  3113  041C                     	;# 
  3114  041D                     	;# 
  3115  041E                     	;# 
  3116  041F                     	;# 
  3117  0498                     	;# 
  3118  0498                     	;# 
  3119  0499                     	;# 
  3120  049A                     	;# 
  3121  049B                     	;# 
  3122  049B                     	;# 
  3123  049C                     	;# 
  3124  049D                     	;# 
  3125  049E                     	;# 
  3126  049F                     	;# 
  3127  0617                     	;# 
  3128  0618                     	;# 
  3129  0619                     	;# 
  3130  0619                     	;# 
  3131  061A                     	;# 
  3132  061B                     	;# 
  3133  061C                     	;# 
  3134  061C                     	;# 
  3135  061F                     	;# 
  3136  0691                     	;# 
  3137  0692                     	;# 
  3138  0693                     	;# 
  3139  0694                     	;# 
  3140  0695                     	;# 
  3141  0696                     	;# 
  3142  0697                     	;# 
  3143  0698                     	;# 
  3144  0699                     	;# 
  3145  0711                     	;# 
  3146  0712                     	;# 
  3147  0713                     	;# 
  3148  0714                     	;# 
  3149  0715                     	;# 
  3150  0716                     	;# 
  3151  0717                     	;# 
  3152  0718                     	;# 
  3153  0719                     	;# 
  3154  0891                     	;# 
  3155  0891                     	;# 
  3156  0891                     	;# 
  3157  0891                     	;# 
  3158  0891                     	;# 
  3159  0891                     	;# 
  3160  0892                     	;# 
  3161  0892                     	;# 
  3162  0892                     	;# 
  3163  0893                     	;# 
  3164  0893                     	;# 
  3165  0893                     	;# 
  3166  0893                     	;# 
  3167  0893                     	;# 
  3168  0893                     	;# 
  3169  0894                     	;# 
  3170  0894                     	;# 
  3171  0894                     	;# 
  3172  0895                     	;# 
  3173  0895                     	;# 
  3174  0895                     	;# 
  3175  0896                     	;# 
  3176  0896                     	;# 
  3177  0896                     	;# 
  3178  089B                     	;# 
  3179  0911                     	;# 
  3180  0912                     	;# 
  3181  0913                     	;# 
  3182  0914                     	;# 
  3183  0915                     	;# 
  3184  0916                     	;# 
  3185  0918                     	;# 
  3186  0919                     	;# 
  3187  091A                     	;# 
  3188  091B                     	;# 
  3189  091C                     	;# 
  3190  091D                     	;# 
  3191  091E                     	;# 
  3192  091F                     	;# 
  3193  0E0F                     	;# 
  3194  0E10                     	;# 
  3195  0E11                     	;# 
  3196  0E12                     	;# 
  3197  0E13                     	;# 
  3198  0E14                     	;# 
  3199  0E15                     	;# 
  3200  0E16                     	;# 
  3201  0E17                     	;# 
  3202  0E18                     	;# 
  3203  0E19                     	;# 
  3204  0E1A                     	;# 
  3205  0E1B                     	;# 
  3206  0E1C                     	;# 
  3207  0E1D                     	;# 
  3208  0E1E                     	;# 
  3209  0E1F                     	;# 
  3210  0E20                     	;# 
  3211  0E21                     	;# 
  3212  0E22                     	;# 
  3213  0E24                     	;# 
  3214  0E25                     	;# 
  3215  0E28                     	;# 
  3216  0E29                     	;# 
  3217  0E2A                     	;# 
  3218  0E2B                     	;# 
  3219  0E2C                     	;# 
  3220  0E2D                     	;# 
  3221  0E2E                     	;# 
  3222  0E2F                     	;# 
  3223  0E90                     	;# 
  3224  0E91                     	;# 
  3225  0E92                     	;# 
  3226  0E94                     	;# 
  3227  0E95                     	;# 
  3228  0E9C                     	;# 
  3229  0E9D                     	;# 
  3230  0E9E                     	;# 
  3231  0E9F                     	;# 
  3232  0EA0                     	;# 
  3233  0EA1                     	;# 
  3234  0EA2                     	;# 
  3235  0EA3                     	;# 
  3236  0EA4                     	;# 
  3237  0EA5                     	;# 
  3238  0EA6                     	;# 
  3239  0EA7                     	;# 
  3240  0F0F                     	;# 
  3241  0F10                     	;# 
  3242  0F11                     	;# 
  3243  0F12                     	;# 
  3244  0F13                     	;# 
  3245  0F14                     	;# 
  3246  0F15                     	;# 
  3247  0F16                     	;# 
  3248  0F17                     	;# 
  3249  0F18                     	;# 
  3250  0F19                     	;# 
  3251  0F1A                     	;# 
  3252  0F1B                     	;# 
  3253  0F1C                     	;# 
  3254  0F1D                     	;# 
  3255  0F1E                     	;# 
  3256  0F1F                     	;# 
  3257  0F20                     	;# 
  3258  0F21                     	;# 
  3259  0F22                     	;# 
  3260  0F23                     	;# 
  3261  0F24                     	;# 
  3262  0F25                     	;# 
  3263  0F26                     	;# 
  3264  0F27                     	;# 
  3265  0F28                     	;# 
  3266  0F29                     	;# 
  3267  0F2A                     	;# 
  3268  0F2B                     	;# 
  3269  0F2C                     	;# 
  3270  0F2D                     	;# 
  3271  0F2E                     	;# 
  3272  0F2F                     	;# 
  3273  0F30                     	;# 
  3274  0F31                     	;# 
  3275  0F32                     	;# 
  3276  0F33                     	;# 
  3277  0F34                     	;# 
  3278  0F35                     	;# 
  3279  0F36                     	;# 
  3280  0F37                     	;# 
  3281  0FE4                     	;# 
  3282  0FE5                     	;# 
  3283  0FE6                     	;# 
  3284  0FE7                     	;# 
  3285  0FE8                     	;# 
  3286  0FE9                     	;# 
  3287  0FEA                     	;# 
  3288  0FEB                     	;# 
  3289  0FED                     	;# 
  3290  0FEE                     	;# 
  3291  0FEF                     	;# 
  3292  0000                     	;# 
  3293  0001                     	;# 
  3294  0002                     	;# 
  3295  0003                     	;# 
  3296  0004                     	;# 
  3297  0005                     	;# 
  3298  0006                     	;# 
  3299  0007                     	;# 
  3300  0008                     	;# 
  3301  0009                     	;# 
  3302  000A                     	;# 
  3303  000B                     	;# 
  3304  000C                     	;# 
  3305  000D                     	;# 
  3306  000E                     	;# 
  3307  0010                     	;# 
  3308  0011                     	;# 
  3309  0012                     	;# 
  3310  0013                     	;# 
  3311  0014                     	;# 
  3312  0015                     	;# 
  3313  0015                     	;# 
  3314  0016                     	;# 
  3315  0016                     	;# 
  3316  0017                     	;# 
  3317  0018                     	;# 
  3318  0019                     	;# 
  3319  0019                     	;# 
  3320  001A                     	;# 
  3321  001B                     	;# 
  3322  001C                     	;# 
  3323  001D                     	;# 
  3324  001E                     	;# 
  3325  001F                     	;# 
  3326  008C                     	;# 
  3327  008D                     	;# 
  3328  008E                     	;# 
  3329  0090                     	;# 
  3330  0091                     	;# 
  3331  0092                     	;# 
  3332  0093                     	;# 
  3333  0094                     	;# 
  3334  0097                     	;# 
  3335  009B                     	;# 
  3336  009B                     	;# 
  3337  009C                     	;# 
  3338  009D                     	;# 
  3339  009E                     	;# 
  3340  009F                     	;# 
  3341  010C                     	;# 
  3342  010D                     	;# 
  3343  010E                     	;# 
  3344  0111                     	;# 
  3345  0112                     	;# 
  3346  0113                     	;# 
  3347  0114                     	;# 
  3348  0115                     	;# 
  3349  0116                     	;# 
  3350  0117                     	;# 
  3351  0118                     	;# 
  3352  0119                     	;# 
  3353  018C                     	;# 
  3354  018D                     	;# 
  3355  018E                     	;# 
  3356  0197                     	;# 
  3357  0199                     	;# 
  3358  0199                     	;# 
  3359  0199                     	;# 
  3360  019A                     	;# 
  3361  019A                     	;# 
  3362  019A                     	;# 
  3363  019B                     	;# 
  3364  019B                     	;# 
  3365  019B                     	;# 
  3366  019B                     	;# 
  3367  019B                     	;# 
  3368  019C                     	;# 
  3369  019C                     	;# 
  3370  019C                     	;# 
  3371  019D                     	;# 
  3372  019D                     	;# 
  3373  019D                     	;# 
  3374  019E                     	;# 
  3375  019E                     	;# 
  3376  019E                     	;# 
  3377  019F                     	;# 
  3378  019F                     	;# 
  3379  019F                     	;# 
  3380  019F                     	;# 
  3381  019F                     	;# 
  3382  020C                     	;# 
  3383  020D                     	;# 
  3384  020E                     	;# 
  3385  0211                     	;# 
  3386  0211                     	;# 
  3387  0212                     	;# 
  3388  0212                     	;# 
  3389  0213                     	;# 
  3390  0213                     	;# 
  3391  0214                     	;# 
  3392  0214                     	;# 
  3393  0215                     	;# 
  3394  0215                     	;# 
  3395  0215                     	;# 
  3396  0215                     	;# 
  3397  0216                     	;# 
  3398  0216                     	;# 
  3399  0217                     	;# 
  3400  0217                     	;# 
  3401  0219                     	;# 
  3402  021A                     	;# 
  3403  021B                     	;# 
  3404  021C                     	;# 
  3405  021D                     	;# 
  3406  021D                     	;# 
  3407  021E                     	;# 
  3408  021F                     	;# 
  3409  028C                     	;# 
  3410  028D                     	;# 
  3411  028E                     	;# 
  3412  0291                     	;# 
  3413  0291                     	;# 
  3414  0292                     	;# 
  3415  0293                     	;# 
  3416  0294                     	;# 
  3417  0295                     	;# 
  3418  0295                     	;# 
  3419  0296                     	;# 
  3420  0297                     	;# 
  3421  0298                     	;# 
  3422  029F                     	;# 
  3423  030C                     	;# 
  3424  030D                     	;# 
  3425  030E                     	;# 
  3426  0311                     	;# 
  3427  0311                     	;# 
  3428  0312                     	;# 
  3429  0313                     	;# 
  3430  0314                     	;# 
  3431  0315                     	;# 
  3432  0315                     	;# 
  3433  0316                     	;# 
  3434  0317                     	;# 
  3435  0318                     	;# 
  3436  038C                     	;# 
  3437  038D                     	;# 
  3438  038E                     	;# 
  3439  0391                     	;# 
  3440  0392                     	;# 
  3441  0393                     	;# 
  3442  0394                     	;# 
  3443  0395                     	;# 
  3444  0396                     	;# 
  3445  0397                     	;# 
  3446  0398                     	;# 
  3447  0399                     	;# 
  3448  039A                     	;# 
  3449  039C                     	;# 
  3450  039D                     	;# 
  3451  039E                     	;# 
  3452  039F                     	;# 
  3453  0411                     	;# 
  3454  0411                     	;# 
  3455  0412                     	;# 
  3456  0413                     	;# 
  3457  0414                     	;# 
  3458  0415                     	;# 
  3459  0416                     	;# 
  3460  0417                     	;# 
  3461  0418                     	;# 
  3462  0418                     	;# 
  3463  0419                     	;# 
  3464  041A                     	;# 
  3465  041B                     	;# 
  3466  041C                     	;# 
  3467  041D                     	;# 
  3468  041E                     	;# 
  3469  041F                     	;# 
  3470  0498                     	;# 
  3471  0498                     	;# 
  3472  0499                     	;# 
  3473  049A                     	;# 
  3474  049B                     	;# 
  3475  049B                     	;# 
  3476  049C                     	;# 
  3477  049D                     	;# 
  3478  049E                     	;# 
  3479  049F                     	;# 
  3480  0617                     	;# 
  3481  0618                     	;# 
  3482  0619                     	;# 
  3483  0619                     	;# 
  3484  061A                     	;# 
  3485  061B                     	;# 
  3486  061C                     	;# 
  3487  061C                     	;# 
  3488  061F                     	;# 
  3489  0691                     	;# 
  3490  0692                     	;# 
  3491  0693                     	;# 
  3492  0694                     	;# 
  3493  0695                     	;# 
  3494  0696                     	;# 
  3495  0697                     	;# 
  3496  0698                     	;# 
  3497  0699                     	;# 
  3498  0711                     	;# 
  3499  0712                     	;# 
  3500  0713                     	;# 
  3501  0714                     	;# 
  3502  0715                     	;# 
  3503  0716                     	;# 
  3504  0717                     	;# 
  3505  0718                     	;# 
  3506  0719                     	;# 
  3507  0891                     	;# 
  3508  0891                     	;# 
  3509  0891                     	;# 
  3510  0891                     	;# 
  3511  0891                     	;# 
  3512  0891                     	;# 
  3513  0892                     	;# 
  3514  0892                     	;# 
  3515  0892                     	;# 
  3516  0893                     	;# 
  3517  0893                     	;# 
  3518  0893                     	;# 
  3519  0893                     	;# 
  3520  0893                     	;# 
  3521  0893                     	;# 
  3522  0894                     	;# 
  3523  0894                     	;# 
  3524  0894                     	;# 
  3525  0895                     	;# 
  3526  0895                     	;# 
  3527  0895                     	;# 
  3528  0896                     	;# 
  3529  0896                     	;# 
  3530  0896                     	;# 
  3531  089B                     	;# 
  3532  0911                     	;# 
  3533  0912                     	;# 
  3534  0913                     	;# 
  3535  0914                     	;# 
  3536  0915                     	;# 
  3537  0916                     	;# 
  3538  0918                     	;# 
  3539  0919                     	;# 
  3540  091A                     	;# 
  3541  091B                     	;# 
  3542  091C                     	;# 
  3543  091D                     	;# 
  3544  091E                     	;# 
  3545  091F                     	;# 
  3546  0E0F                     	;# 
  3547  0E10                     	;# 
  3548  0E11                     	;# 
  3549  0E12                     	;# 
  3550  0E13                     	;# 
  3551  0E14                     	;# 
  3552  0E15                     	;# 
  3553  0E16                     	;# 
  3554  0E17                     	;# 
  3555  0E18                     	;# 
  3556  0E19                     	;# 
  3557  0E1A                     	;# 
  3558  0E1B                     	;# 
  3559  0E1C                     	;# 
  3560  0E1D                     	;# 
  3561  0E1E                     	;# 
  3562  0E1F                     	;# 
  3563  0E20                     	;# 
  3564  0E21                     	;# 
  3565  0E22                     	;# 
  3566  0E24                     	;# 
  3567  0E25                     	;# 
  3568  0E28                     	;# 
  3569  0E29                     	;# 
  3570  0E2A                     	;# 
  3571  0E2B                     	;# 
  3572  0E2C                     	;# 
  3573  0E2D                     	;# 
  3574  0E2E                     	;# 
  3575  0E2F                     	;# 
  3576  0E90                     	;# 
  3577  0E91                     	;# 
  3578  0E92                     	;# 
  3579  0E94                     	;# 
  3580  0E95                     	;# 
  3581  0E9C                     	;# 
  3582  0E9D                     	;# 
  3583  0E9E                     	;# 
  3584  0E9F                     	;# 
  3585  0EA0                     	;# 
  3586  0EA1                     	;# 
  3587  0EA2                     	;# 
  3588  0EA3                     	;# 
  3589  0EA4                     	;# 
  3590  0EA5                     	;# 
  3591  0EA6                     	;# 
  3592  0EA7                     	;# 
  3593  0F0F                     	;# 
  3594  0F10                     	;# 
  3595  0F11                     	;# 
  3596  0F12                     	;# 
  3597  0F13                     	;# 
  3598  0F14                     	;# 
  3599  0F15                     	;# 
  3600  0F16                     	;# 
  3601  0F17                     	;# 
  3602  0F18                     	;# 
  3603  0F19                     	;# 
  3604  0F1A                     	;# 
  3605  0F1B                     	;# 
  3606  0F1C                     	;# 
  3607  0F1D                     	;# 
  3608  0F1E                     	;# 
  3609  0F1F                     	;# 
  3610  0F20                     	;# 
  3611  0F21                     	;# 
  3612  0F22                     	;# 
  3613  0F23                     	;# 
  3614  0F24                     	;# 
  3615  0F25                     	;# 
  3616  0F26                     	;# 
  3617  0F27                     	;# 
  3618  0F28                     	;# 
  3619  0F29                     	;# 
  3620  0F2A                     	;# 
  3621  0F2B                     	;# 
  3622  0F2C                     	;# 
  3623  0F2D                     	;# 
  3624  0F2E                     	;# 
  3625  0F2F                     	;# 
  3626  0F30                     	;# 
  3627  0F31                     	;# 
  3628  0F32                     	;# 
  3629  0F33                     	;# 
  3630  0F34                     	;# 
  3631  0F35                     	;# 
  3632  0F36                     	;# 
  3633  0F37                     	;# 
  3634  0FE4                     	;# 
  3635  0FE5                     	;# 
  3636  0FE6                     	;# 
  3637  0FE7                     	;# 
  3638  0FE8                     	;# 
  3639  0FE9                     	;# 
  3640  0FEA                     	;# 
  3641  0FEB                     	;# 
  3642  0FED                     	;# 
  3643  0FEE                     	;# 
  3644  0FEF                     	;# 
  3645                           
  3646                           	psect	eeprom_data
  3647  0000  0000 0000 0000 0000 0001 0045 0043 004F 	db	0,0,0,0,1,69,67,79	;# 
  3648  0008  0042 004F 0054 0020 004C 0043 0043 002E 	db	66,79,84,32,76,67,67,46	;# 
  3649  0010  0000 0000 0000 0000 0002 0000 0000 0000 	db	0,0,0,0,2,0,0,0	;# 
  3650  0018  0001 0000 0000 0000 0000 0002 0000 0000 	db	1,0,0,0,0,2,0,0	;# 
  3651  0020  0000 0001 0000 0000 0000 0000 0003 0003 	db	0,1,0,0,0,0,3,3	;# 
  3652  0028  0001 0000 0028 0003 0002 0000 0064 0003 	db	1,0,40,3,2,0,100,3	;# 
  3653  0030  0003 0000 0048 0003 0004 0000 00C8 0003 	db	3,0,72,3,4,0,200,3	;# 
  3654  0038  0005 0000 0000 0003 0006 0000 0052 0003 	db	5,0,0,3,6,0,82,3	;# 
  3655  0040  0007 0000 0000 0002 0008 0000 0002 0009 	db	7,0,0,2,8,0,2,9	;# 
  3656  0048  0000 0002 000A 0001 0003 000B 0000 0000 	db	0,2,10,1,3,11,0,0	;# 
  3657  0050  0003 000C 0000 0000 0003 000D 0000 00B4 	db	3,12,0,0,3,13,0,180	;# 
  3658  0058  0003 000E 0000 0000 0003 000F 0000 0000 	db	3,14,0,0,3,15,0,0	;# 
  3659  0060  0003 0010 0000 0000 0003 0011 0000 0000 	db	3,16,0,0,3,17,0,0	;# 
  3660  0068  0003 0012 0000 0000 0003 0013 0000 0000 	db	3,18,0,0,3,19,0,0	;# 
  3661  0070  0000 0000 0000 0000 00FE 0000 0000 0000 	db	0,0,0,0,254,0,0,0	;# 
  3662  0078  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3663  0080  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3664  0088  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3665  0090  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3666  0098  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3667  00A0  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3668  00A8  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3669  00B0  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3670  00B8  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3671  00C0  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3672  00C8  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3673  00D0  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3674  00D8  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3675  00E0  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3676  00E8  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3677  00F0  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3678  0000                     	;# 
  3679  0001                     	;# 
  3680  0002                     	;# 
  3681  0003                     	;# 
  3682  0004                     	;# 
  3683  0005                     	;# 
  3684  0006                     	;# 
  3685  0007                     	;# 
  3686  0008                     	;# 
  3687  0009                     	;# 
  3688  000A                     	;# 
  3689  000B                     	;# 
  3690  000C                     	;# 
  3691  000D                     	;# 
  3692  000E                     	;# 
  3693  0010                     	;# 
  3694  0011                     	;# 
  3695  0012                     	;# 
  3696  0013                     	;# 
  3697  0014                     	;# 
  3698  0015                     	;# 
  3699  0015                     	;# 
  3700  0016                     	;# 
  3701  0016                     	;# 
  3702  0017                     	;# 
  3703  0018                     	;# 
  3704  0019                     	;# 
  3705  0019                     	;# 
  3706  001A                     	;# 
  3707  001B                     	;# 
  3708  001C                     	;# 
  3709  001D                     	;# 
  3710  001E                     	;# 
  3711  001F                     	;# 
  3712  008C                     	;# 
  3713  008D                     	;# 
  3714  008E                     	;# 
  3715  0090                     	;# 
  3716  0091                     	;# 
  3717  0092                     	;# 
  3718  0093                     	;# 
  3719  0094                     	;# 
  3720  0097                     	;# 
  3721  009B                     	;# 
  3722  009B                     	;# 
  3723  009C                     	;# 
  3724  009D                     	;# 
  3725  009E                     	;# 
  3726  009F                     	;# 
  3727  010C                     	;# 
  3728  010D                     	;# 
  3729  010E                     	;# 
  3730  0111                     	;# 
  3731  0112                     	;# 
  3732  0113                     	;# 
  3733  0114                     	;# 
  3734  0115                     	;# 
  3735  0116                     	;# 
  3736  0117                     	;# 
  3737  0118                     	;# 
  3738  0119                     	;# 
  3739  018C                     	;# 
  3740  018D                     	;# 
  3741  018E                     	;# 
  3742  0197                     	;# 
  3743  0199                     	;# 
  3744  0199                     	;# 
  3745  0199                     	;# 
  3746  019A                     	;# 
  3747  019A                     	;# 
  3748  019A                     	;# 
  3749  019B                     	;# 
  3750  019B                     	;# 
  3751  019B                     	;# 
  3752  019B                     	;# 
  3753  019B                     	;# 
  3754  019C                     	;# 
  3755  019C                     	;# 
  3756  019C                     	;# 
  3757  019D                     	;# 
  3758  019D                     	;# 
  3759  019D                     	;# 
  3760  019E                     	;# 
  3761  019E                     	;# 
  3762  019E                     	;# 
  3763  019F                     	;# 
  3764  019F                     	;# 
  3765  019F                     	;# 
  3766  019F                     	;# 
  3767  019F                     	;# 
  3768  020C                     	;# 
  3769  020D                     	;# 
  3770  020E                     	;# 
  3771  0211                     	;# 
  3772  0211                     	;# 
  3773  0212                     	;# 
  3774  0212                     	;# 
  3775  0213                     	;# 
  3776  0213                     	;# 
  3777  0214                     	;# 
  3778  0214                     	;# 
  3779  0215                     	;# 
  3780  0215                     	;# 
  3781  0215                     	;# 
  3782  0215                     	;# 
  3783  0216                     	;# 
  3784  0216                     	;# 
  3785  0217                     	;# 
  3786  0217                     	;# 
  3787  0219                     	;# 
  3788  021A                     	;# 
  3789  021B                     	;# 
  3790  021C                     	;# 
  3791  021D                     	;# 
  3792  021D                     	;# 
  3793  021E                     	;# 
  3794  021F                     	;# 
  3795  028C                     	;# 
  3796  028D                     	;# 
  3797  028E                     	;# 
  3798  0291                     	;# 
  3799  0291                     	;# 
  3800  0292                     	;# 
  3801  0293                     	;# 
  3802  0294                     	;# 
  3803  0295                     	;# 
  3804  0295                     	;# 
  3805  0296                     	;# 
  3806  0297                     	;# 
  3807  0298                     	;# 
  3808  029F                     	;# 
  3809  030C                     	;# 
  3810  030D                     	;# 
  3811  030E                     	;# 
  3812  0311                     	;# 
  3813  0311                     	;# 
  3814  0312                     	;# 
  3815  0313                     	;# 
  3816  0314                     	;# 
  3817  0315                     	;# 
  3818  0315                     	;# 
  3819  0316                     	;# 
  3820  0317                     	;# 
  3821  0318                     	;# 
  3822  038C                     	;# 
  3823  038D                     	;# 
  3824  038E                     	;# 
  3825  0391                     	;# 
  3826  0392                     	;# 
  3827  0393                     	;# 
  3828  0394                     	;# 
  3829  0395                     	;# 
  3830  0396                     	;# 
  3831  0397                     	;# 
  3832  0398                     	;# 
  3833  0399                     	;# 
  3834  039A                     	;# 
  3835  039C                     	;# 
  3836  039D                     	;# 
  3837  039E                     	;# 
  3838  039F                     	;# 
  3839  0411                     	;# 
  3840  0411                     	;# 
  3841  0412                     	;# 
  3842  0413                     	;# 
  3843  0414                     	;# 
  3844  0415                     	;# 
  3845  0416                     	;# 
  3846  0417                     	;# 
  3847  0418                     	;# 
  3848  0418                     	;# 
  3849  0419                     	;# 
  3850  041A                     	;# 
  3851  041B                     	;# 
  3852  041C                     	;# 
  3853  041D                     	;# 
  3854  041E                     	;# 
  3855  041F                     	;# 
  3856  0498                     	;# 
  3857  0498                     	;# 
  3858  0499                     	;# 
  3859  049A                     	;# 
  3860  049B                     	;# 
  3861  049B                     	;# 
  3862  049C                     	;# 
  3863  049D                     	;# 
  3864  049E                     	;# 
  3865  049F                     	;# 
  3866  0617                     	;# 
  3867  0618                     	;# 
  3868  0619                     	;# 
  3869  0619                     	;# 
  3870  061A                     	;# 
  3871  061B                     	;# 
  3872  061C                     	;# 
  3873  061C                     	;# 
  3874  061F                     	;# 
  3875  0691                     	;# 
  3876  0692                     	;# 
  3877  0693                     	;# 
  3878  0694                     	;# 
  3879  0695                     	;# 
  3880  0696                     	;# 
  3881  0697                     	;# 
  3882  0698                     	;# 
  3883  0699                     	;# 
  3884  0711                     	;# 
  3885  0712                     	;# 
  3886  0713                     	;# 
  3887  0714                     	;# 
  3888  0715                     	;# 
  3889  0716                     	;# 
  3890  0717                     	;# 
  3891  0718                     	;# 
  3892  0719                     	;# 
  3893  0891                     	;# 
  3894  0891                     	;# 
  3895  0891                     	;# 
  3896  0891                     	;# 
  3897  0891                     	;# 
  3898  0891                     	;# 
  3899  0892                     	;# 
  3900  0892                     	;# 
  3901  0892                     	;# 
  3902  0893                     	;# 
  3903  0893                     	;# 
  3904  0893                     	;# 
  3905  0893                     	;# 
  3906  0893                     	;# 
  3907  0893                     	;# 
  3908  0894                     	;# 
  3909  0894                     	;# 
  3910  0894                     	;# 
  3911  0895                     	;# 
  3912  0895                     	;# 
  3913  0895                     	;# 
  3914  0896                     	;# 
  3915  0896                     	;# 
  3916  0896                     	;# 
  3917  089B                     	;# 
  3918  0911                     	;# 
  3919  0912                     	;# 
  3920  0913                     	;# 
  3921  0914                     	;# 
  3922  0915                     	;# 
  3923  0916                     	;# 
  3924  0918                     	;# 
  3925  0919                     	;# 
  3926  091A                     	;# 
  3927  091B                     	;# 
  3928  091C                     	;# 
  3929  091D                     	;# 
  3930  091E                     	;# 
  3931  091F                     	;# 
  3932  0E0F                     	;# 
  3933  0E10                     	;# 
  3934  0E11                     	;# 
  3935  0E12                     	;# 
  3936  0E13                     	;# 
  3937  0E14                     	;# 
  3938  0E15                     	;# 
  3939  0E16                     	;# 
  3940  0E17                     	;# 
  3941  0E18                     	;# 
  3942  0E19                     	;# 
  3943  0E1A                     	;# 
  3944  0E1B                     	;# 
  3945  0E1C                     	;# 
  3946  0E1D                     	;# 
  3947  0E1E                     	;# 
  3948  0E1F                     	;# 
  3949  0E20                     	;# 
  3950  0E21                     	;# 
  3951  0E22                     	;# 
  3952  0E24                     	;# 
  3953  0E25                     	;# 
  3954  0E28                     	;# 
  3955  0E29                     	;# 
  3956  0E2A                     	;# 
  3957  0E2B                     	;# 
  3958  0E2C                     	;# 
  3959  0E2D                     	;# 
  3960  0E2E                     	;# 
  3961  0E2F                     	;# 
  3962  0E90                     	;# 
  3963  0E91                     	;# 
  3964  0E92                     	;# 
  3965  0E94                     	;# 
  3966  0E95                     	;# 
  3967  0E9C                     	;# 
  3968  0E9D                     	;# 
  3969  0E9E                     	;# 
  3970  0E9F                     	;# 
  3971  0EA0                     	;# 
  3972  0EA1                     	;# 
  3973  0EA2                     	;# 
  3974  0EA3                     	;# 
  3975  0EA4                     	;# 
  3976  0EA5                     	;# 
  3977  0EA6                     	;# 
  3978  0EA7                     	;# 
  3979  0F0F                     	;# 
  3980  0F10                     	;# 
  3981  0F11                     	;# 
  3982  0F12                     	;# 
  3983  0F13                     	;# 
  3984  0F14                     	;# 
  3985  0F15                     	;# 
  3986  0F16                     	;# 
  3987  0F17                     	;# 
  3988  0F18                     	;# 
  3989  0F19                     	;# 
  3990  0F1A                     	;# 
  3991  0F1B                     	;# 
  3992  0F1C                     	;# 
  3993  0F1D                     	;# 
  3994  0F1E                     	;# 
  3995  0F1F                     	;# 
  3996  0F20                     	;# 
  3997  0F21                     	;# 
  3998  0F22                     	;# 
  3999  0F23                     	;# 
  4000  0F24                     	;# 
  4001  0F25                     	;# 
  4002  0F26                     	;# 
  4003  0F27                     	;# 
  4004  0F28                     	;# 
  4005  0F29                     	;# 
  4006  0F2A                     	;# 
  4007  0F2B                     	;# 
  4008  0F2C                     	;# 
  4009  0F2D                     	;# 
  4010  0F2E                     	;# 
  4011  0F2F                     	;# 
  4012  0F30                     	;# 
  4013  0F31                     	;# 
  4014  0F32                     	;# 
  4015  0F33                     	;# 
  4016  0F34                     	;# 
  4017  0F35                     	;# 
  4018  0F36                     	;# 
  4019  0F37                     	;# 
  4020  0FE4                     	;# 
  4021  0FE5                     	;# 
  4022  0FE6                     	;# 
  4023  0FE7                     	;# 
  4024  0FE8                     	;# 
  4025  0FE9                     	;# 
  4026  0FEA                     	;# 
  4027  0FEB                     	;# 
  4028  0FED                     	;# 
  4029  0FEE                     	;# 
  4030  0FEF                     	;_spi1_send_buffer_data
  4031                           
  4032                           	psect	idataCOMMON
  4033  07FF                     __pidataCOMMON:	
  4034                           
  4035                           ;initializer for _SPI_OFFSET_BYTE
  4036  07FF  3401               	retlw	1
  4037                           
  4038                           	psect	idataBANK1
  4039  0E0C                     __pidataBANK1:	
  4040                           
  4041                           ;initializer for _direction
  4042  0E0C  3401               	retlw	1
  4043  0E0D  3400               	retlw	0
  4044                           
  4045                           ;initializer for _st_dataLength
  4046  0E0E  34FF               	retlw	255
  4047  0E0F  34FF               	retlw	255
  4048                           
  4049                           	psect	stringtext1
  4050  1000                     __pstringtext1:	
  4051  1000                     _MACHINE_ID:	
  4052  1000  3401               	retlw	1
  4053  1001  3400               	retlw	0
  4054  1002                     __end_of_MACHINE_ID:	
  4055                           
  4056                           	psect	stringtext2
  4057  1002                     __pstringtext2:	
  4058  1002                     _VENDER_ID:	
  4059  1002  3401               	retlw	1
  4060  1003  3400               	retlw	0
  4061  1004                     __end_of_VENDER_ID:	
  4062                           
  4063                           	psect	bitnvCOMMON
  4064  03D8                     __pbitnvCOMMON:	
  4065  03D8                     _isEndPointTrig:	
  4066  03D8                     	ds	1
  4067  000E                     _PORTC	set	14
  4068  000D                     _PORTB	set	13
  4069  000C                     _PORTA	set	12
  4070  000B                     _INTCONbits	set	11
  4071  0010                     _PIR0bits	set	16
  4072  0012                     _PIR2bits	set	18
  4073  0011                     _PIR1bits	set	17
  4074  008E                     _TRISC	set	142
  4075  008D                     _TRISB	set	141
  4076  008C                     _TRISA	set	140
  4077  0092                     _PIE2bits	set	146
  4078  0091                     _PIE1bits	set	145
  4079  0090                     _PIE0bits	set	144
  4080  008E                     _TRISCbits	set	142
  4081  008D                     _TRISBbits	set	141
  4082  010C                     _LATAbits	set	268
  4083  018E                     _ANSELC	set	398
  4084  018D                     _ANSELB	set	397
  4085  018C                     _ANSELA	set	396
  4086  0219                     _SSP2BUF	set	537
  4087  021C                     _SSP2STATbits	set	540
  4088  021D                     _SSP2CON1bits	set	541
  4089  021F                     _SSP2CON3bits	set	543
  4090  0214                     _SSP1STATbits	set	532
  4091  0215                     _SSP1CON1bits	set	533
  4092  0217                     _SSP1CON3bits	set	535
  4093  020C                     _WPUA	set	524
  4094  020D                     _WPUB	set	525
  4095  020E                     _WPUC	set	526
  4096  0211                     _SSP1BUF	set	529
  4097  0392                     _IOCANbits	set	914
  4098  0391                     _IOCAPbits	set	913
  4099  038C                     _INLVLAbits	set	908
  4100  038E                     _INLVLCbits	set	910
  4101  038D                     _INLVLBbits	set	909
  4102  0393                     _IOCAFbits	set	915
  4103  0894                     _NVMDATH	set	2196
  4104  0893                     _NVMDATL	set	2195
  4105  0892                     _NVMADRH	set	2194
  4106  0891                     _NVMADRL	set	2193
  4107  0895                     _NVMCON1bits	set	2197
  4108  44A8                     _RD	set	17576
  4109  091E                     _OSCTUNEbits	set	2334
  4110  091F                     _OSCFRQbits	set	2335
  4111  0E1F                     _SSP2SSPPSbits	set	3615
  4112  0E22                     _SSP1SSPPSbits	set	3618
  4113  0E9F                     _RB7PPS	set	3743
  4114  0E92                     _RA2PPS	set	3730
  4115  0EA2                     _RC2PPS	set	3746
  4116                           
  4117                           ; #config settings
  4118  0000                     
  4119                           	psect	cinit
  4120  004E                     start_initialization:	
  4121  004E                     __initialization:		;BIGRAM
  4122                           
  4123                           ; Initialize objects allocated to COMMON
  4124  004E  3187  27FF  3180   	fcall	__pidataCOMMON	;fetch initializer
  4125  0051  00FD               	movwf	__pdataCOMMON& (0+127)
  4126                           
  4127                           ; Initialize objects allocated to BANK1
  4128  0052  0021               	movlb	1	; select bank1
  4129  0053  318E  260C  3180   	fcall	__pidataBANK1	;fetch initializer
  4130  0056  00E0               	movwf	__pdataBANK1& (0+127)
  4131  0057  318E  260D  3180   	fcall	__pidataBANK1+1	;fetch initializer
  4132  005A  00E1               	movwf	(__pdataBANK1+1)& (0+127)
  4133  005B  318E  260E  3180   	fcall	__pidataBANK1+2	;fetch initializer
  4134  005E  00E2               	movwf	(__pdataBANK1+2)& (0+127)
  4135  005F  318E  260F  3180   	fcall	__pidataBANK1+3	;fetch initializer
  4136  0062  00E3               	movwf	(__pdataBANK1+3)& (0+127)
  4137                           
  4138                           ; Clear objects allocated to BIGRAM
  4139  0063  30F0               	movlw	low (0+9456)
  4140  0064  0084               	movwf	4
  4141  0065  3024               	movlw	high (0+9456)
  4142  0066  0085               	movwf	5
  4143  0067  3000               	movlw	0
  4144  0068  00FE               	movwf	btemp
  4145  0069  3003               	movlw	3
  4146  006A  00FF               	movwf	btemp+1
  4147  006B  318E  2655  3180   	fcall	clear_ram0
  4148                           
  4149                           ; Clear objects allocated to BITCOMMON
  4150  006E  01F0               	clrf	(__pbitbssCOMMON/(0+8))& (0+127)
  4151  006F  01F1               	clrf	((__pbitbssCOMMON/(0+8)+1))& (0+127)
  4152                           
  4153                           ; Clear objects allocated to COMMON
  4154  0070  01FC               	clrf	__pbssCOMMON& (0+127)
  4155                           
  4156                           ; Clear objects allocated to BANK0
  4157  0071  3059               	movlw	low __pbssBANK0
  4158  0072  0084               	movwf	4
  4159  0073  3000               	movlw	high __pbssBANK0
  4160  0074  0085               	movwf	5
  4161  0075  3016               	movlw	22
  4162  0076  00FE               	movwf	btemp
  4163  0077  3000               	movlw	0
  4164  0078  00FF               	movwf	btemp+1
  4165  0079  318E  2655  3180   	fcall	clear_ram0
  4166                           
  4167                           ; Clear objects allocated to BANK1
  4168  007C  30A0               	movlw	low __pbssBANK1
  4169  007D  0084               	movwf	4
  4170  007E  3000               	movlw	high __pbssBANK1
  4171  007F  0085               	movwf	5
  4172  0080  3040               	movlw	64
  4173  0081  00FE               	movwf	btemp
  4174  0082  3000               	movlw	0
  4175  0083  00FF               	movwf	btemp+1
  4176  0084  318E  2655  3180   	fcall	clear_ram0
  4177                           
  4178                           ; Clear objects allocated to BANK2
  4179  0087  3020               	movlw	low __pbssBANK2
  4180  0088  0084               	movwf	4
  4181  0089  3001               	movlw	high __pbssBANK2
  4182  008A  0085               	movwf	5
  4183  008B  3024               	movlw	36
  4184  008C  00FE               	movwf	btemp
  4185  008D  3000               	movlw	0
  4186  008E  00FF               	movwf	btemp+1
  4187  008F  318E  2655         	fcall	clear_ram0
  4188  0091                     end_of_initialization:	
  4189                           ;End of C runtime variable initialization code
  4190                           
  4191  0091                     __end_of__initialization:	
  4192  0091  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  4193  0092  0020               	movlb	0
  4194  0093  318F  2FA2         	ljmp	_main	;jump to C main() function
  4195                           
  4196                           	psect	bitbssCOMMON
  4197  0380                     __pbitbssCOMMON:	
  4198  0380                     _isMyAddr:	
  4199  0380                     	ds	1
  4200  0381                     _isMycargo:	
  4201  0381                     	ds	1
  4202  0382                     _workingcounta3:	
  4203  0382                     	ds	1
  4204  0383                     _workingcounta2:	
  4205  0383                     	ds	1
  4206  0384                     _workingcounta1:	
  4207  0384                     	ds	1
  4208  0385                     _workingcounta0:	
  4209  0385                     	ds	1
  4210  0386                     _ra3condision:	
  4211  0386                     	ds	1
  4212  0387                     _isreadTrain:	
  4213  0387                     	ds	1
  4214  0388                     _isCalibrated:	
  4215  0388                     	ds	1
  4216  0389                     _isSendSPI2:	
  4217  0389                     	ds	1
  4218                           
  4219                           	psect	bssCOMMON
  4220  007C                     __pbssCOMMON:	
  4221  007C                     _spi1_Read_data:	
  4222  007C                     	ds	1
  4223                           
  4224                           	psect	dataCOMMON
  4225  007D                     __pdataCOMMON:	
  4226  007D                     _SPI_OFFSET_BYTE:	
  4227  007D                     	ds	1
  4228                           
  4229                           	psect	bssBANK0
  4230  0059                     __pbssBANK0:	
  4231  0059                     _cargoData:	
  4232  0059                     	ds	16
  4233  0069                     _countabuf:	
  4234  0069                     	ds	2
  4235  006B                     _count2:	
  4236  006B                     	ds	2
  4237  006D                     _st_type:	
  4238  006D                     	ds	1
  4239  006E                     _spi2_Send_data:	
  4240  006E                     	ds	1
  4241                           
  4242                           	psect	bssBANK1
  4243  00A0                     __pbssBANK1:	
  4244  00A0                     _command:	
  4245  00A0                     	ds	18
  4246  00B2                     _calibdata:	
  4247  00B2                     	ds	9
  4248  00BB                     _linkInfo:	
  4249  00BB                     	ds	6
  4250  00C1                     _startTrainBytes:	
  4251  00C1                     	ds	4
  4252  00C5                     _SIZE_COUNT:	
  4253  00C5                     	ds	2
  4254  00C7                     _EEPROM_ADDR_buf:	
  4255  00C7                     	ds	2
  4256  00C9                     _RaadData:	
  4257  00C9                     	ds	2
  4258  00CB                     _linkAngle:	
  4259  00CB                     	ds	2
  4260  00CD                     _send_count1:	
  4261  00CD                     	ds	2
  4262  00CF                     _spi1_send_count:	
  4263  00CF                     	ds	2
  4264  00D1                     _read_count2:	
  4265  00D1                     	ds	2
  4266  00D3                     _counta2:	
  4267  00D3                     	ds	2
  4268  00D5                     _trainPos:	
  4269  00D5                     	ds	2
  4270  00D7                     _read_count1:	
  4271  00D7                     	ds	2
  4272  00D9                     _count1:	
  4273  00D9                     	ds	2
  4274  00DB                     _readNG:	
  4275  00DB                     	ds	1
  4276  00DC                     _readOK:	
  4277  00DC                     	ds	1
  4278  00DD                     _spi2_Read_data:	
  4279  00DD                     	ds	1
  4280  00DE                     _send_data:	
  4281  00DE                     	ds	1
  4282  00DF                     _eeprom_address:	
  4283  00DF                     	ds	1
  4284                           
  4285                           	psect	dataBANK1
  4286  00E0                     __pdataBANK1:	
  4287  00E0                     _direction:	
  4288  00E0                     	ds	2
  4289  00E2                     _st_dataLength:	
  4290  00E2                     	ds	2
  4291                           
  4292                           	psect	bssBANK2
  4293  0120                     __pbssBANK2:	
  4294  0120                     _cargo_index:	
  4295  0120                     	ds	18
  4296  0132                     _comu_types:	
  4297  0132                     	ds	18
  4298                           
  4299                           	psect	clrtext
  4300  0E55                     clear_ram0:	
  4301                           ;	Called with FSR0 containing the base address, and
  4302                           ;	btemp/btemp+1 has the size to clear
  4303                           
  4304  0E55  0064               	clrwdt	;clear the watchdog before getting into this loop
  4305  0E56                     clrloop0:	
  4306  0E56  0180               	clrf	0	;clear RAM location pointed to by FSR
  4307  0E57  3101               	addfsr 0,1
  4308  0E58  3001               	movlw	1
  4309  0E59  02FE               	subwf	126,f
  4310  0E5A  3000               	movlw	0
  4311  0E5B  3BFF               	subwfb	127,f
  4312  0E5C  087F               	movf	127,w
  4313  0E5D  047E               	iorwf	126,w
  4314  0E5E  1903               	btfsc	3,2
  4315  0E5F  3400               	retlw	0	;all done for this memory range, return
  4316  0E60  2E56               	goto	clrloop0	;have we reached the end yet?
  4317                           
  4318                           	psect	cstackBANK1
  4319  00E4                     __pcstackBANK1:	
  4320  00E4                     setComunicateMode@m_type:	
  4321                           
  4322                           ; 1 bytes @ 0x0
  4323  00E4                     	ds	1
  4324  00E5                     setComunicateMode@i:	
  4325                           
  4326                           ; 2 bytes @ 0x1
  4327  00E5                     	ds	2
  4328                           
  4329                           	psect	cstackCOMMON
  4330  0072                     __pcstackCOMMON:	
  4331  0072                     ?_isTrainSt:	
  4332  0072                     ?_isSPI1read:	
  4333                           ; 1 bit 
  4334                           
  4335  0072                     ?_setComunicateMode:	
  4336                           ; 1 bit 
  4337                           
  4338  0072                     ?_isSPI2read:	
  4339                           ; 1 bit 
  4340                           
  4341  0072                     ?_clutchaction:	
  4342                           ; 1 bit 
  4343                           
  4344  0072                     ?_isEndpoint:	
  4345                           ; 1 bit 
  4346                           
  4347  0072                     ?_setSPI1sendData:	
  4348                           ; 1 bit 
  4349                           
  4350  0072                     ??_setSPI1sendData:	
  4351                           ; 1 bytes @ 0x0
  4352                           
  4353  0072                     ?_addAngle:	
  4354                           ; 1 bytes @ 0x0
  4355                           
  4356  0072                     ?_clear:	
  4357                           ; 1 bytes @ 0x0
  4358                           
  4359  0072                     ?_resetTrainData:	
  4360                           ; 1 bytes @ 0x0
  4361                           
  4362  0072                     ?_initComand:	
  4363                           ; 1 bytes @ 0x0
  4364                           
  4365  0072                     ?_initComu_types:	
  4366                           ; 1 bytes @ 0x0
  4367                           
  4368  0072                     ?_InitCalibrate:	
  4369                           ; 1 bytes @ 0x0
  4370                           
  4371  0072                     ?_spi_init:	
  4372                           ; 1 bytes @ 0x0
  4373                           
  4374  0072                     ?_initCargo:	
  4375                           ; 1 bytes @ 0x0
  4376                           
  4377  0072                     ?_read_train:	
  4378                           ; 1 bytes @ 0x0
  4379                           
  4380  0072                     ?_setSPI2sendData:	
  4381                           ; 1 bytes @ 0x0
  4382                           
  4383  0072                     ?_restartCargo:	
  4384                           ; 1 bytes @ 0x0
  4385                           
  4386  0072                     ?_spi1_init:	
  4387                           ; 1 bytes @ 0x0
  4388                           
  4389  0072                     ?_spi2_init:	
  4390                           ; 1 bytes @ 0x0
  4391                           
  4392  0072                     ?_resetCargo:	
  4393                           ; 1 bytes @ 0x0
  4394                           
  4395  0072                     ?_readCargo:	
  4396                           ; 1 bytes @ 0x0
  4397                           
  4398  0072                     ?_EEPROM_download:	
  4399                           ; 1 bytes @ 0x0
  4400                           
  4401  0072                     ?_setCargoAngle:	
  4402                           ; 1 bytes @ 0x0
  4403                           
  4404  0072                     ?_InterMSSP:	
  4405                           ; 1 bytes @ 0x0
  4406                           
  4407  0072                     ?_initbuffer:	
  4408                           ; 1 bytes @ 0x0
  4409                           
  4410  0072                     ?_init:	
  4411                           ; 1 bytes @ 0x0
  4412                           
  4413  0072                     ?_io_init:	
  4414                           ; 1 bytes @ 0x0
  4415                           
  4416  0072                     ?_initTrain:	
  4417                           ; 1 bytes @ 0x0
  4418                           
  4419  0072                     ?_main:	
  4420                           ; 1 bytes @ 0x0
  4421                           
  4422  0072                     ??_isSPI2read:	
  4423                           ; 1 bytes @ 0x0
  4424                           
  4425  0072                     ?_setSPI1sendDataManual:	
  4426                           ; 1 bytes @ 0x0
  4427                           
  4428  0072                     ?_Calibrate_download:	
  4429                           ; 1 bytes @ 0x0
  4430                           
  4431  0072                     setCargoAngle@m_linkAngleTo:	
  4432                           ; 1 bytes @ 0x0
  4433                           
  4434                           
  4435                           ; 2 bytes @ 0x0
  4436  0072                     	ds	2
  4437  0074                     ??_addAngle:	
  4438  0074                     ??_setCargoAngle:	
  4439                           ; 1 bytes @ 0x2
  4440                           
  4441  0074                     ??_InterMSSP:	
  4442                           ; 1 bytes @ 0x2
  4443                           
  4444                           
  4445                           ; 1 bytes @ 0x2
  4446  0074                     	ds	6
  4447  007A                     InterMSSP@buf:	
  4448                           
  4449                           ; 1 bytes @ 0x8
  4450  007A                     	ds	1
  4451                           
  4452                           	psect	cstackBANK0
  4453  0020                     __pcstackBANK0:	
  4454  0020                     ??_clear:	
  4455  0020                     ??_isTrainSt:	
  4456                           ; 1 bytes @ 0x0
  4457                           
  4458  0020                     ??_resetTrainData:	
  4459                           ; 1 bytes @ 0x0
  4460                           
  4461  0020                     ??_initComand:	
  4462                           ; 1 bytes @ 0x0
  4463                           
  4464  0020                     ??_initComu_types:	
  4465                           ; 1 bytes @ 0x0
  4466                           
  4467  0020                     ??_initCargo:	
  4468                           ; 1 bytes @ 0x0
  4469                           
  4470  0020                     ??_isSPI1read:	
  4471                           ; 1 bytes @ 0x0
  4472                           
  4473  0020                     ??_read_train:	
  4474                           ; 1 bytes @ 0x0
  4475                           
  4476  0020                     ??_setSPI2sendData:	
  4477                           ; 1 bytes @ 0x0
  4478                           
  4479  0020                     ??_restartCargo:	
  4480                           ; 1 bytes @ 0x0
  4481                           
  4482  0020                     ??_spi1_init:	
  4483                           ; 1 bytes @ 0x0
  4484                           
  4485  0020                     ??_spi2_init:	
  4486                           ; 1 bytes @ 0x0
  4487                           
  4488  0020                     ??_resetCargo:	
  4489                           ; 1 bytes @ 0x0
  4490                           
  4491  0020                     ??_initbuffer:	
  4492                           ; 1 bytes @ 0x0
  4493                           
  4494  0020                     ??_io_init:	
  4495                           ; 1 bytes @ 0x0
  4496                           
  4497  0020                     ??_setSPI1sendDataManual:	
  4498                           ; 1 bytes @ 0x0
  4499                           
  4500  0020                     ??_clutchaction:	
  4501                           ; 1 bytes @ 0x0
  4502                           
  4503  0020                     ?_ReadEEPROM:	
  4504                           ; 1 bytes @ 0x0
  4505                           
  4506  0020                     ?___lmul:	
  4507                           ; 1 bytes @ 0x0
  4508                           
  4509  0020                     ?___aldiv:	
  4510                           ; 4 bytes @ 0x0
  4511                           
  4512  0020                     ?___almod:	
  4513                           ; 4 bytes @ 0x0
  4514                           
  4515  0020                     ?_getCargoData:	
  4516                           ; 4 bytes @ 0x0
  4517                           
  4518  0020                     setSPI1sendDataManual@data:	
  4519                           ; 16 bytes @ 0x0
  4520                           
  4521  0020                     clutchaction@comannd:	
  4522                           ; 1 bytes @ 0x0
  4523                           
  4524  0020                     ReadEEPROM@addr:	
  4525                           ; 1 bytes @ 0x0
  4526                           
  4527  0020                     ___lmul@multiplier:	
  4528                           ; 2 bytes @ 0x0
  4529                           
  4530  0020                     ___aldiv@divisor:	
  4531                           ; 4 bytes @ 0x0
  4532                           
  4533  0020                     ___almod@divisor:	
  4534                           ; 4 bytes @ 0x0
  4535                           
  4536                           
  4537                           ; 4 bytes @ 0x0
  4538  0020                     	ds	1
  4539  0021                     ??_isEndpoint:	
  4540  0021                     spi1_init@dummy:	
  4541                           ; 1 bytes @ 0x1
  4542                           
  4543  0021                     spi2_init@dummy:	
  4544                           ; 1 bytes @ 0x1
  4545                           
  4546                           
  4547                           ; 1 bytes @ 0x1
  4548  0021                     	ds	1
  4549  0022                     ??_spi_init:	
  4550  0022                     ??_ReadEEPROM:	
  4551                           ; 1 bytes @ 0x2
  4552                           
  4553  0022                     initbuffer@i:	
  4554                           ; 1 bytes @ 0x2
  4555                           
  4556  0022                     read_train@bufint:	
  4557                           ; 2 bytes @ 0x2
  4558                           
  4559                           
  4560                           ; 2 bytes @ 0x2
  4561  0022                     	ds	1
  4562  0023                     ReadEEPROM@Hiadr:	
  4563                           
  4564                           ; 1 bytes @ 0x3
  4565  0023                     	ds	1
  4566  0024                     ??_init:	
  4567  0024                     ReadEEPROM@Loadr:	
  4568                           ; 1 bytes @ 0x4
  4569                           
  4570  0024                     ___lmul@multiplicand:	
  4571                           ; 1 bytes @ 0x4
  4572                           
  4573  0024                     ___aldiv@dividend:	
  4574                           ; 4 bytes @ 0x4
  4575                           
  4576  0024                     ___almod@dividend:	
  4577                           ; 4 bytes @ 0x4
  4578                           
  4579                           
  4580                           ; 4 bytes @ 0x4
  4581  0024                     	ds	2
  4582  0026                     isEndpoint@spi2data:	
  4583                           
  4584                           ; 1 bytes @ 0x6
  4585  0026                     	ds	2
  4586  0028                     ??___lmul:	
  4587  0028                     ??___aldiv:	
  4588                           ; 1 bytes @ 0x8
  4589                           
  4590  0028                     ??___almod:	
  4591                           ; 1 bytes @ 0x8
  4592                           
  4593  0028                     ___lmul@product:	
  4594                           ; 1 bytes @ 0x8
  4595                           
  4596                           
  4597                           ; 4 bytes @ 0x8
  4598  0028                     	ds	1
  4599  0029                     ___aldiv@counter:	
  4600  0029                     ___almod@counter:	
  4601                           ; 1 bytes @ 0x9
  4602                           
  4603                           
  4604                           ; 1 bytes @ 0x9
  4605  0029                     	ds	1
  4606  002A                     isTrainSt@buf:	
  4607  002A                     ___aldiv@sign:	
  4608                           ; 1 bytes @ 0xA
  4609                           
  4610  002A                     ___almod@sign:	
  4611                           ; 1 bytes @ 0xA
  4612                           
  4613                           
  4614                           ; 1 bytes @ 0xA
  4615  002A                     	ds	1
  4616  002B                     ??_initTrain:	
  4617  002B                     ___aldiv@quotient:	
  4618                           ; 1 bytes @ 0xB
  4619                           
  4620                           
  4621                           ; 4 bytes @ 0xB
  4622  002B                     	ds	4
  4623  002F                     ?_TransLong256To255:	
  4624  002F                     TransLong256To255@data:	
  4625                           ; 4 bytes @ 0xF
  4626                           
  4627                           
  4628                           ; 4 bytes @ 0xF
  4629  002F                     	ds	1
  4630  0030                     ??_getCargoData:	
  4631                           
  4632                           ; 1 bytes @ 0x10
  4633  0030                     	ds	1
  4634  0031                     ??_InitCalibrate:	
  4635  0031                     ??_EEPROM_download:	
  4636                           ; 1 bytes @ 0x11
  4637                           
  4638                           
  4639                           ; 1 bytes @ 0x11
  4640  0031                     	ds	1
  4641  0032                     InitCalibrate@cargoData:	
  4642                           
  4643                           ; 16 bytes @ 0x12
  4644  0032                     	ds	1
  4645  0033                     ??_TransLong256To255:	
  4646                           
  4647                           ; 1 bytes @ 0x13
  4648  0033                     	ds	2
  4649  0035                     EEPROM_download@buflong:	
  4650                           
  4651                           ; 4 bytes @ 0x15
  4652  0035                     	ds	2
  4653  0037                     TransLong256To255@TransData:	
  4654                           
  4655                           ; 4 bytes @ 0x17
  4656  0037                     	ds	2
  4657  0039                     EEPROM_download@bufint:	
  4658                           
  4659                           ; 2 bytes @ 0x19
  4660  0039                     	ds	2
  4661  003B                     EEPROM_download@spi1_Read_data:	
  4662  003B                     TransLong256To255@j:	
  4663                           ; 1 bytes @ 0x1B
  4664                           
  4665                           
  4666                           ; 2 bytes @ 0x1B
  4667  003B                     	ds	2
  4668  003D                     TransLong256To255@mod:	
  4669                           
  4670                           ; 4 bytes @ 0x1D
  4671  003D                     	ds	4
  4672  0041                     TransLong256To255@pow:	
  4673                           
  4674                           ; 4 bytes @ 0x21
  4675  0041                     	ds	4
  4676  0045                     TransLong256To255@i:	
  4677                           
  4678                           ; 2 bytes @ 0x25
  4679  0045                     	ds	2
  4680  0047                     TransLong256To255@buf:	
  4681                           
  4682                           ; 4 bytes @ 0x27
  4683  0047                     	ds	4
  4684  004B                     ??_readCargo:	
  4685  004B                     ??_Calibrate_download:	
  4686                           ; 1 bytes @ 0x2B
  4687                           
  4688                           
  4689                           ; 1 bytes @ 0x2B
  4690  004B                     	ds	6
  4691  0051                     Calibrate_download@buflong:	
  4692  0051                     readCargo@buflong:	
  4693                           ; 4 bytes @ 0x31
  4694                           
  4695                           
  4696                           ; 4 bytes @ 0x31
  4697  0051                     	ds	4
  4698  0055                     Calibrate_download@bufint:	
  4699  0055                     readCargo@bufint:	
  4700                           ; 2 bytes @ 0x35
  4701                           
  4702                           
  4703                           ; 2 bytes @ 0x35
  4704  0055                     	ds	2
  4705  0057                     Calibrate_download@spi_Read_data:	
  4706  0057                     readCargo@spi1_Read_data:	
  4707                           ; 1 bytes @ 0x37
  4708                           
  4709                           
  4710                           ; 1 bytes @ 0x37
  4711  0057                     	ds	1
  4712  0058                     ??_setComunicateMode:	
  4713                           
  4714                           ; 1 bytes @ 0x38
  4715  0058                     	ds	1
  4716  0059                     ??_main:	
  4717                           
  4718                           	psect	maintext
  4719  0FA2                     __pmaintext:	
  4720                           ; 1 bytes @ 0x39
  4721 ;;
  4722 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  4723 ;;
  4724 ;; *************** function _main *****************
  4725 ;; Defined at:
  4726 ;;		line 165 in file "D:/programdata/16F18346_Link_IC.X/main.c"
  4727 ;; Parameters:    Size  Location     Type
  4728 ;;		None
  4729 ;; Auto vars:     Size  Location     Type
  4730 ;;		None
  4731 ;; Return value:  Size  Location     Type
  4732 ;;                  1    wreg      void 
  4733 ;; Registers used:
  4734 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4735 ;; Tracked objects:
  4736 ;;		On entry : B1F/0
  4737 ;;		On exit  : 0/0
  4738 ;;		Unchanged: 0/0
  4739 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4740 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4741 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4742 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4743 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4744 ;;Total ram usage:        0 bytes
  4745 ;; Hardware stack levels required when called:    7
  4746 ;; This function calls:
  4747 ;;		_InitCalibrate
  4748 ;;		_init
  4749 ;;		_initCargo
  4750 ;;		_initComand
  4751 ;;		_initComu_types
  4752 ;;		_initTrain
  4753 ;;		_io_init
  4754 ;;		_isSPI1read
  4755 ;;		_read_train
  4756 ;;		_setComunicateMode
  4757 ;;		_setSPI2sendData
  4758 ;;		_spi_init
  4759 ;; This function is called by:
  4760 ;;		Startup code after reset
  4761 ;; This function uses a non-reentrant model
  4762 ;;
  4763                           
  4764                           
  4765                           ;psect for function _main
  4766  0FA2                     _main:	
  4767                           
  4768                           ;main.c: 166: initComand();
  4769                           
  4770                           ;incstack = 0
  4771                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4772  0FA2  3185  25CE  318F   	fcall	_initComand
  4773                           
  4774                           ;main.c: 167: initComu_types();
  4775  0FA5  3185  2561  318F   	fcall	_initComu_types
  4776                           
  4777                           ;main.c: 168: InitCalibrate();
  4778  0FA8  3187  27D4  318F   	fcall	_InitCalibrate
  4779                           
  4780                           ;main.c: 169: init();
  4781  0FAB  318F  274F  318F   	fcall	_init
  4782                           
  4783                           ;main.c: 170: io_init();
  4784  0FAE  318E  2621  318F   	fcall	_io_init
  4785                           
  4786                           ;main.c: 171: spi_init();
  4787  0FB1  318E  2634  318F   	fcall	_spi_init
  4788                           
  4789                           ;main.c: 172: initCargo();
  4790  0FB4  318E  26B1  318F   	fcall	_initCargo
  4791                           
  4792                           ;main.c: 173: LATAbits.LATA0 = 1;
  4793  0FB7  0022               	movlb	2	; select bank2
  4794  0FB8  140C               	bsf	12,0	;volatile
  4795  0FB9                     l3710:	
  4796                           ;main.c: 174: while(1){
  4797                           
  4798                           
  4799                           ;main.c: 175: if(!isSPI1read()){
  4800  0FB9  318E  266E  318F   	fcall	_isSPI1read
  4801  0FBC  1803               	btfsc	3,0
  4802  0FBD  2FB9               	goto	l3710
  4803                           
  4804                           ;main.c: 176: initTrain();
  4805  0FBE  3186  26D4  318F   	fcall	_initTrain
  4806                           
  4807                           ;main.c: 177: if(isreadTrain){
  4808  0FC1  1FF0               	btfss	_isreadTrain/(0+8),_isreadTrain& (0+7)
  4809  0FC2  2FC9               	goto	l3718
  4810                           
  4811                           ;main.c: 178: setComunicateMode(st_type);
  4812  0FC3  0020               	movlb	0	; select bank0
  4813  0FC4  086D               	movf	_st_type,w
  4814  0FC5  3187  2761  318F   	fcall	_setComunicateMode
  4815                           
  4816                           ;main.c: 179: }else{
  4817  0FC8  2FCC               	goto	l3720
  4818  0FC9                     l3718:	
  4819                           
  4820                           ;main.c: 180: read_train();
  4821  0FC9  3187  271E  318F   	fcall	_read_train
  4822  0FCC                     l3720:	
  4823                           
  4824                           ;main.c: 181: }
  4825                           ;main.c: 182: setSPI2sendData();
  4826  0FCC  3186  2689  318F   	fcall	_setSPI2sendData
  4827  0FCF  2FB9               	goto	l3710
  4828  0FD0                     __end_of_main:	
  4829                           ;main.c: 183: }
  4830                           ;main.c: 184: };
  4831                           ;main.c: 185: return;
  4832                           
  4833                           
  4834                           	psect	text1
  4835  0E34                     __ptext1:	
  4836 ;; *************** function _spi_init *****************
  4837 ;; Defined at:
  4838 ;;		line 21 in file "D:/programdata/16F18346_Link_IC.X/spiControl.c"
  4839 ;; Parameters:    Size  Location     Type
  4840 ;;		None
  4841 ;; Auto vars:     Size  Location     Type
  4842 ;;		None
  4843 ;; Return value:  Size  Location     Type
  4844 ;;                  1    wreg      void 
  4845 ;; Registers used:
  4846 ;;		wreg, status,2, status,0, pclath, cstack
  4847 ;; Tracked objects:
  4848 ;;		On entry : 0/0
  4849 ;;		On exit  : 0/0
  4850 ;;		Unchanged: 0/0
  4851 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4852 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4853 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4854 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4855 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4856 ;;Total ram usage:        0 bytes
  4857 ;; Hardware stack levels used:    1
  4858 ;; Hardware stack levels required when called:    4
  4859 ;; This function calls:
  4860 ;;		_spi1_init
  4861 ;;		_spi2_init
  4862 ;; This function is called by:
  4863 ;;		_main
  4864 ;; This function uses a non-reentrant model
  4865 ;;
  4866                           
  4867                           
  4868                           ;psect for function _spi_init
  4869  0E34                     _spi_init:	
  4870                           
  4871                           ;spiControl.c: 22: INTCONbits.PEIE = 0;
  4872                           
  4873                           ;incstack = 0
  4874                           ; Regs used in _spi_init: [wreg+status,2+status,0+pclath+cstack]
  4875  0E34  130B               	bcf	11,6	;volatile
  4876                           
  4877                           ;spiControl.c: 23: INTCONbits.GIE = 0;
  4878  0E35  138B               	bcf	11,7	;volatile
  4879                           
  4880                           ;spiControl.c: 24: spi1_init();
  4881  0E36  318E  26C8  318E   	fcall	_spi1_init
  4882                           
  4883                           ;spiControl.c: 25: spi2_init();
  4884  0E39  318F  270A         	fcall	_spi2_init
  4885                           
  4886                           ;spiControl.c: 26: INTCONbits.PEIE = 1;
  4887  0E3B  170B               	bsf	11,6	;volatile
  4888                           
  4889                           ;spiControl.c: 27: INTCONbits.GIE = 1;
  4890  0E3C  178B               	bsf	11,7	;volatile
  4891  0E3D  0008               	return
  4892  0E3E                     __end_of_spi_init:	
  4893                           
  4894                           	psect	text2
  4895  0F0A                     __ptext2:	
  4896 ;; *************** function _spi2_init *****************
  4897 ;; Defined at:
  4898 ;;		line 48 in file "D:/programdata/16F18346_Link_IC.X/spiControl.c"
  4899 ;; Parameters:    Size  Location     Type
  4900 ;;		None
  4901 ;; Auto vars:     Size  Location     Type
  4902 ;;  dummy           1    1[BANK0 ] unsigned char 
  4903 ;; Return value:  Size  Location     Type
  4904 ;;                  1    wreg      void 
  4905 ;; Registers used:
  4906 ;;		wreg, status,2, status,0
  4907 ;; Tracked objects:
  4908 ;;		On entry : 0/0
  4909 ;;		On exit  : 0/0
  4910 ;;		Unchanged: 0/0
  4911 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4912 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4913 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4914 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4915 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4916 ;;Total ram usage:        2 bytes
  4917 ;; Hardware stack levels used:    1
  4918 ;; Hardware stack levels required when called:    3
  4919 ;; This function calls:
  4920 ;;		Nothing
  4921 ;; This function is called by:
  4922 ;;		_spi_init
  4923 ;; This function uses a non-reentrant model
  4924 ;;
  4925                           
  4926                           
  4927                           ;psect for function _spi2_init
  4928  0F0A                     _spi2_init:	
  4929                           
  4930                           ;spiControl.c: 49: unsigned char dummy;
  4931                           ;spiControl.c: 50: SSP2CON3bits.PCIE = 0;
  4932                           
  4933                           ;incstack = 0
  4934                           ; Regs used in _spi2_init: [wreg+status,2+status,0]
  4935  0F0A  0024               	movlb	4	; select bank4
  4936  0F0B  131F               	bcf	31,6	;volatile
  4937                           
  4938                           ;spiControl.c: 51: RA2PPS = 0b11011;
  4939  0F0C  301B               	movlw	27
  4940  0F0D  003D               	movlb	29	; select bank29
  4941  0F0E  0092               	movwf	18	;volatile
  4942                           
  4943                           ;spiControl.c: 52: RB7PPS = 0b11010;
  4944  0F0F  301A               	movlw	26
  4945  0F10  009F               	movwf	31	;volatile
  4946                           
  4947                           ;spiControl.c: 53: SSP2SSPPSbits.SSP2SSPPS = 0b01111;
  4948  0F11  003C               	movlb	28	; select bank28
  4949  0F12  081F               	movf	31,w	;volatile
  4950  0F13  39E0               	andlw	-32
  4951  0F14  380F               	iorlw	15
  4952  0F15  009F               	movwf	31	;volatile
  4953                           
  4954                           ;spiControl.c: 54: SSP2CON1bits.SSPOV = 0;
  4955  0F16  0024               	movlb	4	; select bank4
  4956  0F17  131D               	bcf	29,6	;volatile
  4957                           
  4958                           ;spiControl.c: 55: SSP2CON1bits.SSPEN = 1;
  4959  0F18  169D               	bsf	29,5	;volatile
  4960                           
  4961                           ;spiControl.c: 56: SSP2CON1bits.SSPM = 0b0001;
  4962  0F19  081D               	movf	29,w	;volatile
  4963  0F1A  39F0               	andlw	-16
  4964  0F1B  3801               	iorlw	1
  4965  0F1C  009D               	movwf	29	;volatile
  4966                           
  4967                           ;spiControl.c: 57: SSP2CON3bits.BOEN = 1;
  4968  0F1D  161F               	bsf	31,4	;volatile
  4969                           
  4970                           ;spiControl.c: 58: SSP2STATbits.SMP = 0;
  4971  0F1E  139C               	bcf	28,7	;volatile
  4972                           
  4973                           ;spiControl.c: 59: SSP2STATbits.CKE = 0;
  4974  0F1F  131C               	bcf	28,6	;volatile
  4975                           
  4976                           ;spiControl.c: 60: SSP2CON1bits.CKP = 0;
  4977  0F20  121D               	bcf	29,4	;volatile
  4978                           
  4979                           ;spiControl.c: 61: PIE2bits.SSP2IE = 1;
  4980  0F21  0021               	movlb	1	; select bank1
  4981  0F22  1592               	bsf	18,3	;volatile
  4982                           
  4983                           ;spiControl.c: 62: PIR2bits.SSP2IF = 0;
  4984  0F23  0020               	movlb	0	; select bank0
  4985  0F24  1192               	bcf	18,3	;volatile
  4986                           
  4987                           ;spiControl.c: 63: dummy = SSP2BUF;
  4988  0F25  0024               	movlb	4	; select bank4
  4989  0F26  0819               	movf	25,w	;volatile
  4990  0F27  0020               	movlb	0	; select bank0
  4991  0F28  00A0               	movwf	??_spi2_init
  4992  0F29  0820               	movf	??_spi2_init,w
  4993  0F2A  00A1               	movwf	spi2_init@dummy
  4994  0F2B  0008               	return
  4995  0F2C                     __end_of_spi2_init:	
  4996                           
  4997                           	psect	text3
  4998  0EC8                     __ptext3:	
  4999 ;; *************** function _spi1_init *****************
  5000 ;; Defined at:
  5001 ;;		line 32 in file "D:/programdata/16F18346_Link_IC.X/spiControl.c"
  5002 ;; Parameters:    Size  Location     Type
  5003 ;;		None
  5004 ;; Auto vars:     Size  Location     Type
  5005 ;;  dummy           1    1[BANK0 ] unsigned char 
  5006 ;; Return value:  Size  Location     Type
  5007 ;;                  1    wreg      void 
  5008 ;; Registers used:
  5009 ;;		wreg, status,2, status,0
  5010 ;; Tracked objects:
  5011 ;;		On entry : 0/0
  5012 ;;		On exit  : 0/0
  5013 ;;		Unchanged: 0/0
  5014 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5015 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5016 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5017 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5018 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5019 ;;Total ram usage:        2 bytes
  5020 ;; Hardware stack levels used:    1
  5021 ;; Hardware stack levels required when called:    3
  5022 ;; This function calls:
  5023 ;;		Nothing
  5024 ;; This function is called by:
  5025 ;;		_spi_init
  5026 ;; This function uses a non-reentrant model
  5027 ;;
  5028                           
  5029                           
  5030                           ;psect for function _spi1_init
  5031  0EC8                     _spi1_init:	
  5032                           
  5033                           ;spiControl.c: 33: unsigned char dummy;
  5034                           ;spiControl.c: 34: SSP1CON3bits.PCIE = 0;
  5035                           
  5036                           ;incstack = 0
  5037                           ; Regs used in _spi1_init: [wreg+status,2+status,0]
  5038  0EC8  0024               	movlb	4	; select bank4
  5039  0EC9  1317               	bcf	23,6	;volatile
  5040                           
  5041                           ;spiControl.c: 35: RC2PPS = 0b11001;
  5042  0ECA  3019               	movlw	25
  5043  0ECB  003D               	movlb	29	; select bank29
  5044  0ECC  00A2               	movwf	34	;volatile
  5045                           
  5046                           ;spiControl.c: 36: SSP1SSPPSbits.SSP1SSPPS = 0b10110;
  5047  0ECD  003C               	movlb	28	; select bank28
  5048  0ECE  0822               	movf	34,w	;volatile
  5049  0ECF  39E0               	andlw	-32
  5050  0ED0  3816               	iorlw	22
  5051  0ED1  00A2               	movwf	34	;volatile
  5052                           
  5053                           ;spiControl.c: 37: SSP1CON1bits.SSPOV = 1;
  5054  0ED2  0024               	movlb	4	; select bank4
  5055  0ED3  1715               	bsf	21,6	;volatile
  5056                           
  5057                           ;spiControl.c: 38: SSP1CON1bits.SSPEN = 1;
  5058  0ED4  1695               	bsf	21,5	;volatile
  5059                           
  5060                           ;spiControl.c: 39: SSP1CON1bits.SSPM = 0b0100;
  5061  0ED5  0815               	movf	21,w	;volatile
  5062  0ED6  39F0               	andlw	-16
  5063  0ED7  3804               	iorlw	4
  5064  0ED8  0095               	movwf	21	;volatile
  5065                           
  5066                           ;spiControl.c: 40: SSP1CON3bits.BOEN = 1;
  5067  0ED9  1617               	bsf	23,4	;volatile
  5068                           
  5069                           ;spiControl.c: 41: SSP1STATbits.SMP = 0;
  5070  0EDA  1394               	bcf	20,7	;volatile
  5071                           
  5072                           ;spiControl.c: 42: SSP1STATbits.CKE = 0;
  5073  0EDB  1314               	bcf	20,6	;volatile
  5074                           
  5075                           ;spiControl.c: 43: SSP1CON1bits.CKP = 0;
  5076  0EDC  1215               	bcf	21,4	;volatile
  5077                           
  5078                           ;spiControl.c: 44: PIE1bits.SSP1IE = 1;
  5079  0EDD  0021               	movlb	1	; select bank1
  5080  0EDE  1591               	bsf	17,3	;volatile
  5081                           
  5082                           ;spiControl.c: 45: PIR1bits.SSP1IF = 0;
  5083  0EDF  0020               	movlb	0	; select bank0
  5084  0EE0  1191               	bcf	17,3	;volatile
  5085                           
  5086                           ;spiControl.c: 46: dummy = SSP1BUF;
  5087  0EE1  0024               	movlb	4	; select bank4
  5088  0EE2  0811               	movf	17,w	;volatile
  5089  0EE3  0020               	movlb	0	; select bank0
  5090  0EE4  00A0               	movwf	??_spi1_init
  5091  0EE5  0820               	movf	??_spi1_init,w
  5092  0EE6  00A1               	movwf	spi1_init@dummy
  5093  0EE7  0008               	return
  5094  0EE8                     __end_of_spi1_init:	
  5095                           
  5096                           	psect	text4
  5097  0689                     __ptext4:	
  5098 ;; *************** function _setSPI2sendData *****************
  5099 ;; Defined at:
  5100 ;;		line 105 in file "D:/programdata/16F18346_Link_IC.X/spiControl.c"
  5101 ;; Parameters:    Size  Location     Type
  5102 ;;		None
  5103 ;; Auto vars:     Size  Location     Type
  5104 ;;		None
  5105 ;; Return value:  Size  Location     Type
  5106 ;;                  1    wreg      void 
  5107 ;; Registers used:
  5108 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5109 ;; Tracked objects:
  5110 ;;		On entry : 0/0
  5111 ;;		On exit  : 0/0
  5112 ;;		Unchanged: 0/0
  5113 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5114 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5115 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5116 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5117 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5118 ;;Total ram usage:        4 bytes
  5119 ;; Hardware stack levels used:    1
  5120 ;; Hardware stack levels required when called:    3
  5121 ;; This function calls:
  5122 ;;		Nothing
  5123 ;; This function is called by:
  5124 ;;		_main
  5125 ;; This function uses a non-reentrant model
  5126 ;;
  5127                           
  5128                           
  5129                           ;psect for function _setSPI2sendData
  5130  0689                     _setSPI2sendData:	
  5131                           
  5132                           ;spiControl.c: 106: spi2_Send_data = spi2_Send_data + SPI_OFFSET_BYTE;
  5133                           
  5134                           ;incstack = 0
  5135                           ; Regs used in _setSPI2sendData: [wreg+fsr1l+fsr1h+status,2+status,0]
  5136  0689  0020               	movlb	0	; select bank0
  5137  068A  086E               	movf	_spi2_Send_data,w
  5138  068B  077D               	addwf	_SPI_OFFSET_BYTE,w
  5139  068C  00A0               	movwf	??_setSPI2sendData
  5140  068D  0820               	movf	??_setSPI2sendData,w
  5141  068E  00EE               	movwf	_spi2_Send_data
  5142                           
  5143                           ;spiControl.c: 107: if(linkInfo.endpoint == 0){
  5144  068F  0021               	movlb	1	; select bank1
  5145  0690  0840               	movf	(_linkInfo^(0+128)+5),w
  5146  0691  1D03               	btfss	3,2
  5147  0692  2EB8               	goto	l3688
  5148                           
  5149                           ;spiControl.c: 108: SSP2BUF = spi2_Send_data;
  5150  0693  0020               	movlb	0	; select bank0
  5151  0694  086E               	movf	_spi2_Send_data,w
  5152  0695  0024               	movlb	4	; select bank4
  5153  0696  0099               	movwf	25	;volatile
  5154                           
  5155                           ;spiControl.c: 110: isSendSPI2 = 1;
  5156  0697  14F1               	bsf	_isSendSPI2/(0+8),_isSendSPI2& (0+7)
  5157  0698                     l279:	
  5158                           ;spiControl.c: 111: while(isSendSPI2);
  5159                           
  5160  0698  18F1               	btfsc	_isSendSPI2/(0+8),_isSendSPI2& (0+7)
  5161  0699  2E98               	goto	l279
  5162                           
  5163                           ;spiControl.c: 112: spi2_buffer_data[count2] = SSP2BUF;
  5164  069A  30F0               	movlw	240
  5165  069B  0020               	movlb	0	; select bank0
  5166  069C  00A0               	movwf	??_setSPI2sendData
  5167  069D  3025               	movlw	37
  5168  069E  00A1               	movwf	??_setSPI2sendData+1
  5169  069F  086B               	movf	_count2,w
  5170  06A0  0720               	addwf	??_setSPI2sendData,w
  5171  06A1  00A2               	movwf	??_setSPI2sendData+2
  5172  06A2  086C               	movf	_count2+1,w
  5173  06A3  3D21               	addwfc	??_setSPI2sendData+1,w
  5174  06A4  00A3               	movwf	??_setSPI2sendData+3
  5175  06A5  0822               	movf	??_setSPI2sendData+2,w
  5176  06A6  0086               	movwf	6
  5177  06A7  0823               	movf	??_setSPI2sendData+3,w
  5178  06A8  0087               	movwf	7
  5179  06A9  0024               	movlb	4	; select bank4
  5180  06AA  0819               	movf	25,w	;volatile
  5181  06AB  0081               	movwf	1
  5182                           
  5183                           ;spiControl.c: 113: count2++;
  5184  06AC  3001               	movlw	1
  5185  06AD  0020               	movlb	0	; select bank0
  5186  06AE  07EB               	addwf	_count2,f
  5187  06AF  3000               	movlw	0
  5188  06B0  3DEC               	addwfc	_count2+1,f
  5189                           
  5190                           ;spiControl.c: 114: if(count2 == 256){
  5191  06B1  036C               	decf	_count2+1,w
  5192  06B2  046B               	iorwf	_count2,w
  5193  06B3  1D03               	btfss	3,2
  5194  06B4  0008               	return
  5195                           
  5196                           ;spiControl.c: 115: count2 = 0;
  5197  06B5  01EB               	clrf	_count2
  5198  06B6  01EC               	clrf	_count2+1
  5199                           
  5200                           ;spiControl.c: 116: }
  5201                           ;spiControl.c: 117: }else{
  5202  06B7  0008               	return
  5203  06B8                     l3688:	
  5204                           
  5205                           ;spiControl.c: 118: spi2_buffer_data[count2] = spi2_Send_data;
  5206  06B8  30F0               	movlw	240
  5207  06B9  0020               	movlb	0	; select bank0
  5208  06BA  00A0               	movwf	??_setSPI2sendData
  5209  06BB  3025               	movlw	37
  5210  06BC  00A1               	movwf	??_setSPI2sendData+1
  5211  06BD  086B               	movf	_count2,w
  5212  06BE  0720               	addwf	??_setSPI2sendData,w
  5213  06BF  00A2               	movwf	??_setSPI2sendData+2
  5214  06C0  086C               	movf	_count2+1,w
  5215  06C1  3D21               	addwfc	??_setSPI2sendData+1,w
  5216  06C2  00A3               	movwf	??_setSPI2sendData+3
  5217  06C3  0822               	movf	??_setSPI2sendData+2,w
  5218  06C4  0086               	movwf	6
  5219  06C5  0823               	movf	??_setSPI2sendData+3,w
  5220  06C6  0087               	movwf	7
  5221  06C7  086E               	movf	_spi2_Send_data,w
  5222  06C8  0081               	movwf	1
  5223                           
  5224                           ;spiControl.c: 119: count2++;
  5225  06C9  3001               	movlw	1
  5226  06CA  07EB               	addwf	_count2,f
  5227  06CB  3000               	movlw	0
  5228  06CC  3DEC               	addwfc	_count2+1,f
  5229                           
  5230                           ;spiControl.c: 120: if(count2 == 256){
  5231  06CD  036C               	decf	_count2+1,w
  5232  06CE  046B               	iorwf	_count2,w
  5233  06CF  1D03               	btfss	3,2
  5234  06D0  0008               	return
  5235                           
  5236                           ;spiControl.c: 121: count2 = 0;
  5237  06D1  01EB               	clrf	_count2
  5238  06D2  01EC               	clrf	_count2+1
  5239  06D3  0008               	return
  5240  06D4                     __end_of_setSPI2sendData:	
  5241                           
  5242                           	psect	text5
  5243  0761                     __ptext5:	
  5244 ;; *************** function _setComunicateMode *****************
  5245 ;; Defined at:
  5246 ;;		line 40 in file "D:/programdata/16F18346_Link_IC.X/comu_type.c"
  5247 ;; Parameters:    Size  Location     Type
  5248 ;;  m_type          1    wreg     unsigned char 
  5249 ;; Auto vars:     Size  Location     Type
  5250 ;;  m_type          1    0[BANK1 ] unsigned char 
  5251 ;;  i               2    1[BANK1 ] int 
  5252 ;; Return value:  Size  Location     Type
  5253 ;;		None               void
  5254 ;; Registers used:
  5255 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5256 ;; Tracked objects:
  5257 ;;		On entry : 0/0
  5258 ;;		On exit  : 0/0
  5259 ;;		Unchanged: 0/0
  5260 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5261 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5262 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5263 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5264 ;;      Totals:         0       1       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5265 ;;Total ram usage:        4 bytes
  5266 ;; Hardware stack levels used:    1
  5267 ;; Hardware stack levels required when called:    6
  5268 ;; This function calls:
  5269 ;;		_Calibrate_download
  5270 ;;		_EEPROM_download
  5271 ;;		_readCargo
  5272 ;; This function is called by:
  5273 ;;		_main
  5274 ;; This function uses a non-reentrant model
  5275 ;;
  5276                           
  5277                           
  5278                           ;psect for function _setComunicateMode
  5279  0761                     _setComunicateMode:	
  5280                           
  5281                           ;incstack = 0
  5282                           ; Regs used in _setComunicateMode: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5283                           ;setComunicateMode@m_type stored from wreg
  5284  0761  0021               	movlb	1	; select bank1
  5285  0762  00E4               	movwf	setComunicateMode@m_type^(0+128)
  5286                           
  5287                           ;comu_type.c: 41: for(int i = 0; i < 18; i++){
  5288  0763  01E5               	clrf	setComunicateMode@i^(0+128)
  5289  0764  01E6               	clrf	(setComunicateMode@i+1)^(0+128)
  5290  0765                     L1:	
  5291  0765  0866               	movf	(setComunicateMode@i+1)^(0+128),w
  5292  0766  3A80               	xorlw	128
  5293  0767  0020               	movlb	0	; select bank0
  5294  0768  00D8               	movwf	??_setComunicateMode
  5295  0769  3080               	movlw	128
  5296  076A  0258               	subwf	??_setComunicateMode,w
  5297  076B  1D03               	skipz
  5298  076C  2F70               	goto	u2425
  5299  076D  3012               	movlw	18
  5300  076E  0021               	movlb	1	; select bank1
  5301  076F  0265               	subwf	setComunicateMode@i^(0+128),w
  5302  0770                     u2425:	
  5303  0770  1803               	btfsc	3,0
  5304  0771  0008               	return
  5305                           
  5306                           ;comu_type.c: 42: if(comu_types[i] == m_type){
  5307  0772  0021               	movlb	1	; select bank1
  5308  0773  0865               	movf	setComunicateMode@i^(0+128),w
  5309  0774  3E32               	addlw	(low (_comu_types| (0+256)))& (0+255)
  5310  0775  0086               	movwf	6
  5311  0776  3001               	movlw	1	; select bank2/3
  5312  0777  0087               	movwf	7
  5313  0778  0801               	movf	1,w
  5314  0779  0664               	xorwf	setComunicateMode@m_type^(0+128),w
  5315  077A  1903               	btfsc	3,2
  5316  077B  2F89               	goto	l3644
  5317  077C  2F99               	goto	l3646
  5318  077D                     l3630:	
  5319                           ;comu_type.c: 44: case 0:
  5320                           
  5321                           ;comu_type.c: 43: switch(i){
  5322                           
  5323                           
  5324                           ;comu_type.c: 45: Calibrate_download(spi1_Read_data);
  5325  077D  087C               	movf	_spi1_Read_data,w
  5326  077E  3180  2095         	fcall	_Calibrate_download
  5327                           
  5328                           ;comu_type.c: 46: return 1;
  5329                           ;	Return value of _setComunicateMode is never used
  5330  0780  0008               	return
  5331  0781                     l3634:	
  5332                           ;comu_type.c: 47: case 1:
  5333                           
  5334                           
  5335                           ;comu_type.c: 48: readCargo(spi1_Read_data);
  5336  0781  087C               	movf	_spi1_Read_data,w
  5337  0782  3181  21B1         	fcall	_readCargo
  5338                           
  5339                           ;comu_type.c: 55: return 1;
  5340                           ;	Return value of _setComunicateMode is never used
  5341                           
  5342                           ;comu_type.c: 54: case 4:
  5343                           
  5344                           ;comu_type.c: 53: return 1;
  5345                           ;	Return value of _setComunicateMode is never used
  5346                           
  5347                           ;comu_type.c: 52: case 3:
  5348                           
  5349                           ;comu_type.c: 51: return 1;
  5350                           ;	Return value of _setComunicateMode is never used
  5351                           
  5352                           ;comu_type.c: 50: case 2:
  5353                           
  5354                           ;comu_type.c: 49: return 1;
  5355                           ;	Return value of _setComunicateMode is never used
  5356  0784  0008               	return
  5357  0785                     l3638:	
  5358                           ;comu_type.c: 56: case 5:
  5359                           
  5360                           
  5361                           ;comu_type.c: 57: EEPROM_download(spi1_Read_data);
  5362  0785  087C               	movf	_spi1_Read_data,w
  5363  0786  3183  23AE         	fcall	_EEPROM_download
  5364                           
  5365                           ;comu_type.c: 58: return 1;
  5366                           ;	Return value of _setComunicateMode is never used
  5367  0788  0008               	return
  5368  0789                     l3644:	
  5369                           ;comu_type.c: 60: }
  5370                           
  5371                           
  5372                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5373                           ; Switch size 1, requested type "space"
  5374                           ; Number of cases is 1, Range of values is 0 to 0
  5375                           ; switch strategies available:
  5376                           ; Name         Instructions Cycles
  5377                           ; simple_byte            4     3 (average)
  5378                           ; direct_byte            8     6 (fixed)
  5379                           ; jumptable            260     6 (fixed)
  5380                           ;	Chosen strategy is simple_byte
  5381  0789  0021               	movlb	1	; select bank1
  5382  078A  0866               	movf	(setComunicateMode@i+1)^(0+128),w
  5383  078B  3A00               	xorlw	0	; case 0
  5384  078C  1903               	skipnz
  5385  078D  2F8F               	goto	l3908
  5386  078E  2F99               	goto	l3646
  5387  078F                     l3908:	
  5388                           
  5389                           ; Switch size 1, requested type "space"
  5390                           ; Number of cases is 6, Range of values is 0 to 5
  5391                           ; switch strategies available:
  5392                           ; Name         Instructions Cycles
  5393                           ; direct_byte           18     6 (fixed)
  5394                           ; simple_byte           19    10 (average)
  5395                           ; jumptable            260     6 (fixed)
  5396                           ;	Chosen strategy is direct_byte
  5397  078F  0865               	movf	setComunicateMode@i^(0+128),w
  5398  0790  0084               	movwf	4
  5399  0791  3006               	movlw	6
  5400  0792  0204               	subwf	4,w
  5401  0793  1803               	skipnc
  5402  0794  2F99               	goto	l3646
  5403  0795  3188               	movlp	high S3910
  5404  0796  3504               	lslf	4,w
  5405  0797  3E34               	addlw	low S3910
  5406  0798  0082               	movwf	2
  5407  0799                     l3646:	
  5408  0799  3001               	movlw	1
  5409  079A  0021               	movlb	1	; select bank1
  5410  079B  07E5               	addwf	setComunicateMode@i^(0+128),f
  5411  079C  3000               	movlw	0
  5412  079D  3DE6               	addwfc	(setComunicateMode@i+1)^(0+128),f
  5413  079E  2F65               	goto	L1
  5414  079F                     l485:	
  5415                           ;comu_type.c: 61: }
  5416                           ;comu_type.c: 62: }
  5417                           ;comu_type.c: 63: return 0;
  5418                           ;	Return value of _setComunicateMode is never used
  5419                           
  5420  079F  0008               	return
  5421  07A0                     __end_of_setComunicateMode:	
  5422                           
  5423                           	psect	swtext1
  5424  0834                     __pswtext1:	
  5425  0834                     S3910:	
  5426  0834  3187  2F7D         	ljmp	l3630
  5427  0836  3187  2F81         	ljmp	l3634
  5428  0838  3187  2F9F         	ljmp	l485
  5429  083A  3187  2F9F         	ljmp	l485
  5430  083C  3187  2F9F         	ljmp	l485
  5431  083E  3187  2F85         	ljmp	l3638
  5432                           
  5433                           	psect	text6
  5434  01B1                     __ptext6:	
  5435 ;; *************** function _readCargo *****************
  5436 ;; Defined at:
  5437 ;;		line 14 in file "D:/programdata/16F18346_Link_IC.X/normal_mode.c"
  5438 ;; Parameters:    Size  Location     Type
  5439 ;;  spi1_Read_da    1    wreg     unsigned char 
  5440 ;; Auto vars:     Size  Location     Type
  5441 ;;  spi1_Read_da    1   55[BANK0 ] unsigned char 
  5442 ;;  buflong         4   49[BANK0 ] unsigned long 
  5443 ;;  bufint          2   53[BANK0 ] unsigned int 
  5444 ;; Return value:  Size  Location     Type
  5445 ;;                  1    wreg      void 
  5446 ;; Registers used:
  5447 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5448 ;; Tracked objects:
  5449 ;;		On entry : 0/0
  5450 ;;		On exit  : 0/0
  5451 ;;		Unchanged: 0/0
  5452 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5453 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5454 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5455 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5456 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5457 ;;Total ram usage:       13 bytes
  5458 ;; Hardware stack levels used:    1
  5459 ;; Hardware stack levels required when called:    5
  5460 ;; This function calls:
  5461 ;;		_TransLong256To255
  5462 ;;		_clutchaction
  5463 ;;		_getCargoData
  5464 ;;		_restartCargo
  5465 ;; This function is called by:
  5466 ;;		_setComunicateMode
  5467 ;; This function uses a non-reentrant model
  5468 ;;
  5469                           
  5470                           
  5471                           ;psect for function _readCargo
  5472  01B1                     _readCargo:	
  5473                           
  5474                           ;incstack = 0
  5475                           ; Regs used in _readCargo: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5476                           ;readCargo@spi1_Read_data stored from wreg
  5477  01B1  0020               	movlb	0	; select bank0
  5478  01B2  00D7               	movwf	readCargo@spi1_Read_data
  5479                           
  5480                           ;normal_mode.c: 15: unsigned int bufint = spi1_Read_data;
  5481  01B3  0857               	movf	readCargo@spi1_Read_data,w
  5482  01B4  00CB               	movwf	??_readCargo
  5483  01B5  01CC               	clrf	??_readCargo+1
  5484  01B6  084B               	movf	??_readCargo,w
  5485  01B7  00D5               	movwf	readCargo@bufint
  5486  01B8  084C               	movf	??_readCargo+1,w
  5487  01B9  00D6               	movwf	readCargo@bufint+1
  5488                           
  5489                           ;normal_mode.c: 16: unsigned long buflong = spi1_Read_data;
  5490  01BA  0857               	movf	readCargo@spi1_Read_data,w
  5491  01BB  00CB               	movwf	??_readCargo
  5492  01BC  01CC               	clrf	??_readCargo+1
  5493  01BD  01CD               	clrf	??_readCargo+2
  5494  01BE  01CE               	clrf	??_readCargo+3
  5495  01BF  084E               	movf	??_readCargo+3,w
  5496  01C0  00D4               	movwf	readCargo@buflong+3
  5497  01C1  084D               	movf	??_readCargo+2,w
  5498  01C2  00D3               	movwf	readCargo@buflong+2
  5499  01C3  084C               	movf	??_readCargo+1,w
  5500  01C4  00D2               	movwf	readCargo@buflong+1
  5501  01C5  084B               	movf	??_readCargo,w
  5502  01C6  00D1               	movwf	readCargo@buflong
  5503                           
  5504                           ;normal_mode.c: 17: cargoData = getCargoData();
  5505  01C7  318E  268B  3181   	fcall	_getCargoData
  5506  01CA  0020               	movlb	0	; select bank0
  5507  01CB  3020               	movlw	low ?_getCargoData
  5508  01CC  0086               	movwf	6
  5509  01CD  3000               	movlw	high ?_getCargoData
  5510  01CE  0087               	movwf	7
  5511  01CF  3059               	movlw	low _cargoData
  5512  01D0  0084               	movwf	4
  5513  01D1  3000               	movlw	high _cargoData
  5514  01D2  0085               	movwf	5
  5515  01D3  3010               	movlw	16
  5516  01D4  00CB               	movwf	??_readCargo
  5517  01D5                     u2220:	
  5518  01D5  0016               	moviw fsr1++
  5519  01D6  001A               	movwi fsr0++
  5520  01D7  0BCB               	decfsz	??_readCargo,f
  5521  01D8  29D5               	goto	u2220
  5522                           
  5523                           ;normal_mode.c: 18: if(isMycargo){
  5524  01D9  18F0               	btfsc	_isMycargo/(0+8),_isMycargo& (0+7)
  5525  01DA  2AA4               	goto	l3432
  5526  01DB  2AB3               	goto	l3434
  5527  01DC                     l3390:	
  5528                           ;normal_mode.c: 20: case 0:
  5529                           
  5530                           ;normal_mode.c: 19: switch(countabuf){
  5531                           
  5532                           
  5533                           ;normal_mode.c: 21: cargoData.cargoLength = (bufint << 8 | 0x00FF);
  5534  01DC  0855               	movf	readCargo@bufint,w
  5535  01DD  00CC               	movwf	??_readCargo+1
  5536  01DE  01CB               	clrf	??_readCargo
  5537  01DF  30FF               	movlw	255
  5538  01E0  044B               	iorwf	??_readCargo,w
  5539  01E1  00D9               	movwf	_cargoData
  5540  01E2  3000               	movlw	0
  5541  01E3  044C               	iorwf	??_readCargo+1,w
  5542  01E4  29F0               	goto	L2
  5543  01E5                     l3392:	
  5544                           ;normal_mode.c: 23: case 1:
  5545                           
  5546                           ;normal_mode.c: 22: break;
  5547                           
  5548                           
  5549                           ;normal_mode.c: 24: cargoData.cargoLength = cargoData.cargoLength & (bufint | 0xFF00);
  5550  01E5  3000               	movlw	0
  5551  01E6  0455               	iorwf	readCargo@bufint,w
  5552  01E7  00CB               	movwf	??_readCargo
  5553  01E8  30FF               	movlw	255
  5554  01E9  0456               	iorwf	readCargo@bufint+1,w
  5555  01EA  00CC               	movwf	??_readCargo+1
  5556  01EB  0859               	movf	_cargoData,w
  5557  01EC  054B               	andwf	??_readCargo,w
  5558  01ED  00D9               	movwf	_cargoData
  5559  01EE  085A               	movf	_cargoData+1,w
  5560  01EF  054C               	andwf	??_readCargo+1,w
  5561  01F0                     L2:	
  5562  01F0  00DA               	movwf	_cargoData+1
  5563                           
  5564                           ;normal_mode.c: 25: break;
  5565  01F1  2AB3               	goto	l3434
  5566  01F2                     l3394:	
  5567                           ;normal_mode.c: 26: case 2:
  5568                           
  5569                           
  5570                           ;normal_mode.c: 27: cargoData.command = spi1_Read_data;
  5571  01F2  0857               	movf	readCargo@spi1_Read_data,w
  5572  01F3  00CB               	movwf	??_readCargo
  5573  01F4  084B               	movf	??_readCargo,w
  5574  01F5  00DB               	movwf	_cargoData+2
  5575                           
  5576                           ;normal_mode.c: 28: break;
  5577  01F6  2AB3               	goto	l3434
  5578  01F7                     l3396:	
  5579                           ;normal_mode.c: 29: case 3:
  5580                           
  5581                           
  5582                           ;normal_mode.c: 30: cargoData.index = spi1_Read_data;
  5583  01F7  0857               	movf	readCargo@spi1_Read_data,w
  5584  01F8  00CB               	movwf	??_readCargo
  5585  01F9  084B               	movf	??_readCargo,w
  5586  01FA  00DC               	movwf	_cargoData+3
  5587                           
  5588                           ;normal_mode.c: 31: break;
  5589  01FB  2AB3               	goto	l3434
  5590  01FC                     l3398:	
  5591                           ;normal_mode.c: 32: case 4:
  5592                           
  5593                           
  5594                           ;normal_mode.c: 33: cargoData.address = spi1_Read_data;
  5595  01FC  0857               	movf	readCargo@spi1_Read_data,w
  5596  01FD  00CB               	movwf	??_readCargo
  5597  01FE  084B               	movf	??_readCargo,w
  5598  01FF  00DD               	movwf	_cargoData+4
  5599                           
  5600                           ;normal_mode.c: 34: if(cargoData.address != linkInfo.My_address){
  5601  0200  085D               	movf	_cargoData+4,w
  5602  0201  0021               	movlb	1	; select bank1
  5603  0202  063B               	xorwf	_linkInfo^(0+128),w
  5604  0203  1903               	skipnz
  5605  0204  2AB3               	goto	l3434
  5606                           
  5607                           ;normal_mode.c: 35: restartCargo();
  5608  0205  318E  2610  3181   	fcall	_restartCargo
  5609                           
  5610                           ;normal_mode.c: 36: isMycargo = 0;
  5611  0208  10F0               	bcf	_isMycargo/(0+8),_isMycargo& (0+7)
  5612                           
  5613                           ;normal_mode.c: 38: }
  5614                           ;normal_mode.c: 39: break;
  5615                           
  5616                           ;normal_mode.c: 37: }else{
  5617  0209  2AB3               	goto	l3434
  5618  020A                     l3404:	
  5619                           ;normal_mode.c: 40: case 5:
  5620                           
  5621                           
  5622                           ;normal_mode.c: 41: spi2_Send_data = (cargoData.linkAngleTo >> 8 & 0x00ff);
  5623  020A  0020               	movlb	0	; select bank0
  5624  020B  085F               	movf	_cargoData+6,w
  5625  020C  2AA0               	goto	L12
  5626  020D                     l3406:	
  5627                           ;normal_mode.c: 43: case 6:
  5628                           
  5629                           ;normal_mode.c: 42: break;
  5630                           
  5631                           
  5632                           ;normal_mode.c: 44: spi2_Send_data = (cargoData.linkAngleTo & 0x00ff);
  5633  020D  085E               	movf	_cargoData+5,w
  5634  020E  2AA0               	goto	L12
  5635  020F                     l3408:	
  5636                           ;normal_mode.c: 46: case 7:
  5637                           
  5638                           ;normal_mode.c: 45: break;
  5639                           
  5640                           
  5641                           ;normal_mode.c: 47: spi2_Send_data = (cargoData.linkAngleBack >> 8 & 0x00ff);
  5642  020F  0861               	movf	_cargoData+8,w
  5643  0210  2AA0               	goto	L12
  5644  0211                     l3410:	
  5645                           ;normal_mode.c: 49: case 8:
  5646                           
  5647                           ;normal_mode.c: 48: break;
  5648                           
  5649                           
  5650                           ;normal_mode.c: 50: spi2_Send_data = (cargoData.linkAngleBack & 0x00ff);
  5651  0211  0860               	movf	_cargoData+7,w
  5652  0212  2AA0               	goto	L12
  5653  0213                     l3412:	
  5654                           ;normal_mode.c: 52: case 9:
  5655                           
  5656                           ;normal_mode.c: 51: break;
  5657                           
  5658                           
  5659                           ;normal_mode.c: 53: spi2_Send_data = (cargoData.passedTime >> 8 & 0x00ff);
  5660  0213  0863               	movf	_cargoData+10,w
  5661  0214  2AA0               	goto	L12
  5662  0215                     l3414:	
  5663                           ;normal_mode.c: 55: case 10:
  5664                           
  5665                           ;normal_mode.c: 54: break;
  5666                           
  5667                           
  5668                           ;normal_mode.c: 56: spi2_Send_data = (cargoData.passedTime & 0x00ff);
  5669  0215  0862               	movf	_cargoData+9,w
  5670  0216  2AA0               	goto	L12
  5671  0217                     l3416:	
  5672                           ;normal_mode.c: 58: case 11:
  5673                           
  5674                           ;normal_mode.c: 57: break;
  5675                           
  5676                           
  5677                           ;normal_mode.c: 59: cargoData.clutchMode = spi1_Read_data;
  5678  0217  0857               	movf	readCargo@spi1_Read_data,w
  5679  0218  00CB               	movwf	??_readCargo
  5680  0219  084B               	movf	??_readCargo,w
  5681  021A  00E4               	movwf	_cargoData+11
  5682                           
  5683                           ;normal_mode.c: 60: clutchaction(cargoData.clutchMode);
  5684  021B  0864               	movf	_cargoData+11,w
  5685  021C  318E  263E  3181   	fcall	_clutchaction
  5686                           
  5687                           ;normal_mode.c: 61: break;
  5688  021F  2AB3               	goto	l3434
  5689  0220                     l3420:	
  5690                           ;normal_mode.c: 62: case 12:
  5691                           
  5692                           
  5693                           ;normal_mode.c: 63: cargoData.WorkingCount++;
  5694  0220  3001               	movlw	1
  5695  0221  0020               	movlb	0	; select bank0
  5696  0222  07E5               	addwf	_cargoData+12,f
  5697  0223  3000               	movlw	0
  5698  0224  3DE6               	addwfc	_cargoData+13,f
  5699  0225  3000               	movlw	0
  5700  0226  3DE7               	addwfc	_cargoData+14,f
  5701  0227  3000               	movlw	0
  5702  0228  3DE8               	addwfc	_cargoData+15,f
  5703                           
  5704                           ;normal_mode.c: 64: spi2_Send_data = (TransLong256To255(cargoData.WorkingCount) >> 24 & 
      +                          0x000000ff);
  5705  0229  300C               	movlw	12
  5706  022A  3E59               	addlw	(low (_cargoData| 0))& (0+255)
  5707  022B  0086               	movwf	6
  5708  022C  0187               	clrf	7
  5709  022D  3F40               	moviw [0]fsr1
  5710  022E  00AF               	movwf	TransLong256To255@data
  5711  022F  3F41               	moviw [1]fsr1
  5712  0230  00B0               	movwf	TransLong256To255@data+1
  5713  0231  3F42               	moviw [2]fsr1
  5714  0232  00B1               	movwf	TransLong256To255@data+2
  5715  0233  3F43               	moviw [3]fsr1
  5716  0234  00B2               	movwf	TransLong256To255@data+3
  5717  0235  3182  22C8  3181   	fcall	_TransLong256To255
  5718  0238  0020               	movlb	0	; select bank0
  5719  0239  082F               	movf	?_TransLong256To255,w
  5720  023A  00CB               	movwf	??_readCargo
  5721  023B  0830               	movf	?_TransLong256To255+1,w
  5722  023C  00CC               	movwf	??_readCargo+1
  5723  023D  0831               	movf	?_TransLong256To255+2,w
  5724  023E  00CD               	movwf	??_readCargo+2
  5725  023F  0832               	movf	?_TransLong256To255+3,w
  5726  0240  00CE               	movwf	??_readCargo+3
  5727  0241  3018               	movlw	24
  5728  0242  00CF               	movwf	??_readCargo+4
  5729  0243                     u2255:	
  5730  0243  37CE               	asrf	??_readCargo+3,f
  5731  0244  0CCD               	rrf	??_readCargo+2,f
  5732  0245  0CCC               	rrf	??_readCargo+1,f
  5733  0246  0CCB               	rrf	??_readCargo,f
  5734  0247  0BCF               	decfsz	??_readCargo+4,f
  5735  0248  2A43               	goto	u2255
  5736  0249  2A8B               	goto	L14
  5737  024A                     l3424:	
  5738                           ;normal_mode.c: 66: case 13:
  5739                           
  5740                           ;normal_mode.c: 65: break;
  5741                           
  5742                           
  5743                           ;normal_mode.c: 67: spi2_Send_data = (TransLong256To255(cargoData.WorkingCount) >> 16 & 
      +                          0x000000ff);
  5744  024A  300C               	movlw	12
  5745  024B  3E59               	addlw	(low (_cargoData| 0))& (0+255)
  5746  024C  0086               	movwf	6
  5747  024D  0187               	clrf	7
  5748  024E  3F40               	moviw [0]fsr1
  5749  024F  00AF               	movwf	TransLong256To255@data
  5750  0250  3F41               	moviw [1]fsr1
  5751  0251  00B0               	movwf	TransLong256To255@data+1
  5752  0252  3F42               	moviw [2]fsr1
  5753  0253  00B1               	movwf	TransLong256To255@data+2
  5754  0254  3F43               	moviw [3]fsr1
  5755  0255  00B2               	movwf	TransLong256To255@data+3
  5756  0256  3182  22C8  3181   	fcall	_TransLong256To255
  5757  0259  0020               	movlb	0	; select bank0
  5758  025A  082F               	movf	?_TransLong256To255,w
  5759  025B  00CB               	movwf	??_readCargo
  5760  025C  0830               	movf	?_TransLong256To255+1,w
  5761  025D  00CC               	movwf	??_readCargo+1
  5762  025E  0831               	movf	?_TransLong256To255+2,w
  5763  025F  00CD               	movwf	??_readCargo+2
  5764  0260  0832               	movf	?_TransLong256To255+3,w
  5765  0261  00CE               	movwf	??_readCargo+3
  5766  0262  3010               	movlw	16
  5767  0263  00CF               	movwf	??_readCargo+4
  5768  0264                     u2265:	
  5769  0264  37CE               	asrf	??_readCargo+3,f
  5770  0265  0CCD               	rrf	??_readCargo+2,f
  5771  0266  0CCC               	rrf	??_readCargo+1,f
  5772  0267  0CCB               	rrf	??_readCargo,f
  5773  0268  0BCF               	decfsz	??_readCargo+4,f
  5774  0269  2A64               	goto	u2265
  5775  026A  2A8B               	goto	L14
  5776  026B                     l3426:	
  5777                           ;normal_mode.c: 69: case 14:
  5778                           
  5779                           ;normal_mode.c: 68: break;
  5780                           
  5781                           
  5782                           ;normal_mode.c: 70: spi2_Send_data = (TransLong256To255(cargoData.WorkingCount) >> 8 & 0
      +                          x000000ff);
  5783  026B  300C               	movlw	12
  5784  026C  3E59               	addlw	(low (_cargoData| 0))& (0+255)
  5785  026D  0086               	movwf	6
  5786  026E  0187               	clrf	7
  5787  026F  3F40               	moviw [0]fsr1
  5788  0270  00AF               	movwf	TransLong256To255@data
  5789  0271  3F41               	moviw [1]fsr1
  5790  0272  00B0               	movwf	TransLong256To255@data+1
  5791  0273  3F42               	moviw [2]fsr1
  5792  0274  00B1               	movwf	TransLong256To255@data+2
  5793  0275  3F43               	moviw [3]fsr1
  5794  0276  00B2               	movwf	TransLong256To255@data+3
  5795  0277  3182  22C8  3181   	fcall	_TransLong256To255
  5796  027A  0020               	movlb	0	; select bank0
  5797  027B  082F               	movf	?_TransLong256To255,w
  5798  027C  00CB               	movwf	??_readCargo
  5799  027D  0830               	movf	?_TransLong256To255+1,w
  5800  027E  00CC               	movwf	??_readCargo+1
  5801  027F  0831               	movf	?_TransLong256To255+2,w
  5802  0280  00CD               	movwf	??_readCargo+2
  5803  0281  0832               	movf	?_TransLong256To255+3,w
  5804  0282  00CE               	movwf	??_readCargo+3
  5805  0283  3008               	movlw	8
  5806  0284  00CF               	movwf	??_readCargo+4
  5807  0285                     u2275:	
  5808  0285  37CE               	asrf	??_readCargo+3,f
  5809  0286  0CCD               	rrf	??_readCargo+2,f
  5810  0287  0CCC               	rrf	??_readCargo+1,f
  5811  0288  0CCB               	rrf	??_readCargo,f
  5812  0289  0BCF               	decfsz	??_readCargo+4,f
  5813  028A  2A85               	goto	u2275
  5814  028B                     L14:	
  5815  028B  084B               	movf	??_readCargo,w
  5816  028C  00D0               	movwf	??_readCargo+5
  5817  028D  0850               	movf	??_readCargo+5,w
  5818  028E  2AA2               	goto	L11
  5819  028F                     l3428:	
  5820                           ;normal_mode.c: 72: case 15:
  5821                           
  5822                           ;normal_mode.c: 71: break;
  5823                           
  5824                           
  5825                           ;normal_mode.c: 73: spi2_Send_data = (TransLong256To255(cargoData.WorkingCount) & 0x0000
      +                          00ff);
  5826  028F  300C               	movlw	12
  5827  0290  3E59               	addlw	(low (_cargoData| 0))& (0+255)
  5828  0291  0086               	movwf	6
  5829  0292  0187               	clrf	7
  5830  0293  3F40               	moviw [0]fsr1
  5831  0294  00AF               	movwf	TransLong256To255@data
  5832  0295  3F41               	moviw [1]fsr1
  5833  0296  00B0               	movwf	TransLong256To255@data+1
  5834  0297  3F42               	moviw [2]fsr1
  5835  0298  00B1               	movwf	TransLong256To255@data+2
  5836  0299  3F43               	moviw [3]fsr1
  5837  029A  00B2               	movwf	TransLong256To255@data+3
  5838  029B  3182  22C8  3181   	fcall	_TransLong256To255
  5839  029E  0020               	movlb	0	; select bank0
  5840  029F  082F               	movf	?_TransLong256To255,w
  5841  02A0                     L12:	
  5842  02A0  00CB               	movwf	??_readCargo
  5843  02A1  084B               	movf	??_readCargo,w
  5844  02A2                     L11:	
  5845  02A2  00EE               	movwf	_spi2_Send_data
  5846                           
  5847                           ;normal_mode.c: 75: }
  5848                           
  5849                           ;normal_mode.c: 74: break;
  5850  02A3  2AB3               	goto	l3434
  5851  02A4                     l3432:	
  5852                           
  5853                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5854                           ; Switch size 1, requested type "space"
  5855                           ; Number of cases is 1, Range of values is 0 to 0
  5856                           ; switch strategies available:
  5857                           ; Name         Instructions Cycles
  5858                           ; simple_byte            4     3 (average)
  5859                           ; direct_byte            8     6 (fixed)
  5860                           ; jumptable            260     6 (fixed)
  5861                           ;	Chosen strategy is simple_byte
  5862  02A4  086A               	movf	_countabuf+1,w
  5863  02A5  3A00               	xorlw	0	; case 0
  5864  02A6  1903               	skipnz
  5865  02A7  2AA9               	goto	l3912
  5866  02A8  2AB3               	goto	l3434
  5867  02A9                     l3912:	
  5868                           
  5869                           ; Switch size 1, requested type "space"
  5870                           ; Number of cases is 16, Range of values is 0 to 15
  5871                           ; switch strategies available:
  5872                           ; Name         Instructions Cycles
  5873                           ; direct_byte           38     6 (fixed)
  5874                           ; simple_byte           49    25 (average)
  5875                           ; jumptable            260     6 (fixed)
  5876                           ;	Chosen strategy is direct_byte
  5877  02A9  0869               	movf	_countabuf,w
  5878  02AA  0084               	movwf	4
  5879  02AB  3010               	movlw	16
  5880  02AC  0204               	subwf	4,w
  5881  02AD  1803               	skipnc
  5882  02AE  2AB3               	goto	l3434
  5883  02AF  3188               	movlp	high S3914
  5884  02B0  3504               	lslf	4,w
  5885  02B1  3E00               	addlw	low S3914
  5886  02B2  0082               	movwf	2
  5887  02B3                     l3434:	
  5888                           
  5889                           ;normal_mode.c: 76: }
  5890                           ;normal_mode.c: 78: countabuf++;
  5891  02B3  3001               	movlw	1
  5892  02B4  0020               	movlb	0	; select bank0
  5893  02B5  07E9               	addwf	_countabuf,f
  5894  02B6  3000               	movlw	0
  5895  02B7  3DEA               	addwfc	_countabuf+1,f
  5896                           
  5897                           ;normal_mode.c: 79: if(cargoData.cargoLength <= countabuf){
  5898  02B8  085A               	movf	_cargoData+1,w
  5899  02B9  026A               	subwf	_countabuf+1,w
  5900  02BA  1D03               	skipz
  5901  02BB  2ABE               	goto	u2285
  5902  02BC  0859               	movf	_cargoData,w
  5903  02BD  0269               	subwf	_countabuf,w
  5904  02BE                     u2285:	
  5905  02BE  1C03               	skipc
  5906  02BF  0008               	return
  5907                           
  5908                           ;normal_mode.c: 80: cargoData.cargoLength = 0xFFFF;
  5909  02C0  30FF               	movlw	255
  5910  02C1  00D9               	movwf	_cargoData
  5911  02C2  30FF               	movlw	255
  5912  02C3  00DA               	movwf	_cargoData+1
  5913                           
  5914                           ;normal_mode.c: 81: countabuf = 0;
  5915  02C4  01E9               	clrf	_countabuf
  5916  02C5  01EA               	clrf	_countabuf+1
  5917                           
  5918                           ;normal_mode.c: 82: isMycargo = 1;
  5919  02C6  14F0               	bsf	_isMycargo/(0+8),_isMycargo& (0+7)
  5920  02C7  0008               	return
  5921  02C8                     __end_of_readCargo:	
  5922                           
  5923                           	psect	swtext2
  5924  0800                     __pswtext2:	
  5925  0800                     S3914:	
  5926  0800  3181  29DC         	ljmp	l3390
  5927  0802  3181  29E5         	ljmp	l3392
  5928  0804  3181  29F2         	ljmp	l3394
  5929  0806  3181  29F7         	ljmp	l3396
  5930  0808  3181  29FC         	ljmp	l3398
  5931  080A  3182  2A0A         	ljmp	l3404
  5932  080C  3182  2A0D         	ljmp	l3406
  5933  080E  3182  2A0F         	ljmp	l3408
  5934  0810  3182  2A11         	ljmp	l3410
  5935  0812  3182  2A13         	ljmp	l3412
  5936  0814  3182  2A15         	ljmp	l3414
  5937  0816  3182  2A17         	ljmp	l3416
  5938  0818  3182  2A20         	ljmp	l3420
  5939  081A  3182  2A4A         	ljmp	l3424
  5940  081C  3182  2A6B         	ljmp	l3426
  5941  081E  3182  2A8F         	ljmp	l3428
  5942                           
  5943                           	psect	text7
  5944  0E3E                     __ptext7:	
  5945 ;; *************** function _clutchaction *****************
  5946 ;; Defined at:
  5947 ;;		line 68 in file "D:/programdata/16F18346_Link_IC.X/command.c"
  5948 ;; Parameters:    Size  Location     Type
  5949 ;;  comannd         1    wreg     unsigned char 
  5950 ;; Auto vars:     Size  Location     Type
  5951 ;;  comannd         1    0[BANK0 ] unsigned char 
  5952 ;; Return value:  Size  Location     Type
  5953 ;;		None               void
  5954 ;; Registers used:
  5955 ;;		wreg, status,2, status,0
  5956 ;; Tracked objects:
  5957 ;;		On entry : 0/0
  5958 ;;		On exit  : 0/0
  5959 ;;		Unchanged: 0/0
  5960 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5961 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5962 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5963 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5964 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5965 ;;Total ram usage:        1 bytes
  5966 ;; Hardware stack levels used:    1
  5967 ;; Hardware stack levels required when called:    3
  5968 ;; This function calls:
  5969 ;;		Nothing
  5970 ;; This function is called by:
  5971 ;;		_readCargo
  5972 ;; This function uses a non-reentrant model
  5973 ;;
  5974                           
  5975                           
  5976                           ;psect for function _clutchaction
  5977  0E3E                     _clutchaction:	
  5978                           
  5979                           ;incstack = 0
  5980                           ; Regs used in _clutchaction: [wreg+status,2+status,0]
  5981                           ;clutchaction@comannd stored from wreg
  5982  0E3E  0020               	movlb	0	; select bank0
  5983  0E3F  00A0               	movwf	clutchaction@comannd
  5984                           
  5985                           ;command.c: 69: if(comannd == 1){
  5986  0E40  0320               	decf	clutchaction@comannd,w
  5987  0E41  1D03               	btfss	3,2
  5988  0E42  2E46               	goto	l376
  5989                           
  5990                           ;command.c: 70: LATAbits.LATA0 = 1;
  5991  0E43  0022               	movlb	2	; select bank2
  5992  0E44  140C               	bsf	12,0	;volatile
  5993                           
  5994                           ;command.c: 71: }else{
  5995  0E45  0008               	return
  5996  0E46                     l376:	
  5997                           
  5998                           ;command.c: 72: LATAbits.LATA0 = 0;
  5999  0E46  0022               	movlb	2	; select bank2
  6000  0E47  100C               	bcf	12,0	;volatile
  6001  0E48  0008               	return
  6002  0E49                     __end_of_clutchaction:	
  6003                           
  6004                           	psect	text8
  6005  03AE                     __ptext8:	
  6006 ;; *************** function _EEPROM_download *****************
  6007 ;; Defined at:
  6008 ;;		line 70 in file "eeprom.c"
  6009 ;; Parameters:    Size  Location     Type
  6010 ;;  spi1_Read_da    1    wreg     unsigned char 
  6011 ;; Auto vars:     Size  Location     Type
  6012 ;;  spi1_Read_da    1   27[BANK0 ] unsigned char 
  6013 ;;  buflong         4   21[BANK0 ] unsigned long 
  6014 ;;  bufint          2   25[BANK0 ] unsigned int 
  6015 ;; Return value:  Size  Location     Type
  6016 ;;                  1    wreg      void 
  6017 ;; Registers used:
  6018 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6019 ;; Tracked objects:
  6020 ;;		On entry : 0/0
  6021 ;;		On exit  : 0/0
  6022 ;;		Unchanged: 0/0
  6023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6024 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6025 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6026 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6027 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6028 ;;Total ram usage:       11 bytes
  6029 ;; Hardware stack levels used:    1
  6030 ;; Hardware stack levels required when called:    4
  6031 ;; This function calls:
  6032 ;;		_ReadEEPROM
  6033 ;;		_getCargoData
  6034 ;;		_restartCargo
  6035 ;; This function is called by:
  6036 ;;		_setComunicateMode
  6037 ;; This function uses a non-reentrant model
  6038 ;;
  6039                           
  6040                           
  6041                           ;psect for function _EEPROM_download
  6042  03AE                     _EEPROM_download:	
  6043                           
  6044                           ;incstack = 0
  6045                           ; Regs used in _EEPROM_download: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6046                           ;EEPROM_download@spi1_Read_data stored from wreg
  6047  03AE  0020               	movlb	0	; select bank0
  6048  03AF  00BB               	movwf	EEPROM_download@spi1_Read_data
  6049                           
  6050                           ;eeprom.c: 71: unsigned int bufint = spi1_Read_data;
  6051  03B0  083B               	movf	EEPROM_download@spi1_Read_data,w
  6052  03B1  00B1               	movwf	??_EEPROM_download
  6053  03B2  01B2               	clrf	??_EEPROM_download+1
  6054  03B3  0831               	movf	??_EEPROM_download,w
  6055  03B4  00B9               	movwf	EEPROM_download@bufint
  6056  03B5  0832               	movf	??_EEPROM_download+1,w
  6057  03B6  00BA               	movwf	EEPROM_download@bufint+1
  6058                           
  6059                           ;eeprom.c: 72: unsigned long buflong = spi1_Read_data;
  6060  03B7  083B               	movf	EEPROM_download@spi1_Read_data,w
  6061  03B8  00B1               	movwf	??_EEPROM_download
  6062  03B9  01B2               	clrf	??_EEPROM_download+1
  6063  03BA  01B3               	clrf	??_EEPROM_download+2
  6064  03BB  01B4               	clrf	??_EEPROM_download+3
  6065  03BC  0834               	movf	??_EEPROM_download+3,w
  6066  03BD  00B8               	movwf	EEPROM_download@buflong+3
  6067  03BE  0833               	movf	??_EEPROM_download+2,w
  6068  03BF  00B7               	movwf	EEPROM_download@buflong+2
  6069  03C0  0832               	movf	??_EEPROM_download+1,w
  6070  03C1  00B6               	movwf	EEPROM_download@buflong+1
  6071  03C2  0831               	movf	??_EEPROM_download,w
  6072  03C3  00B5               	movwf	EEPROM_download@buflong
  6073                           
  6074                           ;eeprom.c: 73: cargoData = getCargoData();
  6075  03C4  318E  268B  3183   	fcall	_getCargoData
  6076  03C7  0020               	movlb	0	; select bank0
  6077  03C8  3020               	movlw	low ?_getCargoData
  6078  03C9  0086               	movwf	6
  6079  03CA  3000               	movlw	high ?_getCargoData
  6080  03CB  0087               	movwf	7
  6081  03CC  3059               	movlw	low _cargoData
  6082  03CD  0084               	movwf	4
  6083  03CE  3000               	movlw	high _cargoData
  6084  03CF  0085               	movwf	5
  6085  03D0  3010               	movlw	16
  6086  03D1  00B1               	movwf	??_EEPROM_download
  6087  03D2                     u2290:	
  6088  03D2  0016               	moviw fsr1++
  6089  03D3  001A               	movwi fsr0++
  6090  03D4  0BB1               	decfsz	??_EEPROM_download,f
  6091  03D5  2BD2               	goto	u2290
  6092                           
  6093                           ;eeprom.c: 74: if(isMycargo){
  6094  03D6  18F0               	btfsc	_isMycargo/(0+8),_isMycargo& (0+7)
  6095  03D7  2C19               	goto	l3480
  6096  03D8  2C29               	goto	l666
  6097  03D9                     l3458:	
  6098                           ;eeprom.c: 76: case 0:
  6099                           
  6100                           ;eeprom.c: 75: switch(countabuf){
  6101                           
  6102                           
  6103                           ;eeprom.c: 77: cargoData.cargoLength = (bufint << 8 | 0x00FF);
  6104  03D9  0839               	movf	EEPROM_download@bufint,w
  6105  03DA  00B2               	movwf	??_EEPROM_download+1
  6106  03DB  01B1               	clrf	??_EEPROM_download
  6107  03DC  30FF               	movlw	255
  6108  03DD  0431               	iorwf	??_EEPROM_download,w
  6109  03DE  00D9               	movwf	_cargoData
  6110  03DF  3000               	movlw	0
  6111  03E0  0432               	iorwf	??_EEPROM_download+1,w
  6112  03E1  2BED               	goto	L15
  6113  03E2                     l3460:	
  6114                           ;eeprom.c: 79: case 1:
  6115                           
  6116                           ;eeprom.c: 78: break;
  6117                           
  6118                           
  6119                           ;eeprom.c: 80: cargoData.cargoLength = cargoData.cargoLength & (bufint | 0xFF00);
  6120  03E2  3000               	movlw	0
  6121  03E3  0439               	iorwf	EEPROM_download@bufint,w
  6122  03E4  00B1               	movwf	??_EEPROM_download
  6123  03E5  30FF               	movlw	255
  6124  03E6  043A               	iorwf	EEPROM_download@bufint+1,w
  6125  03E7  00B2               	movwf	??_EEPROM_download+1
  6126  03E8  0859               	movf	_cargoData,w
  6127  03E9  0531               	andwf	??_EEPROM_download,w
  6128  03EA  00D9               	movwf	_cargoData
  6129  03EB  085A               	movf	_cargoData+1,w
  6130  03EC  0532               	andwf	??_EEPROM_download+1,w
  6131  03ED                     L15:	
  6132  03ED  00DA               	movwf	_cargoData+1
  6133                           
  6134                           ;eeprom.c: 81: break;
  6135  03EE  2C29               	goto	l666
  6136  03EF                     l3462:	
  6137                           ;eeprom.c: 82: case 2:
  6138                           
  6139                           
  6140                           ;eeprom.c: 83: cargoData.command = spi1_Read_data;
  6141  03EF  083B               	movf	EEPROM_download@spi1_Read_data,w
  6142  03F0  00B1               	movwf	??_EEPROM_download
  6143  03F1  0831               	movf	??_EEPROM_download,w
  6144  03F2  00DB               	movwf	_cargoData+2
  6145                           
  6146                           ;eeprom.c: 84: break;
  6147  03F3  2C29               	goto	l666
  6148  03F4                     l3464:	
  6149                           ;eeprom.c: 85: case 3:
  6150                           
  6151                           
  6152                           ;eeprom.c: 86: cargoData.index = spi1_Read_data;
  6153  03F4  083B               	movf	EEPROM_download@spi1_Read_data,w
  6154  03F5  00B1               	movwf	??_EEPROM_download
  6155  03F6  0831               	movf	??_EEPROM_download,w
  6156  03F7  00DC               	movwf	_cargoData+3
  6157                           
  6158                           ;eeprom.c: 87: break;
  6159  03F8  2C29               	goto	l666
  6160  03F9                     l3466:	
  6161                           ;eeprom.c: 88: case 4:
  6162                           
  6163                           
  6164                           ;eeprom.c: 89: cargoData.address = spi1_Read_data;
  6165  03F9  083B               	movf	EEPROM_download@spi1_Read_data,w
  6166  03FA  00B1               	movwf	??_EEPROM_download
  6167  03FB  0831               	movf	??_EEPROM_download,w
  6168  03FC  00DD               	movwf	_cargoData+4
  6169                           
  6170                           ;eeprom.c: 90: if(cargoData.address != linkInfo.My_address){
  6171  03FD  085D               	movf	_cargoData+4,w
  6172  03FE  0021               	movlb	1	; select bank1
  6173  03FF  063B               	xorwf	_linkInfo^(0+128),w
  6174  0400  1903               	skipnz
  6175  0401  2C07               	goto	l3472
  6176                           
  6177                           ;eeprom.c: 91: restartCargo();
  6178  0402  318E  2610  3183   	fcall	_restartCargo
  6179                           
  6180                           ;eeprom.c: 92: isMycargo = 0;
  6181  0405  10F0               	bcf	_isMycargo/(0+8),_isMycargo& (0+7)
  6182                           
  6183                           ;eeprom.c: 93: }else{
  6184  0406  2C29               	goto	l666
  6185  0407                     l3472:	
  6186                           
  6187                           ;eeprom.c: 94: LATAbits.LATA0 = ~LATAbits.LATA0;
  6188  0407  1003               	clrc
  6189  0408  0022               	movlb	2	; select bank2
  6190  0409  1C0C               	btfss	12,0	;volatile
  6191  040A  1403               	setc
  6192  040B  1C03               	btfss	3,0
  6193  040C  2C10               	goto	u2320
  6194  040D  0022               	movlb	2	; select bank2
  6195  040E  140C               	bsf	12,0	;volatile
  6196  040F  2C12               	goto	l3474
  6197  0410                     u2320:	
  6198  0410  0022               	movlb	2	; select bank2
  6199  0411  100C               	bcf	12,0	;volatile
  6200  0412                     l3474:	
  6201                           
  6202                           ;eeprom.c: 95: isMyAddr = 1;
  6203  0412  1470               	bsf	_isMyAddr/(0+8),_isMyAddr& (0+7)
  6204                           
  6205                           ;eeprom.c: 96: EEPROM_ADDR_buf = 0xF000;
  6206  0413  3000               	movlw	0
  6207  0414  0021               	movlb	1	; select bank1
  6208  0415  00C7               	movwf	_EEPROM_ADDR_buf^(0+128)
  6209  0416  30F0               	movlw	240
  6210  0417  00C8               	movwf	(_EEPROM_ADDR_buf^(0+128)+1)
  6211                           
  6212                           ;eeprom.c: 99: }
  6213                           
  6214                           ;eeprom.c: 97: }
  6215                           ;eeprom.c: 98: break;
  6216  0418  2C29               	goto	l666
  6217  0419                     l3480:	
  6218                           
  6219                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6220                           ; Switch size 1, requested type "space"
  6221                           ; Number of cases is 1, Range of values is 0 to 0
  6222                           ; switch strategies available:
  6223                           ; Name         Instructions Cycles
  6224                           ; simple_byte            4     3 (average)
  6225                           ; direct_byte            8     6 (fixed)
  6226                           ; jumptable            260     6 (fixed)
  6227                           ;	Chosen strategy is simple_byte
  6228  0419  0020               	movlb	0	; select bank0
  6229  041A  086A               	movf	_countabuf+1,w
  6230  041B  3A00               	xorlw	0	; case 0
  6231  041C  1903               	skipnz
  6232  041D  2C1F               	goto	l3916
  6233  041E  2C29               	goto	l666
  6234  041F                     l3916:	
  6235                           
  6236                           ; Switch size 1, requested type "space"
  6237                           ; Number of cases is 5, Range of values is 0 to 4
  6238                           ; switch strategies available:
  6239                           ; Name         Instructions Cycles
  6240                           ; direct_byte           16     6 (fixed)
  6241                           ; simple_byte           16     9 (average)
  6242                           ; jumptable            260     6 (fixed)
  6243                           ;	Chosen strategy is direct_byte
  6244  041F  0869               	movf	_countabuf,w
  6245  0420  0084               	movwf	4
  6246  0421  3005               	movlw	5
  6247  0422  0204               	subwf	4,w
  6248  0423  1803               	skipnc
  6249  0424  2C29               	goto	l666
  6250  0425  3188               	movlp	high S3918
  6251  0426  3504               	lslf	4,w
  6252  0427  3E40               	addlw	low S3918
  6253  0428  0082               	movwf	2
  6254  0429                     l666:	
  6255                           
  6256                           ;eeprom.c: 100: }
  6257                           ;eeprom.c: 101: if(isMyAddr && countabuf > 4){
  6258  0429  1C70               	btfss	_isMyAddr/(0+8),_isMyAddr& (0+7)
  6259  042A  2C49               	goto	l3490
  6260  042B  3000               	movlw	0
  6261  042C  0020               	movlb	0	; select bank0
  6262  042D  026A               	subwf	_countabuf+1,w
  6263  042E  3005               	movlw	5
  6264  042F  1903               	skipnz
  6265  0430  0269               	subwf	_countabuf,w
  6266  0431  1C03               	skipc
  6267  0432  2C49               	goto	l3490
  6268                           
  6269                           ;eeprom.c: 103: ReadEEPROM (EEPROM_ADDR_buf);
  6270  0433  0021               	movlb	1	; select bank1
  6271  0434  0848               	movf	(_EEPROM_ADDR_buf+1)^(0+128),w
  6272  0435  0020               	movlb	0	; select bank0
  6273  0436  00A1               	movwf	ReadEEPROM@addr+1
  6274  0437  0021               	movlb	1	; select bank1
  6275  0438  0847               	movf	_EEPROM_ADDR_buf^(0+128),w
  6276  0439  0020               	movlb	0	; select bank0
  6277  043A  00A0               	movwf	ReadEEPROM@addr
  6278  043B  318F  272C  3183   	fcall	_ReadEEPROM
  6279                           
  6280                           ;eeprom.c: 104: spi2_Send_data = RaadData[0];
  6281  043E  0021               	movlb	1	; select bank1
  6282  043F  0849               	movf	_RaadData^(0+128),w
  6283  0440  0020               	movlb	0	; select bank0
  6284  0441  00B1               	movwf	??_EEPROM_download
  6285  0442  0831               	movf	??_EEPROM_download,w
  6286  0443  00EE               	movwf	_spi2_Send_data
  6287                           
  6288                           ;eeprom.c: 107: EEPROM_ADDR_buf += 1;
  6289  0444  3001               	movlw	1
  6290  0445  0021               	movlb	1	; select bank1
  6291  0446  07C7               	addwf	_EEPROM_ADDR_buf^(0+128),f
  6292  0447  3000               	movlw	0
  6293  0448  3DC8               	addwfc	(_EEPROM_ADDR_buf+1)^(0+128),f
  6294  0449                     l3490:	
  6295                           
  6296                           ;eeprom.c: 109: }
  6297                           ;eeprom.c: 110: countabuf++;
  6298  0449  3001               	movlw	1
  6299  044A  0020               	movlb	0	; select bank0
  6300  044B  07E9               	addwf	_countabuf,f
  6301  044C  3000               	movlw	0
  6302  044D  3DEA               	addwfc	_countabuf+1,f
  6303                           
  6304                           ;eeprom.c: 111: if(calibdata.cargoLength <= countabuf){
  6305  044E  0021               	movlb	1	; select bank1
  6306  044F  0833               	movf	(_calibdata+1)^(0+128),w
  6307  0450  0020               	movlb	0	; select bank0
  6308  0451  026A               	subwf	_countabuf+1,w
  6309  0452  1D03               	skipz
  6310  0453  2C58               	goto	u2365
  6311  0454  0021               	movlb	1	; select bank1
  6312  0455  0832               	movf	_calibdata^(0+128),w
  6313  0456  0020               	movlb	0	; select bank0
  6314  0457  0269               	subwf	_countabuf,w
  6315  0458                     u2365:	
  6316  0458  1C03               	skipc
  6317  0459  2C64               	goto	l3502
  6318                           
  6319                           ;eeprom.c: 112: calibdata.cargoLength = 0xFFFF;
  6320  045A  30FF               	movlw	255
  6321  045B  0021               	movlb	1	; select bank1
  6322  045C  00B2               	movwf	_calibdata^(0+128)
  6323  045D  30FF               	movlw	255
  6324  045E  00B3               	movwf	(_calibdata^(0+128)+1)
  6325                           
  6326                           ;eeprom.c: 113: countabuf = 0;
  6327  045F  0020               	movlb	0	; select bank0
  6328  0460  01E9               	clrf	_countabuf
  6329  0461  01EA               	clrf	_countabuf+1
  6330                           
  6331                           ;eeprom.c: 114: isMycargo = 1;
  6332  0462  14F0               	bsf	_isMycargo/(0+8),_isMycargo& (0+7)
  6333                           
  6334                           ;eeprom.c: 115: isMyAddr = 0;
  6335  0463  1070               	bcf	_isMyAddr/(0+8),_isMyAddr& (0+7)
  6336  0464                     l3502:	
  6337                           
  6338                           ;eeprom.c: 116: }
  6339                           ;eeprom.c: 118: if(0xF0FF <= EEPROM_ADDR_buf){
  6340  0464  30F0               	movlw	240
  6341  0465  0021               	movlb	1	; select bank1
  6342  0466  0248               	subwf	(_EEPROM_ADDR_buf+1)^(0+128),w
  6343  0467  30FF               	movlw	255
  6344  0468  1903               	skipnz
  6345  0469  0247               	subwf	_EEPROM_ADDR_buf^(0+128),w
  6346  046A  1C03               	skipc
  6347  046B  0008               	return
  6348                           
  6349                           ;eeprom.c: 119: countabuf = 0;
  6350  046C  0020               	movlb	0	; select bank0
  6351  046D  01E9               	clrf	_countabuf
  6352  046E  01EA               	clrf	_countabuf+1
  6353                           
  6354                           ;eeprom.c: 120: isMycargo = 1;
  6355  046F  14F0               	bsf	_isMycargo/(0+8),_isMycargo& (0+7)
  6356  0470  0008               	return
  6357  0471                     __end_of_EEPROM_download:	
  6358                           
  6359                           	psect	swtext3
  6360  0840                     __pswtext3:	
  6361  0840                     S3918:	
  6362  0840  3183  2BD9         	ljmp	l3458
  6363  0842  3183  2BE2         	ljmp	l3460
  6364  0844  3183  2BEF         	ljmp	l3462
  6365  0846  3183  2BF4         	ljmp	l3464
  6366  0848  3183  2BF9         	ljmp	l3466
  6367                           
  6368                           	psect	text9
  6369  0F2C                     __ptext9:	
  6370 ;; *************** function _ReadEEPROM *****************
  6371 ;; Defined at:
  6372 ;;		line 54 in file "eeprom.c"
  6373 ;; Parameters:    Size  Location     Type
  6374 ;;  addr            2    0[BANK0 ] int 
  6375 ;; Auto vars:     Size  Location     Type
  6376 ;;  Loadr           1    4[BANK0 ] unsigned char 
  6377 ;;  Hiadr           1    3[BANK0 ] unsigned char 
  6378 ;; Return value:  Size  Location     Type
  6379 ;;                  1    wreg      void 
  6380 ;; Registers used:
  6381 ;;		wreg, status,2
  6382 ;; Tracked objects:
  6383 ;;		On entry : 0/0
  6384 ;;		On exit  : 0/0
  6385 ;;		Unchanged: 0/0
  6386 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6387 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6388 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6389 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6390 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6391 ;;Total ram usage:        5 bytes
  6392 ;; Hardware stack levels used:    1
  6393 ;; Hardware stack levels required when called:    3
  6394 ;; This function calls:
  6395 ;;		Nothing
  6396 ;; This function is called by:
  6397 ;;		_EEPROM_download
  6398 ;; This function uses a non-reentrant model
  6399 ;;
  6400                           
  6401                           
  6402                           ;psect for function _ReadEEPROM
  6403  0F2C                     _ReadEEPROM:	
  6404                           
  6405                           ;eeprom.c: 56: unsigned char Hiadr = addr >> 8 & 0xFF;
  6406                           
  6407                           ;incstack = 0
  6408                           ; Regs used in _ReadEEPROM: [wreg+status,2]
  6409  0F2C  0020               	movlb	0	; select bank0
  6410  0F2D  0821               	movf	ReadEEPROM@addr+1,w
  6411  0F2E  00A2               	movwf	??_ReadEEPROM
  6412  0F2F  0822               	movf	??_ReadEEPROM,w
  6413  0F30  00A3               	movwf	ReadEEPROM@Hiadr
  6414                           
  6415                           ;eeprom.c: 57: unsigned char Loadr = addr & 0xFF;
  6416  0F31  0820               	movf	ReadEEPROM@addr,w
  6417  0F32  00A2               	movwf	??_ReadEEPROM
  6418  0F33  0822               	movf	??_ReadEEPROM,w
  6419  0F34  00A4               	movwf	ReadEEPROM@Loadr
  6420                           
  6421                           ;eeprom.c: 58: NVMCON1bits.NVMREGS = 1;
  6422  0F35  0031               	movlb	17	; select bank17
  6423  0F36  1715               	bsf	21,6	;volsfr
  6424                           
  6425                           ;eeprom.c: 59: NVMADRL = Loadr;
  6426  0F37  0020               	movlb	0	; select bank0
  6427  0F38  0824               	movf	ReadEEPROM@Loadr,w
  6428  0F39  0031               	movlb	17	; select bank17
  6429  0F3A  0091               	movwf	17	;volatile
  6430                           
  6431                           ;eeprom.c: 60: NVMADRH = Hiadr;
  6432  0F3B  0020               	movlb	0	; select bank0
  6433  0F3C  0823               	movf	ReadEEPROM@Hiadr,w
  6434  0F3D  0031               	movlb	17	; select bank17
  6435  0F3E  0092               	movwf	18	;volatile
  6436                           
  6437                           ;eeprom.c: 61: NVMCON1bits.RD = 1;
  6438  0F3F  1415               	bsf	21,0	;volsfr
  6439                           
  6440                           ;eeprom.c: 62: RD = 1;
  6441  0F40  1415               	bsf	21,0	;volsfr
  6442                           
  6443                           ;eeprom.c: 64: RaadData[0] = NVMDATL;
  6444  0F41  0813               	movf	19,w	;volatile
  6445  0F42  0020               	movlb	0	; select bank0
  6446  0F43  00A2               	movwf	??_ReadEEPROM
  6447  0F44  0822               	movf	??_ReadEEPROM,w
  6448  0F45  0021               	movlb	1	; select bank1
  6449  0F46  00C9               	movwf	_RaadData^(0+128)
  6450                           
  6451                           ;eeprom.c: 65: RaadData[1] = NVMDATH;
  6452  0F47  0031               	movlb	17	; select bank17
  6453  0F48  0814               	movf	20,w	;volatile
  6454  0F49  0020               	movlb	0	; select bank0
  6455  0F4A  00A2               	movwf	??_ReadEEPROM
  6456  0F4B  0822               	movf	??_ReadEEPROM,w
  6457  0F4C  0021               	movlb	1	; select bank1
  6458  0F4D  00CA               	movwf	(_RaadData^(0+128)+1)
  6459  0F4E  0008               	return
  6460  0F4F                     __end_of_ReadEEPROM:	
  6461                           
  6462                           	psect	text10
  6463  0095                     __ptext10:	
  6464 ;; *************** function _Calibrate_download *****************
  6465 ;; Defined at:
  6466 ;;		line 65 in file "D:/programdata/16F18346_Link_IC.X/calibrate_mode.c"
  6467 ;; Parameters:    Size  Location     Type
  6468 ;;  spi_Read_dat    1    wreg     unsigned char 
  6469 ;; Auto vars:     Size  Location     Type
  6470 ;;  spi_Read_dat    1   55[BANK0 ] unsigned char 
  6471 ;;  buflong         4   49[BANK0 ] unsigned long 
  6472 ;;  bufint          2   53[BANK0 ] unsigned int 
  6473 ;; Return value:  Size  Location     Type
  6474 ;;                  1    wreg      void 
  6475 ;; Registers used:
  6476 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6477 ;; Tracked objects:
  6478 ;;		On entry : 0/0
  6479 ;;		On exit  : 0/0
  6480 ;;		Unchanged: 0/0
  6481 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6482 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6483 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6484 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6485 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6486 ;;Total ram usage:       13 bytes
  6487 ;; Hardware stack levels used:    1
  6488 ;; Hardware stack levels required when called:    5
  6489 ;; This function calls:
  6490 ;;		_InitCalibrate
  6491 ;;		_TransLong256To255
  6492 ;;		_isEndpoint
  6493 ;;		_resetCargo
  6494 ;; This function is called by:
  6495 ;;		_setComunicateMode
  6496 ;; This function uses a non-reentrant model
  6497 ;;
  6498                           
  6499                           
  6500                           ;psect for function _Calibrate_download
  6501  0095                     _Calibrate_download:	
  6502                           
  6503                           ;incstack = 0
  6504                           ; Regs used in _Calibrate_download: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6505                           ;Calibrate_download@spi_Read_data stored from wreg
  6506  0095  0020               	movlb	0	; select bank0
  6507  0096  00D7               	movwf	Calibrate_download@spi_Read_data
  6508                           
  6509                           ;calibrate_mode.c: 67: unsigned int bufint = spi_Read_data;
  6510  0097  0857               	movf	Calibrate_download@spi_Read_data,w
  6511  0098  00CB               	movwf	??_Calibrate_download
  6512  0099  01CC               	clrf	??_Calibrate_download+1
  6513  009A  084B               	movf	??_Calibrate_download,w
  6514  009B  00D5               	movwf	Calibrate_download@bufint
  6515  009C  084C               	movf	??_Calibrate_download+1,w
  6516  009D  00D6               	movwf	Calibrate_download@bufint+1
  6517                           
  6518                           ;calibrate_mode.c: 68: unsigned long buflong = spi_Read_data;
  6519  009E  0857               	movf	Calibrate_download@spi_Read_data,w
  6520  009F  00CB               	movwf	??_Calibrate_download
  6521  00A0  01CC               	clrf	??_Calibrate_download+1
  6522  00A1  01CD               	clrf	??_Calibrate_download+2
  6523  00A2  01CE               	clrf	??_Calibrate_download+3
  6524  00A3  084E               	movf	??_Calibrate_download+3,w
  6525  00A4  00D4               	movwf	Calibrate_download@buflong+3
  6526  00A5  084D               	movf	??_Calibrate_download+2,w
  6527  00A6  00D3               	movwf	Calibrate_download@buflong+2
  6528  00A7  084C               	movf	??_Calibrate_download+1,w
  6529  00A8  00D2               	movwf	Calibrate_download@buflong+1
  6530  00A9  084B               	movf	??_Calibrate_download,w
  6531  00AA  00D1               	movwf	Calibrate_download@buflong
  6532                           
  6533                           ;calibrate_mode.c: 69: isEndpoint();
  6534  00AB  3187  27A0  3180   	fcall	_isEndpoint
  6535                           
  6536                           ;calibrate_mode.c: 70: switch(countabuf){
  6537  00AE  2982               	goto	l3364
  6538  00AF                     l3326:	
  6539                           ;calibrate_mode.c: 71: case 0:
  6540                           
  6541                           
  6542                           ;calibrate_mode.c: 72: InitCalibrate();
  6543  00AF  3187  27D4  3180   	fcall	_InitCalibrate
  6544                           
  6545                           ;calibrate_mode.c: 73: calibdata.cargoLength = (bufint << 8 | 0x00FF);
  6546  00B2  0020               	movlb	0	; select bank0
  6547  00B3  0855               	movf	Calibrate_download@bufint,w
  6548  00B4  00CC               	movwf	??_Calibrate_download+1
  6549  00B5  01CB               	clrf	??_Calibrate_download
  6550  00B6  30FF               	movlw	255
  6551  00B7  044B               	iorwf	??_Calibrate_download,w
  6552  00B8  0021               	movlb	1	; select bank1
  6553  00B9  00B2               	movwf	_calibdata^(0+128)
  6554  00BA  3000               	movlw	0
  6555  00BB  0020               	movlb	0	; select bank0
  6556  00BC  044C               	iorwf	??_Calibrate_download+1,w
  6557  00BD  28CD               	goto	L16
  6558  00BE                     l3332:	
  6559                           ;calibrate_mode.c: 76: case 1:
  6560                           
  6561                           ;calibrate_mode.c: 75: break;
  6562                           
  6563                           ;calibrate_mode.c: 74: spi2_Send_data = spi_Read_data;
  6564                           
  6565                           
  6566                           ;calibrate_mode.c: 77: calibdata.cargoLength = calibdata.cargoLength & (bufint | 0xFF00)
      +                          ;
  6567  00BE  3000               	movlw	0
  6568  00BF  0455               	iorwf	Calibrate_download@bufint,w
  6569  00C0  00CB               	movwf	??_Calibrate_download
  6570  00C1  30FF               	movlw	255
  6571  00C2  0456               	iorwf	Calibrate_download@bufint+1,w
  6572  00C3  00CC               	movwf	??_Calibrate_download+1
  6573  00C4  0021               	movlb	1	; select bank1
  6574  00C5  0832               	movf	_calibdata^(0+128),w
  6575  00C6  0020               	movlb	0	; select bank0
  6576  00C7  054B               	andwf	??_Calibrate_download,w
  6577  00C8  0021               	movlb	1	; select bank1
  6578  00C9  00B2               	movwf	_calibdata^(0+128)
  6579  00CA  0833               	movf	(_calibdata+1)^(0+128),w
  6580  00CB  0020               	movlb	0	; select bank0
  6581  00CC  054C               	andwf	??_Calibrate_download+1,w
  6582  00CD                     L16:	
  6583  00CD  0021               	movlb	1	; select bank1
  6584  00CE  00B3               	movwf	(_calibdata+1)^(0+128)
  6585  00CF  28DB               	goto	L18
  6586  00D0                     l3334:	
  6587                           ;calibrate_mode.c: 80: case 2:
  6588                           
  6589                           ;calibrate_mode.c: 79: break;
  6590                           
  6591                           ;calibrate_mode.c: 78: spi2_Send_data = spi_Read_data;
  6592                           
  6593                           
  6594                           ;calibrate_mode.c: 81: calibdata.command = spi_Read_data;
  6595  00D0  0857               	movf	Calibrate_download@spi_Read_data,w
  6596  00D1  00CB               	movwf	??_Calibrate_download
  6597  00D2  084B               	movf	??_Calibrate_download,w
  6598  00D3  0021               	movlb	1	; select bank1
  6599  00D4  00B4               	movwf	(_calibdata^(0+128)+2)
  6600  00D5  28DB               	goto	L18
  6601  00D6                     l3336:	
  6602                           ;calibrate_mode.c: 84: case 3:
  6603                           
  6604                           ;calibrate_mode.c: 83: break;
  6605                           
  6606                           ;calibrate_mode.c: 82: spi2_Send_data = spi_Read_data;
  6607                           
  6608                           
  6609                           ;calibrate_mode.c: 85: calibdata.index = spi_Read_data;
  6610  00D6  0857               	movf	Calibrate_download@spi_Read_data,w
  6611  00D7  00CB               	movwf	??_Calibrate_download
  6612  00D8  084B               	movf	??_Calibrate_download,w
  6613  00D9  0021               	movlb	1	; select bank1
  6614  00DA  00B5               	movwf	(_calibdata^(0+128)+3)
  6615  00DB                     L18:	
  6616                           
  6617                           ;calibrate_mode.c: 86: spi2_Send_data = spi_Read_data;
  6618  00DB  0020               	movlb	0	; select bank0
  6619  00DC  0857               	movf	Calibrate_download@spi_Read_data,w
  6620  00DD  2968               	goto	L24
  6621  00DE                     l3338:	
  6622                           ;calibrate_mode.c: 88: case 4:
  6623                           
  6624                           ;calibrate_mode.c: 87: break;
  6625                           
  6626                           
  6627                           ;calibrate_mode.c: 89: linkInfo.My_address = spi_Read_data +1;
  6628  00DE  0857               	movf	Calibrate_download@spi_Read_data,w
  6629  00DF  3E01               	addlw	1
  6630  00E0  00CB               	movwf	??_Calibrate_download
  6631  00E1  084B               	movf	??_Calibrate_download,w
  6632  00E2  0021               	movlb	1	; select bank1
  6633  00E3  00BB               	movwf	_linkInfo^(0+128)
  6634                           
  6635                           ;calibrate_mode.c: 90: spi2_Send_data = linkInfo.My_address;
  6636  00E4  083B               	movf	_linkInfo^(0+128),w
  6637  00E5  0020               	movlb	0	; select bank0
  6638  00E6  2968               	goto	L24
  6639  00E7                     l3342:	
  6640                           ;calibrate_mode.c: 92: case 5:
  6641                           
  6642                           ;calibrate_mode.c: 91: break;
  6643                           
  6644                           
  6645                           ;calibrate_mode.c: 93: calibdata.WorkingCount++;
  6646  00E7  3001               	movlw	1
  6647  00E8  0021               	movlb	1	; select bank1
  6648  00E9  07B6               	addwf	(_calibdata^(0+128)+4),f
  6649  00EA  3000               	movlw	0
  6650  00EB  3DB7               	addwfc	((_calibdata+1)^(0+128)+4),f
  6651  00EC  3000               	movlw	0
  6652  00ED  3DB8               	addwfc	((_calibdata+2)^(0+128)+4),f
  6653  00EE  3000               	movlw	0
  6654  00EF  3DB9               	addwfc	((_calibdata+3)^(0+128)+4),f
  6655                           
  6656                           ;calibrate_mode.c: 94: spi2_Send_data = (TransLong256To255(calibdata.WorkingCount) >> 24
      +                           & 0x000000ff);
  6657  00F0  3004               	movlw	4
  6658  00F1  3EB2               	addlw	(low (_calibdata| 0))& (0+255)
  6659  00F2  0086               	movwf	6
  6660  00F3  0187               	clrf	7
  6661  00F4  3F40               	moviw [0]fsr1
  6662  00F5  0020               	movlb	0	; select bank0
  6663  00F6  00AF               	movwf	TransLong256To255@data
  6664  00F7  3F41               	moviw [1]fsr1
  6665  00F8  00B0               	movwf	TransLong256To255@data+1
  6666  00F9  3F42               	moviw [2]fsr1
  6667  00FA  00B1               	movwf	TransLong256To255@data+2
  6668  00FB  3F43               	moviw [3]fsr1
  6669  00FC  00B2               	movwf	TransLong256To255@data+3
  6670  00FD  3182  22C8  3180   	fcall	_TransLong256To255
  6671  0100  0020               	movlb	0	; select bank0
  6672  0101  082F               	movf	?_TransLong256To255,w
  6673  0102  00CB               	movwf	??_Calibrate_download
  6674  0103  0830               	movf	?_TransLong256To255+1,w
  6675  0104  00CC               	movwf	??_Calibrate_download+1
  6676  0105  0831               	movf	?_TransLong256To255+2,w
  6677  0106  00CD               	movwf	??_Calibrate_download+2
  6678  0107  0832               	movf	?_TransLong256To255+3,w
  6679  0108  00CE               	movwf	??_Calibrate_download+3
  6680  0109  3018               	movlw	24
  6681  010A  00CF               	movwf	??_Calibrate_download+4
  6682  010B                     u2165:	
  6683  010B  37CE               	asrf	??_Calibrate_download+3,f
  6684  010C  0CCD               	rrf	??_Calibrate_download+2,f
  6685  010D  0CCC               	rrf	??_Calibrate_download+1,f
  6686  010E  0CCB               	rrf	??_Calibrate_download,f
  6687  010F  0BCF               	decfsz	??_Calibrate_download+4,f
  6688  0110  290B               	goto	u2165
  6689  0111  2953               	goto	L26
  6690  0112                     l3346:	
  6691                           ;calibrate_mode.c: 96: case 6:
  6692                           
  6693                           ;calibrate_mode.c: 95: break;
  6694                           
  6695                           
  6696                           ;calibrate_mode.c: 97: spi2_Send_data = (TransLong256To255(calibdata.WorkingCount) >> 16
      +                           & 0x000000ff);
  6697  0112  3004               	movlw	4
  6698  0113  3EB2               	addlw	(low (_calibdata| 0))& (0+255)
  6699  0114  0086               	movwf	6
  6700  0115  0187               	clrf	7
  6701  0116  3F40               	moviw [0]fsr1
  6702  0117  00AF               	movwf	TransLong256To255@data
  6703  0118  3F41               	moviw [1]fsr1
  6704  0119  00B0               	movwf	TransLong256To255@data+1
  6705  011A  3F42               	moviw [2]fsr1
  6706  011B  00B1               	movwf	TransLong256To255@data+2
  6707  011C  3F43               	moviw [3]fsr1
  6708  011D  00B2               	movwf	TransLong256To255@data+3
  6709  011E  3182  22C8  3180   	fcall	_TransLong256To255
  6710  0121  0020               	movlb	0	; select bank0
  6711  0122  082F               	movf	?_TransLong256To255,w
  6712  0123  00CB               	movwf	??_Calibrate_download
  6713  0124  0830               	movf	?_TransLong256To255+1,w
  6714  0125  00CC               	movwf	??_Calibrate_download+1
  6715  0126  0831               	movf	?_TransLong256To255+2,w
  6716  0127  00CD               	movwf	??_Calibrate_download+2
  6717  0128  0832               	movf	?_TransLong256To255+3,w
  6718  0129  00CE               	movwf	??_Calibrate_download+3
  6719  012A  3010               	movlw	16
  6720  012B  00CF               	movwf	??_Calibrate_download+4
  6721  012C                     u2175:	
  6722  012C  37CE               	asrf	??_Calibrate_download+3,f
  6723  012D  0CCD               	rrf	??_Calibrate_download+2,f
  6724  012E  0CCC               	rrf	??_Calibrate_download+1,f
  6725  012F  0CCB               	rrf	??_Calibrate_download,f
  6726  0130  0BCF               	decfsz	??_Calibrate_download+4,f
  6727  0131  292C               	goto	u2175
  6728  0132  2953               	goto	L26
  6729  0133                     l3348:	
  6730                           ;calibrate_mode.c: 99: case 7:
  6731                           
  6732                           ;calibrate_mode.c: 98: break;
  6733                           
  6734                           
  6735                           ;calibrate_mode.c: 100: spi2_Send_data = (TransLong256To255(calibdata.WorkingCount) >> 8
      +                           & 0x000000ff);
  6736  0133  3004               	movlw	4
  6737  0134  3EB2               	addlw	(low (_calibdata| 0))& (0+255)
  6738  0135  0086               	movwf	6
  6739  0136  0187               	clrf	7
  6740  0137  3F40               	moviw [0]fsr1
  6741  0138  00AF               	movwf	TransLong256To255@data
  6742  0139  3F41               	moviw [1]fsr1
  6743  013A  00B0               	movwf	TransLong256To255@data+1
  6744  013B  3F42               	moviw [2]fsr1
  6745  013C  00B1               	movwf	TransLong256To255@data+2
  6746  013D  3F43               	moviw [3]fsr1
  6747  013E  00B2               	movwf	TransLong256To255@data+3
  6748  013F  3182  22C8  3180   	fcall	_TransLong256To255
  6749  0142  0020               	movlb	0	; select bank0
  6750  0143  082F               	movf	?_TransLong256To255,w
  6751  0144  00CB               	movwf	??_Calibrate_download
  6752  0145  0830               	movf	?_TransLong256To255+1,w
  6753  0146  00CC               	movwf	??_Calibrate_download+1
  6754  0147  0831               	movf	?_TransLong256To255+2,w
  6755  0148  00CD               	movwf	??_Calibrate_download+2
  6756  0149  0832               	movf	?_TransLong256To255+3,w
  6757  014A  00CE               	movwf	??_Calibrate_download+3
  6758  014B  3008               	movlw	8
  6759  014C  00CF               	movwf	??_Calibrate_download+4
  6760  014D                     u2185:	
  6761  014D  37CE               	asrf	??_Calibrate_download+3,f
  6762  014E  0CCD               	rrf	??_Calibrate_download+2,f
  6763  014F  0CCC               	rrf	??_Calibrate_download+1,f
  6764  0150  0CCB               	rrf	??_Calibrate_download,f
  6765  0151  0BCF               	decfsz	??_Calibrate_download+4,f
  6766  0152  294D               	goto	u2185
  6767  0153                     L26:	
  6768  0153  084B               	movf	??_Calibrate_download,w
  6769  0154  00D0               	movwf	??_Calibrate_download+5
  6770  0155  0850               	movf	??_Calibrate_download+5,w
  6771  0156  296A               	goto	L23
  6772  0157                     l3350:	
  6773                           ;calibrate_mode.c: 102: case 8:
  6774                           
  6775                           ;calibrate_mode.c: 101: break;
  6776                           
  6777                           
  6778                           ;calibrate_mode.c: 103: spi2_Send_data = (TransLong256To255(calibdata.WorkingCount) & 0x
      +                          000000ff);
  6779  0157  3004               	movlw	4
  6780  0158  3EB2               	addlw	(low (_calibdata| 0))& (0+255)
  6781  0159  0086               	movwf	6
  6782  015A  0187               	clrf	7
  6783  015B  3F40               	moviw [0]fsr1
  6784  015C  00AF               	movwf	TransLong256To255@data
  6785  015D  3F41               	moviw [1]fsr1
  6786  015E  00B0               	movwf	TransLong256To255@data+1
  6787  015F  3F42               	moviw [2]fsr1
  6788  0160  00B1               	movwf	TransLong256To255@data+2
  6789  0161  3F43               	moviw [3]fsr1
  6790  0162  00B2               	movwf	TransLong256To255@data+3
  6791  0163  3182  22C8  3180   	fcall	_TransLong256To255
  6792  0166  0020               	movlb	0	; select bank0
  6793  0167  082F               	movf	?_TransLong256To255,w
  6794  0168                     L24:	
  6795  0168  00CB               	movwf	??_Calibrate_download
  6796  0169  084B               	movf	??_Calibrate_download,w
  6797  016A                     L23:	
  6798  016A  00EE               	movwf	_spi2_Send_data
  6799                           
  6800                           ;calibrate_mode.c: 104: break;
  6801  016B  2992               	goto	l437
  6802  016C                     l446:	
  6803                           ;calibrate_mode.c: 105: case 9:
  6804                           
  6805                           
  6806                           ;calibrate_mode.c: 107: if(isEndPointTrig == 1){
  6807  016C  1C7B               	btfss	_isEndPointTrig/(0+8),_isEndPointTrig& (0+7)
  6808  016D  2974               	goto	l447
  6809                           
  6810                           ;calibrate_mode.c: 108: LATAbits.LATA0 = 1;
  6811  016E  0022               	movlb	2	; select bank2
  6812  016F  140C               	bsf	12,0	;volatile
  6813                           
  6814                           ;calibrate_mode.c: 109: linkInfo.endpoint = 1;
  6815  0170  0021               	movlb	1	; select bank1
  6816  0171  01C0               	clrf	(_linkInfo^(0+128)+5)
  6817  0172  0AC0               	incf	(_linkInfo^(0+128)+5),f
  6818                           
  6819                           ;calibrate_mode.c: 110: }else{
  6820  0173  2978               	goto	l3356
  6821  0174                     l447:	
  6822                           
  6823                           ;calibrate_mode.c: 111: LATAbits.LATA0 = 0;
  6824  0174  0022               	movlb	2	; select bank2
  6825  0175  100C               	bcf	12,0	;volatile
  6826                           
  6827                           ;calibrate_mode.c: 112: linkInfo.endpoint = 0;
  6828  0176  0021               	movlb	1	; select bank1
  6829  0177  01C0               	clrf	(_linkInfo^(0+128)+5)
  6830  0178                     l3356:	
  6831                           
  6832                           ;calibrate_mode.c: 113: }
  6833                           ;calibrate_mode.c: 114: spi2_Send_data = linkInfo.My_address;
  6834  0178  083B               	movf	_linkInfo^(0+128),w
  6835  0179  0020               	movlb	0	; select bank0
  6836  017A  00CB               	movwf	??_Calibrate_download
  6837  017B  084B               	movf	??_Calibrate_download,w
  6838  017C  00EE               	movwf	_spi2_Send_data
  6839                           
  6840                           ;calibrate_mode.c: 115: isEndPointTrig = 0;
  6841  017D  107B               	bcf	_isEndPointTrig/(0+8),_isEndPointTrig& (0+7)
  6842                           
  6843                           ;calibrate_mode.c: 116: resetCargo();
  6844  017E  318E  269B  3180   	fcall	_resetCargo
  6845                           
  6846                           ;calibrate_mode.c: 118: }
  6847                           
  6848                           ;calibrate_mode.c: 117: break;
  6849  0181  2992               	goto	l437
  6850  0182                     l3364:	
  6851                           
  6852                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6853                           ; Switch size 1, requested type "space"
  6854                           ; Number of cases is 1, Range of values is 0 to 0
  6855                           ; switch strategies available:
  6856                           ; Name         Instructions Cycles
  6857                           ; simple_byte            4     3 (average)
  6858                           ; direct_byte            8     6 (fixed)
  6859                           ; jumptable            260     6 (fixed)
  6860                           ;	Chosen strategy is simple_byte
  6861  0182  0020               	movlb	0	; select bank0
  6862  0183  086A               	movf	_countabuf+1,w
  6863  0184  3A00               	xorlw	0	; case 0
  6864  0185  1903               	skipnz
  6865  0186  2988               	goto	l3920
  6866  0187  2992               	goto	l437
  6867  0188                     l3920:	
  6868                           
  6869                           ; Switch size 1, requested type "space"
  6870                           ; Number of cases is 10, Range of values is 0 to 9
  6871                           ; switch strategies available:
  6872                           ; Name         Instructions Cycles
  6873                           ; direct_byte           26     6 (fixed)
  6874                           ; simple_byte           31    16 (average)
  6875                           ; jumptable            260     6 (fixed)
  6876                           ;	Chosen strategy is direct_byte
  6877  0188  0869               	movf	_countabuf,w
  6878  0189  0084               	movwf	4
  6879  018A  300A               	movlw	10
  6880  018B  0204               	subwf	4,w
  6881  018C  1803               	skipnc
  6882  018D  2992               	goto	l437
  6883  018E  3188               	movlp	high S3922
  6884  018F  3504               	lslf	4,w
  6885  0190  3E20               	addlw	low S3922
  6886  0191  0082               	movwf	2
  6887  0192                     l437:	
  6888                           
  6889                           ;calibrate_mode.c: 119: if(isEndPointTrig){
  6890  0192  1C7B               	btfss	_isEndPointTrig/(0+8),_isEndPointTrig& (0+7)
  6891  0193  2997               	goto	l3368
  6892                           
  6893                           ;calibrate_mode.c: 120: spi2_Send_data = 0x01;
  6894  0194  0020               	movlb	0	; select bank0
  6895  0195  01EE               	clrf	_spi2_Send_data
  6896  0196  0AEE               	incf	_spi2_Send_data,f
  6897  0197                     l3368:	
  6898                           
  6899                           ;calibrate_mode.c: 121: }
  6900                           ;calibrate_mode.c: 125: countabuf++;
  6901  0197  3001               	movlw	1
  6902  0198  0020               	movlb	0	; select bank0
  6903  0199  07E9               	addwf	_countabuf,f
  6904  019A  3000               	movlw	0
  6905  019B  3DEA               	addwfc	_countabuf+1,f
  6906                           
  6907                           ;calibrate_mode.c: 126: if(calibdata.cargoLength <= countabuf){
  6908  019C  0021               	movlb	1	; select bank1
  6909  019D  0833               	movf	(_calibdata+1)^(0+128),w
  6910  019E  0020               	movlb	0	; select bank0
  6911  019F  026A               	subwf	_countabuf+1,w
  6912  01A0  1D03               	skipz
  6913  01A1  29A6               	goto	u2215
  6914  01A2  0021               	movlb	1	; select bank1
  6915  01A3  0832               	movf	_calibdata^(0+128),w
  6916  01A4  0020               	movlb	0	; select bank0
  6917  01A5  0269               	subwf	_countabuf,w
  6918  01A6                     u2215:	
  6919  01A6  1C03               	skipc
  6920  01A7  0008               	return
  6921                           
  6922                           ;calibrate_mode.c: 127: calibdata.cargoLength = 0xFFFF;
  6923  01A8  30FF               	movlw	255
  6924  01A9  0021               	movlb	1	; select bank1
  6925  01AA  00B2               	movwf	_calibdata^(0+128)
  6926  01AB  30FF               	movlw	255
  6927  01AC  00B3               	movwf	(_calibdata^(0+128)+1)
  6928                           
  6929                           ;calibrate_mode.c: 128: countabuf = 0;
  6930  01AD  0020               	movlb	0	; select bank0
  6931  01AE  01E9               	clrf	_countabuf
  6932  01AF  01EA               	clrf	_countabuf+1
  6933  01B0  0008               	return
  6934  01B1                     __end_of_Calibrate_download:	
  6935                           
  6936                           	psect	swtext4
  6937  0820                     __pswtext4:	
  6938  0820                     S3922:	
  6939  0820  3180  28AF         	ljmp	l3326
  6940  0822  3180  28BE         	ljmp	l3332
  6941  0824  3180  28D0         	ljmp	l3334
  6942  0826  3180  28D6         	ljmp	l3336
  6943  0828  3180  28DE         	ljmp	l3338
  6944  082A  3180  28E7         	ljmp	l3342
  6945  082C  3181  2912         	ljmp	l3346
  6946  082E  3181  2933         	ljmp	l3348
  6947  0830  3181  2957         	ljmp	l3350
  6948  0832  3181  296C         	ljmp	l446
  6949                           
  6950                           	psect	text11
  6951  0E9B                     __ptext11:	
  6952 ;; *************** function _resetCargo *****************
  6953 ;; Defined at:
  6954 ;;		line 25 in file "struct.c"
  6955 ;; Parameters:    Size  Location     Type
  6956 ;;		None
  6957 ;; Auto vars:     Size  Location     Type
  6958 ;;		None
  6959 ;; Return value:  Size  Location     Type
  6960 ;;                  1    wreg      void 
  6961 ;; Registers used:
  6962 ;;		wreg, status,2
  6963 ;; Tracked objects:
  6964 ;;		On entry : 0/0
  6965 ;;		On exit  : 0/0
  6966 ;;		Unchanged: 0/0
  6967 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6968 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6969 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6970 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6971 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6972 ;;Total ram usage:        0 bytes
  6973 ;; Hardware stack levels used:    1
  6974 ;; Hardware stack levels required when called:    3
  6975 ;; This function calls:
  6976 ;;		Nothing
  6977 ;; This function is called by:
  6978 ;;		_Calibrate_download
  6979 ;; This function uses a non-reentrant model
  6980 ;;
  6981                           
  6982                           
  6983                           ;psect for function _resetCargo
  6984  0E9B                     _resetCargo:	
  6985                           
  6986                           ;struct.c: 26: cargoData.WorkingCount = 0;
  6987                           
  6988                           ;incstack = 0
  6989                           ; Regs used in _resetCargo: [wreg+status,2]
  6990  0E9B  3000               	movlw	0
  6991  0E9C  0020               	movlb	0	; select bank0
  6992  0E9D  00E8               	movwf	_cargoData+15
  6993  0E9E  3000               	movlw	0
  6994  0E9F  00E7               	movwf	_cargoData+14
  6995  0EA0  3000               	movlw	0
  6996  0EA1  00E6               	movwf	_cargoData+13
  6997  0EA2  3000               	movlw	0
  6998  0EA3  00E5               	movwf	_cargoData+12
  6999                           
  7000                           ;struct.c: 27: cargoData.address = 0;
  7001  0EA4  01DD               	clrf	_cargoData+4
  7002                           
  7003                           ;struct.c: 28: cargoData.cargoLength = 0xFFFF;
  7004  0EA5  30FF               	movlw	255
  7005  0EA6  00D9               	movwf	_cargoData
  7006  0EA7  30FF               	movlw	255
  7007  0EA8  00DA               	movwf	_cargoData+1
  7008                           
  7009                           ;struct.c: 29: cargoData.clutchMode = 0;
  7010  0EA9  01E4               	clrf	_cargoData+11
  7011                           
  7012                           ;struct.c: 30: cargoData.command = 0;
  7013  0EAA  01DB               	clrf	_cargoData+2
  7014                           
  7015                           ;struct.c: 31: cargoData.index = 0;
  7016  0EAB  01DC               	clrf	_cargoData+3
  7017                           
  7018                           ;struct.c: 32: cargoData.linkAngleTo = 0;
  7019  0EAC  01DE               	clrf	_cargoData+5
  7020  0EAD  01DF               	clrf	_cargoData+6
  7021                           
  7022                           ;struct.c: 33: cargoData.passedTime = 0;
  7023  0EAE  01E2               	clrf	_cargoData+9
  7024  0EAF  01E3               	clrf	_cargoData+10
  7025  0EB0  0008               	return
  7026  0EB1                     __end_of_resetCargo:	
  7027                           
  7028                           	psect	text12
  7029  07A0                     __ptext12:	
  7030 ;; *************** function _isEndpoint *****************
  7031 ;; Defined at:
  7032 ;;		line 31 in file "D:/programdata/16F18346_Link_IC.X/calibrate_mode.c"
  7033 ;; Parameters:    Size  Location     Type
  7034 ;;		None
  7035 ;; Auto vars:     Size  Location     Type
  7036 ;;  spi2data        1    6[BANK0 ] unsigned char 
  7037 ;; Return value:  Size  Location     Type
  7038 ;;		None               void
  7039 ;; Registers used:
  7040 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7041 ;; Tracked objects:
  7042 ;;		On entry : 0/0
  7043 ;;		On exit  : 0/0
  7044 ;;		Unchanged: 0/0
  7045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7046 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7047 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7048 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7049 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7050 ;;Total ram usage:        6 bytes
  7051 ;; Hardware stack levels used:    1
  7052 ;; Hardware stack levels required when called:    4
  7053 ;; This function calls:
  7054 ;;		_setSPI1sendDataManual
  7055 ;; This function is called by:
  7056 ;;		_Calibrate_download
  7057 ;; This function uses a non-reentrant model
  7058 ;;
  7059                           
  7060                           
  7061                           ;psect for function _isEndpoint
  7062  07A0                     _isEndpoint:	
  7063                           
  7064                           ;calibrate_mode.c: 32: unsigned char spi2data = 0;
  7065                           
  7066                           ;incstack = 0
  7067                           ; Regs used in _isEndpoint: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7068  07A0  0020               	movlb	0	; select bank0
  7069  07A1  01A6               	clrf	isEndpoint@spi2data
  7070                           
  7071                           ;calibrate_mode.c: 33: if(count2 > 1){
  7072  07A2  3000               	movlw	0
  7073  07A3  026C               	subwf	_count2+1,w
  7074  07A4  3002               	movlw	2
  7075  07A5  1903               	skipnz
  7076  07A6  026B               	subwf	_count2,w
  7077  07A7  1C03               	skipc
  7078  07A8  2FBD               	goto	l3208
  7079                           
  7080                           ;calibrate_mode.c: 34: spi2data = spi2_buffer_data[count2 -1];
  7081  07A9  086B               	movf	_count2,w
  7082  07AA  3EFF               	addlw	255
  7083  07AB  00A1               	movwf	??_isEndpoint
  7084  07AC  30FF               	movlw	255
  7085  07AD  3D6C               	addwfc	_count2+1,w
  7086  07AE  00A2               	movwf	??_isEndpoint+1
  7087  07AF  30F0               	movlw	240
  7088  07B0  00A3               	movwf	??_isEndpoint+2
  7089  07B1  3025               	movlw	37
  7090  07B2  00A4               	movwf	??_isEndpoint+3
  7091  07B3  0821               	movf	??_isEndpoint,w
  7092  07B4  0723               	addwf	??_isEndpoint+2,w
  7093  07B5  0086               	movwf	6
  7094  07B6  0822               	movf	??_isEndpoint+1,w
  7095  07B7  3D24               	addwfc	??_isEndpoint+3,w
  7096  07B8  0087               	movwf	7
  7097  07B9  0801               	movf	1,w
  7098  07BA  00A5               	movwf	??_isEndpoint+4
  7099  07BB  0825               	movf	??_isEndpoint+4,w
  7100  07BC  2FCA               	goto	L27
  7101  07BD                     l3208:	
  7102                           ;calibrate_mode.c: 35: }else{
  7103                           
  7104                           
  7105                           ;calibrate_mode.c: 36: spi2data = spi2_buffer_data[count2];
  7106  07BD  30F0               	movlw	240
  7107  07BE  00A1               	movwf	??_isEndpoint
  7108  07BF  3025               	movlw	37
  7109  07C0  00A2               	movwf	??_isEndpoint+1
  7110  07C1  086B               	movf	_count2,w
  7111  07C2  0721               	addwf	??_isEndpoint,w
  7112  07C3  0086               	movwf	6
  7113  07C4  086C               	movf	_count2+1,w
  7114  07C5  3D22               	addwfc	??_isEndpoint+1,w
  7115  07C6  0087               	movwf	7
  7116  07C7  0801               	movf	1,w
  7117  07C8  00A3               	movwf	??_isEndpoint+2
  7118  07C9  0823               	movf	??_isEndpoint+2,w
  7119  07CA                     L27:	
  7120  07CA  00A6               	movwf	isEndpoint@spi2data
  7121                           
  7122                           ;calibrate_mode.c: 37: }
  7123                           ;calibrate_mode.c: 38: if(spi2data < 255){
  7124  07CB  0A26               	incf	isEndpoint@spi2data,w
  7125  07CC  1903               	btfsc	3,2
  7126  07CD  2FD0               	goto	l3214
  7127                           
  7128                           ;calibrate_mode.c: 39: isEndPointTrig = 0;
  7129  07CE  107B               	bcf	_isEndPointTrig/(0+8),_isEndPointTrig& (0+7)
  7130                           
  7131                           ;calibrate_mode.c: 40: }else{
  7132  07CF  0008               	return
  7133  07D0                     l3214:	
  7134                           
  7135                           ;calibrate_mode.c: 41: setSPI1sendDataManual(0x01);
  7136  07D0  3001               	movlw	1
  7137  07D1  318E  261B         	fcall	_setSPI1sendDataManual
  7138  07D3  0008               	return
  7139  07D4                     __end_of_isEndpoint:	
  7140                           ;calibrate_mode.c: 42: }
  7141                           ;calibrate_mode.c: 44: return isEndPointTrig;
  7142                           ;	Return value of _isEndpoint is never used
  7143                           
  7144                           
  7145                           	psect	text13
  7146  0E1B                     __ptext13:	
  7147 ;; *************** function _setSPI1sendDataManual *****************
  7148 ;; Defined at:
  7149 ;;		line 102 in file "D:/programdata/16F18346_Link_IC.X/spiControl.c"
  7150 ;; Parameters:    Size  Location     Type
  7151 ;;  data            1    wreg     unsigned char 
  7152 ;; Auto vars:     Size  Location     Type
  7153 ;;  data            1    0[BANK0 ] unsigned char 
  7154 ;; Return value:  Size  Location     Type
  7155 ;;                  1    wreg      void 
  7156 ;; Registers used:
  7157 ;;		wreg
  7158 ;; Tracked objects:
  7159 ;;		On entry : 0/0
  7160 ;;		On exit  : 0/0
  7161 ;;		Unchanged: 0/0
  7162 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7163 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7164 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7166 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7167 ;;Total ram usage:        1 bytes
  7168 ;; Hardware stack levels used:    1
  7169 ;; Hardware stack levels required when called:    3
  7170 ;; This function calls:
  7171 ;;		Nothing
  7172 ;; This function is called by:
  7173 ;;		_isEndpoint
  7174 ;; This function uses a non-reentrant model
  7175 ;;
  7176                           
  7177                           
  7178                           ;psect for function _setSPI1sendDataManual
  7179  0E1B                     _setSPI1sendDataManual:	
  7180                           
  7181                           ;incstack = 0
  7182                           ; Regs used in _setSPI1sendDataManual: [wreg]
  7183                           ;setSPI1sendDataManual@data stored from wreg
  7184  0E1B  0020               	movlb	0	; select bank0
  7185  0E1C  00A0               	movwf	setSPI1sendDataManual@data
  7186                           
  7187                           ;spiControl.c: 103: SSP1BUF = data;
  7188  0E1D  0820               	movf	setSPI1sendDataManual@data,w
  7189  0E1E  0024               	movlb	4	; select bank4
  7190  0E1F  0091               	movwf	17	;volatile
  7191  0E20  0008               	return
  7192  0E21                     __end_of_setSPI1sendDataManual:	
  7193                           
  7194                           	psect	text14
  7195  02C8                     __ptext14:	
  7196 ;; *************** function _TransLong256To255 *****************
  7197 ;; Defined at:
  7198 ;;		line 20 in file "D:/programdata/16F18346_Link_IC.X/util.c"
  7199 ;; Parameters:    Size  Location     Type
  7200 ;;  data            4   15[BANK0 ] long 
  7201 ;; Auto vars:     Size  Location     Type
  7202 ;;  j               2   27[BANK0 ] int 
  7203 ;;  pow             4   33[BANK0 ] long 
  7204 ;;  buf             4   39[BANK0 ] long 
  7205 ;;  mod             4   29[BANK0 ] long 
  7206 ;;  TransData       4   23[BANK0 ] long 
  7207 ;;  i               2   37[BANK0 ] int 
  7208 ;; Return value:  Size  Location     Type
  7209 ;;                  4   15[BANK0 ] long 
  7210 ;; Registers used:
  7211 ;;		wreg, status,2, status,0, pclath, cstack
  7212 ;; Tracked objects:
  7213 ;;		On entry : 0/0
  7214 ;;		On exit  : 0/0
  7215 ;;		Unchanged: 0/0
  7216 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7217 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7218 ;;      Locals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7219 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7220 ;;      Totals:         0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7221 ;;Total ram usage:       28 bytes
  7222 ;; Hardware stack levels used:    1
  7223 ;; Hardware stack levels required when called:    4
  7224 ;; This function calls:
  7225 ;;		___aldiv
  7226 ;;		___almod
  7227 ;;		___lmul
  7228 ;; This function is called by:
  7229 ;;		_Calibrate_download
  7230 ;;		_readCargo
  7231 ;; This function uses a non-reentrant model
  7232 ;;
  7233                           
  7234                           
  7235                           ;psect for function _TransLong256To255
  7236  02C8                     _TransLong256To255:	
  7237                           
  7238                           ;util.c: 22: long buf = 0;
  7239                           
  7240                           ;incstack = 0
  7241                           ; Regs used in _TransLong256To255: [wreg+status,2+status,0+pclath+cstack]
  7242  02C8  3000               	movlw	0
  7243  02C9  0020               	movlb	0	; select bank0
  7244  02CA  00CA               	movwf	TransLong256To255@buf+3
  7245  02CB  3000               	movlw	0
  7246  02CC  00C9               	movwf	TransLong256To255@buf+2
  7247  02CD  3000               	movlw	0
  7248  02CE  00C8               	movwf	TransLong256To255@buf+1
  7249  02CF  3000               	movlw	0
  7250  02D0  00C7               	movwf	TransLong256To255@buf
  7251                           
  7252                           ;util.c: 23: buf = data;
  7253  02D1  0832               	movf	TransLong256To255@data+3,w
  7254  02D2  00CA               	movwf	TransLong256To255@buf+3
  7255  02D3  0831               	movf	TransLong256To255@data+2,w
  7256  02D4  00C9               	movwf	TransLong256To255@buf+2
  7257  02D5  0830               	movf	TransLong256To255@data+1,w
  7258  02D6  00C8               	movwf	TransLong256To255@buf+1
  7259  02D7  082F               	movf	TransLong256To255@data,w
  7260  02D8  00C7               	movwf	TransLong256To255@buf
  7261                           
  7262                           ;util.c: 24: long TransData = 0;
  7263  02D9  3000               	movlw	0
  7264  02DA  00BA               	movwf	TransLong256To255@TransData+3
  7265  02DB  3000               	movlw	0
  7266  02DC  00B9               	movwf	TransLong256To255@TransData+2
  7267  02DD  3000               	movlw	0
  7268  02DE  00B8               	movwf	TransLong256To255@TransData+1
  7269  02DF  3000               	movlw	0
  7270  02E0  00B7               	movwf	TransLong256To255@TransData
  7271                           
  7272                           ;util.c: 25: long mod = 0;
  7273  02E1  3000               	movlw	0
  7274  02E2  00C0               	movwf	TransLong256To255@mod+3
  7275  02E3  3000               	movlw	0
  7276  02E4  00BF               	movwf	TransLong256To255@mod+2
  7277  02E5  3000               	movlw	0
  7278  02E6  00BE               	movwf	TransLong256To255@mod+1
  7279  02E7  3000               	movlw	0
  7280  02E8  00BD               	movwf	TransLong256To255@mod
  7281                           
  7282                           ;util.c: 26: int i = 0;
  7283  02E9  01C5               	clrf	TransLong256To255@i
  7284  02EA  01C6               	clrf	TransLong256To255@i+1
  7285  02EB                     l3168:	
  7286                           ;util.c: 27: while(1){
  7287                           
  7288                           
  7289                           ;util.c: 28: if(buf <= 255){
  7290  02EB  1BCA               	btfsc	TransLong256To255@buf+3,7
  7291  02EC  2AF7               	goto	l3170
  7292  02ED  084A               	movf	TransLong256To255@buf+3,w
  7293  02EE  1D03               	btfss	3,2
  7294  02EF  2AFF               	goto	l3172
  7295  02F0  0849               	movf	TransLong256To255@buf+2,w
  7296  02F1  1D03               	btfss	3,2
  7297  02F2  2AFF               	goto	l3172
  7298  02F3  3001               	movlw	1
  7299  02F4  0248               	subwf	TransLong256To255@buf+1,w
  7300  02F5  1803               	btfsc	3,0
  7301  02F6  2AFF               	goto	l3172
  7302  02F7                     l3170:	
  7303                           
  7304                           ;util.c: 29: mod = buf;
  7305  02F7  084A               	movf	TransLong256To255@buf+3,w
  7306  02F8  00C0               	movwf	TransLong256To255@mod+3
  7307  02F9  0849               	movf	TransLong256To255@buf+2,w
  7308  02FA  00BF               	movwf	TransLong256To255@mod+2
  7309  02FB  0848               	movf	TransLong256To255@buf+1,w
  7310  02FC  00BE               	movwf	TransLong256To255@mod+1
  7311  02FD  0847               	movf	TransLong256To255@buf,w
  7312  02FE  2B1A               	goto	L28
  7313  02FF                     l3172:	
  7314                           ;util.c: 30: }else{
  7315                           
  7316                           
  7317                           ;util.c: 31: mod = buf % 255;
  7318  02FF  3000               	movlw	0
  7319  0300  00A3               	movwf	___almod@divisor+3
  7320  0301  3000               	movlw	0
  7321  0302  00A2               	movwf	___almod@divisor+2
  7322  0303  3000               	movlw	0
  7323  0304  00A1               	movwf	___almod@divisor+1
  7324  0305  30FF               	movlw	255
  7325  0306  00A0               	movwf	___almod@divisor
  7326  0307  084A               	movf	TransLong256To255@buf+3,w
  7327  0308  00A7               	movwf	___almod@dividend+3
  7328  0309  0849               	movf	TransLong256To255@buf+2,w
  7329  030A  00A6               	movwf	___almod@dividend+2
  7330  030B  0848               	movf	TransLong256To255@buf+1,w
  7331  030C  00A5               	movwf	___almod@dividend+1
  7332  030D  0847               	movf	TransLong256To255@buf,w
  7333  030E  00A4               	movwf	___almod@dividend
  7334  030F  3184  24F3  3182   	fcall	___almod
  7335  0312  0020               	movlb	0	; select bank0
  7336  0313  0823               	movf	?___almod+3,w
  7337  0314  00C0               	movwf	TransLong256To255@mod+3
  7338  0315  0822               	movf	?___almod+2,w
  7339  0316  00BF               	movwf	TransLong256To255@mod+2
  7340  0317  0821               	movf	?___almod+1,w
  7341  0318  00BE               	movwf	TransLong256To255@mod+1
  7342  0319  0820               	movf	?___almod,w
  7343  031A                     L28:	
  7344  031A  00BD               	movwf	TransLong256To255@mod
  7345                           
  7346                           ;util.c: 32: }
  7347                           ;util.c: 33: buf = (int)(buf / 255);
  7348  031B  3000               	movlw	0
  7349  031C  00A3               	movwf	___aldiv@divisor+3
  7350  031D  3000               	movlw	0
  7351  031E  00A2               	movwf	___aldiv@divisor+2
  7352  031F  3000               	movlw	0
  7353  0320  00A1               	movwf	___aldiv@divisor+1
  7354  0321  30FF               	movlw	255
  7355  0322  00A0               	movwf	___aldiv@divisor
  7356  0323  084A               	movf	TransLong256To255@buf+3,w
  7357  0324  00A7               	movwf	___aldiv@dividend+3
  7358  0325  0849               	movf	TransLong256To255@buf+2,w
  7359  0326  00A6               	movwf	___aldiv@dividend+2
  7360  0327  0848               	movf	TransLong256To255@buf+1,w
  7361  0328  00A5               	movwf	___aldiv@dividend+1
  7362  0329  0847               	movf	TransLong256To255@buf,w
  7363  032A  00A4               	movwf	___aldiv@dividend
  7364  032B  3184  2471  3182   	fcall	___aldiv
  7365  032E  0020               	movlb	0	; select bank0
  7366  032F  0820               	movf	?___aldiv,w
  7367  0330  00C7               	movwf	TransLong256To255@buf
  7368  0331  0821               	movf	?___aldiv+1,w
  7369  0332  00C8               	movwf	TransLong256To255@buf+1
  7370  0333  0D89               	rlf	9,f
  7371  0334  3B89               	subwfb	9,f
  7372  0335  0989               	comf	9,f
  7373  0336  00C9               	movwf	TransLong256To255@buf+2
  7374  0337  00CA               	movwf	TransLong256To255@buf+3
  7375                           
  7376                           ;util.c: 34: long pow = 1;
  7377  0338  3000               	movlw	0
  7378  0339  00C4               	movwf	TransLong256To255@pow+3
  7379  033A  3000               	movlw	0
  7380  033B  00C3               	movwf	TransLong256To255@pow+2
  7381  033C  3000               	movlw	0
  7382  033D  00C2               	movwf	TransLong256To255@pow+1
  7383  033E  3001               	movlw	1
  7384  033F  00C1               	movwf	TransLong256To255@pow
  7385                           
  7386                           ;util.c: 35: if(i > 0){
  7387  0340  0846               	movf	TransLong256To255@i+1,w
  7388  0341  3A80               	xorlw	128
  7389  0342  00B3               	movwf	??_TransLong256To255
  7390  0343  3080               	movlw	128
  7391  0344  0233               	subwf	??_TransLong256To255,w
  7392  0345  1D03               	skipz
  7393  0346  2B49               	goto	u2055
  7394  0347  3001               	movlw	1
  7395  0348  0245               	subwf	TransLong256To255@i,w
  7396  0349                     u2055:	
  7397  0349  1C03               	skipc
  7398  034A  2B77               	goto	l3186
  7399                           
  7400                           ;util.c: 36: for(int j = 0; j < i; j++){
  7401  034B  0020               	movlb	0	; select bank0
  7402  034C  01BB               	clrf	TransLong256To255@j
  7403  034D  01BC               	clrf	TransLong256To255@j+1
  7404  034E                     l3184:	
  7405  034E  083C               	movf	TransLong256To255@j+1,w
  7406  034F  3A80               	xorlw	128
  7407  0350  00B3               	movwf	??_TransLong256To255
  7408  0351  0846               	movf	TransLong256To255@i+1,w
  7409  0352  3A80               	xorlw	128
  7410  0353  0233               	subwf	??_TransLong256To255,w
  7411  0354  1D03               	skipz
  7412  0355  2B58               	goto	u2075
  7413  0356  0845               	movf	TransLong256To255@i,w
  7414  0357  023B               	subwf	TransLong256To255@j,w
  7415  0358                     u2075:	
  7416  0358  1803               	btfsc	3,0
  7417  0359  2B77               	goto	l3186
  7418                           
  7419                           ;util.c: 37: pow = pow * 256;
  7420  035A  0020               	movlb	0	; select bank0
  7421  035B  0841               	movf	TransLong256To255@pow,w
  7422  035C  00B3               	movwf	??_TransLong256To255
  7423  035D  0842               	movf	TransLong256To255@pow+1,w
  7424  035E  00B4               	movwf	??_TransLong256To255+1
  7425  035F  0843               	movf	TransLong256To255@pow+2,w
  7426  0360  00B5               	movwf	??_TransLong256To255+2
  7427  0361  0844               	movf	TransLong256To255@pow+3,w
  7428  0362  00B6               	movwf	??_TransLong256To255+3
  7429  0363  3008               	movlw	8
  7430  0364                     u2065:	
  7431  0364  35B3               	lslf	??_TransLong256To255,f
  7432  0365  0DB4               	rlf	??_TransLong256To255+1,f
  7433  0366  0DB5               	rlf	??_TransLong256To255+2,f
  7434  0367  0DB6               	rlf	??_TransLong256To255+3,f
  7435  0368  0B89               	decfsz	9,f
  7436  0369  2B64               	goto	u2065
  7437  036A  0836               	movf	??_TransLong256To255+3,w
  7438  036B  00C4               	movwf	TransLong256To255@pow+3
  7439  036C  0835               	movf	??_TransLong256To255+2,w
  7440  036D  00C3               	movwf	TransLong256To255@pow+2
  7441  036E  0834               	movf	??_TransLong256To255+1,w
  7442  036F  00C2               	movwf	TransLong256To255@pow+1
  7443  0370  0833               	movf	??_TransLong256To255,w
  7444  0371  00C1               	movwf	TransLong256To255@pow
  7445  0372  3001               	movlw	1
  7446  0373  07BB               	addwf	TransLong256To255@j,f
  7447  0374  3000               	movlw	0
  7448  0375  3DBC               	addwfc	TransLong256To255@j+1,f
  7449  0376  2B4E               	goto	l3184
  7450  0377                     l3186:	
  7451                           
  7452                           ;util.c: 38: }
  7453                           ;util.c: 39: }
  7454                           ;util.c: 40: TransData += mod * pow;
  7455  0377  0020               	movlb	0	; select bank0
  7456  0378  0840               	movf	TransLong256To255@mod+3,w
  7457  0379  00A3               	movwf	___lmul@multiplier+3
  7458  037A  083F               	movf	TransLong256To255@mod+2,w
  7459  037B  00A2               	movwf	___lmul@multiplier+2
  7460  037C  083E               	movf	TransLong256To255@mod+1,w
  7461  037D  00A1               	movwf	___lmul@multiplier+1
  7462  037E  083D               	movf	TransLong256To255@mod,w
  7463  037F  00A0               	movwf	___lmul@multiplier
  7464  0380  0844               	movf	TransLong256To255@pow+3,w
  7465  0381  00A7               	movwf	___lmul@multiplicand+3
  7466  0382  0843               	movf	TransLong256To255@pow+2,w
  7467  0383  00A6               	movwf	___lmul@multiplicand+2
  7468  0384  0842               	movf	TransLong256To255@pow+1,w
  7469  0385  00A5               	movwf	___lmul@multiplicand+1
  7470  0386  0841               	movf	TransLong256To255@pow,w
  7471  0387  00A4               	movwf	___lmul@multiplicand
  7472  0388  318F  27D0  3182   	fcall	___lmul
  7473  038B  0020               	movlb	0	; select bank0
  7474  038C  0820               	movf	?___lmul,w
  7475  038D  07B7               	addwf	TransLong256To255@TransData,f
  7476  038E  0821               	movf	?___lmul+1,w
  7477  038F  3DB8               	addwfc	TransLong256To255@TransData+1,f
  7478  0390  0822               	movf	?___lmul+2,w
  7479  0391  3DB9               	addwfc	TransLong256To255@TransData+2,f
  7480  0392  0823               	movf	?___lmul+3,w
  7481  0393  3DBA               	addwfc	TransLong256To255@TransData+3,f
  7482                           
  7483                           ;util.c: 41: if(buf <= 255){
  7484  0394  1BCA               	btfsc	TransLong256To255@buf+3,7
  7485  0395  2BA5               	goto	l3194
  7486  0396  084A               	movf	TransLong256To255@buf+3,w
  7487  0397  1D03               	btfss	3,2
  7488  0398  2BA0               	goto	l3192
  7489  0399  0849               	movf	TransLong256To255@buf+2,w
  7490  039A  1D03               	btfss	3,2
  7491  039B  2BA0               	goto	l3192
  7492  039C  3001               	movlw	1
  7493  039D  0248               	subwf	TransLong256To255@buf+1,w
  7494  039E  1C03               	btfss	3,0
  7495  039F  2BA5               	goto	l3194
  7496  03A0                     l3192:	
  7497                           ;util.c: 42: break;
  7498                           
  7499                           
  7500                           ;util.c: 43: }
  7501                           ;util.c: 44: i++;
  7502  03A0  3001               	movlw	1
  7503  03A1  07C5               	addwf	TransLong256To255@i,f
  7504  03A2  3000               	movlw	0
  7505  03A3  3DC6               	addwfc	TransLong256To255@i+1,f
  7506  03A4  2AEB               	goto	l3168
  7507  03A5                     l3194:	
  7508                           
  7509                           ;util.c: 45: }
  7510                           ;util.c: 46: return TransData;
  7511  03A5  083A               	movf	TransLong256To255@TransData+3,w
  7512  03A6  00B2               	movwf	?_TransLong256To255+3
  7513  03A7  0839               	movf	TransLong256To255@TransData+2,w
  7514  03A8  00B1               	movwf	?_TransLong256To255+2
  7515  03A9  0838               	movf	TransLong256To255@TransData+1,w
  7516  03AA  00B0               	movwf	?_TransLong256To255+1
  7517  03AB  0837               	movf	TransLong256To255@TransData,w
  7518  03AC  00AF               	movwf	?_TransLong256To255
  7519  03AD  0008               	return
  7520  03AE                     __end_of_TransLong256To255:	
  7521                           
  7522                           	psect	text15
  7523  0FD0                     __ptext15:	
  7524 ;; *************** function ___lmul *****************
  7525 ;; Defined at:
  7526 ;;		line 15 in file "E:\microchip\xc8\v1.45\sources\common\Umul32.c"
  7527 ;; Parameters:    Size  Location     Type
  7528 ;;  multiplier      4    0[BANK0 ] unsigned long 
  7529 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  7530 ;; Auto vars:     Size  Location     Type
  7531 ;;  product         4    8[BANK0 ] unsigned long 
  7532 ;; Return value:  Size  Location     Type
  7533 ;;                  4    0[BANK0 ] unsigned long 
  7534 ;; Registers used:
  7535 ;;		wreg, status,2, status,0
  7536 ;; Tracked objects:
  7537 ;;		On entry : 0/0
  7538 ;;		On exit  : 0/0
  7539 ;;		Unchanged: 0/0
  7540 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7541 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7542 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7543 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7544 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7545 ;;Total ram usage:       12 bytes
  7546 ;; Hardware stack levels used:    1
  7547 ;; Hardware stack levels required when called:    3
  7548 ;; This function calls:
  7549 ;;		Nothing
  7550 ;; This function is called by:
  7551 ;;		_TransLong256To255
  7552 ;; This function uses a non-reentrant model
  7553 ;;
  7554                           
  7555                           
  7556                           ;psect for function ___lmul
  7557  0FD0                     ___lmul:	
  7558                           
  7559                           ;incstack = 0
  7560                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  7561  0FD0  3000               	movlw	0
  7562  0FD1  0020               	movlb	0	; select bank0
  7563  0FD2  00AB               	movwf	___lmul@product+3
  7564  0FD3  3000               	movlw	0
  7565  0FD4  00AA               	movwf	___lmul@product+2
  7566  0FD5  3000               	movlw	0
  7567  0FD6  00A9               	movwf	___lmul@product+1
  7568  0FD7  3000               	movlw	0
  7569  0FD8  00A8               	movwf	___lmul@product
  7570  0FD9                     l3060:	
  7571  0FD9  1C20               	btfss	___lmul@multiplier,0
  7572  0FDA  2FE3               	goto	l3064
  7573  0FDB  0824               	movf	___lmul@multiplicand,w
  7574  0FDC  07A8               	addwf	___lmul@product,f
  7575  0FDD  0825               	movf	___lmul@multiplicand+1,w
  7576  0FDE  3DA9               	addwfc	___lmul@product+1,f
  7577  0FDF  0826               	movf	___lmul@multiplicand+2,w
  7578  0FE0  3DAA               	addwfc	___lmul@product+2,f
  7579  0FE1  0827               	movf	___lmul@multiplicand+3,w
  7580  0FE2  3DAB               	addwfc	___lmul@product+3,f
  7581  0FE3                     l3064:	
  7582  0FE3  3001               	movlw	1
  7583  0FE4                     u1815:	
  7584  0FE4  35A4               	lslf	___lmul@multiplicand,f
  7585  0FE5  0DA5               	rlf	___lmul@multiplicand+1,f
  7586  0FE6  0DA6               	rlf	___lmul@multiplicand+2,f
  7587  0FE7  0DA7               	rlf	___lmul@multiplicand+3,f
  7588  0FE8  0B89               	decfsz	9,f
  7589  0FE9  2FE4               	goto	u1815
  7590  0FEA  3001               	movlw	1
  7591  0FEB                     u1825:	
  7592  0FEB  36A3               	lsrf	___lmul@multiplier+3,f
  7593  0FEC  0CA2               	rrf	___lmul@multiplier+2,f
  7594  0FED  0CA1               	rrf	___lmul@multiplier+1,f
  7595  0FEE  0CA0               	rrf	___lmul@multiplier,f
  7596  0FEF  0B89               	decfsz	9,f
  7597  0FF0  2FEB               	goto	u1825
  7598  0FF1  0823               	movf	___lmul@multiplier+3,w
  7599  0FF2  0422               	iorwf	___lmul@multiplier+2,w
  7600  0FF3  0421               	iorwf	___lmul@multiplier+1,w
  7601  0FF4  0420               	iorwf	___lmul@multiplier,w
  7602  0FF5  1D03               	skipz
  7603  0FF6  2FD9               	goto	l3060
  7604  0FF7  082B               	movf	___lmul@product+3,w
  7605  0FF8  00A3               	movwf	?___lmul+3
  7606  0FF9  082A               	movf	___lmul@product+2,w
  7607  0FFA  00A2               	movwf	?___lmul+2
  7608  0FFB  0829               	movf	___lmul@product+1,w
  7609  0FFC  00A1               	movwf	?___lmul+1
  7610  0FFD  0828               	movf	___lmul@product,w
  7611  0FFE  00A0               	movwf	?___lmul
  7612  0FFF  0008               	return
  7613  1000                     __end_of___lmul:	
  7614                           
  7615                           	psect	text16
  7616  04F3                     __ptext16:	
  7617 ;; *************** function ___almod *****************
  7618 ;; Defined at:
  7619 ;;		line 5 in file "E:\microchip\xc8\v1.45\sources\common\almod.c"
  7620 ;; Parameters:    Size  Location     Type
  7621 ;;  divisor         4    0[BANK0 ] long 
  7622 ;;  dividend        4    4[BANK0 ] long 
  7623 ;; Auto vars:     Size  Location     Type
  7624 ;;  sign            1   10[BANK0 ] unsigned char 
  7625 ;;  counter         1    9[BANK0 ] unsigned char 
  7626 ;; Return value:  Size  Location     Type
  7627 ;;                  4    0[BANK0 ] long 
  7628 ;; Registers used:
  7629 ;;		wreg, status,2, status,0
  7630 ;; Tracked objects:
  7631 ;;		On entry : 0/0
  7632 ;;		On exit  : 0/0
  7633 ;;		Unchanged: 0/0
  7634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7635 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7636 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7637 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7638 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7639 ;;Total ram usage:       11 bytes
  7640 ;; Hardware stack levels used:    1
  7641 ;; Hardware stack levels required when called:    3
  7642 ;; This function calls:
  7643 ;;		Nothing
  7644 ;; This function is called by:
  7645 ;;		_TransLong256To255
  7646 ;; This function uses a non-reentrant model
  7647 ;;
  7648                           
  7649                           
  7650                           ;psect for function ___almod
  7651  04F3                     ___almod:	
  7652                           
  7653                           ;incstack = 0
  7654                           ; Regs used in ___almod: [wreg+status,2+status,0]
  7655  04F3  0020               	movlb	0	; select bank0
  7656  04F4  01AA               	clrf	___almod@sign
  7657  04F5  1FA7               	btfss	___almod@dividend+3,7
  7658  04F6  2D04               	goto	l850
  7659  04F7  09A4               	comf	___almod@dividend,f
  7660  04F8  09A5               	comf	___almod@dividend+1,f
  7661  04F9  09A6               	comf	___almod@dividend+2,f
  7662  04FA  09A7               	comf	___almod@dividend+3,f
  7663  04FB  0AA4               	incf	___almod@dividend,f
  7664  04FC  1903               	skipnz
  7665  04FD  0AA5               	incf	___almod@dividend+1,f
  7666  04FE  1903               	skipnz
  7667  04FF  0AA6               	incf	___almod@dividend+2,f
  7668  0500  1903               	skipnz
  7669  0501  0AA7               	incf	___almod@dividend+3,f
  7670  0502  01AA               	clrf	___almod@sign
  7671  0503  0AAA               	incf	___almod@sign,f
  7672  0504                     l850:	
  7673  0504  1FA3               	btfss	___almod@divisor+3,7
  7674  0505  2D11               	goto	l3120
  7675  0506  09A0               	comf	___almod@divisor,f
  7676  0507  09A1               	comf	___almod@divisor+1,f
  7677  0508  09A2               	comf	___almod@divisor+2,f
  7678  0509  09A3               	comf	___almod@divisor+3,f
  7679  050A  0AA0               	incf	___almod@divisor,f
  7680  050B  1903               	skipnz
  7681  050C  0AA1               	incf	___almod@divisor+1,f
  7682  050D  1903               	skipnz
  7683  050E  0AA2               	incf	___almod@divisor+2,f
  7684  050F  1903               	skipnz
  7685  0510  0AA3               	incf	___almod@divisor+3,f
  7686  0511                     l3120:	
  7687  0511  0823               	movf	___almod@divisor+3,w
  7688  0512  0422               	iorwf	___almod@divisor+2,w
  7689  0513  0421               	iorwf	___almod@divisor+1,w
  7690  0514  0420               	iorwf	___almod@divisor,w
  7691  0515  1903               	skipnz
  7692  0516  2D4A               	goto	l3136
  7693  0517  01A9               	clrf	___almod@counter
  7694  0518  0AA9               	incf	___almod@counter,f
  7695  0519                     l3126:	
  7696  0519  1BA3               	btfsc	___almod@divisor+3,7
  7697  051A  2D27               	goto	l3128
  7698  051B  3001               	movlw	1
  7699  051C                     u1975:	
  7700  051C  35A0               	lslf	___almod@divisor,f
  7701  051D  0DA1               	rlf	___almod@divisor+1,f
  7702  051E  0DA2               	rlf	___almod@divisor+2,f
  7703  051F  0DA3               	rlf	___almod@divisor+3,f
  7704  0520  0B89               	decfsz	9,f
  7705  0521  2D1C               	goto	u1975
  7706  0522  3001               	movlw	1
  7707  0523  00A8               	movwf	??___almod
  7708  0524  0828               	movf	??___almod,w
  7709  0525  07A9               	addwf	___almod@counter,f
  7710  0526  2D19               	goto	l3126
  7711  0527                     l3128:	
  7712  0527  0823               	movf	___almod@divisor+3,w
  7713  0528  0227               	subwf	___almod@dividend+3,w
  7714  0529  1D03               	skipz
  7715  052A  2D35               	goto	u1995
  7716  052B  0822               	movf	___almod@divisor+2,w
  7717  052C  0226               	subwf	___almod@dividend+2,w
  7718  052D  1D03               	skipz
  7719  052E  2D35               	goto	u1995
  7720  052F  0821               	movf	___almod@divisor+1,w
  7721  0530  0225               	subwf	___almod@dividend+1,w
  7722  0531  1D03               	skipz
  7723  0532  2D35               	goto	u1995
  7724  0533  0820               	movf	___almod@divisor,w
  7725  0534  0224               	subwf	___almod@dividend,w
  7726  0535                     u1995:	
  7727  0535  1C03               	skipc
  7728  0536  2D3F               	goto	l3132
  7729  0537  0820               	movf	___almod@divisor,w
  7730  0538  02A4               	subwf	___almod@dividend,f
  7731  0539  0821               	movf	___almod@divisor+1,w
  7732  053A  3BA5               	subwfb	___almod@dividend+1,f
  7733  053B  0822               	movf	___almod@divisor+2,w
  7734  053C  3BA6               	subwfb	___almod@dividend+2,f
  7735  053D  0823               	movf	___almod@divisor+3,w
  7736  053E  3BA7               	subwfb	___almod@dividend+3,f
  7737  053F                     l3132:	
  7738  053F  3001               	movlw	1
  7739  0540                     u2005:	
  7740  0540  36A3               	lsrf	___almod@divisor+3,f
  7741  0541  0CA2               	rrf	___almod@divisor+2,f
  7742  0542  0CA1               	rrf	___almod@divisor+1,f
  7743  0543  0CA0               	rrf	___almod@divisor,f
  7744  0544  0B89               	decfsz	9,f
  7745  0545  2D40               	goto	u2005
  7746  0546  3001               	movlw	1
  7747  0547  02A9               	subwf	___almod@counter,f
  7748  0548  1D03               	btfss	3,2
  7749  0549  2D27               	goto	l3128
  7750  054A                     l3136:	
  7751  054A  082A               	movf	___almod@sign,w
  7752  054B  1903               	btfsc	3,2
  7753  054C  2D58               	goto	l3140
  7754  054D  09A4               	comf	___almod@dividend,f
  7755  054E  09A5               	comf	___almod@dividend+1,f
  7756  054F  09A6               	comf	___almod@dividend+2,f
  7757  0550  09A7               	comf	___almod@dividend+3,f
  7758  0551  0AA4               	incf	___almod@dividend,f
  7759  0552  1903               	skipnz
  7760  0553  0AA5               	incf	___almod@dividend+1,f
  7761  0554  1903               	skipnz
  7762  0555  0AA6               	incf	___almod@dividend+2,f
  7763  0556  1903               	skipnz
  7764  0557  0AA7               	incf	___almod@dividend+3,f
  7765  0558                     l3140:	
  7766  0558  0827               	movf	___almod@dividend+3,w
  7767  0559  00A3               	movwf	?___almod+3
  7768  055A  0826               	movf	___almod@dividend+2,w
  7769  055B  00A2               	movwf	?___almod+2
  7770  055C  0825               	movf	___almod@dividend+1,w
  7771  055D  00A1               	movwf	?___almod+1
  7772  055E  0824               	movf	___almod@dividend,w
  7773  055F  00A0               	movwf	?___almod
  7774  0560  0008               	return
  7775  0561                     __end_of___almod:	
  7776                           
  7777                           	psect	text17
  7778  0471                     __ptext17:	
  7779 ;; *************** function ___aldiv *****************
  7780 ;; Defined at:
  7781 ;;		line 6 in file "E:\microchip\xc8\v1.45\sources\common\aldiv.c"
  7782 ;; Parameters:    Size  Location     Type
  7783 ;;  divisor         4    0[BANK0 ] long 
  7784 ;;  dividend        4    4[BANK0 ] long 
  7785 ;; Auto vars:     Size  Location     Type
  7786 ;;  quotient        4   11[BANK0 ] long 
  7787 ;;  sign            1   10[BANK0 ] unsigned char 
  7788 ;;  counter         1    9[BANK0 ] unsigned char 
  7789 ;; Return value:  Size  Location     Type
  7790 ;;                  4    0[BANK0 ] long 
  7791 ;; Registers used:
  7792 ;;		wreg, status,2, status,0
  7793 ;; Tracked objects:
  7794 ;;		On entry : 0/0
  7795 ;;		On exit  : 0/0
  7796 ;;		Unchanged: 0/0
  7797 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7798 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7799 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7800 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7801 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7802 ;;Total ram usage:       15 bytes
  7803 ;; Hardware stack levels used:    1
  7804 ;; Hardware stack levels required when called:    3
  7805 ;; This function calls:
  7806 ;;		Nothing
  7807 ;; This function is called by:
  7808 ;;		_TransLong256To255
  7809 ;; This function uses a non-reentrant model
  7810 ;;
  7811                           
  7812                           
  7813                           ;psect for function ___aldiv
  7814  0471                     ___aldiv:	
  7815                           
  7816                           ;incstack = 0
  7817                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  7818  0471  0020               	movlb	0	; select bank0
  7819  0472  01AA               	clrf	___aldiv@sign
  7820  0473  1FA3               	btfss	___aldiv@divisor+3,7
  7821  0474  2C82               	goto	l837
  7822  0475  09A0               	comf	___aldiv@divisor,f
  7823  0476  09A1               	comf	___aldiv@divisor+1,f
  7824  0477  09A2               	comf	___aldiv@divisor+2,f
  7825  0478  09A3               	comf	___aldiv@divisor+3,f
  7826  0479  0AA0               	incf	___aldiv@divisor,f
  7827  047A  1903               	skipnz
  7828  047B  0AA1               	incf	___aldiv@divisor+1,f
  7829  047C  1903               	skipnz
  7830  047D  0AA2               	incf	___aldiv@divisor+2,f
  7831  047E  1903               	skipnz
  7832  047F  0AA3               	incf	___aldiv@divisor+3,f
  7833  0480  01AA               	clrf	___aldiv@sign
  7834  0481  0AAA               	incf	___aldiv@sign,f
  7835  0482                     l837:	
  7836  0482  1FA7               	btfss	___aldiv@dividend+3,7
  7837  0483  2C93               	goto	l3082
  7838  0484  09A4               	comf	___aldiv@dividend,f
  7839  0485  09A5               	comf	___aldiv@dividend+1,f
  7840  0486  09A6               	comf	___aldiv@dividend+2,f
  7841  0487  09A7               	comf	___aldiv@dividend+3,f
  7842  0488  0AA4               	incf	___aldiv@dividend,f
  7843  0489  1903               	skipnz
  7844  048A  0AA5               	incf	___aldiv@dividend+1,f
  7845  048B  1903               	skipnz
  7846  048C  0AA6               	incf	___aldiv@dividend+2,f
  7847  048D  1903               	skipnz
  7848  048E  0AA7               	incf	___aldiv@dividend+3,f
  7849  048F  3001               	movlw	1
  7850  0490  00A8               	movwf	??___aldiv
  7851  0491  0828               	movf	??___aldiv,w
  7852  0492  06AA               	xorwf	___aldiv@sign,f
  7853  0493                     l3082:	
  7854  0493  3000               	movlw	0
  7855  0494  00AE               	movwf	___aldiv@quotient+3
  7856  0495  3000               	movlw	0
  7857  0496  00AD               	movwf	___aldiv@quotient+2
  7858  0497  3000               	movlw	0
  7859  0498  00AC               	movwf	___aldiv@quotient+1
  7860  0499  3000               	movlw	0
  7861  049A  00AB               	movwf	___aldiv@quotient
  7862  049B  0823               	movf	___aldiv@divisor+3,w
  7863  049C  0422               	iorwf	___aldiv@divisor+2,w
  7864  049D  0421               	iorwf	___aldiv@divisor+1,w
  7865  049E  0420               	iorwf	___aldiv@divisor,w
  7866  049F  1903               	skipnz
  7867  04A0  2CDC               	goto	l3104
  7868  04A1  01A9               	clrf	___aldiv@counter
  7869  04A2  0AA9               	incf	___aldiv@counter,f
  7870  04A3                     l3090:	
  7871  04A3  1BA3               	btfsc	___aldiv@divisor+3,7
  7872  04A4  2CB1               	goto	l3092
  7873  04A5  3001               	movlw	1
  7874  04A6                     u1875:	
  7875  04A6  35A0               	lslf	___aldiv@divisor,f
  7876  04A7  0DA1               	rlf	___aldiv@divisor+1,f
  7877  04A8  0DA2               	rlf	___aldiv@divisor+2,f
  7878  04A9  0DA3               	rlf	___aldiv@divisor+3,f
  7879  04AA  0B89               	decfsz	9,f
  7880  04AB  2CA6               	goto	u1875
  7881  04AC  3001               	movlw	1
  7882  04AD  00A8               	movwf	??___aldiv
  7883  04AE  0828               	movf	??___aldiv,w
  7884  04AF  07A9               	addwf	___aldiv@counter,f
  7885  04B0  2CA3               	goto	l3090
  7886  04B1                     l3092:	
  7887  04B1  3001               	movlw	1
  7888  04B2                     u1895:	
  7889  04B2  35AB               	lslf	___aldiv@quotient,f
  7890  04B3  0DAC               	rlf	___aldiv@quotient+1,f
  7891  04B4  0DAD               	rlf	___aldiv@quotient+2,f
  7892  04B5  0DAE               	rlf	___aldiv@quotient+3,f
  7893  04B6  0B89               	decfsz	9,f
  7894  04B7  2CB2               	goto	u1895
  7895  04B8  0823               	movf	___aldiv@divisor+3,w
  7896  04B9  0227               	subwf	___aldiv@dividend+3,w
  7897  04BA  1D03               	skipz
  7898  04BB  2CC6               	goto	u1905
  7899  04BC  0822               	movf	___aldiv@divisor+2,w
  7900  04BD  0226               	subwf	___aldiv@dividend+2,w
  7901  04BE  1D03               	skipz
  7902  04BF  2CC6               	goto	u1905
  7903  04C0  0821               	movf	___aldiv@divisor+1,w
  7904  04C1  0225               	subwf	___aldiv@dividend+1,w
  7905  04C2  1D03               	skipz
  7906  04C3  2CC6               	goto	u1905
  7907  04C4  0820               	movf	___aldiv@divisor,w
  7908  04C5  0224               	subwf	___aldiv@dividend,w
  7909  04C6                     u1905:	
  7910  04C6  1C03               	skipc
  7911  04C7  2CD1               	goto	l3100
  7912  04C8  0820               	movf	___aldiv@divisor,w
  7913  04C9  02A4               	subwf	___aldiv@dividend,f
  7914  04CA  0821               	movf	___aldiv@divisor+1,w
  7915  04CB  3BA5               	subwfb	___aldiv@dividend+1,f
  7916  04CC  0822               	movf	___aldiv@divisor+2,w
  7917  04CD  3BA6               	subwfb	___aldiv@dividend+2,f
  7918  04CE  0823               	movf	___aldiv@divisor+3,w
  7919  04CF  3BA7               	subwfb	___aldiv@dividend+3,f
  7920  04D0  142B               	bsf	___aldiv@quotient,0
  7921  04D1                     l3100:	
  7922  04D1  3001               	movlw	1
  7923  04D2                     u1915:	
  7924  04D2  36A3               	lsrf	___aldiv@divisor+3,f
  7925  04D3  0CA2               	rrf	___aldiv@divisor+2,f
  7926  04D4  0CA1               	rrf	___aldiv@divisor+1,f
  7927  04D5  0CA0               	rrf	___aldiv@divisor,f
  7928  04D6  0B89               	decfsz	9,f
  7929  04D7  2CD2               	goto	u1915
  7930  04D8  3001               	movlw	1
  7931  04D9  02A9               	subwf	___aldiv@counter,f
  7932  04DA  1D03               	btfss	3,2
  7933  04DB  2CB1               	goto	l3092
  7934  04DC                     l3104:	
  7935  04DC  082A               	movf	___aldiv@sign,w
  7936  04DD  1903               	btfsc	3,2
  7937  04DE  2CEA               	goto	l3108
  7938  04DF  09AB               	comf	___aldiv@quotient,f
  7939  04E0  09AC               	comf	___aldiv@quotient+1,f
  7940  04E1  09AD               	comf	___aldiv@quotient+2,f
  7941  04E2  09AE               	comf	___aldiv@quotient+3,f
  7942  04E3  0AAB               	incf	___aldiv@quotient,f
  7943  04E4  1903               	skipnz
  7944  04E5  0AAC               	incf	___aldiv@quotient+1,f
  7945  04E6  1903               	skipnz
  7946  04E7  0AAD               	incf	___aldiv@quotient+2,f
  7947  04E8  1903               	skipnz
  7948  04E9  0AAE               	incf	___aldiv@quotient+3,f
  7949  04EA                     l3108:	
  7950  04EA  082E               	movf	___aldiv@quotient+3,w
  7951  04EB  00A3               	movwf	?___aldiv+3
  7952  04EC  082D               	movf	___aldiv@quotient+2,w
  7953  04ED  00A2               	movwf	?___aldiv+2
  7954  04EE  082C               	movf	___aldiv@quotient+1,w
  7955  04EF  00A1               	movwf	?___aldiv+1
  7956  04F0  082B               	movf	___aldiv@quotient,w
  7957  04F1  00A0               	movwf	?___aldiv
  7958  04F2  0008               	return
  7959  04F3                     __end_of___aldiv:	
  7960                           
  7961                           	psect	text18
  7962  07D4                     __ptext18:	
  7963 ;; *************** function _InitCalibrate *****************
  7964 ;; Defined at:
  7965 ;;		line 53 in file "D:/programdata/16F18346_Link_IC.X/calibrate_mode.c"
  7966 ;; Parameters:    Size  Location     Type
  7967 ;;		None
  7968 ;; Auto vars:     Size  Location     Type
  7969 ;;  cargoData      16   18[BANK0 ] struct .
  7970 ;; Return value:  Size  Location     Type
  7971 ;;                  1    wreg      void 
  7972 ;; Registers used:
  7973 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7974 ;; Tracked objects:
  7975 ;;		On entry : 0/0
  7976 ;;		On exit  : 0/0
  7977 ;;		Unchanged: 0/0
  7978 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7979 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7980 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7981 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7982 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7983 ;;Total ram usage:       17 bytes
  7984 ;; Hardware stack levels used:    1
  7985 ;; Hardware stack levels required when called:    4
  7986 ;; This function calls:
  7987 ;;		_getCargoData
  7988 ;; This function is called by:
  7989 ;;		_main
  7990 ;;		_Calibrate_download
  7991 ;; This function uses a non-reentrant model
  7992 ;;
  7993                           
  7994                           
  7995                           ;psect for function _InitCalibrate
  7996  07D4                     _InitCalibrate:	
  7997                           
  7998                           ;calibrate_mode.c: 54: isEndPointTrig = 1;
  7999                           
  8000                           ;incstack = 0
  8001                           ; Regs used in _InitCalibrate: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8002  07D4  147B               	bsf	_isEndPointTrig/(0+8),_isEndPointTrig& (0+7)
  8003                           
  8004                           ;calibrate_mode.c: 55: calibdata.cargoLength = 0xFFFF;
  8005  07D5  30FF               	movlw	255
  8006  07D6  0021               	movlb	1	; select bank1
  8007  07D7  00B2               	movwf	_calibdata^(0+128)
  8008  07D8  30FF               	movlw	255
  8009  07D9  00B3               	movwf	(_calibdata^(0+128)+1)
  8010                           
  8011                           ;calibrate_mode.c: 56: calibdata.index = 0x00;
  8012  07DA  01B5               	clrf	(_calibdata^(0+128)+3)
  8013                           
  8014                           ;calibrate_mode.c: 57: calibdata.command =0x00;
  8015  07DB  01B4               	clrf	(_calibdata^(0+128)+2)
  8016                           
  8017                           ;calibrate_mode.c: 58: calibdata.WorkingCount = 0;
  8018  07DC  3000               	movlw	0
  8019  07DD  00B9               	movwf	((_calibdata+3)^(0+128)+4)
  8020  07DE  3000               	movlw	0
  8021  07DF  00B8               	movwf	((_calibdata+2)^(0+128)+4)
  8022  07E0  3000               	movlw	0
  8023  07E1  00B7               	movwf	((_calibdata+1)^(0+128)+4)
  8024  07E2  3000               	movlw	0
  8025  07E3  00B6               	movwf	(_calibdata^(0+128)+4)
  8026                           
  8027                           ;calibrate_mode.c: 59: CargoData cargoData = getCargoData();
  8028  07E4  318E  268B  3187   	fcall	_getCargoData
  8029  07E7  0020               	movlb	0	; select bank0
  8030  07E8  3020               	movlw	low ?_getCargoData
  8031  07E9  0086               	movwf	6
  8032  07EA  3000               	movlw	high ?_getCargoData
  8033  07EB  0087               	movwf	7
  8034  07EC  3032               	movlw	low InitCalibrate@cargoData
  8035  07ED  0084               	movwf	4
  8036  07EE  3000               	movlw	high InitCalibrate@cargoData
  8037  07EF  0085               	movwf	5
  8038  07F0  3010               	movlw	16
  8039  07F1  00B1               	movwf	??_InitCalibrate
  8040  07F2                     u2030:	
  8041  07F2  0016               	moviw fsr1++
  8042  07F3  001A               	movwi fsr0++
  8043  07F4  0BB1               	decfsz	??_InitCalibrate,f
  8044  07F5  2FF2               	goto	u2030
  8045                           
  8046                           ;calibrate_mode.c: 60: cargoData.linkAngleTo = 0;
  8047  07F6  01B7               	clrf	InitCalibrate@cargoData+5
  8048  07F7  01B8               	clrf	InitCalibrate@cargoData+6
  8049                           
  8050                           ;calibrate_mode.c: 61: linkInfo.endpoint = 0;
  8051  07F8  0021               	movlb	1	; select bank1
  8052  07F9  01C0               	clrf	(_linkInfo^(0+128)+5)
  8053                           
  8054                           ;calibrate_mode.c: 62: linkInfo.My_address = 0;
  8055  07FA  01BB               	clrf	_linkInfo^(0+128)
  8056                           
  8057                           ;calibrate_mode.c: 63: countabuf = 0;
  8058  07FB  0020               	movlb	0	; select bank0
  8059  07FC  01E9               	clrf	_countabuf
  8060  07FD  01EA               	clrf	_countabuf+1
  8061  07FE  0008               	return
  8062  07FF                     __end_of_InitCalibrate:	
  8063                           
  8064                           	psect	text19
  8065  0E8B                     __ptext19:	
  8066 ;; *************** function _getCargoData *****************
  8067 ;; Defined at:
  8068 ;;		line 8 in file "struct.c"
  8069 ;; Parameters:    Size  Location     Type
  8070 ;;		None
  8071 ;; Auto vars:     Size  Location     Type
  8072 ;;		None
  8073 ;; Return value:  Size  Location     Type
  8074 ;;                  16    0[BANK0 ] struct .
  8075 ;; Registers used:
  8076 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  8077 ;; Tracked objects:
  8078 ;;		On entry : 0/0
  8079 ;;		On exit  : 0/0
  8080 ;;		Unchanged: 0/0
  8081 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8082 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8083 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8084 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8085 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8086 ;;Total ram usage:       17 bytes
  8087 ;; Hardware stack levels used:    1
  8088 ;; Hardware stack levels required when called:    3
  8089 ;; This function calls:
  8090 ;;		Nothing
  8091 ;; This function is called by:
  8092 ;;		_InitCalibrate
  8093 ;;		_readCargo
  8094 ;;		_EEPROM_download
  8095 ;;		_setCargo_Angle
  8096 ;; This function uses a non-reentrant model
  8097 ;;
  8098                           
  8099                           
  8100                           ;psect for function _getCargoData
  8101  0E8B                     _getCargoData:	
  8102                           
  8103                           ;struct.c: 9: return cargoData;
  8104                           
  8105                           ;incstack = 0
  8106                           ; Regs used in _getCargoData: [wreg-fsr1h+status,2+status,0]
  8107  0E8B  3059               	movlw	low _cargoData
  8108  0E8C  0086               	movwf	6
  8109  0E8D  3000               	movlw	high _cargoData
  8110  0E8E  0087               	movwf	7
  8111  0E8F  3020               	movlw	low ?_getCargoData
  8112  0E90  0084               	movwf	4
  8113  0E91  3000               	movlw	high ?_getCargoData
  8114  0E92  0085               	movwf	5
  8115  0E93  3010               	movlw	16
  8116  0E94  0020               	movlb	0	; select bank0
  8117  0E95  00B0               	movwf	??_getCargoData
  8118  0E96                     u1790:	
  8119  0E96  0016               	moviw fsr1++
  8120  0E97  001A               	movwi fsr0++
  8121  0E98  0BB0               	decfsz	??_getCargoData,f
  8122  0E99  2E96               	goto	u1790
  8123  0E9A  0008               	return
  8124  0E9B                     __end_of_getCargoData:	
  8125                           
  8126                           	psect	text20
  8127  071E                     __ptext20:	
  8128 ;; *************** function _read_train *****************
  8129 ;; Defined at:
  8130 ;;		line 205 in file "D:/programdata/16F18346_Link_IC.X/main.c"
  8131 ;; Parameters:    Size  Location     Type
  8132 ;;		None
  8133 ;; Auto vars:     Size  Location     Type
  8134 ;;  bufint          2    2[BANK0 ] unsigned int 
  8135 ;; Return value:  Size  Location     Type
  8136 ;;                  1    wreg      void 
  8137 ;; Registers used:
  8138 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  8139 ;; Tracked objects:
  8140 ;;		On entry : 0/0
  8141 ;;		On exit  : 0/0
  8142 ;;		Unchanged: 0/0
  8143 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8144 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8145 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8146 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8147 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8148 ;;Total ram usage:        4 bytes
  8149 ;; Hardware stack levels used:    1
  8150 ;; Hardware stack levels required when called:    3
  8151 ;; This function calls:
  8152 ;;		Nothing
  8153 ;; This function is called by:
  8154 ;;		_main
  8155 ;; This function uses a non-reentrant model
  8156 ;;
  8157                           
  8158                           
  8159                           ;psect for function _read_train
  8160  071E                     _read_train:	
  8161                           
  8162                           ;main.c: 206: unsigned int bufint = spi1_Read_data;
  8163                           
  8164                           ;incstack = 0
  8165                           ; Regs used in _read_train: [wreg-fsr0h+status,2+status,0]
  8166  071E  087C               	movf	_spi1_Read_data,w
  8167  071F  0020               	movlb	0	; select bank0
  8168  0720  00A0               	movwf	??_read_train
  8169  0721  01A1               	clrf	??_read_train+1
  8170  0722  0820               	movf	??_read_train,w
  8171  0723  00A2               	movwf	read_train@bufint
  8172  0724  0821               	movf	??_read_train+1,w
  8173  0725  00A3               	movwf	read_train@bufint+1
  8174                           
  8175                           ;main.c: 207: switch(trainPos){
  8176  0726  2F4F               	goto	l3668
  8177  0727                     l3658:	
  8178                           ;main.c: 208: case 1:
  8179                           
  8180                           
  8181                           ;main.c: 209: st_dataLength = (bufint << 8 | 0x00FF);
  8182  0727  0020               	movlb	0	; select bank0
  8183  0728  0822               	movf	read_train@bufint,w
  8184  0729  00A1               	movwf	??_read_train+1
  8185  072A  01A0               	clrf	??_read_train
  8186  072B  30FF               	movlw	255
  8187  072C  0420               	iorwf	??_read_train,w
  8188  072D  0021               	movlb	1	; select bank1
  8189  072E  00E2               	movwf	_st_dataLength^(0+128)
  8190  072F  3000               	movlw	0
  8191  0730  0020               	movlb	0	; select bank0
  8192  0731  0421               	iorwf	??_read_train+1,w
  8193  0732  0021               	movlb	1	; select bank1
  8194  0733  00E3               	movwf	(_st_dataLength+1)^(0+128)
  8195                           
  8196                           ;main.c: 210: break;
  8197  0734  0008               	return
  8198  0735                     l3660:	
  8199                           ;main.c: 211: case 2:
  8200                           
  8201                           
  8202                           ;main.c: 212: st_dataLength = st_dataLength & (bufint | 0xFF00);
  8203  0735  3000               	movlw	0
  8204  0736  0020               	movlb	0	; select bank0
  8205  0737  0422               	iorwf	read_train@bufint,w
  8206  0738  00A0               	movwf	??_read_train
  8207  0739  30FF               	movlw	255
  8208  073A  0423               	iorwf	read_train@bufint+1,w
  8209  073B  00A1               	movwf	??_read_train+1
  8210  073C  0021               	movlb	1	; select bank1
  8211  073D  0862               	movf	_st_dataLength^(0+128),w
  8212  073E  0020               	movlb	0	; select bank0
  8213  073F  0520               	andwf	??_read_train,w
  8214  0740  0021               	movlb	1	; select bank1
  8215  0741  00E2               	movwf	_st_dataLength^(0+128)
  8216  0742  0863               	movf	(_st_dataLength+1)^(0+128),w
  8217  0743  0020               	movlb	0	; select bank0
  8218  0744  0521               	andwf	??_read_train+1,w
  8219  0745  0021               	movlb	1	; select bank1
  8220  0746  00E3               	movwf	(_st_dataLength+1)^(0+128)
  8221                           
  8222                           ;main.c: 213: break;
  8223  0747  0008               	return
  8224  0748                     l3662:	
  8225                           ;main.c: 214: case 3:
  8226                           
  8227                           
  8228                           ;main.c: 215: st_type = spi1_Read_data;
  8229  0748  087C               	movf	_spi1_Read_data,w
  8230  0749  0020               	movlb	0	; select bank0
  8231  074A  00A0               	movwf	??_read_train
  8232  074B  0820               	movf	??_read_train,w
  8233  074C  00ED               	movwf	_st_type
  8234                           
  8235                           ;main.c: 216: isreadTrain = 1;
  8236  074D  17F0               	bsf	_isreadTrain/(0+8),_isreadTrain& (0+7)
  8237                           
  8238                           ;main.c: 220: }
  8239                           
  8240                           ;main.c: 219: break;
  8241                           
  8242                           ;main.c: 218: default :
  8243                           
  8244                           ;main.c: 217: break;
  8245  074E  0008               	return
  8246  074F                     l3668:	
  8247                           
  8248                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8249                           ; Switch size 1, requested type "space"
  8250                           ; Number of cases is 1, Range of values is 0 to 0
  8251                           ; switch strategies available:
  8252                           ; Name         Instructions Cycles
  8253                           ; simple_byte            4     3 (average)
  8254                           ; direct_byte            8     6 (fixed)
  8255                           ; jumptable            260     6 (fixed)
  8256                           ;	Chosen strategy is simple_byte
  8257  074F  0021               	movlb	1	; select bank1
  8258  0750  0856               	movf	(_trainPos+1)^(0+128),w
  8259  0751  3A00               	xorlw	0	; case 0
  8260  0752  1903               	skipnz
  8261  0753  2F55               	goto	l3924
  8262  0754  2F60               	goto	l168
  8263  0755                     l3924:	
  8264                           
  8265                           ; Switch size 1, requested type "space"
  8266                           ; Number of cases is 3, Range of values is 1 to 3
  8267                           ; switch strategies available:
  8268                           ; Name         Instructions Cycles
  8269                           ; simple_byte           10     6 (average)
  8270                           ; direct_byte           15     9 (fixed)
  8271                           ; jumptable            263     9 (fixed)
  8272                           ;	Chosen strategy is simple_byte
  8273  0755  0855               	movf	_trainPos^(0+128),w
  8274  0756  3A01               	xorlw	1	; case 1
  8275  0757  1903               	skipnz
  8276  0758  2F27               	goto	l3658
  8277  0759  3A03               	xorlw	3	; case 2
  8278  075A  1903               	skipnz
  8279  075B  2F35               	goto	l3660
  8280  075C  3A01               	xorlw	1	; case 3
  8281  075D  1903               	skipnz
  8282  075E  2F48               	goto	l3662
  8283  075F  2F60               	goto	l168
  8284  0760                     l168:	
  8285  0760  0008               	return
  8286  0761                     __end_of_read_train:	
  8287                           
  8288                           	psect	text21
  8289  0E6E                     __ptext21:	
  8290 ;; *************** function _isSPI1read *****************
  8291 ;; Defined at:
  8292 ;;		line 66 in file "D:/programdata/16F18346_Link_IC.X/spiControl.c"
  8293 ;; Parameters:    Size  Location     Type
  8294 ;;		None
  8295 ;; Auto vars:     Size  Location     Type
  8296 ;;		None
  8297 ;; Return value:  Size  Location     Type
  8298 ;;		None               void
  8299 ;; Registers used:
  8300 ;;		wreg, status,2, status,0
  8301 ;; Tracked objects:
  8302 ;;		On entry : 0/0
  8303 ;;		On exit  : 0/0
  8304 ;;		Unchanged: 0/0
  8305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8306 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8307 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8309 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8310 ;;Total ram usage:        0 bytes
  8311 ;; Hardware stack levels used:    1
  8312 ;; Hardware stack levels required when called:    3
  8313 ;; This function calls:
  8314 ;;		Nothing
  8315 ;; This function is called by:
  8316 ;;		_main
  8317 ;; This function uses a non-reentrant model
  8318 ;;
  8319                           
  8320                           
  8321                           ;psect for function _isSPI1read
  8322  0E6E                     _isSPI1read:	
  8323                           
  8324                           ;spiControl.c: 67: if(read_count1 == count1){
  8325                           
  8326                           ;incstack = 0
  8327                           ; Regs used in _isSPI1read: [wreg+status,2+status,0]
  8328  0E6E  0021               	movlb	1	; select bank1
  8329  0E6F  085A               	movf	(_count1+1)^(0+128),w
  8330  0E70  0658               	xorwf	(_read_count1+1)^(0+128),w
  8331  0E71  1D03               	skipz
  8332  0E72  2E75               	goto	u2415
  8333  0E73  0859               	movf	_count1^(0+128),w
  8334  0E74  0657               	xorwf	_read_count1^(0+128),w
  8335  0E75                     u2415:	
  8336  0E75  1D03               	skipz
  8337  0E76  2E79               	goto	l3616
  8338                           
  8339                           ;spiControl.c: 68: return 1;
  8340  0E77  1403               	setc
  8341                           
  8342                           ;spiControl.c: 69: }else{
  8343  0E78  0008               	return
  8344  0E79                     l3616:	
  8345                           
  8346                           ;spiControl.c: 70: return 0;
  8347  0E79  1003               	clrc
  8348  0E7A  0008               	return
  8349  0E7B                     __end_of_isSPI1read:	
  8350                           
  8351                           	psect	text22
  8352  0E21                     __ptext22:	
  8353 ;; *************** function _io_init *****************
  8354 ;; Defined at:
  8355 ;;		line 135 in file "D:/programdata/16F18346_Link_IC.X/main.c"
  8356 ;; Parameters:    Size  Location     Type
  8357 ;;		None
  8358 ;; Auto vars:     Size  Location     Type
  8359 ;;		None
  8360 ;; Return value:  Size  Location     Type
  8361 ;;                  1    wreg      void 
  8362 ;; Registers used:
  8363 ;;		None
  8364 ;; Tracked objects:
  8365 ;;		On entry : 0/0
  8366 ;;		On exit  : 0/0
  8367 ;;		Unchanged: 0/0
  8368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8369 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8370 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8371 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8372 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8373 ;;Total ram usage:        0 bytes
  8374 ;; Hardware stack levels used:    1
  8375 ;; Hardware stack levels required when called:    3
  8376 ;; This function calls:
  8377 ;;		Nothing
  8378 ;; This function is called by:
  8379 ;;		_main
  8380 ;; This function uses a non-reentrant model
  8381 ;;
  8382                           
  8383                           
  8384                           ;psect for function _io_init
  8385  0E21                     _io_init:	
  8386                           
  8387                           ;main.c: 136: PIE0bits.IOCIE = 1;
  8388                           
  8389                           ;incstack = 0
  8390                           ; Regs used in _io_init: []
  8391  0E21  0021               	movlb	1	; select bank1
  8392  0E22  1610               	bsf	16,4	;volatile
  8393                           
  8394                           ;main.c: 137: IOCAPbits.IOCAP3 = 1;
  8395  0E23  0027               	movlb	7	; select bank7
  8396  0E24  1591               	bsf	17,3	;volatile
  8397                           
  8398                           ;main.c: 138: IOCANbits.IOCAN3 = 1;
  8399  0E25  1592               	bsf	18,3	;volatile
  8400                           
  8401                           ;main.c: 139: PIE0bits.INTE = 1;
  8402  0E26  0021               	movlb	1	; select bank1
  8403  0E27  1410               	bsf	16,0	;volatile
  8404                           
  8405                           ;main.c: 140: INTCONbits.INTEDG = 1;
  8406  0E28  140B               	bsf	11,0	;volatile
  8407  0E29  0008               	return
  8408  0E2A                     __end_of_io_init:	
  8409                           
  8410                           	psect	text23
  8411  06D4                     __ptext23:	
  8412 ;; *************** function _initTrain *****************
  8413 ;; Defined at:
  8414 ;;		line 143 in file "D:/programdata/16F18346_Link_IC.X/main.c"
  8415 ;; Parameters:    Size  Location     Type
  8416 ;;		None
  8417 ;; Auto vars:     Size  Location     Type
  8418 ;;		None
  8419 ;; Return value:  Size  Location     Type
  8420 ;;                  1    wreg      void 
  8421 ;; Registers used:
  8422 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8423 ;; Tracked objects:
  8424 ;;		On entry : 0/0
  8425 ;;		On exit  : 0/0
  8426 ;;		Unchanged: 0/0
  8427 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8428 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8429 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8430 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8431 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8432 ;;Total ram usage:        3 bytes
  8433 ;; Hardware stack levels used:    1
  8434 ;; Hardware stack levels required when called:    5
  8435 ;; This function calls:
  8436 ;;		_isTrainSt
  8437 ;;		_resetTrainData
  8438 ;; This function is called by:
  8439 ;;		_main
  8440 ;; This function uses a non-reentrant model
  8441 ;;
  8442                           
  8443                           
  8444                           ;psect for function _initTrain
  8445  06D4                     _initTrain:	
  8446                           
  8447                           ;main.c: 144: spi1_Read_data = spi1_buffer_data[read_count1];
  8448                           
  8449                           ;incstack = 0
  8450                           ; Regs used in _initTrain: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8451  06D4  30F0               	movlw	240
  8452  06D5  0020               	movlb	0	; select bank0
  8453  06D6  00AB               	movwf	??_initTrain
  8454  06D7  3026               	movlw	38
  8455  06D8  00AC               	movwf	??_initTrain+1
  8456  06D9  0021               	movlb	1	; select bank1
  8457  06DA  0857               	movf	_read_count1^(0+128),w
  8458  06DB  0020               	movlb	0	; select bank0
  8459  06DC  072B               	addwf	??_initTrain,w
  8460  06DD  0086               	movwf	6
  8461  06DE  0021               	movlb	1	; select bank1
  8462  06DF  0858               	movf	(_read_count1+1)^(0+128),w
  8463  06E0  0020               	movlb	0	; select bank0
  8464  06E1  3D2C               	addwfc	??_initTrain+1,w
  8465  06E2  0087               	movwf	7
  8466  06E3  0801               	movf	1,w
  8467  06E4  00AD               	movwf	??_initTrain+2
  8468  06E5  082D               	movf	??_initTrain+2,w
  8469  06E6  00FC               	movwf	_spi1_Read_data
  8470                           
  8471                           ;main.c: 145: spi2_Send_data = spi1_Read_data;
  8472  06E7  087C               	movf	_spi1_Read_data,w
  8473  06E8  00AB               	movwf	??_initTrain
  8474  06E9  082B               	movf	??_initTrain,w
  8475  06EA  00EE               	movwf	_spi2_Send_data
  8476                           
  8477                           ;main.c: 146: read_count1++;
  8478  06EB  3001               	movlw	1
  8479  06EC  0021               	movlb	1	; select bank1
  8480  06ED  07D7               	addwf	_read_count1^(0+128),f
  8481  06EE  3000               	movlw	0
  8482  06EF  3DD8               	addwfc	(_read_count1+1)^(0+128),f
  8483                           
  8484                           ;main.c: 147: if(read_count1 == 256){
  8485  06F0  0358               	decf	(_read_count1+1)^(0+128),w
  8486  06F1  0457               	iorwf	_read_count1^(0+128),w
  8487  06F2  1D03               	btfss	3,2
  8488  06F3  2EF6               	goto	l3568
  8489                           
  8490                           ;main.c: 148: read_count1 = 0;
  8491  06F4  01D7               	clrf	_read_count1^(0+128)
  8492  06F5  01D8               	clrf	(_read_count1+1)^(0+128)
  8493  06F6                     l3568:	
  8494                           
  8495                           ;main.c: 149: }
  8496                           ;main.c: 150: if(isTrainSt(spi1_Read_data)){
  8497  06F6  087C               	movf	_spi1_Read_data,w
  8498  06F7  3186  263B  3186   	fcall	_isTrainSt
  8499  06FA  1C03               	btfss	3,0
  8500  06FB  2F07               	goto	l3578
  8501                           
  8502                           ;main.c: 151: trainPos = 0;
  8503  06FC  0021               	movlb	1	; select bank1
  8504  06FD  01D5               	clrf	_trainPos^(0+128)
  8505  06FE  01D6               	clrf	(_trainPos+1)^(0+128)
  8506                           
  8507                           ;main.c: 152: resetTrainData();
  8508  06FF  318E  262A  3186   	fcall	_resetTrainData
  8509                           
  8510                           ;main.c: 153: isreadTrain = 0;
  8511  0702  13F0               	bcf	_isreadTrain/(0+8),_isreadTrain& (0+7)
  8512                           
  8513                           ;main.c: 154: countabuf = 0;
  8514  0703  0020               	movlb	0	; select bank0
  8515  0704  01E9               	clrf	_countabuf
  8516  0705  01EA               	clrf	_countabuf+1
  8517                           
  8518                           ;main.c: 155: }else{
  8519  0706  2F0C               	goto	l134
  8520  0707                     l3578:	
  8521                           
  8522                           ;main.c: 156: trainPos++;
  8523  0707  3001               	movlw	1
  8524  0708  0021               	movlb	1	; select bank1
  8525  0709  07D5               	addwf	_trainPos^(0+128),f
  8526  070A  3000               	movlw	0
  8527  070B  3DD6               	addwfc	(_trainPos+1)^(0+128),f
  8528  070C                     l134:	
  8529                           
  8530                           ;main.c: 157: }
  8531                           ;main.c: 158: if(st_dataLength < trainPos){
  8532  070C  0021               	movlb	1	; select bank1
  8533  070D  0856               	movf	(_trainPos+1)^(0+128),w
  8534  070E  0263               	subwf	(_st_dataLength+1)^(0+128),w
  8535  070F  1D03               	skipz
  8536  0710  2F13               	goto	u2405
  8537  0711  0855               	movf	_trainPos^(0+128),w
  8538  0712  0262               	subwf	_st_dataLength^(0+128),w
  8539  0713                     u2405:	
  8540  0713  1803               	skipnc
  8541  0714  0008               	return
  8542                           
  8543                           ;main.c: 159: trainPos = 0;
  8544  0715  01D5               	clrf	_trainPos^(0+128)
  8545  0716  01D6               	clrf	(_trainPos+1)^(0+128)
  8546                           
  8547                           ;main.c: 160: resetTrainData();
  8548  0717  318E  262A         	fcall	_resetTrainData
  8549                           
  8550                           ;main.c: 161: isreadTrain = 0;
  8551  0719  13F0               	bcf	_isreadTrain/(0+8),_isreadTrain& (0+7)
  8552                           
  8553                           ;main.c: 162: countabuf = 0;
  8554  071A  0020               	movlb	0	; select bank0
  8555  071B  01E9               	clrf	_countabuf
  8556  071C  01EA               	clrf	_countabuf+1
  8557  071D  0008               	return
  8558  071E                     __end_of_initTrain:	
  8559                           
  8560                           	psect	text24
  8561  0E2A                     __ptext24:	
  8562 ;; *************** function _resetTrainData *****************
  8563 ;; Defined at:
  8564 ;;		line 187 in file "D:/programdata/16F18346_Link_IC.X/main.c"
  8565 ;; Parameters:    Size  Location     Type
  8566 ;;		None
  8567 ;; Auto vars:     Size  Location     Type
  8568 ;;		None
  8569 ;; Return value:  Size  Location     Type
  8570 ;;                  1    wreg      void 
  8571 ;; Registers used:
  8572 ;;		wreg, status,2, status,0, pclath, cstack
  8573 ;; Tracked objects:
  8574 ;;		On entry : 0/0
  8575 ;;		On exit  : 0/0
  8576 ;;		Unchanged: 0/0
  8577 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8578 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8579 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8580 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8581 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8582 ;;Total ram usage:        0 bytes
  8583 ;; Hardware stack levels used:    1
  8584 ;; Hardware stack levels required when called:    4
  8585 ;; This function calls:
  8586 ;;		_restartCargo
  8587 ;; This function is called by:
  8588 ;;		_initTrain
  8589 ;; This function uses a non-reentrant model
  8590 ;;
  8591                           
  8592                           
  8593                           ;psect for function _resetTrainData
  8594  0E2A                     _resetTrainData:	
  8595                           
  8596                           ;main.c: 188: st_dataLength = 0xFFFF;
  8597                           
  8598                           ;incstack = 0
  8599                           ; Regs used in _resetTrainData: [wreg+status,2+status,0+pclath+cstack]
  8600  0E2A  30FF               	movlw	255
  8601  0E2B  0021               	movlb	1	; select bank1
  8602  0E2C  00E2               	movwf	_st_dataLength^(0+128)
  8603  0E2D  30FF               	movlw	255
  8604  0E2E  00E3               	movwf	(_st_dataLength^(0+128)+1)
  8605                           
  8606                           ;main.c: 189: st_type = 0;
  8607  0E2F  0020               	movlb	0	; select bank0
  8608  0E30  01ED               	clrf	_st_type
  8609                           
  8610                           ;main.c: 190: restartCargo();
  8611  0E31  318E  2610         	fcall	_restartCargo
  8612  0E33  0008               	return
  8613  0E34                     __end_of_resetTrainData:	
  8614                           
  8615                           	psect	text25
  8616  0E10                     __ptext25:	
  8617 ;; *************** function _restartCargo *****************
  8618 ;; Defined at:
  8619 ;;		line 36 in file "struct.c"
  8620 ;; Parameters:    Size  Location     Type
  8621 ;;		None
  8622 ;; Auto vars:     Size  Location     Type
  8623 ;;		None
  8624 ;; Return value:  Size  Location     Type
  8625 ;;                  1    wreg      void 
  8626 ;; Registers used:
  8627 ;;		status,2
  8628 ;; Tracked objects:
  8629 ;;		On entry : 0/0
  8630 ;;		On exit  : 0/0
  8631 ;;		Unchanged: 0/0
  8632 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8633 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8634 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8636 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8637 ;;Total ram usage:        0 bytes
  8638 ;; Hardware stack levels used:    1
  8639 ;; Hardware stack levels required when called:    3
  8640 ;; This function calls:
  8641 ;;		Nothing
  8642 ;; This function is called by:
  8643 ;;		_resetTrainData
  8644 ;;		_readCargo
  8645 ;;		_EEPROM_download
  8646 ;; This function uses a non-reentrant model
  8647 ;;
  8648                           
  8649                           
  8650                           ;psect for function _restartCargo
  8651  0E10                     _restartCargo:	
  8652                           
  8653                           ;struct.c: 37: cargoData.address = 0;
  8654                           
  8655                           ;incstack = 0
  8656                           ; Regs used in _restartCargo: [status,2]
  8657  0E10  0020               	movlb	0	; select bank0
  8658  0E11  01DD               	clrf	_cargoData+4
  8659                           
  8660                           ;struct.c: 38: cargoData.command = 0;
  8661  0E12  01DB               	clrf	_cargoData+2
  8662                           
  8663                           ;struct.c: 39: cargoData.index = 0;
  8664  0E13  01DC               	clrf	_cargoData+3
  8665  0E14  0008               	return
  8666  0E15                     __end_of_restartCargo:	
  8667                           
  8668                           	psect	text26
  8669  063B                     __ptext26:	
  8670 ;; *************** function _isTrainSt *****************
  8671 ;; Defined at:
  8672 ;;		line 193 in file "D:/programdata/16F18346_Link_IC.X/main.c"
  8673 ;; Parameters:    Size  Location     Type
  8674 ;;  buf             1    wreg     unsigned char 
  8675 ;; Auto vars:     Size  Location     Type
  8676 ;;  buf             1   10[BANK0 ] unsigned char 
  8677 ;; Return value:  Size  Location     Type
  8678 ;;		None               void
  8679 ;; Registers used:
  8680 ;;		wreg, status,2, status,0
  8681 ;; Tracked objects:
  8682 ;;		On entry : 0/0
  8683 ;;		On exit  : 0/0
  8684 ;;		Unchanged: 0/0
  8685 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8686 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8687 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8688 ;;      Temps:          0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8689 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8690 ;;Total ram usage:       11 bytes
  8691 ;; Hardware stack levels used:    1
  8692 ;; Hardware stack levels required when called:    3
  8693 ;; This function calls:
  8694 ;;		Nothing
  8695 ;; This function is called by:
  8696 ;;		_initTrain
  8697 ;; This function uses a non-reentrant model
  8698 ;;
  8699                           
  8700                           
  8701                           ;psect for function _isTrainSt
  8702  063B                     _isTrainSt:	
  8703                           
  8704                           ;incstack = 0
  8705                           ; Regs used in _isTrainSt: [wreg+status,2+status,0]
  8706                           ;isTrainSt@buf stored from wreg
  8707  063B  0020               	movlb	0	; select bank0
  8708  063C  00AA               	movwf	isTrainSt@buf
  8709                           
  8710                           ;main.c: 194: startTrainBytes = startTrainBytes << 8 | (buf +SPI_OFFSET_BYTE);
  8711  063D  082A               	movf	isTrainSt@buf,w
  8712  063E  077D               	addwf	_SPI_OFFSET_BYTE,w
  8713  063F  00A0               	movwf	??_isTrainSt
  8714  0640  01A1               	clrf	??_isTrainSt+1
  8715  0641  0DA1               	rlf	??_isTrainSt+1,f
  8716  0642  0820               	movf	??_isTrainSt,w
  8717  0643  00A2               	movwf	??_isTrainSt+2
  8718  0644  0821               	movf	??_isTrainSt+1,w
  8719  0645  00A3               	movwf	??_isTrainSt+3
  8720  0646  3000               	movlw	0
  8721  0647  1BA3               	btfsc	??_isTrainSt+3,7
  8722  0648  30FF               	movlw	255
  8723  0649  00A4               	movwf	??_isTrainSt+4
  8724  064A  00A5               	movwf	??_isTrainSt+5
  8725  064B  0021               	movlb	1	; select bank1
  8726  064C  0841               	movf	_startTrainBytes^(0+128),w
  8727  064D  0020               	movlb	0	; select bank0
  8728  064E  00A6               	movwf	??_isTrainSt+6
  8729  064F  0021               	movlb	1	; select bank1
  8730  0650  0842               	movf	(_startTrainBytes+1)^(0+128),w
  8731  0651  0020               	movlb	0	; select bank0
  8732  0652  00A7               	movwf	??_isTrainSt+7
  8733  0653  0021               	movlb	1	; select bank1
  8734  0654  0843               	movf	(_startTrainBytes+2)^(0+128),w
  8735  0655  0020               	movlb	0	; select bank0
  8736  0656  00A8               	movwf	??_isTrainSt+8
  8737  0657  0021               	movlb	1	; select bank1
  8738  0658  0844               	movf	(_startTrainBytes+3)^(0+128),w
  8739  0659  0020               	movlb	0	; select bank0
  8740  065A  00A9               	movwf	??_isTrainSt+9
  8741  065B  3008               	movlw	8
  8742  065C                     u2145:	
  8743  065C  35A6               	lslf	??_isTrainSt+6,f
  8744  065D  0DA7               	rlf	??_isTrainSt+7,f
  8745  065E  0DA8               	rlf	??_isTrainSt+8,f
  8746  065F  0DA9               	rlf	??_isTrainSt+9,f
  8747  0660  0B89               	decfsz	9,f
  8748  0661  2E5C               	goto	u2145
  8749  0662  0826               	movf	??_isTrainSt+6,w
  8750  0663  04A2               	iorwf	??_isTrainSt+2,f
  8751  0664  0827               	movf	??_isTrainSt+7,w
  8752  0665  04A3               	iorwf	??_isTrainSt+3,f
  8753  0666  0828               	movf	??_isTrainSt+8,w
  8754  0667  04A4               	iorwf	??_isTrainSt+4,f
  8755  0668  0829               	movf	??_isTrainSt+9,w
  8756  0669  04A5               	iorwf	??_isTrainSt+5,f
  8757  066A  0825               	movf	??_isTrainSt+5,w
  8758  066B  0021               	movlb	1	; select bank1
  8759  066C  00C4               	movwf	(_startTrainBytes+3)^(0+128)
  8760  066D  0020               	movlb	0	; select bank0
  8761  066E  0824               	movf	??_isTrainSt+4,w
  8762  066F  0021               	movlb	1	; select bank1
  8763  0670  00C3               	movwf	(_startTrainBytes+2)^(0+128)
  8764  0671  0020               	movlb	0	; select bank0
  8765  0672  0823               	movf	??_isTrainSt+3,w
  8766  0673  0021               	movlb	1	; select bank1
  8767  0674  00C2               	movwf	(_startTrainBytes+1)^(0+128)
  8768  0675  0020               	movlb	0	; select bank0
  8769  0676  0822               	movf	??_isTrainSt+2,w
  8770  0677  0021               	movlb	1	; select bank1
  8771  0678  00C1               	movwf	_startTrainBytes^(0+128)
  8772                           
  8773                           ;main.c: 195: if(startTrainBytes == 0xFFFFFFFF){
  8774  0679  0A41               	incf	_startTrainBytes^(0+128),w
  8775  067A  1D03               	skipz
  8776  067B  2E87               	goto	l3264
  8777  067C  0A42               	incf	(_startTrainBytes+1)^(0+128),w
  8778  067D  1D03               	skipz
  8779  067E  2E87               	goto	l3264
  8780  067F  0A43               	incf	(_startTrainBytes+2)^(0+128),w
  8781  0680  1D03               	skipz
  8782  0681  2E87               	goto	l3264
  8783  0682  0A44               	incf	(_startTrainBytes+3)^(0+128),w
  8784  0683  1D03               	btfss	3,2
  8785  0684  2E87               	goto	l3264
  8786                           
  8787                           ;main.c: 196: return 1;
  8788  0685  1403               	setc
  8789                           
  8790                           ;main.c: 197: }else{
  8791  0686  0008               	return
  8792  0687                     l3264:	
  8793                           
  8794                           ;main.c: 198: return 0;
  8795  0687  1003               	clrc
  8796  0688  0008               	return
  8797  0689                     __end_of_isTrainSt:	
  8798                           
  8799                           	psect	text27
  8800  0561                     __ptext27:	
  8801 ;; *************** function _initComu_types *****************
  8802 ;; Defined at:
  8803 ;;		line 20 in file "D:/programdata/16F18346_Link_IC.X/comu_type.c"
  8804 ;; Parameters:    Size  Location     Type
  8805 ;;		None
  8806 ;; Auto vars:     Size  Location     Type
  8807 ;;		None
  8808 ;; Return value:  Size  Location     Type
  8809 ;;                  1    wreg      void 
  8810 ;; Registers used:
  8811 ;;		wreg
  8812 ;; Tracked objects:
  8813 ;;		On entry : 0/0
  8814 ;;		On exit  : 0/0
  8815 ;;		Unchanged: 0/0
  8816 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8817 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8818 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8819 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8820 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8821 ;;Total ram usage:        1 bytes
  8822 ;; Hardware stack levels used:    1
  8823 ;; Hardware stack levels required when called:    3
  8824 ;; This function calls:
  8825 ;;		Nothing
  8826 ;; This function is called by:
  8827 ;;		_main
  8828 ;; This function uses a non-reentrant model
  8829 ;;
  8830                           
  8831                           
  8832                           ;psect for function _initComu_types
  8833  0561                     _initComu_types:	
  8834                           
  8835                           ;comu_type.c: 21: comu_types[0] = 0b00111111;
  8836                           
  8837                           ;incstack = 0
  8838                           ; Regs used in _initComu_types: [wreg]
  8839  0561  303F               	movlw	63
  8840  0562  0020               	movlb	0	; select bank0
  8841  0563  00A0               	movwf	??_initComu_types
  8842  0564  0820               	movf	??_initComu_types,w
  8843  0565  0022               	movlb	2	; select bank2
  8844  0566  00B2               	movwf	_comu_types^(0+256)
  8845                           
  8846                           ;comu_type.c: 22: comu_types[1] = 0b01111111;
  8847  0567  307F               	movlw	127
  8848  0568  0020               	movlb	0	; select bank0
  8849  0569  00A0               	movwf	??_initComu_types
  8850  056A  0820               	movf	??_initComu_types,w
  8851  056B  0022               	movlb	2	; select bank2
  8852  056C  00B3               	movwf	(_comu_types^(0+256)+1)
  8853                           
  8854                           ;comu_type.c: 23: comu_types[2] = 0b10011111;
  8855  056D  309F               	movlw	159
  8856  056E  0020               	movlb	0	; select bank0
  8857  056F  00A0               	movwf	??_initComu_types
  8858  0570  0820               	movf	??_initComu_types,w
  8859  0571  0022               	movlb	2	; select bank2
  8860  0572  00B4               	movwf	(_comu_types^(0+256)+2)
  8861                           
  8862                           ;comu_type.c: 24: comu_types[3] = 0b10101111;
  8863  0573  30AF               	movlw	175
  8864  0574  0020               	movlb	0	; select bank0
  8865  0575  00A0               	movwf	??_initComu_types
  8866  0576  0820               	movf	??_initComu_types,w
  8867  0577  0022               	movlb	2	; select bank2
  8868  0578  00B5               	movwf	(_comu_types^(0+256)+3)
  8869                           
  8870                           ;comu_type.c: 25: comu_types[4] = 0b10111111;
  8871  0579  30BF               	movlw	191
  8872  057A  0020               	movlb	0	; select bank0
  8873  057B  00A0               	movwf	??_initComu_types
  8874  057C  0820               	movf	??_initComu_types,w
  8875  057D  0022               	movlb	2	; select bank2
  8876  057E  00B6               	movwf	(_comu_types^(0+256)+4)
  8877                           
  8878                           ;comu_type.c: 26: comu_types[5] = 0b11001111;
  8879  057F  30CF               	movlw	207
  8880  0580  0020               	movlb	0	; select bank0
  8881  0581  00A0               	movwf	??_initComu_types
  8882  0582  0820               	movf	??_initComu_types,w
  8883  0583  0022               	movlb	2	; select bank2
  8884  0584  00B7               	movwf	(_comu_types^(0+256)+5)
  8885                           
  8886                           ;comu_type.c: 27: comu_types[6] = 0b11010111;
  8887  0585  30D7               	movlw	215
  8888  0586  0020               	movlb	0	; select bank0
  8889  0587  00A0               	movwf	??_initComu_types
  8890  0588  0820               	movf	??_initComu_types,w
  8891  0589  0022               	movlb	2	; select bank2
  8892  058A  00B8               	movwf	(_comu_types^(0+256)+6)
  8893                           
  8894                           ;comu_type.c: 28: comu_types[7] = 0b11011111;
  8895  058B  30DF               	movlw	223
  8896  058C  0020               	movlb	0	; select bank0
  8897  058D  00A0               	movwf	??_initComu_types
  8898  058E  0820               	movf	??_initComu_types,w
  8899  058F  0022               	movlb	2	; select bank2
  8900  0590  00B9               	movwf	(_comu_types^(0+256)+7)
  8901                           
  8902                           ;comu_type.c: 29: comu_types[8] = 0b11100111;
  8903  0591  30E7               	movlw	231
  8904  0592  0020               	movlb	0	; select bank0
  8905  0593  00A0               	movwf	??_initComu_types
  8906  0594  0820               	movf	??_initComu_types,w
  8907  0595  0022               	movlb	2	; select bank2
  8908  0596  00BA               	movwf	(_comu_types^(0+256)+8)
  8909                           
  8910                           ;comu_type.c: 30: comu_types[9] = 0b11101011;
  8911  0597  30EB               	movlw	235
  8912  0598  0020               	movlb	0	; select bank0
  8913  0599  00A0               	movwf	??_initComu_types
  8914  059A  0820               	movf	??_initComu_types,w
  8915  059B  0022               	movlb	2	; select bank2
  8916  059C  00BB               	movwf	(_comu_types^(0+256)+9)
  8917                           
  8918                           ;comu_type.c: 31: comu_types[10] = 0b11101111;
  8919  059D  30EF               	movlw	239
  8920  059E  0020               	movlb	0	; select bank0
  8921  059F  00A0               	movwf	??_initComu_types
  8922  05A0  0820               	movf	??_initComu_types,w
  8923  05A1  0022               	movlb	2	; select bank2
  8924  05A2  00BC               	movwf	(_comu_types^(0+256)+10)
  8925                           
  8926                           ;comu_type.c: 32: comu_types[11] = 0b11110001;
  8927  05A3  30F1               	movlw	241
  8928  05A4  0020               	movlb	0	; select bank0
  8929  05A5  00A0               	movwf	??_initComu_types
  8930  05A6  0820               	movf	??_initComu_types,w
  8931  05A7  0022               	movlb	2	; select bank2
  8932  05A8  00BD               	movwf	(_comu_types^(0+256)+11)
  8933                           
  8934                           ;comu_type.c: 33: comu_types[12] = 0b11110011;
  8935  05A9  30F3               	movlw	243
  8936  05AA  0020               	movlb	0	; select bank0
  8937  05AB  00A0               	movwf	??_initComu_types
  8938  05AC  0820               	movf	??_initComu_types,w
  8939  05AD  0022               	movlb	2	; select bank2
  8940  05AE  00BE               	movwf	(_comu_types^(0+256)+12)
  8941                           
  8942                           ;comu_type.c: 34: comu_types[13] = 0b11110101;
  8943  05AF  30F5               	movlw	245
  8944  05B0  0020               	movlb	0	; select bank0
  8945  05B1  00A0               	movwf	??_initComu_types
  8946  05B2  0820               	movf	??_initComu_types,w
  8947  05B3  0022               	movlb	2	; select bank2
  8948  05B4  00BF               	movwf	(_comu_types^(0+256)+13)
  8949                           
  8950                           ;comu_type.c: 35: comu_types[14] = 0b11110111;
  8951  05B5  30F7               	movlw	247
  8952  05B6  0020               	movlb	0	; select bank0
  8953  05B7  00A0               	movwf	??_initComu_types
  8954  05B8  0820               	movf	??_initComu_types,w
  8955  05B9  0022               	movlb	2	; select bank2
  8956  05BA  00C0               	movwf	(_comu_types^(0+256)+14)
  8957                           
  8958                           ;comu_type.c: 36: comu_types[15] = 0b11111000;
  8959  05BB  30F8               	movlw	248
  8960  05BC  0020               	movlb	0	; select bank0
  8961  05BD  00A0               	movwf	??_initComu_types
  8962  05BE  0820               	movf	??_initComu_types,w
  8963  05BF  0022               	movlb	2	; select bank2
  8964  05C0  00C1               	movwf	(_comu_types^(0+256)+15)
  8965                           
  8966                           ;comu_type.c: 37: comu_types[16] = 0b11111001;
  8967  05C1  30F9               	movlw	249
  8968  05C2  0020               	movlb	0	; select bank0
  8969  05C3  00A0               	movwf	??_initComu_types
  8970  05C4  0820               	movf	??_initComu_types,w
  8971  05C5  0022               	movlb	2	; select bank2
  8972  05C6  00C2               	movwf	(_comu_types^(0+256)+16)
  8973                           
  8974                           ;comu_type.c: 38: comu_types[17] = 0b11111010;
  8975  05C7  30FA               	movlw	250
  8976  05C8  0020               	movlb	0	; select bank0
  8977  05C9  00A0               	movwf	??_initComu_types
  8978  05CA  0820               	movf	??_initComu_types,w
  8979  05CB  0022               	movlb	2	; select bank2
  8980  05CC  00C3               	movwf	(_comu_types^(0+256)+17)
  8981  05CD  0008               	return
  8982  05CE                     __end_of_initComu_types:	
  8983                           
  8984                           	psect	text28
  8985  05CE                     __ptext28:	
  8986 ;; *************** function _initComand *****************
  8987 ;; Defined at:
  8988 ;;		line 12 in file "D:/programdata/16F18346_Link_IC.X/command.c"
  8989 ;; Parameters:    Size  Location     Type
  8990 ;;		None
  8991 ;; Auto vars:     Size  Location     Type
  8992 ;;		None
  8993 ;; Return value:  Size  Location     Type
  8994 ;;                  1    wreg      void 
  8995 ;; Registers used:
  8996 ;;		wreg
  8997 ;; Tracked objects:
  8998 ;;		On entry : 0/0
  8999 ;;		On exit  : 0/0
  9000 ;;		Unchanged: 0/0
  9001 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9002 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9003 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9004 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9005 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9006 ;;Total ram usage:        1 bytes
  9007 ;; Hardware stack levels used:    1
  9008 ;; Hardware stack levels required when called:    3
  9009 ;; This function calls:
  9010 ;;		Nothing
  9011 ;; This function is called by:
  9012 ;;		_main
  9013 ;; This function uses a non-reentrant model
  9014 ;;
  9015                           
  9016                           
  9017                           ;psect for function _initComand
  9018  05CE                     _initComand:	
  9019                           
  9020                           ;command.c: 13: command[0] = 0b00111111;
  9021                           
  9022                           ;incstack = 0
  9023                           ; Regs used in _initComand: [wreg]
  9024  05CE  303F               	movlw	63
  9025  05CF  0020               	movlb	0	; select bank0
  9026  05D0  00A0               	movwf	??_initComand
  9027  05D1  0820               	movf	??_initComand,w
  9028  05D2  0021               	movlb	1	; select bank1
  9029  05D3  00A0               	movwf	_command^(0+128)
  9030                           
  9031                           ;command.c: 14: command[1] = 0b01111111;
  9032  05D4  307F               	movlw	127
  9033  05D5  0020               	movlb	0	; select bank0
  9034  05D6  00A0               	movwf	??_initComand
  9035  05D7  0820               	movf	??_initComand,w
  9036  05D8  0021               	movlb	1	; select bank1
  9037  05D9  00A1               	movwf	(_command^(0+128)+1)
  9038                           
  9039                           ;command.c: 15: command[2] = 0b10011111;
  9040  05DA  309F               	movlw	159
  9041  05DB  0020               	movlb	0	; select bank0
  9042  05DC  00A0               	movwf	??_initComand
  9043  05DD  0820               	movf	??_initComand,w
  9044  05DE  0021               	movlb	1	; select bank1
  9045  05DF  00A2               	movwf	(_command^(0+128)+2)
  9046                           
  9047                           ;command.c: 16: command[3] = 0b10101111;
  9048  05E0  30AF               	movlw	175
  9049  05E1  0020               	movlb	0	; select bank0
  9050  05E2  00A0               	movwf	??_initComand
  9051  05E3  0820               	movf	??_initComand,w
  9052  05E4  0021               	movlb	1	; select bank1
  9053  05E5  00A3               	movwf	(_command^(0+128)+3)
  9054                           
  9055                           ;command.c: 17: command[4] = 0b10111111;
  9056  05E6  30BF               	movlw	191
  9057  05E7  0020               	movlb	0	; select bank0
  9058  05E8  00A0               	movwf	??_initComand
  9059  05E9  0820               	movf	??_initComand,w
  9060  05EA  0021               	movlb	1	; select bank1
  9061  05EB  00A4               	movwf	(_command^(0+128)+4)
  9062                           
  9063                           ;command.c: 18: command[5] = 0b11001111;
  9064  05EC  30CF               	movlw	207
  9065  05ED  0020               	movlb	0	; select bank0
  9066  05EE  00A0               	movwf	??_initComand
  9067  05EF  0820               	movf	??_initComand,w
  9068  05F0  0021               	movlb	1	; select bank1
  9069  05F1  00A5               	movwf	(_command^(0+128)+5)
  9070                           
  9071                           ;command.c: 19: command[6] = 0b11010111;
  9072  05F2  30D7               	movlw	215
  9073  05F3  0020               	movlb	0	; select bank0
  9074  05F4  00A0               	movwf	??_initComand
  9075  05F5  0820               	movf	??_initComand,w
  9076  05F6  0021               	movlb	1	; select bank1
  9077  05F7  00A6               	movwf	(_command^(0+128)+6)
  9078                           
  9079                           ;command.c: 20: command[7] = 0b11011111;
  9080  05F8  30DF               	movlw	223
  9081  05F9  0020               	movlb	0	; select bank0
  9082  05FA  00A0               	movwf	??_initComand
  9083  05FB  0820               	movf	??_initComand,w
  9084  05FC  0021               	movlb	1	; select bank1
  9085  05FD  00A7               	movwf	(_command^(0+128)+7)
  9086                           
  9087                           ;command.c: 21: command[8] = 0b11100111;
  9088  05FE  30E7               	movlw	231
  9089  05FF  0020               	movlb	0	; select bank0
  9090  0600  00A0               	movwf	??_initComand
  9091  0601  0820               	movf	??_initComand,w
  9092  0602  0021               	movlb	1	; select bank1
  9093  0603  00A8               	movwf	(_command^(0+128)+8)
  9094                           
  9095                           ;command.c: 22: command[9] = 0b11101011;
  9096  0604  30EB               	movlw	235
  9097  0605  0020               	movlb	0	; select bank0
  9098  0606  00A0               	movwf	??_initComand
  9099  0607  0820               	movf	??_initComand,w
  9100  0608  0021               	movlb	1	; select bank1
  9101  0609  00A9               	movwf	(_command^(0+128)+9)
  9102                           
  9103                           ;command.c: 23: command[10] = 0b11101111;
  9104  060A  30EF               	movlw	239
  9105  060B  0020               	movlb	0	; select bank0
  9106  060C  00A0               	movwf	??_initComand
  9107  060D  0820               	movf	??_initComand,w
  9108  060E  0021               	movlb	1	; select bank1
  9109  060F  00AA               	movwf	(_command^(0+128)+10)
  9110                           
  9111                           ;command.c: 24: command[11] = 0b11110001;
  9112  0610  30F1               	movlw	241
  9113  0611  0020               	movlb	0	; select bank0
  9114  0612  00A0               	movwf	??_initComand
  9115  0613  0820               	movf	??_initComand,w
  9116  0614  0021               	movlb	1	; select bank1
  9117  0615  00AB               	movwf	(_command^(0+128)+11)
  9118                           
  9119                           ;command.c: 25: command[12] = 0b11110011;
  9120  0616  30F3               	movlw	243
  9121  0617  0020               	movlb	0	; select bank0
  9122  0618  00A0               	movwf	??_initComand
  9123  0619  0820               	movf	??_initComand,w
  9124  061A  0021               	movlb	1	; select bank1
  9125  061B  00AC               	movwf	(_command^(0+128)+12)
  9126                           
  9127                           ;command.c: 26: command[13] = 0b11110101;
  9128  061C  30F5               	movlw	245
  9129  061D  0020               	movlb	0	; select bank0
  9130  061E  00A0               	movwf	??_initComand
  9131  061F  0820               	movf	??_initComand,w
  9132  0620  0021               	movlb	1	; select bank1
  9133  0621  00AD               	movwf	(_command^(0+128)+13)
  9134                           
  9135                           ;command.c: 27: command[14] = 0b11110111;
  9136  0622  30F7               	movlw	247
  9137  0623  0020               	movlb	0	; select bank0
  9138  0624  00A0               	movwf	??_initComand
  9139  0625  0820               	movf	??_initComand,w
  9140  0626  0021               	movlb	1	; select bank1
  9141  0627  00AE               	movwf	(_command^(0+128)+14)
  9142                           
  9143                           ;command.c: 28: command[15] = 0b11111000;
  9144  0628  30F8               	movlw	248
  9145  0629  0020               	movlb	0	; select bank0
  9146  062A  00A0               	movwf	??_initComand
  9147  062B  0820               	movf	??_initComand,w
  9148  062C  0021               	movlb	1	; select bank1
  9149  062D  00AF               	movwf	(_command^(0+128)+15)
  9150                           
  9151                           ;command.c: 29: command[16] = 0b11111001;
  9152  062E  30F9               	movlw	249
  9153  062F  0020               	movlb	0	; select bank0
  9154  0630  00A0               	movwf	??_initComand
  9155  0631  0820               	movf	??_initComand,w
  9156  0632  0021               	movlb	1	; select bank1
  9157  0633  00B0               	movwf	(_command^(0+128)+16)
  9158                           
  9159                           ;command.c: 30: command[17] = 0b11111010;
  9160  0634  30FA               	movlw	250
  9161  0635  0020               	movlb	0	; select bank0
  9162  0636  00A0               	movwf	??_initComand
  9163  0637  0820               	movf	??_initComand,w
  9164  0638  0021               	movlb	1	; select bank1
  9165  0639  00B1               	movwf	(_command^(0+128)+17)
  9166  063A  0008               	return
  9167  063B                     __end_of_initComand:	
  9168                           
  9169                           	psect	text29
  9170  0EB1                     __ptext29:	
  9171 ;; *************** function _initCargo *****************
  9172 ;; Defined at:
  9173 ;;		line 14 in file "struct.c"
  9174 ;; Parameters:    Size  Location     Type
  9175 ;;		None
  9176 ;; Auto vars:     Size  Location     Type
  9177 ;;		None
  9178 ;; Return value:  Size  Location     Type
  9179 ;;                  1    wreg      void 
  9180 ;; Registers used:
  9181 ;;		wreg, status,2
  9182 ;; Tracked objects:
  9183 ;;		On entry : 0/0
  9184 ;;		On exit  : 0/0
  9185 ;;		Unchanged: 0/0
  9186 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9187 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9188 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9190 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9191 ;;Total ram usage:        0 bytes
  9192 ;; Hardware stack levels used:    1
  9193 ;; Hardware stack levels required when called:    3
  9194 ;; This function calls:
  9195 ;;		Nothing
  9196 ;; This function is called by:
  9197 ;;		_main
  9198 ;; This function uses a non-reentrant model
  9199 ;;
  9200                           
  9201                           
  9202                           ;psect for function _initCargo
  9203  0EB1                     _initCargo:	
  9204                           
  9205                           ;struct.c: 15: isMycargo = 1;
  9206                           
  9207                           ;incstack = 0
  9208                           ; Regs used in _initCargo: [wreg+status,2]
  9209  0EB1  14F0               	bsf	_isMycargo/(0+8),_isMycargo& (0+7)
  9210                           
  9211                           ;struct.c: 16: cargoData.WorkingCount = 0;
  9212  0EB2  3000               	movlw	0
  9213  0EB3  0020               	movlb	0	; select bank0
  9214  0EB4  00E8               	movwf	_cargoData+15
  9215  0EB5  3000               	movlw	0
  9216  0EB6  00E7               	movwf	_cargoData+14
  9217  0EB7  3000               	movlw	0
  9218  0EB8  00E6               	movwf	_cargoData+13
  9219  0EB9  3000               	movlw	0
  9220  0EBA  00E5               	movwf	_cargoData+12
  9221                           
  9222                           ;struct.c: 17: cargoData.address = 0;
  9223  0EBB  01DD               	clrf	_cargoData+4
  9224                           
  9225                           ;struct.c: 18: cargoData.cargoLength = 0xFFFF;
  9226  0EBC  30FF               	movlw	255
  9227  0EBD  00D9               	movwf	_cargoData
  9228  0EBE  30FF               	movlw	255
  9229  0EBF  00DA               	movwf	_cargoData+1
  9230                           
  9231                           ;struct.c: 19: cargoData.clutchMode = 0;
  9232  0EC0  01E4               	clrf	_cargoData+11
  9233                           
  9234                           ;struct.c: 20: cargoData.command = 0;
  9235  0EC1  01DB               	clrf	_cargoData+2
  9236                           
  9237                           ;struct.c: 21: cargoData.index = 0;
  9238  0EC2  01DC               	clrf	_cargoData+3
  9239                           
  9240                           ;struct.c: 22: cargoData.linkAngleTo = 0;
  9241  0EC3  01DE               	clrf	_cargoData+5
  9242  0EC4  01DF               	clrf	_cargoData+6
  9243                           
  9244                           ;struct.c: 23: cargoData.passedTime = 0;
  9245  0EC5  01E2               	clrf	_cargoData+9
  9246  0EC6  01E3               	clrf	_cargoData+10
  9247  0EC7  0008               	return
  9248  0EC8                     __end_of_initCargo:	
  9249                           
  9250                           	psect	text30
  9251  0F4F                     __ptext30:	
  9252 ;; *************** function _init *****************
  9253 ;; Defined at:
  9254 ;;		line 108 in file "D:/programdata/16F18346_Link_IC.X/main.c"
  9255 ;; Parameters:    Size  Location     Type
  9256 ;;		None
  9257 ;; Auto vars:     Size  Location     Type
  9258 ;;		None
  9259 ;; Return value:  Size  Location     Type
  9260 ;;                  1    wreg      void 
  9261 ;; Registers used:
  9262 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9263 ;; Tracked objects:
  9264 ;;		On entry : 0/0
  9265 ;;		On exit  : 0/0
  9266 ;;		Unchanged: 0/0
  9267 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9268 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9269 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9270 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9271 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9272 ;;Total ram usage:        0 bytes
  9273 ;; Hardware stack levels used:    1
  9274 ;; Hardware stack levels required when called:    4
  9275 ;; This function calls:
  9276 ;;		_clear
  9277 ;;		_initbuffer
  9278 ;; This function is called by:
  9279 ;;		_main
  9280 ;; This function uses a non-reentrant model
  9281 ;;
  9282                           
  9283                           
  9284                           ;psect for function _init
  9285  0F4F                     _init:	
  9286                           
  9287                           ;main.c: 109: count1 = 0;
  9288                           
  9289                           ;incstack = 0
  9290                           ; Regs used in _init: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9291  0F4F  0021               	movlb	1	; select bank1
  9292  0F50  01D9               	clrf	_count1^(0+128)
  9293  0F51  01DA               	clrf	(_count1+1)^(0+128)
  9294                           
  9295                           ;main.c: 110: count2 = 0;
  9296  0F52  0020               	movlb	0	; select bank0
  9297  0F53  01EB               	clrf	_count2
  9298  0F54  01EC               	clrf	_count2+1
  9299                           
  9300                           ;main.c: 111: initbuffer();
  9301  0F55  318F  2778  318F   	fcall	_initbuffer
  9302                           
  9303                           ;main.c: 113: OSCFRQbits.HFFRQ = 0b0111;
  9304  0F58  0032               	movlb	18	; select bank18
  9305  0F59  081F               	movf	31,w	;volatile
  9306  0F5A  39F0               	andlw	-16
  9307  0F5B  3807               	iorlw	7
  9308  0F5C  009F               	movwf	31	;volatile
  9309                           
  9310                           ;main.c: 114: OSCTUNEbits.HFTUN = 0b000000;
  9311  0F5D  30C0               	movlw	-64
  9312  0F5E  059E               	andwf	30,f	;volatile
  9313                           
  9314                           ;main.c: 115: clear();
  9315  0F5F  318E  2661         	fcall	_clear
  9316                           
  9317                           ;main.c: 116: WPUC = 0b11111111;
  9318  0F61  30FF               	movlw	255
  9319  0F62  0024               	movlb	4	; select bank4
  9320  0F63  008E               	movwf	14	;volatile
  9321                           
  9322                           ;main.c: 117: WPUB = 0b11111111;
  9323  0F64  30FF               	movlw	255
  9324  0F65  008D               	movwf	13	;volatile
  9325                           
  9326                           ;main.c: 118: WPUA = 0b11111111;
  9327  0F66  30FF               	movlw	255
  9328  0F67  008C               	movwf	12	;volatile
  9329                           
  9330                           ;main.c: 119: TRISBbits.TRISB6 = 1;
  9331  0F68  0021               	movlb	1	; select bank1
  9332  0F69  170D               	bsf	13,6	;volatile
  9333                           
  9334                           ;main.c: 120: TRISBbits.TRISB4 = 1;
  9335  0F6A  160D               	bsf	13,4	;volatile
  9336                           
  9337                           ;main.c: 121: TRISCbits.TRISC6 = 1;
  9338  0F6B  170E               	bsf	14,6	;volatile
  9339                           
  9340                           ;main.c: 122: INLVLBbits.INLVLB4 = 0;
  9341  0F6C  0027               	movlb	7	; select bank7
  9342  0F6D  120D               	bcf	13,4	;volatile
  9343                           
  9344                           ;main.c: 123: INLVLBbits.INLVLB6 = 0;
  9345  0F6E  130D               	bcf	13,6	;volatile
  9346                           
  9347                           ;main.c: 124: INLVLCbits.INLVLC5 = 0;
  9348  0F6F  128E               	bcf	14,5	;volatile
  9349                           
  9350                           ;main.c: 126: TRISBbits.TRISB5 = 1;
  9351  0F70  0021               	movlb	1	; select bank1
  9352  0F71  168D               	bsf	13,5	;volatile
  9353                           
  9354                           ;main.c: 127: INLVLBbits.INLVLB5 = 0;
  9355  0F72  0027               	movlb	7	; select bank7
  9356  0F73  128D               	bcf	13,5	;volatile
  9357                           
  9358                           ;main.c: 128: INLVLBbits.INLVLB7 = 0;
  9359  0F74  138D               	bcf	13,7	;volatile
  9360                           
  9361                           ;main.c: 129: INLVLAbits.INLVLA1 = 0;
  9362  0F75  108C               	bcf	12,1	;volatile
  9363                           
  9364                           ;main.c: 130: INLVLAbits.INLVLA2 = 0;
  9365  0F76  110C               	bcf	12,2	;volatile
  9366  0F77  0008               	return
  9367  0F78                     __end_of_init:	
  9368                           ;main.c: 132: return;
  9369                           
  9370                           
  9371                           	psect	text31
  9372  0F78                     __ptext31:	
  9373 ;; *************** function _initbuffer *****************
  9374 ;; Defined at:
  9375 ;;		line 102 in file "D:/programdata/16F18346_Link_IC.X/main.c"
  9376 ;; Parameters:    Size  Location     Type
  9377 ;;		None
  9378 ;; Auto vars:     Size  Location     Type
  9379 ;;  i               2    2[BANK0 ] int 
  9380 ;; Return value:  Size  Location     Type
  9381 ;;                  1    wreg      void 
  9382 ;; Registers used:
  9383 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9384 ;; Tracked objects:
  9385 ;;		On entry : 0/0
  9386 ;;		On exit  : 0/0
  9387 ;;		Unchanged: 0/0
  9388 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9389 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9390 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9391 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9392 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9393 ;;Total ram usage:        4 bytes
  9394 ;; Hardware stack levels used:    1
  9395 ;; Hardware stack levels required when called:    3
  9396 ;; This function calls:
  9397 ;;		Nothing
  9398 ;; This function is called by:
  9399 ;;		_init
  9400 ;; This function uses a non-reentrant model
  9401 ;;
  9402                           
  9403                           
  9404                           ;psect for function _initbuffer
  9405  0F78                     _initbuffer:	
  9406                           
  9407                           ;main.c: 103: for(int i = 0; i < 256; i++){
  9408                           
  9409                           ;incstack = 0
  9410                           ; Regs used in _initbuffer: [wreg+fsr1l+fsr1h+status,2+status,0]
  9411  0F78  0020               	movlb	0	; select bank0
  9412  0F79  01A2               	clrf	initbuffer@i
  9413  0F7A  01A3               	clrf	initbuffer@i+1
  9414  0F7B                     L29:	
  9415  0F7B  0823               	movf	initbuffer@i+1,w
  9416  0F7C  3A80               	xorlw	128
  9417  0F7D  00A0               	movwf	??_initbuffer
  9418  0F7E  3081               	movlw	129
  9419  0F7F  0220               	subwf	??_initbuffer,w
  9420  0F80  1D03               	skipz
  9421  0F81  2F84               	goto	u2125
  9422  0F82  3000               	movlw	0
  9423  0F83  0222               	subwf	initbuffer@i,w
  9424  0F84                     u2125:	
  9425  0F84  1803               	btfsc	3,0
  9426  0F85  0008               	return
  9427                           
  9428                           ;main.c: 104: spi1_buffer_data[i] = 0;
  9429  0F86  30F0               	movlw	240
  9430  0F87  0020               	movlb	0	; select bank0
  9431  0F88  00A0               	movwf	??_initbuffer
  9432  0F89  3026               	movlw	38
  9433  0F8A  00A1               	movwf	??_initbuffer+1
  9434  0F8B  0822               	movf	initbuffer@i,w
  9435  0F8C  0720               	addwf	??_initbuffer,w
  9436  0F8D  0086               	movwf	6
  9437  0F8E  0823               	movf	initbuffer@i+1,w
  9438  0F8F  3D21               	addwfc	??_initbuffer+1,w
  9439  0F90  0087               	movwf	7
  9440  0F91  0181               	clrf	1
  9441                           
  9442                           ;main.c: 105: spi2_buffer_data[i] = 0;
  9443  0F92  30F0               	movlw	240
  9444  0F93  00A0               	movwf	??_initbuffer
  9445  0F94  3025               	movlw	37
  9446  0F95  00A1               	movwf	??_initbuffer+1
  9447  0F96  0822               	movf	initbuffer@i,w
  9448  0F97  0720               	addwf	??_initbuffer,w
  9449  0F98  0086               	movwf	6
  9450  0F99  0823               	movf	initbuffer@i+1,w
  9451  0F9A  3D21               	addwfc	??_initbuffer+1,w
  9452  0F9B  0087               	movwf	7
  9453  0F9C  0181               	clrf	1
  9454  0F9D  3001               	movlw	1
  9455  0F9E  07A2               	addwf	initbuffer@i,f
  9456  0F9F  3000               	movlw	0
  9457  0FA0  3DA3               	addwfc	initbuffer@i+1,f
  9458  0FA1  2F7B               	goto	L29
  9459  0FA2                     __end_of_initbuffer:	
  9460                           
  9461                           	psect	text32
  9462  0E61                     __ptext32:	
  9463 ;; *************** function _clear *****************
  9464 ;; Defined at:
  9465 ;;		line 9 in file "D:/programdata/16F18346_Link_IC.X/util.c"
  9466 ;; Parameters:    Size  Location     Type
  9467 ;;		None
  9468 ;; Auto vars:     Size  Location     Type
  9469 ;;		None
  9470 ;; Return value:  Size  Location     Type
  9471 ;;                  1    wreg      void 
  9472 ;; Registers used:
  9473 ;;		status,2
  9474 ;; Tracked objects:
  9475 ;;		On entry : 0/0
  9476 ;;		On exit  : 0/0
  9477 ;;		Unchanged: 0/0
  9478 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9479 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9480 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9481 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9482 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9483 ;;Total ram usage:        0 bytes
  9484 ;; Hardware stack levels used:    1
  9485 ;; Hardware stack levels required when called:    3
  9486 ;; This function calls:
  9487 ;;		Nothing
  9488 ;; This function is called by:
  9489 ;;		_init
  9490 ;; This function uses a non-reentrant model
  9491 ;;
  9492                           
  9493                           
  9494                           ;psect for function _clear
  9495  0E61                     _clear:	
  9496                           
  9497                           ;util.c: 10: ANSELA = 0x00;
  9498                           
  9499                           ;incstack = 0
  9500                           ; Regs used in _clear: [status,2]
  9501  0E61  0023               	movlb	3	; select bank3
  9502  0E62  018C               	clrf	12	;volatile
  9503                           
  9504                           ;util.c: 11: ANSELB = 0x00;
  9505  0E63  018D               	clrf	13	;volatile
  9506                           
  9507                           ;util.c: 12: ANSELC = 0x00;
  9508  0E64  018E               	clrf	14	;volatile
  9509                           
  9510                           ;util.c: 13: PORTA = 0x00;
  9511  0E65  0020               	movlb	0	; select bank0
  9512  0E66  018C               	clrf	12	;volatile
  9513                           
  9514                           ;util.c: 14: PORTB = 0x00;
  9515  0E67  018D               	clrf	13	;volatile
  9516                           
  9517                           ;util.c: 15: PORTC = 0x00;
  9518  0E68  018E               	clrf	14	;volatile
  9519                           
  9520                           ;util.c: 16: TRISA = 0x00;
  9521  0E69  0021               	movlb	1	; select bank1
  9522  0E6A  018C               	clrf	12	;volatile
  9523                           
  9524                           ;util.c: 17: TRISB = 0x00;
  9525  0E6B  018D               	clrf	13	;volatile
  9526                           
  9527                           ;util.c: 18: TRISC = 0x00;
  9528  0E6C  018E               	clrf	14	;volatile
  9529  0E6D  0008               	return
  9530  0E6E                     __end_of_clear:	
  9531                           
  9532                           	psect	intentry
  9533  0004                     __pintentry:	
  9534 ;; *************** function _InterMSSP *****************
  9535 ;; Defined at:
  9536 ;;		line 68 in file "D:/programdata/16F18346_Link_IC.X/main.c"
  9537 ;; Parameters:    Size  Location     Type
  9538 ;;		None
  9539 ;; Auto vars:     Size  Location     Type
  9540 ;;  buf             1    8[COMMON] unsigned char 
  9541 ;; Return value:  Size  Location     Type
  9542 ;;                  1    wreg      void 
  9543 ;; Registers used:
  9544 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9545 ;; Tracked objects:
  9546 ;;		On entry : 0/0
  9547 ;;		On exit  : 0/0
  9548 ;;		Unchanged: 0/0
  9549 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9550 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9551 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9552 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9553 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9554 ;;Total ram usage:        7 bytes
  9555 ;; Hardware stack levels used:    1
  9556 ;; Hardware stack levels required when called:    2
  9557 ;; This function calls:
  9558 ;;		_addAngle
  9559 ;;		_setSPI1sendData
  9560 ;; This function is called by:
  9561 ;;		Interrupt level 1
  9562 ;; This function uses a non-reentrant model
  9563 ;;
  9564                           
  9565  0004                     _InterMSSP:	
  9566                           
  9567                           ;incstack = 0
  9568  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  9569                           
  9570                           ; Regs used in _InterMSSP: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9571  0005  3180               	pagesel	$
  9572  0006  0020               	movlb	0	; select bank0
  9573  0007  087F               	movf	127,w
  9574  0008  00F9               	movwf	??_InterMSSP+5
  9575                           
  9576                           ;main.c: 70: if (PIR1bits.SSP1IF) {
  9577  0009  1D91               	btfss	17,3	;volatile
  9578  000A  2837               	goto	i1l2734
  9579                           
  9580                           ;main.c: 72: unsigned char buf = SSP1BUF;
  9581  000B  0024               	movlb	4	; select bank4
  9582  000C  0811               	movf	17,w	;volatile
  9583  000D  00F4               	movwf	??_InterMSSP
  9584  000E  0874               	movf	??_InterMSSP,w
  9585  000F  00FA               	movwf	InterMSSP@buf
  9586                           
  9587                           ;main.c: 73: if(buf > 0){
  9588  0010  087A               	movf	InterMSSP@buf,w
  9589  0011  1903               	btfsc	3,2
  9590  0012  2830               	goto	i1l2730
  9591                           
  9592                           ;main.c: 74: spi1_buffer_data[count1] = buf -SPI_OFFSET_BYTE;
  9593  0013  037D               	decf	_SPI_OFFSET_BYTE,w
  9594  0014  3AFF               	xorlw	255
  9595  0015  077A               	addwf	InterMSSP@buf,w
  9596  0016  00F4               	movwf	??_InterMSSP
  9597  0017  30F0               	movlw	240
  9598  0018  00F5               	movwf	??_InterMSSP+1
  9599  0019  3026               	movlw	38
  9600  001A  00F6               	movwf	??_InterMSSP+2
  9601  001B  0021               	movlb	1	; select bank1
  9602  001C  0859               	movf	_count1^(0+128),w
  9603  001D  0775               	addwf	??_InterMSSP+1,w
  9604  001E  00F7               	movwf	??_InterMSSP+3
  9605  001F  085A               	movf	(_count1+1)^(0+128),w
  9606  0020  3D76               	addwfc	??_InterMSSP+2,w
  9607  0021  00F8               	movwf	??_InterMSSP+4
  9608  0022  0877               	movf	??_InterMSSP+3,w
  9609  0023  0086               	movwf	6
  9610  0024  0878               	movf	??_InterMSSP+4,w
  9611  0025  0087               	movwf	7
  9612  0026  0874               	movf	??_InterMSSP,w
  9613  0027  0081               	movwf	1
  9614                           
  9615                           ;main.c: 75: setSPI1sendData();
  9616  0028  318E  26E8  3180   	fcall	_setSPI1sendData
  9617                           
  9618                           ;main.c: 76: count1++;
  9619  002B  3001               	movlw	1
  9620  002C  0021               	movlb	1	; select bank1
  9621  002D  07D9               	addwf	_count1^(0+128),f
  9622  002E  3000               	movlw	0
  9623  002F  3DDA               	addwfc	(_count1+1)^(0+128),f
  9624  0030                     i1l2730:	
  9625                           
  9626                           ;main.c: 77: }
  9627                           ;main.c: 78: if(count1 == 256){
  9628  0030  0021               	movlb	1	; select bank1
  9629  0031  035A               	decf	(_count1+1)^(0+128),w
  9630  0032  0459               	iorwf	_count1^(0+128),w
  9631  0033  1D03               	btfss	3,2
  9632  0034  2837               	goto	i1l2734
  9633                           
  9634                           ;main.c: 79: count1 = 0;
  9635  0035  01D9               	clrf	_count1^(0+128)
  9636  0036  01DA               	clrf	(_count1+1)^(0+128)
  9637  0037                     i1l2734:	
  9638                           
  9639                           ;main.c: 80: }
  9640                           ;main.c: 81: }
  9641                           ;main.c: 82: if (PIR2bits.SSP2IF) {
  9642  0037  0020               	movlb	0	; select bank0
  9643  0038  1D92               	btfss	18,3	;volatile
  9644  0039  283C               	goto	i1l114
  9645                           
  9646                           ;main.c: 83: isSendSPI2 = 0;
  9647  003A  10F1               	bcf	_isSendSPI2/(0+8),_isSendSPI2& (0+7)
  9648                           
  9649                           ;main.c: 90: PIR2bits.SSP2IF = 0 ;
  9650  003B  1192               	bcf	18,3	;volatile
  9651  003C                     i1l114:	
  9652                           
  9653                           ;main.c: 91: }
  9654                           ;main.c: 92: if(IOCAFbits.IOCAF3 == 1){
  9655  003C  0027               	movlb	7	; select bank7
  9656  003D  1D93               	btfss	19,3	;volatile
  9657  003E  2841               	goto	i1l2740
  9658                           
  9659                           ;main.c: 94: addAngle();
  9660  003F  318E  2649         	fcall	_addAngle
  9661  0041                     i1l2740:	
  9662                           
  9663                           ;main.c: 95: }
  9664                           ;main.c: 96: PIR1bits.SSP1IF = 0 ;
  9665  0041  0020               	movlb	0	; select bank0
  9666  0042  1191               	bcf	17,3	;volatile
  9667                           
  9668                           ;main.c: 98: IOCAFbits.IOCAF3 = 0;
  9669  0043  0027               	movlb	7	; select bank7
  9670  0044  1193               	bcf	19,3	;volatile
  9671                           
  9672                           ;main.c: 99: PIR0bits.IOCIF = 0;
  9673  0045  0020               	movlb	0	; select bank0
  9674  0046  1210               	bcf	16,4	;volatile
  9675                           
  9676                           ;main.c: 100: PIR0bits.INTF = 0;
  9677  0047  1010               	bcf	16,0	;volatile
  9678  0048  0879               	movf	??_InterMSSP+5,w
  9679  0049  00FF               	movwf	127
  9680  004A  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  9681  004B  0009               	retfie
  9682  004C                     __end_of_InterMSSP:	
  9683                           
  9684                           	psect	text34
  9685  0EE8                     __ptext34:	
  9686 ;; *************** function _setSPI1sendData *****************
  9687 ;; Defined at:
  9688 ;;		line 91 in file "D:/programdata/16F18346_Link_IC.X/spiControl.c"
  9689 ;; Parameters:    Size  Location     Type
  9690 ;;		None
  9691 ;; Auto vars:     Size  Location     Type
  9692 ;;		None
  9693 ;; Return value:  Size  Location     Type
  9694 ;;                  1    wreg      void 
  9695 ;; Registers used:
  9696 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9697 ;; Tracked objects:
  9698 ;;		On entry : 0/0
  9699 ;;		On exit  : 0/0
  9700 ;;		Unchanged: 0/0
  9701 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9702 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9703 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9704 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9705 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9706 ;;Total ram usage:        2 bytes
  9707 ;; Hardware stack levels used:    1
  9708 ;; Hardware stack levels required when called:    1
  9709 ;; This function calls:
  9710 ;;		_isSPI2read
  9711 ;; This function is called by:
  9712 ;;		_InterMSSP
  9713 ;; This function uses a non-reentrant model
  9714 ;;
  9715                           
  9716                           
  9717                           ;psect for function _setSPI1sendData
  9718  0EE8                     _setSPI1sendData:	
  9719                           
  9720                           ;spiControl.c: 92: if(!isSPI2read() == 1){
  9721                           
  9722                           ;incstack = 0
  9723                           ; Regs used in _setSPI1sendData: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9724  0EE8  318E  267B  318E   	fcall	_isSPI2read
  9725  0EEB  1803               	btfsc	3,0
  9726  0EEC  2F07               	goto	i1l2530
  9727                           
  9728                           ;spiControl.c: 93: SSP1BUF = spi2_buffer_data[read_count2];
  9729  0EED  30F0               	movlw	240
  9730  0EEE  00F2               	movwf	??_setSPI1sendData
  9731  0EEF  3025               	movlw	37
  9732  0EF0  00F3               	movwf	??_setSPI1sendData+1
  9733  0EF1  0021               	movlb	1	; select bank1
  9734  0EF2  0851               	movf	_read_count2^(0+128),w
  9735  0EF3  0772               	addwf	??_setSPI1sendData,w
  9736  0EF4  0086               	movwf	6
  9737  0EF5  0852               	movf	(_read_count2+1)^(0+128),w
  9738  0EF6  3D73               	addwfc	??_setSPI1sendData+1,w
  9739  0EF7  0087               	movwf	7
  9740  0EF8  0801               	movf	1,w
  9741  0EF9  0024               	movlb	4	; select bank4
  9742  0EFA  0091               	movwf	17	;volatile
  9743                           
  9744                           ;spiControl.c: 94: read_count2++;
  9745  0EFB  3001               	movlw	1
  9746  0EFC  0021               	movlb	1	; select bank1
  9747  0EFD  07D1               	addwf	_read_count2^(0+128),f
  9748  0EFE  3000               	movlw	0
  9749  0EFF  3DD2               	addwfc	(_read_count2+1)^(0+128),f
  9750                           
  9751                           ;spiControl.c: 95: if(read_count2 == 256){
  9752  0F00  0352               	decf	(_read_count2+1)^(0+128),w
  9753  0F01  0451               	iorwf	_read_count2^(0+128),w
  9754  0F02  1D03               	btfss	3,2
  9755  0F03  0008               	return
  9756                           
  9757                           ;spiControl.c: 96: read_count2 = 0;
  9758  0F04  01D1               	clrf	_read_count2^(0+128)
  9759  0F05  01D2               	clrf	(_read_count2+1)^(0+128)
  9760                           
  9761                           ;spiControl.c: 97: }
  9762                           ;spiControl.c: 98: }else{
  9763  0F06  0008               	return
  9764  0F07                     i1l2530:	
  9765                           
  9766                           ;spiControl.c: 99: SSP1BUF = 0x00;
  9767  0F07  0024               	movlb	4	; select bank4
  9768  0F08  0191               	clrf	17	;volatile
  9769  0F09  0008               	return
  9770  0F0A                     __end_of_setSPI1sendData:	
  9771                           
  9772                           	psect	text35
  9773  0E7B                     __ptext35:	
  9774 ;; *************** function _isSPI2read *****************
  9775 ;; Defined at:
  9776 ;;		line 75 in file "D:/programdata/16F18346_Link_IC.X/spiControl.c"
  9777 ;; Parameters:    Size  Location     Type
  9778 ;;		None
  9779 ;; Auto vars:     Size  Location     Type
  9780 ;;		None
  9781 ;; Return value:  Size  Location     Type
  9782 ;;		None               void
  9783 ;; Registers used:
  9784 ;;		wreg, status,2, status,0
  9785 ;; Tracked objects:
  9786 ;;		On entry : 0/0
  9787 ;;		On exit  : 0/0
  9788 ;;		Unchanged: 0/0
  9789 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9790 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9791 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9793 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9794 ;;Total ram usage:        0 bytes
  9795 ;; Hardware stack levels used:    1
  9796 ;; This function calls:
  9797 ;;		Nothing
  9798 ;; This function is called by:
  9799 ;;		_setSPI1sendData
  9800 ;; This function uses a non-reentrant model
  9801 ;;
  9802                           
  9803                           
  9804                           ;psect for function _isSPI2read
  9805  0E7B                     _isSPI2read:	
  9806                           
  9807                           ;spiControl.c: 76: if(read_count2 == count2){
  9808                           
  9809                           ;incstack = 0
  9810                           ; Regs used in _isSPI2read: [wreg+status,2+status,0]
  9811  0E7B  0020               	movlb	0	; select bank0
  9812  0E7C  086C               	movf	_count2+1,w
  9813  0E7D  0021               	movlb	1	; select bank1
  9814  0E7E  0652               	xorwf	(_read_count2+1)^(0+128),w
  9815  0E7F  1D03               	skipz
  9816  0E80  2E85               	goto	u124_25
  9817  0E81  0020               	movlb	0	; select bank0
  9818  0E82  086B               	movf	_count2,w
  9819  0E83  0021               	movlb	1	; select bank1
  9820  0E84  0651               	xorwf	_read_count2^(0+128),w
  9821  0E85                     u124_25:	
  9822  0E85  1D03               	skipz
  9823  0E86  2E89               	goto	i1l2320
  9824                           
  9825                           ;spiControl.c: 77: return 1;
  9826  0E87  1403               	setc
  9827                           
  9828                           ;spiControl.c: 78: }else{
  9829  0E88  0008               	return
  9830  0E89                     i1l2320:	
  9831                           
  9832                           ;spiControl.c: 79: return 0;
  9833  0E89  1003               	clrc
  9834  0E8A  0008               	return
  9835  0E8B                     __end_of_isSPI2read:	
  9836                           
  9837                           	psect	text36
  9838  0E49                     __ptext36:	
  9839 ;; *************** function _addAngle *****************
  9840 ;; Defined at:
  9841 ;;		line 29 in file "D:/programdata/16F18346_Link_IC.X/IO_control.c"
  9842 ;; Parameters:    Size  Location     Type
  9843 ;;		None
  9844 ;; Auto vars:     Size  Location     Type
  9845 ;;		None
  9846 ;; Return value:  Size  Location     Type
  9847 ;;                  1    wreg      void 
  9848 ;; Registers used:
  9849 ;;		wreg, status,2, status,0, pclath, cstack
  9850 ;; Tracked objects:
  9851 ;;		On entry : 0/0
  9852 ;;		On exit  : 0/0
  9853 ;;		Unchanged: 0/0
  9854 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9855 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9856 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9857 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9858 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9859 ;;Total ram usage:        0 bytes
  9860 ;; Hardware stack levels used:    1
  9861 ;; Hardware stack levels required when called:    1
  9862 ;; This function calls:
  9863 ;;		_setCargoAngle
  9864 ;; This function is called by:
  9865 ;;		_InterMSSP
  9866 ;; This function uses a non-reentrant model
  9867 ;;
  9868                           
  9869                           
  9870                           ;psect for function _addAngle
  9871  0E49                     _addAngle:	
  9872                           
  9873                           ;IO_control.c: 30: linkAngle += direction;
  9874                           
  9875                           ;incstack = 0
  9876                           ; Regs used in _addAngle: [wreg+status,2+status,0+pclath+cstack]
  9877  0E49  0021               	movlb	1	; select bank1
  9878  0E4A  0860               	movf	_direction^(0+128),w
  9879  0E4B  07CB               	addwf	_linkAngle^(0+128),f
  9880  0E4C  0861               	movf	(_direction+1)^(0+128),w
  9881  0E4D  3DCC               	addwfc	(_linkAngle+1)^(0+128),f
  9882                           
  9883                           ;IO_control.c: 31: setCargoAngle(linkAngle);
  9884  0E4E  084C               	movf	(_linkAngle+1)^(0+128),w
  9885  0E4F  00F3               	movwf	setCargoAngle@m_linkAngleTo+1
  9886  0E50  084B               	movf	_linkAngle^(0+128),w
  9887  0E51  00F2               	movwf	setCargoAngle@m_linkAngleTo
  9888  0E52  318E  2615         	fcall	_setCargoAngle
  9889  0E54  0008               	return
  9890  0E55                     __end_of_addAngle:	
  9891                           
  9892                           	psect	text37
  9893  0E15                     __ptext37:	
  9894 ;; *************** function _setCargoAngle *****************
  9895 ;; Defined at:
  9896 ;;		line 41 in file "struct.c"
  9897 ;; Parameters:    Size  Location     Type
  9898 ;;  m_linkAngleT    2    0[COMMON] int 
  9899 ;; Auto vars:     Size  Location     Type
  9900 ;;		None
  9901 ;; Return value:  Size  Location     Type
  9902 ;;                  1    wreg      void 
  9903 ;; Registers used:
  9904 ;;		wreg
  9905 ;; Tracked objects:
  9906 ;;		On entry : 0/0
  9907 ;;		On exit  : 0/0
  9908 ;;		Unchanged: 0/0
  9909 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9910 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9911 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9912 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9913 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9914 ;;Total ram usage:        2 bytes
  9915 ;; Hardware stack levels used:    1
  9916 ;; This function calls:
  9917 ;;		Nothing
  9918 ;; This function is called by:
  9919 ;;		_addAngle
  9920 ;; This function uses a non-reentrant model
  9921 ;;
  9922                           
  9923                           
  9924                           ;psect for function _setCargoAngle
  9925  0E15                     _setCargoAngle:	
  9926                           
  9927                           ;struct.c: 42: cargoData.linkAngleTo = m_linkAngleTo;
  9928                           
  9929                           ;incstack = 0
  9930                           ; Regs used in _setCargoAngle: [wreg]
  9931  0E15  0873               	movf	setCargoAngle@m_linkAngleTo+1,w
  9932  0E16  0020               	movlb	0	; select bank0
  9933  0E17  00DF               	movwf	_cargoData+6
  9934  0E18  0872               	movf	setCargoAngle@m_linkAngleTo,w
  9935  0E19  00DE               	movwf	_cargoData+5
  9936  0E1A  0008               	return
  9937  0E1B                     __end_of_setCargoAngle:	
  9938  007E                     btemp	set	126	;btemp
  9939  007E                     int$flags	set	126
  9940  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    4
    Data        5
    BSS         123
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      14
    BANK0            80     57      79
    BANK1            80      3      71
    BANK2            80      0      36
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           64      0       0
    BANK16            0      0       0
    BANK17            0      0       0
    BANK18            0      0       0
    BANK19            0      0       0
    BANK20            0      0       0
    BANK21            0      0       0
    BANK22            0      0       0
    BANK23            0      0       0
    BANK24            0      0       0
    BANK25            0      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _InterMSSP in COMMON

    _InterMSSP->_setSPI1sendData
    _addAngle->_setCargoAngle

Critical Paths under _main in BANK0

    _main->_setComunicateMode
    _spi_init->_spi1_init
    _spi_init->_spi2_init
    _setComunicateMode->_Calibrate_download
    _setComunicateMode->_readCargo
    _readCargo->_TransLong256To255
    _EEPROM_download->_getCargoData
    _Calibrate_download->_TransLong256To255
    _isEndpoint->_setSPI1sendDataManual
    _TransLong256To255->___aldiv
    _InitCalibrate->_getCargoData
    _initTrain->_isTrainSt
    _init->_initbuffer

Critical Paths under _InterMSSP in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_setComunicateMode

Critical Paths under _InterMSSP in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterMSSP in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterMSSP in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _InterMSSP in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _InterMSSP in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _InterMSSP in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _InterMSSP in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _InterMSSP in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _InterMSSP in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _InterMSSP in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _InterMSSP in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _InterMSSP in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _InterMSSP in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _InterMSSP in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _InterMSSP in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _InterMSSP in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _InterMSSP in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _InterMSSP in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _InterMSSP in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _InterMSSP in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _InterMSSP in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _InterMSSP in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _InterMSSP in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _InterMSSP in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _InterMSSP in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    6680
                      _InitCalibrate
                               _init
                          _initCargo
                         _initComand
                     _initComu_types
                          _initTrain
                            _io_init
                         _isSPI1read
                         _read_train
                  _setComunicateMode
                    _setSPI2sendData
                           _spi_init
 ---------------------------------------------------------------------------------
 (1) _spi_init                                             0     0      0       6
                          _spi1_init
                          _spi2_init
 ---------------------------------------------------------------------------------
 (2) _spi2_init                                            2     2      0       3
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _spi1_init                                            2     2      0       3
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _setSPI2sendData                                      4     4      0       0
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _setComunicateMode                                    4     4      0    6408
                                             56 BANK0      1     1      0
                                              0 BANK1      3     3      0
                 _Calibrate_download
                    _EEPROM_download
                          _readCargo
 ---------------------------------------------------------------------------------
 (2) _readCargo                                           13    13      0    2822
                                             43 BANK0     13    13      0
                  _TransLong256To255
                       _clutchaction
                       _getCargoData
                       _restartCargo
 ---------------------------------------------------------------------------------
 (3) _clutchaction                                         1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _EEPROM_download                                     11    11      0     430
                                             17 BANK0     11    11      0
                         _ReadEEPROM
                       _getCargoData
                       _restartCargo
 ---------------------------------------------------------------------------------
 (3) _ReadEEPROM                                           5     3      2     207
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (2) _Calibrate_download                                  13    13      0    2995
                                             43 BANK0     13    13      0
                      _InitCalibrate
                  _TransLong256To255
                         _isEndpoint
                         _resetCargo
 ---------------------------------------------------------------------------------
 (3) _resetCargo                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _isEndpoint                                           6     6      0      71
                                              1 BANK0      6     6      0
              _setSPI1sendDataManual
 ---------------------------------------------------------------------------------
 (4) _setSPI1sendDataManual                                1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _TransLong256To255                                   28    24      4    2537
                                             15 BANK0     28    24      4
                            ___aldiv
                            ___almod
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8     290
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (4) ___almod                                             11     3      8     587
                                              0 BANK0     11     3      8
 ---------------------------------------------------------------------------------
 (4) ___aldiv                                             15     7      8     599
                                              0 BANK0     15     7      8
 ---------------------------------------------------------------------------------
 (3) _InitCalibrate                                       17    17      0      40
                                             17 BANK0     17    17      0
                       _getCargoData
 ---------------------------------------------------------------------------------
 (3) _getCargoData                                        17     1     16       0
                                              0 BANK0     17     1     16
 ---------------------------------------------------------------------------------
 (1) _read_train                                           4     4      0      65
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _isSPI1read                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _io_init                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initTrain                                            3     3      0      31
                                             11 BANK0      3     3      0
                          _isTrainSt
                     _resetTrainData
 ---------------------------------------------------------------------------------
 (2) _resetTrainData                                       0     0      0       0
                       _restartCargo
 ---------------------------------------------------------------------------------
 (3) _restartCargo                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _isTrainSt                                           11    11      0      31
                                              0 BANK0     11    11      0
 ---------------------------------------------------------------------------------
 (1) _initComu_types                                       1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _initComand                                           1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _initCargo                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0     130
                              _clear
                         _initbuffer
 ---------------------------------------------------------------------------------
 (2) _initbuffer                                           4     4      0     130
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) _clear                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _InterMSSP                                            7     7      0     131
                                              2 COMMON     7     7      0
                           _addAngle
                    _setSPI1sendData
 ---------------------------------------------------------------------------------
 (6) _setSPI1sendData                                      2     2      0       0
                                              0 COMMON     2     2      0
                         _isSPI2read
 ---------------------------------------------------------------------------------
 (7) _isSPI2read                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _addAngle                                             0     0      0      86
                      _setCargoAngle
 ---------------------------------------------------------------------------------
 (7) _setCargoAngle                                        2     0      2      86
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _InitCalibrate
     _getCargoData
   _init
     _clear
     _initbuffer
   _initCargo
   _initComand
   _initComu_types
   _initTrain
     _isTrainSt
     _resetTrainData
       _restartCargo
   _io_init
   _isSPI1read
   _read_train
   _setComunicateMode
     _Calibrate_download
       _InitCalibrate
         _getCargoData
       _TransLong256To255
         ___aldiv
         ___almod
         ___lmul
       _isEndpoint
         _setSPI1sendDataManual
       _resetCargo
     _EEPROM_download
       _ReadEEPROM
       _getCargoData
       _restartCargo
     _readCargo
       _TransLong256To255
         ___aldiv
         ___almod
         ___lmul
       _clutchaction
       _getCargoData
       _restartCargo
   _setSPI2sendData
   _spi_init
     _spi1_init
     _spi2_init

 _InterMSSP (ROOT)
   _addAngle
     _setCargoAngle
   _setSPI1sendData
     _isSPI2read

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       3       1       21.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      9       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     39      4F       5       98.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      3      47       7       88.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      24       9       45.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
ABS                  0      0      C8      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
DATA                 0      0      C8      28        0.0%
BANK11              50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITBANK12           50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12              50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITBANK13           50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13              50      0       0      33        0.0%
BITBANK14           50      0       0      34        0.0%
BANK14              50      0       0      35        0.0%
BITBANK15           50      0       0      36        0.0%
BANK15              40      0       0      37        0.0%
BITBANK16           50      0       0      38        0.0%
BANK16               0      0       0      39        0.0%
BITBANK17           50      0       0      40        0.0%
BANK17               0      0       0      41        0.0%
BITBANK18           50      0       0      42        0.0%
BANK18               0      0       0      43        0.0%
BITBANK19           50      0       0      44        0.0%
BANK19               0      0       0      45        0.0%
BITBANK20           50      0       0      46        0.0%
BANK20               0      0       0      47        0.0%
BITBANK21           50      0       0      48        0.0%
BANK21               0      0       0      49        0.0%
BITBANK22           50      0       0      50        0.0%
BANK22               0      0       0      51        0.0%
BITBANK23           50      0       0      52        0.0%
BANK23               0      0       0      53        0.0%
BITBANK24           50      0       0      54        0.0%
BANK24               0      0       0      55        0.0%
BITBANK25           20      0       0      56        0.0%
BANK25               0      0       0      57        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Wed Jun 20 16:41:24 2018

                  _InitCalibrate 07D4                                pc 0002                      __CFG_CP$OFF 0000  
                             _RD 44A8                              l134 070C                              l168 0760  
                            l437 0192                              l446 016C                              l447 0174  
                            l279 0698                              l376 0E46                              l485 079F  
                            l850 0504                              l666 0429                              l837 0482  
                   __CFG_CPD$OFF 0000                              wreg 0009          setComunicateMode@m_type 00E4  
                           S3910 0834                             S3922 0820                             S3914 0800  
                           S3918 0840         Calibrate_download@bufint 0055                     __CFG_LVP$OFF 0000  
                           l3100 04D1                             l3104 04DC                             l3120 0511  
                           l3108 04EA                             l3140 0558                             l3132 053F  
                           l3060 0FD9                             l3126 0519                             l3214 07D0  
                           l3128 0527                             l3136 054A                             l3064 0FE3  
                           l3208 07BD                             l3090 04A3                             l3082 0493  
                           l3170 02F7                             l3410 0211                             l3092 04B1  
                           l3172 02FF                             l3332 00BE                             l3420 0220  
                           l3412 0213                             l3404 020A                             l3350 0157  
                           l3342 00E7                             l3334 00D0                             l3326 00AF  
                           l3502 0464                             l3414 0215                             l3406 020D  
                           l3264 0687                             l3192 03A0                             l3184 034E  
                           l3168 02EB                             l3336 00D6                             l3424 024A  
                           l3416 0217                             l3408 020F                             l3432 02A4  
                           l3194 03A5                             l3186 0377                             l3346 0112  
                           l3338 00DE                             l3426 026B                             l3434 02B3  
                           l3356 0178                             l3348 0133                             l3364 0182  
                           l3460 03E2                             l3428 028F                             l3462 03EF  
                           l3390 01DC                             l3630 077D                             l3710 0FB9  
                           l3616 0E79                             l3368 0197                             l3472 0407  
                           l3464 03F4                             l3480 0419                             l3392 01E5  
                           l3720 0FCC                             l3490 0449                             l3474 0412  
                           l3466 03F9                             l3458 03D9                             l3394 01F2  
                           l3634 0781                             l3660 0735                             l3396 01F7  
                           l3644 0789                             l3662 0748                             l3398 01FC  
                           l3638 0785                             l3646 0799                             l3718 0FC9  
                           l3568 06F6                             l3920 0188                             l3912 02A9  
                           l3578 0707                             l3658 0727                             l3924 0755  
                           l3668 074F                             l3916 041F                             l3908 078F  
                           l3688 06B8                             u2005 0540                             u2030 07F2  
                           u2220 01D5                             u2125 0F84                             u2055 0349  
                           u2215 01A6                             u2320 0410                             u2145 065C  
                           u2065 0364                             u2075 0358                             u2405 0713  
                           u2165 010B                             u2415 0E75                             u2175 012C  
                           u2255 0243                             u2185 014D                             u2265 0264  
                           u2425 0770                             u2290 03D2                             u2275 0285  
                           u2365 0458                             u2285 02BE                             u1815 0FE4  
                           u1905 04C6                             u1825 0FEB                             u1915 04D2  
                           u1790 0E96                             u1875 04A6                             u1895 04B2  
                           u1975 051C                             u1995 0535                             _WPUA 020C  
                           _WPUB 020D                             _WPUC 020E                     __CFG_WRT$OFF 0000  
                  __CFG_FCMEN$ON 0000               TransLong256To255@i 0045               TransLong256To255@j 003B  
                  ?_clutchaction 0072                             _main 0FA2                             _init 0F4F  
                           fsr0h 0005                             fsr1h 0007                             indf0 0000  
                           fsr0l 0004                             indf1 0001                             fsr1l 0006  
                           btemp 007E                    __CFG_BOREN$ON 0000                             start 004C  
                  __CFG_CSWEN$ON 0000                   ?_InitCalibrate 0072                  __end_of___aldiv 04F3  
                __end_of___almod 0561                            ?_main 0072                            ?_init 0072  
                  __CFG_WDTE$OFF 0000                   __CFG_DEBUG$OFF 0000                            i1l114 003C  
           __end_of_getCargoData 0E9B                            _PORTA 000C                            _PORTB 000D  
                          _PORTC 000E                            _TRISA 008C                            _TRISB 008D  
                          _TRISC 008E               setComunicateMode@i 00E5              ___lmul@multiplicand 0024  
 __size_of_setSPI1sendDataManual 0006    __end_of_setSPI1sendDataManual 0E21                            _clear 0E61  
                __end_of_io_init 0E2A                   __pbitbssCOMMON 0380                   ??_clutchaction 0020  
                 __CFG_BORV$HIGH 0000                       _ReadEEPROM 0F2C                            status 0003  
                          wtemp0 007E         __size_of_EEPROM_download 00C3                   __CFG_MCLRE$OFF 0000  
                __initialization 004E                     __end_of_main 0FD0                     __end_of_init 0F78  
                         ??_main 0059                           ??_init 0024                           ?_clear 0072  
               __end_of_addAngle 0E55                           _ANSELA 018C                           _ANSELB 018D  
                         _ANSELC 018E                           _RA2PPS 0E92                           _RC2PPS 0EA2  
                         _RB7PPS 0E9F                           i1l2320 0E89                           i1l2530 0F07  
                         i1l2730 0030                           i1l2740 0041                           i1l2734 0037  
                         u124_25 0E85         __size_of_setSPI1sendData 0022               __size_of_InterMSSP 0048  
                ??_InitCalibrate 0031                __end_of_VENDER_ID 1004                   __CFG_PWRTE$OFF 0000  
       __size_of_setSPI2sendData 004B             TransLong256To255@buf 0047          __size_of_resetTrainData 000A  
           TransLong256To255@mod 003D             TransLong256To255@pow 0041      __size_of_Calibrate_download 011C  
                         ___lmul 0FD0                        ??___aldiv 0028                        ??___almod 0028  
                 __CFG_STVREN$ON 0000                           _count1 00D9                           _count2 006B  
                         _readNG 00DB                           _readOK 00DC          __size_of_initComu_types 006D  
                      ??_io_init 0020                     __pdataCOMMON 007D                 __end_of_spi_init 0E3E  
                    initbuffer@i 0022                     isTrainSt@buf 002A                     _ra3condision 0386  
                    ?_ReadEEPROM 0020          __end_of__initialization 0091                   __pcstackCOMMON 0072  
                 ReadEEPROM@addr 0020                     __pidataBANK1 0E0C               __end_of_MACHINE_ID 1002  
                  __end_of_clear 0E6E            __size_of_getCargoData 0010                ??_EEPROM_download 0031  
           __end_of_clutchaction 0E49                __end_of_InterMSSP 004C                  __CFG_LPBOREN$ON 0000  
                        ??_clear 0020                     InterMSSP@buf 007A                       __pbssBANK0 0059  
                     __pbssBANK1 00A0                       __pbssBANK2 0120               __size_of_isTrainSt 004E  
            clutchaction@comannd 0020           InitCalibrate@cargoData 0032               __size_of_initCargo 0017  
          EEPROM_download@bufint 0039               __size_of_readCargo 0117                  _startTrainBytes 00C1  
             __size_of_initTrain 004A                       _isSPI1read 0E6E                       _isSPI2read 0E7B  
                   _getCargoData 0E8B                       __pmaintext 0FA2               __size_of_spi1_init 0020  
             __size_of_spi2_init 0022                          ?___lmul 0020                  __CFG_PPS1WAY$ON 0000  
              ??_setSPI1sendData 0072                       __pintentry 0004  Calibrate_download@spi_Read_data 0057  
                      ?_addAngle 0072                ??_setSPI2sendData 0020                   ___lmul@product 0028  
            __CFG_RSTOSC$HFINT32 0000              __size_of_ReadEEPROM 0023                       _isEndpoint 07A0  
                   _isCalibrated 0388           __size_of_setCargoAngle 0006                          _NVMADRH 0892  
                        _NVMADRL 0891                          _NVMDATH 0894                          _NVMDATL 0893  
                _EEPROM_ADDR_buf 00C7                          _SSP1BUF 0211                          _SSP2BUF 0219  
                     _isSendSPI2 0389                       _comu_types 0132                   _resetTrainData 0E2A  
                     _initComand 05CE            TransLong256To255@data 002F                          ___aldiv 0471  
                        ___almod 04F3                        ?_spi_init 0072                  __size_of___lmul 0030  
                     ??_addAngle 0074                __end_of_isTrainSt 0689                       _initbuffer 0F78  
                 _initComu_types 0561               isEndpoint@spi2data 0026                          __ptext1 0E34  
                        __ptext2 0F0A                          __ptext3 0EC8                          __ptext4 0689  
                        __ptext5 0761                          __ptext6 01B1                          __ptext7 0E3E  
                        __ptext8 03AE                __end_of_initCargo 0EC8                          __ptext9 0F2C  
                     _read_train 071E                          _command 00A0                __end_of_readCargo 02C8  
                        _counta2 00D3                          _io_init 0E21                __end_of_initTrain 071E  
                  ?_restartCargo 0072                 ___aldiv@dividend 0024                        _IOCAFbits 0393  
                      _IOCANbits 0392                        _IOCAPbits 0391                __end_of_spi1_init 0EE8  
              __end_of_spi2_init 0F2C                          _st_type 006D                          clrloop0 0E56  
          _setSPI1sendDataManual 0E1B             end_of_initialization 0091           __end_of_resetTrainData 0E34  
                    ?_isSPI1read 0072                      ?_isSPI2read 0072                       _resetCargo 0E9B  
                  _setCargoAngle 0E15                 ___aldiv@quotient 002B            __size_of_clutchaction 000B  
                     ??_spi_init 0022                        _VENDER_ID 1002                 readCargo@buflong 0051  
         __end_of_initComu_types 05CE                   spi1_init@dummy 0021                      ?_isEndpoint 0072  
                 ??_restartCargo 0020                  _SPI_OFFSET_BYTE 007D                        _TRISBbits 008D  
                      _TRISCbits 008E                 __CFG_FEXTOSC$OFF 0000                   spi2_init@dummy 0021  
                   ??_ReadEEPROM 0022                     _clutchaction 0E3E                  ?_resetTrainData 0072  
                _EEPROM_download 03AE       __end_of_Calibrate_download 01B1                   ?_setCargoAngle 0072  
                    ?_initComand 0072            __end_of_InitCalibrate 07FF                  ReadEEPROM@Hiadr 0023  
                ReadEEPROM@Loadr 0024                  ?_initComu_types 0072                   __end_of___lmul 1000  
                  __pidataCOMMON 07FF                      ?_initbuffer 0072                      ?_read_train 0072  
             __end_of_ReadEEPROM 0F4F              __size_of_isSPI1read 000D              __size_of_isSPI2read 0010  
                  __pbitnvCOMMON 03D8              start_initialization 004E           ?_setSPI1sendDataManual 0072  
                      _InterMSSP 0004                   _isEndPointTrig 03D8                  _setSPI1sendData 0EE8  
                _setSPI2sendData 0689                      ?_resetCargo 0072              __size_of_isEndpoint 0034  
              _TransLong256To255 02C8                         ??___lmul 0028               ?_TransLong256To255 002F  
                    __pdataBANK1 00E0                _setComunicateMode 0761                __size_of_addAngle 000C  
             ?_setComunicateMode 0072              ??_TransLong256To255 0033                      __pbssBIGRAM 24F0  
                    __pbssCOMMON 007C                        ___latbits 0003                    __pcstackBANK0 0020  
                  __pcstackBANK1 00E4           EEPROM_download@buflong 0035                      _cargo_index 0120  
            ??_setComunicateMode 0058              __size_of_initComand 006D                       ?_InterMSSP 0072  
        __end_of_EEPROM_download 0471                        _calibdata 00B2              __size_of_initbuffer 002A  
                      _cargoData 0059                  ??_setCargoAngle 0074              __size_of_read_train 0043  
      __end_of_TransLong256To255 03AE             __end_of_restartCargo 0E15            _spi1_send_buffer_data 24F0  
      Calibrate_download@buflong 0051        __end_of_setComunicateMode 07A0                         ?___aldiv 0020  
                       ?___almod 0020                        _direction 00E0          readCargo@spi1_Read_data 0057  
              __size_of_spi_init 000A                 ___almod@dividend 0024                        __pswtext1 0834  
                      __pswtext2 0800                        __pswtext3 0840                        __pswtext4 0820  
                      _isMycargo 0381                         ?_io_init 0072                        _isTrainSt 063B  
            __size_of_resetCargo 0016                        _countabuf 0069                        _initCargo 0EB1  
                      _readCargo 01B1                        _linkAngle 00CB          __end_of_setSPI1sendData 0F0A  
                      _initTrain 06D4                   __size_of_clear 000D          __end_of_setSPI2sendData 06D4  
                ___aldiv@divisor 0020                        _spi1_init 0EC8                        _spi2_init 0F0A  
                ___aldiv@counter 0029                         _LATAbits 010C                     ??_isSPI1read 0020  
                   ??_isSPI2read 0072                        clear_ram0 0E55       setCargoAngle@m_linkAngleTo 0072  
                       _PIE0bits 0090                         _PIE1bits 0091                         _PIE2bits 0092  
                      _send_data 00DE                         _PIR0bits 0010                         _PIR1bits 0011  
                       _PIR2bits 0012                  readCargo@bufint 0055                     ??_isEndpoint 0021  
                     ?_isTrainSt 0072               __end_of_isSPI1read 0E7B               __end_of_isSPI2read 0E8B  
                     ?_initCargo 0072                    _SSP1SSPPSbits 0E22                       ?_readCargo 0072  
                     ?_initTrain 0072                      ??_InterMSSP 0074                ___lmul@multiplier 0020  
                  _SSP2SSPPSbits 0E1F                 ??_resetTrainData 0020                 ?_EEPROM_download 0072  
                       _RaadData 00C9                   _eeprom_address 00DF                       ?_spi1_init 0072  
                     ?_spi2_init 0072       __size_of_TransLong256To255 00E6                 ??_initComu_types 0020  
             __end_of_isEndpoint 07D4                     ??_initComand 0020       __size_of_setComunicateMode 003F  
               __size_of___aldiv 0082                 __size_of___almod 006E                         _addAngle 0E49  
                   ??_initbuffer 0020                 _spi1_buffer_data 26F0                     ??_read_train 0020  
             _Calibrate_download 0095          ??_setSPI1sendDataManual 0020                   _workingcounta0 0385  
                 _workingcounta1 0384                   _workingcounta2 0383                   _workingcounta3 0382  
               __size_of_io_init 0009                       _MACHINE_ID 1000                      _read_count1 00D7  
                    _read_count2 00D1              ?_Calibrate_download 0072                 ?_setSPI1sendData 0072  
                       __ptext10 0095                         __ptext11 0E9B                         __ptext20 071E  
                       __ptext12 07A0                         __ptext21 0E6E                         __ptext13 0E1B  
                       __ptext30 0F4F                         __ptext22 0E21                         __ptext14 02C8  
                       __ptext31 0F78                         __ptext23 06D4                         __ptext15 0FD0  
                       __ptext32 0E61                         __ptext24 0E2A                         __ptext16 04F3  
                       __ptext25 0E10                         __ptext17 0471                         __ptext34 0EE8  
                       __ptext26 063B                         __ptext18 07D4                         __ptext35 0E7B  
                       __ptext27 0561                         __ptext19 0E8B                         __ptext36 0E49  
                       __ptext28 05CE                         __ptext37 0E15                         __ptext29 0EB1  
                   _SSP1CON1bits 0215                     _SSP1CON3bits 0217                         _isMyAddr 0380  
             __end_of_initComand 063B                 ?_setSPI2sendData 0072                     _SSP2CON1bits 021D  
                 _spi1_Read_data 007C                  ___almod@divisor 0020                     _SSP2CON3bits 021F  
                ___almod@counter 0029            __size_of_restartCargo 0005                         _linkInfo 00BB  
                  __size_of_main 002E                    __size_of_init 0029                     ??_resetCargo 0020  
             __end_of_initbuffer 0FA2                    ?_getCargoData 0020                   _spi2_Read_data 00DD  
             __end_of_read_train 0761             ??_Calibrate_download 004B                      _isreadTrain 0387  
                       _spi_init 0E34                         int$flags 007E                         _trainPos 00D5  
                 _spi2_Send_data 006E                     _SSP1STATbits 0214                 _spi2_buffer_data 25F0  
                   _SSP2STATbits 021C                    _st_dataLength 00E2                       _INLVLAbits 038C  
                     _INLVLBbits 038D                       _INLVLCbits 038E                      ??_isTrainSt 0020  
                    _OSCTUNEbits 091E                       _INTCONbits 000B                      _NVMCON1bits 0895  
                    ??_initCargo 0020                     _restartCargo 0E10               __end_of_resetCargo 0EB1  
                    ??_readCargo 004B                      ??_initTrain 002B           __size_of_InitCalibrate 002B  
                    _send_count1 00CD                         intlevel1 0000                      ??_spi1_init 0020  
                    ??_spi2_init 0020                   ??_getCargoData 0030                __CFG_CLKOUTEN$OFF 0000  
  EEPROM_download@spi1_Read_data 003B                       _OSCFRQbits 091F       TransLong256To255@TransData 0037  
                  __pstringtext1 1000                    __pstringtext2 1002                     ___aldiv@sign 002A  
      setSPI1sendDataManual@data 0020                       _SIZE_COUNT 00C5                     ___almod@sign 002A  
               read_train@bufint 0022                  _spi1_send_count 00CF            __end_of_setCargoAngle 0E1B  



Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Tue Jul 17 22:28:49 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F18346
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	eeprom_data,global,class=EEDATA,space=3,delta=2
     5                           	psect	idataCOMMON,global,class=CODE,delta=2
     6                           	psect	idataBANK1,global,class=CODE,delta=2
     7                           	psect	stringtext1,global,class=STRCODE,delta=2
     8                           	psect	stringtext2,global,class=STRCODE,delta=2
     9                           	psect	bitnvCOMMON,global,bit,class=COMMON,space=1,delta=1
    10                           	psect	cinit,global,class=CODE,merge=1,delta=2
    11                           	psect	bitbssCOMMON,global,bit,class=COMMON,space=1,delta=1
    12                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    18                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    19                           	psect	clrtext,global,class=CODE,delta=2
    20                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    21                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    22                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    23                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    24                           	psect	text1,local,class=CODE,merge=1,delta=2
    25                           	psect	text2,local,class=CODE,merge=1,delta=2
    26                           	psect	text3,local,class=CODE,merge=1,delta=2
    27                           	psect	text4,local,class=CODE,merge=1,delta=2
    28                           	psect	text5,local,class=CODE,merge=1,delta=2
    29                           	psect	swtext1,local,class=CONST,delta=2
    30                           	psect	text6,local,class=CODE,merge=1,delta=2
    31                           	psect	swtext2,local,class=CONST,delta=2
    32                           	psect	text7,local,class=CODE,merge=1,delta=2
    33                           	psect	text8,local,class=CODE,merge=1,delta=2
    34                           	psect	text9,local,class=CODE,merge=1,delta=2
    35                           	psect	text10,local,class=CODE,merge=1,delta=2
    36                           	psect	swtext3,local,class=CONST,delta=2
    37                           	psect	text11,local,class=CODE,merge=1,delta=2
    38                           	psect	text12,local,class=CODE,merge=1,delta=2
    39                           	psect	swtext4,local,class=CONST,delta=2
    40                           	psect	text13,local,class=CODE,merge=1,delta=2
    41                           	psect	text14,local,class=CODE,merge=1,delta=2
    42                           	psect	text15,local,class=CODE,merge=1,delta=2
    43                           	psect	text16,local,class=CODE,merge=1,delta=2
    44                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    45                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    46                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    47                           	psect	text20,local,class=CODE,merge=1,delta=2
    48                           	psect	text21,local,class=CODE,merge=1,delta=2
    49                           	psect	text22,local,class=CODE,merge=1,delta=2
    50                           	psect	text23,local,class=CODE,merge=1,delta=2
    51                           	psect	text24,local,class=CODE,merge=1,delta=2
    52                           	psect	text25,local,class=CODE,merge=1,delta=2
    53                           	psect	text26,local,class=CODE,merge=1,delta=2
    54                           	psect	text27,local,class=CODE,merge=1,delta=2
    55                           	psect	text28,local,class=CODE,merge=1,delta=2
    56                           	psect	text29,local,class=CODE,merge=1,delta=2
    57                           	psect	text30,local,class=CODE,merge=1,delta=2
    58                           	psect	text31,local,class=CODE,merge=1,delta=2
    59                           	psect	text32,local,class=CODE,merge=1,delta=2
    60                           	psect	text33,local,class=CODE,merge=1,delta=2
    61                           	psect	text34,local,class=CODE,merge=1,delta=2
    62                           	psect	text35,local,class=CODE,merge=1,delta=2
    63                           	psect	text36,local,class=CODE,merge=1,delta=2
    64                           	psect	intentry,global,class=CODE,delta=2
    65                           	psect	text38,local,class=CODE,merge=1,delta=2
    66                           	psect	text39,local,class=CODE,merge=1,delta=2
    67                           	psect	text40,local,class=CODE,merge=1,delta=2
    68                           	psect	text41,local,class=CODE,merge=1,delta=2
    69                           	psect	text42,local,class=CODE,merge=1,delta=2
    70                           	dabs	1,0xCA0,32
    71                           	dabs	1,0xC20,80
    72                           	dabs	1,0xBA0,80
    73                           	dabs	1,0xB30,64
    74                           	dabs	1,0xB20,16
    75                           	dabs	1,0xAA0,80
    76                           	dabs	1,0xA20,80
    77                           	dabs	1,0x9A0,80
    78                           	dabs	1,0x920,80
    79                           	dabs	1,0x8A0,80
    80                           	dabs	1,0x820,80
    81                           	dabs	1,0x7E0,16
    82                           	dabs	1,0x24F0,0,_spi1_send_buffer_data
    83                           	dabs	1,0x25F0,0,_spi2_buffer_data
    84                           	dabs	1,0x26F0,0,_spi1_buffer_data
    85                           	dabs	1,0x7E,2
    86  0000                     
    87                           ; Version 1.45
    88                           ; Generated 16/11/2017 GMT
    89                           ; 
    90                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    91                           ; All rights reserved.
    92                           ; 
    93                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    94                           ; 
    95                           ; Redistribution and use in source and binary forms, with or without modification, are
    96                           ; permitted provided that the following conditions are met:
    97                           ; 
    98                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    99                           ;        conditions and the following disclaimer.
   100                           ; 
   101                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   102                           ;        of conditions and the following disclaimer in the documentation and/or other
   103                           ;        materials provided with the distribution.
   104                           ; 
   105                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   106                           ;        software without specific prior written permission.
   107                           ; 
   108                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   109                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   110                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   111                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   112                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   113                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   114                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   115                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   116                           ; 
   117                           ; 
   118                           ; Code-generator required, PIC16F18346 Definitions
   119                           ; 
   120                           ; SFR Addresses
   121  0000                     	;# 
   122  0001                     	;# 
   123  0002                     	;# 
   124  0003                     	;# 
   125  0004                     	;# 
   126  0005                     	;# 
   127  0006                     	;# 
   128  0007                     	;# 
   129  0008                     	;# 
   130  0009                     	;# 
   131  000A                     	;# 
   132  000B                     	;# 
   133  000C                     	;# 
   134  000D                     	;# 
   135  000E                     	;# 
   136  0010                     	;# 
   137  0011                     	;# 
   138  0012                     	;# 
   139  0013                     	;# 
   140  0014                     	;# 
   141  0015                     	;# 
   142  0015                     	;# 
   143  0016                     	;# 
   144  0016                     	;# 
   145  0017                     	;# 
   146  0018                     	;# 
   147  0019                     	;# 
   148  0019                     	;# 
   149  001A                     	;# 
   150  001B                     	;# 
   151  001C                     	;# 
   152  001D                     	;# 
   153  001E                     	;# 
   154  001F                     	;# 
   155  008C                     	;# 
   156  008D                     	;# 
   157  008E                     	;# 
   158  0090                     	;# 
   159  0091                     	;# 
   160  0092                     	;# 
   161  0093                     	;# 
   162  0094                     	;# 
   163  0097                     	;# 
   164  009B                     	;# 
   165  009B                     	;# 
   166  009C                     	;# 
   167  009D                     	;# 
   168  009E                     	;# 
   169  009F                     	;# 
   170  010C                     	;# 
   171  010D                     	;# 
   172  010E                     	;# 
   173  0111                     	;# 
   174  0112                     	;# 
   175  0113                     	;# 
   176  0114                     	;# 
   177  0115                     	;# 
   178  0116                     	;# 
   179  0117                     	;# 
   180  0118                     	;# 
   181  0119                     	;# 
   182  018C                     	;# 
   183  018D                     	;# 
   184  018E                     	;# 
   185  0197                     	;# 
   186  0199                     	;# 
   187  0199                     	;# 
   188  0199                     	;# 
   189  019A                     	;# 
   190  019A                     	;# 
   191  019A                     	;# 
   192  019B                     	;# 
   193  019B                     	;# 
   194  019B                     	;# 
   195  019B                     	;# 
   196  019B                     	;# 
   197  019C                     	;# 
   198  019C                     	;# 
   199  019C                     	;# 
   200  019D                     	;# 
   201  019D                     	;# 
   202  019D                     	;# 
   203  019E                     	;# 
   204  019E                     	;# 
   205  019E                     	;# 
   206  019F                     	;# 
   207  019F                     	;# 
   208  019F                     	;# 
   209  019F                     	;# 
   210  019F                     	;# 
   211  020C                     	;# 
   212  020D                     	;# 
   213  020E                     	;# 
   214  0211                     	;# 
   215  0211                     	;# 
   216  0212                     	;# 
   217  0212                     	;# 
   218  0213                     	;# 
   219  0213                     	;# 
   220  0214                     	;# 
   221  0214                     	;# 
   222  0215                     	;# 
   223  0215                     	;# 
   224  0215                     	;# 
   225  0215                     	;# 
   226  0216                     	;# 
   227  0216                     	;# 
   228  0217                     	;# 
   229  0217                     	;# 
   230  0219                     	;# 
   231  021A                     	;# 
   232  021B                     	;# 
   233  021C                     	;# 
   234  021D                     	;# 
   235  021D                     	;# 
   236  021E                     	;# 
   237  021F                     	;# 
   238  028C                     	;# 
   239  028D                     	;# 
   240  028E                     	;# 
   241  0291                     	;# 
   242  0291                     	;# 
   243  0292                     	;# 
   244  0293                     	;# 
   245  0294                     	;# 
   246  0295                     	;# 
   247  0295                     	;# 
   248  0296                     	;# 
   249  0297                     	;# 
   250  0298                     	;# 
   251  029F                     	;# 
   252  030C                     	;# 
   253  030D                     	;# 
   254  030E                     	;# 
   255  0311                     	;# 
   256  0311                     	;# 
   257  0312                     	;# 
   258  0313                     	;# 
   259  0314                     	;# 
   260  0315                     	;# 
   261  0315                     	;# 
   262  0316                     	;# 
   263  0317                     	;# 
   264  0318                     	;# 
   265  038C                     	;# 
   266  038D                     	;# 
   267  038E                     	;# 
   268  0391                     	;# 
   269  0392                     	;# 
   270  0393                     	;# 
   271  0394                     	;# 
   272  0395                     	;# 
   273  0396                     	;# 
   274  0397                     	;# 
   275  0398                     	;# 
   276  0399                     	;# 
   277  039A                     	;# 
   278  039C                     	;# 
   279  039D                     	;# 
   280  039E                     	;# 
   281  039F                     	;# 
   282  0411                     	;# 
   283  0411                     	;# 
   284  0412                     	;# 
   285  0413                     	;# 
   286  0414                     	;# 
   287  0415                     	;# 
   288  0416                     	;# 
   289  0417                     	;# 
   290  0418                     	;# 
   291  0418                     	;# 
   292  0419                     	;# 
   293  041A                     	;# 
   294  041B                     	;# 
   295  041C                     	;# 
   296  041D                     	;# 
   297  041E                     	;# 
   298  041F                     	;# 
   299  0498                     	;# 
   300  0498                     	;# 
   301  0499                     	;# 
   302  049A                     	;# 
   303  049B                     	;# 
   304  049B                     	;# 
   305  049C                     	;# 
   306  049D                     	;# 
   307  049E                     	;# 
   308  049F                     	;# 
   309  0617                     	;# 
   310  0618                     	;# 
   311  0619                     	;# 
   312  0619                     	;# 
   313  061A                     	;# 
   314  061B                     	;# 
   315  061C                     	;# 
   316  061C                     	;# 
   317  061F                     	;# 
   318  0691                     	;# 
   319  0692                     	;# 
   320  0693                     	;# 
   321  0694                     	;# 
   322  0695                     	;# 
   323  0696                     	;# 
   324  0697                     	;# 
   325  0698                     	;# 
   326  0699                     	;# 
   327  0711                     	;# 
   328  0712                     	;# 
   329  0713                     	;# 
   330  0714                     	;# 
   331  0715                     	;# 
   332  0716                     	;# 
   333  0717                     	;# 
   334  0718                     	;# 
   335  0719                     	;# 
   336  0891                     	;# 
   337  0891                     	;# 
   338  0891                     	;# 
   339  0891                     	;# 
   340  0891                     	;# 
   341  0891                     	;# 
   342  0892                     	;# 
   343  0892                     	;# 
   344  0892                     	;# 
   345  0893                     	;# 
   346  0893                     	;# 
   347  0893                     	;# 
   348  0893                     	;# 
   349  0893                     	;# 
   350  0893                     	;# 
   351  0894                     	;# 
   352  0894                     	;# 
   353  0894                     	;# 
   354  0895                     	;# 
   355  0895                     	;# 
   356  0895                     	;# 
   357  0896                     	;# 
   358  0896                     	;# 
   359  0896                     	;# 
   360  089B                     	;# 
   361  0911                     	;# 
   362  0912                     	;# 
   363  0913                     	;# 
   364  0914                     	;# 
   365  0915                     	;# 
   366  0916                     	;# 
   367  0918                     	;# 
   368  0919                     	;# 
   369  091A                     	;# 
   370  091B                     	;# 
   371  091C                     	;# 
   372  091D                     	;# 
   373  091E                     	;# 
   374  091F                     	;# 
   375  0E0F                     	;# 
   376  0E10                     	;# 
   377  0E11                     	;# 
   378  0E12                     	;# 
   379  0E13                     	;# 
   380  0E14                     	;# 
   381  0E15                     	;# 
   382  0E16                     	;# 
   383  0E17                     	;# 
   384  0E18                     	;# 
   385  0E19                     	;# 
   386  0E1A                     	;# 
   387  0E1B                     	;# 
   388  0E1C                     	;# 
   389  0E1D                     	;# 
   390  0E1E                     	;# 
   391  0E1F                     	;# 
   392  0E20                     	;# 
   393  0E21                     	;# 
   394  0E22                     	;# 
   395  0E24                     	;# 
   396  0E25                     	;# 
   397  0E28                     	;# 
   398  0E29                     	;# 
   399  0E2A                     	;# 
   400  0E2B                     	;# 
   401  0E2C                     	;# 
   402  0E2D                     	;# 
   403  0E2E                     	;# 
   404  0E2F                     	;# 
   405  0E90                     	;# 
   406  0E91                     	;# 
   407  0E92                     	;# 
   408  0E94                     	;# 
   409  0E95                     	;# 
   410  0E9C                     	;# 
   411  0E9D                     	;# 
   412  0E9E                     	;# 
   413  0E9F                     	;# 
   414  0EA0                     	;# 
   415  0EA1                     	;# 
   416  0EA2                     	;# 
   417  0EA3                     	;# 
   418  0EA4                     	;# 
   419  0EA5                     	;# 
   420  0EA6                     	;# 
   421  0EA7                     	;# 
   422  0F0F                     	;# 
   423  0F10                     	;# 
   424  0F11                     	;# 
   425  0F12                     	;# 
   426  0F13                     	;# 
   427  0F14                     	;# 
   428  0F15                     	;# 
   429  0F16                     	;# 
   430  0F17                     	;# 
   431  0F18                     	;# 
   432  0F19                     	;# 
   433  0F1A                     	;# 
   434  0F1B                     	;# 
   435  0F1C                     	;# 
   436  0F1D                     	;# 
   437  0F1E                     	;# 
   438  0F1F                     	;# 
   439  0F20                     	;# 
   440  0F21                     	;# 
   441  0F22                     	;# 
   442  0F23                     	;# 
   443  0F24                     	;# 
   444  0F25                     	;# 
   445  0F26                     	;# 
   446  0F27                     	;# 
   447  0F28                     	;# 
   448  0F29                     	;# 
   449  0F2A                     	;# 
   450  0F2B                     	;# 
   451  0F2C                     	;# 
   452  0F2D                     	;# 
   453  0F2E                     	;# 
   454  0F2F                     	;# 
   455  0F30                     	;# 
   456  0F31                     	;# 
   457  0F32                     	;# 
   458  0F33                     	;# 
   459  0F34                     	;# 
   460  0F35                     	;# 
   461  0F36                     	;# 
   462  0F37                     	;# 
   463  0FE4                     	;# 
   464  0FE5                     	;# 
   465  0FE6                     	;# 
   466  0FE7                     	;# 
   467  0FE8                     	;# 
   468  0FE9                     	;# 
   469  0FEA                     	;# 
   470  0FEB                     	;# 
   471  0FED                     	;# 
   472  0FEE                     	;# 
   473  0FEF                     	;# 
   474  0000                     	;# 
   475  0001                     	;# 
   476  0002                     	;# 
   477  0003                     	;# 
   478  0004                     	;# 
   479  0005                     	;# 
   480  0006                     	;# 
   481  0007                     	;# 
   482  0008                     	;# 
   483  0009                     	;# 
   484  000A                     	;# 
   485  000B                     	;# 
   486  000C                     	;# 
   487  000D                     	;# 
   488  000E                     	;# 
   489  0010                     	;# 
   490  0011                     	;# 
   491  0012                     	;# 
   492  0013                     	;# 
   493  0014                     	;# 
   494  0015                     	;# 
   495  0015                     	;# 
   496  0016                     	;# 
   497  0016                     	;# 
   498  0017                     	;# 
   499  0018                     	;# 
   500  0019                     	;# 
   501  0019                     	;# 
   502  001A                     	;# 
   503  001B                     	;# 
   504  001C                     	;# 
   505  001D                     	;# 
   506  001E                     	;# 
   507  001F                     	;# 
   508  008C                     	;# 
   509  008D                     	;# 
   510  008E                     	;# 
   511  0090                     	;# 
   512  0091                     	;# 
   513  0092                     	;# 
   514  0093                     	;# 
   515  0094                     	;# 
   516  0097                     	;# 
   517  009B                     	;# 
   518  009B                     	;# 
   519  009C                     	;# 
   520  009D                     	;# 
   521  009E                     	;# 
   522  009F                     	;# 
   523  010C                     	;# 
   524  010D                     	;# 
   525  010E                     	;# 
   526  0111                     	;# 
   527  0112                     	;# 
   528  0113                     	;# 
   529  0114                     	;# 
   530  0115                     	;# 
   531  0116                     	;# 
   532  0117                     	;# 
   533  0118                     	;# 
   534  0119                     	;# 
   535  018C                     	;# 
   536  018D                     	;# 
   537  018E                     	;# 
   538  0197                     	;# 
   539  0199                     	;# 
   540  0199                     	;# 
   541  0199                     	;# 
   542  019A                     	;# 
   543  019A                     	;# 
   544  019A                     	;# 
   545  019B                     	;# 
   546  019B                     	;# 
   547  019B                     	;# 
   548  019B                     	;# 
   549  019B                     	;# 
   550  019C                     	;# 
   551  019C                     	;# 
   552  019C                     	;# 
   553  019D                     	;# 
   554  019D                     	;# 
   555  019D                     	;# 
   556  019E                     	;# 
   557  019E                     	;# 
   558  019E                     	;# 
   559  019F                     	;# 
   560  019F                     	;# 
   561  019F                     	;# 
   562  019F                     	;# 
   563  019F                     	;# 
   564  020C                     	;# 
   565  020D                     	;# 
   566  020E                     	;# 
   567  0211                     	;# 
   568  0211                     	;# 
   569  0212                     	;# 
   570  0212                     	;# 
   571  0213                     	;# 
   572  0213                     	;# 
   573  0214                     	;# 
   574  0214                     	;# 
   575  0215                     	;# 
   576  0215                     	;# 
   577  0215                     	;# 
   578  0215                     	;# 
   579  0216                     	;# 
   580  0216                     	;# 
   581  0217                     	;# 
   582  0217                     	;# 
   583  0219                     	;# 
   584  021A                     	;# 
   585  021B                     	;# 
   586  021C                     	;# 
   587  021D                     	;# 
   588  021D                     	;# 
   589  021E                     	;# 
   590  021F                     	;# 
   591  028C                     	;# 
   592  028D                     	;# 
   593  028E                     	;# 
   594  0291                     	;# 
   595  0291                     	;# 
   596  0292                     	;# 
   597  0293                     	;# 
   598  0294                     	;# 
   599  0295                     	;# 
   600  0295                     	;# 
   601  0296                     	;# 
   602  0297                     	;# 
   603  0298                     	;# 
   604  029F                     	;# 
   605  030C                     	;# 
   606  030D                     	;# 
   607  030E                     	;# 
   608  0311                     	;# 
   609  0311                     	;# 
   610  0312                     	;# 
   611  0313                     	;# 
   612  0314                     	;# 
   613  0315                     	;# 
   614  0315                     	;# 
   615  0316                     	;# 
   616  0317                     	;# 
   617  0318                     	;# 
   618  038C                     	;# 
   619  038D                     	;# 
   620  038E                     	;# 
   621  0391                     	;# 
   622  0392                     	;# 
   623  0393                     	;# 
   624  0394                     	;# 
   625  0395                     	;# 
   626  0396                     	;# 
   627  0397                     	;# 
   628  0398                     	;# 
   629  0399                     	;# 
   630  039A                     	;# 
   631  039C                     	;# 
   632  039D                     	;# 
   633  039E                     	;# 
   634  039F                     	;# 
   635  0411                     	;# 
   636  0411                     	;# 
   637  0412                     	;# 
   638  0413                     	;# 
   639  0414                     	;# 
   640  0415                     	;# 
   641  0416                     	;# 
   642  0417                     	;# 
   643  0418                     	;# 
   644  0418                     	;# 
   645  0419                     	;# 
   646  041A                     	;# 
   647  041B                     	;# 
   648  041C                     	;# 
   649  041D                     	;# 
   650  041E                     	;# 
   651  041F                     	;# 
   652  0498                     	;# 
   653  0498                     	;# 
   654  0499                     	;# 
   655  049A                     	;# 
   656  049B                     	;# 
   657  049B                     	;# 
   658  049C                     	;# 
   659  049D                     	;# 
   660  049E                     	;# 
   661  049F                     	;# 
   662  0617                     	;# 
   663  0618                     	;# 
   664  0619                     	;# 
   665  0619                     	;# 
   666  061A                     	;# 
   667  061B                     	;# 
   668  061C                     	;# 
   669  061C                     	;# 
   670  061F                     	;# 
   671  0691                     	;# 
   672  0692                     	;# 
   673  0693                     	;# 
   674  0694                     	;# 
   675  0695                     	;# 
   676  0696                     	;# 
   677  0697                     	;# 
   678  0698                     	;# 
   679  0699                     	;# 
   680  0711                     	;# 
   681  0712                     	;# 
   682  0713                     	;# 
   683  0714                     	;# 
   684  0715                     	;# 
   685  0716                     	;# 
   686  0717                     	;# 
   687  0718                     	;# 
   688  0719                     	;# 
   689  0891                     	;# 
   690  0891                     	;# 
   691  0891                     	;# 
   692  0891                     	;# 
   693  0891                     	;# 
   694  0891                     	;# 
   695  0892                     	;# 
   696  0892                     	;# 
   697  0892                     	;# 
   698  0893                     	;# 
   699  0893                     	;# 
   700  0893                     	;# 
   701  0893                     	;# 
   702  0893                     	;# 
   703  0893                     	;# 
   704  0894                     	;# 
   705  0894                     	;# 
   706  0894                     	;# 
   707  0895                     	;# 
   708  0895                     	;# 
   709  0895                     	;# 
   710  0896                     	;# 
   711  0896                     	;# 
   712  0896                     	;# 
   713  089B                     	;# 
   714  0911                     	;# 
   715  0912                     	;# 
   716  0913                     	;# 
   717  0914                     	;# 
   718  0915                     	;# 
   719  0916                     	;# 
   720  0918                     	;# 
   721  0919                     	;# 
   722  091A                     	;# 
   723  091B                     	;# 
   724  091C                     	;# 
   725  091D                     	;# 
   726  091E                     	;# 
   727  091F                     	;# 
   728  0E0F                     	;# 
   729  0E10                     	;# 
   730  0E11                     	;# 
   731  0E12                     	;# 
   732  0E13                     	;# 
   733  0E14                     	;# 
   734  0E15                     	;# 
   735  0E16                     	;# 
   736  0E17                     	;# 
   737  0E18                     	;# 
   738  0E19                     	;# 
   739  0E1A                     	;# 
   740  0E1B                     	;# 
   741  0E1C                     	;# 
   742  0E1D                     	;# 
   743  0E1E                     	;# 
   744  0E1F                     	;# 
   745  0E20                     	;# 
   746  0E21                     	;# 
   747  0E22                     	;# 
   748  0E24                     	;# 
   749  0E25                     	;# 
   750  0E28                     	;# 
   751  0E29                     	;# 
   752  0E2A                     	;# 
   753  0E2B                     	;# 
   754  0E2C                     	;# 
   755  0E2D                     	;# 
   756  0E2E                     	;# 
   757  0E2F                     	;# 
   758  0E90                     	;# 
   759  0E91                     	;# 
   760  0E92                     	;# 
   761  0E94                     	;# 
   762  0E95                     	;# 
   763  0E9C                     	;# 
   764  0E9D                     	;# 
   765  0E9E                     	;# 
   766  0E9F                     	;# 
   767  0EA0                     	;# 
   768  0EA1                     	;# 
   769  0EA2                     	;# 
   770  0EA3                     	;# 
   771  0EA4                     	;# 
   772  0EA5                     	;# 
   773  0EA6                     	;# 
   774  0EA7                     	;# 
   775  0F0F                     	;# 
   776  0F10                     	;# 
   777  0F11                     	;# 
   778  0F12                     	;# 
   779  0F13                     	;# 
   780  0F14                     	;# 
   781  0F15                     	;# 
   782  0F16                     	;# 
   783  0F17                     	;# 
   784  0F18                     	;# 
   785  0F19                     	;# 
   786  0F1A                     	;# 
   787  0F1B                     	;# 
   788  0F1C                     	;# 
   789  0F1D                     	;# 
   790  0F1E                     	;# 
   791  0F1F                     	;# 
   792  0F20                     	;# 
   793  0F21                     	;# 
   794  0F22                     	;# 
   795  0F23                     	;# 
   796  0F24                     	;# 
   797  0F25                     	;# 
   798  0F26                     	;# 
   799  0F27                     	;# 
   800  0F28                     	;# 
   801  0F29                     	;# 
   802  0F2A                     	;# 
   803  0F2B                     	;# 
   804  0F2C                     	;# 
   805  0F2D                     	;# 
   806  0F2E                     	;# 
   807  0F2F                     	;# 
   808  0F30                     	;# 
   809  0F31                     	;# 
   810  0F32                     	;# 
   811  0F33                     	;# 
   812  0F34                     	;# 
   813  0F35                     	;# 
   814  0F36                     	;# 
   815  0F37                     	;# 
   816  0FE4                     	;# 
   817  0FE5                     	;# 
   818  0FE6                     	;# 
   819  0FE7                     	;# 
   820  0FE8                     	;# 
   821  0FE9                     	;# 
   822  0FEA                     	;# 
   823  0FEB                     	;# 
   824  0FED                     	;# 
   825  0FEE                     	;# 
   826  0FEF                     	;# 
   827  0000                     	;# 
   828  0001                     	;# 
   829  0002                     	;# 
   830  0003                     	;# 
   831  0004                     	;# 
   832  0005                     	;# 
   833  0006                     	;# 
   834  0007                     	;# 
   835  0008                     	;# 
   836  0009                     	;# 
   837  000A                     	;# 
   838  000B                     	;# 
   839  000C                     	;# 
   840  000D                     	;# 
   841  000E                     	;# 
   842  0010                     	;# 
   843  0011                     	;# 
   844  0012                     	;# 
   845  0013                     	;# 
   846  0014                     	;# 
   847  0015                     	;# 
   848  0015                     	;# 
   849  0016                     	;# 
   850  0016                     	;# 
   851  0017                     	;# 
   852  0018                     	;# 
   853  0019                     	;# 
   854  0019                     	;# 
   855  001A                     	;# 
   856  001B                     	;# 
   857  001C                     	;# 
   858  001D                     	;# 
   859  001E                     	;# 
   860  001F                     	;# 
   861  008C                     	;# 
   862  008D                     	;# 
   863  008E                     	;# 
   864  0090                     	;# 
   865  0091                     	;# 
   866  0092                     	;# 
   867  0093                     	;# 
   868  0094                     	;# 
   869  0097                     	;# 
   870  009B                     	;# 
   871  009B                     	;# 
   872  009C                     	;# 
   873  009D                     	;# 
   874  009E                     	;# 
   875  009F                     	;# 
   876  010C                     	;# 
   877  010D                     	;# 
   878  010E                     	;# 
   879  0111                     	;# 
   880  0112                     	;# 
   881  0113                     	;# 
   882  0114                     	;# 
   883  0115                     	;# 
   884  0116                     	;# 
   885  0117                     	;# 
   886  0118                     	;# 
   887  0119                     	;# 
   888  018C                     	;# 
   889  018D                     	;# 
   890  018E                     	;# 
   891  0197                     	;# 
   892  0199                     	;# 
   893  0199                     	;# 
   894  0199                     	;# 
   895  019A                     	;# 
   896  019A                     	;# 
   897  019A                     	;# 
   898  019B                     	;# 
   899  019B                     	;# 
   900  019B                     	;# 
   901  019B                     	;# 
   902  019B                     	;# 
   903  019C                     	;# 
   904  019C                     	;# 
   905  019C                     	;# 
   906  019D                     	;# 
   907  019D                     	;# 
   908  019D                     	;# 
   909  019E                     	;# 
   910  019E                     	;# 
   911  019E                     	;# 
   912  019F                     	;# 
   913  019F                     	;# 
   914  019F                     	;# 
   915  019F                     	;# 
   916  019F                     	;# 
   917  020C                     	;# 
   918  020D                     	;# 
   919  020E                     	;# 
   920  0211                     	;# 
   921  0211                     	;# 
   922  0212                     	;# 
   923  0212                     	;# 
   924  0213                     	;# 
   925  0213                     	;# 
   926  0214                     	;# 
   927  0214                     	;# 
   928  0215                     	;# 
   929  0215                     	;# 
   930  0215                     	;# 
   931  0215                     	;# 
   932  0216                     	;# 
   933  0216                     	;# 
   934  0217                     	;# 
   935  0217                     	;# 
   936  0219                     	;# 
   937  021A                     	;# 
   938  021B                     	;# 
   939  021C                     	;# 
   940  021D                     	;# 
   941  021D                     	;# 
   942  021E                     	;# 
   943  021F                     	;# 
   944  028C                     	;# 
   945  028D                     	;# 
   946  028E                     	;# 
   947  0291                     	;# 
   948  0291                     	;# 
   949  0292                     	;# 
   950  0293                     	;# 
   951  0294                     	;# 
   952  0295                     	;# 
   953  0295                     	;# 
   954  0296                     	;# 
   955  0297                     	;# 
   956  0298                     	;# 
   957  029F                     	;# 
   958  030C                     	;# 
   959  030D                     	;# 
   960  030E                     	;# 
   961  0311                     	;# 
   962  0311                     	;# 
   963  0312                     	;# 
   964  0313                     	;# 
   965  0314                     	;# 
   966  0315                     	;# 
   967  0315                     	;# 
   968  0316                     	;# 
   969  0317                     	;# 
   970  0318                     	;# 
   971  038C                     	;# 
   972  038D                     	;# 
   973  038E                     	;# 
   974  0391                     	;# 
   975  0392                     	;# 
   976  0393                     	;# 
   977  0394                     	;# 
   978  0395                     	;# 
   979  0396                     	;# 
   980  0397                     	;# 
   981  0398                     	;# 
   982  0399                     	;# 
   983  039A                     	;# 
   984  039C                     	;# 
   985  039D                     	;# 
   986  039E                     	;# 
   987  039F                     	;# 
   988  0411                     	;# 
   989  0411                     	;# 
   990  0412                     	;# 
   991  0413                     	;# 
   992  0414                     	;# 
   993  0415                     	;# 
   994  0416                     	;# 
   995  0417                     	;# 
   996  0418                     	;# 
   997  0418                     	;# 
   998  0419                     	;# 
   999  041A                     	;# 
  1000  041B                     	;# 
  1001  041C                     	;# 
  1002  041D                     	;# 
  1003  041E                     	;# 
  1004  041F                     	;# 
  1005  0498                     	;# 
  1006  0498                     	;# 
  1007  0499                     	;# 
  1008  049A                     	;# 
  1009  049B                     	;# 
  1010  049B                     	;# 
  1011  049C                     	;# 
  1012  049D                     	;# 
  1013  049E                     	;# 
  1014  049F                     	;# 
  1015  0617                     	;# 
  1016  0618                     	;# 
  1017  0619                     	;# 
  1018  0619                     	;# 
  1019  061A                     	;# 
  1020  061B                     	;# 
  1021  061C                     	;# 
  1022  061C                     	;# 
  1023  061F                     	;# 
  1024  0691                     	;# 
  1025  0692                     	;# 
  1026  0693                     	;# 
  1027  0694                     	;# 
  1028  0695                     	;# 
  1029  0696                     	;# 
  1030  0697                     	;# 
  1031  0698                     	;# 
  1032  0699                     	;# 
  1033  0711                     	;# 
  1034  0712                     	;# 
  1035  0713                     	;# 
  1036  0714                     	;# 
  1037  0715                     	;# 
  1038  0716                     	;# 
  1039  0717                     	;# 
  1040  0718                     	;# 
  1041  0719                     	;# 
  1042  0891                     	;# 
  1043  0891                     	;# 
  1044  0891                     	;# 
  1045  0891                     	;# 
  1046  0891                     	;# 
  1047  0891                     	;# 
  1048  0892                     	;# 
  1049  0892                     	;# 
  1050  0892                     	;# 
  1051  0893                     	;# 
  1052  0893                     	;# 
  1053  0893                     	;# 
  1054  0893                     	;# 
  1055  0893                     	;# 
  1056  0893                     	;# 
  1057  0894                     	;# 
  1058  0894                     	;# 
  1059  0894                     	;# 
  1060  0895                     	;# 
  1061  0895                     	;# 
  1062  0895                     	;# 
  1063  0896                     	;# 
  1064  0896                     	;# 
  1065  0896                     	;# 
  1066  089B                     	;# 
  1067  0911                     	;# 
  1068  0912                     	;# 
  1069  0913                     	;# 
  1070  0914                     	;# 
  1071  0915                     	;# 
  1072  0916                     	;# 
  1073  0918                     	;# 
  1074  0919                     	;# 
  1075  091A                     	;# 
  1076  091B                     	;# 
  1077  091C                     	;# 
  1078  091D                     	;# 
  1079  091E                     	;# 
  1080  091F                     	;# 
  1081  0E0F                     	;# 
  1082  0E10                     	;# 
  1083  0E11                     	;# 
  1084  0E12                     	;# 
  1085  0E13                     	;# 
  1086  0E14                     	;# 
  1087  0E15                     	;# 
  1088  0E16                     	;# 
  1089  0E17                     	;# 
  1090  0E18                     	;# 
  1091  0E19                     	;# 
  1092  0E1A                     	;# 
  1093  0E1B                     	;# 
  1094  0E1C                     	;# 
  1095  0E1D                     	;# 
  1096  0E1E                     	;# 
  1097  0E1F                     	;# 
  1098  0E20                     	;# 
  1099  0E21                     	;# 
  1100  0E22                     	;# 
  1101  0E24                     	;# 
  1102  0E25                     	;# 
  1103  0E28                     	;# 
  1104  0E29                     	;# 
  1105  0E2A                     	;# 
  1106  0E2B                     	;# 
  1107  0E2C                     	;# 
  1108  0E2D                     	;# 
  1109  0E2E                     	;# 
  1110  0E2F                     	;# 
  1111  0E90                     	;# 
  1112  0E91                     	;# 
  1113  0E92                     	;# 
  1114  0E94                     	;# 
  1115  0E95                     	;# 
  1116  0E9C                     	;# 
  1117  0E9D                     	;# 
  1118  0E9E                     	;# 
  1119  0E9F                     	;# 
  1120  0EA0                     	;# 
  1121  0EA1                     	;# 
  1122  0EA2                     	;# 
  1123  0EA3                     	;# 
  1124  0EA4                     	;# 
  1125  0EA5                     	;# 
  1126  0EA6                     	;# 
  1127  0EA7                     	;# 
  1128  0F0F                     	;# 
  1129  0F10                     	;# 
  1130  0F11                     	;# 
  1131  0F12                     	;# 
  1132  0F13                     	;# 
  1133  0F14                     	;# 
  1134  0F15                     	;# 
  1135  0F16                     	;# 
  1136  0F17                     	;# 
  1137  0F18                     	;# 
  1138  0F19                     	;# 
  1139  0F1A                     	;# 
  1140  0F1B                     	;# 
  1141  0F1C                     	;# 
  1142  0F1D                     	;# 
  1143  0F1E                     	;# 
  1144  0F1F                     	;# 
  1145  0F20                     	;# 
  1146  0F21                     	;# 
  1147  0F22                     	;# 
  1148  0F23                     	;# 
  1149  0F24                     	;# 
  1150  0F25                     	;# 
  1151  0F26                     	;# 
  1152  0F27                     	;# 
  1153  0F28                     	;# 
  1154  0F29                     	;# 
  1155  0F2A                     	;# 
  1156  0F2B                     	;# 
  1157  0F2C                     	;# 
  1158  0F2D                     	;# 
  1159  0F2E                     	;# 
  1160  0F2F                     	;# 
  1161  0F30                     	;# 
  1162  0F31                     	;# 
  1163  0F32                     	;# 
  1164  0F33                     	;# 
  1165  0F34                     	;# 
  1166  0F35                     	;# 
  1167  0F36                     	;# 
  1168  0F37                     	;# 
  1169  0FE4                     	;# 
  1170  0FE5                     	;# 
  1171  0FE6                     	;# 
  1172  0FE7                     	;# 
  1173  0FE8                     	;# 
  1174  0FE9                     	;# 
  1175  0FEA                     	;# 
  1176  0FEB                     	;# 
  1177  0FED                     	;# 
  1178  0FEE                     	;# 
  1179  0FEF                     	;# 
  1180  0000                     	;# 
  1181  0001                     	;# 
  1182  0002                     	;# 
  1183  0003                     	;# 
  1184  0004                     	;# 
  1185  0005                     	;# 
  1186  0006                     	;# 
  1187  0007                     	;# 
  1188  0008                     	;# 
  1189  0009                     	;# 
  1190  000A                     	;# 
  1191  000B                     	;# 
  1192  000C                     	;# 
  1193  000D                     	;# 
  1194  000E                     	;# 
  1195  0010                     	;# 
  1196  0011                     	;# 
  1197  0012                     	;# 
  1198  0013                     	;# 
  1199  0014                     	;# 
  1200  0015                     	;# 
  1201  0015                     	;# 
  1202  0016                     	;# 
  1203  0016                     	;# 
  1204  0017                     	;# 
  1205  0018                     	;# 
  1206  0019                     	;# 
  1207  0019                     	;# 
  1208  001A                     	;# 
  1209  001B                     	;# 
  1210  001C                     	;# 
  1211  001D                     	;# 
  1212  001E                     	;# 
  1213  001F                     	;# 
  1214  008C                     	;# 
  1215  008D                     	;# 
  1216  008E                     	;# 
  1217  0090                     	;# 
  1218  0091                     	;# 
  1219  0092                     	;# 
  1220  0093                     	;# 
  1221  0094                     	;# 
  1222  0097                     	;# 
  1223  009B                     	;# 
  1224  009B                     	;# 
  1225  009C                     	;# 
  1226  009D                     	;# 
  1227  009E                     	;# 
  1228  009F                     	;# 
  1229  010C                     	;# 
  1230  010D                     	;# 
  1231  010E                     	;# 
  1232  0111                     	;# 
  1233  0112                     	;# 
  1234  0113                     	;# 
  1235  0114                     	;# 
  1236  0115                     	;# 
  1237  0116                     	;# 
  1238  0117                     	;# 
  1239  0118                     	;# 
  1240  0119                     	;# 
  1241  018C                     	;# 
  1242  018D                     	;# 
  1243  018E                     	;# 
  1244  0197                     	;# 
  1245  0199                     	;# 
  1246  0199                     	;# 
  1247  0199                     	;# 
  1248  019A                     	;# 
  1249  019A                     	;# 
  1250  019A                     	;# 
  1251  019B                     	;# 
  1252  019B                     	;# 
  1253  019B                     	;# 
  1254  019B                     	;# 
  1255  019B                     	;# 
  1256  019C                     	;# 
  1257  019C                     	;# 
  1258  019C                     	;# 
  1259  019D                     	;# 
  1260  019D                     	;# 
  1261  019D                     	;# 
  1262  019E                     	;# 
  1263  019E                     	;# 
  1264  019E                     	;# 
  1265  019F                     	;# 
  1266  019F                     	;# 
  1267  019F                     	;# 
  1268  019F                     	;# 
  1269  019F                     	;# 
  1270  020C                     	;# 
  1271  020D                     	;# 
  1272  020E                     	;# 
  1273  0211                     	;# 
  1274  0211                     	;# 
  1275  0212                     	;# 
  1276  0212                     	;# 
  1277  0213                     	;# 
  1278  0213                     	;# 
  1279  0214                     	;# 
  1280  0214                     	;# 
  1281  0215                     	;# 
  1282  0215                     	;# 
  1283  0215                     	;# 
  1284  0215                     	;# 
  1285  0216                     	;# 
  1286  0216                     	;# 
  1287  0217                     	;# 
  1288  0217                     	;# 
  1289  0219                     	;# 
  1290  021A                     	;# 
  1291  021B                     	;# 
  1292  021C                     	;# 
  1293  021D                     	;# 
  1294  021D                     	;# 
  1295  021E                     	;# 
  1296  021F                     	;# 
  1297  028C                     	;# 
  1298  028D                     	;# 
  1299  028E                     	;# 
  1300  0291                     	;# 
  1301  0291                     	;# 
  1302  0292                     	;# 
  1303  0293                     	;# 
  1304  0294                     	;# 
  1305  0295                     	;# 
  1306  0295                     	;# 
  1307  0296                     	;# 
  1308  0297                     	;# 
  1309  0298                     	;# 
  1310  029F                     	;# 
  1311  030C                     	;# 
  1312  030D                     	;# 
  1313  030E                     	;# 
  1314  0311                     	;# 
  1315  0311                     	;# 
  1316  0312                     	;# 
  1317  0313                     	;# 
  1318  0314                     	;# 
  1319  0315                     	;# 
  1320  0315                     	;# 
  1321  0316                     	;# 
  1322  0317                     	;# 
  1323  0318                     	;# 
  1324  038C                     	;# 
  1325  038D                     	;# 
  1326  038E                     	;# 
  1327  0391                     	;# 
  1328  0392                     	;# 
  1329  0393                     	;# 
  1330  0394                     	;# 
  1331  0395                     	;# 
  1332  0396                     	;# 
  1333  0397                     	;# 
  1334  0398                     	;# 
  1335  0399                     	;# 
  1336  039A                     	;# 
  1337  039C                     	;# 
  1338  039D                     	;# 
  1339  039E                     	;# 
  1340  039F                     	;# 
  1341  0411                     	;# 
  1342  0411                     	;# 
  1343  0412                     	;# 
  1344  0413                     	;# 
  1345  0414                     	;# 
  1346  0415                     	;# 
  1347  0416                     	;# 
  1348  0417                     	;# 
  1349  0418                     	;# 
  1350  0418                     	;# 
  1351  0419                     	;# 
  1352  041A                     	;# 
  1353  041B                     	;# 
  1354  041C                     	;# 
  1355  041D                     	;# 
  1356  041E                     	;# 
  1357  041F                     	;# 
  1358  0498                     	;# 
  1359  0498                     	;# 
  1360  0499                     	;# 
  1361  049A                     	;# 
  1362  049B                     	;# 
  1363  049B                     	;# 
  1364  049C                     	;# 
  1365  049D                     	;# 
  1366  049E                     	;# 
  1367  049F                     	;# 
  1368  0617                     	;# 
  1369  0618                     	;# 
  1370  0619                     	;# 
  1371  0619                     	;# 
  1372  061A                     	;# 
  1373  061B                     	;# 
  1374  061C                     	;# 
  1375  061C                     	;# 
  1376  061F                     	;# 
  1377  0691                     	;# 
  1378  0692                     	;# 
  1379  0693                     	;# 
  1380  0694                     	;# 
  1381  0695                     	;# 
  1382  0696                     	;# 
  1383  0697                     	;# 
  1384  0698                     	;# 
  1385  0699                     	;# 
  1386  0711                     	;# 
  1387  0712                     	;# 
  1388  0713                     	;# 
  1389  0714                     	;# 
  1390  0715                     	;# 
  1391  0716                     	;# 
  1392  0717                     	;# 
  1393  0718                     	;# 
  1394  0719                     	;# 
  1395  0891                     	;# 
  1396  0891                     	;# 
  1397  0891                     	;# 
  1398  0891                     	;# 
  1399  0891                     	;# 
  1400  0891                     	;# 
  1401  0892                     	;# 
  1402  0892                     	;# 
  1403  0892                     	;# 
  1404  0893                     	;# 
  1405  0893                     	;# 
  1406  0893                     	;# 
  1407  0893                     	;# 
  1408  0893                     	;# 
  1409  0893                     	;# 
  1410  0894                     	;# 
  1411  0894                     	;# 
  1412  0894                     	;# 
  1413  0895                     	;# 
  1414  0895                     	;# 
  1415  0895                     	;# 
  1416  0896                     	;# 
  1417  0896                     	;# 
  1418  0896                     	;# 
  1419  089B                     	;# 
  1420  0911                     	;# 
  1421  0912                     	;# 
  1422  0913                     	;# 
  1423  0914                     	;# 
  1424  0915                     	;# 
  1425  0916                     	;# 
  1426  0918                     	;# 
  1427  0919                     	;# 
  1428  091A                     	;# 
  1429  091B                     	;# 
  1430  091C                     	;# 
  1431  091D                     	;# 
  1432  091E                     	;# 
  1433  091F                     	;# 
  1434  0E0F                     	;# 
  1435  0E10                     	;# 
  1436  0E11                     	;# 
  1437  0E12                     	;# 
  1438  0E13                     	;# 
  1439  0E14                     	;# 
  1440  0E15                     	;# 
  1441  0E16                     	;# 
  1442  0E17                     	;# 
  1443  0E18                     	;# 
  1444  0E19                     	;# 
  1445  0E1A                     	;# 
  1446  0E1B                     	;# 
  1447  0E1C                     	;# 
  1448  0E1D                     	;# 
  1449  0E1E                     	;# 
  1450  0E1F                     	;# 
  1451  0E20                     	;# 
  1452  0E21                     	;# 
  1453  0E22                     	;# 
  1454  0E24                     	;# 
  1455  0E25                     	;# 
  1456  0E28                     	;# 
  1457  0E29                     	;# 
  1458  0E2A                     	;# 
  1459  0E2B                     	;# 
  1460  0E2C                     	;# 
  1461  0E2D                     	;# 
  1462  0E2E                     	;# 
  1463  0E2F                     	;# 
  1464  0E90                     	;# 
  1465  0E91                     	;# 
  1466  0E92                     	;# 
  1467  0E94                     	;# 
  1468  0E95                     	;# 
  1469  0E9C                     	;# 
  1470  0E9D                     	;# 
  1471  0E9E                     	;# 
  1472  0E9F                     	;# 
  1473  0EA0                     	;# 
  1474  0EA1                     	;# 
  1475  0EA2                     	;# 
  1476  0EA3                     	;# 
  1477  0EA4                     	;# 
  1478  0EA5                     	;# 
  1479  0EA6                     	;# 
  1480  0EA7                     	;# 
  1481  0F0F                     	;# 
  1482  0F10                     	;# 
  1483  0F11                     	;# 
  1484  0F12                     	;# 
  1485  0F13                     	;# 
  1486  0F14                     	;# 
  1487  0F15                     	;# 
  1488  0F16                     	;# 
  1489  0F17                     	;# 
  1490  0F18                     	;# 
  1491  0F19                     	;# 
  1492  0F1A                     	;# 
  1493  0F1B                     	;# 
  1494  0F1C                     	;# 
  1495  0F1D                     	;# 
  1496  0F1E                     	;# 
  1497  0F1F                     	;# 
  1498  0F20                     	;# 
  1499  0F21                     	;# 
  1500  0F22                     	;# 
  1501  0F23                     	;# 
  1502  0F24                     	;# 
  1503  0F25                     	;# 
  1504  0F26                     	;# 
  1505  0F27                     	;# 
  1506  0F28                     	;# 
  1507  0F29                     	;# 
  1508  0F2A                     	;# 
  1509  0F2B                     	;# 
  1510  0F2C                     	;# 
  1511  0F2D                     	;# 
  1512  0F2E                     	;# 
  1513  0F2F                     	;# 
  1514  0F30                     	;# 
  1515  0F31                     	;# 
  1516  0F32                     	;# 
  1517  0F33                     	;# 
  1518  0F34                     	;# 
  1519  0F35                     	;# 
  1520  0F36                     	;# 
  1521  0F37                     	;# 
  1522  0FE4                     	;# 
  1523  0FE5                     	;# 
  1524  0FE6                     	;# 
  1525  0FE7                     	;# 
  1526  0FE8                     	;# 
  1527  0FE9                     	;# 
  1528  0FEA                     	;# 
  1529  0FEB                     	;# 
  1530  0FED                     	;# 
  1531  0FEE                     	;# 
  1532  0FEF                     	;# 
  1533  0000                     	;# 
  1534  0001                     	;# 
  1535  0002                     	;# 
  1536  0003                     	;# 
  1537  0004                     	;# 
  1538  0005                     	;# 
  1539  0006                     	;# 
  1540  0007                     	;# 
  1541  0008                     	;# 
  1542  0009                     	;# 
  1543  000A                     	;# 
  1544  000B                     	;# 
  1545  000C                     	;# 
  1546  000D                     	;# 
  1547  000E                     	;# 
  1548  0010                     	;# 
  1549  0011                     	;# 
  1550  0012                     	;# 
  1551  0013                     	;# 
  1552  0014                     	;# 
  1553  0015                     	;# 
  1554  0015                     	;# 
  1555  0016                     	;# 
  1556  0016                     	;# 
  1557  0017                     	;# 
  1558  0018                     	;# 
  1559  0019                     	;# 
  1560  0019                     	;# 
  1561  001A                     	;# 
  1562  001B                     	;# 
  1563  001C                     	;# 
  1564  001D                     	;# 
  1565  001E                     	;# 
  1566  001F                     	;# 
  1567  008C                     	;# 
  1568  008D                     	;# 
  1569  008E                     	;# 
  1570  0090                     	;# 
  1571  0091                     	;# 
  1572  0092                     	;# 
  1573  0093                     	;# 
  1574  0094                     	;# 
  1575  0097                     	;# 
  1576  009B                     	;# 
  1577  009B                     	;# 
  1578  009C                     	;# 
  1579  009D                     	;# 
  1580  009E                     	;# 
  1581  009F                     	;# 
  1582  010C                     	;# 
  1583  010D                     	;# 
  1584  010E                     	;# 
  1585  0111                     	;# 
  1586  0112                     	;# 
  1587  0113                     	;# 
  1588  0114                     	;# 
  1589  0115                     	;# 
  1590  0116                     	;# 
  1591  0117                     	;# 
  1592  0118                     	;# 
  1593  0119                     	;# 
  1594  018C                     	;# 
  1595  018D                     	;# 
  1596  018E                     	;# 
  1597  0197                     	;# 
  1598  0199                     	;# 
  1599  0199                     	;# 
  1600  0199                     	;# 
  1601  019A                     	;# 
  1602  019A                     	;# 
  1603  019A                     	;# 
  1604  019B                     	;# 
  1605  019B                     	;# 
  1606  019B                     	;# 
  1607  019B                     	;# 
  1608  019B                     	;# 
  1609  019C                     	;# 
  1610  019C                     	;# 
  1611  019C                     	;# 
  1612  019D                     	;# 
  1613  019D                     	;# 
  1614  019D                     	;# 
  1615  019E                     	;# 
  1616  019E                     	;# 
  1617  019E                     	;# 
  1618  019F                     	;# 
  1619  019F                     	;# 
  1620  019F                     	;# 
  1621  019F                     	;# 
  1622  019F                     	;# 
  1623  020C                     	;# 
  1624  020D                     	;# 
  1625  020E                     	;# 
  1626  0211                     	;# 
  1627  0211                     	;# 
  1628  0212                     	;# 
  1629  0212                     	;# 
  1630  0213                     	;# 
  1631  0213                     	;# 
  1632  0214                     	;# 
  1633  0214                     	;# 
  1634  0215                     	;# 
  1635  0215                     	;# 
  1636  0215                     	;# 
  1637  0215                     	;# 
  1638  0216                     	;# 
  1639  0216                     	;# 
  1640  0217                     	;# 
  1641  0217                     	;# 
  1642  0219                     	;# 
  1643  021A                     	;# 
  1644  021B                     	;# 
  1645  021C                     	;# 
  1646  021D                     	;# 
  1647  021D                     	;# 
  1648  021E                     	;# 
  1649  021F                     	;# 
  1650  028C                     	;# 
  1651  028D                     	;# 
  1652  028E                     	;# 
  1653  0291                     	;# 
  1654  0291                     	;# 
  1655  0292                     	;# 
  1656  0293                     	;# 
  1657  0294                     	;# 
  1658  0295                     	;# 
  1659  0295                     	;# 
  1660  0296                     	;# 
  1661  0297                     	;# 
  1662  0298                     	;# 
  1663  029F                     	;# 
  1664  030C                     	;# 
  1665  030D                     	;# 
  1666  030E                     	;# 
  1667  0311                     	;# 
  1668  0311                     	;# 
  1669  0312                     	;# 
  1670  0313                     	;# 
  1671  0314                     	;# 
  1672  0315                     	;# 
  1673  0315                     	;# 
  1674  0316                     	;# 
  1675  0317                     	;# 
  1676  0318                     	;# 
  1677  038C                     	;# 
  1678  038D                     	;# 
  1679  038E                     	;# 
  1680  0391                     	;# 
  1681  0392                     	;# 
  1682  0393                     	;# 
  1683  0394                     	;# 
  1684  0395                     	;# 
  1685  0396                     	;# 
  1686  0397                     	;# 
  1687  0398                     	;# 
  1688  0399                     	;# 
  1689  039A                     	;# 
  1690  039C                     	;# 
  1691  039D                     	;# 
  1692  039E                     	;# 
  1693  039F                     	;# 
  1694  0411                     	;# 
  1695  0411                     	;# 
  1696  0412                     	;# 
  1697  0413                     	;# 
  1698  0414                     	;# 
  1699  0415                     	;# 
  1700  0416                     	;# 
  1701  0417                     	;# 
  1702  0418                     	;# 
  1703  0418                     	;# 
  1704  0419                     	;# 
  1705  041A                     	;# 
  1706  041B                     	;# 
  1707  041C                     	;# 
  1708  041D                     	;# 
  1709  041E                     	;# 
  1710  041F                     	;# 
  1711  0498                     	;# 
  1712  0498                     	;# 
  1713  0499                     	;# 
  1714  049A                     	;# 
  1715  049B                     	;# 
  1716  049B                     	;# 
  1717  049C                     	;# 
  1718  049D                     	;# 
  1719  049E                     	;# 
  1720  049F                     	;# 
  1721  0617                     	;# 
  1722  0618                     	;# 
  1723  0619                     	;# 
  1724  0619                     	;# 
  1725  061A                     	;# 
  1726  061B                     	;# 
  1727  061C                     	;# 
  1728  061C                     	;# 
  1729  061F                     	;# 
  1730  0691                     	;# 
  1731  0692                     	;# 
  1732  0693                     	;# 
  1733  0694                     	;# 
  1734  0695                     	;# 
  1735  0696                     	;# 
  1736  0697                     	;# 
  1737  0698                     	;# 
  1738  0699                     	;# 
  1739  0711                     	;# 
  1740  0712                     	;# 
  1741  0713                     	;# 
  1742  0714                     	;# 
  1743  0715                     	;# 
  1744  0716                     	;# 
  1745  0717                     	;# 
  1746  0718                     	;# 
  1747  0719                     	;# 
  1748  0891                     	;# 
  1749  0891                     	;# 
  1750  0891                     	;# 
  1751  0891                     	;# 
  1752  0891                     	;# 
  1753  0891                     	;# 
  1754  0892                     	;# 
  1755  0892                     	;# 
  1756  0892                     	;# 
  1757  0893                     	;# 
  1758  0893                     	;# 
  1759  0893                     	;# 
  1760  0893                     	;# 
  1761  0893                     	;# 
  1762  0893                     	;# 
  1763  0894                     	;# 
  1764  0894                     	;# 
  1765  0894                     	;# 
  1766  0895                     	;# 
  1767  0895                     	;# 
  1768  0895                     	;# 
  1769  0896                     	;# 
  1770  0896                     	;# 
  1771  0896                     	;# 
  1772  089B                     	;# 
  1773  0911                     	;# 
  1774  0912                     	;# 
  1775  0913                     	;# 
  1776  0914                     	;# 
  1777  0915                     	;# 
  1778  0916                     	;# 
  1779  0918                     	;# 
  1780  0919                     	;# 
  1781  091A                     	;# 
  1782  091B                     	;# 
  1783  091C                     	;# 
  1784  091D                     	;# 
  1785  091E                     	;# 
  1786  091F                     	;# 
  1787  0E0F                     	;# 
  1788  0E10                     	;# 
  1789  0E11                     	;# 
  1790  0E12                     	;# 
  1791  0E13                     	;# 
  1792  0E14                     	;# 
  1793  0E15                     	;# 
  1794  0E16                     	;# 
  1795  0E17                     	;# 
  1796  0E18                     	;# 
  1797  0E19                     	;# 
  1798  0E1A                     	;# 
  1799  0E1B                     	;# 
  1800  0E1C                     	;# 
  1801  0E1D                     	;# 
  1802  0E1E                     	;# 
  1803  0E1F                     	;# 
  1804  0E20                     	;# 
  1805  0E21                     	;# 
  1806  0E22                     	;# 
  1807  0E24                     	;# 
  1808  0E25                     	;# 
  1809  0E28                     	;# 
  1810  0E29                     	;# 
  1811  0E2A                     	;# 
  1812  0E2B                     	;# 
  1813  0E2C                     	;# 
  1814  0E2D                     	;# 
  1815  0E2E                     	;# 
  1816  0E2F                     	;# 
  1817  0E90                     	;# 
  1818  0E91                     	;# 
  1819  0E92                     	;# 
  1820  0E94                     	;# 
  1821  0E95                     	;# 
  1822  0E9C                     	;# 
  1823  0E9D                     	;# 
  1824  0E9E                     	;# 
  1825  0E9F                     	;# 
  1826  0EA0                     	;# 
  1827  0EA1                     	;# 
  1828  0EA2                     	;# 
  1829  0EA3                     	;# 
  1830  0EA4                     	;# 
  1831  0EA5                     	;# 
  1832  0EA6                     	;# 
  1833  0EA7                     	;# 
  1834  0F0F                     	;# 
  1835  0F10                     	;# 
  1836  0F11                     	;# 
  1837  0F12                     	;# 
  1838  0F13                     	;# 
  1839  0F14                     	;# 
  1840  0F15                     	;# 
  1841  0F16                     	;# 
  1842  0F17                     	;# 
  1843  0F18                     	;# 
  1844  0F19                     	;# 
  1845  0F1A                     	;# 
  1846  0F1B                     	;# 
  1847  0F1C                     	;# 
  1848  0F1D                     	;# 
  1849  0F1E                     	;# 
  1850  0F1F                     	;# 
  1851  0F20                     	;# 
  1852  0F21                     	;# 
  1853  0F22                     	;# 
  1854  0F23                     	;# 
  1855  0F24                     	;# 
  1856  0F25                     	;# 
  1857  0F26                     	;# 
  1858  0F27                     	;# 
  1859  0F28                     	;# 
  1860  0F29                     	;# 
  1861  0F2A                     	;# 
  1862  0F2B                     	;# 
  1863  0F2C                     	;# 
  1864  0F2D                     	;# 
  1865  0F2E                     	;# 
  1866  0F2F                     	;# 
  1867  0F30                     	;# 
  1868  0F31                     	;# 
  1869  0F32                     	;# 
  1870  0F33                     	;# 
  1871  0F34                     	;# 
  1872  0F35                     	;# 
  1873  0F36                     	;# 
  1874  0F37                     	;# 
  1875  0FE4                     	;# 
  1876  0FE5                     	;# 
  1877  0FE6                     	;# 
  1878  0FE7                     	;# 
  1879  0FE8                     	;# 
  1880  0FE9                     	;# 
  1881  0FEA                     	;# 
  1882  0FEB                     	;# 
  1883  0FED                     	;# 
  1884  0FEE                     	;# 
  1885  0FEF                     	;# 
  1886  0000                     	;# 
  1887  0001                     	;# 
  1888  0002                     	;# 
  1889  0003                     	;# 
  1890  0004                     	;# 
  1891  0005                     	;# 
  1892  0006                     	;# 
  1893  0007                     	;# 
  1894  0008                     	;# 
  1895  0009                     	;# 
  1896  000A                     	;# 
  1897  000B                     	;# 
  1898  000C                     	;# 
  1899  000D                     	;# 
  1900  000E                     	;# 
  1901  0010                     	;# 
  1902  0011                     	;# 
  1903  0012                     	;# 
  1904  0013                     	;# 
  1905  0014                     	;# 
  1906  0015                     	;# 
  1907  0015                     	;# 
  1908  0016                     	;# 
  1909  0016                     	;# 
  1910  0017                     	;# 
  1911  0018                     	;# 
  1912  0019                     	;# 
  1913  0019                     	;# 
  1914  001A                     	;# 
  1915  001B                     	;# 
  1916  001C                     	;# 
  1917  001D                     	;# 
  1918  001E                     	;# 
  1919  001F                     	;# 
  1920  008C                     	;# 
  1921  008D                     	;# 
  1922  008E                     	;# 
  1923  0090                     	;# 
  1924  0091                     	;# 
  1925  0092                     	;# 
  1926  0093                     	;# 
  1927  0094                     	;# 
  1928  0097                     	;# 
  1929  009B                     	;# 
  1930  009B                     	;# 
  1931  009C                     	;# 
  1932  009D                     	;# 
  1933  009E                     	;# 
  1934  009F                     	;# 
  1935  010C                     	;# 
  1936  010D                     	;# 
  1937  010E                     	;# 
  1938  0111                     	;# 
  1939  0112                     	;# 
  1940  0113                     	;# 
  1941  0114                     	;# 
  1942  0115                     	;# 
  1943  0116                     	;# 
  1944  0117                     	;# 
  1945  0118                     	;# 
  1946  0119                     	;# 
  1947  018C                     	;# 
  1948  018D                     	;# 
  1949  018E                     	;# 
  1950  0197                     	;# 
  1951  0199                     	;# 
  1952  0199                     	;# 
  1953  0199                     	;# 
  1954  019A                     	;# 
  1955  019A                     	;# 
  1956  019A                     	;# 
  1957  019B                     	;# 
  1958  019B                     	;# 
  1959  019B                     	;# 
  1960  019B                     	;# 
  1961  019B                     	;# 
  1962  019C                     	;# 
  1963  019C                     	;# 
  1964  019C                     	;# 
  1965  019D                     	;# 
  1966  019D                     	;# 
  1967  019D                     	;# 
  1968  019E                     	;# 
  1969  019E                     	;# 
  1970  019E                     	;# 
  1971  019F                     	;# 
  1972  019F                     	;# 
  1973  019F                     	;# 
  1974  019F                     	;# 
  1975  019F                     	;# 
  1976  020C                     	;# 
  1977  020D                     	;# 
  1978  020E                     	;# 
  1979  0211                     	;# 
  1980  0211                     	;# 
  1981  0212                     	;# 
  1982  0212                     	;# 
  1983  0213                     	;# 
  1984  0213                     	;# 
  1985  0214                     	;# 
  1986  0214                     	;# 
  1987  0215                     	;# 
  1988  0215                     	;# 
  1989  0215                     	;# 
  1990  0215                     	;# 
  1991  0216                     	;# 
  1992  0216                     	;# 
  1993  0217                     	;# 
  1994  0217                     	;# 
  1995  0219                     	;# 
  1996  021A                     	;# 
  1997  021B                     	;# 
  1998  021C                     	;# 
  1999  021D                     	;# 
  2000  021D                     	;# 
  2001  021E                     	;# 
  2002  021F                     	;# 
  2003  028C                     	;# 
  2004  028D                     	;# 
  2005  028E                     	;# 
  2006  0291                     	;# 
  2007  0291                     	;# 
  2008  0292                     	;# 
  2009  0293                     	;# 
  2010  0294                     	;# 
  2011  0295                     	;# 
  2012  0295                     	;# 
  2013  0296                     	;# 
  2014  0297                     	;# 
  2015  0298                     	;# 
  2016  029F                     	;# 
  2017  030C                     	;# 
  2018  030D                     	;# 
  2019  030E                     	;# 
  2020  0311                     	;# 
  2021  0311                     	;# 
  2022  0312                     	;# 
  2023  0313                     	;# 
  2024  0314                     	;# 
  2025  0315                     	;# 
  2026  0315                     	;# 
  2027  0316                     	;# 
  2028  0317                     	;# 
  2029  0318                     	;# 
  2030  038C                     	;# 
  2031  038D                     	;# 
  2032  038E                     	;# 
  2033  0391                     	;# 
  2034  0392                     	;# 
  2035  0393                     	;# 
  2036  0394                     	;# 
  2037  0395                     	;# 
  2038  0396                     	;# 
  2039  0397                     	;# 
  2040  0398                     	;# 
  2041  0399                     	;# 
  2042  039A                     	;# 
  2043  039C                     	;# 
  2044  039D                     	;# 
  2045  039E                     	;# 
  2046  039F                     	;# 
  2047  0411                     	;# 
  2048  0411                     	;# 
  2049  0412                     	;# 
  2050  0413                     	;# 
  2051  0414                     	;# 
  2052  0415                     	;# 
  2053  0416                     	;# 
  2054  0417                     	;# 
  2055  0418                     	;# 
  2056  0418                     	;# 
  2057  0419                     	;# 
  2058  041A                     	;# 
  2059  041B                     	;# 
  2060  041C                     	;# 
  2061  041D                     	;# 
  2062  041E                     	;# 
  2063  041F                     	;# 
  2064  0498                     	;# 
  2065  0498                     	;# 
  2066  0499                     	;# 
  2067  049A                     	;# 
  2068  049B                     	;# 
  2069  049B                     	;# 
  2070  049C                     	;# 
  2071  049D                     	;# 
  2072  049E                     	;# 
  2073  049F                     	;# 
  2074  0617                     	;# 
  2075  0618                     	;# 
  2076  0619                     	;# 
  2077  0619                     	;# 
  2078  061A                     	;# 
  2079  061B                     	;# 
  2080  061C                     	;# 
  2081  061C                     	;# 
  2082  061F                     	;# 
  2083  0691                     	;# 
  2084  0692                     	;# 
  2085  0693                     	;# 
  2086  0694                     	;# 
  2087  0695                     	;# 
  2088  0696                     	;# 
  2089  0697                     	;# 
  2090  0698                     	;# 
  2091  0699                     	;# 
  2092  0711                     	;# 
  2093  0712                     	;# 
  2094  0713                     	;# 
  2095  0714                     	;# 
  2096  0715                     	;# 
  2097  0716                     	;# 
  2098  0717                     	;# 
  2099  0718                     	;# 
  2100  0719                     	;# 
  2101  0891                     	;# 
  2102  0891                     	;# 
  2103  0891                     	;# 
  2104  0891                     	;# 
  2105  0891                     	;# 
  2106  0891                     	;# 
  2107  0892                     	;# 
  2108  0892                     	;# 
  2109  0892                     	;# 
  2110  0893                     	;# 
  2111  0893                     	;# 
  2112  0893                     	;# 
  2113  0893                     	;# 
  2114  0893                     	;# 
  2115  0893                     	;# 
  2116  0894                     	;# 
  2117  0894                     	;# 
  2118  0894                     	;# 
  2119  0895                     	;# 
  2120  0895                     	;# 
  2121  0895                     	;# 
  2122  0896                     	;# 
  2123  0896                     	;# 
  2124  0896                     	;# 
  2125  089B                     	;# 
  2126  0911                     	;# 
  2127  0912                     	;# 
  2128  0913                     	;# 
  2129  0914                     	;# 
  2130  0915                     	;# 
  2131  0916                     	;# 
  2132  0918                     	;# 
  2133  0919                     	;# 
  2134  091A                     	;# 
  2135  091B                     	;# 
  2136  091C                     	;# 
  2137  091D                     	;# 
  2138  091E                     	;# 
  2139  091F                     	;# 
  2140  0E0F                     	;# 
  2141  0E10                     	;# 
  2142  0E11                     	;# 
  2143  0E12                     	;# 
  2144  0E13                     	;# 
  2145  0E14                     	;# 
  2146  0E15                     	;# 
  2147  0E16                     	;# 
  2148  0E17                     	;# 
  2149  0E18                     	;# 
  2150  0E19                     	;# 
  2151  0E1A                     	;# 
  2152  0E1B                     	;# 
  2153  0E1C                     	;# 
  2154  0E1D                     	;# 
  2155  0E1E                     	;# 
  2156  0E1F                     	;# 
  2157  0E20                     	;# 
  2158  0E21                     	;# 
  2159  0E22                     	;# 
  2160  0E24                     	;# 
  2161  0E25                     	;# 
  2162  0E28                     	;# 
  2163  0E29                     	;# 
  2164  0E2A                     	;# 
  2165  0E2B                     	;# 
  2166  0E2C                     	;# 
  2167  0E2D                     	;# 
  2168  0E2E                     	;# 
  2169  0E2F                     	;# 
  2170  0E90                     	;# 
  2171  0E91                     	;# 
  2172  0E92                     	;# 
  2173  0E94                     	;# 
  2174  0E95                     	;# 
  2175  0E9C                     	;# 
  2176  0E9D                     	;# 
  2177  0E9E                     	;# 
  2178  0E9F                     	;# 
  2179  0EA0                     	;# 
  2180  0EA1                     	;# 
  2181  0EA2                     	;# 
  2182  0EA3                     	;# 
  2183  0EA4                     	;# 
  2184  0EA5                     	;# 
  2185  0EA6                     	;# 
  2186  0EA7                     	;# 
  2187  0F0F                     	;# 
  2188  0F10                     	;# 
  2189  0F11                     	;# 
  2190  0F12                     	;# 
  2191  0F13                     	;# 
  2192  0F14                     	;# 
  2193  0F15                     	;# 
  2194  0F16                     	;# 
  2195  0F17                     	;# 
  2196  0F18                     	;# 
  2197  0F19                     	;# 
  2198  0F1A                     	;# 
  2199  0F1B                     	;# 
  2200  0F1C                     	;# 
  2201  0F1D                     	;# 
  2202  0F1E                     	;# 
  2203  0F1F                     	;# 
  2204  0F20                     	;# 
  2205  0F21                     	;# 
  2206  0F22                     	;# 
  2207  0F23                     	;# 
  2208  0F24                     	;# 
  2209  0F25                     	;# 
  2210  0F26                     	;# 
  2211  0F27                     	;# 
  2212  0F28                     	;# 
  2213  0F29                     	;# 
  2214  0F2A                     	;# 
  2215  0F2B                     	;# 
  2216  0F2C                     	;# 
  2217  0F2D                     	;# 
  2218  0F2E                     	;# 
  2219  0F2F                     	;# 
  2220  0F30                     	;# 
  2221  0F31                     	;# 
  2222  0F32                     	;# 
  2223  0F33                     	;# 
  2224  0F34                     	;# 
  2225  0F35                     	;# 
  2226  0F36                     	;# 
  2227  0F37                     	;# 
  2228  0FE4                     	;# 
  2229  0FE5                     	;# 
  2230  0FE6                     	;# 
  2231  0FE7                     	;# 
  2232  0FE8                     	;# 
  2233  0FE9                     	;# 
  2234  0FEA                     	;# 
  2235  0FEB                     	;# 
  2236  0FED                     	;# 
  2237  0FEE                     	;# 
  2238  0FEF                     	;# 
  2239  0000                     	;# 
  2240  0001                     	;# 
  2241  0002                     	;# 
  2242  0003                     	;# 
  2243  0004                     	;# 
  2244  0005                     	;# 
  2245  0006                     	;# 
  2246  0007                     	;# 
  2247  0008                     	;# 
  2248  0009                     	;# 
  2249  000A                     	;# 
  2250  000B                     	;# 
  2251  000C                     	;# 
  2252  000D                     	;# 
  2253  000E                     	;# 
  2254  0010                     	;# 
  2255  0011                     	;# 
  2256  0012                     	;# 
  2257  0013                     	;# 
  2258  0014                     	;# 
  2259  0015                     	;# 
  2260  0015                     	;# 
  2261  0016                     	;# 
  2262  0016                     	;# 
  2263  0017                     	;# 
  2264  0018                     	;# 
  2265  0019                     	;# 
  2266  0019                     	;# 
  2267  001A                     	;# 
  2268  001B                     	;# 
  2269  001C                     	;# 
  2270  001D                     	;# 
  2271  001E                     	;# 
  2272  001F                     	;# 
  2273  008C                     	;# 
  2274  008D                     	;# 
  2275  008E                     	;# 
  2276  0090                     	;# 
  2277  0091                     	;# 
  2278  0092                     	;# 
  2279  0093                     	;# 
  2280  0094                     	;# 
  2281  0097                     	;# 
  2282  009B                     	;# 
  2283  009B                     	;# 
  2284  009C                     	;# 
  2285  009D                     	;# 
  2286  009E                     	;# 
  2287  009F                     	;# 
  2288  010C                     	;# 
  2289  010D                     	;# 
  2290  010E                     	;# 
  2291  0111                     	;# 
  2292  0112                     	;# 
  2293  0113                     	;# 
  2294  0114                     	;# 
  2295  0115                     	;# 
  2296  0116                     	;# 
  2297  0117                     	;# 
  2298  0118                     	;# 
  2299  0119                     	;# 
  2300  018C                     	;# 
  2301  018D                     	;# 
  2302  018E                     	;# 
  2303  0197                     	;# 
  2304  0199                     	;# 
  2305  0199                     	;# 
  2306  0199                     	;# 
  2307  019A                     	;# 
  2308  019A                     	;# 
  2309  019A                     	;# 
  2310  019B                     	;# 
  2311  019B                     	;# 
  2312  019B                     	;# 
  2313  019B                     	;# 
  2314  019B                     	;# 
  2315  019C                     	;# 
  2316  019C                     	;# 
  2317  019C                     	;# 
  2318  019D                     	;# 
  2319  019D                     	;# 
  2320  019D                     	;# 
  2321  019E                     	;# 
  2322  019E                     	;# 
  2323  019E                     	;# 
  2324  019F                     	;# 
  2325  019F                     	;# 
  2326  019F                     	;# 
  2327  019F                     	;# 
  2328  019F                     	;# 
  2329  020C                     	;# 
  2330  020D                     	;# 
  2331  020E                     	;# 
  2332  0211                     	;# 
  2333  0211                     	;# 
  2334  0212                     	;# 
  2335  0212                     	;# 
  2336  0213                     	;# 
  2337  0213                     	;# 
  2338  0214                     	;# 
  2339  0214                     	;# 
  2340  0215                     	;# 
  2341  0215                     	;# 
  2342  0215                     	;# 
  2343  0215                     	;# 
  2344  0216                     	;# 
  2345  0216                     	;# 
  2346  0217                     	;# 
  2347  0217                     	;# 
  2348  0219                     	;# 
  2349  021A                     	;# 
  2350  021B                     	;# 
  2351  021C                     	;# 
  2352  021D                     	;# 
  2353  021D                     	;# 
  2354  021E                     	;# 
  2355  021F                     	;# 
  2356  028C                     	;# 
  2357  028D                     	;# 
  2358  028E                     	;# 
  2359  0291                     	;# 
  2360  0291                     	;# 
  2361  0292                     	;# 
  2362  0293                     	;# 
  2363  0294                     	;# 
  2364  0295                     	;# 
  2365  0295                     	;# 
  2366  0296                     	;# 
  2367  0297                     	;# 
  2368  0298                     	;# 
  2369  029F                     	;# 
  2370  030C                     	;# 
  2371  030D                     	;# 
  2372  030E                     	;# 
  2373  0311                     	;# 
  2374  0311                     	;# 
  2375  0312                     	;# 
  2376  0313                     	;# 
  2377  0314                     	;# 
  2378  0315                     	;# 
  2379  0315                     	;# 
  2380  0316                     	;# 
  2381  0317                     	;# 
  2382  0318                     	;# 
  2383  038C                     	;# 
  2384  038D                     	;# 
  2385  038E                     	;# 
  2386  0391                     	;# 
  2387  0392                     	;# 
  2388  0393                     	;# 
  2389  0394                     	;# 
  2390  0395                     	;# 
  2391  0396                     	;# 
  2392  0397                     	;# 
  2393  0398                     	;# 
  2394  0399                     	;# 
  2395  039A                     	;# 
  2396  039C                     	;# 
  2397  039D                     	;# 
  2398  039E                     	;# 
  2399  039F                     	;# 
  2400  0411                     	;# 
  2401  0411                     	;# 
  2402  0412                     	;# 
  2403  0413                     	;# 
  2404  0414                     	;# 
  2405  0415                     	;# 
  2406  0416                     	;# 
  2407  0417                     	;# 
  2408  0418                     	;# 
  2409  0418                     	;# 
  2410  0419                     	;# 
  2411  041A                     	;# 
  2412  041B                     	;# 
  2413  041C                     	;# 
  2414  041D                     	;# 
  2415  041E                     	;# 
  2416  041F                     	;# 
  2417  0498                     	;# 
  2418  0498                     	;# 
  2419  0499                     	;# 
  2420  049A                     	;# 
  2421  049B                     	;# 
  2422  049B                     	;# 
  2423  049C                     	;# 
  2424  049D                     	;# 
  2425  049E                     	;# 
  2426  049F                     	;# 
  2427  0617                     	;# 
  2428  0618                     	;# 
  2429  0619                     	;# 
  2430  0619                     	;# 
  2431  061A                     	;# 
  2432  061B                     	;# 
  2433  061C                     	;# 
  2434  061C                     	;# 
  2435  061F                     	;# 
  2436  0691                     	;# 
  2437  0692                     	;# 
  2438  0693                     	;# 
  2439  0694                     	;# 
  2440  0695                     	;# 
  2441  0696                     	;# 
  2442  0697                     	;# 
  2443  0698                     	;# 
  2444  0699                     	;# 
  2445  0711                     	;# 
  2446  0712                     	;# 
  2447  0713                     	;# 
  2448  0714                     	;# 
  2449  0715                     	;# 
  2450  0716                     	;# 
  2451  0717                     	;# 
  2452  0718                     	;# 
  2453  0719                     	;# 
  2454  0891                     	;# 
  2455  0891                     	;# 
  2456  0891                     	;# 
  2457  0891                     	;# 
  2458  0891                     	;# 
  2459  0891                     	;# 
  2460  0892                     	;# 
  2461  0892                     	;# 
  2462  0892                     	;# 
  2463  0893                     	;# 
  2464  0893                     	;# 
  2465  0893                     	;# 
  2466  0893                     	;# 
  2467  0893                     	;# 
  2468  0893                     	;# 
  2469  0894                     	;# 
  2470  0894                     	;# 
  2471  0894                     	;# 
  2472  0895                     	;# 
  2473  0895                     	;# 
  2474  0895                     	;# 
  2475  0896                     	;# 
  2476  0896                     	;# 
  2477  0896                     	;# 
  2478  089B                     	;# 
  2479  0911                     	;# 
  2480  0912                     	;# 
  2481  0913                     	;# 
  2482  0914                     	;# 
  2483  0915                     	;# 
  2484  0916                     	;# 
  2485  0918                     	;# 
  2486  0919                     	;# 
  2487  091A                     	;# 
  2488  091B                     	;# 
  2489  091C                     	;# 
  2490  091D                     	;# 
  2491  091E                     	;# 
  2492  091F                     	;# 
  2493  0E0F                     	;# 
  2494  0E10                     	;# 
  2495  0E11                     	;# 
  2496  0E12                     	;# 
  2497  0E13                     	;# 
  2498  0E14                     	;# 
  2499  0E15                     	;# 
  2500  0E16                     	;# 
  2501  0E17                     	;# 
  2502  0E18                     	;# 
  2503  0E19                     	;# 
  2504  0E1A                     	;# 
  2505  0E1B                     	;# 
  2506  0E1C                     	;# 
  2507  0E1D                     	;# 
  2508  0E1E                     	;# 
  2509  0E1F                     	;# 
  2510  0E20                     	;# 
  2511  0E21                     	;# 
  2512  0E22                     	;# 
  2513  0E24                     	;# 
  2514  0E25                     	;# 
  2515  0E28                     	;# 
  2516  0E29                     	;# 
  2517  0E2A                     	;# 
  2518  0E2B                     	;# 
  2519  0E2C                     	;# 
  2520  0E2D                     	;# 
  2521  0E2E                     	;# 
  2522  0E2F                     	;# 
  2523  0E90                     	;# 
  2524  0E91                     	;# 
  2525  0E92                     	;# 
  2526  0E94                     	;# 
  2527  0E95                     	;# 
  2528  0E9C                     	;# 
  2529  0E9D                     	;# 
  2530  0E9E                     	;# 
  2531  0E9F                     	;# 
  2532  0EA0                     	;# 
  2533  0EA1                     	;# 
  2534  0EA2                     	;# 
  2535  0EA3                     	;# 
  2536  0EA4                     	;# 
  2537  0EA5                     	;# 
  2538  0EA6                     	;# 
  2539  0EA7                     	;# 
  2540  0F0F                     	;# 
  2541  0F10                     	;# 
  2542  0F11                     	;# 
  2543  0F12                     	;# 
  2544  0F13                     	;# 
  2545  0F14                     	;# 
  2546  0F15                     	;# 
  2547  0F16                     	;# 
  2548  0F17                     	;# 
  2549  0F18                     	;# 
  2550  0F19                     	;# 
  2551  0F1A                     	;# 
  2552  0F1B                     	;# 
  2553  0F1C                     	;# 
  2554  0F1D                     	;# 
  2555  0F1E                     	;# 
  2556  0F1F                     	;# 
  2557  0F20                     	;# 
  2558  0F21                     	;# 
  2559  0F22                     	;# 
  2560  0F23                     	;# 
  2561  0F24                     	;# 
  2562  0F25                     	;# 
  2563  0F26                     	;# 
  2564  0F27                     	;# 
  2565  0F28                     	;# 
  2566  0F29                     	;# 
  2567  0F2A                     	;# 
  2568  0F2B                     	;# 
  2569  0F2C                     	;# 
  2570  0F2D                     	;# 
  2571  0F2E                     	;# 
  2572  0F2F                     	;# 
  2573  0F30                     	;# 
  2574  0F31                     	;# 
  2575  0F32                     	;# 
  2576  0F33                     	;# 
  2577  0F34                     	;# 
  2578  0F35                     	;# 
  2579  0F36                     	;# 
  2580  0F37                     	;# 
  2581  0FE4                     	;# 
  2582  0FE5                     	;# 
  2583  0FE6                     	;# 
  2584  0FE7                     	;# 
  2585  0FE8                     	;# 
  2586  0FE9                     	;# 
  2587  0FEA                     	;# 
  2588  0FEB                     	;# 
  2589  0FED                     	;# 
  2590  0FEE                     	;# 
  2591  0FEF                     	;# 
  2592  0000                     	;# 
  2593  0001                     	;# 
  2594  0002                     	;# 
  2595  0003                     	;# 
  2596  0004                     	;# 
  2597  0005                     	;# 
  2598  0006                     	;# 
  2599  0007                     	;# 
  2600  0008                     	;# 
  2601  0009                     	;# 
  2602  000A                     	;# 
  2603  000B                     	;# 
  2604  000C                     	;# 
  2605  000D                     	;# 
  2606  000E                     	;# 
  2607  0010                     	;# 
  2608  0011                     	;# 
  2609  0012                     	;# 
  2610  0013                     	;# 
  2611  0014                     	;# 
  2612  0015                     	;# 
  2613  0015                     	;# 
  2614  0016                     	;# 
  2615  0016                     	;# 
  2616  0017                     	;# 
  2617  0018                     	;# 
  2618  0019                     	;# 
  2619  0019                     	;# 
  2620  001A                     	;# 
  2621  001B                     	;# 
  2622  001C                     	;# 
  2623  001D                     	;# 
  2624  001E                     	;# 
  2625  001F                     	;# 
  2626  008C                     	;# 
  2627  008D                     	;# 
  2628  008E                     	;# 
  2629  0090                     	;# 
  2630  0091                     	;# 
  2631  0092                     	;# 
  2632  0093                     	;# 
  2633  0094                     	;# 
  2634  0097                     	;# 
  2635  009B                     	;# 
  2636  009B                     	;# 
  2637  009C                     	;# 
  2638  009D                     	;# 
  2639  009E                     	;# 
  2640  009F                     	;# 
  2641  010C                     	;# 
  2642  010D                     	;# 
  2643  010E                     	;# 
  2644  0111                     	;# 
  2645  0112                     	;# 
  2646  0113                     	;# 
  2647  0114                     	;# 
  2648  0115                     	;# 
  2649  0116                     	;# 
  2650  0117                     	;# 
  2651  0118                     	;# 
  2652  0119                     	;# 
  2653  018C                     	;# 
  2654  018D                     	;# 
  2655  018E                     	;# 
  2656  0197                     	;# 
  2657  0199                     	;# 
  2658  0199                     	;# 
  2659  0199                     	;# 
  2660  019A                     	;# 
  2661  019A                     	;# 
  2662  019A                     	;# 
  2663  019B                     	;# 
  2664  019B                     	;# 
  2665  019B                     	;# 
  2666  019B                     	;# 
  2667  019B                     	;# 
  2668  019C                     	;# 
  2669  019C                     	;# 
  2670  019C                     	;# 
  2671  019D                     	;# 
  2672  019D                     	;# 
  2673  019D                     	;# 
  2674  019E                     	;# 
  2675  019E                     	;# 
  2676  019E                     	;# 
  2677  019F                     	;# 
  2678  019F                     	;# 
  2679  019F                     	;# 
  2680  019F                     	;# 
  2681  019F                     	;# 
  2682  020C                     	;# 
  2683  020D                     	;# 
  2684  020E                     	;# 
  2685  0211                     	;# 
  2686  0211                     	;# 
  2687  0212                     	;# 
  2688  0212                     	;# 
  2689  0213                     	;# 
  2690  0213                     	;# 
  2691  0214                     	;# 
  2692  0214                     	;# 
  2693  0215                     	;# 
  2694  0215                     	;# 
  2695  0215                     	;# 
  2696  0215                     	;# 
  2697  0216                     	;# 
  2698  0216                     	;# 
  2699  0217                     	;# 
  2700  0217                     	;# 
  2701  0219                     	;# 
  2702  021A                     	;# 
  2703  021B                     	;# 
  2704  021C                     	;# 
  2705  021D                     	;# 
  2706  021D                     	;# 
  2707  021E                     	;# 
  2708  021F                     	;# 
  2709  028C                     	;# 
  2710  028D                     	;# 
  2711  028E                     	;# 
  2712  0291                     	;# 
  2713  0291                     	;# 
  2714  0292                     	;# 
  2715  0293                     	;# 
  2716  0294                     	;# 
  2717  0295                     	;# 
  2718  0295                     	;# 
  2719  0296                     	;# 
  2720  0297                     	;# 
  2721  0298                     	;# 
  2722  029F                     	;# 
  2723  030C                     	;# 
  2724  030D                     	;# 
  2725  030E                     	;# 
  2726  0311                     	;# 
  2727  0311                     	;# 
  2728  0312                     	;# 
  2729  0313                     	;# 
  2730  0314                     	;# 
  2731  0315                     	;# 
  2732  0315                     	;# 
  2733  0316                     	;# 
  2734  0317                     	;# 
  2735  0318                     	;# 
  2736  038C                     	;# 
  2737  038D                     	;# 
  2738  038E                     	;# 
  2739  0391                     	;# 
  2740  0392                     	;# 
  2741  0393                     	;# 
  2742  0394                     	;# 
  2743  0395                     	;# 
  2744  0396                     	;# 
  2745  0397                     	;# 
  2746  0398                     	;# 
  2747  0399                     	;# 
  2748  039A                     	;# 
  2749  039C                     	;# 
  2750  039D                     	;# 
  2751  039E                     	;# 
  2752  039F                     	;# 
  2753  0411                     	;# 
  2754  0411                     	;# 
  2755  0412                     	;# 
  2756  0413                     	;# 
  2757  0414                     	;# 
  2758  0415                     	;# 
  2759  0416                     	;# 
  2760  0417                     	;# 
  2761  0418                     	;# 
  2762  0418                     	;# 
  2763  0419                     	;# 
  2764  041A                     	;# 
  2765  041B                     	;# 
  2766  041C                     	;# 
  2767  041D                     	;# 
  2768  041E                     	;# 
  2769  041F                     	;# 
  2770  0498                     	;# 
  2771  0498                     	;# 
  2772  0499                     	;# 
  2773  049A                     	;# 
  2774  049B                     	;# 
  2775  049B                     	;# 
  2776  049C                     	;# 
  2777  049D                     	;# 
  2778  049E                     	;# 
  2779  049F                     	;# 
  2780  0617                     	;# 
  2781  0618                     	;# 
  2782  0619                     	;# 
  2783  0619                     	;# 
  2784  061A                     	;# 
  2785  061B                     	;# 
  2786  061C                     	;# 
  2787  061C                     	;# 
  2788  061F                     	;# 
  2789  0691                     	;# 
  2790  0692                     	;# 
  2791  0693                     	;# 
  2792  0694                     	;# 
  2793  0695                     	;# 
  2794  0696                     	;# 
  2795  0697                     	;# 
  2796  0698                     	;# 
  2797  0699                     	;# 
  2798  0711                     	;# 
  2799  0712                     	;# 
  2800  0713                     	;# 
  2801  0714                     	;# 
  2802  0715                     	;# 
  2803  0716                     	;# 
  2804  0717                     	;# 
  2805  0718                     	;# 
  2806  0719                     	;# 
  2807  0891                     	;# 
  2808  0891                     	;# 
  2809  0891                     	;# 
  2810  0891                     	;# 
  2811  0891                     	;# 
  2812  0891                     	;# 
  2813  0892                     	;# 
  2814  0892                     	;# 
  2815  0892                     	;# 
  2816  0893                     	;# 
  2817  0893                     	;# 
  2818  0893                     	;# 
  2819  0893                     	;# 
  2820  0893                     	;# 
  2821  0893                     	;# 
  2822  0894                     	;# 
  2823  0894                     	;# 
  2824  0894                     	;# 
  2825  0895                     	;# 
  2826  0895                     	;# 
  2827  0895                     	;# 
  2828  0896                     	;# 
  2829  0896                     	;# 
  2830  0896                     	;# 
  2831  089B                     	;# 
  2832  0911                     	;# 
  2833  0912                     	;# 
  2834  0913                     	;# 
  2835  0914                     	;# 
  2836  0915                     	;# 
  2837  0916                     	;# 
  2838  0918                     	;# 
  2839  0919                     	;# 
  2840  091A                     	;# 
  2841  091B                     	;# 
  2842  091C                     	;# 
  2843  091D                     	;# 
  2844  091E                     	;# 
  2845  091F                     	;# 
  2846  0E0F                     	;# 
  2847  0E10                     	;# 
  2848  0E11                     	;# 
  2849  0E12                     	;# 
  2850  0E13                     	;# 
  2851  0E14                     	;# 
  2852  0E15                     	;# 
  2853  0E16                     	;# 
  2854  0E17                     	;# 
  2855  0E18                     	;# 
  2856  0E19                     	;# 
  2857  0E1A                     	;# 
  2858  0E1B                     	;# 
  2859  0E1C                     	;# 
  2860  0E1D                     	;# 
  2861  0E1E                     	;# 
  2862  0E1F                     	;# 
  2863  0E20                     	;# 
  2864  0E21                     	;# 
  2865  0E22                     	;# 
  2866  0E24                     	;# 
  2867  0E25                     	;# 
  2868  0E28                     	;# 
  2869  0E29                     	;# 
  2870  0E2A                     	;# 
  2871  0E2B                     	;# 
  2872  0E2C                     	;# 
  2873  0E2D                     	;# 
  2874  0E2E                     	;# 
  2875  0E2F                     	;# 
  2876  0E90                     	;# 
  2877  0E91                     	;# 
  2878  0E92                     	;# 
  2879  0E94                     	;# 
  2880  0E95                     	;# 
  2881  0E9C                     	;# 
  2882  0E9D                     	;# 
  2883  0E9E                     	;# 
  2884  0E9F                     	;# 
  2885  0EA0                     	;# 
  2886  0EA1                     	;# 
  2887  0EA2                     	;# 
  2888  0EA3                     	;# 
  2889  0EA4                     	;# 
  2890  0EA5                     	;# 
  2891  0EA6                     	;# 
  2892  0EA7                     	;# 
  2893  0F0F                     	;# 
  2894  0F10                     	;# 
  2895  0F11                     	;# 
  2896  0F12                     	;# 
  2897  0F13                     	;# 
  2898  0F14                     	;# 
  2899  0F15                     	;# 
  2900  0F16                     	;# 
  2901  0F17                     	;# 
  2902  0F18                     	;# 
  2903  0F19                     	;# 
  2904  0F1A                     	;# 
  2905  0F1B                     	;# 
  2906  0F1C                     	;# 
  2907  0F1D                     	;# 
  2908  0F1E                     	;# 
  2909  0F1F                     	;# 
  2910  0F20                     	;# 
  2911  0F21                     	;# 
  2912  0F22                     	;# 
  2913  0F23                     	;# 
  2914  0F24                     	;# 
  2915  0F25                     	;# 
  2916  0F26                     	;# 
  2917  0F27                     	;# 
  2918  0F28                     	;# 
  2919  0F29                     	;# 
  2920  0F2A                     	;# 
  2921  0F2B                     	;# 
  2922  0F2C                     	;# 
  2923  0F2D                     	;# 
  2924  0F2E                     	;# 
  2925  0F2F                     	;# 
  2926  0F30                     	;# 
  2927  0F31                     	;# 
  2928  0F32                     	;# 
  2929  0F33                     	;# 
  2930  0F34                     	;# 
  2931  0F35                     	;# 
  2932  0F36                     	;# 
  2933  0F37                     	;# 
  2934  0FE4                     	;# 
  2935  0FE5                     	;# 
  2936  0FE6                     	;# 
  2937  0FE7                     	;# 
  2938  0FE8                     	;# 
  2939  0FE9                     	;# 
  2940  0FEA                     	;# 
  2941  0FEB                     	;# 
  2942  0FED                     	;# 
  2943  0FEE                     	;# 
  2944  0FEF                     	;# 
  2945  0000                     	;# 
  2946  0001                     	;# 
  2947  0002                     	;# 
  2948  0003                     	;# 
  2949  0004                     	;# 
  2950  0005                     	;# 
  2951  0006                     	;# 
  2952  0007                     	;# 
  2953  0008                     	;# 
  2954  0009                     	;# 
  2955  000A                     	;# 
  2956  000B                     	;# 
  2957  000C                     	;# 
  2958  000D                     	;# 
  2959  000E                     	;# 
  2960  0010                     	;# 
  2961  0011                     	;# 
  2962  0012                     	;# 
  2963  0013                     	;# 
  2964  0014                     	;# 
  2965  0015                     	;# 
  2966  0015                     	;# 
  2967  0016                     	;# 
  2968  0016                     	;# 
  2969  0017                     	;# 
  2970  0018                     	;# 
  2971  0019                     	;# 
  2972  0019                     	;# 
  2973  001A                     	;# 
  2974  001B                     	;# 
  2975  001C                     	;# 
  2976  001D                     	;# 
  2977  001E                     	;# 
  2978  001F                     	;# 
  2979  008C                     	;# 
  2980  008D                     	;# 
  2981  008E                     	;# 
  2982  0090                     	;# 
  2983  0091                     	;# 
  2984  0092                     	;# 
  2985  0093                     	;# 
  2986  0094                     	;# 
  2987  0097                     	;# 
  2988  009B                     	;# 
  2989  009B                     	;# 
  2990  009C                     	;# 
  2991  009D                     	;# 
  2992  009E                     	;# 
  2993  009F                     	;# 
  2994  010C                     	;# 
  2995  010D                     	;# 
  2996  010E                     	;# 
  2997  0111                     	;# 
  2998  0112                     	;# 
  2999  0113                     	;# 
  3000  0114                     	;# 
  3001  0115                     	;# 
  3002  0116                     	;# 
  3003  0117                     	;# 
  3004  0118                     	;# 
  3005  0119                     	;# 
  3006  018C                     	;# 
  3007  018D                     	;# 
  3008  018E                     	;# 
  3009  0197                     	;# 
  3010  0199                     	;# 
  3011  0199                     	;# 
  3012  0199                     	;# 
  3013  019A                     	;# 
  3014  019A                     	;# 
  3015  019A                     	;# 
  3016  019B                     	;# 
  3017  019B                     	;# 
  3018  019B                     	;# 
  3019  019B                     	;# 
  3020  019B                     	;# 
  3021  019C                     	;# 
  3022  019C                     	;# 
  3023  019C                     	;# 
  3024  019D                     	;# 
  3025  019D                     	;# 
  3026  019D                     	;# 
  3027  019E                     	;# 
  3028  019E                     	;# 
  3029  019E                     	;# 
  3030  019F                     	;# 
  3031  019F                     	;# 
  3032  019F                     	;# 
  3033  019F                     	;# 
  3034  019F                     	;# 
  3035  020C                     	;# 
  3036  020D                     	;# 
  3037  020E                     	;# 
  3038  0211                     	;# 
  3039  0211                     	;# 
  3040  0212                     	;# 
  3041  0212                     	;# 
  3042  0213                     	;# 
  3043  0213                     	;# 
  3044  0214                     	;# 
  3045  0214                     	;# 
  3046  0215                     	;# 
  3047  0215                     	;# 
  3048  0215                     	;# 
  3049  0215                     	;# 
  3050  0216                     	;# 
  3051  0216                     	;# 
  3052  0217                     	;# 
  3053  0217                     	;# 
  3054  0219                     	;# 
  3055  021A                     	;# 
  3056  021B                     	;# 
  3057  021C                     	;# 
  3058  021D                     	;# 
  3059  021D                     	;# 
  3060  021E                     	;# 
  3061  021F                     	;# 
  3062  028C                     	;# 
  3063  028D                     	;# 
  3064  028E                     	;# 
  3065  0291                     	;# 
  3066  0291                     	;# 
  3067  0292                     	;# 
  3068  0293                     	;# 
  3069  0294                     	;# 
  3070  0295                     	;# 
  3071  0295                     	;# 
  3072  0296                     	;# 
  3073  0297                     	;# 
  3074  0298                     	;# 
  3075  029F                     	;# 
  3076  030C                     	;# 
  3077  030D                     	;# 
  3078  030E                     	;# 
  3079  0311                     	;# 
  3080  0311                     	;# 
  3081  0312                     	;# 
  3082  0313                     	;# 
  3083  0314                     	;# 
  3084  0315                     	;# 
  3085  0315                     	;# 
  3086  0316                     	;# 
  3087  0317                     	;# 
  3088  0318                     	;# 
  3089  038C                     	;# 
  3090  038D                     	;# 
  3091  038E                     	;# 
  3092  0391                     	;# 
  3093  0392                     	;# 
  3094  0393                     	;# 
  3095  0394                     	;# 
  3096  0395                     	;# 
  3097  0396                     	;# 
  3098  0397                     	;# 
  3099  0398                     	;# 
  3100  0399                     	;# 
  3101  039A                     	;# 
  3102  039C                     	;# 
  3103  039D                     	;# 
  3104  039E                     	;# 
  3105  039F                     	;# 
  3106  0411                     	;# 
  3107  0411                     	;# 
  3108  0412                     	;# 
  3109  0413                     	;# 
  3110  0414                     	;# 
  3111  0415                     	;# 
  3112  0416                     	;# 
  3113  0417                     	;# 
  3114  0418                     	;# 
  3115  0418                     	;# 
  3116  0419                     	;# 
  3117  041A                     	;# 
  3118  041B                     	;# 
  3119  041C                     	;# 
  3120  041D                     	;# 
  3121  041E                     	;# 
  3122  041F                     	;# 
  3123  0498                     	;# 
  3124  0498                     	;# 
  3125  0499                     	;# 
  3126  049A                     	;# 
  3127  049B                     	;# 
  3128  049B                     	;# 
  3129  049C                     	;# 
  3130  049D                     	;# 
  3131  049E                     	;# 
  3132  049F                     	;# 
  3133  0617                     	;# 
  3134  0618                     	;# 
  3135  0619                     	;# 
  3136  0619                     	;# 
  3137  061A                     	;# 
  3138  061B                     	;# 
  3139  061C                     	;# 
  3140  061C                     	;# 
  3141  061F                     	;# 
  3142  0691                     	;# 
  3143  0692                     	;# 
  3144  0693                     	;# 
  3145  0694                     	;# 
  3146  0695                     	;# 
  3147  0696                     	;# 
  3148  0697                     	;# 
  3149  0698                     	;# 
  3150  0699                     	;# 
  3151  0711                     	;# 
  3152  0712                     	;# 
  3153  0713                     	;# 
  3154  0714                     	;# 
  3155  0715                     	;# 
  3156  0716                     	;# 
  3157  0717                     	;# 
  3158  0718                     	;# 
  3159  0719                     	;# 
  3160  0891                     	;# 
  3161  0891                     	;# 
  3162  0891                     	;# 
  3163  0891                     	;# 
  3164  0891                     	;# 
  3165  0891                     	;# 
  3166  0892                     	;# 
  3167  0892                     	;# 
  3168  0892                     	;# 
  3169  0893                     	;# 
  3170  0893                     	;# 
  3171  0893                     	;# 
  3172  0893                     	;# 
  3173  0893                     	;# 
  3174  0893                     	;# 
  3175  0894                     	;# 
  3176  0894                     	;# 
  3177  0894                     	;# 
  3178  0895                     	;# 
  3179  0895                     	;# 
  3180  0895                     	;# 
  3181  0896                     	;# 
  3182  0896                     	;# 
  3183  0896                     	;# 
  3184  089B                     	;# 
  3185  0911                     	;# 
  3186  0912                     	;# 
  3187  0913                     	;# 
  3188  0914                     	;# 
  3189  0915                     	;# 
  3190  0916                     	;# 
  3191  0918                     	;# 
  3192  0919                     	;# 
  3193  091A                     	;# 
  3194  091B                     	;# 
  3195  091C                     	;# 
  3196  091D                     	;# 
  3197  091E                     	;# 
  3198  091F                     	;# 
  3199  0E0F                     	;# 
  3200  0E10                     	;# 
  3201  0E11                     	;# 
  3202  0E12                     	;# 
  3203  0E13                     	;# 
  3204  0E14                     	;# 
  3205  0E15                     	;# 
  3206  0E16                     	;# 
  3207  0E17                     	;# 
  3208  0E18                     	;# 
  3209  0E19                     	;# 
  3210  0E1A                     	;# 
  3211  0E1B                     	;# 
  3212  0E1C                     	;# 
  3213  0E1D                     	;# 
  3214  0E1E                     	;# 
  3215  0E1F                     	;# 
  3216  0E20                     	;# 
  3217  0E21                     	;# 
  3218  0E22                     	;# 
  3219  0E24                     	;# 
  3220  0E25                     	;# 
  3221  0E28                     	;# 
  3222  0E29                     	;# 
  3223  0E2A                     	;# 
  3224  0E2B                     	;# 
  3225  0E2C                     	;# 
  3226  0E2D                     	;# 
  3227  0E2E                     	;# 
  3228  0E2F                     	;# 
  3229  0E90                     	;# 
  3230  0E91                     	;# 
  3231  0E92                     	;# 
  3232  0E94                     	;# 
  3233  0E95                     	;# 
  3234  0E9C                     	;# 
  3235  0E9D                     	;# 
  3236  0E9E                     	;# 
  3237  0E9F                     	;# 
  3238  0EA0                     	;# 
  3239  0EA1                     	;# 
  3240  0EA2                     	;# 
  3241  0EA3                     	;# 
  3242  0EA4                     	;# 
  3243  0EA5                     	;# 
  3244  0EA6                     	;# 
  3245  0EA7                     	;# 
  3246  0F0F                     	;# 
  3247  0F10                     	;# 
  3248  0F11                     	;# 
  3249  0F12                     	;# 
  3250  0F13                     	;# 
  3251  0F14                     	;# 
  3252  0F15                     	;# 
  3253  0F16                     	;# 
  3254  0F17                     	;# 
  3255  0F18                     	;# 
  3256  0F19                     	;# 
  3257  0F1A                     	;# 
  3258  0F1B                     	;# 
  3259  0F1C                     	;# 
  3260  0F1D                     	;# 
  3261  0F1E                     	;# 
  3262  0F1F                     	;# 
  3263  0F20                     	;# 
  3264  0F21                     	;# 
  3265  0F22                     	;# 
  3266  0F23                     	;# 
  3267  0F24                     	;# 
  3268  0F25                     	;# 
  3269  0F26                     	;# 
  3270  0F27                     	;# 
  3271  0F28                     	;# 
  3272  0F29                     	;# 
  3273  0F2A                     	;# 
  3274  0F2B                     	;# 
  3275  0F2C                     	;# 
  3276  0F2D                     	;# 
  3277  0F2E                     	;# 
  3278  0F2F                     	;# 
  3279  0F30                     	;# 
  3280  0F31                     	;# 
  3281  0F32                     	;# 
  3282  0F33                     	;# 
  3283  0F34                     	;# 
  3284  0F35                     	;# 
  3285  0F36                     	;# 
  3286  0F37                     	;# 
  3287  0FE4                     	;# 
  3288  0FE5                     	;# 
  3289  0FE6                     	;# 
  3290  0FE7                     	;# 
  3291  0FE8                     	;# 
  3292  0FE9                     	;# 
  3293  0FEA                     	;# 
  3294  0FEB                     	;# 
  3295  0FED                     	;# 
  3296  0FEE                     	;# 
  3297  0FEF                     	;# 
  3298  0000                     	;# 
  3299  0001                     	;# 
  3300  0002                     	;# 
  3301  0003                     	;# 
  3302  0004                     	;# 
  3303  0005                     	;# 
  3304  0006                     	;# 
  3305  0007                     	;# 
  3306  0008                     	;# 
  3307  0009                     	;# 
  3308  000A                     	;# 
  3309  000B                     	;# 
  3310  000C                     	;# 
  3311  000D                     	;# 
  3312  000E                     	;# 
  3313  0010                     	;# 
  3314  0011                     	;# 
  3315  0012                     	;# 
  3316  0013                     	;# 
  3317  0014                     	;# 
  3318  0015                     	;# 
  3319  0015                     	;# 
  3320  0016                     	;# 
  3321  0016                     	;# 
  3322  0017                     	;# 
  3323  0018                     	;# 
  3324  0019                     	;# 
  3325  0019                     	;# 
  3326  001A                     	;# 
  3327  001B                     	;# 
  3328  001C                     	;# 
  3329  001D                     	;# 
  3330  001E                     	;# 
  3331  001F                     	;# 
  3332  008C                     	;# 
  3333  008D                     	;# 
  3334  008E                     	;# 
  3335  0090                     	;# 
  3336  0091                     	;# 
  3337  0092                     	;# 
  3338  0093                     	;# 
  3339  0094                     	;# 
  3340  0097                     	;# 
  3341  009B                     	;# 
  3342  009B                     	;# 
  3343  009C                     	;# 
  3344  009D                     	;# 
  3345  009E                     	;# 
  3346  009F                     	;# 
  3347  010C                     	;# 
  3348  010D                     	;# 
  3349  010E                     	;# 
  3350  0111                     	;# 
  3351  0112                     	;# 
  3352  0113                     	;# 
  3353  0114                     	;# 
  3354  0115                     	;# 
  3355  0116                     	;# 
  3356  0117                     	;# 
  3357  0118                     	;# 
  3358  0119                     	;# 
  3359  018C                     	;# 
  3360  018D                     	;# 
  3361  018E                     	;# 
  3362  0197                     	;# 
  3363  0199                     	;# 
  3364  0199                     	;# 
  3365  0199                     	;# 
  3366  019A                     	;# 
  3367  019A                     	;# 
  3368  019A                     	;# 
  3369  019B                     	;# 
  3370  019B                     	;# 
  3371  019B                     	;# 
  3372  019B                     	;# 
  3373  019B                     	;# 
  3374  019C                     	;# 
  3375  019C                     	;# 
  3376  019C                     	;# 
  3377  019D                     	;# 
  3378  019D                     	;# 
  3379  019D                     	;# 
  3380  019E                     	;# 
  3381  019E                     	;# 
  3382  019E                     	;# 
  3383  019F                     	;# 
  3384  019F                     	;# 
  3385  019F                     	;# 
  3386  019F                     	;# 
  3387  019F                     	;# 
  3388  020C                     	;# 
  3389  020D                     	;# 
  3390  020E                     	;# 
  3391  0211                     	;# 
  3392  0211                     	;# 
  3393  0212                     	;# 
  3394  0212                     	;# 
  3395  0213                     	;# 
  3396  0213                     	;# 
  3397  0214                     	;# 
  3398  0214                     	;# 
  3399  0215                     	;# 
  3400  0215                     	;# 
  3401  0215                     	;# 
  3402  0215                     	;# 
  3403  0216                     	;# 
  3404  0216                     	;# 
  3405  0217                     	;# 
  3406  0217                     	;# 
  3407  0219                     	;# 
  3408  021A                     	;# 
  3409  021B                     	;# 
  3410  021C                     	;# 
  3411  021D                     	;# 
  3412  021D                     	;# 
  3413  021E                     	;# 
  3414  021F                     	;# 
  3415  028C                     	;# 
  3416  028D                     	;# 
  3417  028E                     	;# 
  3418  0291                     	;# 
  3419  0291                     	;# 
  3420  0292                     	;# 
  3421  0293                     	;# 
  3422  0294                     	;# 
  3423  0295                     	;# 
  3424  0295                     	;# 
  3425  0296                     	;# 
  3426  0297                     	;# 
  3427  0298                     	;# 
  3428  029F                     	;# 
  3429  030C                     	;# 
  3430  030D                     	;# 
  3431  030E                     	;# 
  3432  0311                     	;# 
  3433  0311                     	;# 
  3434  0312                     	;# 
  3435  0313                     	;# 
  3436  0314                     	;# 
  3437  0315                     	;# 
  3438  0315                     	;# 
  3439  0316                     	;# 
  3440  0317                     	;# 
  3441  0318                     	;# 
  3442  038C                     	;# 
  3443  038D                     	;# 
  3444  038E                     	;# 
  3445  0391                     	;# 
  3446  0392                     	;# 
  3447  0393                     	;# 
  3448  0394                     	;# 
  3449  0395                     	;# 
  3450  0396                     	;# 
  3451  0397                     	;# 
  3452  0398                     	;# 
  3453  0399                     	;# 
  3454  039A                     	;# 
  3455  039C                     	;# 
  3456  039D                     	;# 
  3457  039E                     	;# 
  3458  039F                     	;# 
  3459  0411                     	;# 
  3460  0411                     	;# 
  3461  0412                     	;# 
  3462  0413                     	;# 
  3463  0414                     	;# 
  3464  0415                     	;# 
  3465  0416                     	;# 
  3466  0417                     	;# 
  3467  0418                     	;# 
  3468  0418                     	;# 
  3469  0419                     	;# 
  3470  041A                     	;# 
  3471  041B                     	;# 
  3472  041C                     	;# 
  3473  041D                     	;# 
  3474  041E                     	;# 
  3475  041F                     	;# 
  3476  0498                     	;# 
  3477  0498                     	;# 
  3478  0499                     	;# 
  3479  049A                     	;# 
  3480  049B                     	;# 
  3481  049B                     	;# 
  3482  049C                     	;# 
  3483  049D                     	;# 
  3484  049E                     	;# 
  3485  049F                     	;# 
  3486  0617                     	;# 
  3487  0618                     	;# 
  3488  0619                     	;# 
  3489  0619                     	;# 
  3490  061A                     	;# 
  3491  061B                     	;# 
  3492  061C                     	;# 
  3493  061C                     	;# 
  3494  061F                     	;# 
  3495  0691                     	;# 
  3496  0692                     	;# 
  3497  0693                     	;# 
  3498  0694                     	;# 
  3499  0695                     	;# 
  3500  0696                     	;# 
  3501  0697                     	;# 
  3502  0698                     	;# 
  3503  0699                     	;# 
  3504  0711                     	;# 
  3505  0712                     	;# 
  3506  0713                     	;# 
  3507  0714                     	;# 
  3508  0715                     	;# 
  3509  0716                     	;# 
  3510  0717                     	;# 
  3511  0718                     	;# 
  3512  0719                     	;# 
  3513  0891                     	;# 
  3514  0891                     	;# 
  3515  0891                     	;# 
  3516  0891                     	;# 
  3517  0891                     	;# 
  3518  0891                     	;# 
  3519  0892                     	;# 
  3520  0892                     	;# 
  3521  0892                     	;# 
  3522  0893                     	;# 
  3523  0893                     	;# 
  3524  0893                     	;# 
  3525  0893                     	;# 
  3526  0893                     	;# 
  3527  0893                     	;# 
  3528  0894                     	;# 
  3529  0894                     	;# 
  3530  0894                     	;# 
  3531  0895                     	;# 
  3532  0895                     	;# 
  3533  0895                     	;# 
  3534  0896                     	;# 
  3535  0896                     	;# 
  3536  0896                     	;# 
  3537  089B                     	;# 
  3538  0911                     	;# 
  3539  0912                     	;# 
  3540  0913                     	;# 
  3541  0914                     	;# 
  3542  0915                     	;# 
  3543  0916                     	;# 
  3544  0918                     	;# 
  3545  0919                     	;# 
  3546  091A                     	;# 
  3547  091B                     	;# 
  3548  091C                     	;# 
  3549  091D                     	;# 
  3550  091E                     	;# 
  3551  091F                     	;# 
  3552  0E0F                     	;# 
  3553  0E10                     	;# 
  3554  0E11                     	;# 
  3555  0E12                     	;# 
  3556  0E13                     	;# 
  3557  0E14                     	;# 
  3558  0E15                     	;# 
  3559  0E16                     	;# 
  3560  0E17                     	;# 
  3561  0E18                     	;# 
  3562  0E19                     	;# 
  3563  0E1A                     	;# 
  3564  0E1B                     	;# 
  3565  0E1C                     	;# 
  3566  0E1D                     	;# 
  3567  0E1E                     	;# 
  3568  0E1F                     	;# 
  3569  0E20                     	;# 
  3570  0E21                     	;# 
  3571  0E22                     	;# 
  3572  0E24                     	;# 
  3573  0E25                     	;# 
  3574  0E28                     	;# 
  3575  0E29                     	;# 
  3576  0E2A                     	;# 
  3577  0E2B                     	;# 
  3578  0E2C                     	;# 
  3579  0E2D                     	;# 
  3580  0E2E                     	;# 
  3581  0E2F                     	;# 
  3582  0E90                     	;# 
  3583  0E91                     	;# 
  3584  0E92                     	;# 
  3585  0E94                     	;# 
  3586  0E95                     	;# 
  3587  0E9C                     	;# 
  3588  0E9D                     	;# 
  3589  0E9E                     	;# 
  3590  0E9F                     	;# 
  3591  0EA0                     	;# 
  3592  0EA1                     	;# 
  3593  0EA2                     	;# 
  3594  0EA3                     	;# 
  3595  0EA4                     	;# 
  3596  0EA5                     	;# 
  3597  0EA6                     	;# 
  3598  0EA7                     	;# 
  3599  0F0F                     	;# 
  3600  0F10                     	;# 
  3601  0F11                     	;# 
  3602  0F12                     	;# 
  3603  0F13                     	;# 
  3604  0F14                     	;# 
  3605  0F15                     	;# 
  3606  0F16                     	;# 
  3607  0F17                     	;# 
  3608  0F18                     	;# 
  3609  0F19                     	;# 
  3610  0F1A                     	;# 
  3611  0F1B                     	;# 
  3612  0F1C                     	;# 
  3613  0F1D                     	;# 
  3614  0F1E                     	;# 
  3615  0F1F                     	;# 
  3616  0F20                     	;# 
  3617  0F21                     	;# 
  3618  0F22                     	;# 
  3619  0F23                     	;# 
  3620  0F24                     	;# 
  3621  0F25                     	;# 
  3622  0F26                     	;# 
  3623  0F27                     	;# 
  3624  0F28                     	;# 
  3625  0F29                     	;# 
  3626  0F2A                     	;# 
  3627  0F2B                     	;# 
  3628  0F2C                     	;# 
  3629  0F2D                     	;# 
  3630  0F2E                     	;# 
  3631  0F2F                     	;# 
  3632  0F30                     	;# 
  3633  0F31                     	;# 
  3634  0F32                     	;# 
  3635  0F33                     	;# 
  3636  0F34                     	;# 
  3637  0F35                     	;# 
  3638  0F36                     	;# 
  3639  0F37                     	;# 
  3640  0FE4                     	;# 
  3641  0FE5                     	;# 
  3642  0FE6                     	;# 
  3643  0FE7                     	;# 
  3644  0FE8                     	;# 
  3645  0FE9                     	;# 
  3646  0FEA                     	;# 
  3647  0FEB                     	;# 
  3648  0FED                     	;# 
  3649  0FEE                     	;# 
  3650  0FEF                     	;# 
  3651  0000                     	;# 
  3652  0001                     	;# 
  3653  0002                     	;# 
  3654  0003                     	;# 
  3655  0004                     	;# 
  3656  0005                     	;# 
  3657  0006                     	;# 
  3658  0007                     	;# 
  3659  0008                     	;# 
  3660  0009                     	;# 
  3661  000A                     	;# 
  3662  000B                     	;# 
  3663  000C                     	;# 
  3664  000D                     	;# 
  3665  000E                     	;# 
  3666  0010                     	;# 
  3667  0011                     	;# 
  3668  0012                     	;# 
  3669  0013                     	;# 
  3670  0014                     	;# 
  3671  0015                     	;# 
  3672  0015                     	;# 
  3673  0016                     	;# 
  3674  0016                     	;# 
  3675  0017                     	;# 
  3676  0018                     	;# 
  3677  0019                     	;# 
  3678  0019                     	;# 
  3679  001A                     	;# 
  3680  001B                     	;# 
  3681  001C                     	;# 
  3682  001D                     	;# 
  3683  001E                     	;# 
  3684  001F                     	;# 
  3685  008C                     	;# 
  3686  008D                     	;# 
  3687  008E                     	;# 
  3688  0090                     	;# 
  3689  0091                     	;# 
  3690  0092                     	;# 
  3691  0093                     	;# 
  3692  0094                     	;# 
  3693  0097                     	;# 
  3694  009B                     	;# 
  3695  009B                     	;# 
  3696  009C                     	;# 
  3697  009D                     	;# 
  3698  009E                     	;# 
  3699  009F                     	;# 
  3700  010C                     	;# 
  3701  010D                     	;# 
  3702  010E                     	;# 
  3703  0111                     	;# 
  3704  0112                     	;# 
  3705  0113                     	;# 
  3706  0114                     	;# 
  3707  0115                     	;# 
  3708  0116                     	;# 
  3709  0117                     	;# 
  3710  0118                     	;# 
  3711  0119                     	;# 
  3712  018C                     	;# 
  3713  018D                     	;# 
  3714  018E                     	;# 
  3715  0197                     	;# 
  3716  0199                     	;# 
  3717  0199                     	;# 
  3718  0199                     	;# 
  3719  019A                     	;# 
  3720  019A                     	;# 
  3721  019A                     	;# 
  3722  019B                     	;# 
  3723  019B                     	;# 
  3724  019B                     	;# 
  3725  019B                     	;# 
  3726  019B                     	;# 
  3727  019C                     	;# 
  3728  019C                     	;# 
  3729  019C                     	;# 
  3730  019D                     	;# 
  3731  019D                     	;# 
  3732  019D                     	;# 
  3733  019E                     	;# 
  3734  019E                     	;# 
  3735  019E                     	;# 
  3736  019F                     	;# 
  3737  019F                     	;# 
  3738  019F                     	;# 
  3739  019F                     	;# 
  3740  019F                     	;# 
  3741  020C                     	;# 
  3742  020D                     	;# 
  3743  020E                     	;# 
  3744  0211                     	;# 
  3745  0211                     	;# 
  3746  0212                     	;# 
  3747  0212                     	;# 
  3748  0213                     	;# 
  3749  0213                     	;# 
  3750  0214                     	;# 
  3751  0214                     	;# 
  3752  0215                     	;# 
  3753  0215                     	;# 
  3754  0215                     	;# 
  3755  0215                     	;# 
  3756  0216                     	;# 
  3757  0216                     	;# 
  3758  0217                     	;# 
  3759  0217                     	;# 
  3760  0219                     	;# 
  3761  021A                     	;# 
  3762  021B                     	;# 
  3763  021C                     	;# 
  3764  021D                     	;# 
  3765  021D                     	;# 
  3766  021E                     	;# 
  3767  021F                     	;# 
  3768  028C                     	;# 
  3769  028D                     	;# 
  3770  028E                     	;# 
  3771  0291                     	;# 
  3772  0291                     	;# 
  3773  0292                     	;# 
  3774  0293                     	;# 
  3775  0294                     	;# 
  3776  0295                     	;# 
  3777  0295                     	;# 
  3778  0296                     	;# 
  3779  0297                     	;# 
  3780  0298                     	;# 
  3781  029F                     	;# 
  3782  030C                     	;# 
  3783  030D                     	;# 
  3784  030E                     	;# 
  3785  0311                     	;# 
  3786  0311                     	;# 
  3787  0312                     	;# 
  3788  0313                     	;# 
  3789  0314                     	;# 
  3790  0315                     	;# 
  3791  0315                     	;# 
  3792  0316                     	;# 
  3793  0317                     	;# 
  3794  0318                     	;# 
  3795  038C                     	;# 
  3796  038D                     	;# 
  3797  038E                     	;# 
  3798  0391                     	;# 
  3799  0392                     	;# 
  3800  0393                     	;# 
  3801  0394                     	;# 
  3802  0395                     	;# 
  3803  0396                     	;# 
  3804  0397                     	;# 
  3805  0398                     	;# 
  3806  0399                     	;# 
  3807  039A                     	;# 
  3808  039C                     	;# 
  3809  039D                     	;# 
  3810  039E                     	;# 
  3811  039F                     	;# 
  3812  0411                     	;# 
  3813  0411                     	;# 
  3814  0412                     	;# 
  3815  0413                     	;# 
  3816  0414                     	;# 
  3817  0415                     	;# 
  3818  0416                     	;# 
  3819  0417                     	;# 
  3820  0418                     	;# 
  3821  0418                     	;# 
  3822  0419                     	;# 
  3823  041A                     	;# 
  3824  041B                     	;# 
  3825  041C                     	;# 
  3826  041D                     	;# 
  3827  041E                     	;# 
  3828  041F                     	;# 
  3829  0498                     	;# 
  3830  0498                     	;# 
  3831  0499                     	;# 
  3832  049A                     	;# 
  3833  049B                     	;# 
  3834  049B                     	;# 
  3835  049C                     	;# 
  3836  049D                     	;# 
  3837  049E                     	;# 
  3838  049F                     	;# 
  3839  0617                     	;# 
  3840  0618                     	;# 
  3841  0619                     	;# 
  3842  0619                     	;# 
  3843  061A                     	;# 
  3844  061B                     	;# 
  3845  061C                     	;# 
  3846  061C                     	;# 
  3847  061F                     	;# 
  3848  0691                     	;# 
  3849  0692                     	;# 
  3850  0693                     	;# 
  3851  0694                     	;# 
  3852  0695                     	;# 
  3853  0696                     	;# 
  3854  0697                     	;# 
  3855  0698                     	;# 
  3856  0699                     	;# 
  3857  0711                     	;# 
  3858  0712                     	;# 
  3859  0713                     	;# 
  3860  0714                     	;# 
  3861  0715                     	;# 
  3862  0716                     	;# 
  3863  0717                     	;# 
  3864  0718                     	;# 
  3865  0719                     	;# 
  3866  0891                     	;# 
  3867  0891                     	;# 
  3868  0891                     	;# 
  3869  0891                     	;# 
  3870  0891                     	;# 
  3871  0891                     	;# 
  3872  0892                     	;# 
  3873  0892                     	;# 
  3874  0892                     	;# 
  3875  0893                     	;# 
  3876  0893                     	;# 
  3877  0893                     	;# 
  3878  0893                     	;# 
  3879  0893                     	;# 
  3880  0893                     	;# 
  3881  0894                     	;# 
  3882  0894                     	;# 
  3883  0894                     	;# 
  3884  0895                     	;# 
  3885  0895                     	;# 
  3886  0895                     	;# 
  3887  0896                     	;# 
  3888  0896                     	;# 
  3889  0896                     	;# 
  3890  089B                     	;# 
  3891  0911                     	;# 
  3892  0912                     	;# 
  3893  0913                     	;# 
  3894  0914                     	;# 
  3895  0915                     	;# 
  3896  0916                     	;# 
  3897  0918                     	;# 
  3898  0919                     	;# 
  3899  091A                     	;# 
  3900  091B                     	;# 
  3901  091C                     	;# 
  3902  091D                     	;# 
  3903  091E                     	;# 
  3904  091F                     	;# 
  3905  0E0F                     	;# 
  3906  0E10                     	;# 
  3907  0E11                     	;# 
  3908  0E12                     	;# 
  3909  0E13                     	;# 
  3910  0E14                     	;# 
  3911  0E15                     	;# 
  3912  0E16                     	;# 
  3913  0E17                     	;# 
  3914  0E18                     	;# 
  3915  0E19                     	;# 
  3916  0E1A                     	;# 
  3917  0E1B                     	;# 
  3918  0E1C                     	;# 
  3919  0E1D                     	;# 
  3920  0E1E                     	;# 
  3921  0E1F                     	;# 
  3922  0E20                     	;# 
  3923  0E21                     	;# 
  3924  0E22                     	;# 
  3925  0E24                     	;# 
  3926  0E25                     	;# 
  3927  0E28                     	;# 
  3928  0E29                     	;# 
  3929  0E2A                     	;# 
  3930  0E2B                     	;# 
  3931  0E2C                     	;# 
  3932  0E2D                     	;# 
  3933  0E2E                     	;# 
  3934  0E2F                     	;# 
  3935  0E90                     	;# 
  3936  0E91                     	;# 
  3937  0E92                     	;# 
  3938  0E94                     	;# 
  3939  0E95                     	;# 
  3940  0E9C                     	;# 
  3941  0E9D                     	;# 
  3942  0E9E                     	;# 
  3943  0E9F                     	;# 
  3944  0EA0                     	;# 
  3945  0EA1                     	;# 
  3946  0EA2                     	;# 
  3947  0EA3                     	;# 
  3948  0EA4                     	;# 
  3949  0EA5                     	;# 
  3950  0EA6                     	;# 
  3951  0EA7                     	;# 
  3952  0F0F                     	;# 
  3953  0F10                     	;# 
  3954  0F11                     	;# 
  3955  0F12                     	;# 
  3956  0F13                     	;# 
  3957  0F14                     	;# 
  3958  0F15                     	;# 
  3959  0F16                     	;# 
  3960  0F17                     	;# 
  3961  0F18                     	;# 
  3962  0F19                     	;# 
  3963  0F1A                     	;# 
  3964  0F1B                     	;# 
  3965  0F1C                     	;# 
  3966  0F1D                     	;# 
  3967  0F1E                     	;# 
  3968  0F1F                     	;# 
  3969  0F20                     	;# 
  3970  0F21                     	;# 
  3971  0F22                     	;# 
  3972  0F23                     	;# 
  3973  0F24                     	;# 
  3974  0F25                     	;# 
  3975  0F26                     	;# 
  3976  0F27                     	;# 
  3977  0F28                     	;# 
  3978  0F29                     	;# 
  3979  0F2A                     	;# 
  3980  0F2B                     	;# 
  3981  0F2C                     	;# 
  3982  0F2D                     	;# 
  3983  0F2E                     	;# 
  3984  0F2F                     	;# 
  3985  0F30                     	;# 
  3986  0F31                     	;# 
  3987  0F32                     	;# 
  3988  0F33                     	;# 
  3989  0F34                     	;# 
  3990  0F35                     	;# 
  3991  0F36                     	;# 
  3992  0F37                     	;# 
  3993  0FE4                     	;# 
  3994  0FE5                     	;# 
  3995  0FE6                     	;# 
  3996  0FE7                     	;# 
  3997  0FE8                     	;# 
  3998  0FE9                     	;# 
  3999  0FEA                     	;# 
  4000  0FEB                     	;# 
  4001  0FED                     	;# 
  4002  0FEE                     	;# 
  4003  0FEF                     	;# 
  4004                           
  4005                           	psect	eeprom_data
  4006  0000  0000 0000 0000 0000 0001 0045 0043 004F 	db	0,0,0,0,1,69,67,79	;# 
  4007  0008  0042 004F 0054 0020 004C 0043 0043 002E 	db	66,79,84,32,76,67,67,46	;# 
  4008  0010  0000 0000 0000 0000 0002 0000 0000 0000 	db	0,0,0,0,2,0,0,0	;# 
  4009  0018  0001 0000 0000 0000 0000 0002 0000 0000 	db	1,0,0,0,0,2,0,0	;# 
  4010  0020  0000 0001 0000 0000 0000 0000 0003 0003 	db	0,1,0,0,0,0,3,3	;# 
  4011  0028  0001 0000 0028 0003 0002 0000 0064 0003 	db	1,0,40,3,2,0,100,3	;# 
  4012  0030  0003 0000 0048 0003 0004 0000 00C8 0003 	db	3,0,72,3,4,0,200,3	;# 
  4013  0038  0005 0000 0000 0003 0006 0000 0052 0003 	db	5,0,0,3,6,0,82,3	;# 
  4014  0040  0007 0000 0000 0002 0008 0000 0002 0009 	db	7,0,0,2,8,0,2,9	;# 
  4015  0048  0000 0002 000A 0001 0003 000B 0000 0000 	db	0,2,10,1,3,11,0,0	;# 
  4016  0050  0003 000C 0000 0000 0003 000D 0000 00B4 	db	3,12,0,0,3,13,0,180	;# 
  4017  0058  0003 000E 0000 0000 0003 000F 0000 0000 	db	3,14,0,0,3,15,0,0	;# 
  4018  0060  0003 0010 0000 0000 0003 0011 0000 0000 	db	3,16,0,0,3,17,0,0	;# 
  4019  0068  0003 0012 0000 0000 0003 0013 0000 0000 	db	3,18,0,0,3,19,0,0	;# 
  4020  0070  0000 0000 0000 0000 00FE 0000 0000 0000 	db	0,0,0,0,254,0,0,0	;# 
  4021  0078  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  4022  0080  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  4023  0088  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  4024  0090  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  4025  0098  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  4026  00A0  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  4027  00A8  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  4028  00B0  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  4029  00B8  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  4030  00C0  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  4031  00C8  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  4032  00D0  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  4033  00D8  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  4034  00E0  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  4035  00E8  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  4036  00F0  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  4037  0000                     	;# 
  4038  0001                     	;# 
  4039  0002                     	;# 
  4040  0003                     	;# 
  4041  0004                     	;# 
  4042  0005                     	;# 
  4043  0006                     	;# 
  4044  0007                     	;# 
  4045  0008                     	;# 
  4046  0009                     	;# 
  4047  000A                     	;# 
  4048  000B                     	;# 
  4049  000C                     	;# 
  4050  000D                     	;# 
  4051  000E                     	;# 
  4052  0010                     	;# 
  4053  0011                     	;# 
  4054  0012                     	;# 
  4055  0013                     	;# 
  4056  0014                     	;# 
  4057  0015                     	;# 
  4058  0015                     	;# 
  4059  0016                     	;# 
  4060  0016                     	;# 
  4061  0017                     	;# 
  4062  0018                     	;# 
  4063  0019                     	;# 
  4064  0019                     	;# 
  4065  001A                     	;# 
  4066  001B                     	;# 
  4067  001C                     	;# 
  4068  001D                     	;# 
  4069  001E                     	;# 
  4070  001F                     	;# 
  4071  008C                     	;# 
  4072  008D                     	;# 
  4073  008E                     	;# 
  4074  0090                     	;# 
  4075  0091                     	;# 
  4076  0092                     	;# 
  4077  0093                     	;# 
  4078  0094                     	;# 
  4079  0097                     	;# 
  4080  009B                     	;# 
  4081  009B                     	;# 
  4082  009C                     	;# 
  4083  009D                     	;# 
  4084  009E                     	;# 
  4085  009F                     	;# 
  4086  010C                     	;# 
  4087  010D                     	;# 
  4088  010E                     	;# 
  4089  0111                     	;# 
  4090  0112                     	;# 
  4091  0113                     	;# 
  4092  0114                     	;# 
  4093  0115                     	;# 
  4094  0116                     	;# 
  4095  0117                     	;# 
  4096  0118                     	;# 
  4097  0119                     	;# 
  4098  018C                     	;# 
  4099  018D                     	;# 
  4100  018E                     	;# 
  4101  0197                     	;# 
  4102  0199                     	;# 
  4103  0199                     	;# 
  4104  0199                     	;# 
  4105  019A                     	;# 
  4106  019A                     	;# 
  4107  019A                     	;# 
  4108  019B                     	;# 
  4109  019B                     	;# 
  4110  019B                     	;# 
  4111  019B                     	;# 
  4112  019B                     	;# 
  4113  019C                     	;# 
  4114  019C                     	;# 
  4115  019C                     	;# 
  4116  019D                     	;# 
  4117  019D                     	;# 
  4118  019D                     	;# 
  4119  019E                     	;# 
  4120  019E                     	;# 
  4121  019E                     	;# 
  4122  019F                     	;# 
  4123  019F                     	;# 
  4124  019F                     	;# 
  4125  019F                     	;# 
  4126  019F                     	;# 
  4127  020C                     	;# 
  4128  020D                     	;# 
  4129  020E                     	;# 
  4130  0211                     	;# 
  4131  0211                     	;# 
  4132  0212                     	;# 
  4133  0212                     	;# 
  4134  0213                     	;# 
  4135  0213                     	;# 
  4136  0214                     	;# 
  4137  0214                     	;# 
  4138  0215                     	;# 
  4139  0215                     	;# 
  4140  0215                     	;# 
  4141  0215                     	;# 
  4142  0216                     	;# 
  4143  0216                     	;# 
  4144  0217                     	;# 
  4145  0217                     	;# 
  4146  0219                     	;# 
  4147  021A                     	;# 
  4148  021B                     	;# 
  4149  021C                     	;# 
  4150  021D                     	;# 
  4151  021D                     	;# 
  4152  021E                     	;# 
  4153  021F                     	;# 
  4154  028C                     	;# 
  4155  028D                     	;# 
  4156  028E                     	;# 
  4157  0291                     	;# 
  4158  0291                     	;# 
  4159  0292                     	;# 
  4160  0293                     	;# 
  4161  0294                     	;# 
  4162  0295                     	;# 
  4163  0295                     	;# 
  4164  0296                     	;# 
  4165  0297                     	;# 
  4166  0298                     	;# 
  4167  029F                     	;# 
  4168  030C                     	;# 
  4169  030D                     	;# 
  4170  030E                     	;# 
  4171  0311                     	;# 
  4172  0311                     	;# 
  4173  0312                     	;# 
  4174  0313                     	;# 
  4175  0314                     	;# 
  4176  0315                     	;# 
  4177  0315                     	;# 
  4178  0316                     	;# 
  4179  0317                     	;# 
  4180  0318                     	;# 
  4181  038C                     	;# 
  4182  038D                     	;# 
  4183  038E                     	;# 
  4184  0391                     	;# 
  4185  0392                     	;# 
  4186  0393                     	;# 
  4187  0394                     	;# 
  4188  0395                     	;# 
  4189  0396                     	;# 
  4190  0397                     	;# 
  4191  0398                     	;# 
  4192  0399                     	;# 
  4193  039A                     	;# 
  4194  039C                     	;# 
  4195  039D                     	;# 
  4196  039E                     	;# 
  4197  039F                     	;# 
  4198  0411                     	;# 
  4199  0411                     	;# 
  4200  0412                     	;# 
  4201  0413                     	;# 
  4202  0414                     	;# 
  4203  0415                     	;# 
  4204  0416                     	;# 
  4205  0417                     	;# 
  4206  0418                     	;# 
  4207  0418                     	;# 
  4208  0419                     	;# 
  4209  041A                     	;# 
  4210  041B                     	;# 
  4211  041C                     	;# 
  4212  041D                     	;# 
  4213  041E                     	;# 
  4214  041F                     	;# 
  4215  0498                     	;# 
  4216  0498                     	;# 
  4217  0499                     	;# 
  4218  049A                     	;# 
  4219  049B                     	;# 
  4220  049B                     	;# 
  4221  049C                     	;# 
  4222  049D                     	;# 
  4223  049E                     	;# 
  4224  049F                     	;# 
  4225  0617                     	;# 
  4226  0618                     	;# 
  4227  0619                     	;# 
  4228  0619                     	;# 
  4229  061A                     	;# 
  4230  061B                     	;# 
  4231  061C                     	;# 
  4232  061C                     	;# 
  4233  061F                     	;# 
  4234  0691                     	;# 
  4235  0692                     	;# 
  4236  0693                     	;# 
  4237  0694                     	;# 
  4238  0695                     	;# 
  4239  0696                     	;# 
  4240  0697                     	;# 
  4241  0698                     	;# 
  4242  0699                     	;# 
  4243  0711                     	;# 
  4244  0712                     	;# 
  4245  0713                     	;# 
  4246  0714                     	;# 
  4247  0715                     	;# 
  4248  0716                     	;# 
  4249  0717                     	;# 
  4250  0718                     	;# 
  4251  0719                     	;# 
  4252  0891                     	;# 
  4253  0891                     	;# 
  4254  0891                     	;# 
  4255  0891                     	;# 
  4256  0891                     	;# 
  4257  0891                     	;# 
  4258  0892                     	;# 
  4259  0892                     	;# 
  4260  0892                     	;# 
  4261  0893                     	;# 
  4262  0893                     	;# 
  4263  0893                     	;# 
  4264  0893                     	;# 
  4265  0893                     	;# 
  4266  0893                     	;# 
  4267  0894                     	;# 
  4268  0894                     	;# 
  4269  0894                     	;# 
  4270  0895                     	;# 
  4271  0895                     	;# 
  4272  0895                     	;# 
  4273  0896                     	;# 
  4274  0896                     	;# 
  4275  0896                     	;# 
  4276  089B                     	;# 
  4277  0911                     	;# 
  4278  0912                     	;# 
  4279  0913                     	;# 
  4280  0914                     	;# 
  4281  0915                     	;# 
  4282  0916                     	;# 
  4283  0918                     	;# 
  4284  0919                     	;# 
  4285  091A                     	;# 
  4286  091B                     	;# 
  4287  091C                     	;# 
  4288  091D                     	;# 
  4289  091E                     	;# 
  4290  091F                     	;# 
  4291  0E0F                     	;# 
  4292  0E10                     	;# 
  4293  0E11                     	;# 
  4294  0E12                     	;# 
  4295  0E13                     	;# 
  4296  0E14                     	;# 
  4297  0E15                     	;# 
  4298  0E16                     	;# 
  4299  0E17                     	;# 
  4300  0E18                     	;# 
  4301  0E19                     	;# 
  4302  0E1A                     	;# 
  4303  0E1B                     	;# 
  4304  0E1C                     	;# 
  4305  0E1D                     	;# 
  4306  0E1E                     	;# 
  4307  0E1F                     	;# 
  4308  0E20                     	;# 
  4309  0E21                     	;# 
  4310  0E22                     	;# 
  4311  0E24                     	;# 
  4312  0E25                     	;# 
  4313  0E28                     	;# 
  4314  0E29                     	;# 
  4315  0E2A                     	;# 
  4316  0E2B                     	;# 
  4317  0E2C                     	;# 
  4318  0E2D                     	;# 
  4319  0E2E                     	;# 
  4320  0E2F                     	;# 
  4321  0E90                     	;# 
  4322  0E91                     	;# 
  4323  0E92                     	;# 
  4324  0E94                     	;# 
  4325  0E95                     	;# 
  4326  0E9C                     	;# 
  4327  0E9D                     	;# 
  4328  0E9E                     	;# 
  4329  0E9F                     	;# 
  4330  0EA0                     	;# 
  4331  0EA1                     	;# 
  4332  0EA2                     	;# 
  4333  0EA3                     	;# 
  4334  0EA4                     	;# 
  4335  0EA5                     	;# 
  4336  0EA6                     	;# 
  4337  0EA7                     	;# 
  4338  0F0F                     	;# 
  4339  0F10                     	;# 
  4340  0F11                     	;# 
  4341  0F12                     	;# 
  4342  0F13                     	;# 
  4343  0F14                     	;# 
  4344  0F15                     	;# 
  4345  0F16                     	;# 
  4346  0F17                     	;# 
  4347  0F18                     	;# 
  4348  0F19                     	;# 
  4349  0F1A                     	;# 
  4350  0F1B                     	;# 
  4351  0F1C                     	;# 
  4352  0F1D                     	;# 
  4353  0F1E                     	;# 
  4354  0F1F                     	;# 
  4355  0F20                     	;# 
  4356  0F21                     	;# 
  4357  0F22                     	;# 
  4358  0F23                     	;# 
  4359  0F24                     	;# 
  4360  0F25                     	;# 
  4361  0F26                     	;# 
  4362  0F27                     	;# 
  4363  0F28                     	;# 
  4364  0F29                     	;# 
  4365  0F2A                     	;# 
  4366  0F2B                     	;# 
  4367  0F2C                     	;# 
  4368  0F2D                     	;# 
  4369  0F2E                     	;# 
  4370  0F2F                     	;# 
  4371  0F30                     	;# 
  4372  0F31                     	;# 
  4373  0F32                     	;# 
  4374  0F33                     	;# 
  4375  0F34                     	;# 
  4376  0F35                     	;# 
  4377  0F36                     	;# 
  4378  0F37                     	;# 
  4379  0FE4                     	;# 
  4380  0FE5                     	;# 
  4381  0FE6                     	;# 
  4382  0FE7                     	;# 
  4383  0FE8                     	;# 
  4384  0FE9                     	;# 
  4385  0FEA                     	;# 
  4386  0FEB                     	;# 
  4387  0FED                     	;# 
  4388  0FEE                     	;# 
  4389  0FEF                     	;# 
  4390  0000                     	;# 
  4391  0001                     	;# 
  4392  0002                     	;# 
  4393  0003                     	;# 
  4394  0004                     	;# 
  4395  0005                     	;# 
  4396  0006                     	;# 
  4397  0007                     	;# 
  4398  0008                     	;# 
  4399  0009                     	;# 
  4400  000A                     	;# 
  4401  000B                     	;# 
  4402  000C                     	;# 
  4403  000D                     	;# 
  4404  000E                     	;# 
  4405  0010                     	;# 
  4406  0011                     	;# 
  4407  0012                     	;# 
  4408  0013                     	;# 
  4409  0014                     	;# 
  4410  0015                     	;# 
  4411  0015                     	;# 
  4412  0016                     	;# 
  4413  0016                     	;# 
  4414  0017                     	;# 
  4415  0018                     	;# 
  4416  0019                     	;# 
  4417  0019                     	;# 
  4418  001A                     	;# 
  4419  001B                     	;# 
  4420  001C                     	;# 
  4421  001D                     	;# 
  4422  001E                     	;# 
  4423  001F                     	;# 
  4424  008C                     	;# 
  4425  008D                     	;# 
  4426  008E                     	;# 
  4427  0090                     	;# 
  4428  0091                     	;# 
  4429  0092                     	;# 
  4430  0093                     	;# 
  4431  0094                     	;# 
  4432  0097                     	;# 
  4433  009B                     	;# 
  4434  009B                     	;# 
  4435  009C                     	;# 
  4436  009D                     	;# 
  4437  009E                     	;# 
  4438  009F                     	;# 
  4439  010C                     	;# 
  4440  010D                     	;# 
  4441  010E                     	;# 
  4442  0111                     	;# 
  4443  0112                     	;# 
  4444  0113                     	;# 
  4445  0114                     	;# 
  4446  0115                     	;# 
  4447  0116                     	;# 
  4448  0117                     	;# 
  4449  0118                     	;# 
  4450  0119                     	;# 
  4451  018C                     	;# 
  4452  018D                     	;# 
  4453  018E                     	;# 
  4454  0197                     	;# 
  4455  0199                     	;# 
  4456  0199                     	;# 
  4457  0199                     	;# 
  4458  019A                     	;# 
  4459  019A                     	;# 
  4460  019A                     	;# 
  4461  019B                     	;# 
  4462  019B                     	;# 
  4463  019B                     	;# 
  4464  019B                     	;# 
  4465  019B                     	;# 
  4466  019C                     	;# 
  4467  019C                     	;# 
  4468  019C                     	;# 
  4469  019D                     	;# 
  4470  019D                     	;# 
  4471  019D                     	;# 
  4472  019E                     	;# 
  4473  019E                     	;# 
  4474  019E                     	;# 
  4475  019F                     	;# 
  4476  019F                     	;# 
  4477  019F                     	;# 
  4478  019F                     	;# 
  4479  019F                     	;# 
  4480  020C                     	;# 
  4481  020D                     	;# 
  4482  020E                     	;# 
  4483  0211                     	;# 
  4484  0211                     	;# 
  4485  0212                     	;# 
  4486  0212                     	;# 
  4487  0213                     	;# 
  4488  0213                     	;# 
  4489  0214                     	;# 
  4490  0214                     	;# 
  4491  0215                     	;# 
  4492  0215                     	;# 
  4493  0215                     	;# 
  4494  0215                     	;# 
  4495  0216                     	;# 
  4496  0216                     	;# 
  4497  0217                     	;# 
  4498  0217                     	;# 
  4499  0219                     	;# 
  4500  021A                     	;# 
  4501  021B                     	;# 
  4502  021C                     	;# 
  4503  021D                     	;# 
  4504  021D                     	;# 
  4505  021E                     	;# 
  4506  021F                     	;# 
  4507  028C                     	;# 
  4508  028D                     	;# 
  4509  028E                     	;# 
  4510  0291                     	;# 
  4511  0291                     	;# 
  4512  0292                     	;# 
  4513  0293                     	;# 
  4514  0294                     	;# 
  4515  0295                     	;# 
  4516  0295                     	;# 
  4517  0296                     	;# 
  4518  0297                     	;# 
  4519  0298                     	;# 
  4520  029F                     	;# 
  4521  030C                     	;# 
  4522  030D                     	;# 
  4523  030E                     	;# 
  4524  0311                     	;# 
  4525  0311                     	;# 
  4526  0312                     	;# 
  4527  0313                     	;# 
  4528  0314                     	;# 
  4529  0315                     	;# 
  4530  0315                     	;# 
  4531  0316                     	;# 
  4532  0317                     	;# 
  4533  0318                     	;# 
  4534  038C                     	;# 
  4535  038D                     	;# 
  4536  038E                     	;# 
  4537  0391                     	;# 
  4538  0392                     	;# 
  4539  0393                     	;# 
  4540  0394                     	;# 
  4541  0395                     	;# 
  4542  0396                     	;# 
  4543  0397                     	;# 
  4544  0398                     	;# 
  4545  0399                     	;# 
  4546  039A                     	;# 
  4547  039C                     	;# 
  4548  039D                     	;# 
  4549  039E                     	;# 
  4550  039F                     	;# 
  4551  0411                     	;# 
  4552  0411                     	;# 
  4553  0412                     	;# 
  4554  0413                     	;# 
  4555  0414                     	;# 
  4556  0415                     	;# 
  4557  0416                     	;# 
  4558  0417                     	;# 
  4559  0418                     	;# 
  4560  0418                     	;# 
  4561  0419                     	;# 
  4562  041A                     	;# 
  4563  041B                     	;# 
  4564  041C                     	;# 
  4565  041D                     	;# 
  4566  041E                     	;# 
  4567  041F                     	;# 
  4568  0498                     	;# 
  4569  0498                     	;# 
  4570  0499                     	;# 
  4571  049A                     	;# 
  4572  049B                     	;# 
  4573  049B                     	;# 
  4574  049C                     	;# 
  4575  049D                     	;# 
  4576  049E                     	;# 
  4577  049F                     	;# 
  4578  0617                     	;# 
  4579  0618                     	;# 
  4580  0619                     	;# 
  4581  0619                     	;# 
  4582  061A                     	;# 
  4583  061B                     	;# 
  4584  061C                     	;# 
  4585  061C                     	;# 
  4586  061F                     	;# 
  4587  0691                     	;# 
  4588  0692                     	;# 
  4589  0693                     	;# 
  4590  0694                     	;# 
  4591  0695                     	;# 
  4592  0696                     	;# 
  4593  0697                     	;# 
  4594  0698                     	;# 
  4595  0699                     	;# 
  4596  0711                     	;# 
  4597  0712                     	;# 
  4598  0713                     	;# 
  4599  0714                     	;# 
  4600  0715                     	;# 
  4601  0716                     	;# 
  4602  0717                     	;# 
  4603  0718                     	;# 
  4604  0719                     	;# 
  4605  0891                     	;# 
  4606  0891                     	;# 
  4607  0891                     	;# 
  4608  0891                     	;# 
  4609  0891                     	;# 
  4610  0891                     	;# 
  4611  0892                     	;# 
  4612  0892                     	;# 
  4613  0892                     	;# 
  4614  0893                     	;# 
  4615  0893                     	;# 
  4616  0893                     	;# 
  4617  0893                     	;# 
  4618  0893                     	;# 
  4619  0893                     	;# 
  4620  0894                     	;# 
  4621  0894                     	;# 
  4622  0894                     	;# 
  4623  0895                     	;# 
  4624  0895                     	;# 
  4625  0895                     	;# 
  4626  0896                     	;# 
  4627  0896                     	;# 
  4628  0896                     	;# 
  4629  089B                     	;# 
  4630  0911                     	;# 
  4631  0912                     	;# 
  4632  0913                     	;# 
  4633  0914                     	;# 
  4634  0915                     	;# 
  4635  0916                     	;# 
  4636  0918                     	;# 
  4637  0919                     	;# 
  4638  091A                     	;# 
  4639  091B                     	;# 
  4640  091C                     	;# 
  4641  091D                     	;# 
  4642  091E                     	;# 
  4643  091F                     	;# 
  4644  0E0F                     	;# 
  4645  0E10                     	;# 
  4646  0E11                     	;# 
  4647  0E12                     	;# 
  4648  0E13                     	;# 
  4649  0E14                     	;# 
  4650  0E15                     	;# 
  4651  0E16                     	;# 
  4652  0E17                     	;# 
  4653  0E18                     	;# 
  4654  0E19                     	;# 
  4655  0E1A                     	;# 
  4656  0E1B                     	;# 
  4657  0E1C                     	;# 
  4658  0E1D                     	;# 
  4659  0E1E                     	;# 
  4660  0E1F                     	;# 
  4661  0E20                     	;# 
  4662  0E21                     	;# 
  4663  0E22                     	;# 
  4664  0E24                     	;# 
  4665  0E25                     	;# 
  4666  0E28                     	;# 
  4667  0E29                     	;# 
  4668  0E2A                     	;# 
  4669  0E2B                     	;# 
  4670  0E2C                     	;# 
  4671  0E2D                     	;# 
  4672  0E2E                     	;# 
  4673  0E2F                     	;# 
  4674  0E90                     	;# 
  4675  0E91                     	;# 
  4676  0E92                     	;# 
  4677  0E94                     	;# 
  4678  0E95                     	;# 
  4679  0E9C                     	;# 
  4680  0E9D                     	;# 
  4681  0E9E                     	;# 
  4682  0E9F                     	;# 
  4683  0EA0                     	;# 
  4684  0EA1                     	;# 
  4685  0EA2                     	;# 
  4686  0EA3                     	;# 
  4687  0EA4                     	;# 
  4688  0EA5                     	;# 
  4689  0EA6                     	;# 
  4690  0EA7                     	;# 
  4691  0F0F                     	;# 
  4692  0F10                     	;# 
  4693  0F11                     	;# 
  4694  0F12                     	;# 
  4695  0F13                     	;# 
  4696  0F14                     	;# 
  4697  0F15                     	;# 
  4698  0F16                     	;# 
  4699  0F17                     	;# 
  4700  0F18                     	;# 
  4701  0F19                     	;# 
  4702  0F1A                     	;# 
  4703  0F1B                     	;# 
  4704  0F1C                     	;# 
  4705  0F1D                     	;# 
  4706  0F1E                     	;# 
  4707  0F1F                     	;# 
  4708  0F20                     	;# 
  4709  0F21                     	;# 
  4710  0F22                     	;# 
  4711  0F23                     	;# 
  4712  0F24                     	;# 
  4713  0F25                     	;# 
  4714  0F26                     	;# 
  4715  0F27                     	;# 
  4716  0F28                     	;# 
  4717  0F29                     	;# 
  4718  0F2A                     	;# 
  4719  0F2B                     	;# 
  4720  0F2C                     	;# 
  4721  0F2D                     	;# 
  4722  0F2E                     	;# 
  4723  0F2F                     	;# 
  4724  0F30                     	;# 
  4725  0F31                     	;# 
  4726  0F32                     	;# 
  4727  0F33                     	;# 
  4728  0F34                     	;# 
  4729  0F35                     	;# 
  4730  0F36                     	;# 
  4731  0F37                     	;# 
  4732  0FE4                     	;# 
  4733  0FE5                     	;# 
  4734  0FE6                     	;# 
  4735  0FE7                     	;# 
  4736  0FE8                     	;# 
  4737  0FE9                     	;# 
  4738  0FEA                     	;# 
  4739  0FEB                     	;# 
  4740  0FED                     	;# 
  4741  0FEE                     	;# 
  4742  0FEF                     	;# 
  4743  0000                     	;# 
  4744  0001                     	;# 
  4745  0002                     	;# 
  4746  0003                     	;# 
  4747  0004                     	;# 
  4748  0005                     	;# 
  4749  0006                     	;# 
  4750  0007                     	;# 
  4751  0008                     	;# 
  4752  0009                     	;# 
  4753  000A                     	;# 
  4754  000B                     	;# 
  4755  000C                     	;# 
  4756  000D                     	;# 
  4757  000E                     	;# 
  4758  0010                     	;# 
  4759  0011                     	;# 
  4760  0012                     	;# 
  4761  0013                     	;# 
  4762  0014                     	;# 
  4763  0015                     	;# 
  4764  0015                     	;# 
  4765  0016                     	;# 
  4766  0016                     	;# 
  4767  0017                     	;# 
  4768  0018                     	;# 
  4769  0019                     	;# 
  4770  0019                     	;# 
  4771  001A                     	;# 
  4772  001B                     	;# 
  4773  001C                     	;# 
  4774  001D                     	;# 
  4775  001E                     	;# 
  4776  001F                     	;# 
  4777  008C                     	;# 
  4778  008D                     	;# 
  4779  008E                     	;# 
  4780  0090                     	;# 
  4781  0091                     	;# 
  4782  0092                     	;# 
  4783  0093                     	;# 
  4784  0094                     	;# 
  4785  0097                     	;# 
  4786  009B                     	;# 
  4787  009B                     	;# 
  4788  009C                     	;# 
  4789  009D                     	;# 
  4790  009E                     	;# 
  4791  009F                     	;# 
  4792  010C                     	;# 
  4793  010D                     	;# 
  4794  010E                     	;# 
  4795  0111                     	;# 
  4796  0112                     	;# 
  4797  0113                     	;# 
  4798  0114                     	;# 
  4799  0115                     	;# 
  4800  0116                     	;# 
  4801  0117                     	;# 
  4802  0118                     	;# 
  4803  0119                     	;# 
  4804  018C                     	;# 
  4805  018D                     	;# 
  4806  018E                     	;# 
  4807  0197                     	;# 
  4808  0199                     	;# 
  4809  0199                     	;# 
  4810  0199                     	;# 
  4811  019A                     	;# 
  4812  019A                     	;# 
  4813  019A                     	;# 
  4814  019B                     	;# 
  4815  019B                     	;# 
  4816  019B                     	;# 
  4817  019B                     	;# 
  4818  019B                     	;# 
  4819  019C                     	;# 
  4820  019C                     	;# 
  4821  019C                     	;# 
  4822  019D                     	;# 
  4823  019D                     	;# 
  4824  019D                     	;# 
  4825  019E                     	;# 
  4826  019E                     	;# 
  4827  019E                     	;# 
  4828  019F                     	;# 
  4829  019F                     	;# 
  4830  019F                     	;# 
  4831  019F                     	;# 
  4832  019F                     	;# 
  4833  020C                     	;# 
  4834  020D                     	;# 
  4835  020E                     	;# 
  4836  0211                     	;# 
  4837  0211                     	;# 
  4838  0212                     	;# 
  4839  0212                     	;# 
  4840  0213                     	;# 
  4841  0213                     	;# 
  4842  0214                     	;# 
  4843  0214                     	;# 
  4844  0215                     	;# 
  4845  0215                     	;# 
  4846  0215                     	;# 
  4847  0215                     	;# 
  4848  0216                     	;# 
  4849  0216                     	;# 
  4850  0217                     	;# 
  4851  0217                     	;# 
  4852  0219                     	;# 
  4853  021A                     	;# 
  4854  021B                     	;# 
  4855  021C                     	;# 
  4856  021D                     	;# 
  4857  021D                     	;# 
  4858  021E                     	;# 
  4859  021F                     	;# 
  4860  028C                     	;# 
  4861  028D                     	;# 
  4862  028E                     	;# 
  4863  0291                     	;# 
  4864  0291                     	;# 
  4865  0292                     	;# 
  4866  0293                     	;# 
  4867  0294                     	;# 
  4868  0295                     	;# 
  4869  0295                     	;# 
  4870  0296                     	;# 
  4871  0297                     	;# 
  4872  0298                     	;# 
  4873  029F                     	;# 
  4874  030C                     	;# 
  4875  030D                     	;# 
  4876  030E                     	;# 
  4877  0311                     	;# 
  4878  0311                     	;# 
  4879  0312                     	;# 
  4880  0313                     	;# 
  4881  0314                     	;# 
  4882  0315                     	;# 
  4883  0315                     	;# 
  4884  0316                     	;# 
  4885  0317                     	;# 
  4886  0318                     	;# 
  4887  038C                     	;# 
  4888  038D                     	;# 
  4889  038E                     	;# 
  4890  0391                     	;# 
  4891  0392                     	;# 
  4892  0393                     	;# 
  4893  0394                     	;# 
  4894  0395                     	;# 
  4895  0396                     	;# 
  4896  0397                     	;# 
  4897  0398                     	;# 
  4898  0399                     	;# 
  4899  039A                     	;# 
  4900  039C                     	;# 
  4901  039D                     	;# 
  4902  039E                     	;# 
  4903  039F                     	;# 
  4904  0411                     	;# 
  4905  0411                     	;# 
  4906  0412                     	;# 
  4907  0413                     	;# 
  4908  0414                     	;# 
  4909  0415                     	;# 
  4910  0416                     	;# 
  4911  0417                     	;# 
  4912  0418                     	;# 
  4913  0418                     	;# 
  4914  0419                     	;# 
  4915  041A                     	;# 
  4916  041B                     	;# 
  4917  041C                     	;# 
  4918  041D                     	;# 
  4919  041E                     	;# 
  4920  041F                     	;# 
  4921  0498                     	;# 
  4922  0498                     	;# 
  4923  0499                     	;# 
  4924  049A                     	;# 
  4925  049B                     	;# 
  4926  049B                     	;# 
  4927  049C                     	;# 
  4928  049D                     	;# 
  4929  049E                     	;# 
  4930  049F                     	;# 
  4931  0617                     	;# 
  4932  0618                     	;# 
  4933  0619                     	;# 
  4934  0619                     	;# 
  4935  061A                     	;# 
  4936  061B                     	;# 
  4937  061C                     	;# 
  4938  061C                     	;# 
  4939  061F                     	;# 
  4940  0691                     	;# 
  4941  0692                     	;# 
  4942  0693                     	;# 
  4943  0694                     	;# 
  4944  0695                     	;# 
  4945  0696                     	;# 
  4946  0697                     	;# 
  4947  0698                     	;# 
  4948  0699                     	;# 
  4949  0711                     	;# 
  4950  0712                     	;# 
  4951  0713                     	;# 
  4952  0714                     	;# 
  4953  0715                     	;# 
  4954  0716                     	;# 
  4955  0717                     	;# 
  4956  0718                     	;# 
  4957  0719                     	;# 
  4958  0891                     	;# 
  4959  0891                     	;# 
  4960  0891                     	;# 
  4961  0891                     	;# 
  4962  0891                     	;# 
  4963  0891                     	;# 
  4964  0892                     	;# 
  4965  0892                     	;# 
  4966  0892                     	;# 
  4967  0893                     	;# 
  4968  0893                     	;# 
  4969  0893                     	;# 
  4970  0893                     	;# 
  4971  0893                     	;# 
  4972  0893                     	;# 
  4973  0894                     	;# 
  4974  0894                     	;# 
  4975  0894                     	;# 
  4976  0895                     	;# 
  4977  0895                     	;# 
  4978  0895                     	;# 
  4979  0896                     	;# 
  4980  0896                     	;# 
  4981  0896                     	;# 
  4982  089B                     	;# 
  4983  0911                     	;# 
  4984  0912                     	;# 
  4985  0913                     	;# 
  4986  0914                     	;# 
  4987  0915                     	;# 
  4988  0916                     	;# 
  4989  0918                     	;# 
  4990  0919                     	;# 
  4991  091A                     	;# 
  4992  091B                     	;# 
  4993  091C                     	;# 
  4994  091D                     	;# 
  4995  091E                     	;# 
  4996  091F                     	;# 
  4997  0E0F                     	;# 
  4998  0E10                     	;# 
  4999  0E11                     	;# 
  5000  0E12                     	;# 
  5001  0E13                     	;# 
  5002  0E14                     	;# 
  5003  0E15                     	;# 
  5004  0E16                     	;# 
  5005  0E17                     	;# 
  5006  0E18                     	;# 
  5007  0E19                     	;# 
  5008  0E1A                     	;# 
  5009  0E1B                     	;# 
  5010  0E1C                     	;# 
  5011  0E1D                     	;# 
  5012  0E1E                     	;# 
  5013  0E1F                     	;# 
  5014  0E20                     	;# 
  5015  0E21                     	;# 
  5016  0E22                     	;# 
  5017  0E24                     	;# 
  5018  0E25                     	;# 
  5019  0E28                     	;# 
  5020  0E29                     	;# 
  5021  0E2A                     	;# 
  5022  0E2B                     	;# 
  5023  0E2C                     	;# 
  5024  0E2D                     	;# 
  5025  0E2E                     	;# 
  5026  0E2F                     	;# 
  5027  0E90                     	;# 
  5028  0E91                     	;# 
  5029  0E92                     	;# 
  5030  0E94                     	;# 
  5031  0E95                     	;# 
  5032  0E9C                     	;# 
  5033  0E9D                     	;# 
  5034  0E9E                     	;# 
  5035  0E9F                     	;# 
  5036  0EA0                     	;# 
  5037  0EA1                     	;# 
  5038  0EA2                     	;# 
  5039  0EA3                     	;# 
  5040  0EA4                     	;# 
  5041  0EA5                     	;# 
  5042  0EA6                     	;# 
  5043  0EA7                     	;# 
  5044  0F0F                     	;# 
  5045  0F10                     	;# 
  5046  0F11                     	;# 
  5047  0F12                     	;# 
  5048  0F13                     	;# 
  5049  0F14                     	;# 
  5050  0F15                     	;# 
  5051  0F16                     	;# 
  5052  0F17                     	;# 
  5053  0F18                     	;# 
  5054  0F19                     	;# 
  5055  0F1A                     	;# 
  5056  0F1B                     	;# 
  5057  0F1C                     	;# 
  5058  0F1D                     	;# 
  5059  0F1E                     	;# 
  5060  0F1F                     	;# 
  5061  0F20                     	;# 
  5062  0F21                     	;# 
  5063  0F22                     	;# 
  5064  0F23                     	;# 
  5065  0F24                     	;# 
  5066  0F25                     	;# 
  5067  0F26                     	;# 
  5068  0F27                     	;# 
  5069  0F28                     	;# 
  5070  0F29                     	;# 
  5071  0F2A                     	;# 
  5072  0F2B                     	;# 
  5073  0F2C                     	;# 
  5074  0F2D                     	;# 
  5075  0F2E                     	;# 
  5076  0F2F                     	;# 
  5077  0F30                     	;# 
  5078  0F31                     	;# 
  5079  0F32                     	;# 
  5080  0F33                     	;# 
  5081  0F34                     	;# 
  5082  0F35                     	;# 
  5083  0F36                     	;# 
  5084  0F37                     	;# 
  5085  0FE4                     	;# 
  5086  0FE5                     	;# 
  5087  0FE6                     	;# 
  5088  0FE7                     	;# 
  5089  0FE8                     	;# 
  5090  0FE9                     	;# 
  5091  0FEA                     	;# 
  5092  0FEB                     	;# 
  5093  0FED                     	;# 
  5094  0FEE                     	;# 
  5095  0FEF                     	;_spi1_send_buffer_data
  5096                           
  5097                           	psect	idataCOMMON
  5098  0003                     __pidataCOMMON:	
  5099                           
  5100                           ;initializer for _SPI_OFFSET_BYTE
  5101  0003  3401               	retlw	1
  5102                           
  5103                           	psect	idataBANK1
  5104  0D0B                     __pidataBANK1:	
  5105                           
  5106                           ;initializer for _direction
  5107  0D0B  3401               	retlw	1
  5108  0D0C  3400               	retlw	0
  5109                           
  5110                           ;initializer for _linkAngle
  5111  0D0D  3468               	retlw	104
  5112  0D0E  3401               	retlw	1
  5113                           
  5114                           ;initializer for _st_dataLength
  5115  0D0F  34FF               	retlw	255
  5116  0D10  34FF               	retlw	255
  5117                           
  5118                           	psect	stringtext1
  5119  1000                     __pstringtext1:	
  5120  1000                     _MACHINE_ID:	
  5121  1000  3401               	retlw	1
  5122  1001  3400               	retlw	0
  5123  1002                     __end_of_MACHINE_ID:	
  5124                           
  5125                           	psect	stringtext2
  5126  1002                     __pstringtext2:	
  5127  1002                     _VENDER_ID:	
  5128  1002  3401               	retlw	1
  5129  1003  3400               	retlw	0
  5130  1004                     __end_of_VENDER_ID:	
  5131                           
  5132                           	psect	bitnvCOMMON
  5133  03D8                     __pbitnvCOMMON:	
  5134  03D8                     _isEndPointTrig:	
  5135  03D8                     	ds	1
  5136  000E                     _PORTC	set	14
  5137  000D                     _PORTB	set	13
  5138  000C                     _PORTA	set	12
  5139  000B                     _INTCONbits	set	11
  5140  0010                     _PIR0bits	set	16
  5141  0012                     _PIR2bits	set	18
  5142  0011                     _PIR1bits	set	17
  5143  008E                     _TRISC	set	142
  5144  008D                     _TRISB	set	141
  5145  008C                     _TRISA	set	140
  5146  0092                     _PIE2bits	set	146
  5147  0091                     _PIE1bits	set	145
  5148  0090                     _PIE0bits	set	144
  5149  008E                     _TRISCbits	set	142
  5150  008D                     _TRISBbits	set	141
  5151  010C                     _LATAbits	set	268
  5152  018E                     _ANSELC	set	398
  5153  018D                     _ANSELB	set	397
  5154  018C                     _ANSELA	set	396
  5155  0219                     _SSP2BUF	set	537
  5156  021C                     _SSP2STATbits	set	540
  5157  021D                     _SSP2CON1bits	set	541
  5158  021F                     _SSP2CON3bits	set	543
  5159  0214                     _SSP1STATbits	set	532
  5160  0215                     _SSP1CON1bits	set	533
  5161  0217                     _SSP1CON3bits	set	535
  5162  020C                     _WPUA	set	524
  5163  020D                     _WPUB	set	525
  5164  020E                     _WPUC	set	526
  5165  0211                     _SSP1BUF	set	529
  5166  0392                     _IOCANbits	set	914
  5167  0391                     _IOCAPbits	set	913
  5168  038C                     _INLVLAbits	set	908
  5169  038E                     _INLVLCbits	set	910
  5170  038D                     _INLVLBbits	set	909
  5171  0393                     _IOCAFbits	set	915
  5172  0894                     _NVMDATH	set	2196
  5173  0893                     _NVMDATL	set	2195
  5174  0892                     _NVMADRH	set	2194
  5175  0891                     _NVMADRL	set	2193
  5176  0895                     _NVMCON1bits	set	2197
  5177  44A8                     _RD	set	17576
  5178  091E                     _OSCTUNEbits	set	2334
  5179  091F                     _OSCFRQbits	set	2335
  5180  0E1F                     _SSP2SSPPSbits	set	3615
  5181  0E22                     _SSP1SSPPSbits	set	3618
  5182  0E9F                     _RB7PPS	set	3743
  5183  0E92                     _RA2PPS	set	3730
  5184  0EA2                     _RC2PPS	set	3746
  5185                           
  5186                           ; #config settings
  5187  0000                     
  5188                           	psect	cinit
  5189  004E                     start_initialization:	
  5190  004E                     __initialization:		;BIGRAM
  5191                           
  5192                           ; Initialize objects allocated to COMMON
  5193  004E  3180  2003  3180   	fcall	__pidataCOMMON	;fetch initializer
  5194  0051  00FD               	movwf	__pdataCOMMON& (0+127)
  5195                           
  5196                           ; Initialize objects allocated to BANK1
  5197  0052  300B               	movlw	low __pidataBANK1
  5198  0053  0084               	movwf	4
  5199  0054  308D               	movlw	(high __pidataBANK1)| (0+128)
  5200  0055  0085               	movwf	5
  5201  0056  0021               	movlb	1	; select bank1
  5202  0057  0012               	moviw fsr0++
  5203  0058  00DE               	movwf	__pdataBANK1& (0+127)
  5204  0059  0012               	moviw fsr0++
  5205  005A  00DF               	movwf	(__pdataBANK1+1)& (0+127)
  5206  005B  0012               	moviw fsr0++
  5207  005C  00E0               	movwf	(__pdataBANK1+2)& (0+127)
  5208  005D  0012               	moviw fsr0++
  5209  005E  00E1               	movwf	(__pdataBANK1+3)& (0+127)
  5210  005F  0012               	moviw fsr0++
  5211  0060  00E2               	movwf	(__pdataBANK1+4)& (0+127)
  5212  0061  0012               	moviw fsr0++
  5213  0062  00E3               	movwf	(__pdataBANK1+5)& (0+127)
  5214                           
  5215                           ; Clear objects allocated to BIGRAM
  5216  0063  30F0               	movlw	low (0+9456)
  5217  0064  0084               	movwf	4
  5218  0065  3024               	movlw	high (0+9456)
  5219  0066  0085               	movwf	5
  5220  0067  3000               	movlw	0
  5221  0068  00FE               	movwf	btemp
  5222  0069  3003               	movlw	3
  5223  006A  00FF               	movwf	btemp+1
  5224  006B  318D  2539  3180   	fcall	clear_ram0
  5225                           
  5226                           ; Clear objects allocated to BITCOMMON
  5227  006E  01F0               	clrf	(__pbitbssCOMMON/(0+8))& (0+127)
  5228  006F  01F1               	clrf	((__pbitbssCOMMON/(0+8)+1))& (0+127)
  5229                           
  5230                           ; Clear objects allocated to COMMON
  5231  0070  01FC               	clrf	__pbssCOMMON& (0+127)
  5232                           
  5233                           ; Clear objects allocated to BANK0
  5234  0071  3059               	movlw	low __pbssBANK0
  5235  0072  0084               	movwf	4
  5236  0073  3000               	movlw	high __pbssBANK0
  5237  0074  0085               	movwf	5
  5238  0075  3016               	movlw	22
  5239  0076  00FE               	movwf	btemp
  5240  0077  3000               	movlw	0
  5241  0078  00FF               	movwf	btemp+1
  5242  0079  318D  2539  3180   	fcall	clear_ram0
  5243                           
  5244                           ; Clear objects allocated to BANK1
  5245  007C  30A0               	movlw	low __pbssBANK1
  5246  007D  0084               	movwf	4
  5247  007E  3000               	movlw	high __pbssBANK1
  5248  007F  0085               	movwf	5
  5249  0080  303E               	movlw	62
  5250  0081  00FE               	movwf	btemp
  5251  0082  3000               	movlw	0
  5252  0083  00FF               	movwf	btemp+1
  5253  0084  318D  2539  3180   	fcall	clear_ram0
  5254                           
  5255                           ; Clear objects allocated to BANK2
  5256  0087  3020               	movlw	low __pbssBANK2
  5257  0088  0084               	movwf	4
  5258  0089  3001               	movlw	high __pbssBANK2
  5259  008A  0085               	movwf	5
  5260  008B  304A               	movlw	74
  5261  008C  00FE               	movwf	btemp
  5262  008D  3000               	movlw	0
  5263  008E  00FF               	movwf	btemp+1
  5264  008F  318D  2539  3180   	fcall	clear_ram0
  5265                           
  5266                           ; Clear objects allocated to BANK3
  5267  0092  30A0               	movlw	low __pbssBANK3
  5268  0093  0084               	movwf	4
  5269  0094  3001               	movlw	high __pbssBANK3
  5270  0095  0085               	movwf	5
  5271  0096  3012               	movlw	18
  5272  0097  00FE               	movwf	btemp
  5273  0098  3000               	movlw	0
  5274  0099  00FF               	movwf	btemp+1
  5275  009A  318D  2539         	fcall	clear_ram0
  5276  009C                     end_of_initialization:	
  5277                           ;End of C runtime variable initialization code
  5278                           
  5279  009C                     __end_of__initialization:	
  5280  009C  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  5281  009D  0020               	movlb	0
  5282  009E  318F  2F4D         	ljmp	_main	;jump to C main() function
  5283                           
  5284                           	psect	bitbssCOMMON
  5285  0380                     __pbitbssCOMMON:	
  5286  0380                     _isMyAddr:	
  5287  0380                     	ds	1
  5288  0381                     _isMycargo:	
  5289  0381                     	ds	1
  5290  0382                     _workingcounta3:	
  5291  0382                     	ds	1
  5292  0383                     _workingcounta2:	
  5293  0383                     	ds	1
  5294  0384                     _workingcounta1:	
  5295  0384                     	ds	1
  5296  0385                     _workingcounta0:	
  5297  0385                     	ds	1
  5298  0386                     _ra3condision:	
  5299  0386                     	ds	1
  5300  0387                     _isreadTrain:	
  5301  0387                     	ds	1
  5302  0388                     _isCalibrated:	
  5303  0388                     	ds	1
  5304  0389                     _isSendSPI2:	
  5305  0389                     	ds	1
  5306                           
  5307                           	psect	bssCOMMON
  5308  007C                     __pbssCOMMON:	
  5309  007C                     _spi1_Read_data:	
  5310  007C                     	ds	1
  5311                           
  5312                           	psect	dataCOMMON
  5313  007D                     __pdataCOMMON:	
  5314  007D                     _SPI_OFFSET_BYTE:	
  5315  007D                     	ds	1
  5316                           
  5317                           	psect	bssBANK0
  5318  0059                     __pbssBANK0:	
  5319  0059                     _cargoData:	
  5320  0059                     	ds	16
  5321  0069                     _countabuf:	
  5322  0069                     	ds	2
  5323  006B                     _count2:	
  5324  006B                     	ds	2
  5325  006D                     _st_type:	
  5326  006D                     	ds	1
  5327  006E                     _spi2_Send_data:	
  5328  006E                     	ds	1
  5329                           
  5330                           	psect	bssBANK1
  5331  00A0                     __pbssBANK1:	
  5332  00A0                     _command:	
  5333  00A0                     	ds	18
  5334  00B2                     _calibdata:	
  5335  00B2                     	ds	9
  5336  00BB                     _linkInfo:	
  5337  00BB                     	ds	6
  5338  00C1                     _startTrainBytes:	
  5339  00C1                     	ds	4
  5340  00C5                     _SIZE_COUNT:	
  5341  00C5                     	ds	2
  5342  00C7                     _EEPROM_ADDR_buf:	
  5343  00C7                     	ds	2
  5344  00C9                     _RaadData:	
  5345  00C9                     	ds	2
  5346  00CB                     _send_count1:	
  5347  00CB                     	ds	2
  5348  00CD                     _spi1_send_count:	
  5349  00CD                     	ds	2
  5350  00CF                     _read_count2:	
  5351  00CF                     	ds	2
  5352  00D1                     _counta2:	
  5353  00D1                     	ds	2
  5354  00D3                     _trainPos:	
  5355  00D3                     	ds	2
  5356  00D5                     _read_count1:	
  5357  00D5                     	ds	2
  5358  00D7                     _count1:	
  5359  00D7                     	ds	2
  5360  00D9                     _readNG:	
  5361  00D9                     	ds	1
  5362  00DA                     _readOK:	
  5363  00DA                     	ds	1
  5364  00DB                     _spi2_Read_data:	
  5365  00DB                     	ds	1
  5366  00DC                     _send_data:	
  5367  00DC                     	ds	1
  5368  00DD                     _eeprom_address:	
  5369  00DD                     	ds	1
  5370                           
  5371                           	psect	dataBANK1
  5372  00DE                     __pdataBANK1:	
  5373  00DE                     _direction:	
  5374  00DE                     	ds	2
  5375  00E0                     _linkAngle:	
  5376  00E0                     	ds	2
  5377  00E2                     _st_dataLength:	
  5378  00E2                     	ds	2
  5379                           
  5380                           	psect	bssBANK2
  5381  0120                     __pbssBANK2:	
  5382  0120                     _position:	
  5383  0120                     	ds	20
  5384  0134                     _cargo_index:	
  5385  0134                     	ds	18
  5386  0146                     _IOCode:	
  5387  0146                     	ds	18
  5388  0158                     _comu_types:	
  5389  0158                     	ds	18
  5390                           
  5391                           	psect	bssBANK3
  5392  01A0                     __pbssBANK3:	
  5393  01A0                     _index:	
  5394  01A0                     	ds	18
  5395                           
  5396                           	psect	clrtext
  5397  0D39                     clear_ram0:	
  5398                           ;	Called with FSR0 containing the base address, and
  5399                           ;	btemp/btemp+1 has the size to clear
  5400                           
  5401  0D39  0064               	clrwdt	;clear the watchdog before getting into this loop
  5402  0D3A                     clrloop0:	
  5403  0D3A  0180               	clrf	0	;clear RAM location pointed to by FSR
  5404  0D3B  3101               	addfsr 0,1
  5405  0D3C  3001               	movlw	1
  5406  0D3D  02FE               	subwf	126,f
  5407  0D3E  3000               	movlw	0
  5408  0D3F  3BFF               	subwfb	127,f
  5409  0D40  087F               	movf	127,w
  5410  0D41  047E               	iorwf	126,w
  5411  0D42  1903               	btfsc	3,2
  5412  0D43  3400               	retlw	0	;all done for this memory range, return
  5413  0D44  2D3A               	goto	clrloop0	;have we reached the end yet?
  5414                           
  5415                           	psect	cstackBANK1
  5416  00E4                     __pcstackBANK1:	
  5417  00E4                     setComunicateMode@m_type:	
  5418                           
  5419                           ; 1 bytes @ 0x0
  5420  00E4                     	ds	1
  5421  00E5                     setComunicateMode@i:	
  5422                           
  5423                           ; 2 bytes @ 0x1
  5424  00E5                     	ds	2
  5425                           
  5426                           	psect	cstackCOMMON
  5427  0072                     __pcstackCOMMON:	
  5428  0072                     ?_isTrainSt:	
  5429  0072                     ?_isSPI1read:	
  5430                           ; 1 bit 
  5431                           
  5432  0072                     ?_setComunicateMode:	
  5433                           ; 1 bit 
  5434                           
  5435  0072                     ?_setIndexMode:	
  5436                           ; 1 bit 
  5437                           
  5438  0072                     ?_isSPI2read:	
  5439                           ; 1 bit 
  5440                           
  5441  0072                     ?_clutchaction:	
  5442                           ; 1 bit 
  5443                           
  5444  0072                     ?_isEndpoint:	
  5445                           ; 1 bit 
  5446                           
  5447  0072                     ?_setSPI1sendData:	
  5448                           ; 1 bit 
  5449                           
  5450  0072                     ??_setSPI1sendData:	
  5451                           ; 1 bytes @ 0x0
  5452                           
  5453  0072                     ?_addAngle:	
  5454                           ; 1 bytes @ 0x0
  5455                           
  5456  0072                     ?_clear:	
  5457                           ; 1 bytes @ 0x0
  5458                           
  5459  0072                     ?_resetTrainData:	
  5460                           ; 1 bytes @ 0x0
  5461                           
  5462  0072                     ?_initComand:	
  5463                           ; 1 bytes @ 0x0
  5464                           
  5465  0072                     ?_initIndex:	
  5466                           ; 1 bytes @ 0x0
  5467                           
  5468  0072                     ?_initComu_types:	
  5469                           ; 1 bytes @ 0x0
  5470                           
  5471  0072                     ?_InitCalibrate:	
  5472                           ; 1 bytes @ 0x0
  5473                           
  5474  0072                     ?_spi_init:	
  5475                           ; 1 bytes @ 0x0
  5476                           
  5477  0072                     ?_initCargo:	
  5478                           ; 1 bytes @ 0x0
  5479                           
  5480  0072                     ?_initPosition:	
  5481                           ; 1 bytes @ 0x0
  5482                           
  5483  0072                     ?_read_train:	
  5484                           ; 1 bytes @ 0x0
  5485                           
  5486  0072                     ?_setSPI2sendData:	
  5487                           ; 1 bytes @ 0x0
  5488                           
  5489  0072                     ?_restartCargo:	
  5490                           ; 1 bytes @ 0x0
  5491                           
  5492  0072                     ?_spi1_init:	
  5493                           ; 1 bytes @ 0x0
  5494                           
  5495  0072                     ?_spi2_init:	
  5496                           ; 1 bytes @ 0x0
  5497                           
  5498  0072                     ?_setMoter_lotate:	
  5499                           ; 1 bytes @ 0x0
  5500                           
  5501  0072                     ?_resetCargo:	
  5502                           ; 1 bytes @ 0x0
  5503                           
  5504  0072                     ?_readCargo:	
  5505                           ; 1 bytes @ 0x0
  5506                           
  5507  0072                     ?_EEPROM_download:	
  5508                           ; 1 bytes @ 0x0
  5509                           
  5510  0072                     ?_setCargoAngle:	
  5511                           ; 1 bytes @ 0x0
  5512                           
  5513  0072                     ?_InterMSSP:	
  5514                           ; 1 bytes @ 0x0
  5515                           
  5516  0072                     ?_initbuffer:	
  5517                           ; 1 bytes @ 0x0
  5518                           
  5519  0072                     ?_init:	
  5520                           ; 1 bytes @ 0x0
  5521                           
  5522  0072                     ?_io_init:	
  5523                           ; 1 bytes @ 0x0
  5524                           
  5525  0072                     ?_initTrain:	
  5526                           ; 1 bytes @ 0x0
  5527                           
  5528  0072                     ?_main:	
  5529                           ; 1 bytes @ 0x0
  5530                           
  5531  0072                     ??_isSPI2read:	
  5532                           ; 1 bytes @ 0x0
  5533                           
  5534  0072                     ?_setSPI1sendDataManual:	
  5535                           ; 1 bytes @ 0x0
  5536                           
  5537  0072                     ?_Calibrate_download:	
  5538                           ; 1 bytes @ 0x0
  5539                           
  5540  0072                     ?_getMoter_lotate:	
  5541                           ; 1 bytes @ 0x0
  5542                           
  5543  0072                     setCargoAngle@m_linkAngleTo:	
  5544                           ; 2 bytes @ 0x0
  5545                           
  5546                           
  5547                           ; 2 bytes @ 0x0
  5548  0072                     	ds	2
  5549  0074                     ??_addAngle:	
  5550  0074                     ??_getMoter_lotate:	
  5551                           ; 1 bytes @ 0x2
  5552                           
  5553  0074                     ??_setCargoAngle:	
  5554                           ; 1 bytes @ 0x2
  5555                           
  5556  0074                     ??_InterMSSP:	
  5557                           ; 1 bytes @ 0x2
  5558                           
  5559                           
  5560                           ; 1 bytes @ 0x2
  5561  0074                     	ds	6
  5562  007A                     InterMSSP@buf:	
  5563                           
  5564                           ; 1 bytes @ 0x8
  5565  007A                     	ds	1
  5566                           
  5567                           	psect	cstackBANK0
  5568  0020                     __pcstackBANK0:	
  5569  0020                     ??_clear:	
  5570  0020                     ??_isTrainSt:	
  5571                           ; 1 bytes @ 0x0
  5572                           
  5573  0020                     ??_resetTrainData:	
  5574                           ; 1 bytes @ 0x0
  5575                           
  5576  0020                     ??_initComand:	
  5577                           ; 1 bytes @ 0x0
  5578                           
  5579  0020                     ??_initIndex:	
  5580                           ; 1 bytes @ 0x0
  5581                           
  5582  0020                     ??_initComu_types:	
  5583                           ; 1 bytes @ 0x0
  5584                           
  5585  0020                     ??_initCargo:	
  5586                           ; 1 bytes @ 0x0
  5587                           
  5588  0020                     ??_initPosition:	
  5589                           ; 1 bytes @ 0x0
  5590                           
  5591  0020                     ??_isSPI1read:	
  5592                           ; 1 bytes @ 0x0
  5593                           
  5594  0020                     ??_read_train:	
  5595                           ; 1 bytes @ 0x0
  5596                           
  5597  0020                     ??_setSPI2sendData:	
  5598                           ; 1 bytes @ 0x0
  5599                           
  5600  0020                     ??_restartCargo:	
  5601                           ; 1 bytes @ 0x0
  5602                           
  5603  0020                     ??_spi1_init:	
  5604                           ; 1 bytes @ 0x0
  5605                           
  5606  0020                     ??_spi2_init:	
  5607                           ; 1 bytes @ 0x0
  5608                           
  5609  0020                     ??_setMoter_lotate:	
  5610                           ; 1 bytes @ 0x0
  5611                           
  5612  0020                     ??_resetCargo:	
  5613                           ; 1 bytes @ 0x0
  5614                           
  5615  0020                     ??_initbuffer:	
  5616                           ; 1 bytes @ 0x0
  5617                           
  5618  0020                     ??_io_init:	
  5619                           ; 1 bytes @ 0x0
  5620                           
  5621  0020                     ??_setSPI1sendDataManual:	
  5622                           ; 1 bytes @ 0x0
  5623                           
  5624  0020                     ??_clutchaction:	
  5625                           ; 1 bytes @ 0x0
  5626                           
  5627  0020                     ?_ReadEEPROM:	
  5628                           ; 1 bytes @ 0x0
  5629                           
  5630  0020                     ?___lmul:	
  5631                           ; 1 bytes @ 0x0
  5632                           
  5633  0020                     ?___aldiv:	
  5634                           ; 4 bytes @ 0x0
  5635                           
  5636  0020                     ?___almod:	
  5637                           ; 4 bytes @ 0x0
  5638                           
  5639  0020                     ?_getCargoData:	
  5640                           ; 4 bytes @ 0x0
  5641                           
  5642  0020                     setSPI1sendDataManual@data:	
  5643                           ; 16 bytes @ 0x0
  5644                           
  5645  0020                     clutchaction@comannd:	
  5646                           ; 1 bytes @ 0x0
  5647                           
  5648  0020                     setMoter_lotate@lotate:	
  5649                           ; 1 bytes @ 0x0
  5650                           
  5651  0020                     ReadEEPROM@addr:	
  5652                           ; 1 bytes @ 0x0
  5653                           
  5654  0020                     ___lmul@multiplier:	
  5655                           ; 2 bytes @ 0x0
  5656                           
  5657  0020                     ___aldiv@divisor:	
  5658                           ; 4 bytes @ 0x0
  5659                           
  5660  0020                     ___almod@divisor:	
  5661                           ; 4 bytes @ 0x0
  5662                           
  5663                           
  5664                           ; 4 bytes @ 0x0
  5665  0020                     	ds	1
  5666  0021                     ??_setIndexMode:	
  5667  0021                     ??_isEndpoint:	
  5668                           ; 1 bytes @ 0x1
  5669                           
  5670  0021                     spi1_init@dummy:	
  5671                           ; 1 bytes @ 0x1
  5672                           
  5673  0021                     spi2_init@dummy:	
  5674                           ; 1 bytes @ 0x1
  5675                           
  5676                           
  5677                           ; 1 bytes @ 0x1
  5678  0021                     	ds	1
  5679  0022                     ??_spi_init:	
  5680  0022                     ??_ReadEEPROM:	
  5681                           ; 1 bytes @ 0x2
  5682                           
  5683  0022                     setIndexMode@m_index:	
  5684                           ; 1 bytes @ 0x2
  5685                           
  5686  0022                     initbuffer@i:	
  5687                           ; 1 bytes @ 0x2
  5688                           
  5689  0022                     read_train@bufint:	
  5690                           ; 2 bytes @ 0x2
  5691                           
  5692                           
  5693                           ; 2 bytes @ 0x2
  5694  0022                     	ds	1
  5695  0023                     ReadEEPROM@Hiadr:	
  5696  0023                     setIndexMode@i:	
  5697                           ; 1 bytes @ 0x3
  5698                           
  5699                           
  5700                           ; 2 bytes @ 0x3
  5701  0023                     	ds	1
  5702  0024                     ??_init:	
  5703  0024                     ReadEEPROM@Loadr:	
  5704                           ; 1 bytes @ 0x4
  5705                           
  5706  0024                     ___lmul@multiplicand:	
  5707                           ; 1 bytes @ 0x4
  5708                           
  5709  0024                     ___aldiv@dividend:	
  5710                           ; 4 bytes @ 0x4
  5711                           
  5712  0024                     ___almod@dividend:	
  5713                           ; 4 bytes @ 0x4
  5714                           
  5715                           
  5716                           ; 4 bytes @ 0x4
  5717  0024                     	ds	2
  5718  0026                     isEndpoint@spi2data:	
  5719                           
  5720                           ; 1 bytes @ 0x6
  5721  0026                     	ds	2
  5722  0028                     ??___lmul:	
  5723  0028                     ??___aldiv:	
  5724                           ; 1 bytes @ 0x8
  5725                           
  5726  0028                     ??___almod:	
  5727                           ; 1 bytes @ 0x8
  5728                           
  5729  0028                     ___lmul@product:	
  5730                           ; 1 bytes @ 0x8
  5731                           
  5732                           
  5733                           ; 4 bytes @ 0x8
  5734  0028                     	ds	1
  5735  0029                     ___aldiv@counter:	
  5736  0029                     ___almod@counter:	
  5737                           ; 1 bytes @ 0x9
  5738                           
  5739                           
  5740                           ; 1 bytes @ 0x9
  5741  0029                     	ds	1
  5742  002A                     isTrainSt@buf:	
  5743  002A                     ___aldiv@sign:	
  5744                           ; 1 bytes @ 0xA
  5745                           
  5746  002A                     ___almod@sign:	
  5747                           ; 1 bytes @ 0xA
  5748                           
  5749                           
  5750                           ; 1 bytes @ 0xA
  5751  002A                     	ds	1
  5752  002B                     ??_initTrain:	
  5753  002B                     ___aldiv@quotient:	
  5754                           ; 1 bytes @ 0xB
  5755                           
  5756                           
  5757                           ; 4 bytes @ 0xB
  5758  002B                     	ds	4
  5759  002F                     ?_TransLong256To255:	
  5760  002F                     TransLong256To255@data:	
  5761                           ; 4 bytes @ 0xF
  5762                           
  5763                           
  5764                           ; 4 bytes @ 0xF
  5765  002F                     	ds	1
  5766  0030                     ??_getCargoData:	
  5767                           
  5768                           ; 1 bytes @ 0x10
  5769  0030                     	ds	1
  5770  0031                     ??_InitCalibrate:	
  5771  0031                     ??_EEPROM_download:	
  5772                           ; 1 bytes @ 0x11
  5773                           
  5774                           
  5775                           ; 1 bytes @ 0x11
  5776  0031                     	ds	1
  5777  0032                     InitCalibrate@cargoData:	
  5778                           
  5779                           ; 16 bytes @ 0x12
  5780  0032                     	ds	1
  5781  0033                     ??_TransLong256To255:	
  5782                           
  5783                           ; 1 bytes @ 0x13
  5784  0033                     	ds	2
  5785  0035                     EEPROM_download@buflong:	
  5786                           
  5787                           ; 4 bytes @ 0x15
  5788  0035                     	ds	2
  5789  0037                     TransLong256To255@TransData:	
  5790                           
  5791                           ; 4 bytes @ 0x17
  5792  0037                     	ds	2
  5793  0039                     EEPROM_download@bufint:	
  5794                           
  5795                           ; 2 bytes @ 0x19
  5796  0039                     	ds	2
  5797  003B                     EEPROM_download@spi1_Read_data:	
  5798  003B                     TransLong256To255@j:	
  5799                           ; 1 bytes @ 0x1B
  5800                           
  5801                           
  5802                           ; 2 bytes @ 0x1B
  5803  003B                     	ds	2
  5804  003D                     TransLong256To255@mod:	
  5805                           
  5806                           ; 4 bytes @ 0x1D
  5807  003D                     	ds	4
  5808  0041                     TransLong256To255@pow:	
  5809                           
  5810                           ; 4 bytes @ 0x21
  5811  0041                     	ds	4
  5812  0045                     TransLong256To255@i:	
  5813                           
  5814                           ; 2 bytes @ 0x25
  5815  0045                     	ds	2
  5816  0047                     TransLong256To255@buf:	
  5817                           
  5818                           ; 4 bytes @ 0x27
  5819  0047                     	ds	4
  5820  004B                     ??_readCargo:	
  5821  004B                     ??_Calibrate_download:	
  5822                           ; 1 bytes @ 0x2B
  5823                           
  5824                           
  5825                           ; 1 bytes @ 0x2B
  5826  004B                     	ds	6
  5827  0051                     Calibrate_download@buflong:	
  5828  0051                     readCargo@buflong:	
  5829                           ; 4 bytes @ 0x31
  5830                           
  5831                           
  5832                           ; 4 bytes @ 0x31
  5833  0051                     	ds	4
  5834  0055                     Calibrate_download@bufint:	
  5835  0055                     readCargo@bufint:	
  5836                           ; 2 bytes @ 0x35
  5837                           
  5838                           
  5839                           ; 2 bytes @ 0x35
  5840  0055                     	ds	2
  5841  0057                     Calibrate_download@spi_Read_data:	
  5842  0057                     readCargo@spi1_Read_data:	
  5843                           ; 1 bytes @ 0x37
  5844                           
  5845                           
  5846                           ; 1 bytes @ 0x37
  5847  0057                     	ds	1
  5848  0058                     ??_setComunicateMode:	
  5849                           
  5850                           ; 1 bytes @ 0x38
  5851  0058                     	ds	1
  5852  0059                     ??_main:	
  5853                           
  5854                           	psect	maintext
  5855  0F4D                     __pmaintext:	
  5856                           ; 1 bytes @ 0x39
  5857 ;;
  5858 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  5859 ;;
  5860 ;; *************** function _main *****************
  5861 ;; Defined at:
  5862 ;;		line 162 in file "D:/programdata/16F18346_Link_IC.X/main.c"
  5863 ;; Parameters:    Size  Location     Type
  5864 ;;		None
  5865 ;; Auto vars:     Size  Location     Type
  5866 ;;		None
  5867 ;; Return value:  Size  Location     Type
  5868 ;;                  1    wreg      void 
  5869 ;; Registers used:
  5870 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5871 ;; Tracked objects:
  5872 ;;		On entry : B1F/0
  5873 ;;		On exit  : 0/0
  5874 ;;		Unchanged: 0/0
  5875 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5876 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5877 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5879 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5880 ;;Total ram usage:        0 bytes
  5881 ;; Hardware stack levels required when called:    7
  5882 ;; This function calls:
  5883 ;;		_InitCalibrate
  5884 ;;		_init
  5885 ;;		_initCargo
  5886 ;;		_initComand
  5887 ;;		_initComu_types
  5888 ;;		_initIndex
  5889 ;;		_initPosition
  5890 ;;		_initTrain
  5891 ;;		_io_init
  5892 ;;		_isSPI1read
  5893 ;;		_read_train
  5894 ;;		_setComunicateMode
  5895 ;;		_setSPI2sendData
  5896 ;;		_spi_init
  5897 ;; This function is called by:
  5898 ;;		Startup code after reset
  5899 ;; This function uses a non-reentrant model
  5900 ;;
  5901                           
  5902                           
  5903                           ;psect for function _main
  5904  0F4D                     _main:	
  5905                           
  5906                           ;main.c: 163: initComand();
  5907                           
  5908                           ;incstack = 0
  5909                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5910  0F4D  3186  264B  318F   	fcall	_initComand
  5911                           
  5912                           ;main.c: 164: initIndex();
  5913  0F50  3185  2571  318F   	fcall	_initIndex
  5914                           
  5915                           ;main.c: 165: initComu_types();
  5916  0F53  3185  25DE  318F   	fcall	_initComu_types
  5917                           
  5918                           ;main.c: 166: InitCalibrate();
  5919  0F56  318E  26BE  318F   	fcall	_InitCalibrate
  5920                           
  5921                           ;main.c: 167: init();
  5922  0F59  318E  266B  318F   	fcall	_init
  5923                           
  5924                           ;main.c: 168: io_init();
  5925  0F5C  318D  2511  318F   	fcall	_io_init
  5926                           
  5927                           ;main.c: 169: spi_init();
  5928  0F5F  318D  2524  318F   	fcall	_spi_init
  5929                           
  5930                           ;main.c: 170: initCargo();
  5931  0F62  318D  25A6  318F   	fcall	_initCargo
  5932                           
  5933                           ;main.c: 171: initPosition();
  5934  0F65  318E  2643  318F   	fcall	_initPosition
  5935                           
  5936                           ;main.c: 172: LATAbits.LATA0 = 1;
  5937  0F68  0022               	movlb	2	; select bank2
  5938  0F69  140C               	bsf	12,0	;volatile
  5939  0F6A                     l4115:	
  5940                           ;main.c: 173: while(1){
  5941                           
  5942                           
  5943                           ;main.c: 174: if(!isSPI1read()){
  5944  0F6A  318D  2552  318F   	fcall	_isSPI1read
  5945  0F6D  1803               	btfsc	3,0
  5946  0F6E  2F6A               	goto	l4115
  5947                           
  5948                           ;main.c: 175: initTrain();
  5949  0F6F  3187  2751  318F   	fcall	_initTrain
  5950                           
  5951                           ;main.c: 176: if(isreadTrain){
  5952  0F72  1FF0               	btfss	_isreadTrain/(0+8),_isreadTrain& (0+7)
  5953  0F73  2F7A               	goto	l4123
  5954                           
  5955                           ;main.c: 177: setComunicateMode(st_type);
  5956  0F74  0020               	movlb	0	; select bank0
  5957  0F75  086D               	movf	_st_type,w
  5958  0F76  318F  2781  318F   	fcall	_setComunicateMode
  5959                           
  5960                           ;main.c: 178: }else{
  5961  0F79  2F7D               	goto	l4125
  5962  0F7A                     l4123:	
  5963                           
  5964                           ;main.c: 179: read_train();
  5965  0F7A  3187  279B  318F   	fcall	_read_train
  5966  0F7D                     l4125:	
  5967                           
  5968                           ;main.c: 180: }
  5969                           ;main.c: 181: setSPI2sendData();
  5970  0F7D  3187  2706  318F   	fcall	_setSPI2sendData
  5971  0F80  2F6A               	goto	l4115
  5972  0F81                     __end_of_main:	
  5973                           ;main.c: 182: }
  5974                           ;main.c: 183: };
  5975                           ;main.c: 184: return;
  5976                           
  5977                           
  5978                           	psect	text1
  5979  0D24                     __ptext1:	
  5980 ;; *************** function _spi_init *****************
  5981 ;; Defined at:
  5982 ;;		line 21 in file "D:/programdata/16F18346_Link_IC.X/spiControl.c"
  5983 ;; Parameters:    Size  Location     Type
  5984 ;;		None
  5985 ;; Auto vars:     Size  Location     Type
  5986 ;;		None
  5987 ;; Return value:  Size  Location     Type
  5988 ;;                  1    wreg      void 
  5989 ;; Registers used:
  5990 ;;		wreg, status,2, status,0, pclath, cstack
  5991 ;; Tracked objects:
  5992 ;;		On entry : 0/0
  5993 ;;		On exit  : 0/0
  5994 ;;		Unchanged: 0/0
  5995 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5996 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5997 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5998 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5999 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6000 ;;Total ram usage:        0 bytes
  6001 ;; Hardware stack levels used:    1
  6002 ;; Hardware stack levels required when called:    4
  6003 ;; This function calls:
  6004 ;;		_spi1_init
  6005 ;;		_spi2_init
  6006 ;; This function is called by:
  6007 ;;		_main
  6008 ;; This function uses a non-reentrant model
  6009 ;;
  6010                           
  6011                           
  6012                           ;psect for function _spi_init
  6013  0D24                     _spi_init:	
  6014                           
  6015                           ;spiControl.c: 22: INTCONbits.PEIE = 0;
  6016                           
  6017                           ;incstack = 0
  6018                           ; Regs used in _spi_init: [wreg+status,2+status,0+pclath+cstack]
  6019  0D24  130B               	bcf	11,6	;volatile
  6020                           
  6021                           ;spiControl.c: 23: INTCONbits.GIE = 0;
  6022  0D25  138B               	bcf	11,7	;volatile
  6023                           
  6024                           ;spiControl.c: 24: spi1_init();
  6025  0D26  318D  25DE  318D   	fcall	_spi1_init
  6026                           
  6027                           ;spiControl.c: 25: spi2_init();
  6028  0D29  3187  27DE         	fcall	_spi2_init
  6029                           
  6030                           ;spiControl.c: 26: INTCONbits.PEIE = 1;
  6031  0D2B  170B               	bsf	11,6	;volatile
  6032                           
  6033                           ;spiControl.c: 27: INTCONbits.GIE = 1;
  6034  0D2C  178B               	bsf	11,7	;volatile
  6035  0D2D  0008               	return
  6036  0D2E                     __end_of_spi_init:	
  6037                           
  6038                           	psect	text2
  6039  07DE                     __ptext2:	
  6040 ;; *************** function _spi2_init *****************
  6041 ;; Defined at:
  6042 ;;		line 48 in file "D:/programdata/16F18346_Link_IC.X/spiControl.c"
  6043 ;; Parameters:    Size  Location     Type
  6044 ;;		None
  6045 ;; Auto vars:     Size  Location     Type
  6046 ;;  dummy           1    1[BANK0 ] unsigned char 
  6047 ;; Return value:  Size  Location     Type
  6048 ;;                  1    wreg      void 
  6049 ;; Registers used:
  6050 ;;		wreg, status,2, status,0
  6051 ;; Tracked objects:
  6052 ;;		On entry : 0/0
  6053 ;;		On exit  : 0/0
  6054 ;;		Unchanged: 0/0
  6055 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6056 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6057 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6058 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6059 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6060 ;;Total ram usage:        2 bytes
  6061 ;; Hardware stack levels used:    1
  6062 ;; Hardware stack levels required when called:    3
  6063 ;; This function calls:
  6064 ;;		Nothing
  6065 ;; This function is called by:
  6066 ;;		_spi_init
  6067 ;; This function uses a non-reentrant model
  6068 ;;
  6069                           
  6070                           
  6071                           ;psect for function _spi2_init
  6072  07DE                     _spi2_init:	
  6073                           
  6074                           ;spiControl.c: 49: unsigned char dummy;
  6075                           ;spiControl.c: 50: SSP2CON3bits.PCIE = 0;
  6076                           
  6077                           ;incstack = 0
  6078                           ; Regs used in _spi2_init: [wreg+status,2+status,0]
  6079  07DE  0024               	movlb	4	; select bank4
  6080  07DF  131F               	bcf	31,6	;volatile
  6081                           
  6082                           ;spiControl.c: 51: RA2PPS = 0b11011;
  6083  07E0  301B               	movlw	27
  6084  07E1  003D               	movlb	29	; select bank29
  6085  07E2  0092               	movwf	18	;volatile
  6086                           
  6087                           ;spiControl.c: 52: RB7PPS = 0b11010;
  6088  07E3  301A               	movlw	26
  6089  07E4  009F               	movwf	31	;volatile
  6090                           
  6091                           ;spiControl.c: 53: SSP2SSPPSbits.SSP2SSPPS = 0b01111;
  6092  07E5  003C               	movlb	28	; select bank28
  6093  07E6  081F               	movf	31,w	;volatile
  6094  07E7  39E0               	andlw	-32
  6095  07E8  380F               	iorlw	15
  6096  07E9  009F               	movwf	31	;volatile
  6097                           
  6098                           ;spiControl.c: 54: SSP2CON1bits.SSPOV = 0;
  6099  07EA  0024               	movlb	4	; select bank4
  6100  07EB  131D               	bcf	29,6	;volatile
  6101                           
  6102                           ;spiControl.c: 55: SSP2CON1bits.SSPEN = 1;
  6103  07EC  169D               	bsf	29,5	;volatile
  6104                           
  6105                           ;spiControl.c: 56: SSP2CON1bits.SSPM = 0b0001;
  6106  07ED  081D               	movf	29,w	;volatile
  6107  07EE  39F0               	andlw	-16
  6108  07EF  3801               	iorlw	1
  6109  07F0  009D               	movwf	29	;volatile
  6110                           
  6111                           ;spiControl.c: 57: SSP2CON3bits.BOEN = 1;
  6112  07F1  161F               	bsf	31,4	;volatile
  6113                           
  6114                           ;spiControl.c: 58: SSP2STATbits.SMP = 0;
  6115  07F2  139C               	bcf	28,7	;volatile
  6116                           
  6117                           ;spiControl.c: 59: SSP2STATbits.CKE = 0;
  6118  07F3  131C               	bcf	28,6	;volatile
  6119                           
  6120                           ;spiControl.c: 60: SSP2CON1bits.CKP = 0;
  6121  07F4  121D               	bcf	29,4	;volatile
  6122                           
  6123                           ;spiControl.c: 61: PIE2bits.SSP2IE = 1;
  6124  07F5  0021               	movlb	1	; select bank1
  6125  07F6  1592               	bsf	18,3	;volatile
  6126                           
  6127                           ;spiControl.c: 62: PIR2bits.SSP2IF = 0;
  6128  07F7  0020               	movlb	0	; select bank0
  6129  07F8  1192               	bcf	18,3	;volatile
  6130                           
  6131                           ;spiControl.c: 63: dummy = SSP2BUF;
  6132  07F9  0024               	movlb	4	; select bank4
  6133  07FA  0819               	movf	25,w	;volatile
  6134  07FB  0020               	movlb	0	; select bank0
  6135  07FC  00A0               	movwf	??_spi2_init
  6136  07FD  0820               	movf	??_spi2_init,w
  6137  07FE  00A1               	movwf	spi2_init@dummy
  6138  07FF  0008               	return
  6139  0800                     __end_of_spi2_init:	
  6140                           
  6141                           	psect	text3
  6142  0DDE                     __ptext3:	
  6143 ;; *************** function _spi1_init *****************
  6144 ;; Defined at:
  6145 ;;		line 32 in file "D:/programdata/16F18346_Link_IC.X/spiControl.c"
  6146 ;; Parameters:    Size  Location     Type
  6147 ;;		None
  6148 ;; Auto vars:     Size  Location     Type
  6149 ;;  dummy           1    1[BANK0 ] unsigned char 
  6150 ;; Return value:  Size  Location     Type
  6151 ;;                  1    wreg      void 
  6152 ;; Registers used:
  6153 ;;		wreg, status,2, status,0
  6154 ;; Tracked objects:
  6155 ;;		On entry : 0/0
  6156 ;;		On exit  : 0/0
  6157 ;;		Unchanged: 0/0
  6158 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6159 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6160 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6161 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6162 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6163 ;;Total ram usage:        2 bytes
  6164 ;; Hardware stack levels used:    1
  6165 ;; Hardware stack levels required when called:    3
  6166 ;; This function calls:
  6167 ;;		Nothing
  6168 ;; This function is called by:
  6169 ;;		_spi_init
  6170 ;; This function uses a non-reentrant model
  6171 ;;
  6172                           
  6173                           
  6174                           ;psect for function _spi1_init
  6175  0DDE                     _spi1_init:	
  6176                           
  6177                           ;spiControl.c: 33: unsigned char dummy;
  6178                           ;spiControl.c: 34: SSP1CON3bits.PCIE = 0;
  6179                           
  6180                           ;incstack = 0
  6181                           ; Regs used in _spi1_init: [wreg+status,2+status,0]
  6182  0DDE  0024               	movlb	4	; select bank4
  6183  0DDF  1317               	bcf	23,6	;volatile
  6184                           
  6185                           ;spiControl.c: 35: RC2PPS = 0b11001;
  6186  0DE0  3019               	movlw	25
  6187  0DE1  003D               	movlb	29	; select bank29
  6188  0DE2  00A2               	movwf	34	;volatile
  6189                           
  6190                           ;spiControl.c: 36: SSP1SSPPSbits.SSP1SSPPS = 0b10110;
  6191  0DE3  003C               	movlb	28	; select bank28
  6192  0DE4  0822               	movf	34,w	;volatile
  6193  0DE5  39E0               	andlw	-32
  6194  0DE6  3816               	iorlw	22
  6195  0DE7  00A2               	movwf	34	;volatile
  6196                           
  6197                           ;spiControl.c: 37: SSP1CON1bits.SSPOV = 1;
  6198  0DE8  0024               	movlb	4	; select bank4
  6199  0DE9  1715               	bsf	21,6	;volatile
  6200                           
  6201                           ;spiControl.c: 38: SSP1CON1bits.SSPEN = 1;
  6202  0DEA  1695               	bsf	21,5	;volatile
  6203                           
  6204                           ;spiControl.c: 39: SSP1CON1bits.SSPM = 0b0100;
  6205  0DEB  0815               	movf	21,w	;volatile
  6206  0DEC  39F0               	andlw	-16
  6207  0DED  3804               	iorlw	4
  6208  0DEE  0095               	movwf	21	;volatile
  6209                           
  6210                           ;spiControl.c: 40: SSP1CON3bits.BOEN = 1;
  6211  0DEF  1617               	bsf	23,4	;volatile
  6212                           
  6213                           ;spiControl.c: 41: SSP1STATbits.SMP = 0;
  6214  0DF0  1394               	bcf	20,7	;volatile
  6215                           
  6216                           ;spiControl.c: 42: SSP1STATbits.CKE = 0;
  6217  0DF1  1314               	bcf	20,6	;volatile
  6218                           
  6219                           ;spiControl.c: 43: SSP1CON1bits.CKP = 0;
  6220  0DF2  1215               	bcf	21,4	;volatile
  6221                           
  6222                           ;spiControl.c: 44: PIE1bits.SSP1IE = 1;
  6223  0DF3  0021               	movlb	1	; select bank1
  6224  0DF4  1591               	bsf	17,3	;volatile
  6225                           
  6226                           ;spiControl.c: 45: PIR1bits.SSP1IF = 0;
  6227  0DF5  0020               	movlb	0	; select bank0
  6228  0DF6  1191               	bcf	17,3	;volatile
  6229                           
  6230                           ;spiControl.c: 46: dummy = SSP1BUF;
  6231  0DF7  0024               	movlb	4	; select bank4
  6232  0DF8  0811               	movf	17,w	;volatile
  6233  0DF9  0020               	movlb	0	; select bank0
  6234  0DFA  00A0               	movwf	??_spi1_init
  6235  0DFB  0820               	movf	??_spi1_init,w
  6236  0DFC  00A1               	movwf	spi1_init@dummy
  6237  0DFD  0008               	return
  6238  0DFE                     __end_of_spi1_init:	
  6239                           
  6240                           	psect	text4
  6241  0706                     __ptext4:	
  6242 ;; *************** function _setSPI2sendData *****************
  6243 ;; Defined at:
  6244 ;;		line 105 in file "D:/programdata/16F18346_Link_IC.X/spiControl.c"
  6245 ;; Parameters:    Size  Location     Type
  6246 ;;		None
  6247 ;; Auto vars:     Size  Location     Type
  6248 ;;		None
  6249 ;; Return value:  Size  Location     Type
  6250 ;;                  1    wreg      void 
  6251 ;; Registers used:
  6252 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6253 ;; Tracked objects:
  6254 ;;		On entry : 0/0
  6255 ;;		On exit  : 0/0
  6256 ;;		Unchanged: 0/0
  6257 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6258 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6259 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6260 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6261 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6262 ;;Total ram usage:        4 bytes
  6263 ;; Hardware stack levels used:    1
  6264 ;; Hardware stack levels required when called:    3
  6265 ;; This function calls:
  6266 ;;		Nothing
  6267 ;; This function is called by:
  6268 ;;		_main
  6269 ;; This function uses a non-reentrant model
  6270 ;;
  6271                           
  6272                           
  6273                           ;psect for function _setSPI2sendData
  6274  0706                     _setSPI2sendData:	
  6275                           
  6276                           ;spiControl.c: 106: spi2_Send_data = spi2_Send_data + SPI_OFFSET_BYTE;
  6277                           
  6278                           ;incstack = 0
  6279                           ; Regs used in _setSPI2sendData: [wreg+fsr1l+fsr1h+status,2+status,0]
  6280  0706  0020               	movlb	0	; select bank0
  6281  0707  086E               	movf	_spi2_Send_data,w
  6282  0708  077D               	addwf	_SPI_OFFSET_BYTE,w
  6283  0709  00A0               	movwf	??_setSPI2sendData
  6284  070A  0820               	movf	??_setSPI2sendData,w
  6285  070B  00EE               	movwf	_spi2_Send_data
  6286                           
  6287                           ;spiControl.c: 107: if(linkInfo.endpoint == 0){
  6288  070C  0021               	movlb	1	; select bank1
  6289  070D  0840               	movf	(_linkInfo^(0+128)+5),w
  6290  070E  1D03               	btfss	3,2
  6291  070F  2F35               	goto	l4091
  6292                           
  6293                           ;spiControl.c: 108: SSP2BUF = spi2_Send_data;
  6294  0710  0020               	movlb	0	; select bank0
  6295  0711  086E               	movf	_spi2_Send_data,w
  6296  0712  0024               	movlb	4	; select bank4
  6297  0713  0099               	movwf	25	;volatile
  6298                           
  6299                           ;spiControl.c: 110: isSendSPI2 = 1;
  6300  0714  14F1               	bsf	_isSendSPI2/(0+8),_isSendSPI2& (0+7)
  6301  0715                     l283:	
  6302                           ;spiControl.c: 111: while(isSendSPI2);
  6303                           
  6304  0715  18F1               	btfsc	_isSendSPI2/(0+8),_isSendSPI2& (0+7)
  6305  0716  2F15               	goto	l283
  6306                           
  6307                           ;spiControl.c: 112: spi2_buffer_data[count2] = SSP2BUF;
  6308  0717  30F0               	movlw	240
  6309  0718  0020               	movlb	0	; select bank0
  6310  0719  00A0               	movwf	??_setSPI2sendData
  6311  071A  3025               	movlw	37
  6312  071B  00A1               	movwf	??_setSPI2sendData+1
  6313  071C  086B               	movf	_count2,w
  6314  071D  0720               	addwf	??_setSPI2sendData,w
  6315  071E  00A2               	movwf	??_setSPI2sendData+2
  6316  071F  086C               	movf	_count2+1,w
  6317  0720  3D21               	addwfc	??_setSPI2sendData+1,w
  6318  0721  00A3               	movwf	??_setSPI2sendData+3
  6319  0722  0822               	movf	??_setSPI2sendData+2,w
  6320  0723  0086               	movwf	6
  6321  0724  0823               	movf	??_setSPI2sendData+3,w
  6322  0725  0087               	movwf	7
  6323  0726  0024               	movlb	4	; select bank4
  6324  0727  0819               	movf	25,w	;volatile
  6325  0728  0081               	movwf	1
  6326                           
  6327                           ;spiControl.c: 113: count2++;
  6328  0729  3001               	movlw	1
  6329  072A  0020               	movlb	0	; select bank0
  6330  072B  07EB               	addwf	_count2,f
  6331  072C  3000               	movlw	0
  6332  072D  3DEC               	addwfc	_count2+1,f
  6333                           
  6334                           ;spiControl.c: 114: if(count2 == 256){
  6335  072E  036C               	decf	_count2+1,w
  6336  072F  046B               	iorwf	_count2,w
  6337  0730  1D03               	btfss	3,2
  6338  0731  0008               	return
  6339                           
  6340                           ;spiControl.c: 115: count2 = 0;
  6341  0732  01EB               	clrf	_count2
  6342  0733  01EC               	clrf	_count2+1
  6343                           
  6344                           ;spiControl.c: 116: }
  6345                           ;spiControl.c: 117: }else{
  6346  0734  0008               	return
  6347  0735                     l4091:	
  6348                           
  6349                           ;spiControl.c: 118: spi2_buffer_data[count2] = spi2_Send_data;
  6350  0735  30F0               	movlw	240
  6351  0736  0020               	movlb	0	; select bank0
  6352  0737  00A0               	movwf	??_setSPI2sendData
  6353  0738  3025               	movlw	37
  6354  0739  00A1               	movwf	??_setSPI2sendData+1
  6355  073A  086B               	movf	_count2,w
  6356  073B  0720               	addwf	??_setSPI2sendData,w
  6357  073C  00A2               	movwf	??_setSPI2sendData+2
  6358  073D  086C               	movf	_count2+1,w
  6359  073E  3D21               	addwfc	??_setSPI2sendData+1,w
  6360  073F  00A3               	movwf	??_setSPI2sendData+3
  6361  0740  0822               	movf	??_setSPI2sendData+2,w
  6362  0741  0086               	movwf	6
  6363  0742  0823               	movf	??_setSPI2sendData+3,w
  6364  0743  0087               	movwf	7
  6365  0744  086E               	movf	_spi2_Send_data,w
  6366  0745  0081               	movwf	1
  6367                           
  6368                           ;spiControl.c: 119: count2++;
  6369  0746  3001               	movlw	1
  6370  0747  07EB               	addwf	_count2,f
  6371  0748  3000               	movlw	0
  6372  0749  3DEC               	addwfc	_count2+1,f
  6373                           
  6374                           ;spiControl.c: 120: if(count2 == 256){
  6375  074A  036C               	decf	_count2+1,w
  6376  074B  046B               	iorwf	_count2,w
  6377  074C  1D03               	btfss	3,2
  6378  074D  0008               	return
  6379                           
  6380                           ;spiControl.c: 121: count2 = 0;
  6381  074E  01EB               	clrf	_count2
  6382  074F  01EC               	clrf	_count2+1
  6383  0750  0008               	return
  6384  0751                     __end_of_setSPI2sendData:	
  6385                           
  6386                           	psect	text5
  6387  0F81                     __ptext5:	
  6388 ;; *************** function _setComunicateMode *****************
  6389 ;; Defined at:
  6390 ;;		line 40 in file "D:/programdata/16F18346_Link_IC.X/comu_type.c"
  6391 ;; Parameters:    Size  Location     Type
  6392 ;;  m_type          1    wreg     unsigned char 
  6393 ;; Auto vars:     Size  Location     Type
  6394 ;;  m_type          1    0[BANK1 ] unsigned char 
  6395 ;;  i               2    1[BANK1 ] int 
  6396 ;; Return value:  Size  Location     Type
  6397 ;;		None               void
  6398 ;; Registers used:
  6399 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6400 ;; Tracked objects:
  6401 ;;		On entry : 0/0
  6402 ;;		On exit  : 0/0
  6403 ;;		Unchanged: 0/0
  6404 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6405 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6406 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6407 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6408 ;;      Totals:         0       1       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6409 ;;Total ram usage:        4 bytes
  6410 ;; Hardware stack levels used:    1
  6411 ;; Hardware stack levels required when called:    6
  6412 ;; This function calls:
  6413 ;;		_Calibrate_download
  6414 ;;		_EEPROM_download
  6415 ;;		_readCargo
  6416 ;; This function is called by:
  6417 ;;		_main
  6418 ;; This function uses a non-reentrant model
  6419 ;;
  6420                           
  6421                           
  6422                           ;psect for function _setComunicateMode
  6423  0F81                     _setComunicateMode:	
  6424                           
  6425                           ;incstack = 0
  6426                           ; Regs used in _setComunicateMode: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6427                           ;setComunicateMode@m_type stored from wreg
  6428  0F81  0021               	movlb	1	; select bank1
  6429  0F82  00E4               	movwf	setComunicateMode@m_type^(0+128)
  6430                           
  6431                           ;comu_type.c: 41: for(int i = 0; i < 18; i++){
  6432  0F83  01E5               	clrf	setComunicateMode@i^(0+128)
  6433  0F84  01E6               	clrf	(setComunicateMode@i+1)^(0+128)
  6434  0F85                     L1:	
  6435  0F85  0866               	movf	(setComunicateMode@i+1)^(0+128),w
  6436  0F86  3A80               	xorlw	128
  6437  0F87  0020               	movlb	0	; select bank0
  6438  0F88  00D8               	movwf	??_setComunicateMode
  6439  0F89  3080               	movlw	128
  6440  0F8A  0258               	subwf	??_setComunicateMode,w
  6441  0F8B  1D03               	skipz
  6442  0F8C  2F90               	goto	u2685
  6443  0F8D  3012               	movlw	18
  6444  0F8E  0021               	movlb	1	; select bank1
  6445  0F8F  0265               	subwf	setComunicateMode@i^(0+128),w
  6446  0F90                     u2685:	
  6447  0F90  1803               	btfsc	3,0
  6448  0F91  0008               	return
  6449                           
  6450                           ;comu_type.c: 42: if(comu_types[i] == m_type){
  6451  0F92  0021               	movlb	1	; select bank1
  6452  0F93  0865               	movf	setComunicateMode@i^(0+128),w
  6453  0F94  3E58               	addlw	(low (_comu_types| (0+256)))& (0+255)
  6454  0F95  0086               	movwf	6
  6455  0F96  3001               	movlw	1	; select bank2/3
  6456  0F97  0087               	movwf	7
  6457  0F98  0801               	movf	1,w
  6458  0F99  0664               	xorwf	setComunicateMode@m_type^(0+128),w
  6459  0F9A  1903               	btfsc	3,2
  6460  0F9B  2FA9               	goto	l4047
  6461  0F9C  2FB9               	goto	l4049
  6462  0F9D                     l4033:	
  6463                           ;comu_type.c: 44: case 0:
  6464                           
  6465                           ;comu_type.c: 43: switch(i){
  6466                           
  6467                           
  6468                           ;comu_type.c: 45: Calibrate_download(spi1_Read_data);
  6469  0F9D  087C               	movf	_spi1_Read_data,w
  6470  0F9E  3181  21BC         	fcall	_Calibrate_download
  6471                           
  6472                           ;comu_type.c: 46: return 1;
  6473                           ;	Return value of _setComunicateMode is never used
  6474  0FA0  0008               	return
  6475  0FA1                     l4037:	
  6476                           ;comu_type.c: 47: case 1:
  6477                           
  6478                           
  6479                           ;comu_type.c: 48: readCargo(spi1_Read_data);
  6480  0FA1  087C               	movf	_spi1_Read_data,w
  6481  0FA2  3180  20A0         	fcall	_readCargo
  6482                           
  6483                           ;comu_type.c: 55: return 1;
  6484                           ;	Return value of _setComunicateMode is never used
  6485                           
  6486                           ;comu_type.c: 54: case 4:
  6487                           
  6488                           ;comu_type.c: 53: return 1;
  6489                           ;	Return value of _setComunicateMode is never used
  6490                           
  6491                           ;comu_type.c: 52: case 3:
  6492                           
  6493                           ;comu_type.c: 51: return 1;
  6494                           ;	Return value of _setComunicateMode is never used
  6495                           
  6496                           ;comu_type.c: 50: case 2:
  6497                           
  6498                           ;comu_type.c: 49: return 1;
  6499                           ;	Return value of _setComunicateMode is never used
  6500  0FA4  0008               	return
  6501  0FA5                     l4041:	
  6502                           ;comu_type.c: 56: case 5:
  6503                           
  6504                           
  6505                           ;comu_type.c: 57: EEPROM_download(spi1_Read_data);
  6506  0FA5  087C               	movf	_spi1_Read_data,w
  6507  0FA6  3183  23BE         	fcall	_EEPROM_download
  6508                           
  6509                           ;comu_type.c: 58: return 1;
  6510                           ;	Return value of _setComunicateMode is never used
  6511  0FA8  0008               	return
  6512  0FA9                     l4047:	
  6513                           ;comu_type.c: 60: }
  6514                           
  6515                           
  6516                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6517                           ; Switch size 1, requested type "space"
  6518                           ; Number of cases is 1, Range of values is 0 to 0
  6519                           ; switch strategies available:
  6520                           ; Name         Instructions Cycles
  6521                           ; simple_byte            4     3 (average)
  6522                           ; direct_byte            8     6 (fixed)
  6523                           ; jumptable            260     6 (fixed)
  6524                           ;	Chosen strategy is simple_byte
  6525  0FA9  0021               	movlb	1	; select bank1
  6526  0FAA  0866               	movf	(setComunicateMode@i+1)^(0+128),w
  6527  0FAB  3A00               	xorlw	0	; case 0
  6528  0FAC  1903               	skipnz
  6529  0FAD  2FAF               	goto	l4365
  6530  0FAE  2FB9               	goto	l4049
  6531  0FAF                     l4365:	
  6532                           
  6533                           ; Switch size 1, requested type "space"
  6534                           ; Number of cases is 6, Range of values is 0 to 5
  6535                           ; switch strategies available:
  6536                           ; Name         Instructions Cycles
  6537                           ; direct_byte           18     6 (fixed)
  6538                           ; simple_byte           19    10 (average)
  6539                           ; jumptable            260     6 (fixed)
  6540                           ;	Chosen strategy is direct_byte
  6541  0FAF  0865               	movf	setComunicateMode@i^(0+128),w
  6542  0FB0  0084               	movwf	4
  6543  0FB1  3006               	movlw	6
  6544  0FB2  0204               	subwf	4,w
  6545  0FB3  1803               	skipnc
  6546  0FB4  2FB9               	goto	l4049
  6547  0FB5  3188               	movlp	high S4367
  6548  0FB6  3504               	lslf	4,w
  6549  0FB7  3E34               	addlw	low S4367
  6550  0FB8  0082               	movwf	2
  6551  0FB9                     l4049:	
  6552  0FB9  3001               	movlw	1
  6553  0FBA  0021               	movlb	1	; select bank1
  6554  0FBB  07E5               	addwf	setComunicateMode@i^(0+128),f
  6555  0FBC  3000               	movlw	0
  6556  0FBD  3DE6               	addwfc	(setComunicateMode@i+1)^(0+128),f
  6557  0FBE  2F85               	goto	L1
  6558  0FBF                     l501:	
  6559                           ;comu_type.c: 61: }
  6560                           ;comu_type.c: 62: }
  6561                           ;comu_type.c: 63: return 0;
  6562                           ;	Return value of _setComunicateMode is never used
  6563                           
  6564  0FBF  0008               	return
  6565  0FC0                     __end_of_setComunicateMode:	
  6566                           
  6567                           	psect	swtext1
  6568  0834                     __pswtext1:	
  6569  0834                     S4367:	
  6570  0834  318F  2F9D         	ljmp	l4033
  6571  0836  318F  2FA1         	ljmp	l4037
  6572  0838  318F  2FBF         	ljmp	l501
  6573  083A  318F  2FBF         	ljmp	l501
  6574  083C  318F  2FBF         	ljmp	l501
  6575  083E  318F  2FA5         	ljmp	l4041
  6576                           
  6577                           	psect	text6
  6578  00A0                     __ptext6:	
  6579 ;; *************** function _readCargo *****************
  6580 ;; Defined at:
  6581 ;;		line 15 in file "D:/programdata/16F18346_Link_IC.X/normal_mode.c"
  6582 ;; Parameters:    Size  Location     Type
  6583 ;;  spi1_Read_da    1    wreg     unsigned char 
  6584 ;; Auto vars:     Size  Location     Type
  6585 ;;  spi1_Read_da    1   55[BANK0 ] unsigned char 
  6586 ;;  buflong         4   49[BANK0 ] unsigned long 
  6587 ;;  bufint          2   53[BANK0 ] unsigned int 
  6588 ;; Return value:  Size  Location     Type
  6589 ;;                  1    wreg      void 
  6590 ;; Registers used:
  6591 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6592 ;; Tracked objects:
  6593 ;;		On entry : 0/0
  6594 ;;		On exit  : 0/0
  6595 ;;		Unchanged: 0/0
  6596 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6597 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6598 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6599 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6600 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6601 ;;Total ram usage:       13 bytes
  6602 ;; Hardware stack levels used:    1
  6603 ;; Hardware stack levels required when called:    5
  6604 ;; This function calls:
  6605 ;;		_TransLong256To255
  6606 ;;		_clutchaction
  6607 ;;		_getCargoData
  6608 ;;		_restartCargo
  6609 ;;		_setIndexMode
  6610 ;; This function is called by:
  6611 ;;		_setComunicateMode
  6612 ;; This function uses a non-reentrant model
  6613 ;;
  6614                           
  6615                           
  6616                           ;psect for function _readCargo
  6617  00A0                     _readCargo:	
  6618                           
  6619                           ;incstack = 0
  6620                           ; Regs used in _readCargo: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6621                           ;readCargo@spi1_Read_data stored from wreg
  6622  00A0  0020               	movlb	0	; select bank0
  6623  00A1  00D7               	movwf	readCargo@spi1_Read_data
  6624                           
  6625                           ;normal_mode.c: 16: unsigned int bufint = spi1_Read_data;
  6626  00A2  0857               	movf	readCargo@spi1_Read_data,w
  6627  00A3  00CB               	movwf	??_readCargo
  6628  00A4  01CC               	clrf	??_readCargo+1
  6629  00A5  084B               	movf	??_readCargo,w
  6630  00A6  00D5               	movwf	readCargo@bufint
  6631  00A7  084C               	movf	??_readCargo+1,w
  6632  00A8  00D6               	movwf	readCargo@bufint+1
  6633                           
  6634                           ;normal_mode.c: 17: unsigned long buflong = spi1_Read_data;
  6635  00A9  0857               	movf	readCargo@spi1_Read_data,w
  6636  00AA  00CB               	movwf	??_readCargo
  6637  00AB  01CC               	clrf	??_readCargo+1
  6638  00AC  01CD               	clrf	??_readCargo+2
  6639  00AD  01CE               	clrf	??_readCargo+3
  6640  00AE  084E               	movf	??_readCargo+3,w
  6641  00AF  00D4               	movwf	readCargo@buflong+3
  6642  00B0  084D               	movf	??_readCargo+2,w
  6643  00B1  00D3               	movwf	readCargo@buflong+2
  6644  00B2  084C               	movf	??_readCargo+1,w
  6645  00B3  00D2               	movwf	readCargo@buflong+1
  6646  00B4  084B               	movf	??_readCargo,w
  6647  00B5  00D1               	movwf	readCargo@buflong
  6648                           
  6649                           ;normal_mode.c: 18: cargoData = getCargoData();
  6650  00B6  318D  257E  3180   	fcall	_getCargoData
  6651  00B9  0020               	movlb	0	; select bank0
  6652  00BA  3020               	movlw	low ?_getCargoData
  6653  00BB  0086               	movwf	6
  6654  00BC  3000               	movlw	high ?_getCargoData
  6655  00BD  0087               	movwf	7
  6656  00BE  3059               	movlw	low _cargoData
  6657  00BF  0084               	movwf	4
  6658  00C0  3000               	movlw	high _cargoData
  6659  00C1  0085               	movwf	5
  6660  00C2  3010               	movlw	16
  6661  00C3  00CB               	movwf	??_readCargo
  6662  00C4                     u2480:	
  6663  00C4  0016               	moviw fsr1++
  6664  00C5  001A               	movwi fsr0++
  6665  00C6  0BCB               	decfsz	??_readCargo,f
  6666  00C7  28C4               	goto	u2480
  6667                           
  6668                           ;normal_mode.c: 19: if(isMycargo){
  6669  00C8  18F0               	btfsc	_isMycargo/(0+8),_isMycargo& (0+7)
  6670  00C9  2998               	goto	l3815
  6671  00CA  29A7               	goto	l3817
  6672  00CB                     l3771:	
  6673                           ;normal_mode.c: 21: case 0:
  6674                           
  6675                           ;normal_mode.c: 20: switch(countabuf){
  6676                           
  6677                           
  6678                           ;normal_mode.c: 22: cargoData.cargoLength = (bufint << 8 | 0x00FF);
  6679  00CB  0855               	movf	readCargo@bufint,w
  6680  00CC  00CC               	movwf	??_readCargo+1
  6681  00CD  01CB               	clrf	??_readCargo
  6682  00CE  30FF               	movlw	255
  6683  00CF  044B               	iorwf	??_readCargo,w
  6684  00D0  00D9               	movwf	_cargoData
  6685  00D1  3000               	movlw	0
  6686  00D2  044C               	iorwf	??_readCargo+1,w
  6687  00D3  28DF               	goto	L2
  6688  00D4                     l3773:	
  6689                           ;normal_mode.c: 24: case 1:
  6690                           
  6691                           ;normal_mode.c: 23: break;
  6692                           
  6693                           
  6694                           ;normal_mode.c: 25: cargoData.cargoLength = cargoData.cargoLength & (bufint | 0xFF00);
  6695  00D4  3000               	movlw	0
  6696  00D5  0455               	iorwf	readCargo@bufint,w
  6697  00D6  00CB               	movwf	??_readCargo
  6698  00D7  30FF               	movlw	255
  6699  00D8  0456               	iorwf	readCargo@bufint+1,w
  6700  00D9  00CC               	movwf	??_readCargo+1
  6701  00DA  0859               	movf	_cargoData,w
  6702  00DB  054B               	andwf	??_readCargo,w
  6703  00DC  00D9               	movwf	_cargoData
  6704  00DD  085A               	movf	_cargoData+1,w
  6705  00DE  054C               	andwf	??_readCargo+1,w
  6706  00DF                     L2:	
  6707  00DF  00DA               	movwf	_cargoData+1
  6708                           
  6709                           ;normal_mode.c: 26: break;
  6710  00E0  29A7               	goto	l3817
  6711  00E1                     l3775:	
  6712                           ;normal_mode.c: 27: case 2:
  6713                           
  6714                           
  6715                           ;normal_mode.c: 28: cargoData.command = spi1_Read_data;
  6716  00E1  0857               	movf	readCargo@spi1_Read_data,w
  6717  00E2  00CB               	movwf	??_readCargo
  6718  00E3  084B               	movf	??_readCargo,w
  6719  00E4  00DB               	movwf	_cargoData+2
  6720                           
  6721                           ;normal_mode.c: 29: break;
  6722  00E5  29A7               	goto	l3817
  6723  00E6                     l3777:	
  6724                           ;normal_mode.c: 30: case 3:
  6725                           
  6726                           
  6727                           ;normal_mode.c: 31: cargoData.index = spi1_Read_data;
  6728  00E6  0857               	movf	readCargo@spi1_Read_data,w
  6729  00E7  00CB               	movwf	??_readCargo
  6730  00E8  084B               	movf	??_readCargo,w
  6731  00E9  00DC               	movwf	_cargoData+3
  6732                           
  6733                           ;normal_mode.c: 32: setIndexMode(spi1_Read_data);
  6734  00EA  0857               	movf	readCargo@spi1_Read_data,w
  6735  00EB  318F  27C0  3180   	fcall	_setIndexMode
  6736                           
  6737                           ;normal_mode.c: 33: break;
  6738  00EE  29A7               	goto	l3817
  6739  00EF                     l3781:	
  6740                           ;normal_mode.c: 34: case 4:
  6741                           
  6742                           
  6743                           ;normal_mode.c: 35: cargoData.address = spi1_Read_data;
  6744  00EF  0020               	movlb	0	; select bank0
  6745  00F0  0857               	movf	readCargo@spi1_Read_data,w
  6746  00F1  00CB               	movwf	??_readCargo
  6747  00F2  084B               	movf	??_readCargo,w
  6748  00F3  00DD               	movwf	_cargoData+4
  6749                           
  6750                           ;normal_mode.c: 36: if(cargoData.address != linkInfo.My_address){
  6751  00F4  085D               	movf	_cargoData+4,w
  6752  00F5  0021               	movlb	1	; select bank1
  6753  00F6  063B               	xorwf	_linkInfo^(0+128),w
  6754  00F7  1903               	skipnz
  6755  00F8  29A7               	goto	l3817
  6756                           
  6757                           ;normal_mode.c: 37: restartCargo();
  6758  00F9  318C  24F4  3180   	fcall	_restartCargo
  6759                           
  6760                           ;normal_mode.c: 38: isMycargo = 0;
  6761  00FC  10F0               	bcf	_isMycargo/(0+8),_isMycargo& (0+7)
  6762                           
  6763                           ;normal_mode.c: 40: }
  6764                           ;normal_mode.c: 41: break;
  6765                           
  6766                           ;normal_mode.c: 39: }else{
  6767  00FD  29A7               	goto	l3817
  6768  00FE                     l3787:	
  6769                           ;normal_mode.c: 42: case 5:
  6770                           
  6771                           
  6772                           ;normal_mode.c: 43: spi2_Send_data = (cargoData.linkAngleTo >> 8 & 0x00ff);
  6773  00FE  0020               	movlb	0	; select bank0
  6774  00FF  085F               	movf	_cargoData+6,w
  6775  0100  2994               	goto	L12
  6776  0101                     l3789:	
  6777                           ;normal_mode.c: 45: case 6:
  6778                           
  6779                           ;normal_mode.c: 44: break;
  6780                           
  6781                           
  6782                           ;normal_mode.c: 46: spi2_Send_data = (cargoData.linkAngleTo & 0x00ff);
  6783  0101  085E               	movf	_cargoData+5,w
  6784  0102  2994               	goto	L12
  6785  0103                     l3791:	
  6786                           ;normal_mode.c: 48: case 7:
  6787                           
  6788                           ;normal_mode.c: 47: break;
  6789                           
  6790                           
  6791                           ;normal_mode.c: 49: spi2_Send_data = (cargoData.linkAngleBack >> 8 & 0x00ff);
  6792  0103  0861               	movf	_cargoData+8,w
  6793  0104  2994               	goto	L12
  6794  0105                     l3793:	
  6795                           ;normal_mode.c: 51: case 8:
  6796                           
  6797                           ;normal_mode.c: 50: break;
  6798                           
  6799                           
  6800                           ;normal_mode.c: 52: spi2_Send_data = (cargoData.linkAngleBack & 0x00ff);
  6801  0105  0860               	movf	_cargoData+7,w
  6802  0106  2994               	goto	L12
  6803  0107                     l3795:	
  6804                           ;normal_mode.c: 54: case 9:
  6805                           
  6806                           ;normal_mode.c: 53: break;
  6807                           
  6808                           
  6809                           ;normal_mode.c: 55: spi2_Send_data = (cargoData.passedTime >> 8 & 0x00ff);
  6810  0107  0863               	movf	_cargoData+10,w
  6811  0108  2994               	goto	L12
  6812  0109                     l3797:	
  6813                           ;normal_mode.c: 57: case 10:
  6814                           
  6815                           ;normal_mode.c: 56: break;
  6816                           
  6817                           
  6818                           ;normal_mode.c: 58: spi2_Send_data = (cargoData.passedTime & 0x00ff);
  6819  0109  0862               	movf	_cargoData+9,w
  6820  010A  2994               	goto	L12
  6821  010B                     l3799:	
  6822                           ;normal_mode.c: 60: case 11:
  6823                           
  6824                           ;normal_mode.c: 59: break;
  6825                           
  6826                           
  6827                           ;normal_mode.c: 61: cargoData.clutchMode = spi1_Read_data;
  6828  010B  0857               	movf	readCargo@spi1_Read_data,w
  6829  010C  00CB               	movwf	??_readCargo
  6830  010D  084B               	movf	??_readCargo,w
  6831  010E  00E4               	movwf	_cargoData+11
  6832                           
  6833                           ;normal_mode.c: 62: clutchaction(cargoData.clutchMode);
  6834  010F  0864               	movf	_cargoData+11,w
  6835  0110  318D  252E  3180   	fcall	_clutchaction
  6836                           
  6837                           ;normal_mode.c: 63: break;
  6838  0113  29A7               	goto	l3817
  6839  0114                     l3803:	
  6840                           ;normal_mode.c: 64: case 12:
  6841                           
  6842                           
  6843                           ;normal_mode.c: 65: cargoData.WorkingCount++;
  6844  0114  3001               	movlw	1
  6845  0115  0020               	movlb	0	; select bank0
  6846  0116  07E5               	addwf	_cargoData+12,f
  6847  0117  3000               	movlw	0
  6848  0118  3DE6               	addwfc	_cargoData+13,f
  6849  0119  3000               	movlw	0
  6850  011A  3DE7               	addwfc	_cargoData+14,f
  6851  011B  3000               	movlw	0
  6852  011C  3DE8               	addwfc	_cargoData+15,f
  6853                           
  6854                           ;normal_mode.c: 66: spi2_Send_data = (TransLong256To255(cargoData.WorkingCount) >> 24 & 
      +                          0x000000ff);
  6855  011D  300C               	movlw	12
  6856  011E  3E59               	addlw	(low (_cargoData| 0))& (0+255)
  6857  011F  0086               	movwf	6
  6858  0120  0187               	clrf	7
  6859  0121  3F40               	moviw [0]fsr1
  6860  0122  00AF               	movwf	TransLong256To255@data
  6861  0123  3F41               	moviw [1]fsr1
  6862  0124  00B0               	movwf	TransLong256To255@data+1
  6863  0125  3F42               	moviw [2]fsr1
  6864  0126  00B1               	movwf	TransLong256To255@data+2
  6865  0127  3F43               	moviw [3]fsr1
  6866  0128  00B2               	movwf	TransLong256To255@data+3
  6867  0129  3182  22D8  3180   	fcall	_TransLong256To255
  6868  012C  0020               	movlb	0	; select bank0
  6869  012D  082F               	movf	?_TransLong256To255,w
  6870  012E  00CB               	movwf	??_readCargo
  6871  012F  0830               	movf	?_TransLong256To255+1,w
  6872  0130  00CC               	movwf	??_readCargo+1
  6873  0131  0831               	movf	?_TransLong256To255+2,w
  6874  0132  00CD               	movwf	??_readCargo+2
  6875  0133  0832               	movf	?_TransLong256To255+3,w
  6876  0134  00CE               	movwf	??_readCargo+3
  6877  0135  3018               	movlw	24
  6878  0136  00CF               	movwf	??_readCargo+4
  6879  0137                     u2515:	
  6880  0137  37CE               	asrf	??_readCargo+3,f
  6881  0138  0CCD               	rrf	??_readCargo+2,f
  6882  0139  0CCC               	rrf	??_readCargo+1,f
  6883  013A  0CCB               	rrf	??_readCargo,f
  6884  013B  0BCF               	decfsz	??_readCargo+4,f
  6885  013C  2937               	goto	u2515
  6886  013D  297F               	goto	L14
  6887  013E                     l3807:	
  6888                           ;normal_mode.c: 68: case 13:
  6889                           
  6890                           ;normal_mode.c: 67: break;
  6891                           
  6892                           
  6893                           ;normal_mode.c: 69: spi2_Send_data = (TransLong256To255(cargoData.WorkingCount) >> 16 & 
      +                          0x000000ff);
  6894  013E  300C               	movlw	12
  6895  013F  3E59               	addlw	(low (_cargoData| 0))& (0+255)
  6896  0140  0086               	movwf	6
  6897  0141  0187               	clrf	7
  6898  0142  3F40               	moviw [0]fsr1
  6899  0143  00AF               	movwf	TransLong256To255@data
  6900  0144  3F41               	moviw [1]fsr1
  6901  0145  00B0               	movwf	TransLong256To255@data+1
  6902  0146  3F42               	moviw [2]fsr1
  6903  0147  00B1               	movwf	TransLong256To255@data+2
  6904  0148  3F43               	moviw [3]fsr1
  6905  0149  00B2               	movwf	TransLong256To255@data+3
  6906  014A  3182  22D8  3180   	fcall	_TransLong256To255
  6907  014D  0020               	movlb	0	; select bank0
  6908  014E  082F               	movf	?_TransLong256To255,w
  6909  014F  00CB               	movwf	??_readCargo
  6910  0150  0830               	movf	?_TransLong256To255+1,w
  6911  0151  00CC               	movwf	??_readCargo+1
  6912  0152  0831               	movf	?_TransLong256To255+2,w
  6913  0153  00CD               	movwf	??_readCargo+2
  6914  0154  0832               	movf	?_TransLong256To255+3,w
  6915  0155  00CE               	movwf	??_readCargo+3
  6916  0156  3010               	movlw	16
  6917  0157  00CF               	movwf	??_readCargo+4
  6918  0158                     u2525:	
  6919  0158  37CE               	asrf	??_readCargo+3,f
  6920  0159  0CCD               	rrf	??_readCargo+2,f
  6921  015A  0CCC               	rrf	??_readCargo+1,f
  6922  015B  0CCB               	rrf	??_readCargo,f
  6923  015C  0BCF               	decfsz	??_readCargo+4,f
  6924  015D  2958               	goto	u2525
  6925  015E  297F               	goto	L14
  6926  015F                     l3809:	
  6927                           ;normal_mode.c: 71: case 14:
  6928                           
  6929                           ;normal_mode.c: 70: break;
  6930                           
  6931                           
  6932                           ;normal_mode.c: 72: spi2_Send_data = (TransLong256To255(cargoData.WorkingCount) >> 8 & 0
      +                          x000000ff);
  6933  015F  300C               	movlw	12
  6934  0160  3E59               	addlw	(low (_cargoData| 0))& (0+255)
  6935  0161  0086               	movwf	6
  6936  0162  0187               	clrf	7
  6937  0163  3F40               	moviw [0]fsr1
  6938  0164  00AF               	movwf	TransLong256To255@data
  6939  0165  3F41               	moviw [1]fsr1
  6940  0166  00B0               	movwf	TransLong256To255@data+1
  6941  0167  3F42               	moviw [2]fsr1
  6942  0168  00B1               	movwf	TransLong256To255@data+2
  6943  0169  3F43               	moviw [3]fsr1
  6944  016A  00B2               	movwf	TransLong256To255@data+3
  6945  016B  3182  22D8  3180   	fcall	_TransLong256To255
  6946  016E  0020               	movlb	0	; select bank0
  6947  016F  082F               	movf	?_TransLong256To255,w
  6948  0170  00CB               	movwf	??_readCargo
  6949  0171  0830               	movf	?_TransLong256To255+1,w
  6950  0172  00CC               	movwf	??_readCargo+1
  6951  0173  0831               	movf	?_TransLong256To255+2,w
  6952  0174  00CD               	movwf	??_readCargo+2
  6953  0175  0832               	movf	?_TransLong256To255+3,w
  6954  0176  00CE               	movwf	??_readCargo+3
  6955  0177  3008               	movlw	8
  6956  0178  00CF               	movwf	??_readCargo+4
  6957  0179                     u2535:	
  6958  0179  37CE               	asrf	??_readCargo+3,f
  6959  017A  0CCD               	rrf	??_readCargo+2,f
  6960  017B  0CCC               	rrf	??_readCargo+1,f
  6961  017C  0CCB               	rrf	??_readCargo,f
  6962  017D  0BCF               	decfsz	??_readCargo+4,f
  6963  017E  2979               	goto	u2535
  6964  017F                     L14:	
  6965  017F  084B               	movf	??_readCargo,w
  6966  0180  00D0               	movwf	??_readCargo+5
  6967  0181  0850               	movf	??_readCargo+5,w
  6968  0182  2996               	goto	L11
  6969  0183                     l3811:	
  6970                           ;normal_mode.c: 74: case 15:
  6971                           
  6972                           ;normal_mode.c: 73: break;
  6973                           
  6974                           
  6975                           ;normal_mode.c: 75: spi2_Send_data = (TransLong256To255(cargoData.WorkingCount) & 0x0000
      +                          00ff);
  6976  0183  300C               	movlw	12
  6977  0184  3E59               	addlw	(low (_cargoData| 0))& (0+255)
  6978  0185  0086               	movwf	6
  6979  0186  0187               	clrf	7
  6980  0187  3F40               	moviw [0]fsr1
  6981  0188  00AF               	movwf	TransLong256To255@data
  6982  0189  3F41               	moviw [1]fsr1
  6983  018A  00B0               	movwf	TransLong256To255@data+1
  6984  018B  3F42               	moviw [2]fsr1
  6985  018C  00B1               	movwf	TransLong256To255@data+2
  6986  018D  3F43               	moviw [3]fsr1
  6987  018E  00B2               	movwf	TransLong256To255@data+3
  6988  018F  3182  22D8  3180   	fcall	_TransLong256To255
  6989  0192  0020               	movlb	0	; select bank0
  6990  0193  082F               	movf	?_TransLong256To255,w
  6991  0194                     L12:	
  6992  0194  00CB               	movwf	??_readCargo
  6993  0195  084B               	movf	??_readCargo,w
  6994  0196                     L11:	
  6995  0196  00EE               	movwf	_spi2_Send_data
  6996                           
  6997                           ;normal_mode.c: 77: }
  6998                           
  6999                           ;normal_mode.c: 76: break;
  7000  0197  29A7               	goto	l3817
  7001  0198                     l3815:	
  7002                           
  7003                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7004                           ; Switch size 1, requested type "space"
  7005                           ; Number of cases is 1, Range of values is 0 to 0
  7006                           ; switch strategies available:
  7007                           ; Name         Instructions Cycles
  7008                           ; simple_byte            4     3 (average)
  7009                           ; direct_byte            8     6 (fixed)
  7010                           ; jumptable            260     6 (fixed)
  7011                           ;	Chosen strategy is simple_byte
  7012  0198  086A               	movf	_countabuf+1,w
  7013  0199  3A00               	xorlw	0	; case 0
  7014  019A  1903               	skipnz
  7015  019B  299D               	goto	l4369
  7016  019C  29A7               	goto	l3817
  7017  019D                     l4369:	
  7018                           
  7019                           ; Switch size 1, requested type "space"
  7020                           ; Number of cases is 16, Range of values is 0 to 15
  7021                           ; switch strategies available:
  7022                           ; Name         Instructions Cycles
  7023                           ; direct_byte           38     6 (fixed)
  7024                           ; simple_byte           49    25 (average)
  7025                           ; jumptable            260     6 (fixed)
  7026                           ;	Chosen strategy is direct_byte
  7027  019D  0869               	movf	_countabuf,w
  7028  019E  0084               	movwf	4
  7029  019F  3010               	movlw	16
  7030  01A0  0204               	subwf	4,w
  7031  01A1  1803               	skipnc
  7032  01A2  29A7               	goto	l3817
  7033  01A3  3188               	movlp	high S4371
  7034  01A4  3504               	lslf	4,w
  7035  01A5  3E00               	addlw	low S4371
  7036  01A6  0082               	movwf	2
  7037  01A7                     l3817:	
  7038                           
  7039                           ;normal_mode.c: 78: }
  7040                           ;normal_mode.c: 80: countabuf++;
  7041  01A7  3001               	movlw	1
  7042  01A8  0020               	movlb	0	; select bank0
  7043  01A9  07E9               	addwf	_countabuf,f
  7044  01AA  3000               	movlw	0
  7045  01AB  3DEA               	addwfc	_countabuf+1,f
  7046                           
  7047                           ;normal_mode.c: 81: if(cargoData.cargoLength <= countabuf){
  7048  01AC  085A               	movf	_cargoData+1,w
  7049  01AD  026A               	subwf	_countabuf+1,w
  7050  01AE  1D03               	skipz
  7051  01AF  29B2               	goto	u2545
  7052  01B0  0859               	movf	_cargoData,w
  7053  01B1  0269               	subwf	_countabuf,w
  7054  01B2                     u2545:	
  7055  01B2  1C03               	skipc
  7056  01B3  0008               	return
  7057                           
  7058                           ;normal_mode.c: 82: cargoData.cargoLength = 0xFFFF;
  7059  01B4  30FF               	movlw	255
  7060  01B5  00D9               	movwf	_cargoData
  7061  01B6  30FF               	movlw	255
  7062  01B7  00DA               	movwf	_cargoData+1
  7063                           
  7064                           ;normal_mode.c: 83: countabuf = 0;
  7065  01B8  01E9               	clrf	_countabuf
  7066  01B9  01EA               	clrf	_countabuf+1
  7067                           
  7068                           ;normal_mode.c: 84: isMycargo = 1;
  7069  01BA  14F0               	bsf	_isMycargo/(0+8),_isMycargo& (0+7)
  7070  01BB  0008               	return
  7071  01BC                     __end_of_readCargo:	
  7072                           
  7073                           	psect	swtext2
  7074  0800                     __pswtext2:	
  7075  0800                     S4371:	
  7076  0800  3180  28CB         	ljmp	l3771
  7077  0802  3180  28D4         	ljmp	l3773
  7078  0804  3180  28E1         	ljmp	l3775
  7079  0806  3180  28E6         	ljmp	l3777
  7080  0808  3180  28EF         	ljmp	l3781
  7081  080A  3180  28FE         	ljmp	l3787
  7082  080C  3181  2901         	ljmp	l3789
  7083  080E  3181  2903         	ljmp	l3791
  7084  0810  3181  2905         	ljmp	l3793
  7085  0812  3181  2907         	ljmp	l3795
  7086  0814  3181  2909         	ljmp	l3797
  7087  0816  3181  290B         	ljmp	l3799
  7088  0818  3181  2914         	ljmp	l3803
  7089  081A  3181  293E         	ljmp	l3807
  7090  081C  3181  295F         	ljmp	l3809
  7091  081E  3181  2983         	ljmp	l3811
  7092                           
  7093                           	psect	text7
  7094  0FC0                     __ptext7:	
  7095 ;; *************** function _setIndexMode *****************
  7096 ;; Defined at:
  7097 ;;		line 31 in file "D:/programdata/16F18346_Link_IC.X/index.c"
  7098 ;; Parameters:    Size  Location     Type
  7099 ;;  m_index         1    wreg     unsigned char 
  7100 ;; Auto vars:     Size  Location     Type
  7101 ;;  m_index         1    2[BANK0 ] unsigned char 
  7102 ;;  i               2    3[BANK0 ] int 
  7103 ;; Return value:  Size  Location     Type
  7104 ;;		None               void
  7105 ;; Registers used:
  7106 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7107 ;; Tracked objects:
  7108 ;;		On entry : 0/0
  7109 ;;		On exit  : 0/0
  7110 ;;		Unchanged: 0/0
  7111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7112 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7113 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7114 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7115 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7116 ;;Total ram usage:        4 bytes
  7117 ;; Hardware stack levels used:    1
  7118 ;; Hardware stack levels required when called:    4
  7119 ;; This function calls:
  7120 ;;		_setMoter_lotate
  7121 ;; This function is called by:
  7122 ;;		_readCargo
  7123 ;; This function uses a non-reentrant model
  7124 ;;
  7125                           
  7126                           
  7127                           ;psect for function _setIndexMode
  7128  0FC0                     _setIndexMode:	
  7129                           
  7130                           ;incstack = 0
  7131                           ; Regs used in _setIndexMode: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7132                           ;setIndexMode@m_index stored from wreg
  7133  0FC0  0020               	movlb	0	; select bank0
  7134  0FC1  00A2               	movwf	setIndexMode@m_index
  7135                           
  7136                           ;index.c: 32: for(int i = 0; i < 18; i++){
  7137  0FC2  01A3               	clrf	setIndexMode@i
  7138  0FC3  01A4               	clrf	setIndexMode@i+1
  7139  0FC4                     L15:	
  7140  0FC4  0824               	movf	setIndexMode@i+1,w
  7141  0FC5  3A80               	xorlw	128
  7142  0FC6  00A1               	movwf	??_setIndexMode
  7143  0FC7  3080               	movlw	128
  7144  0FC8  0221               	subwf	??_setIndexMode,w
  7145  0FC9  1D03               	skipz
  7146  0FCA  2FCD               	goto	u2355
  7147  0FCB  3012               	movlw	18
  7148  0FCC  0223               	subwf	setIndexMode@i,w
  7149  0FCD                     u2355:	
  7150  0FCD  1803               	btfsc	3,0
  7151  0FCE  0008               	return
  7152                           
  7153                           ;index.c: 33: if(index[i] == m_index){
  7154  0FCF  0020               	movlb	0	; select bank0
  7155  0FD0  0823               	movf	setIndexMode@i,w
  7156  0FD1  3EA0               	addlw	(low (_index| (0+256)))& (0+255)
  7157  0FD2  0086               	movwf	6
  7158  0FD3  3001               	movlw	1	; select bank3/4
  7159  0FD4  0087               	movwf	7
  7160  0FD5  0801               	movf	1,w
  7161  0FD6  0622               	xorwf	setIndexMode@m_index,w
  7162  0FD7  1903               	btfsc	3,2
  7163  0FD8  2FE2               	goto	l3597
  7164  0FD9  2FF9               	goto	l3599
  7165  0FDA                     l3587:	
  7166                           ;index.c: 38: case 1:
  7167                           
  7168                           ;index.c: 37: return 1;
  7169                           ;	Return value of _setIndexMode is never used
  7170                           
  7171                           ;index.c: 35: case 0:
  7172                           
  7173                           ;index.c: 34: switch(i){
  7174                           
  7175                           
  7176                           ;index.c: 39: setMoter_lotate(0x01);
  7177  0FDA  3001               	movlw	1
  7178  0FDB  318D  25BF         	fcall	_setMoter_lotate
  7179                           
  7180                           ;index.c: 40: return 1;
  7181                           ;	Return value of _setIndexMode is never used
  7182  0FDD  0008               	return
  7183  0FDE                     l3591:	
  7184                           ;index.c: 41: case 2:
  7185                           
  7186                           
  7187                           ;index.c: 42: setMoter_lotate(0x02);
  7188  0FDE  3002               	movlw	2
  7189  0FDF  318D  25BF         	fcall	_setMoter_lotate
  7190                           
  7191                           ;index.c: 47: return 1;
  7192                           ;	Return value of _setIndexMode is never used
  7193                           
  7194                           ;index.c: 46: case 6:
  7195                           
  7196                           ;index.c: 45: return 1;
  7197                           ;	Return value of _setIndexMode is never used
  7198                           
  7199                           ;index.c: 44: case 3:
  7200                           
  7201                           ;index.c: 43: return 1;
  7202                           ;	Return value of _setIndexMode is never used
  7203  0FE1  0008               	return
  7204  0FE2                     l3597:	
  7205                           ;index.c: 48: }
  7206                           
  7207                           
  7208                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7209                           ; Switch size 1, requested type "space"
  7210                           ; Number of cases is 1, Range of values is 0 to 0
  7211                           ; switch strategies available:
  7212                           ; Name         Instructions Cycles
  7213                           ; simple_byte            4     3 (average)
  7214                           ; direct_byte            8     6 (fixed)
  7215                           ; jumptable            260     6 (fixed)
  7216                           ;	Chosen strategy is simple_byte
  7217  0FE2  0020               	movlb	0	; select bank0
  7218  0FE3  0824               	movf	setIndexMode@i+1,w
  7219  0FE4  3A00               	xorlw	0	; case 0
  7220  0FE5  1903               	skipnz
  7221  0FE6  2FE8               	goto	l4373
  7222  0FE7  2FF9               	goto	l3599
  7223  0FE8                     l4373:	
  7224                           
  7225                           ; Switch size 1, requested type "space"
  7226                           ; Number of cases is 5, Range of values is 0 to 6
  7227                           ; switch strategies available:
  7228                           ; Name         Instructions Cycles
  7229                           ; simple_byte           16     9 (average)
  7230                           ; direct_byte           20     6 (fixed)
  7231                           ; jumptable            260     6 (fixed)
  7232                           ;	Chosen strategy is simple_byte
  7233  0FE8  0823               	movf	setIndexMode@i,w
  7234  0FE9  3A00               	xorlw	0	; case 0
  7235  0FEA  1903               	skipnz
  7236  0FEB  2FFF               	goto	l776
  7237  0FEC  3A01               	xorlw	1	; case 1
  7238  0FED  1903               	skipnz
  7239  0FEE  2FDA               	goto	l3587
  7240  0FEF  3A03               	xorlw	3	; case 2
  7241  0FF0  1903               	skipnz
  7242  0FF1  2FDE               	goto	l3591
  7243  0FF2  3A01               	xorlw	1	; case 3
  7244  0FF3  1903               	skipnz
  7245  0FF4  2FFF               	goto	l776
  7246  0FF5  3A05               	xorlw	5	; case 6
  7247  0FF6  1903               	skipnz
  7248  0FF7  2FFF               	goto	l776
  7249  0FF8  2FF9               	goto	l3599
  7250  0FF9                     l3599:	
  7251  0FF9  3001               	movlw	1
  7252  0FFA  0020               	movlb	0	; select bank0
  7253  0FFB  07A3               	addwf	setIndexMode@i,f
  7254  0FFC  3000               	movlw	0
  7255  0FFD  3DA4               	addwfc	setIndexMode@i+1,f
  7256  0FFE  2FC4               	goto	L15
  7257  0FFF                     l776:	
  7258                           ;index.c: 49: }
  7259                           ;index.c: 50: }
  7260                           ;index.c: 51: return 0;
  7261                           ;	Return value of _setIndexMode is never used
  7262                           
  7263  0FFF  0008               	return
  7264  1000                     __end_of_setIndexMode:	
  7265                           
  7266                           	psect	text8
  7267  0DBF                     __ptext8:	
  7268 ;; *************** function _setMoter_lotate *****************
  7269 ;; Defined at:
  7270 ;;		line 17 in file "D:/programdata/16F18346_Link_IC.X/cal_position.c"
  7271 ;; Parameters:    Size  Location     Type
  7272 ;;  lotate          1    wreg     unsigned char 
  7273 ;; Auto vars:     Size  Location     Type
  7274 ;;  lotate          1    0[BANK0 ] unsigned char 
  7275 ;; Return value:  Size  Location     Type
  7276 ;;                  1    wreg      void 
  7277 ;; Registers used:
  7278 ;;		wreg, status,2, status,0
  7279 ;; Tracked objects:
  7280 ;;		On entry : 0/0
  7281 ;;		On exit  : 0/0
  7282 ;;		Unchanged: 0/0
  7283 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7284 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7285 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7286 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7287 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7288 ;;Total ram usage:        1 bytes
  7289 ;; Hardware stack levels used:    1
  7290 ;; Hardware stack levels required when called:    3
  7291 ;; This function calls:
  7292 ;;		Nothing
  7293 ;; This function is called by:
  7294 ;;		_setIndexMode
  7295 ;;		_setCommandMode
  7296 ;; This function uses a non-reentrant model
  7297 ;;
  7298                           
  7299                           
  7300                           ;psect for function _setMoter_lotate
  7301  0DBF                     _setMoter_lotate:	
  7302                           
  7303                           ;incstack = 0
  7304                           ; Regs used in _setMoter_lotate: [wreg+status,2+status,0]
  7305                           ;setMoter_lotate@lotate stored from wreg
  7306  0DBF  0020               	movlb	0	; select bank0
  7307  0DC0  00A0               	movwf	setMoter_lotate@lotate
  7308                           
  7309                           ;cal_position.c: 18: if(lotate == 0x01){
  7310  0DC1  0320               	decf	setMoter_lotate@lotate,w
  7311  0DC2  1D03               	btfss	3,2
  7312  0DC3  2DCA               	goto	l3395
  7313                           
  7314                           ;cal_position.c: 20: position.moter_lotate = 1;
  7315  0DC4  3001               	movlw	1
  7316  0DC5  0022               	movlb	2	; select bank2
  7317  0DC6  00A0               	movwf	_position^(0+256)
  7318  0DC7  3000               	movlw	0
  7319  0DC8  00A1               	movwf	(_position^(0+256)+1)
  7320                           
  7321                           ;cal_position.c: 21: }else if(lotate == 0x02){
  7322  0DC9  0008               	return
  7323  0DCA                     l3395:	
  7324  0DCA  3002               	movlw	2
  7325  0DCB  0020               	movlb	0	; select bank0
  7326  0DCC  0620               	xorwf	setMoter_lotate@lotate,w
  7327  0DCD  1D03               	btfss	3,2
  7328  0DCE  2DD5               	goto	l3399
  7329                           
  7330                           ;cal_position.c: 23: position.moter_lotate = -1;
  7331  0DCF  30FF               	movlw	255
  7332  0DD0  0022               	movlb	2	; select bank2
  7333  0DD1  00A0               	movwf	_position^(0+256)
  7334  0DD2  30FF               	movlw	255
  7335  0DD3  00A1               	movwf	(_position^(0+256)+1)
  7336                           
  7337                           ;cal_position.c: 24: }else if(lotate == 0x03){
  7338  0DD4  0008               	return
  7339  0DD5                     l3399:	
  7340  0DD5  3003               	movlw	3
  7341  0DD6  0020               	movlb	0	; select bank0
  7342  0DD7  0620               	xorwf	setMoter_lotate@lotate,w
  7343  0DD8  1D03               	btfss	3,2
  7344  0DD9  0008               	return
  7345                           
  7346                           ;cal_position.c: 25: position.moter_lotate = 0;
  7347  0DDA  0022               	movlb	2	; select bank2
  7348  0DDB  01A0               	clrf	_position^(0+256)
  7349  0DDC  01A1               	clrf	(_position+1)^(0+256)
  7350  0DDD  0008               	return
  7351  0DDE                     __end_of_setMoter_lotate:	
  7352                           
  7353                           	psect	text9
  7354  0D2E                     __ptext9:	
  7355 ;; *************** function _clutchaction *****************
  7356 ;; Defined at:
  7357 ;;		line 73 in file "D:/programdata/16F18346_Link_IC.X/command.c"
  7358 ;; Parameters:    Size  Location     Type
  7359 ;;  comannd         1    wreg     unsigned char 
  7360 ;; Auto vars:     Size  Location     Type
  7361 ;;  comannd         1    0[BANK0 ] unsigned char 
  7362 ;; Return value:  Size  Location     Type
  7363 ;;		None               void
  7364 ;; Registers used:
  7365 ;;		wreg, status,2, status,0
  7366 ;; Tracked objects:
  7367 ;;		On entry : 0/0
  7368 ;;		On exit  : 0/0
  7369 ;;		Unchanged: 0/0
  7370 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7371 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7372 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7373 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7374 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7375 ;;Total ram usage:        1 bytes
  7376 ;; Hardware stack levels used:    1
  7377 ;; Hardware stack levels required when called:    3
  7378 ;; This function calls:
  7379 ;;		Nothing
  7380 ;; This function is called by:
  7381 ;;		_readCargo
  7382 ;; This function uses a non-reentrant model
  7383 ;;
  7384                           
  7385                           
  7386                           ;psect for function _clutchaction
  7387  0D2E                     _clutchaction:	
  7388                           
  7389                           ;incstack = 0
  7390                           ; Regs used in _clutchaction: [wreg+status,2+status,0]
  7391                           ;clutchaction@comannd stored from wreg
  7392  0D2E  0020               	movlb	0	; select bank0
  7393  0D2F  00A0               	movwf	clutchaction@comannd
  7394                           
  7395                           ;command.c: 74: if(comannd == 1){
  7396  0D30  0320               	decf	clutchaction@comannd,w
  7397  0D31  1D03               	btfss	3,2
  7398  0D32  2D36               	goto	l382
  7399                           
  7400                           ;command.c: 75: LATAbits.LATA0 = 1;
  7401  0D33  0022               	movlb	2	; select bank2
  7402  0D34  140C               	bsf	12,0	;volatile
  7403                           
  7404                           ;command.c: 76: }
  7405  0D35  0008               	return
  7406  0D36                     l382:	
  7407                           
  7408                           ;command.c: 77: else{
  7409                           ;command.c: 78: LATAbits.LATA0 = 0;
  7410  0D36  0022               	movlb	2	; select bank2
  7411  0D37  100C               	bcf	12,0	;volatile
  7412  0D38  0008               	return
  7413  0D39                     __end_of_clutchaction:	
  7414                           
  7415                           	psect	text10
  7416  03BE                     __ptext10:	
  7417 ;; *************** function _EEPROM_download *****************
  7418 ;; Defined at:
  7419 ;;		line 70 in file "eeprom.c"
  7420 ;; Parameters:    Size  Location     Type
  7421 ;;  spi1_Read_da    1    wreg     unsigned char 
  7422 ;; Auto vars:     Size  Location     Type
  7423 ;;  spi1_Read_da    1   27[BANK0 ] unsigned char 
  7424 ;;  buflong         4   21[BANK0 ] unsigned long 
  7425 ;;  bufint          2   25[BANK0 ] unsigned int 
  7426 ;; Return value:  Size  Location     Type
  7427 ;;                  1    wreg      void 
  7428 ;; Registers used:
  7429 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7430 ;; Tracked objects:
  7431 ;;		On entry : 0/0
  7432 ;;		On exit  : 0/0
  7433 ;;		Unchanged: 0/0
  7434 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7435 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7436 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7437 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7438 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7439 ;;Total ram usage:       11 bytes
  7440 ;; Hardware stack levels used:    1
  7441 ;; Hardware stack levels required when called:    4
  7442 ;; This function calls:
  7443 ;;		_ReadEEPROM
  7444 ;;		_getCargoData
  7445 ;;		_restartCargo
  7446 ;; This function is called by:
  7447 ;;		_setComunicateMode
  7448 ;; This function uses a non-reentrant model
  7449 ;;
  7450                           
  7451                           
  7452                           ;psect for function _EEPROM_download
  7453  03BE                     _EEPROM_download:	
  7454                           
  7455                           ;incstack = 0
  7456                           ; Regs used in _EEPROM_download: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7457                           ;EEPROM_download@spi1_Read_data stored from wreg
  7458  03BE  0020               	movlb	0	; select bank0
  7459  03BF  00BB               	movwf	EEPROM_download@spi1_Read_data
  7460                           
  7461                           ;eeprom.c: 71: unsigned int bufint = spi1_Read_data;
  7462  03C0  083B               	movf	EEPROM_download@spi1_Read_data,w
  7463  03C1  00B1               	movwf	??_EEPROM_download
  7464  03C2  01B2               	clrf	??_EEPROM_download+1
  7465  03C3  0831               	movf	??_EEPROM_download,w
  7466  03C4  00B9               	movwf	EEPROM_download@bufint
  7467  03C5  0832               	movf	??_EEPROM_download+1,w
  7468  03C6  00BA               	movwf	EEPROM_download@bufint+1
  7469                           
  7470                           ;eeprom.c: 72: unsigned long buflong = spi1_Read_data;
  7471  03C7  083B               	movf	EEPROM_download@spi1_Read_data,w
  7472  03C8  00B1               	movwf	??_EEPROM_download
  7473  03C9  01B2               	clrf	??_EEPROM_download+1
  7474  03CA  01B3               	clrf	??_EEPROM_download+2
  7475  03CB  01B4               	clrf	??_EEPROM_download+3
  7476  03CC  0834               	movf	??_EEPROM_download+3,w
  7477  03CD  00B8               	movwf	EEPROM_download@buflong+3
  7478  03CE  0833               	movf	??_EEPROM_download+2,w
  7479  03CF  00B7               	movwf	EEPROM_download@buflong+2
  7480  03D0  0832               	movf	??_EEPROM_download+1,w
  7481  03D1  00B6               	movwf	EEPROM_download@buflong+1
  7482  03D2  0831               	movf	??_EEPROM_download,w
  7483  03D3  00B5               	movwf	EEPROM_download@buflong
  7484                           
  7485                           ;eeprom.c: 73: cargoData = getCargoData();
  7486  03D4  318D  257E  3183   	fcall	_getCargoData
  7487  03D7  0020               	movlb	0	; select bank0
  7488  03D8  3020               	movlw	low ?_getCargoData
  7489  03D9  0086               	movwf	6
  7490  03DA  3000               	movlw	high ?_getCargoData
  7491  03DB  0087               	movwf	7
  7492  03DC  3059               	movlw	low _cargoData
  7493  03DD  0084               	movwf	4
  7494  03DE  3000               	movlw	high _cargoData
  7495  03DF  0085               	movwf	5
  7496  03E0  3010               	movlw	16
  7497  03E1  00B1               	movwf	??_EEPROM_download
  7498  03E2                     u2550:	
  7499  03E2  0016               	moviw fsr1++
  7500  03E3  001A               	movwi fsr0++
  7501  03E4  0BB1               	decfsz	??_EEPROM_download,f
  7502  03E5  2BE2               	goto	u2550
  7503                           
  7504                           ;eeprom.c: 74: if(isMycargo){
  7505  03E6  18F0               	btfsc	_isMycargo/(0+8),_isMycargo& (0+7)
  7506  03E7  2C29               	goto	l3863
  7507  03E8  2C39               	goto	l719
  7508  03E9                     l3841:	
  7509                           ;eeprom.c: 76: case 0:
  7510                           
  7511                           ;eeprom.c: 75: switch(countabuf){
  7512                           
  7513                           
  7514                           ;eeprom.c: 77: cargoData.cargoLength = (bufint << 8 | 0x00FF);
  7515  03E9  0839               	movf	EEPROM_download@bufint,w
  7516  03EA  00B2               	movwf	??_EEPROM_download+1
  7517  03EB  01B1               	clrf	??_EEPROM_download
  7518  03EC  30FF               	movlw	255
  7519  03ED  0431               	iorwf	??_EEPROM_download,w
  7520  03EE  00D9               	movwf	_cargoData
  7521  03EF  3000               	movlw	0
  7522  03F0  0432               	iorwf	??_EEPROM_download+1,w
  7523  03F1  2BFD               	goto	L16
  7524  03F2                     l3843:	
  7525                           ;eeprom.c: 79: case 1:
  7526                           
  7527                           ;eeprom.c: 78: break;
  7528                           
  7529                           
  7530                           ;eeprom.c: 80: cargoData.cargoLength = cargoData.cargoLength & (bufint | 0xFF00);
  7531  03F2  3000               	movlw	0
  7532  03F3  0439               	iorwf	EEPROM_download@bufint,w
  7533  03F4  00B1               	movwf	??_EEPROM_download
  7534  03F5  30FF               	movlw	255
  7535  03F6  043A               	iorwf	EEPROM_download@bufint+1,w
  7536  03F7  00B2               	movwf	??_EEPROM_download+1
  7537  03F8  0859               	movf	_cargoData,w
  7538  03F9  0531               	andwf	??_EEPROM_download,w
  7539  03FA  00D9               	movwf	_cargoData
  7540  03FB  085A               	movf	_cargoData+1,w
  7541  03FC  0532               	andwf	??_EEPROM_download+1,w
  7542  03FD                     L16:	
  7543  03FD  00DA               	movwf	_cargoData+1
  7544                           
  7545                           ;eeprom.c: 81: break;
  7546  03FE  2C39               	goto	l719
  7547  03FF                     l3845:	
  7548                           ;eeprom.c: 82: case 2:
  7549                           
  7550                           
  7551                           ;eeprom.c: 83: cargoData.command = spi1_Read_data;
  7552  03FF  083B               	movf	EEPROM_download@spi1_Read_data,w
  7553  0400  00B1               	movwf	??_EEPROM_download
  7554  0401  0831               	movf	??_EEPROM_download,w
  7555  0402  00DB               	movwf	_cargoData+2
  7556                           
  7557                           ;eeprom.c: 84: break;
  7558  0403  2C39               	goto	l719
  7559  0404                     l3847:	
  7560                           ;eeprom.c: 85: case 3:
  7561                           
  7562                           
  7563                           ;eeprom.c: 86: cargoData.index = spi1_Read_data;
  7564  0404  083B               	movf	EEPROM_download@spi1_Read_data,w
  7565  0405  00B1               	movwf	??_EEPROM_download
  7566  0406  0831               	movf	??_EEPROM_download,w
  7567  0407  00DC               	movwf	_cargoData+3
  7568                           
  7569                           ;eeprom.c: 87: break;
  7570  0408  2C39               	goto	l719
  7571  0409                     l3849:	
  7572                           ;eeprom.c: 88: case 4:
  7573                           
  7574                           
  7575                           ;eeprom.c: 89: cargoData.address = spi1_Read_data;
  7576  0409  083B               	movf	EEPROM_download@spi1_Read_data,w
  7577  040A  00B1               	movwf	??_EEPROM_download
  7578  040B  0831               	movf	??_EEPROM_download,w
  7579  040C  00DD               	movwf	_cargoData+4
  7580                           
  7581                           ;eeprom.c: 90: if(cargoData.address != linkInfo.My_address){
  7582  040D  085D               	movf	_cargoData+4,w
  7583  040E  0021               	movlb	1	; select bank1
  7584  040F  063B               	xorwf	_linkInfo^(0+128),w
  7585  0410  1903               	skipnz
  7586  0411  2C17               	goto	l3855
  7587                           
  7588                           ;eeprom.c: 91: restartCargo();
  7589  0412  318C  24F4  3183   	fcall	_restartCargo
  7590                           
  7591                           ;eeprom.c: 92: isMycargo = 0;
  7592  0415  10F0               	bcf	_isMycargo/(0+8),_isMycargo& (0+7)
  7593                           
  7594                           ;eeprom.c: 93: }else{
  7595  0416  2C39               	goto	l719
  7596  0417                     l3855:	
  7597                           
  7598                           ;eeprom.c: 94: LATAbits.LATA0 = ~LATAbits.LATA0;
  7599  0417  1003               	clrc
  7600  0418  0022               	movlb	2	; select bank2
  7601  0419  1C0C               	btfss	12,0	;volatile
  7602  041A  1403               	setc
  7603  041B  1C03               	btfss	3,0
  7604  041C  2C20               	goto	u2580
  7605  041D  0022               	movlb	2	; select bank2
  7606  041E  140C               	bsf	12,0	;volatile
  7607  041F  2C22               	goto	l3857
  7608  0420                     u2580:	
  7609  0420  0022               	movlb	2	; select bank2
  7610  0421  100C               	bcf	12,0	;volatile
  7611  0422                     l3857:	
  7612                           
  7613                           ;eeprom.c: 95: isMyAddr = 1;
  7614  0422  1470               	bsf	_isMyAddr/(0+8),_isMyAddr& (0+7)
  7615                           
  7616                           ;eeprom.c: 96: EEPROM_ADDR_buf = 0xF000;
  7617  0423  3000               	movlw	0
  7618  0424  0021               	movlb	1	; select bank1
  7619  0425  00C7               	movwf	_EEPROM_ADDR_buf^(0+128)
  7620  0426  30F0               	movlw	240
  7621  0427  00C8               	movwf	(_EEPROM_ADDR_buf^(0+128)+1)
  7622                           
  7623                           ;eeprom.c: 99: }
  7624                           
  7625                           ;eeprom.c: 97: }
  7626                           ;eeprom.c: 98: break;
  7627  0428  2C39               	goto	l719
  7628  0429                     l3863:	
  7629                           
  7630                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7631                           ; Switch size 1, requested type "space"
  7632                           ; Number of cases is 1, Range of values is 0 to 0
  7633                           ; switch strategies available:
  7634                           ; Name         Instructions Cycles
  7635                           ; simple_byte            4     3 (average)
  7636                           ; direct_byte            8     6 (fixed)
  7637                           ; jumptable            260     6 (fixed)
  7638                           ;	Chosen strategy is simple_byte
  7639  0429  0020               	movlb	0	; select bank0
  7640  042A  086A               	movf	_countabuf+1,w
  7641  042B  3A00               	xorlw	0	; case 0
  7642  042C  1903               	skipnz
  7643  042D  2C2F               	goto	l4375
  7644  042E  2C39               	goto	l719
  7645  042F                     l4375:	
  7646                           
  7647                           ; Switch size 1, requested type "space"
  7648                           ; Number of cases is 5, Range of values is 0 to 4
  7649                           ; switch strategies available:
  7650                           ; Name         Instructions Cycles
  7651                           ; direct_byte           16     6 (fixed)
  7652                           ; simple_byte           16     9 (average)
  7653                           ; jumptable            260     6 (fixed)
  7654                           ;	Chosen strategy is direct_byte
  7655  042F  0869               	movf	_countabuf,w
  7656  0430  0084               	movwf	4
  7657  0431  3005               	movlw	5
  7658  0432  0204               	subwf	4,w
  7659  0433  1803               	skipnc
  7660  0434  2C39               	goto	l719
  7661  0435  3188               	movlp	high S4377
  7662  0436  3504               	lslf	4,w
  7663  0437  3E40               	addlw	low S4377
  7664  0438  0082               	movwf	2
  7665  0439                     l719:	
  7666                           
  7667                           ;eeprom.c: 100: }
  7668                           ;eeprom.c: 101: if(isMyAddr && countabuf > 4){
  7669  0439  1C70               	btfss	_isMyAddr/(0+8),_isMyAddr& (0+7)
  7670  043A  2C59               	goto	l3873
  7671  043B  3000               	movlw	0
  7672  043C  0020               	movlb	0	; select bank0
  7673  043D  026A               	subwf	_countabuf+1,w
  7674  043E  3005               	movlw	5
  7675  043F  1903               	skipnz
  7676  0440  0269               	subwf	_countabuf,w
  7677  0441  1C03               	skipc
  7678  0442  2C59               	goto	l3873
  7679                           
  7680                           ;eeprom.c: 103: ReadEEPROM (EEPROM_ADDR_buf);
  7681  0443  0021               	movlb	1	; select bank1
  7682  0444  0848               	movf	(_EEPROM_ADDR_buf+1)^(0+128),w
  7683  0445  0020               	movlb	0	; select bank0
  7684  0446  00A1               	movwf	ReadEEPROM@addr+1
  7685  0447  0021               	movlb	1	; select bank1
  7686  0448  0847               	movf	_EEPROM_ADDR_buf^(0+128),w
  7687  0449  0020               	movlb	0	; select bank0
  7688  044A  00A0               	movwf	ReadEEPROM@addr
  7689  044B  318E  2620  3183   	fcall	_ReadEEPROM
  7690                           
  7691                           ;eeprom.c: 104: spi2_Send_data = RaadData[0];
  7692  044E  0021               	movlb	1	; select bank1
  7693  044F  0849               	movf	_RaadData^(0+128),w
  7694  0450  0020               	movlb	0	; select bank0
  7695  0451  00B1               	movwf	??_EEPROM_download
  7696  0452  0831               	movf	??_EEPROM_download,w
  7697  0453  00EE               	movwf	_spi2_Send_data
  7698                           
  7699                           ;eeprom.c: 107: EEPROM_ADDR_buf += 1;
  7700  0454  3001               	movlw	1
  7701  0455  0021               	movlb	1	; select bank1
  7702  0456  07C7               	addwf	_EEPROM_ADDR_buf^(0+128),f
  7703  0457  3000               	movlw	0
  7704  0458  3DC8               	addwfc	(_EEPROM_ADDR_buf+1)^(0+128),f
  7705  0459                     l3873:	
  7706                           
  7707                           ;eeprom.c: 109: }
  7708                           ;eeprom.c: 110: countabuf++;
  7709  0459  3001               	movlw	1
  7710  045A  0020               	movlb	0	; select bank0
  7711  045B  07E9               	addwf	_countabuf,f
  7712  045C  3000               	movlw	0
  7713  045D  3DEA               	addwfc	_countabuf+1,f
  7714                           
  7715                           ;eeprom.c: 111: if(calibdata.cargoLength <= countabuf){
  7716  045E  0021               	movlb	1	; select bank1
  7717  045F  0833               	movf	(_calibdata+1)^(0+128),w
  7718  0460  0020               	movlb	0	; select bank0
  7719  0461  026A               	subwf	_countabuf+1,w
  7720  0462  1D03               	skipz
  7721  0463  2C68               	goto	u2625
  7722  0464  0021               	movlb	1	; select bank1
  7723  0465  0832               	movf	_calibdata^(0+128),w
  7724  0466  0020               	movlb	0	; select bank0
  7725  0467  0269               	subwf	_countabuf,w
  7726  0468                     u2625:	
  7727  0468  1C03               	skipc
  7728  0469  2C74               	goto	l3885
  7729                           
  7730                           ;eeprom.c: 112: calibdata.cargoLength = 0xFFFF;
  7731  046A  30FF               	movlw	255
  7732  046B  0021               	movlb	1	; select bank1
  7733  046C  00B2               	movwf	_calibdata^(0+128)
  7734  046D  30FF               	movlw	255
  7735  046E  00B3               	movwf	(_calibdata^(0+128)+1)
  7736                           
  7737                           ;eeprom.c: 113: countabuf = 0;
  7738  046F  0020               	movlb	0	; select bank0
  7739  0470  01E9               	clrf	_countabuf
  7740  0471  01EA               	clrf	_countabuf+1
  7741                           
  7742                           ;eeprom.c: 114: isMycargo = 1;
  7743  0472  14F0               	bsf	_isMycargo/(0+8),_isMycargo& (0+7)
  7744                           
  7745                           ;eeprom.c: 115: isMyAddr = 0;
  7746  0473  1070               	bcf	_isMyAddr/(0+8),_isMyAddr& (0+7)
  7747  0474                     l3885:	
  7748                           
  7749                           ;eeprom.c: 116: }
  7750                           ;eeprom.c: 118: if(0xF0FF <= EEPROM_ADDR_buf){
  7751  0474  30F0               	movlw	240
  7752  0475  0021               	movlb	1	; select bank1
  7753  0476  0248               	subwf	(_EEPROM_ADDR_buf+1)^(0+128),w
  7754  0477  30FF               	movlw	255
  7755  0478  1903               	skipnz
  7756  0479  0247               	subwf	_EEPROM_ADDR_buf^(0+128),w
  7757  047A  1C03               	skipc
  7758  047B  0008               	return
  7759                           
  7760                           ;eeprom.c: 119: countabuf = 0;
  7761  047C  0020               	movlb	0	; select bank0
  7762  047D  01E9               	clrf	_countabuf
  7763  047E  01EA               	clrf	_countabuf+1
  7764                           
  7765                           ;eeprom.c: 120: isMycargo = 1;
  7766  047F  14F0               	bsf	_isMycargo/(0+8),_isMycargo& (0+7)
  7767  0480  0008               	return
  7768  0481                     __end_of_EEPROM_download:	
  7769                           
  7770                           	psect	swtext3
  7771  0840                     __pswtext3:	
  7772  0840                     S4377:	
  7773  0840  3183  2BE9         	ljmp	l3841
  7774  0842  3183  2BF2         	ljmp	l3843
  7775  0844  3183  2BFF         	ljmp	l3845
  7776  0846  3184  2C04         	ljmp	l3847
  7777  0848  3184  2C09         	ljmp	l3849
  7778                           
  7779                           	psect	text11
  7780  0E20                     __ptext11:	
  7781 ;; *************** function _ReadEEPROM *****************
  7782 ;; Defined at:
  7783 ;;		line 54 in file "eeprom.c"
  7784 ;; Parameters:    Size  Location     Type
  7785 ;;  addr            2    0[BANK0 ] int 
  7786 ;; Auto vars:     Size  Location     Type
  7787 ;;  Loadr           1    4[BANK0 ] unsigned char 
  7788 ;;  Hiadr           1    3[BANK0 ] unsigned char 
  7789 ;; Return value:  Size  Location     Type
  7790 ;;                  1    wreg      void 
  7791 ;; Registers used:
  7792 ;;		wreg, status,2
  7793 ;; Tracked objects:
  7794 ;;		On entry : 0/0
  7795 ;;		On exit  : 0/0
  7796 ;;		Unchanged: 0/0
  7797 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7798 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7799 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7800 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7801 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7802 ;;Total ram usage:        5 bytes
  7803 ;; Hardware stack levels used:    1
  7804 ;; Hardware stack levels required when called:    3
  7805 ;; This function calls:
  7806 ;;		Nothing
  7807 ;; This function is called by:
  7808 ;;		_EEPROM_download
  7809 ;; This function uses a non-reentrant model
  7810 ;;
  7811                           
  7812                           
  7813                           ;psect for function _ReadEEPROM
  7814  0E20                     _ReadEEPROM:	
  7815                           
  7816                           ;eeprom.c: 56: unsigned char Hiadr = addr >> 8 & 0xFF;
  7817                           
  7818                           ;incstack = 0
  7819                           ; Regs used in _ReadEEPROM: [wreg+status,2]
  7820  0E20  0020               	movlb	0	; select bank0
  7821  0E21  0821               	movf	ReadEEPROM@addr+1,w
  7822  0E22  00A2               	movwf	??_ReadEEPROM
  7823  0E23  0822               	movf	??_ReadEEPROM,w
  7824  0E24  00A3               	movwf	ReadEEPROM@Hiadr
  7825                           
  7826                           ;eeprom.c: 57: unsigned char Loadr = addr & 0xFF;
  7827  0E25  0820               	movf	ReadEEPROM@addr,w
  7828  0E26  00A2               	movwf	??_ReadEEPROM
  7829  0E27  0822               	movf	??_ReadEEPROM,w
  7830  0E28  00A4               	movwf	ReadEEPROM@Loadr
  7831                           
  7832                           ;eeprom.c: 58: NVMCON1bits.NVMREGS = 1;
  7833  0E29  0031               	movlb	17	; select bank17
  7834  0E2A  1715               	bsf	21,6	;volsfr
  7835                           
  7836                           ;eeprom.c: 59: NVMADRL = Loadr;
  7837  0E2B  0020               	movlb	0	; select bank0
  7838  0E2C  0824               	movf	ReadEEPROM@Loadr,w
  7839  0E2D  0031               	movlb	17	; select bank17
  7840  0E2E  0091               	movwf	17	;volatile
  7841                           
  7842                           ;eeprom.c: 60: NVMADRH = Hiadr;
  7843  0E2F  0020               	movlb	0	; select bank0
  7844  0E30  0823               	movf	ReadEEPROM@Hiadr,w
  7845  0E31  0031               	movlb	17	; select bank17
  7846  0E32  0092               	movwf	18	;volatile
  7847                           
  7848                           ;eeprom.c: 61: NVMCON1bits.RD = 1;
  7849  0E33  1415               	bsf	21,0	;volsfr
  7850                           
  7851                           ;eeprom.c: 62: RD = 1;
  7852  0E34  1415               	bsf	21,0	;volsfr
  7853                           
  7854                           ;eeprom.c: 64: RaadData[0] = NVMDATL;
  7855  0E35  0813               	movf	19,w	;volatile
  7856  0E36  0020               	movlb	0	; select bank0
  7857  0E37  00A2               	movwf	??_ReadEEPROM
  7858  0E38  0822               	movf	??_ReadEEPROM,w
  7859  0E39  0021               	movlb	1	; select bank1
  7860  0E3A  00C9               	movwf	_RaadData^(0+128)
  7861                           
  7862                           ;eeprom.c: 65: RaadData[1] = NVMDATH;
  7863  0E3B  0031               	movlb	17	; select bank17
  7864  0E3C  0814               	movf	20,w	;volatile
  7865  0E3D  0020               	movlb	0	; select bank0
  7866  0E3E  00A2               	movwf	??_ReadEEPROM
  7867  0E3F  0822               	movf	??_ReadEEPROM,w
  7868  0E40  0021               	movlb	1	; select bank1
  7869  0E41  00CA               	movwf	(_RaadData^(0+128)+1)
  7870  0E42  0008               	return
  7871  0E43                     __end_of_ReadEEPROM:	
  7872                           
  7873                           	psect	text12
  7874  01BC                     __ptext12:	
  7875 ;; *************** function _Calibrate_download *****************
  7876 ;; Defined at:
  7877 ;;		line 65 in file "D:/programdata/16F18346_Link_IC.X/calibrate_mode.c"
  7878 ;; Parameters:    Size  Location     Type
  7879 ;;  spi_Read_dat    1    wreg     unsigned char 
  7880 ;; Auto vars:     Size  Location     Type
  7881 ;;  spi_Read_dat    1   55[BANK0 ] unsigned char 
  7882 ;;  buflong         4   49[BANK0 ] unsigned long 
  7883 ;;  bufint          2   53[BANK0 ] unsigned int 
  7884 ;; Return value:  Size  Location     Type
  7885 ;;                  1    wreg      void 
  7886 ;; Registers used:
  7887 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7888 ;; Tracked objects:
  7889 ;;		On entry : 0/0
  7890 ;;		On exit  : 0/0
  7891 ;;		Unchanged: 0/0
  7892 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7893 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7894 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7895 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7896 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7897 ;;Total ram usage:       13 bytes
  7898 ;; Hardware stack levels used:    1
  7899 ;; Hardware stack levels required when called:    5
  7900 ;; This function calls:
  7901 ;;		_InitCalibrate
  7902 ;;		_TransLong256To255
  7903 ;;		_isEndpoint
  7904 ;;		_resetCargo
  7905 ;; This function is called by:
  7906 ;;		_setComunicateMode
  7907 ;; This function uses a non-reentrant model
  7908 ;;
  7909                           
  7910                           
  7911                           ;psect for function _Calibrate_download
  7912  01BC                     _Calibrate_download:	
  7913                           
  7914                           ;incstack = 0
  7915                           ; Regs used in _Calibrate_download: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7916                           ;Calibrate_download@spi_Read_data stored from wreg
  7917  01BC  0020               	movlb	0	; select bank0
  7918  01BD  00D7               	movwf	Calibrate_download@spi_Read_data
  7919                           
  7920                           ;calibrate_mode.c: 67: unsigned int bufint = spi_Read_data;
  7921  01BE  0857               	movf	Calibrate_download@spi_Read_data,w
  7922  01BF  00CB               	movwf	??_Calibrate_download
  7923  01C0  01CC               	clrf	??_Calibrate_download+1
  7924  01C1  084B               	movf	??_Calibrate_download,w
  7925  01C2  00D5               	movwf	Calibrate_download@bufint
  7926  01C3  084C               	movf	??_Calibrate_download+1,w
  7927  01C4  00D6               	movwf	Calibrate_download@bufint+1
  7928                           
  7929                           ;calibrate_mode.c: 68: unsigned long buflong = spi_Read_data;
  7930  01C5  0857               	movf	Calibrate_download@spi_Read_data,w
  7931  01C6  00CB               	movwf	??_Calibrate_download
  7932  01C7  01CC               	clrf	??_Calibrate_download+1
  7933  01C8  01CD               	clrf	??_Calibrate_download+2
  7934  01C9  01CE               	clrf	??_Calibrate_download+3
  7935  01CA  084E               	movf	??_Calibrate_download+3,w
  7936  01CB  00D4               	movwf	Calibrate_download@buflong+3
  7937  01CC  084D               	movf	??_Calibrate_download+2,w
  7938  01CD  00D3               	movwf	Calibrate_download@buflong+2
  7939  01CE  084C               	movf	??_Calibrate_download+1,w
  7940  01CF  00D2               	movwf	Calibrate_download@buflong+1
  7941  01D0  084B               	movf	??_Calibrate_download,w
  7942  01D1  00D1               	movwf	Calibrate_download@buflong
  7943                           
  7944                           ;calibrate_mode.c: 69: isEndpoint();
  7945  01D2  318F  2719  3181   	fcall	_isEndpoint
  7946                           
  7947                           ;calibrate_mode.c: 70: switch(countabuf){
  7948  01D5  2AA9               	goto	l3745
  7949  01D6                     l3707:	
  7950                           ;calibrate_mode.c: 71: case 0:
  7951                           
  7952                           
  7953                           ;calibrate_mode.c: 72: InitCalibrate();
  7954  01D6  318E  26BE  3181   	fcall	_InitCalibrate
  7955                           
  7956                           ;calibrate_mode.c: 73: calibdata.cargoLength = (bufint << 8 | 0x00FF);
  7957  01D9  0020               	movlb	0	; select bank0
  7958  01DA  0855               	movf	Calibrate_download@bufint,w
  7959  01DB  00CC               	movwf	??_Calibrate_download+1
  7960  01DC  01CB               	clrf	??_Calibrate_download
  7961  01DD  30FF               	movlw	255
  7962  01DE  044B               	iorwf	??_Calibrate_download,w
  7963  01DF  0021               	movlb	1	; select bank1
  7964  01E0  00B2               	movwf	_calibdata^(0+128)
  7965  01E1  3000               	movlw	0
  7966  01E2  0020               	movlb	0	; select bank0
  7967  01E3  044C               	iorwf	??_Calibrate_download+1,w
  7968  01E4  29F4               	goto	L17
  7969  01E5                     l3713:	
  7970                           ;calibrate_mode.c: 76: case 1:
  7971                           
  7972                           ;calibrate_mode.c: 75: break;
  7973                           
  7974                           ;calibrate_mode.c: 74: spi2_Send_data = spi_Read_data;
  7975                           
  7976                           
  7977                           ;calibrate_mode.c: 77: calibdata.cargoLength = calibdata.cargoLength & (bufint | 0xFF00)
      +                          ;
  7978  01E5  3000               	movlw	0
  7979  01E6  0455               	iorwf	Calibrate_download@bufint,w
  7980  01E7  00CB               	movwf	??_Calibrate_download
  7981  01E8  30FF               	movlw	255
  7982  01E9  0456               	iorwf	Calibrate_download@bufint+1,w
  7983  01EA  00CC               	movwf	??_Calibrate_download+1
  7984  01EB  0021               	movlb	1	; select bank1
  7985  01EC  0832               	movf	_calibdata^(0+128),w
  7986  01ED  0020               	movlb	0	; select bank0
  7987  01EE  054B               	andwf	??_Calibrate_download,w
  7988  01EF  0021               	movlb	1	; select bank1
  7989  01F0  00B2               	movwf	_calibdata^(0+128)
  7990  01F1  0833               	movf	(_calibdata+1)^(0+128),w
  7991  01F2  0020               	movlb	0	; select bank0
  7992  01F3  054C               	andwf	??_Calibrate_download+1,w
  7993  01F4                     L17:	
  7994  01F4  0021               	movlb	1	; select bank1
  7995  01F5  00B3               	movwf	(_calibdata+1)^(0+128)
  7996  01F6  2A02               	goto	L19
  7997  01F7                     l3715:	
  7998                           ;calibrate_mode.c: 80: case 2:
  7999                           
  8000                           ;calibrate_mode.c: 79: break;
  8001                           
  8002                           ;calibrate_mode.c: 78: spi2_Send_data = spi_Read_data;
  8003                           
  8004                           
  8005                           ;calibrate_mode.c: 81: calibdata.command = spi_Read_data;
  8006  01F7  0857               	movf	Calibrate_download@spi_Read_data,w
  8007  01F8  00CB               	movwf	??_Calibrate_download
  8008  01F9  084B               	movf	??_Calibrate_download,w
  8009  01FA  0021               	movlb	1	; select bank1
  8010  01FB  00B4               	movwf	(_calibdata^(0+128)+2)
  8011  01FC  2A02               	goto	L19
  8012  01FD                     l3717:	
  8013                           ;calibrate_mode.c: 84: case 3:
  8014                           
  8015                           ;calibrate_mode.c: 83: break;
  8016                           
  8017                           ;calibrate_mode.c: 82: spi2_Send_data = spi_Read_data;
  8018                           
  8019                           
  8020                           ;calibrate_mode.c: 85: calibdata.index = spi_Read_data;
  8021  01FD  0857               	movf	Calibrate_download@spi_Read_data,w
  8022  01FE  00CB               	movwf	??_Calibrate_download
  8023  01FF  084B               	movf	??_Calibrate_download,w
  8024  0200  0021               	movlb	1	; select bank1
  8025  0201  00B5               	movwf	(_calibdata^(0+128)+3)
  8026  0202                     L19:	
  8027                           
  8028                           ;calibrate_mode.c: 86: spi2_Send_data = spi_Read_data;
  8029  0202  0020               	movlb	0	; select bank0
  8030  0203  0857               	movf	Calibrate_download@spi_Read_data,w
  8031  0204  2A8F               	goto	L25
  8032  0205                     l3719:	
  8033                           ;calibrate_mode.c: 88: case 4:
  8034                           
  8035                           ;calibrate_mode.c: 87: break;
  8036                           
  8037                           
  8038                           ;calibrate_mode.c: 89: linkInfo.My_address = spi_Read_data +1;
  8039  0205  0857               	movf	Calibrate_download@spi_Read_data,w
  8040  0206  3E01               	addlw	1
  8041  0207  00CB               	movwf	??_Calibrate_download
  8042  0208  084B               	movf	??_Calibrate_download,w
  8043  0209  0021               	movlb	1	; select bank1
  8044  020A  00BB               	movwf	_linkInfo^(0+128)
  8045                           
  8046                           ;calibrate_mode.c: 90: spi2_Send_data = linkInfo.My_address;
  8047  020B  083B               	movf	_linkInfo^(0+128),w
  8048  020C  0020               	movlb	0	; select bank0
  8049  020D  2A8F               	goto	L25
  8050  020E                     l3723:	
  8051                           ;calibrate_mode.c: 92: case 5:
  8052                           
  8053                           ;calibrate_mode.c: 91: break;
  8054                           
  8055                           
  8056                           ;calibrate_mode.c: 93: calibdata.WorkingCount++;
  8057  020E  3001               	movlw	1
  8058  020F  0021               	movlb	1	; select bank1
  8059  0210  07B6               	addwf	(_calibdata^(0+128)+4),f
  8060  0211  3000               	movlw	0
  8061  0212  3DB7               	addwfc	((_calibdata+1)^(0+128)+4),f
  8062  0213  3000               	movlw	0
  8063  0214  3DB8               	addwfc	((_calibdata+2)^(0+128)+4),f
  8064  0215  3000               	movlw	0
  8065  0216  3DB9               	addwfc	((_calibdata+3)^(0+128)+4),f
  8066                           
  8067                           ;calibrate_mode.c: 94: spi2_Send_data = (TransLong256To255(calibdata.WorkingCount) >> 24
      +                           & 0x000000ff);
  8068  0217  3004               	movlw	4
  8069  0218  3EB2               	addlw	(low (_calibdata| 0))& (0+255)
  8070  0219  0086               	movwf	6
  8071  021A  0187               	clrf	7
  8072  021B  3F40               	moviw [0]fsr1
  8073  021C  0020               	movlb	0	; select bank0
  8074  021D  00AF               	movwf	TransLong256To255@data
  8075  021E  3F41               	moviw [1]fsr1
  8076  021F  00B0               	movwf	TransLong256To255@data+1
  8077  0220  3F42               	moviw [2]fsr1
  8078  0221  00B1               	movwf	TransLong256To255@data+2
  8079  0222  3F43               	moviw [3]fsr1
  8080  0223  00B2               	movwf	TransLong256To255@data+3
  8081  0224  3182  22D8  3181   	fcall	_TransLong256To255
  8082  0227  0020               	movlb	0	; select bank0
  8083  0228  082F               	movf	?_TransLong256To255,w
  8084  0229  00CB               	movwf	??_Calibrate_download
  8085  022A  0830               	movf	?_TransLong256To255+1,w
  8086  022B  00CC               	movwf	??_Calibrate_download+1
  8087  022C  0831               	movf	?_TransLong256To255+2,w
  8088  022D  00CD               	movwf	??_Calibrate_download+2
  8089  022E  0832               	movf	?_TransLong256To255+3,w
  8090  022F  00CE               	movwf	??_Calibrate_download+3
  8091  0230  3018               	movlw	24
  8092  0231  00CF               	movwf	??_Calibrate_download+4
  8093  0232                     u2425:	
  8094  0232  37CE               	asrf	??_Calibrate_download+3,f
  8095  0233  0CCD               	rrf	??_Calibrate_download+2,f
  8096  0234  0CCC               	rrf	??_Calibrate_download+1,f
  8097  0235  0CCB               	rrf	??_Calibrate_download,f
  8098  0236  0BCF               	decfsz	??_Calibrate_download+4,f
  8099  0237  2A32               	goto	u2425
  8100  0238  2A7A               	goto	L27
  8101  0239                     l3727:	
  8102                           ;calibrate_mode.c: 96: case 6:
  8103                           
  8104                           ;calibrate_mode.c: 95: break;
  8105                           
  8106                           
  8107                           ;calibrate_mode.c: 97: spi2_Send_data = (TransLong256To255(calibdata.WorkingCount) >> 16
      +                           & 0x000000ff);
  8108  0239  3004               	movlw	4
  8109  023A  3EB2               	addlw	(low (_calibdata| 0))& (0+255)
  8110  023B  0086               	movwf	6
  8111  023C  0187               	clrf	7
  8112  023D  3F40               	moviw [0]fsr1
  8113  023E  00AF               	movwf	TransLong256To255@data
  8114  023F  3F41               	moviw [1]fsr1
  8115  0240  00B0               	movwf	TransLong256To255@data+1
  8116  0241  3F42               	moviw [2]fsr1
  8117  0242  00B1               	movwf	TransLong256To255@data+2
  8118  0243  3F43               	moviw [3]fsr1
  8119  0244  00B2               	movwf	TransLong256To255@data+3
  8120  0245  3182  22D8  3181   	fcall	_TransLong256To255
  8121  0248  0020               	movlb	0	; select bank0
  8122  0249  082F               	movf	?_TransLong256To255,w
  8123  024A  00CB               	movwf	??_Calibrate_download
  8124  024B  0830               	movf	?_TransLong256To255+1,w
  8125  024C  00CC               	movwf	??_Calibrate_download+1
  8126  024D  0831               	movf	?_TransLong256To255+2,w
  8127  024E  00CD               	movwf	??_Calibrate_download+2
  8128  024F  0832               	movf	?_TransLong256To255+3,w
  8129  0250  00CE               	movwf	??_Calibrate_download+3
  8130  0251  3010               	movlw	16
  8131  0252  00CF               	movwf	??_Calibrate_download+4
  8132  0253                     u2435:	
  8133  0253  37CE               	asrf	??_Calibrate_download+3,f
  8134  0254  0CCD               	rrf	??_Calibrate_download+2,f
  8135  0255  0CCC               	rrf	??_Calibrate_download+1,f
  8136  0256  0CCB               	rrf	??_Calibrate_download,f
  8137  0257  0BCF               	decfsz	??_Calibrate_download+4,f
  8138  0258  2A53               	goto	u2435
  8139  0259  2A7A               	goto	L27
  8140  025A                     l3729:	
  8141                           ;calibrate_mode.c: 99: case 7:
  8142                           
  8143                           ;calibrate_mode.c: 98: break;
  8144                           
  8145                           
  8146                           ;calibrate_mode.c: 100: spi2_Send_data = (TransLong256To255(calibdata.WorkingCount) >> 8
      +                           & 0x000000ff);
  8147  025A  3004               	movlw	4
  8148  025B  3EB2               	addlw	(low (_calibdata| 0))& (0+255)
  8149  025C  0086               	movwf	6
  8150  025D  0187               	clrf	7
  8151  025E  3F40               	moviw [0]fsr1
  8152  025F  00AF               	movwf	TransLong256To255@data
  8153  0260  3F41               	moviw [1]fsr1
  8154  0261  00B0               	movwf	TransLong256To255@data+1
  8155  0262  3F42               	moviw [2]fsr1
  8156  0263  00B1               	movwf	TransLong256To255@data+2
  8157  0264  3F43               	moviw [3]fsr1
  8158  0265  00B2               	movwf	TransLong256To255@data+3
  8159  0266  3182  22D8  3181   	fcall	_TransLong256To255
  8160  0269  0020               	movlb	0	; select bank0
  8161  026A  082F               	movf	?_TransLong256To255,w
  8162  026B  00CB               	movwf	??_Calibrate_download
  8163  026C  0830               	movf	?_TransLong256To255+1,w
  8164  026D  00CC               	movwf	??_Calibrate_download+1
  8165  026E  0831               	movf	?_TransLong256To255+2,w
  8166  026F  00CD               	movwf	??_Calibrate_download+2
  8167  0270  0832               	movf	?_TransLong256To255+3,w
  8168  0271  00CE               	movwf	??_Calibrate_download+3
  8169  0272  3008               	movlw	8
  8170  0273  00CF               	movwf	??_Calibrate_download+4
  8171  0274                     u2445:	
  8172  0274  37CE               	asrf	??_Calibrate_download+3,f
  8173  0275  0CCD               	rrf	??_Calibrate_download+2,f
  8174  0276  0CCC               	rrf	??_Calibrate_download+1,f
  8175  0277  0CCB               	rrf	??_Calibrate_download,f
  8176  0278  0BCF               	decfsz	??_Calibrate_download+4,f
  8177  0279  2A74               	goto	u2445
  8178  027A                     L27:	
  8179  027A  084B               	movf	??_Calibrate_download,w
  8180  027B  00D0               	movwf	??_Calibrate_download+5
  8181  027C  0850               	movf	??_Calibrate_download+5,w
  8182  027D  2A91               	goto	L24
  8183  027E                     l3731:	
  8184                           ;calibrate_mode.c: 102: case 8:
  8185                           
  8186                           ;calibrate_mode.c: 101: break;
  8187                           
  8188                           
  8189                           ;calibrate_mode.c: 103: spi2_Send_data = (TransLong256To255(calibdata.WorkingCount) & 0x
      +                          000000ff);
  8190  027E  3004               	movlw	4
  8191  027F  3EB2               	addlw	(low (_calibdata| 0))& (0+255)
  8192  0280  0086               	movwf	6
  8193  0281  0187               	clrf	7
  8194  0282  3F40               	moviw [0]fsr1
  8195  0283  00AF               	movwf	TransLong256To255@data
  8196  0284  3F41               	moviw [1]fsr1
  8197  0285  00B0               	movwf	TransLong256To255@data+1
  8198  0286  3F42               	moviw [2]fsr1
  8199  0287  00B1               	movwf	TransLong256To255@data+2
  8200  0288  3F43               	moviw [3]fsr1
  8201  0289  00B2               	movwf	TransLong256To255@data+3
  8202  028A  3182  22D8  3181   	fcall	_TransLong256To255
  8203  028D  0020               	movlb	0	; select bank0
  8204  028E  082F               	movf	?_TransLong256To255,w
  8205  028F                     L25:	
  8206  028F  00CB               	movwf	??_Calibrate_download
  8207  0290  084B               	movf	??_Calibrate_download,w
  8208  0291                     L24:	
  8209  0291  00EE               	movwf	_spi2_Send_data
  8210                           
  8211                           ;calibrate_mode.c: 104: break;
  8212  0292  2AB9               	goto	l453
  8213  0293                     l462:	
  8214                           ;calibrate_mode.c: 105: case 9:
  8215                           
  8216                           
  8217                           ;calibrate_mode.c: 107: if(isEndPointTrig == 1){
  8218  0293  1C7B               	btfss	_isEndPointTrig/(0+8),_isEndPointTrig& (0+7)
  8219  0294  2A9B               	goto	l463
  8220                           
  8221                           ;calibrate_mode.c: 108: LATAbits.LATA0 = 1;
  8222  0295  0022               	movlb	2	; select bank2
  8223  0296  140C               	bsf	12,0	;volatile
  8224                           
  8225                           ;calibrate_mode.c: 109: linkInfo.endpoint = 1;
  8226  0297  0021               	movlb	1	; select bank1
  8227  0298  01C0               	clrf	(_linkInfo^(0+128)+5)
  8228  0299  0AC0               	incf	(_linkInfo^(0+128)+5),f
  8229                           
  8230                           ;calibrate_mode.c: 110: }else{
  8231  029A  2A9F               	goto	l3737
  8232  029B                     l463:	
  8233                           
  8234                           ;calibrate_mode.c: 111: LATAbits.LATA0 = 0;
  8235  029B  0022               	movlb	2	; select bank2
  8236  029C  100C               	bcf	12,0	;volatile
  8237                           
  8238                           ;calibrate_mode.c: 112: linkInfo.endpoint = 0;
  8239  029D  0021               	movlb	1	; select bank1
  8240  029E  01C0               	clrf	(_linkInfo^(0+128)+5)
  8241  029F                     l3737:	
  8242                           
  8243                           ;calibrate_mode.c: 113: }
  8244                           ;calibrate_mode.c: 114: spi2_Send_data = linkInfo.My_address;
  8245  029F  083B               	movf	_linkInfo^(0+128),w
  8246  02A0  0020               	movlb	0	; select bank0
  8247  02A1  00CB               	movwf	??_Calibrate_download
  8248  02A2  084B               	movf	??_Calibrate_download,w
  8249  02A3  00EE               	movwf	_spi2_Send_data
  8250                           
  8251                           ;calibrate_mode.c: 115: isEndPointTrig = 0;
  8252  02A4  107B               	bcf	_isEndPointTrig/(0+8),_isEndPointTrig& (0+7)
  8253                           
  8254                           ;calibrate_mode.c: 116: resetCargo();
  8255  02A5  318D  258E  3181   	fcall	_resetCargo
  8256                           
  8257                           ;calibrate_mode.c: 118: }
  8258                           
  8259                           ;calibrate_mode.c: 117: break;
  8260  02A8  2AB9               	goto	l453
  8261  02A9                     l3745:	
  8262                           
  8263                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8264                           ; Switch size 1, requested type "space"
  8265                           ; Number of cases is 1, Range of values is 0 to 0
  8266                           ; switch strategies available:
  8267                           ; Name         Instructions Cycles
  8268                           ; simple_byte            4     3 (average)
  8269                           ; direct_byte            8     6 (fixed)
  8270                           ; jumptable            260     6 (fixed)
  8271                           ;	Chosen strategy is simple_byte
  8272  02A9  0020               	movlb	0	; select bank0
  8273  02AA  086A               	movf	_countabuf+1,w
  8274  02AB  3A00               	xorlw	0	; case 0
  8275  02AC  1903               	skipnz
  8276  02AD  2AAF               	goto	l4379
  8277  02AE  2AB9               	goto	l453
  8278  02AF                     l4379:	
  8279                           
  8280                           ; Switch size 1, requested type "space"
  8281                           ; Number of cases is 10, Range of values is 0 to 9
  8282                           ; switch strategies available:
  8283                           ; Name         Instructions Cycles
  8284                           ; direct_byte           26     6 (fixed)
  8285                           ; simple_byte           31    16 (average)
  8286                           ; jumptable            260     6 (fixed)
  8287                           ;	Chosen strategy is direct_byte
  8288  02AF  0869               	movf	_countabuf,w
  8289  02B0  0084               	movwf	4
  8290  02B1  300A               	movlw	10
  8291  02B2  0204               	subwf	4,w
  8292  02B3  1803               	skipnc
  8293  02B4  2AB9               	goto	l453
  8294  02B5  3188               	movlp	high S4381
  8295  02B6  3504               	lslf	4,w
  8296  02B7  3E20               	addlw	low S4381
  8297  02B8  0082               	movwf	2
  8298  02B9                     l453:	
  8299                           
  8300                           ;calibrate_mode.c: 119: if(isEndPointTrig){
  8301  02B9  1C7B               	btfss	_isEndPointTrig/(0+8),_isEndPointTrig& (0+7)
  8302  02BA  2ABE               	goto	l3749
  8303                           
  8304                           ;calibrate_mode.c: 120: spi2_Send_data = 0x01;
  8305  02BB  0020               	movlb	0	; select bank0
  8306  02BC  01EE               	clrf	_spi2_Send_data
  8307  02BD  0AEE               	incf	_spi2_Send_data,f
  8308  02BE                     l3749:	
  8309                           
  8310                           ;calibrate_mode.c: 121: }
  8311                           ;calibrate_mode.c: 125: countabuf++;
  8312  02BE  3001               	movlw	1
  8313  02BF  0020               	movlb	0	; select bank0
  8314  02C0  07E9               	addwf	_countabuf,f
  8315  02C1  3000               	movlw	0
  8316  02C2  3DEA               	addwfc	_countabuf+1,f
  8317                           
  8318                           ;calibrate_mode.c: 126: if(calibdata.cargoLength <= countabuf){
  8319  02C3  0021               	movlb	1	; select bank1
  8320  02C4  0833               	movf	(_calibdata+1)^(0+128),w
  8321  02C5  0020               	movlb	0	; select bank0
  8322  02C6  026A               	subwf	_countabuf+1,w
  8323  02C7  1D03               	skipz
  8324  02C8  2ACD               	goto	u2475
  8325  02C9  0021               	movlb	1	; select bank1
  8326  02CA  0832               	movf	_calibdata^(0+128),w
  8327  02CB  0020               	movlb	0	; select bank0
  8328  02CC  0269               	subwf	_countabuf,w
  8329  02CD                     u2475:	
  8330  02CD  1C03               	skipc
  8331  02CE  0008               	return
  8332                           
  8333                           ;calibrate_mode.c: 127: calibdata.cargoLength = 0xFFFF;
  8334  02CF  30FF               	movlw	255
  8335  02D0  0021               	movlb	1	; select bank1
  8336  02D1  00B2               	movwf	_calibdata^(0+128)
  8337  02D2  30FF               	movlw	255
  8338  02D3  00B3               	movwf	(_calibdata^(0+128)+1)
  8339                           
  8340                           ;calibrate_mode.c: 128: countabuf = 0;
  8341  02D4  0020               	movlb	0	; select bank0
  8342  02D5  01E9               	clrf	_countabuf
  8343  02D6  01EA               	clrf	_countabuf+1
  8344  02D7  0008               	return
  8345  02D8                     __end_of_Calibrate_download:	
  8346                           
  8347                           	psect	swtext4
  8348  0820                     __pswtext4:	
  8349  0820                     S4381:	
  8350  0820  3181  29D6         	ljmp	l3707
  8351  0822  3181  29E5         	ljmp	l3713
  8352  0824  3181  29F7         	ljmp	l3715
  8353  0826  3181  29FD         	ljmp	l3717
  8354  0828  3182  2A05         	ljmp	l3719
  8355  082A  3182  2A0E         	ljmp	l3723
  8356  082C  3182  2A39         	ljmp	l3727
  8357  082E  3182  2A5A         	ljmp	l3729
  8358  0830  3182  2A7E         	ljmp	l3731
  8359  0832  3182  2A93         	ljmp	l462
  8360                           
  8361                           	psect	text13
  8362  0D8E                     __ptext13:	
  8363 ;; *************** function _resetCargo *****************
  8364 ;; Defined at:
  8365 ;;		line 25 in file "struct.c"
  8366 ;; Parameters:    Size  Location     Type
  8367 ;;		None
  8368 ;; Auto vars:     Size  Location     Type
  8369 ;;		None
  8370 ;; Return value:  Size  Location     Type
  8371 ;;                  1    wreg      void 
  8372 ;; Registers used:
  8373 ;;		wreg, status,2
  8374 ;; Tracked objects:
  8375 ;;		On entry : 0/0
  8376 ;;		On exit  : 0/0
  8377 ;;		Unchanged: 0/0
  8378 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8379 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8380 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8381 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8382 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8383 ;;Total ram usage:        0 bytes
  8384 ;; Hardware stack levels used:    1
  8385 ;; Hardware stack levels required when called:    3
  8386 ;; This function calls:
  8387 ;;		Nothing
  8388 ;; This function is called by:
  8389 ;;		_Calibrate_download
  8390 ;; This function uses a non-reentrant model
  8391 ;;
  8392                           
  8393                           
  8394                           ;psect for function _resetCargo
  8395  0D8E                     _resetCargo:	
  8396                           
  8397                           ;struct.c: 26: cargoData.WorkingCount = 0;
  8398                           
  8399                           ;incstack = 0
  8400                           ; Regs used in _resetCargo: [wreg+status,2]
  8401  0D8E  3000               	movlw	0
  8402  0D8F  0020               	movlb	0	; select bank0
  8403  0D90  00E8               	movwf	_cargoData+15
  8404  0D91  3000               	movlw	0
  8405  0D92  00E7               	movwf	_cargoData+14
  8406  0D93  3000               	movlw	0
  8407  0D94  00E6               	movwf	_cargoData+13
  8408  0D95  3000               	movlw	0
  8409  0D96  00E5               	movwf	_cargoData+12
  8410                           
  8411                           ;struct.c: 27: cargoData.address = 0;
  8412  0D97  01DD               	clrf	_cargoData+4
  8413                           
  8414                           ;struct.c: 28: cargoData.cargoLength = 0xFFFF;
  8415  0D98  30FF               	movlw	255
  8416  0D99  00D9               	movwf	_cargoData
  8417  0D9A  30FF               	movlw	255
  8418  0D9B  00DA               	movwf	_cargoData+1
  8419                           
  8420                           ;struct.c: 29: cargoData.clutchMode = 0;
  8421  0D9C  01E4               	clrf	_cargoData+11
  8422                           
  8423                           ;struct.c: 30: cargoData.command = 0;
  8424  0D9D  01DB               	clrf	_cargoData+2
  8425                           
  8426                           ;struct.c: 31: cargoData.index = 0;
  8427  0D9E  01DC               	clrf	_cargoData+3
  8428                           
  8429                           ;struct.c: 32: cargoData.linkAngleTo = 360;
  8430  0D9F  3068               	movlw	104
  8431  0DA0  00DE               	movwf	_cargoData+5
  8432  0DA1  3001               	movlw	1
  8433  0DA2  00DF               	movwf	_cargoData+6
  8434                           
  8435                           ;struct.c: 33: cargoData.passedTime = 0;
  8436  0DA3  01E2               	clrf	_cargoData+9
  8437  0DA4  01E3               	clrf	_cargoData+10
  8438  0DA5  0008               	return
  8439  0DA6                     __end_of_resetCargo:	
  8440                           
  8441                           	psect	text14
  8442  0F19                     __ptext14:	
  8443 ;; *************** function _isEndpoint *****************
  8444 ;; Defined at:
  8445 ;;		line 31 in file "D:/programdata/16F18346_Link_IC.X/calibrate_mode.c"
  8446 ;; Parameters:    Size  Location     Type
  8447 ;;		None
  8448 ;; Auto vars:     Size  Location     Type
  8449 ;;  spi2data        1    6[BANK0 ] unsigned char 
  8450 ;; Return value:  Size  Location     Type
  8451 ;;		None               void
  8452 ;; Registers used:
  8453 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8454 ;; Tracked objects:
  8455 ;;		On entry : 0/0
  8456 ;;		On exit  : 0/0
  8457 ;;		Unchanged: 0/0
  8458 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8459 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8460 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8461 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8462 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8463 ;;Total ram usage:        6 bytes
  8464 ;; Hardware stack levels used:    1
  8465 ;; Hardware stack levels required when called:    4
  8466 ;; This function calls:
  8467 ;;		_setSPI1sendDataManual
  8468 ;; This function is called by:
  8469 ;;		_Calibrate_download
  8470 ;; This function uses a non-reentrant model
  8471 ;;
  8472                           
  8473                           
  8474                           ;psect for function _isEndpoint
  8475  0F19                     _isEndpoint:	
  8476                           
  8477                           ;calibrate_mode.c: 32: unsigned char spi2data = 0;
  8478                           
  8479                           ;incstack = 0
  8480                           ; Regs used in _isEndpoint: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8481  0F19  0020               	movlb	0	; select bank0
  8482  0F1A  01A6               	clrf	isEndpoint@spi2data
  8483                           
  8484                           ;calibrate_mode.c: 33: if(count2 > 1){
  8485  0F1B  3000               	movlw	0
  8486  0F1C  026C               	subwf	_count2+1,w
  8487  0F1D  3002               	movlw	2
  8488  0F1E  1903               	skipnz
  8489  0F1F  026B               	subwf	_count2,w
  8490  0F20  1C03               	skipc
  8491  0F21  2F36               	goto	l3557
  8492                           
  8493                           ;calibrate_mode.c: 34: spi2data = spi2_buffer_data[count2 -1];
  8494  0F22  086B               	movf	_count2,w
  8495  0F23  3EFF               	addlw	255
  8496  0F24  00A1               	movwf	??_isEndpoint
  8497  0F25  30FF               	movlw	255
  8498  0F26  3D6C               	addwfc	_count2+1,w
  8499  0F27  00A2               	movwf	??_isEndpoint+1
  8500  0F28  30F0               	movlw	240
  8501  0F29  00A3               	movwf	??_isEndpoint+2
  8502  0F2A  3025               	movlw	37
  8503  0F2B  00A4               	movwf	??_isEndpoint+3
  8504  0F2C  0821               	movf	??_isEndpoint,w
  8505  0F2D  0723               	addwf	??_isEndpoint+2,w
  8506  0F2E  0086               	movwf	6
  8507  0F2F  0822               	movf	??_isEndpoint+1,w
  8508  0F30  3D24               	addwfc	??_isEndpoint+3,w
  8509  0F31  0087               	movwf	7
  8510  0F32  0801               	movf	1,w
  8511  0F33  00A5               	movwf	??_isEndpoint+4
  8512  0F34  0825               	movf	??_isEndpoint+4,w
  8513  0F35  2F43               	goto	L28
  8514  0F36                     l3557:	
  8515                           ;calibrate_mode.c: 35: }else{
  8516                           
  8517                           
  8518                           ;calibrate_mode.c: 36: spi2data = spi2_buffer_data[count2];
  8519  0F36  30F0               	movlw	240
  8520  0F37  00A1               	movwf	??_isEndpoint
  8521  0F38  3025               	movlw	37
  8522  0F39  00A2               	movwf	??_isEndpoint+1
  8523  0F3A  086B               	movf	_count2,w
  8524  0F3B  0721               	addwf	??_isEndpoint,w
  8525  0F3C  0086               	movwf	6
  8526  0F3D  086C               	movf	_count2+1,w
  8527  0F3E  3D22               	addwfc	??_isEndpoint+1,w
  8528  0F3F  0087               	movwf	7
  8529  0F40  0801               	movf	1,w
  8530  0F41  00A3               	movwf	??_isEndpoint+2
  8531  0F42  0823               	movf	??_isEndpoint+2,w
  8532  0F43                     L28:	
  8533  0F43  00A6               	movwf	isEndpoint@spi2data
  8534                           
  8535                           ;calibrate_mode.c: 37: }
  8536                           ;calibrate_mode.c: 38: if(spi2data < 255){
  8537  0F44  0A26               	incf	isEndpoint@spi2data,w
  8538  0F45  1903               	btfsc	3,2
  8539  0F46  2F49               	goto	l3563
  8540                           
  8541                           ;calibrate_mode.c: 39: isEndPointTrig = 0;
  8542  0F47  107B               	bcf	_isEndPointTrig/(0+8),_isEndPointTrig& (0+7)
  8543                           
  8544                           ;calibrate_mode.c: 40: }else{
  8545  0F48  0008               	return
  8546  0F49                     l3563:	
  8547                           
  8548                           ;calibrate_mode.c: 41: setSPI1sendDataManual(0x01);
  8549  0F49  3001               	movlw	1
  8550  0F4A  318D  2505         	fcall	_setSPI1sendDataManual
  8551  0F4C  0008               	return
  8552  0F4D                     __end_of_isEndpoint:	
  8553                           ;calibrate_mode.c: 42: }
  8554                           ;calibrate_mode.c: 44: return isEndPointTrig;
  8555                           ;	Return value of _isEndpoint is never used
  8556                           
  8557                           
  8558                           	psect	text15
  8559  0D05                     __ptext15:	
  8560 ;; *************** function _setSPI1sendDataManual *****************
  8561 ;; Defined at:
  8562 ;;		line 102 in file "D:/programdata/16F18346_Link_IC.X/spiControl.c"
  8563 ;; Parameters:    Size  Location     Type
  8564 ;;  data            1    wreg     unsigned char 
  8565 ;; Auto vars:     Size  Location     Type
  8566 ;;  data            1    0[BANK0 ] unsigned char 
  8567 ;; Return value:  Size  Location     Type
  8568 ;;                  1    wreg      void 
  8569 ;; Registers used:
  8570 ;;		wreg
  8571 ;; Tracked objects:
  8572 ;;		On entry : 0/0
  8573 ;;		On exit  : 0/0
  8574 ;;		Unchanged: 0/0
  8575 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8576 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8577 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8578 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8579 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8580 ;;Total ram usage:        1 bytes
  8581 ;; Hardware stack levels used:    1
  8582 ;; Hardware stack levels required when called:    3
  8583 ;; This function calls:
  8584 ;;		Nothing
  8585 ;; This function is called by:
  8586 ;;		_isEndpoint
  8587 ;; This function uses a non-reentrant model
  8588 ;;
  8589                           
  8590                           
  8591                           ;psect for function _setSPI1sendDataManual
  8592  0D05                     _setSPI1sendDataManual:	
  8593                           
  8594                           ;incstack = 0
  8595                           ; Regs used in _setSPI1sendDataManual: [wreg]
  8596                           ;setSPI1sendDataManual@data stored from wreg
  8597  0D05  0020               	movlb	0	; select bank0
  8598  0D06  00A0               	movwf	setSPI1sendDataManual@data
  8599                           
  8600                           ;spiControl.c: 103: SSP1BUF = data;
  8601  0D07  0820               	movf	setSPI1sendDataManual@data,w
  8602  0D08  0024               	movlb	4	; select bank4
  8603  0D09  0091               	movwf	17	;volatile
  8604  0D0A  0008               	return
  8605  0D0B                     __end_of_setSPI1sendDataManual:	
  8606                           
  8607                           	psect	text16
  8608  02D8                     __ptext16:	
  8609 ;; *************** function _TransLong256To255 *****************
  8610 ;; Defined at:
  8611 ;;		line 20 in file "D:/programdata/16F18346_Link_IC.X/util.c"
  8612 ;; Parameters:    Size  Location     Type
  8613 ;;  data            4   15[BANK0 ] long 
  8614 ;; Auto vars:     Size  Location     Type
  8615 ;;  j               2   27[BANK0 ] int 
  8616 ;;  pow             4   33[BANK0 ] long 
  8617 ;;  buf             4   39[BANK0 ] long 
  8618 ;;  mod             4   29[BANK0 ] long 
  8619 ;;  TransData       4   23[BANK0 ] long 
  8620 ;;  i               2   37[BANK0 ] int 
  8621 ;; Return value:  Size  Location     Type
  8622 ;;                  4   15[BANK0 ] long 
  8623 ;; Registers used:
  8624 ;;		wreg, status,2, status,0, pclath, cstack
  8625 ;; Tracked objects:
  8626 ;;		On entry : 0/0
  8627 ;;		On exit  : 0/0
  8628 ;;		Unchanged: 0/0
  8629 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8630 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8631 ;;      Locals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8632 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8633 ;;      Totals:         0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8634 ;;Total ram usage:       28 bytes
  8635 ;; Hardware stack levels used:    1
  8636 ;; Hardware stack levels required when called:    4
  8637 ;; This function calls:
  8638 ;;		___aldiv
  8639 ;;		___almod
  8640 ;;		___lmul
  8641 ;; This function is called by:
  8642 ;;		_Calibrate_download
  8643 ;;		_readCargo
  8644 ;; This function uses a non-reentrant model
  8645 ;;
  8646                           
  8647                           
  8648                           ;psect for function _TransLong256To255
  8649  02D8                     _TransLong256To255:	
  8650                           
  8651                           ;util.c: 22: long buf = 0;
  8652                           
  8653                           ;incstack = 0
  8654                           ; Regs used in _TransLong256To255: [wreg+status,2+status,0+pclath+cstack]
  8655  02D8  3000               	movlw	0
  8656  02D9  0020               	movlb	0	; select bank0
  8657  02DA  00CA               	movwf	TransLong256To255@buf+3
  8658  02DB  3000               	movlw	0
  8659  02DC  00C9               	movwf	TransLong256To255@buf+2
  8660  02DD  3000               	movlw	0
  8661  02DE  00C8               	movwf	TransLong256To255@buf+1
  8662  02DF  3000               	movlw	0
  8663  02E0  00C7               	movwf	TransLong256To255@buf
  8664                           
  8665                           ;util.c: 23: buf = data;
  8666  02E1  0832               	movf	TransLong256To255@data+3,w
  8667  02E2  00CA               	movwf	TransLong256To255@buf+3
  8668  02E3  0831               	movf	TransLong256To255@data+2,w
  8669  02E4  00C9               	movwf	TransLong256To255@buf+2
  8670  02E5  0830               	movf	TransLong256To255@data+1,w
  8671  02E6  00C8               	movwf	TransLong256To255@buf+1
  8672  02E7  082F               	movf	TransLong256To255@data,w
  8673  02E8  00C7               	movwf	TransLong256To255@buf
  8674                           
  8675                           ;util.c: 24: long TransData = 0;
  8676  02E9  3000               	movlw	0
  8677  02EA  00BA               	movwf	TransLong256To255@TransData+3
  8678  02EB  3000               	movlw	0
  8679  02EC  00B9               	movwf	TransLong256To255@TransData+2
  8680  02ED  3000               	movlw	0
  8681  02EE  00B8               	movwf	TransLong256To255@TransData+1
  8682  02EF  3000               	movlw	0
  8683  02F0  00B7               	movwf	TransLong256To255@TransData
  8684                           
  8685                           ;util.c: 25: long mod = 0;
  8686  02F1  3000               	movlw	0
  8687  02F2  00C0               	movwf	TransLong256To255@mod+3
  8688  02F3  3000               	movlw	0
  8689  02F4  00BF               	movwf	TransLong256To255@mod+2
  8690  02F5  3000               	movlw	0
  8691  02F6  00BE               	movwf	TransLong256To255@mod+1
  8692  02F7  3000               	movlw	0
  8693  02F8  00BD               	movwf	TransLong256To255@mod
  8694                           
  8695                           ;util.c: 26: int i = 0;
  8696  02F9  01C5               	clrf	TransLong256To255@i
  8697  02FA  01C6               	clrf	TransLong256To255@i+1
  8698  02FB                     l3517:	
  8699                           ;util.c: 27: while(1){
  8700                           
  8701                           
  8702                           ;util.c: 28: if(buf <= 255){
  8703  02FB  1BCA               	btfsc	TransLong256To255@buf+3,7
  8704  02FC  2B07               	goto	l3519
  8705  02FD  084A               	movf	TransLong256To255@buf+3,w
  8706  02FE  1D03               	btfss	3,2
  8707  02FF  2B0F               	goto	l3521
  8708  0300  0849               	movf	TransLong256To255@buf+2,w
  8709  0301  1D03               	btfss	3,2
  8710  0302  2B0F               	goto	l3521
  8711  0303  3001               	movlw	1
  8712  0304  0248               	subwf	TransLong256To255@buf+1,w
  8713  0305  1803               	btfsc	3,0
  8714  0306  2B0F               	goto	l3521
  8715  0307                     l3519:	
  8716                           
  8717                           ;util.c: 29: mod = buf;
  8718  0307  084A               	movf	TransLong256To255@buf+3,w
  8719  0308  00C0               	movwf	TransLong256To255@mod+3
  8720  0309  0849               	movf	TransLong256To255@buf+2,w
  8721  030A  00BF               	movwf	TransLong256To255@mod+2
  8722  030B  0848               	movf	TransLong256To255@buf+1,w
  8723  030C  00BE               	movwf	TransLong256To255@mod+1
  8724  030D  0847               	movf	TransLong256To255@buf,w
  8725  030E  2B2A               	goto	L29
  8726  030F                     l3521:	
  8727                           ;util.c: 30: }else{
  8728                           
  8729                           
  8730                           ;util.c: 31: mod = buf % 255;
  8731  030F  3000               	movlw	0
  8732  0310  00A3               	movwf	___almod@divisor+3
  8733  0311  3000               	movlw	0
  8734  0312  00A2               	movwf	___almod@divisor+2
  8735  0313  3000               	movlw	0
  8736  0314  00A1               	movwf	___almod@divisor+1
  8737  0315  30FF               	movlw	255
  8738  0316  00A0               	movwf	___almod@divisor
  8739  0317  084A               	movf	TransLong256To255@buf+3,w
  8740  0318  00A7               	movwf	___almod@dividend+3
  8741  0319  0849               	movf	TransLong256To255@buf+2,w
  8742  031A  00A6               	movwf	___almod@dividend+2
  8743  031B  0848               	movf	TransLong256To255@buf+1,w
  8744  031C  00A5               	movwf	___almod@dividend+1
  8745  031D  0847               	movf	TransLong256To255@buf,w
  8746  031E  00A4               	movwf	___almod@dividend
  8747  031F  3185  2503  3182   	fcall	___almod
  8748  0322  0020               	movlb	0	; select bank0
  8749  0323  0823               	movf	?___almod+3,w
  8750  0324  00C0               	movwf	TransLong256To255@mod+3
  8751  0325  0822               	movf	?___almod+2,w
  8752  0326  00BF               	movwf	TransLong256To255@mod+2
  8753  0327  0821               	movf	?___almod+1,w
  8754  0328  00BE               	movwf	TransLong256To255@mod+1
  8755  0329  0820               	movf	?___almod,w
  8756  032A                     L29:	
  8757  032A  00BD               	movwf	TransLong256To255@mod
  8758                           
  8759                           ;util.c: 32: }
  8760                           ;util.c: 33: buf = (int)(buf / 255);
  8761  032B  3000               	movlw	0
  8762  032C  00A3               	movwf	___aldiv@divisor+3
  8763  032D  3000               	movlw	0
  8764  032E  00A2               	movwf	___aldiv@divisor+2
  8765  032F  3000               	movlw	0
  8766  0330  00A1               	movwf	___aldiv@divisor+1
  8767  0331  30FF               	movlw	255
  8768  0332  00A0               	movwf	___aldiv@divisor
  8769  0333  084A               	movf	TransLong256To255@buf+3,w
  8770  0334  00A7               	movwf	___aldiv@dividend+3
  8771  0335  0849               	movf	TransLong256To255@buf+2,w
  8772  0336  00A6               	movwf	___aldiv@dividend+2
  8773  0337  0848               	movf	TransLong256To255@buf+1,w
  8774  0338  00A5               	movwf	___aldiv@dividend+1
  8775  0339  0847               	movf	TransLong256To255@buf,w
  8776  033A  00A4               	movwf	___aldiv@dividend
  8777  033B  3184  2481  3182   	fcall	___aldiv
  8778  033E  0020               	movlb	0	; select bank0
  8779  033F  0820               	movf	?___aldiv,w
  8780  0340  00C7               	movwf	TransLong256To255@buf
  8781  0341  0821               	movf	?___aldiv+1,w
  8782  0342  00C8               	movwf	TransLong256To255@buf+1
  8783  0343  0D89               	rlf	9,f
  8784  0344  3B89               	subwfb	9,f
  8785  0345  0989               	comf	9,f
  8786  0346  00C9               	movwf	TransLong256To255@buf+2
  8787  0347  00CA               	movwf	TransLong256To255@buf+3
  8788                           
  8789                           ;util.c: 34: long pow = 1;
  8790  0348  3000               	movlw	0
  8791  0349  00C4               	movwf	TransLong256To255@pow+3
  8792  034A  3000               	movlw	0
  8793  034B  00C3               	movwf	TransLong256To255@pow+2
  8794  034C  3000               	movlw	0
  8795  034D  00C2               	movwf	TransLong256To255@pow+1
  8796  034E  3001               	movlw	1
  8797  034F  00C1               	movwf	TransLong256To255@pow
  8798                           
  8799                           ;util.c: 35: if(i > 0){
  8800  0350  0846               	movf	TransLong256To255@i+1,w
  8801  0351  3A80               	xorlw	128
  8802  0352  00B3               	movwf	??_TransLong256To255
  8803  0353  3080               	movlw	128
  8804  0354  0233               	subwf	??_TransLong256To255,w
  8805  0355  1D03               	skipz
  8806  0356  2B59               	goto	u2285
  8807  0357  3001               	movlw	1
  8808  0358  0245               	subwf	TransLong256To255@i,w
  8809  0359                     u2285:	
  8810  0359  1C03               	skipc
  8811  035A  2B87               	goto	l3535
  8812                           
  8813                           ;util.c: 36: for(int j = 0; j < i; j++){
  8814  035B  0020               	movlb	0	; select bank0
  8815  035C  01BB               	clrf	TransLong256To255@j
  8816  035D  01BC               	clrf	TransLong256To255@j+1
  8817  035E                     l3533:	
  8818  035E  083C               	movf	TransLong256To255@j+1,w
  8819  035F  3A80               	xorlw	128
  8820  0360  00B3               	movwf	??_TransLong256To255
  8821  0361  0846               	movf	TransLong256To255@i+1,w
  8822  0362  3A80               	xorlw	128
  8823  0363  0233               	subwf	??_TransLong256To255,w
  8824  0364  1D03               	skipz
  8825  0365  2B68               	goto	u2305
  8826  0366  0845               	movf	TransLong256To255@i,w
  8827  0367  023B               	subwf	TransLong256To255@j,w
  8828  0368                     u2305:	
  8829  0368  1803               	btfsc	3,0
  8830  0369  2B87               	goto	l3535
  8831                           
  8832                           ;util.c: 37: pow = pow * 256;
  8833  036A  0020               	movlb	0	; select bank0
  8834  036B  0841               	movf	TransLong256To255@pow,w
  8835  036C  00B3               	movwf	??_TransLong256To255
  8836  036D  0842               	movf	TransLong256To255@pow+1,w
  8837  036E  00B4               	movwf	??_TransLong256To255+1
  8838  036F  0843               	movf	TransLong256To255@pow+2,w
  8839  0370  00B5               	movwf	??_TransLong256To255+2
  8840  0371  0844               	movf	TransLong256To255@pow+3,w
  8841  0372  00B6               	movwf	??_TransLong256To255+3
  8842  0373  3008               	movlw	8
  8843  0374                     u2295:	
  8844  0374  35B3               	lslf	??_TransLong256To255,f
  8845  0375  0DB4               	rlf	??_TransLong256To255+1,f
  8846  0376  0DB5               	rlf	??_TransLong256To255+2,f
  8847  0377  0DB6               	rlf	??_TransLong256To255+3,f
  8848  0378  0B89               	decfsz	9,f
  8849  0379  2B74               	goto	u2295
  8850  037A  0836               	movf	??_TransLong256To255+3,w
  8851  037B  00C4               	movwf	TransLong256To255@pow+3
  8852  037C  0835               	movf	??_TransLong256To255+2,w
  8853  037D  00C3               	movwf	TransLong256To255@pow+2
  8854  037E  0834               	movf	??_TransLong256To255+1,w
  8855  037F  00C2               	movwf	TransLong256To255@pow+1
  8856  0380  0833               	movf	??_TransLong256To255,w
  8857  0381  00C1               	movwf	TransLong256To255@pow
  8858  0382  3001               	movlw	1
  8859  0383  07BB               	addwf	TransLong256To255@j,f
  8860  0384  3000               	movlw	0
  8861  0385  3DBC               	addwfc	TransLong256To255@j+1,f
  8862  0386  2B5E               	goto	l3533
  8863  0387                     l3535:	
  8864                           
  8865                           ;util.c: 38: }
  8866                           ;util.c: 39: }
  8867                           ;util.c: 40: TransData += mod * pow;
  8868  0387  0020               	movlb	0	; select bank0
  8869  0388  0840               	movf	TransLong256To255@mod+3,w
  8870  0389  00A3               	movwf	___lmul@multiplier+3
  8871  038A  083F               	movf	TransLong256To255@mod+2,w
  8872  038B  00A2               	movwf	___lmul@multiplier+2
  8873  038C  083E               	movf	TransLong256To255@mod+1,w
  8874  038D  00A1               	movwf	___lmul@multiplier+1
  8875  038E  083D               	movf	TransLong256To255@mod,w
  8876  038F  00A0               	movwf	___lmul@multiplier
  8877  0390  0844               	movf	TransLong256To255@pow+3,w
  8878  0391  00A7               	movwf	___lmul@multiplicand+3
  8879  0392  0843               	movf	TransLong256To255@pow+2,w
  8880  0393  00A6               	movwf	___lmul@multiplicand+2
  8881  0394  0842               	movf	TransLong256To255@pow+1,w
  8882  0395  00A5               	movwf	___lmul@multiplicand+1
  8883  0396  0841               	movf	TransLong256To255@pow,w
  8884  0397  00A4               	movwf	___lmul@multiplicand
  8885  0398  318E  26E9  3182   	fcall	___lmul
  8886  039B  0020               	movlb	0	; select bank0
  8887  039C  0820               	movf	?___lmul,w
  8888  039D  07B7               	addwf	TransLong256To255@TransData,f
  8889  039E  0821               	movf	?___lmul+1,w
  8890  039F  3DB8               	addwfc	TransLong256To255@TransData+1,f
  8891  03A0  0822               	movf	?___lmul+2,w
  8892  03A1  3DB9               	addwfc	TransLong256To255@TransData+2,f
  8893  03A2  0823               	movf	?___lmul+3,w
  8894  03A3  3DBA               	addwfc	TransLong256To255@TransData+3,f
  8895                           
  8896                           ;util.c: 41: if(buf <= 255){
  8897  03A4  1BCA               	btfsc	TransLong256To255@buf+3,7
  8898  03A5  2BB5               	goto	l3543
  8899  03A6  084A               	movf	TransLong256To255@buf+3,w
  8900  03A7  1D03               	btfss	3,2
  8901  03A8  2BB0               	goto	l3541
  8902  03A9  0849               	movf	TransLong256To255@buf+2,w
  8903  03AA  1D03               	btfss	3,2
  8904  03AB  2BB0               	goto	l3541
  8905  03AC  3001               	movlw	1
  8906  03AD  0248               	subwf	TransLong256To255@buf+1,w
  8907  03AE  1C03               	btfss	3,0
  8908  03AF  2BB5               	goto	l3543
  8909  03B0                     l3541:	
  8910                           ;util.c: 42: break;
  8911                           
  8912                           
  8913                           ;util.c: 43: }
  8914                           ;util.c: 44: i++;
  8915  03B0  3001               	movlw	1
  8916  03B1  07C5               	addwf	TransLong256To255@i,f
  8917  03B2  3000               	movlw	0
  8918  03B3  3DC6               	addwfc	TransLong256To255@i+1,f
  8919  03B4  2AFB               	goto	l3517
  8920  03B5                     l3543:	
  8921                           
  8922                           ;util.c: 45: }
  8923                           ;util.c: 46: return TransData;
  8924  03B5  083A               	movf	TransLong256To255@TransData+3,w
  8925  03B6  00B2               	movwf	?_TransLong256To255+3
  8926  03B7  0839               	movf	TransLong256To255@TransData+2,w
  8927  03B8  00B1               	movwf	?_TransLong256To255+2
  8928  03B9  0838               	movf	TransLong256To255@TransData+1,w
  8929  03BA  00B0               	movwf	?_TransLong256To255+1
  8930  03BB  0837               	movf	TransLong256To255@TransData,w
  8931  03BC  00AF               	movwf	?_TransLong256To255
  8932  03BD  0008               	return
  8933  03BE                     __end_of_TransLong256To255:	
  8934                           
  8935                           	psect	text17
  8936  0EE9                     __ptext17:	
  8937 ;; *************** function ___lmul *****************
  8938 ;; Defined at:
  8939 ;;		line 15 in file "E:\microchip\xc8\v1.45\sources\common\Umul32.c"
  8940 ;; Parameters:    Size  Location     Type
  8941 ;;  multiplier      4    0[BANK0 ] unsigned long 
  8942 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  8943 ;; Auto vars:     Size  Location     Type
  8944 ;;  product         4    8[BANK0 ] unsigned long 
  8945 ;; Return value:  Size  Location     Type
  8946 ;;                  4    0[BANK0 ] unsigned long 
  8947 ;; Registers used:
  8948 ;;		wreg, status,2, status,0
  8949 ;; Tracked objects:
  8950 ;;		On entry : 0/0
  8951 ;;		On exit  : 0/0
  8952 ;;		Unchanged: 0/0
  8953 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8954 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8955 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8956 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8957 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8958 ;;Total ram usage:       12 bytes
  8959 ;; Hardware stack levels used:    1
  8960 ;; Hardware stack levels required when called:    3
  8961 ;; This function calls:
  8962 ;;		Nothing
  8963 ;; This function is called by:
  8964 ;;		_TransLong256To255
  8965 ;; This function uses a non-reentrant model
  8966 ;;
  8967                           
  8968                           
  8969                           ;psect for function ___lmul
  8970  0EE9                     ___lmul:	
  8971                           
  8972                           ;incstack = 0
  8973                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  8974  0EE9  3000               	movlw	0
  8975  0EEA  0020               	movlb	0	; select bank0
  8976  0EEB  00AB               	movwf	___lmul@product+3
  8977  0EEC  3000               	movlw	0
  8978  0EED  00AA               	movwf	___lmul@product+2
  8979  0EEE  3000               	movlw	0
  8980  0EEF  00A9               	movwf	___lmul@product+1
  8981  0EF0  3000               	movlw	0
  8982  0EF1  00A8               	movwf	___lmul@product
  8983  0EF2                     l3409:	
  8984  0EF2  1C20               	btfss	___lmul@multiplier,0
  8985  0EF3  2EFC               	goto	l3413
  8986  0EF4  0824               	movf	___lmul@multiplicand,w
  8987  0EF5  07A8               	addwf	___lmul@product,f
  8988  0EF6  0825               	movf	___lmul@multiplicand+1,w
  8989  0EF7  3DA9               	addwfc	___lmul@product+1,f
  8990  0EF8  0826               	movf	___lmul@multiplicand+2,w
  8991  0EF9  3DAA               	addwfc	___lmul@product+2,f
  8992  0EFA  0827               	movf	___lmul@multiplicand+3,w
  8993  0EFB  3DAB               	addwfc	___lmul@product+3,f
  8994  0EFC                     l3413:	
  8995  0EFC  3001               	movlw	1
  8996  0EFD                     u2045:	
  8997  0EFD  35A4               	lslf	___lmul@multiplicand,f
  8998  0EFE  0DA5               	rlf	___lmul@multiplicand+1,f
  8999  0EFF  0DA6               	rlf	___lmul@multiplicand+2,f
  9000  0F00  0DA7               	rlf	___lmul@multiplicand+3,f
  9001  0F01  0B89               	decfsz	9,f
  9002  0F02  2EFD               	goto	u2045
  9003  0F03  3001               	movlw	1
  9004  0F04                     u2055:	
  9005  0F04  36A3               	lsrf	___lmul@multiplier+3,f
  9006  0F05  0CA2               	rrf	___lmul@multiplier+2,f
  9007  0F06  0CA1               	rrf	___lmul@multiplier+1,f
  9008  0F07  0CA0               	rrf	___lmul@multiplier,f
  9009  0F08  0B89               	decfsz	9,f
  9010  0F09  2F04               	goto	u2055
  9011  0F0A  0823               	movf	___lmul@multiplier+3,w
  9012  0F0B  0422               	iorwf	___lmul@multiplier+2,w
  9013  0F0C  0421               	iorwf	___lmul@multiplier+1,w
  9014  0F0D  0420               	iorwf	___lmul@multiplier,w
  9015  0F0E  1D03               	skipz
  9016  0F0F  2EF2               	goto	l3409
  9017  0F10  082B               	movf	___lmul@product+3,w
  9018  0F11  00A3               	movwf	?___lmul+3
  9019  0F12  082A               	movf	___lmul@product+2,w
  9020  0F13  00A2               	movwf	?___lmul+2
  9021  0F14  0829               	movf	___lmul@product+1,w
  9022  0F15  00A1               	movwf	?___lmul+1
  9023  0F16  0828               	movf	___lmul@product,w
  9024  0F17  00A0               	movwf	?___lmul
  9025  0F18  0008               	return
  9026  0F19                     __end_of___lmul:	
  9027                           
  9028                           	psect	text18
  9029  0503                     __ptext18:	
  9030 ;; *************** function ___almod *****************
  9031 ;; Defined at:
  9032 ;;		line 5 in file "E:\microchip\xc8\v1.45\sources\common\almod.c"
  9033 ;; Parameters:    Size  Location     Type
  9034 ;;  divisor         4    0[BANK0 ] long 
  9035 ;;  dividend        4    4[BANK0 ] long 
  9036 ;; Auto vars:     Size  Location     Type
  9037 ;;  sign            1   10[BANK0 ] unsigned char 
  9038 ;;  counter         1    9[BANK0 ] unsigned char 
  9039 ;; Return value:  Size  Location     Type
  9040 ;;                  4    0[BANK0 ] long 
  9041 ;; Registers used:
  9042 ;;		wreg, status,2, status,0
  9043 ;; Tracked objects:
  9044 ;;		On entry : 0/0
  9045 ;;		On exit  : 0/0
  9046 ;;		Unchanged: 0/0
  9047 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9048 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9049 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9050 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9051 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9052 ;;Total ram usage:       11 bytes
  9053 ;; Hardware stack levels used:    1
  9054 ;; Hardware stack levels required when called:    3
  9055 ;; This function calls:
  9056 ;;		Nothing
  9057 ;; This function is called by:
  9058 ;;		_TransLong256To255
  9059 ;; This function uses a non-reentrant model
  9060 ;;
  9061                           
  9062                           
  9063                           ;psect for function ___almod
  9064  0503                     ___almod:	
  9065                           
  9066                           ;incstack = 0
  9067                           ; Regs used in ___almod: [wreg+status,2+status,0]
  9068  0503  0020               	movlb	0	; select bank0
  9069  0504  01AA               	clrf	___almod@sign
  9070  0505  1FA7               	btfss	___almod@dividend+3,7
  9071  0506  2D14               	goto	l931
  9072  0507  09A4               	comf	___almod@dividend,f
  9073  0508  09A5               	comf	___almod@dividend+1,f
  9074  0509  09A6               	comf	___almod@dividend+2,f
  9075  050A  09A7               	comf	___almod@dividend+3,f
  9076  050B  0AA4               	incf	___almod@dividend,f
  9077  050C  1903               	skipnz
  9078  050D  0AA5               	incf	___almod@dividend+1,f
  9079  050E  1903               	skipnz
  9080  050F  0AA6               	incf	___almod@dividend+2,f
  9081  0510  1903               	skipnz
  9082  0511  0AA7               	incf	___almod@dividend+3,f
  9083  0512  01AA               	clrf	___almod@sign
  9084  0513  0AAA               	incf	___almod@sign,f
  9085  0514                     l931:	
  9086  0514  1FA3               	btfss	___almod@divisor+3,7
  9087  0515  2D21               	goto	l3469
  9088  0516  09A0               	comf	___almod@divisor,f
  9089  0517  09A1               	comf	___almod@divisor+1,f
  9090  0518  09A2               	comf	___almod@divisor+2,f
  9091  0519  09A3               	comf	___almod@divisor+3,f
  9092  051A  0AA0               	incf	___almod@divisor,f
  9093  051B  1903               	skipnz
  9094  051C  0AA1               	incf	___almod@divisor+1,f
  9095  051D  1903               	skipnz
  9096  051E  0AA2               	incf	___almod@divisor+2,f
  9097  051F  1903               	skipnz
  9098  0520  0AA3               	incf	___almod@divisor+3,f
  9099  0521                     l3469:	
  9100  0521  0823               	movf	___almod@divisor+3,w
  9101  0522  0422               	iorwf	___almod@divisor+2,w
  9102  0523  0421               	iorwf	___almod@divisor+1,w
  9103  0524  0420               	iorwf	___almod@divisor,w
  9104  0525  1903               	skipnz
  9105  0526  2D5A               	goto	l3485
  9106  0527  01A9               	clrf	___almod@counter
  9107  0528  0AA9               	incf	___almod@counter,f
  9108  0529                     l3475:	
  9109  0529  1BA3               	btfsc	___almod@divisor+3,7
  9110  052A  2D37               	goto	l3477
  9111  052B  3001               	movlw	1
  9112  052C                     u2205:	
  9113  052C  35A0               	lslf	___almod@divisor,f
  9114  052D  0DA1               	rlf	___almod@divisor+1,f
  9115  052E  0DA2               	rlf	___almod@divisor+2,f
  9116  052F  0DA3               	rlf	___almod@divisor+3,f
  9117  0530  0B89               	decfsz	9,f
  9118  0531  2D2C               	goto	u2205
  9119  0532  3001               	movlw	1
  9120  0533  00A8               	movwf	??___almod
  9121  0534  0828               	movf	??___almod,w
  9122  0535  07A9               	addwf	___almod@counter,f
  9123  0536  2D29               	goto	l3475
  9124  0537                     l3477:	
  9125  0537  0823               	movf	___almod@divisor+3,w
  9126  0538  0227               	subwf	___almod@dividend+3,w
  9127  0539  1D03               	skipz
  9128  053A  2D45               	goto	u2225
  9129  053B  0822               	movf	___almod@divisor+2,w
  9130  053C  0226               	subwf	___almod@dividend+2,w
  9131  053D  1D03               	skipz
  9132  053E  2D45               	goto	u2225
  9133  053F  0821               	movf	___almod@divisor+1,w
  9134  0540  0225               	subwf	___almod@dividend+1,w
  9135  0541  1D03               	skipz
  9136  0542  2D45               	goto	u2225
  9137  0543  0820               	movf	___almod@divisor,w
  9138  0544  0224               	subwf	___almod@dividend,w
  9139  0545                     u2225:	
  9140  0545  1C03               	skipc
  9141  0546  2D4F               	goto	l3481
  9142  0547  0820               	movf	___almod@divisor,w
  9143  0548  02A4               	subwf	___almod@dividend,f
  9144  0549  0821               	movf	___almod@divisor+1,w
  9145  054A  3BA5               	subwfb	___almod@dividend+1,f
  9146  054B  0822               	movf	___almod@divisor+2,w
  9147  054C  3BA6               	subwfb	___almod@dividend+2,f
  9148  054D  0823               	movf	___almod@divisor+3,w
  9149  054E  3BA7               	subwfb	___almod@dividend+3,f
  9150  054F                     l3481:	
  9151  054F  3001               	movlw	1
  9152  0550                     u2235:	
  9153  0550  36A3               	lsrf	___almod@divisor+3,f
  9154  0551  0CA2               	rrf	___almod@divisor+2,f
  9155  0552  0CA1               	rrf	___almod@divisor+1,f
  9156  0553  0CA0               	rrf	___almod@divisor,f
  9157  0554  0B89               	decfsz	9,f
  9158  0555  2D50               	goto	u2235
  9159  0556  3001               	movlw	1
  9160  0557  02A9               	subwf	___almod@counter,f
  9161  0558  1D03               	btfss	3,2
  9162  0559  2D37               	goto	l3477
  9163  055A                     l3485:	
  9164  055A  082A               	movf	___almod@sign,w
  9165  055B  1903               	btfsc	3,2
  9166  055C  2D68               	goto	l3489
  9167  055D  09A4               	comf	___almod@dividend,f
  9168  055E  09A5               	comf	___almod@dividend+1,f
  9169  055F  09A6               	comf	___almod@dividend+2,f
  9170  0560  09A7               	comf	___almod@dividend+3,f
  9171  0561  0AA4               	incf	___almod@dividend,f
  9172  0562  1903               	skipnz
  9173  0563  0AA5               	incf	___almod@dividend+1,f
  9174  0564  1903               	skipnz
  9175  0565  0AA6               	incf	___almod@dividend+2,f
  9176  0566  1903               	skipnz
  9177  0567  0AA7               	incf	___almod@dividend+3,f
  9178  0568                     l3489:	
  9179  0568  0827               	movf	___almod@dividend+3,w
  9180  0569  00A3               	movwf	?___almod+3
  9181  056A  0826               	movf	___almod@dividend+2,w
  9182  056B  00A2               	movwf	?___almod+2
  9183  056C  0825               	movf	___almod@dividend+1,w
  9184  056D  00A1               	movwf	?___almod+1
  9185  056E  0824               	movf	___almod@dividend,w
  9186  056F  00A0               	movwf	?___almod
  9187  0570  0008               	return
  9188  0571                     __end_of___almod:	
  9189                           
  9190                           	psect	text19
  9191  0481                     __ptext19:	
  9192 ;; *************** function ___aldiv *****************
  9193 ;; Defined at:
  9194 ;;		line 6 in file "E:\microchip\xc8\v1.45\sources\common\aldiv.c"
  9195 ;; Parameters:    Size  Location     Type
  9196 ;;  divisor         4    0[BANK0 ] long 
  9197 ;;  dividend        4    4[BANK0 ] long 
  9198 ;; Auto vars:     Size  Location     Type
  9199 ;;  quotient        4   11[BANK0 ] long 
  9200 ;;  sign            1   10[BANK0 ] unsigned char 
  9201 ;;  counter         1    9[BANK0 ] unsigned char 
  9202 ;; Return value:  Size  Location     Type
  9203 ;;                  4    0[BANK0 ] long 
  9204 ;; Registers used:
  9205 ;;		wreg, status,2, status,0
  9206 ;; Tracked objects:
  9207 ;;		On entry : 0/0
  9208 ;;		On exit  : 0/0
  9209 ;;		Unchanged: 0/0
  9210 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9211 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9212 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9213 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9214 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9215 ;;Total ram usage:       15 bytes
  9216 ;; Hardware stack levels used:    1
  9217 ;; Hardware stack levels required when called:    3
  9218 ;; This function calls:
  9219 ;;		Nothing
  9220 ;; This function is called by:
  9221 ;;		_TransLong256To255
  9222 ;; This function uses a non-reentrant model
  9223 ;;
  9224                           
  9225                           
  9226                           ;psect for function ___aldiv
  9227  0481                     ___aldiv:	
  9228                           
  9229                           ;incstack = 0
  9230                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  9231  0481  0020               	movlb	0	; select bank0
  9232  0482  01AA               	clrf	___aldiv@sign
  9233  0483  1FA3               	btfss	___aldiv@divisor+3,7
  9234  0484  2C92               	goto	l918
  9235  0485  09A0               	comf	___aldiv@divisor,f
  9236  0486  09A1               	comf	___aldiv@divisor+1,f
  9237  0487  09A2               	comf	___aldiv@divisor+2,f
  9238  0488  09A3               	comf	___aldiv@divisor+3,f
  9239  0489  0AA0               	incf	___aldiv@divisor,f
  9240  048A  1903               	skipnz
  9241  048B  0AA1               	incf	___aldiv@divisor+1,f
  9242  048C  1903               	skipnz
  9243  048D  0AA2               	incf	___aldiv@divisor+2,f
  9244  048E  1903               	skipnz
  9245  048F  0AA3               	incf	___aldiv@divisor+3,f
  9246  0490  01AA               	clrf	___aldiv@sign
  9247  0491  0AAA               	incf	___aldiv@sign,f
  9248  0492                     l918:	
  9249  0492  1FA7               	btfss	___aldiv@dividend+3,7
  9250  0493  2CA3               	goto	l3431
  9251  0494  09A4               	comf	___aldiv@dividend,f
  9252  0495  09A5               	comf	___aldiv@dividend+1,f
  9253  0496  09A6               	comf	___aldiv@dividend+2,f
  9254  0497  09A7               	comf	___aldiv@dividend+3,f
  9255  0498  0AA4               	incf	___aldiv@dividend,f
  9256  0499  1903               	skipnz
  9257  049A  0AA5               	incf	___aldiv@dividend+1,f
  9258  049B  1903               	skipnz
  9259  049C  0AA6               	incf	___aldiv@dividend+2,f
  9260  049D  1903               	skipnz
  9261  049E  0AA7               	incf	___aldiv@dividend+3,f
  9262  049F  3001               	movlw	1
  9263  04A0  00A8               	movwf	??___aldiv
  9264  04A1  0828               	movf	??___aldiv,w
  9265  04A2  06AA               	xorwf	___aldiv@sign,f
  9266  04A3                     l3431:	
  9267  04A3  3000               	movlw	0
  9268  04A4  00AE               	movwf	___aldiv@quotient+3
  9269  04A5  3000               	movlw	0
  9270  04A6  00AD               	movwf	___aldiv@quotient+2
  9271  04A7  3000               	movlw	0
  9272  04A8  00AC               	movwf	___aldiv@quotient+1
  9273  04A9  3000               	movlw	0
  9274  04AA  00AB               	movwf	___aldiv@quotient
  9275  04AB  0823               	movf	___aldiv@divisor+3,w
  9276  04AC  0422               	iorwf	___aldiv@divisor+2,w
  9277  04AD  0421               	iorwf	___aldiv@divisor+1,w
  9278  04AE  0420               	iorwf	___aldiv@divisor,w
  9279  04AF  1903               	skipnz
  9280  04B0  2CEC               	goto	l3453
  9281  04B1  01A9               	clrf	___aldiv@counter
  9282  04B2  0AA9               	incf	___aldiv@counter,f
  9283  04B3                     l3439:	
  9284  04B3  1BA3               	btfsc	___aldiv@divisor+3,7
  9285  04B4  2CC1               	goto	l3441
  9286  04B5  3001               	movlw	1
  9287  04B6                     u2105:	
  9288  04B6  35A0               	lslf	___aldiv@divisor,f
  9289  04B7  0DA1               	rlf	___aldiv@divisor+1,f
  9290  04B8  0DA2               	rlf	___aldiv@divisor+2,f
  9291  04B9  0DA3               	rlf	___aldiv@divisor+3,f
  9292  04BA  0B89               	decfsz	9,f
  9293  04BB  2CB6               	goto	u2105
  9294  04BC  3001               	movlw	1
  9295  04BD  00A8               	movwf	??___aldiv
  9296  04BE  0828               	movf	??___aldiv,w
  9297  04BF  07A9               	addwf	___aldiv@counter,f
  9298  04C0  2CB3               	goto	l3439
  9299  04C1                     l3441:	
  9300  04C1  3001               	movlw	1
  9301  04C2                     u2125:	
  9302  04C2  35AB               	lslf	___aldiv@quotient,f
  9303  04C3  0DAC               	rlf	___aldiv@quotient+1,f
  9304  04C4  0DAD               	rlf	___aldiv@quotient+2,f
  9305  04C5  0DAE               	rlf	___aldiv@quotient+3,f
  9306  04C6  0B89               	decfsz	9,f
  9307  04C7  2CC2               	goto	u2125
  9308  04C8  0823               	movf	___aldiv@divisor+3,w
  9309  04C9  0227               	subwf	___aldiv@dividend+3,w
  9310  04CA  1D03               	skipz
  9311  04CB  2CD6               	goto	u2135
  9312  04CC  0822               	movf	___aldiv@divisor+2,w
  9313  04CD  0226               	subwf	___aldiv@dividend+2,w
  9314  04CE  1D03               	skipz
  9315  04CF  2CD6               	goto	u2135
  9316  04D0  0821               	movf	___aldiv@divisor+1,w
  9317  04D1  0225               	subwf	___aldiv@dividend+1,w
  9318  04D2  1D03               	skipz
  9319  04D3  2CD6               	goto	u2135
  9320  04D4  0820               	movf	___aldiv@divisor,w
  9321  04D5  0224               	subwf	___aldiv@dividend,w
  9322  04D6                     u2135:	
  9323  04D6  1C03               	skipc
  9324  04D7  2CE1               	goto	l3449
  9325  04D8  0820               	movf	___aldiv@divisor,w
  9326  04D9  02A4               	subwf	___aldiv@dividend,f
  9327  04DA  0821               	movf	___aldiv@divisor+1,w
  9328  04DB  3BA5               	subwfb	___aldiv@dividend+1,f
  9329  04DC  0822               	movf	___aldiv@divisor+2,w
  9330  04DD  3BA6               	subwfb	___aldiv@dividend+2,f
  9331  04DE  0823               	movf	___aldiv@divisor+3,w
  9332  04DF  3BA7               	subwfb	___aldiv@dividend+3,f
  9333  04E0  142B               	bsf	___aldiv@quotient,0
  9334  04E1                     l3449:	
  9335  04E1  3001               	movlw	1
  9336  04E2                     u2145:	
  9337  04E2  36A3               	lsrf	___aldiv@divisor+3,f
  9338  04E3  0CA2               	rrf	___aldiv@divisor+2,f
  9339  04E4  0CA1               	rrf	___aldiv@divisor+1,f
  9340  04E5  0CA0               	rrf	___aldiv@divisor,f
  9341  04E6  0B89               	decfsz	9,f
  9342  04E7  2CE2               	goto	u2145
  9343  04E8  3001               	movlw	1
  9344  04E9  02A9               	subwf	___aldiv@counter,f
  9345  04EA  1D03               	btfss	3,2
  9346  04EB  2CC1               	goto	l3441
  9347  04EC                     l3453:	
  9348  04EC  082A               	movf	___aldiv@sign,w
  9349  04ED  1903               	btfsc	3,2
  9350  04EE  2CFA               	goto	l3457
  9351  04EF  09AB               	comf	___aldiv@quotient,f
  9352  04F0  09AC               	comf	___aldiv@quotient+1,f
  9353  04F1  09AD               	comf	___aldiv@quotient+2,f
  9354  04F2  09AE               	comf	___aldiv@quotient+3,f
  9355  04F3  0AAB               	incf	___aldiv@quotient,f
  9356  04F4  1903               	skipnz
  9357  04F5  0AAC               	incf	___aldiv@quotient+1,f
  9358  04F6  1903               	skipnz
  9359  04F7  0AAD               	incf	___aldiv@quotient+2,f
  9360  04F8  1903               	skipnz
  9361  04F9  0AAE               	incf	___aldiv@quotient+3,f
  9362  04FA                     l3457:	
  9363  04FA  082E               	movf	___aldiv@quotient+3,w
  9364  04FB  00A3               	movwf	?___aldiv+3
  9365  04FC  082D               	movf	___aldiv@quotient+2,w
  9366  04FD  00A2               	movwf	?___aldiv+2
  9367  04FE  082C               	movf	___aldiv@quotient+1,w
  9368  04FF  00A1               	movwf	?___aldiv+1
  9369  0500  082B               	movf	___aldiv@quotient,w
  9370  0501  00A0               	movwf	?___aldiv
  9371  0502  0008               	return
  9372  0503                     __end_of___aldiv:	
  9373                           
  9374                           	psect	text20
  9375  0EBE                     __ptext20:	
  9376 ;; *************** function _InitCalibrate *****************
  9377 ;; Defined at:
  9378 ;;		line 53 in file "D:/programdata/16F18346_Link_IC.X/calibrate_mode.c"
  9379 ;; Parameters:    Size  Location     Type
  9380 ;;		None
  9381 ;; Auto vars:     Size  Location     Type
  9382 ;;  cargoData      16   18[BANK0 ] struct .
  9383 ;; Return value:  Size  Location     Type
  9384 ;;                  1    wreg      void 
  9385 ;; Registers used:
  9386 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9387 ;; Tracked objects:
  9388 ;;		On entry : 0/0
  9389 ;;		On exit  : 0/0
  9390 ;;		Unchanged: 0/0
  9391 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9392 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9393 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9394 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9395 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9396 ;;Total ram usage:       17 bytes
  9397 ;; Hardware stack levels used:    1
  9398 ;; Hardware stack levels required when called:    4
  9399 ;; This function calls:
  9400 ;;		_getCargoData
  9401 ;; This function is called by:
  9402 ;;		_main
  9403 ;;		_Calibrate_download
  9404 ;; This function uses a non-reentrant model
  9405 ;;
  9406                           
  9407                           
  9408                           ;psect for function _InitCalibrate
  9409  0EBE                     _InitCalibrate:	
  9410                           
  9411                           ;calibrate_mode.c: 54: isEndPointTrig = 1;
  9412                           
  9413                           ;incstack = 0
  9414                           ; Regs used in _InitCalibrate: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9415  0EBE  147B               	bsf	_isEndPointTrig/(0+8),_isEndPointTrig& (0+7)
  9416                           
  9417                           ;calibrate_mode.c: 55: calibdata.cargoLength = 0xFFFF;
  9418  0EBF  30FF               	movlw	255
  9419  0EC0  0021               	movlb	1	; select bank1
  9420  0EC1  00B2               	movwf	_calibdata^(0+128)
  9421  0EC2  30FF               	movlw	255
  9422  0EC3  00B3               	movwf	(_calibdata^(0+128)+1)
  9423                           
  9424                           ;calibrate_mode.c: 56: calibdata.index = 0x00;
  9425  0EC4  01B5               	clrf	(_calibdata^(0+128)+3)
  9426                           
  9427                           ;calibrate_mode.c: 57: calibdata.command =0x00;
  9428  0EC5  01B4               	clrf	(_calibdata^(0+128)+2)
  9429                           
  9430                           ;calibrate_mode.c: 58: calibdata.WorkingCount = 0;
  9431  0EC6  3000               	movlw	0
  9432  0EC7  00B9               	movwf	((_calibdata+3)^(0+128)+4)
  9433  0EC8  3000               	movlw	0
  9434  0EC9  00B8               	movwf	((_calibdata+2)^(0+128)+4)
  9435  0ECA  3000               	movlw	0
  9436  0ECB  00B7               	movwf	((_calibdata+1)^(0+128)+4)
  9437  0ECC  3000               	movlw	0
  9438  0ECD  00B6               	movwf	(_calibdata^(0+128)+4)
  9439                           
  9440                           ;calibrate_mode.c: 59: CargoData cargoData = getCargoData();
  9441  0ECE  318D  257E  318E   	fcall	_getCargoData
  9442  0ED1  0020               	movlb	0	; select bank0
  9443  0ED2  3020               	movlw	low ?_getCargoData
  9444  0ED3  0086               	movwf	6
  9445  0ED4  3000               	movlw	high ?_getCargoData
  9446  0ED5  0087               	movwf	7
  9447  0ED6  3032               	movlw	low InitCalibrate@cargoData
  9448  0ED7  0084               	movwf	4
  9449  0ED8  3000               	movlw	high InitCalibrate@cargoData
  9450  0ED9  0085               	movwf	5
  9451  0EDA  3010               	movlw	16
  9452  0EDB  00B1               	movwf	??_InitCalibrate
  9453  0EDC                     u2260:	
  9454  0EDC  0016               	moviw fsr1++
  9455  0EDD  001A               	movwi fsr0++
  9456  0EDE  0BB1               	decfsz	??_InitCalibrate,f
  9457  0EDF  2EDC               	goto	u2260
  9458                           
  9459                           ;calibrate_mode.c: 60: cargoData.linkAngleTo = 0;
  9460  0EE0  01B7               	clrf	InitCalibrate@cargoData+5
  9461  0EE1  01B8               	clrf	InitCalibrate@cargoData+6
  9462                           
  9463                           ;calibrate_mode.c: 61: linkInfo.endpoint = 0;
  9464  0EE2  0021               	movlb	1	; select bank1
  9465  0EE3  01C0               	clrf	(_linkInfo^(0+128)+5)
  9466                           
  9467                           ;calibrate_mode.c: 62: linkInfo.My_address = 0;
  9468  0EE4  01BB               	clrf	_linkInfo^(0+128)
  9469                           
  9470                           ;calibrate_mode.c: 63: countabuf = 0;
  9471  0EE5  0020               	movlb	0	; select bank0
  9472  0EE6  01E9               	clrf	_countabuf
  9473  0EE7  01EA               	clrf	_countabuf+1
  9474  0EE8  0008               	return
  9475  0EE9                     __end_of_InitCalibrate:	
  9476                           
  9477                           	psect	text21
  9478  0D7E                     __ptext21:	
  9479 ;; *************** function _getCargoData *****************
  9480 ;; Defined at:
  9481 ;;		line 8 in file "struct.c"
  9482 ;; Parameters:    Size  Location     Type
  9483 ;;		None
  9484 ;; Auto vars:     Size  Location     Type
  9485 ;;		None
  9486 ;; Return value:  Size  Location     Type
  9487 ;;                  16    0[BANK0 ] struct .
  9488 ;; Registers used:
  9489 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  9490 ;; Tracked objects:
  9491 ;;		On entry : 0/0
  9492 ;;		On exit  : 0/0
  9493 ;;		Unchanged: 0/0
  9494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9495 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9496 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9497 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9498 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9499 ;;Total ram usage:       17 bytes
  9500 ;; Hardware stack levels used:    1
  9501 ;; Hardware stack levels required when called:    3
  9502 ;; This function calls:
  9503 ;;		Nothing
  9504 ;; This function is called by:
  9505 ;;		_InitCalibrate
  9506 ;;		_readCargo
  9507 ;;		_EEPROM_download
  9508 ;;		_setCargo_Angle
  9509 ;; This function uses a non-reentrant model
  9510 ;;
  9511                           
  9512                           
  9513                           ;psect for function _getCargoData
  9514  0D7E                     _getCargoData:	
  9515                           
  9516                           ;struct.c: 9: return cargoData;
  9517                           
  9518                           ;incstack = 0
  9519                           ; Regs used in _getCargoData: [wreg-fsr1h+status,2+status,0]
  9520  0D7E  3059               	movlw	low _cargoData
  9521  0D7F  0086               	movwf	6
  9522  0D80  3000               	movlw	high _cargoData
  9523  0D81  0087               	movwf	7
  9524  0D82  3020               	movlw	low ?_getCargoData
  9525  0D83  0084               	movwf	4
  9526  0D84  3000               	movlw	high ?_getCargoData
  9527  0D85  0085               	movwf	5
  9528  0D86  3010               	movlw	16
  9529  0D87  0020               	movlb	0	; select bank0
  9530  0D88  00B0               	movwf	??_getCargoData
  9531  0D89                     u2020:	
  9532  0D89  0016               	moviw fsr1++
  9533  0D8A  001A               	movwi fsr0++
  9534  0D8B  0BB0               	decfsz	??_getCargoData,f
  9535  0D8C  2D89               	goto	u2020
  9536  0D8D  0008               	return
  9537  0D8E                     __end_of_getCargoData:	
  9538                           
  9539                           	psect	text22
  9540  079B                     __ptext22:	
  9541 ;; *************** function _read_train *****************
  9542 ;; Defined at:
  9543 ;;		line 204 in file "D:/programdata/16F18346_Link_IC.X/main.c"
  9544 ;; Parameters:    Size  Location     Type
  9545 ;;		None
  9546 ;; Auto vars:     Size  Location     Type
  9547 ;;  bufint          2    2[BANK0 ] unsigned int 
  9548 ;; Return value:  Size  Location     Type
  9549 ;;                  1    wreg      void 
  9550 ;; Registers used:
  9551 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  9552 ;; Tracked objects:
  9553 ;;		On entry : 0/0
  9554 ;;		On exit  : 0/0
  9555 ;;		Unchanged: 0/0
  9556 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9557 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9558 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9559 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9560 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9561 ;;Total ram usage:        4 bytes
  9562 ;; Hardware stack levels used:    1
  9563 ;; Hardware stack levels required when called:    3
  9564 ;; This function calls:
  9565 ;;		Nothing
  9566 ;; This function is called by:
  9567 ;;		_main
  9568 ;; This function uses a non-reentrant model
  9569 ;;
  9570                           
  9571                           
  9572                           ;psect for function _read_train
  9573  079B                     _read_train:	
  9574                           
  9575                           ;main.c: 205: unsigned int bufint = spi1_Read_data;
  9576                           
  9577                           ;incstack = 0
  9578                           ; Regs used in _read_train: [wreg-fsr0h+status,2+status,0]
  9579  079B  087C               	movf	_spi1_Read_data,w
  9580  079C  0020               	movlb	0	; select bank0
  9581  079D  00A0               	movwf	??_read_train
  9582  079E  01A1               	clrf	??_read_train+1
  9583  079F  0820               	movf	??_read_train,w
  9584  07A0  00A2               	movwf	read_train@bufint
  9585  07A1  0821               	movf	??_read_train+1,w
  9586  07A2  00A3               	movwf	read_train@bufint+1
  9587                           
  9588                           ;main.c: 206: switch(trainPos){
  9589  07A3  2FCC               	goto	l4071
  9590  07A4                     l4061:	
  9591                           ;main.c: 207: case 1:
  9592                           
  9593                           
  9594                           ;main.c: 208: st_dataLength = (bufint << 8 | 0x00FF);
  9595  07A4  0020               	movlb	0	; select bank0
  9596  07A5  0822               	movf	read_train@bufint,w
  9597  07A6  00A1               	movwf	??_read_train+1
  9598  07A7  01A0               	clrf	??_read_train
  9599  07A8  30FF               	movlw	255
  9600  07A9  0420               	iorwf	??_read_train,w
  9601  07AA  0021               	movlb	1	; select bank1
  9602  07AB  00E2               	movwf	_st_dataLength^(0+128)
  9603  07AC  3000               	movlw	0
  9604  07AD  0020               	movlb	0	; select bank0
  9605  07AE  0421               	iorwf	??_read_train+1,w
  9606  07AF  0021               	movlb	1	; select bank1
  9607  07B0  00E3               	movwf	(_st_dataLength+1)^(0+128)
  9608                           
  9609                           ;main.c: 209: break;
  9610  07B1  0008               	return
  9611  07B2                     l4063:	
  9612                           ;main.c: 210: case 2:
  9613                           
  9614                           
  9615                           ;main.c: 211: st_dataLength = st_dataLength & (bufint | 0xFF00);
  9616  07B2  3000               	movlw	0
  9617  07B3  0020               	movlb	0	; select bank0
  9618  07B4  0422               	iorwf	read_train@bufint,w
  9619  07B5  00A0               	movwf	??_read_train
  9620  07B6  30FF               	movlw	255
  9621  07B7  0423               	iorwf	read_train@bufint+1,w
  9622  07B8  00A1               	movwf	??_read_train+1
  9623  07B9  0021               	movlb	1	; select bank1
  9624  07BA  0862               	movf	_st_dataLength^(0+128),w
  9625  07BB  0020               	movlb	0	; select bank0
  9626  07BC  0520               	andwf	??_read_train,w
  9627  07BD  0021               	movlb	1	; select bank1
  9628  07BE  00E2               	movwf	_st_dataLength^(0+128)
  9629  07BF  0863               	movf	(_st_dataLength+1)^(0+128),w
  9630  07C0  0020               	movlb	0	; select bank0
  9631  07C1  0521               	andwf	??_read_train+1,w
  9632  07C2  0021               	movlb	1	; select bank1
  9633  07C3  00E3               	movwf	(_st_dataLength+1)^(0+128)
  9634                           
  9635                           ;main.c: 212: break;
  9636  07C4  0008               	return
  9637  07C5                     l4065:	
  9638                           ;main.c: 213: case 3:
  9639                           
  9640                           
  9641                           ;main.c: 214: st_type = spi1_Read_data;
  9642  07C5  087C               	movf	_spi1_Read_data,w
  9643  07C6  0020               	movlb	0	; select bank0
  9644  07C7  00A0               	movwf	??_read_train
  9645  07C8  0820               	movf	??_read_train,w
  9646  07C9  00ED               	movwf	_st_type
  9647                           
  9648                           ;main.c: 215: isreadTrain = 1;
  9649  07CA  17F0               	bsf	_isreadTrain/(0+8),_isreadTrain& (0+7)
  9650                           
  9651                           ;main.c: 219: }
  9652                           
  9653                           ;main.c: 218: break;
  9654                           
  9655                           ;main.c: 217: default :
  9656                           
  9657                           ;main.c: 216: break;
  9658  07CB  0008               	return
  9659  07CC                     l4071:	
  9660                           
  9661                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9662                           ; Switch size 1, requested type "space"
  9663                           ; Number of cases is 1, Range of values is 0 to 0
  9664                           ; switch strategies available:
  9665                           ; Name         Instructions Cycles
  9666                           ; simple_byte            4     3 (average)
  9667                           ; direct_byte            8     6 (fixed)
  9668                           ; jumptable            260     6 (fixed)
  9669                           ;	Chosen strategy is simple_byte
  9670  07CC  0021               	movlb	1	; select bank1
  9671  07CD  0854               	movf	(_trainPos+1)^(0+128),w
  9672  07CE  3A00               	xorlw	0	; case 0
  9673  07CF  1903               	skipnz
  9674  07D0  2FD2               	goto	l4383
  9675  07D1  2FDD               	goto	l172
  9676  07D2                     l4383:	
  9677                           
  9678                           ; Switch size 1, requested type "space"
  9679                           ; Number of cases is 3, Range of values is 1 to 3
  9680                           ; switch strategies available:
  9681                           ; Name         Instructions Cycles
  9682                           ; simple_byte           10     6 (average)
  9683                           ; direct_byte           15     9 (fixed)
  9684                           ; jumptable            263     9 (fixed)
  9685                           ;	Chosen strategy is simple_byte
  9686  07D2  0853               	movf	_trainPos^(0+128),w
  9687  07D3  3A01               	xorlw	1	; case 1
  9688  07D4  1903               	skipnz
  9689  07D5  2FA4               	goto	l4061
  9690  07D6  3A03               	xorlw	3	; case 2
  9691  07D7  1903               	skipnz
  9692  07D8  2FB2               	goto	l4063
  9693  07D9  3A01               	xorlw	1	; case 3
  9694  07DA  1903               	skipnz
  9695  07DB  2FC5               	goto	l4065
  9696  07DC  2FDD               	goto	l172
  9697  07DD                     l172:	
  9698  07DD  0008               	return
  9699  07DE                     __end_of_read_train:	
  9700                           
  9701                           	psect	text23
  9702  0D52                     __ptext23:	
  9703 ;; *************** function _isSPI1read *****************
  9704 ;; Defined at:
  9705 ;;		line 66 in file "D:/programdata/16F18346_Link_IC.X/spiControl.c"
  9706 ;; Parameters:    Size  Location     Type
  9707 ;;		None
  9708 ;; Auto vars:     Size  Location     Type
  9709 ;;		None
  9710 ;; Return value:  Size  Location     Type
  9711 ;;		None               void
  9712 ;; Registers used:
  9713 ;;		wreg, status,2, status,0
  9714 ;; Tracked objects:
  9715 ;;		On entry : 0/0
  9716 ;;		On exit  : 0/0
  9717 ;;		Unchanged: 0/0
  9718 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9719 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9720 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9721 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9722 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9723 ;;Total ram usage:        0 bytes
  9724 ;; Hardware stack levels used:    1
  9725 ;; Hardware stack levels required when called:    3
  9726 ;; This function calls:
  9727 ;;		Nothing
  9728 ;; This function is called by:
  9729 ;;		_main
  9730 ;; This function uses a non-reentrant model
  9731 ;;
  9732                           
  9733                           
  9734                           ;psect for function _isSPI1read
  9735  0D52                     _isSPI1read:	
  9736                           
  9737                           ;spiControl.c: 67: if(read_count1 == count1){
  9738                           
  9739                           ;incstack = 0
  9740                           ; Regs used in _isSPI1read: [wreg+status,2+status,0]
  9741  0D52  0021               	movlb	1	; select bank1
  9742  0D53  0858               	movf	(_count1+1)^(0+128),w
  9743  0D54  0656               	xorwf	(_read_count1+1)^(0+128),w
  9744  0D55  1D03               	skipz
  9745  0D56  2D59               	goto	u2675
  9746  0D57  0857               	movf	_count1^(0+128),w
  9747  0D58  0655               	xorwf	_read_count1^(0+128),w
  9748  0D59                     u2675:	
  9749  0D59  1D03               	skipz
  9750  0D5A  2D5D               	goto	l4019
  9751                           
  9752                           ;spiControl.c: 68: return 1;
  9753  0D5B  1403               	setc
  9754                           
  9755                           ;spiControl.c: 69: }else{
  9756  0D5C  0008               	return
  9757  0D5D                     l4019:	
  9758                           
  9759                           ;spiControl.c: 70: return 0;
  9760  0D5D  1003               	clrc
  9761  0D5E  0008               	return
  9762  0D5F                     __end_of_isSPI1read:	
  9763                           
  9764                           	psect	text24
  9765  0D11                     __ptext24:	
  9766 ;; *************** function _io_init *****************
  9767 ;; Defined at:
  9768 ;;		line 132 in file "D:/programdata/16F18346_Link_IC.X/main.c"
  9769 ;; Parameters:    Size  Location     Type
  9770 ;;		None
  9771 ;; Auto vars:     Size  Location     Type
  9772 ;;		None
  9773 ;; Return value:  Size  Location     Type
  9774 ;;                  1    wreg      void 
  9775 ;; Registers used:
  9776 ;;		None
  9777 ;; Tracked objects:
  9778 ;;		On entry : 0/0
  9779 ;;		On exit  : 0/0
  9780 ;;		Unchanged: 0/0
  9781 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9782 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9783 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9784 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9785 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9786 ;;Total ram usage:        0 bytes
  9787 ;; Hardware stack levels used:    1
  9788 ;; Hardware stack levels required when called:    3
  9789 ;; This function calls:
  9790 ;;		Nothing
  9791 ;; This function is called by:
  9792 ;;		_main
  9793 ;; This function uses a non-reentrant model
  9794 ;;
  9795                           
  9796                           
  9797                           ;psect for function _io_init
  9798  0D11                     _io_init:	
  9799                           
  9800                           ;main.c: 133: PIE0bits.IOCIE = 1;
  9801                           
  9802                           ;incstack = 0
  9803                           ; Regs used in _io_init: []
  9804  0D11  0021               	movlb	1	; select bank1
  9805  0D12  1610               	bsf	16,4	;volatile
  9806                           
  9807                           ;main.c: 134: IOCAPbits.IOCAP3 = 1;
  9808  0D13  0027               	movlb	7	; select bank7
  9809  0D14  1591               	bsf	17,3	;volatile
  9810                           
  9811                           ;main.c: 135: IOCANbits.IOCAN3 = 1;
  9812  0D15  1592               	bsf	18,3	;volatile
  9813                           
  9814                           ;main.c: 136: PIE0bits.INTE = 1;
  9815  0D16  0021               	movlb	1	; select bank1
  9816  0D17  1410               	bsf	16,0	;volatile
  9817                           
  9818                           ;main.c: 137: INTCONbits.INTEDG = 1;
  9819  0D18  140B               	bsf	11,0	;volatile
  9820  0D19  0008               	return
  9821  0D1A                     __end_of_io_init:	
  9822                           
  9823                           	psect	text25
  9824  0751                     __ptext25:	
  9825 ;; *************** function _initTrain *****************
  9826 ;; Defined at:
  9827 ;;		line 140 in file "D:/programdata/16F18346_Link_IC.X/main.c"
  9828 ;; Parameters:    Size  Location     Type
  9829 ;;		None
  9830 ;; Auto vars:     Size  Location     Type
  9831 ;;		None
  9832 ;; Return value:  Size  Location     Type
  9833 ;;                  1    wreg      void 
  9834 ;; Registers used:
  9835 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9836 ;; Tracked objects:
  9837 ;;		On entry : 0/0
  9838 ;;		On exit  : 0/0
  9839 ;;		Unchanged: 0/0
  9840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9841 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9842 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9843 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9844 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9845 ;;Total ram usage:        3 bytes
  9846 ;; Hardware stack levels used:    1
  9847 ;; Hardware stack levels required when called:    5
  9848 ;; This function calls:
  9849 ;;		_isTrainSt
  9850 ;;		_resetTrainData
  9851 ;; This function is called by:
  9852 ;;		_main
  9853 ;; This function uses a non-reentrant model
  9854 ;;
  9855                           
  9856                           
  9857                           ;psect for function _initTrain
  9858  0751                     _initTrain:	
  9859                           
  9860                           ;main.c: 141: spi1_Read_data = spi1_buffer_data[read_count1];
  9861                           
  9862                           ;incstack = 0
  9863                           ; Regs used in _initTrain: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9864  0751  30F0               	movlw	240
  9865  0752  0020               	movlb	0	; select bank0
  9866  0753  00AB               	movwf	??_initTrain
  9867  0754  3026               	movlw	38
  9868  0755  00AC               	movwf	??_initTrain+1
  9869  0756  0021               	movlb	1	; select bank1
  9870  0757  0855               	movf	_read_count1^(0+128),w
  9871  0758  0020               	movlb	0	; select bank0
  9872  0759  072B               	addwf	??_initTrain,w
  9873  075A  0086               	movwf	6
  9874  075B  0021               	movlb	1	; select bank1
  9875  075C  0856               	movf	(_read_count1+1)^(0+128),w
  9876  075D  0020               	movlb	0	; select bank0
  9877  075E  3D2C               	addwfc	??_initTrain+1,w
  9878  075F  0087               	movwf	7
  9879  0760  0801               	movf	1,w
  9880  0761  00AD               	movwf	??_initTrain+2
  9881  0762  082D               	movf	??_initTrain+2,w
  9882  0763  00FC               	movwf	_spi1_Read_data
  9883                           
  9884                           ;main.c: 142: spi2_Send_data = spi1_Read_data;
  9885  0764  087C               	movf	_spi1_Read_data,w
  9886  0765  00AB               	movwf	??_initTrain
  9887  0766  082B               	movf	??_initTrain,w
  9888  0767  00EE               	movwf	_spi2_Send_data
  9889                           
  9890                           ;main.c: 143: read_count1++;
  9891  0768  3001               	movlw	1
  9892  0769  0021               	movlb	1	; select bank1
  9893  076A  07D5               	addwf	_read_count1^(0+128),f
  9894  076B  3000               	movlw	0
  9895  076C  3DD6               	addwfc	(_read_count1+1)^(0+128),f
  9896                           
  9897                           ;main.c: 144: if(read_count1 == 256){
  9898  076D  0356               	decf	(_read_count1+1)^(0+128),w
  9899  076E  0455               	iorwf	_read_count1^(0+128),w
  9900  076F  1D03               	btfss	3,2
  9901  0770  2F73               	goto	l3951
  9902                           
  9903                           ;main.c: 145: read_count1 = 0;
  9904  0771  01D5               	clrf	_read_count1^(0+128)
  9905  0772  01D6               	clrf	(_read_count1+1)^(0+128)
  9906  0773                     l3951:	
  9907                           
  9908                           ;main.c: 146: }
  9909                           ;main.c: 147: if(isTrainSt(spi1_Read_data)){
  9910  0773  087C               	movf	_spi1_Read_data,w
  9911  0774  3186  26B8  3187   	fcall	_isTrainSt
  9912  0777  1C03               	btfss	3,0
  9913  0778  2F84               	goto	l3961
  9914                           
  9915                           ;main.c: 148: trainPos = 0;
  9916  0779  0021               	movlb	1	; select bank1
  9917  077A  01D3               	clrf	_trainPos^(0+128)
  9918  077B  01D4               	clrf	(_trainPos+1)^(0+128)
  9919                           
  9920                           ;main.c: 149: resetTrainData();
  9921  077C  318D  251A  3187   	fcall	_resetTrainData
  9922                           
  9923                           ;main.c: 150: isreadTrain = 0;
  9924  077F  13F0               	bcf	_isreadTrain/(0+8),_isreadTrain& (0+7)
  9925                           
  9926                           ;main.c: 151: countabuf = 0;
  9927  0780  0020               	movlb	0	; select bank0
  9928  0781  01E9               	clrf	_countabuf
  9929  0782  01EA               	clrf	_countabuf+1
  9930                           
  9931                           ;main.c: 152: }else{
  9932  0783  2F89               	goto	l138
  9933  0784                     l3961:	
  9934                           
  9935                           ;main.c: 153: trainPos++;
  9936  0784  3001               	movlw	1
  9937  0785  0021               	movlb	1	; select bank1
  9938  0786  07D3               	addwf	_trainPos^(0+128),f
  9939  0787  3000               	movlw	0
  9940  0788  3DD4               	addwfc	(_trainPos+1)^(0+128),f
  9941  0789                     l138:	
  9942                           
  9943                           ;main.c: 154: }
  9944                           ;main.c: 155: if(st_dataLength < trainPos){
  9945  0789  0021               	movlb	1	; select bank1
  9946  078A  0854               	movf	(_trainPos+1)^(0+128),w
  9947  078B  0263               	subwf	(_st_dataLength+1)^(0+128),w
  9948  078C  1D03               	skipz
  9949  078D  2F90               	goto	u2665
  9950  078E  0853               	movf	_trainPos^(0+128),w
  9951  078F  0262               	subwf	_st_dataLength^(0+128),w
  9952  0790                     u2665:	
  9953  0790  1803               	skipnc
  9954  0791  0008               	return
  9955                           
  9956                           ;main.c: 156: trainPos = 0;
  9957  0792  01D3               	clrf	_trainPos^(0+128)
  9958  0793  01D4               	clrf	(_trainPos+1)^(0+128)
  9959                           
  9960                           ;main.c: 157: resetTrainData();
  9961  0794  318D  251A         	fcall	_resetTrainData
  9962                           
  9963                           ;main.c: 158: isreadTrain = 0;
  9964  0796  13F0               	bcf	_isreadTrain/(0+8),_isreadTrain& (0+7)
  9965                           
  9966                           ;main.c: 159: countabuf = 0;
  9967  0797  0020               	movlb	0	; select bank0
  9968  0798  01E9               	clrf	_countabuf
  9969  0799  01EA               	clrf	_countabuf+1
  9970  079A  0008               	return
  9971  079B                     __end_of_initTrain:	
  9972                           
  9973                           	psect	text26
  9974  0D1A                     __ptext26:	
  9975 ;; *************** function _resetTrainData *****************
  9976 ;; Defined at:
  9977 ;;		line 186 in file "D:/programdata/16F18346_Link_IC.X/main.c"
  9978 ;; Parameters:    Size  Location     Type
  9979 ;;		None
  9980 ;; Auto vars:     Size  Location     Type
  9981 ;;		None
  9982 ;; Return value:  Size  Location     Type
  9983 ;;                  1    wreg      void 
  9984 ;; Registers used:
  9985 ;;		wreg, status,2, status,0, pclath, cstack
  9986 ;; Tracked objects:
  9987 ;;		On entry : 0/0
  9988 ;;		On exit  : 0/0
  9989 ;;		Unchanged: 0/0
  9990 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9991 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9992 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9994 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9995 ;;Total ram usage:        0 bytes
  9996 ;; Hardware stack levels used:    1
  9997 ;; Hardware stack levels required when called:    4
  9998 ;; This function calls:
  9999 ;;		_restartCargo
 10000 ;; This function is called by:
 10001 ;;		_initTrain
 10002 ;; This function uses a non-reentrant model
 10003 ;;
 10004                           
 10005                           
 10006                           ;psect for function _resetTrainData
 10007  0D1A                     _resetTrainData:	
 10008                           
 10009                           ;main.c: 187: st_dataLength = 0xFFFF;
 10010                           
 10011                           ;incstack = 0
 10012                           ; Regs used in _resetTrainData: [wreg+status,2+status,0+pclath+cstack]
 10013  0D1A  30FF               	movlw	255
 10014  0D1B  0021               	movlb	1	; select bank1
 10015  0D1C  00E2               	movwf	_st_dataLength^(0+128)
 10016  0D1D  30FF               	movlw	255
 10017  0D1E  00E3               	movwf	(_st_dataLength^(0+128)+1)
 10018                           
 10019                           ;main.c: 188: st_type = 0;
 10020  0D1F  0020               	movlb	0	; select bank0
 10021  0D20  01ED               	clrf	_st_type
 10022                           
 10023                           ;main.c: 189: restartCargo();
 10024  0D21  318C  24F4         	fcall	_restartCargo
 10025  0D23  0008               	return
 10026  0D24                     __end_of_resetTrainData:	
 10027                           
 10028                           	psect	text27
 10029  0CF4                     __ptext27:	
 10030 ;; *************** function _restartCargo *****************
 10031 ;; Defined at:
 10032 ;;		line 36 in file "struct.c"
 10033 ;; Parameters:    Size  Location     Type
 10034 ;;		None
 10035 ;; Auto vars:     Size  Location     Type
 10036 ;;		None
 10037 ;; Return value:  Size  Location     Type
 10038 ;;                  1    wreg      void 
 10039 ;; Registers used:
 10040 ;;		status,2
 10041 ;; Tracked objects:
 10042 ;;		On entry : 0/0
 10043 ;;		On exit  : 0/0
 10044 ;;		Unchanged: 0/0
 10045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10046 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10047 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10048 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10049 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10050 ;;Total ram usage:        0 bytes
 10051 ;; Hardware stack levels used:    1
 10052 ;; Hardware stack levels required when called:    3
 10053 ;; This function calls:
 10054 ;;		Nothing
 10055 ;; This function is called by:
 10056 ;;		_resetTrainData
 10057 ;;		_readCargo
 10058 ;;		_EEPROM_download
 10059 ;; This function uses a non-reentrant model
 10060 ;;
 10061                           
 10062                           
 10063                           ;psect for function _restartCargo
 10064  0CF4                     _restartCargo:	
 10065                           
 10066                           ;struct.c: 37: cargoData.address = 0;
 10067                           
 10068                           ;incstack = 0
 10069                           ; Regs used in _restartCargo: [status,2]
 10070  0CF4  0020               	movlb	0	; select bank0
 10071  0CF5  01DD               	clrf	_cargoData+4
 10072                           
 10073                           ;struct.c: 38: cargoData.command = 0;
 10074  0CF6  01DB               	clrf	_cargoData+2
 10075                           
 10076                           ;struct.c: 39: cargoData.index = 0;
 10077  0CF7  01DC               	clrf	_cargoData+3
 10078  0CF8  0008               	return
 10079  0CF9                     __end_of_restartCargo:	
 10080                           
 10081                           	psect	text28
 10082  06B8                     __ptext28:	
 10083 ;; *************** function _isTrainSt *****************
 10084 ;; Defined at:
 10085 ;;		line 192 in file "D:/programdata/16F18346_Link_IC.X/main.c"
 10086 ;; Parameters:    Size  Location     Type
 10087 ;;  buf             1    wreg     unsigned char 
 10088 ;; Auto vars:     Size  Location     Type
 10089 ;;  buf             1   10[BANK0 ] unsigned char 
 10090 ;; Return value:  Size  Location     Type
 10091 ;;		None               void
 10092 ;; Registers used:
 10093 ;;		wreg, status,2, status,0
 10094 ;; Tracked objects:
 10095 ;;		On entry : 0/0
 10096 ;;		On exit  : 0/0
 10097 ;;		Unchanged: 0/0
 10098 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10099 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10100 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10101 ;;      Temps:          0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10102 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10103 ;;Total ram usage:       11 bytes
 10104 ;; Hardware stack levels used:    1
 10105 ;; Hardware stack levels required when called:    3
 10106 ;; This function calls:
 10107 ;;		Nothing
 10108 ;; This function is called by:
 10109 ;;		_initTrain
 10110 ;; This function uses a non-reentrant model
 10111 ;;
 10112                           
 10113                           
 10114                           ;psect for function _isTrainSt
 10115  06B8                     _isTrainSt:	
 10116                           
 10117                           ;incstack = 0
 10118                           ; Regs used in _isTrainSt: [wreg+status,2+status,0]
 10119                           ;isTrainSt@buf stored from wreg
 10120  06B8  0020               	movlb	0	; select bank0
 10121  06B9  00AA               	movwf	isTrainSt@buf
 10122                           
 10123                           ;main.c: 193: startTrainBytes = startTrainBytes << 8 | (buf +SPI_OFFSET_BYTE);
 10124  06BA  082A               	movf	isTrainSt@buf,w
 10125  06BB  077D               	addwf	_SPI_OFFSET_BYTE,w
 10126  06BC  00A0               	movwf	??_isTrainSt
 10127  06BD  01A1               	clrf	??_isTrainSt+1
 10128  06BE  0DA1               	rlf	??_isTrainSt+1,f
 10129  06BF  0820               	movf	??_isTrainSt,w
 10130  06C0  00A2               	movwf	??_isTrainSt+2
 10131  06C1  0821               	movf	??_isTrainSt+1,w
 10132  06C2  00A3               	movwf	??_isTrainSt+3
 10133  06C3  3000               	movlw	0
 10134  06C4  1BA3               	btfsc	??_isTrainSt+3,7
 10135  06C5  30FF               	movlw	255
 10136  06C6  00A4               	movwf	??_isTrainSt+4
 10137  06C7  00A5               	movwf	??_isTrainSt+5
 10138  06C8  0021               	movlb	1	; select bank1
 10139  06C9  0841               	movf	_startTrainBytes^(0+128),w
 10140  06CA  0020               	movlb	0	; select bank0
 10141  06CB  00A6               	movwf	??_isTrainSt+6
 10142  06CC  0021               	movlb	1	; select bank1
 10143  06CD  0842               	movf	(_startTrainBytes+1)^(0+128),w
 10144  06CE  0020               	movlb	0	; select bank0
 10145  06CF  00A7               	movwf	??_isTrainSt+7
 10146  06D0  0021               	movlb	1	; select bank1
 10147  06D1  0843               	movf	(_startTrainBytes+2)^(0+128),w
 10148  06D2  0020               	movlb	0	; select bank0
 10149  06D3  00A8               	movwf	??_isTrainSt+8
 10150  06D4  0021               	movlb	1	; select bank1
 10151  06D5  0844               	movf	(_startTrainBytes+3)^(0+128),w
 10152  06D6  0020               	movlb	0	; select bank0
 10153  06D7  00A9               	movwf	??_isTrainSt+9
 10154  06D8  3008               	movlw	8
 10155  06D9                     u2405:	
 10156  06D9  35A6               	lslf	??_isTrainSt+6,f
 10157  06DA  0DA7               	rlf	??_isTrainSt+7,f
 10158  06DB  0DA8               	rlf	??_isTrainSt+8,f
 10159  06DC  0DA9               	rlf	??_isTrainSt+9,f
 10160  06DD  0B89               	decfsz	9,f
 10161  06DE  2ED9               	goto	u2405
 10162  06DF  0826               	movf	??_isTrainSt+6,w
 10163  06E0  04A2               	iorwf	??_isTrainSt+2,f
 10164  06E1  0827               	movf	??_isTrainSt+7,w
 10165  06E2  04A3               	iorwf	??_isTrainSt+3,f
 10166  06E3  0828               	movf	??_isTrainSt+8,w
 10167  06E4  04A4               	iorwf	??_isTrainSt+4,f
 10168  06E5  0829               	movf	??_isTrainSt+9,w
 10169  06E6  04A5               	iorwf	??_isTrainSt+5,f
 10170  06E7  0825               	movf	??_isTrainSt+5,w
 10171  06E8  0021               	movlb	1	; select bank1
 10172  06E9  00C4               	movwf	(_startTrainBytes+3)^(0+128)
 10173  06EA  0020               	movlb	0	; select bank0
 10174  06EB  0824               	movf	??_isTrainSt+4,w
 10175  06EC  0021               	movlb	1	; select bank1
 10176  06ED  00C3               	movwf	(_startTrainBytes+2)^(0+128)
 10177  06EE  0020               	movlb	0	; select bank0
 10178  06EF  0823               	movf	??_isTrainSt+3,w
 10179  06F0  0021               	movlb	1	; select bank1
 10180  06F1  00C2               	movwf	(_startTrainBytes+1)^(0+128)
 10181  06F2  0020               	movlb	0	; select bank0
 10182  06F3  0822               	movf	??_isTrainSt+2,w
 10183  06F4  0021               	movlb	1	; select bank1
 10184  06F5  00C1               	movwf	_startTrainBytes^(0+128)
 10185                           
 10186                           ;main.c: 194: if(startTrainBytes == 0xFFFFFFFF){
 10187  06F6  0A41               	incf	_startTrainBytes^(0+128),w
 10188  06F7  1D03               	skipz
 10189  06F8  2F04               	goto	l3645
 10190  06F9  0A42               	incf	(_startTrainBytes+1)^(0+128),w
 10191  06FA  1D03               	skipz
 10192  06FB  2F04               	goto	l3645
 10193  06FC  0A43               	incf	(_startTrainBytes+2)^(0+128),w
 10194  06FD  1D03               	skipz
 10195  06FE  2F04               	goto	l3645
 10196  06FF  0A44               	incf	(_startTrainBytes+3)^(0+128),w
 10197  0700  1D03               	btfss	3,2
 10198  0701  2F04               	goto	l3645
 10199                           
 10200                           ;main.c: 195: return 1;
 10201  0702  1403               	setc
 10202                           
 10203                           ;main.c: 196: }else{
 10204  0703  0008               	return
 10205  0704                     l3645:	
 10206                           
 10207                           ;main.c: 197: return 0;
 10208  0704  1003               	clrc
 10209  0705  0008               	return
 10210  0706                     __end_of_isTrainSt:	
 10211                           
 10212                           	psect	text29
 10213  0E43                     __ptext29:	
 10214 ;; *************** function _initPosition *****************
 10215 ;; Defined at:
 10216 ;;		line 8 in file "D:/programdata/16F18346_Link_IC.X/cal_position.c"
 10217 ;; Parameters:    Size  Location     Type
 10218 ;;		None
 10219 ;; Auto vars:     Size  Location     Type
 10220 ;;		None
 10221 ;; Return value:  Size  Location     Type
 10222 ;;                  1    wreg      void 
 10223 ;; Registers used:
 10224 ;;		wreg, status,2
 10225 ;; Tracked objects:
 10226 ;;		On entry : 0/0
 10227 ;;		On exit  : 0/0
 10228 ;;		Unchanged: 0/0
 10229 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10230 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10231 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10232 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10233 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10234 ;;Total ram usage:        0 bytes
 10235 ;; Hardware stack levels used:    1
 10236 ;; Hardware stack levels required when called:    3
 10237 ;; This function calls:
 10238 ;;		Nothing
 10239 ;; This function is called by:
 10240 ;;		_main
 10241 ;; This function uses a non-reentrant model
 10242 ;;
 10243                           
 10244                           
 10245                           ;psect for function _initPosition
 10246  0E43                     _initPosition:	
 10247                           
 10248                           ;cal_position.c: 9: position.moter_lotate = 0;
 10249                           
 10250                           ;incstack = 0
 10251                           ; Regs used in _initPosition: [wreg+status,2]
 10252  0E43  0022               	movlb	2	; select bank2
 10253  0E44  01A0               	clrf	_position^(0+256)
 10254  0E45  01A1               	clrf	(_position+1)^(0+256)
 10255                           
 10256                           ;cal_position.c: 10: position.pos_x = 0;
 10257  0E46  3000               	movlw	0
 10258  0E47  00A2               	movwf	(_position^(0+256)+2)
 10259  0E48  3000               	movlw	0
 10260  0E49  00A3               	movwf	((_position+1)^(0+256)+2)
 10261  0E4A  3000               	movlw	0
 10262  0E4B  00A4               	movwf	((_position+2)^(0+256)+2)
 10263                           
 10264                           ;cal_position.c: 11: position.pos_y = 0;
 10265  0E4C  3000               	movlw	0
 10266  0E4D  00A5               	movwf	(_position^(0+256)+5)
 10267  0E4E  3000               	movlw	0
 10268  0E4F  00A6               	movwf	((_position+1)^(0+256)+5)
 10269  0E50  3000               	movlw	0
 10270  0E51  00A7               	movwf	((_position+2)^(0+256)+5)
 10271                           
 10272                           ;cal_position.c: 12: position.pos_z = 0;
 10273  0E52  3000               	movlw	0
 10274  0E53  00A8               	movwf	(_position^(0+256)+8)
 10275  0E54  3000               	movlw	0
 10276  0E55  00A9               	movwf	((_position+1)^(0+256)+8)
 10277  0E56  3000               	movlw	0
 10278  0E57  00AA               	movwf	((_position+2)^(0+256)+8)
 10279                           
 10280                           ;cal_position.c: 13: position.rotate_x = 0;
 10281  0E58  3000               	movlw	0
 10282  0E59  00AB               	movwf	(_position^(0+256)+11)
 10283  0E5A  3000               	movlw	0
 10284  0E5B  00AC               	movwf	((_position+1)^(0+256)+11)
 10285  0E5C  3000               	movlw	0
 10286  0E5D  00AD               	movwf	((_position+2)^(0+256)+11)
 10287                           
 10288                           ;cal_position.c: 14: position.rotate_y = 0;
 10289  0E5E  3000               	movlw	0
 10290  0E5F  00AE               	movwf	(_position^(0+256)+14)
 10291  0E60  3000               	movlw	0
 10292  0E61  00AF               	movwf	((_position+1)^(0+256)+14)
 10293  0E62  3000               	movlw	0
 10294  0E63  00B0               	movwf	((_position+2)^(0+256)+14)
 10295                           
 10296                           ;cal_position.c: 15: position.rotate_z = 0;
 10297  0E64  3000               	movlw	0
 10298  0E65  00B1               	movwf	(_position^(0+256)+17)
 10299  0E66  3000               	movlw	0
 10300  0E67  00B2               	movwf	((_position+1)^(0+256)+17)
 10301  0E68  3000               	movlw	0
 10302  0E69  00B3               	movwf	((_position+2)^(0+256)+17)
 10303  0E6A  0008               	return
 10304  0E6B                     __end_of_initPosition:	
 10305                           
 10306                           	psect	text30
 10307  0571                     __ptext30:	
 10308 ;; *************** function _initIndex *****************
 10309 ;; Defined at:
 10310 ;;		line 11 in file "D:/programdata/16F18346_Link_IC.X/index.c"
 10311 ;; Parameters:    Size  Location     Type
 10312 ;;		None
 10313 ;; Auto vars:     Size  Location     Type
 10314 ;;		None
 10315 ;; Return value:  Size  Location     Type
 10316 ;;                  1    wreg      void 
 10317 ;; Registers used:
 10318 ;;		wreg
 10319 ;; Tracked objects:
 10320 ;;		On entry : 0/0
 10321 ;;		On exit  : 0/0
 10322 ;;		Unchanged: 0/0
 10323 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10324 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10325 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10326 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10327 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10328 ;;Total ram usage:        1 bytes
 10329 ;; Hardware stack levels used:    1
 10330 ;; Hardware stack levels required when called:    3
 10331 ;; This function calls:
 10332 ;;		Nothing
 10333 ;; This function is called by:
 10334 ;;		_main
 10335 ;; This function uses a non-reentrant model
 10336 ;;
 10337                           
 10338                           
 10339                           ;psect for function _initIndex
 10340  0571                     _initIndex:	
 10341                           
 10342                           ;index.c: 12: index[0] = 0b00111111;
 10343                           
 10344                           ;incstack = 0
 10345                           ; Regs used in _initIndex: [wreg]
 10346  0571  303F               	movlw	63
 10347  0572  0020               	movlb	0	; select bank0
 10348  0573  00A0               	movwf	??_initIndex
 10349  0574  0820               	movf	??_initIndex,w
 10350  0575  0023               	movlb	3	; select bank3
 10351  0576  00A0               	movwf	_index^(0+384)
 10352                           
 10353                           ;index.c: 13: index[1] = 0b01111111;
 10354  0577  307F               	movlw	127
 10355  0578  0020               	movlb	0	; select bank0
 10356  0579  00A0               	movwf	??_initIndex
 10357  057A  0820               	movf	??_initIndex,w
 10358  057B  0023               	movlb	3	; select bank3
 10359  057C  00A1               	movwf	(_index^(0+384)+1)
 10360                           
 10361                           ;index.c: 14: index[2] = 0b10011111;;
 10362  057D  309F               	movlw	159
 10363  057E  0020               	movlb	0	; select bank0
 10364  057F  00A0               	movwf	??_initIndex
 10365  0580  0820               	movf	??_initIndex,w
 10366  0581  0023               	movlb	3	; select bank3
 10367  0582  00A2               	movwf	(_index^(0+384)+2)
 10368                           
 10369                           ;index.c: 15: index[3] = 0b10101111;
 10370  0583  30AF               	movlw	175
 10371  0584  0020               	movlb	0	; select bank0
 10372  0585  00A0               	movwf	??_initIndex
 10373  0586  0820               	movf	??_initIndex,w
 10374  0587  0023               	movlb	3	; select bank3
 10375  0588  00A3               	movwf	(_index^(0+384)+3)
 10376                           
 10377                           ;index.c: 16: index[4] = 0b10111111;
 10378  0589  30BF               	movlw	191
 10379  058A  0020               	movlb	0	; select bank0
 10380  058B  00A0               	movwf	??_initIndex
 10381  058C  0820               	movf	??_initIndex,w
 10382  058D  0023               	movlb	3	; select bank3
 10383  058E  00A4               	movwf	(_index^(0+384)+4)
 10384                           
 10385                           ;index.c: 17: index[5] = 0b11001111;
 10386  058F  30CF               	movlw	207
 10387  0590  0020               	movlb	0	; select bank0
 10388  0591  00A0               	movwf	??_initIndex
 10389  0592  0820               	movf	??_initIndex,w
 10390  0593  0023               	movlb	3	; select bank3
 10391  0594  00A5               	movwf	(_index^(0+384)+5)
 10392                           
 10393                           ;index.c: 18: index[6] = 0b11010111;
 10394  0595  30D7               	movlw	215
 10395  0596  0020               	movlb	0	; select bank0
 10396  0597  00A0               	movwf	??_initIndex
 10397  0598  0820               	movf	??_initIndex,w
 10398  0599  0023               	movlb	3	; select bank3
 10399  059A  00A6               	movwf	(_index^(0+384)+6)
 10400                           
 10401                           ;index.c: 19: index[7] = 0b11011111;
 10402  059B  30DF               	movlw	223
 10403  059C  0020               	movlb	0	; select bank0
 10404  059D  00A0               	movwf	??_initIndex
 10405  059E  0820               	movf	??_initIndex,w
 10406  059F  0023               	movlb	3	; select bank3
 10407  05A0  00A7               	movwf	(_index^(0+384)+7)
 10408                           
 10409                           ;index.c: 20: index[8] = 0b11100111;
 10410  05A1  30E7               	movlw	231
 10411  05A2  0020               	movlb	0	; select bank0
 10412  05A3  00A0               	movwf	??_initIndex
 10413  05A4  0820               	movf	??_initIndex,w
 10414  05A5  0023               	movlb	3	; select bank3
 10415  05A6  00A8               	movwf	(_index^(0+384)+8)
 10416                           
 10417                           ;index.c: 21: index[9] = 0b11101011;
 10418  05A7  30EB               	movlw	235
 10419  05A8  0020               	movlb	0	; select bank0
 10420  05A9  00A0               	movwf	??_initIndex
 10421  05AA  0820               	movf	??_initIndex,w
 10422  05AB  0023               	movlb	3	; select bank3
 10423  05AC  00A9               	movwf	(_index^(0+384)+9)
 10424                           
 10425                           ;index.c: 22: index[10] = 0b11101111;
 10426  05AD  30EF               	movlw	239
 10427  05AE  0020               	movlb	0	; select bank0
 10428  05AF  00A0               	movwf	??_initIndex
 10429  05B0  0820               	movf	??_initIndex,w
 10430  05B1  0023               	movlb	3	; select bank3
 10431  05B2  00AA               	movwf	(_index^(0+384)+10)
 10432                           
 10433                           ;index.c: 23: index[11] = 0b11110001;
 10434  05B3  30F1               	movlw	241
 10435  05B4  0020               	movlb	0	; select bank0
 10436  05B5  00A0               	movwf	??_initIndex
 10437  05B6  0820               	movf	??_initIndex,w
 10438  05B7  0023               	movlb	3	; select bank3
 10439  05B8  00AB               	movwf	(_index^(0+384)+11)
 10440                           
 10441                           ;index.c: 24: index[12] = 0b11110011;
 10442  05B9  30F3               	movlw	243
 10443  05BA  0020               	movlb	0	; select bank0
 10444  05BB  00A0               	movwf	??_initIndex
 10445  05BC  0820               	movf	??_initIndex,w
 10446  05BD  0023               	movlb	3	; select bank3
 10447  05BE  00AC               	movwf	(_index^(0+384)+12)
 10448                           
 10449                           ;index.c: 25: index[13] = 0b11110101;
 10450  05BF  30F5               	movlw	245
 10451  05C0  0020               	movlb	0	; select bank0
 10452  05C1  00A0               	movwf	??_initIndex
 10453  05C2  0820               	movf	??_initIndex,w
 10454  05C3  0023               	movlb	3	; select bank3
 10455  05C4  00AD               	movwf	(_index^(0+384)+13)
 10456                           
 10457                           ;index.c: 26: index[14] = 0b11110111;
 10458  05C5  30F7               	movlw	247
 10459  05C6  0020               	movlb	0	; select bank0
 10460  05C7  00A0               	movwf	??_initIndex
 10461  05C8  0820               	movf	??_initIndex,w
 10462  05C9  0023               	movlb	3	; select bank3
 10463  05CA  00AE               	movwf	(_index^(0+384)+14)
 10464                           
 10465                           ;index.c: 27: index[15] = 0b11111000;
 10466  05CB  30F8               	movlw	248
 10467  05CC  0020               	movlb	0	; select bank0
 10468  05CD  00A0               	movwf	??_initIndex
 10469  05CE  0820               	movf	??_initIndex,w
 10470  05CF  0023               	movlb	3	; select bank3
 10471  05D0  00AF               	movwf	(_index^(0+384)+15)
 10472                           
 10473                           ;index.c: 28: index[16] = 0b11111001;
 10474  05D1  30F9               	movlw	249
 10475  05D2  0020               	movlb	0	; select bank0
 10476  05D3  00A0               	movwf	??_initIndex
 10477  05D4  0820               	movf	??_initIndex,w
 10478  05D5  0023               	movlb	3	; select bank3
 10479  05D6  00B0               	movwf	(_index^(0+384)+16)
 10480                           
 10481                           ;index.c: 29: index[17] = 0b11111010;
 10482  05D7  30FA               	movlw	250
 10483  05D8  0020               	movlb	0	; select bank0
 10484  05D9  00A0               	movwf	??_initIndex
 10485  05DA  0820               	movf	??_initIndex,w
 10486  05DB  0023               	movlb	3	; select bank3
 10487  05DC  00B1               	movwf	(_index^(0+384)+17)
 10488  05DD  0008               	return
 10489  05DE                     __end_of_initIndex:	
 10490                           
 10491                           	psect	text31
 10492  05DE                     __ptext31:	
 10493 ;; *************** function _initComu_types *****************
 10494 ;; Defined at:
 10495 ;;		line 20 in file "D:/programdata/16F18346_Link_IC.X/comu_type.c"
 10496 ;; Parameters:    Size  Location     Type
 10497 ;;		None
 10498 ;; Auto vars:     Size  Location     Type
 10499 ;;		None
 10500 ;; Return value:  Size  Location     Type
 10501 ;;                  1    wreg      void 
 10502 ;; Registers used:
 10503 ;;		wreg
 10504 ;; Tracked objects:
 10505 ;;		On entry : 0/0
 10506 ;;		On exit  : 0/0
 10507 ;;		Unchanged: 0/0
 10508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10509 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10510 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10511 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10512 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10513 ;;Total ram usage:        1 bytes
 10514 ;; Hardware stack levels used:    1
 10515 ;; Hardware stack levels required when called:    3
 10516 ;; This function calls:
 10517 ;;		Nothing
 10518 ;; This function is called by:
 10519 ;;		_main
 10520 ;; This function uses a non-reentrant model
 10521 ;;
 10522                           
 10523                           
 10524                           ;psect for function _initComu_types
 10525  05DE                     _initComu_types:	
 10526                           
 10527                           ;comu_type.c: 21: comu_types[0] = 0b00111111;
 10528                           
 10529                           ;incstack = 0
 10530                           ; Regs used in _initComu_types: [wreg]
 10531  05DE  303F               	movlw	63
 10532  05DF  0020               	movlb	0	; select bank0
 10533  05E0  00A0               	movwf	??_initComu_types
 10534  05E1  0820               	movf	??_initComu_types,w
 10535  05E2  0022               	movlb	2	; select bank2
 10536  05E3  00D8               	movwf	_comu_types^(0+256)
 10537                           
 10538                           ;comu_type.c: 22: comu_types[1] = 0b01111111;
 10539  05E4  307F               	movlw	127
 10540  05E5  0020               	movlb	0	; select bank0
 10541  05E6  00A0               	movwf	??_initComu_types
 10542  05E7  0820               	movf	??_initComu_types,w
 10543  05E8  0022               	movlb	2	; select bank2
 10544  05E9  00D9               	movwf	(_comu_types^(0+256)+1)
 10545                           
 10546                           ;comu_type.c: 23: comu_types[2] = 0b10011111;
 10547  05EA  309F               	movlw	159
 10548  05EB  0020               	movlb	0	; select bank0
 10549  05EC  00A0               	movwf	??_initComu_types
 10550  05ED  0820               	movf	??_initComu_types,w
 10551  05EE  0022               	movlb	2	; select bank2
 10552  05EF  00DA               	movwf	(_comu_types^(0+256)+2)
 10553                           
 10554                           ;comu_type.c: 24: comu_types[3] = 0b10101111;
 10555  05F0  30AF               	movlw	175
 10556  05F1  0020               	movlb	0	; select bank0
 10557  05F2  00A0               	movwf	??_initComu_types
 10558  05F3  0820               	movf	??_initComu_types,w
 10559  05F4  0022               	movlb	2	; select bank2
 10560  05F5  00DB               	movwf	(_comu_types^(0+256)+3)
 10561                           
 10562                           ;comu_type.c: 25: comu_types[4] = 0b10111111;
 10563  05F6  30BF               	movlw	191
 10564  05F7  0020               	movlb	0	; select bank0
 10565  05F8  00A0               	movwf	??_initComu_types
 10566  05F9  0820               	movf	??_initComu_types,w
 10567  05FA  0022               	movlb	2	; select bank2
 10568  05FB  00DC               	movwf	(_comu_types^(0+256)+4)
 10569                           
 10570                           ;comu_type.c: 26: comu_types[5] = 0b11001111;
 10571  05FC  30CF               	movlw	207
 10572  05FD  0020               	movlb	0	; select bank0
 10573  05FE  00A0               	movwf	??_initComu_types
 10574  05FF  0820               	movf	??_initComu_types,w
 10575  0600  0022               	movlb	2	; select bank2
 10576  0601  00DD               	movwf	(_comu_types^(0+256)+5)
 10577                           
 10578                           ;comu_type.c: 27: comu_types[6] = 0b11010111;
 10579  0602  30D7               	movlw	215
 10580  0603  0020               	movlb	0	; select bank0
 10581  0604  00A0               	movwf	??_initComu_types
 10582  0605  0820               	movf	??_initComu_types,w
 10583  0606  0022               	movlb	2	; select bank2
 10584  0607  00DE               	movwf	(_comu_types^(0+256)+6)
 10585                           
 10586                           ;comu_type.c: 28: comu_types[7] = 0b11011111;
 10587  0608  30DF               	movlw	223
 10588  0609  0020               	movlb	0	; select bank0
 10589  060A  00A0               	movwf	??_initComu_types
 10590  060B  0820               	movf	??_initComu_types,w
 10591  060C  0022               	movlb	2	; select bank2
 10592  060D  00DF               	movwf	(_comu_types^(0+256)+7)
 10593                           
 10594                           ;comu_type.c: 29: comu_types[8] = 0b11100111;
 10595  060E  30E7               	movlw	231
 10596  060F  0020               	movlb	0	; select bank0
 10597  0610  00A0               	movwf	??_initComu_types
 10598  0611  0820               	movf	??_initComu_types,w
 10599  0612  0022               	movlb	2	; select bank2
 10600  0613  00E0               	movwf	(_comu_types^(0+256)+8)
 10601                           
 10602                           ;comu_type.c: 30: comu_types[9] = 0b11101011;
 10603  0614  30EB               	movlw	235
 10604  0615  0020               	movlb	0	; select bank0
 10605  0616  00A0               	movwf	??_initComu_types
 10606  0617  0820               	movf	??_initComu_types,w
 10607  0618  0022               	movlb	2	; select bank2
 10608  0619  00E1               	movwf	(_comu_types^(0+256)+9)
 10609                           
 10610                           ;comu_type.c: 31: comu_types[10] = 0b11101111;
 10611  061A  30EF               	movlw	239
 10612  061B  0020               	movlb	0	; select bank0
 10613  061C  00A0               	movwf	??_initComu_types
 10614  061D  0820               	movf	??_initComu_types,w
 10615  061E  0022               	movlb	2	; select bank2
 10616  061F  00E2               	movwf	(_comu_types^(0+256)+10)
 10617                           
 10618                           ;comu_type.c: 32: comu_types[11] = 0b11110001;
 10619  0620  30F1               	movlw	241
 10620  0621  0020               	movlb	0	; select bank0
 10621  0622  00A0               	movwf	??_initComu_types
 10622  0623  0820               	movf	??_initComu_types,w
 10623  0624  0022               	movlb	2	; select bank2
 10624  0625  00E3               	movwf	(_comu_types^(0+256)+11)
 10625                           
 10626                           ;comu_type.c: 33: comu_types[12] = 0b11110011;
 10627  0626  30F3               	movlw	243
 10628  0627  0020               	movlb	0	; select bank0
 10629  0628  00A0               	movwf	??_initComu_types
 10630  0629  0820               	movf	??_initComu_types,w
 10631  062A  0022               	movlb	2	; select bank2
 10632  062B  00E4               	movwf	(_comu_types^(0+256)+12)
 10633                           
 10634                           ;comu_type.c: 34: comu_types[13] = 0b11110101;
 10635  062C  30F5               	movlw	245
 10636  062D  0020               	movlb	0	; select bank0
 10637  062E  00A0               	movwf	??_initComu_types
 10638  062F  0820               	movf	??_initComu_types,w
 10639  0630  0022               	movlb	2	; select bank2
 10640  0631  00E5               	movwf	(_comu_types^(0+256)+13)
 10641                           
 10642                           ;comu_type.c: 35: comu_types[14] = 0b11110111;
 10643  0632  30F7               	movlw	247
 10644  0633  0020               	movlb	0	; select bank0
 10645  0634  00A0               	movwf	??_initComu_types
 10646  0635  0820               	movf	??_initComu_types,w
 10647  0636  0022               	movlb	2	; select bank2
 10648  0637  00E6               	movwf	(_comu_types^(0+256)+14)
 10649                           
 10650                           ;comu_type.c: 36: comu_types[15] = 0b11111000;
 10651  0638  30F8               	movlw	248
 10652  0639  0020               	movlb	0	; select bank0
 10653  063A  00A0               	movwf	??_initComu_types
 10654  063B  0820               	movf	??_initComu_types,w
 10655  063C  0022               	movlb	2	; select bank2
 10656  063D  00E7               	movwf	(_comu_types^(0+256)+15)
 10657                           
 10658                           ;comu_type.c: 37: comu_types[16] = 0b11111001;
 10659  063E  30F9               	movlw	249
 10660  063F  0020               	movlb	0	; select bank0
 10661  0640  00A0               	movwf	??_initComu_types
 10662  0641  0820               	movf	??_initComu_types,w
 10663  0642  0022               	movlb	2	; select bank2
 10664  0643  00E8               	movwf	(_comu_types^(0+256)+16)
 10665                           
 10666                           ;comu_type.c: 38: comu_types[17] = 0b11111010;
 10667  0644  30FA               	movlw	250
 10668  0645  0020               	movlb	0	; select bank0
 10669  0646  00A0               	movwf	??_initComu_types
 10670  0647  0820               	movf	??_initComu_types,w
 10671  0648  0022               	movlb	2	; select bank2
 10672  0649  00E9               	movwf	(_comu_types^(0+256)+17)
 10673  064A  0008               	return
 10674  064B                     __end_of_initComu_types:	
 10675                           
 10676                           	psect	text32
 10677  064B                     __ptext32:	
 10678 ;; *************** function _initComand *****************
 10679 ;; Defined at:
 10680 ;;		line 15 in file "D:/programdata/16F18346_Link_IC.X/command.c"
 10681 ;; Parameters:    Size  Location     Type
 10682 ;;		None
 10683 ;; Auto vars:     Size  Location     Type
 10684 ;;		None
 10685 ;; Return value:  Size  Location     Type
 10686 ;;                  1    wreg      void 
 10687 ;; Registers used:
 10688 ;;		wreg
 10689 ;; Tracked objects:
 10690 ;;		On entry : 0/0
 10691 ;;		On exit  : 0/0
 10692 ;;		Unchanged: 0/0
 10693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10694 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10695 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10696 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10697 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10698 ;;Total ram usage:        1 bytes
 10699 ;; Hardware stack levels used:    1
 10700 ;; Hardware stack levels required when called:    3
 10701 ;; This function calls:
 10702 ;;		Nothing
 10703 ;; This function is called by:
 10704 ;;		_main
 10705 ;; This function uses a non-reentrant model
 10706 ;;
 10707                           
 10708                           
 10709                           ;psect for function _initComand
 10710  064B                     _initComand:	
 10711                           
 10712                           ;command.c: 16: command[0] = 0b00111111;
 10713                           
 10714                           ;incstack = 0
 10715                           ; Regs used in _initComand: [wreg]
 10716  064B  303F               	movlw	63
 10717  064C  0020               	movlb	0	; select bank0
 10718  064D  00A0               	movwf	??_initComand
 10719  064E  0820               	movf	??_initComand,w
 10720  064F  0021               	movlb	1	; select bank1
 10721  0650  00A0               	movwf	_command^(0+128)
 10722                           
 10723                           ;command.c: 17: command[1] = 0b01111111;
 10724  0651  307F               	movlw	127
 10725  0652  0020               	movlb	0	; select bank0
 10726  0653  00A0               	movwf	??_initComand
 10727  0654  0820               	movf	??_initComand,w
 10728  0655  0021               	movlb	1	; select bank1
 10729  0656  00A1               	movwf	(_command^(0+128)+1)
 10730                           
 10731                           ;command.c: 18: command[2] = 0b10011111;;
 10732  0657  309F               	movlw	159
 10733  0658  0020               	movlb	0	; select bank0
 10734  0659  00A0               	movwf	??_initComand
 10735  065A  0820               	movf	??_initComand,w
 10736  065B  0021               	movlb	1	; select bank1
 10737  065C  00A2               	movwf	(_command^(0+128)+2)
 10738                           
 10739                           ;command.c: 19: command[3] = 0b10101111;
 10740  065D  30AF               	movlw	175
 10741  065E  0020               	movlb	0	; select bank0
 10742  065F  00A0               	movwf	??_initComand
 10743  0660  0820               	movf	??_initComand,w
 10744  0661  0021               	movlb	1	; select bank1
 10745  0662  00A3               	movwf	(_command^(0+128)+3)
 10746                           
 10747                           ;command.c: 20: command[4] = 0b10111111;
 10748  0663  30BF               	movlw	191
 10749  0664  0020               	movlb	0	; select bank0
 10750  0665  00A0               	movwf	??_initComand
 10751  0666  0820               	movf	??_initComand,w
 10752  0667  0021               	movlb	1	; select bank1
 10753  0668  00A4               	movwf	(_command^(0+128)+4)
 10754                           
 10755                           ;command.c: 21: command[5] = 0b11001111;
 10756  0669  30CF               	movlw	207
 10757  066A  0020               	movlb	0	; select bank0
 10758  066B  00A0               	movwf	??_initComand
 10759  066C  0820               	movf	??_initComand,w
 10760  066D  0021               	movlb	1	; select bank1
 10761  066E  00A5               	movwf	(_command^(0+128)+5)
 10762                           
 10763                           ;command.c: 22: command[6] = 0b11010111;
 10764  066F  30D7               	movlw	215
 10765  0670  0020               	movlb	0	; select bank0
 10766  0671  00A0               	movwf	??_initComand
 10767  0672  0820               	movf	??_initComand,w
 10768  0673  0021               	movlb	1	; select bank1
 10769  0674  00A6               	movwf	(_command^(0+128)+6)
 10770                           
 10771                           ;command.c: 23: command[7] = 0b11011111;
 10772  0675  30DF               	movlw	223
 10773  0676  0020               	movlb	0	; select bank0
 10774  0677  00A0               	movwf	??_initComand
 10775  0678  0820               	movf	??_initComand,w
 10776  0679  0021               	movlb	1	; select bank1
 10777  067A  00A7               	movwf	(_command^(0+128)+7)
 10778                           
 10779                           ;command.c: 24: command[8] = 0b11100111;
 10780  067B  30E7               	movlw	231
 10781  067C  0020               	movlb	0	; select bank0
 10782  067D  00A0               	movwf	??_initComand
 10783  067E  0820               	movf	??_initComand,w
 10784  067F  0021               	movlb	1	; select bank1
 10785  0680  00A8               	movwf	(_command^(0+128)+8)
 10786                           
 10787                           ;command.c: 25: command[9] = 0b11101011;
 10788  0681  30EB               	movlw	235
 10789  0682  0020               	movlb	0	; select bank0
 10790  0683  00A0               	movwf	??_initComand
 10791  0684  0820               	movf	??_initComand,w
 10792  0685  0021               	movlb	1	; select bank1
 10793  0686  00A9               	movwf	(_command^(0+128)+9)
 10794                           
 10795                           ;command.c: 26: command[10] = 0b11101111;
 10796  0687  30EF               	movlw	239
 10797  0688  0020               	movlb	0	; select bank0
 10798  0689  00A0               	movwf	??_initComand
 10799  068A  0820               	movf	??_initComand,w
 10800  068B  0021               	movlb	1	; select bank1
 10801  068C  00AA               	movwf	(_command^(0+128)+10)
 10802                           
 10803                           ;command.c: 27: command[11] = 0b11110001;
 10804  068D  30F1               	movlw	241
 10805  068E  0020               	movlb	0	; select bank0
 10806  068F  00A0               	movwf	??_initComand
 10807  0690  0820               	movf	??_initComand,w
 10808  0691  0021               	movlb	1	; select bank1
 10809  0692  00AB               	movwf	(_command^(0+128)+11)
 10810                           
 10811                           ;command.c: 28: command[12] = 0b11110011;
 10812  0693  30F3               	movlw	243
 10813  0694  0020               	movlb	0	; select bank0
 10814  0695  00A0               	movwf	??_initComand
 10815  0696  0820               	movf	??_initComand,w
 10816  0697  0021               	movlb	1	; select bank1
 10817  0698  00AC               	movwf	(_command^(0+128)+12)
 10818                           
 10819                           ;command.c: 29: command[13] = 0b11110101;
 10820  0699  30F5               	movlw	245
 10821  069A  0020               	movlb	0	; select bank0
 10822  069B  00A0               	movwf	??_initComand
 10823  069C  0820               	movf	??_initComand,w
 10824  069D  0021               	movlb	1	; select bank1
 10825  069E  00AD               	movwf	(_command^(0+128)+13)
 10826                           
 10827                           ;command.c: 30: command[14] = 0b11110111;
 10828  069F  30F7               	movlw	247
 10829  06A0  0020               	movlb	0	; select bank0
 10830  06A1  00A0               	movwf	??_initComand
 10831  06A2  0820               	movf	??_initComand,w
 10832  06A3  0021               	movlb	1	; select bank1
 10833  06A4  00AE               	movwf	(_command^(0+128)+14)
 10834                           
 10835                           ;command.c: 31: command[15] = 0b11111000;
 10836  06A5  30F8               	movlw	248
 10837  06A6  0020               	movlb	0	; select bank0
 10838  06A7  00A0               	movwf	??_initComand
 10839  06A8  0820               	movf	??_initComand,w
 10840  06A9  0021               	movlb	1	; select bank1
 10841  06AA  00AF               	movwf	(_command^(0+128)+15)
 10842                           
 10843                           ;command.c: 32: command[16] = 0b11111001;
 10844  06AB  30F9               	movlw	249
 10845  06AC  0020               	movlb	0	; select bank0
 10846  06AD  00A0               	movwf	??_initComand
 10847  06AE  0820               	movf	??_initComand,w
 10848  06AF  0021               	movlb	1	; select bank1
 10849  06B0  00B0               	movwf	(_command^(0+128)+16)
 10850                           
 10851                           ;command.c: 33: command[17] = 0b11111010;
 10852  06B1  30FA               	movlw	250
 10853  06B2  0020               	movlb	0	; select bank0
 10854  06B3  00A0               	movwf	??_initComand
 10855  06B4  0820               	movf	??_initComand,w
 10856  06B5  0021               	movlb	1	; select bank1
 10857  06B6  00B1               	movwf	(_command^(0+128)+17)
 10858  06B7  0008               	return
 10859  06B8                     __end_of_initComand:	
 10860                           
 10861                           	psect	text33
 10862  0DA6                     __ptext33:	
 10863 ;; *************** function _initCargo *****************
 10864 ;; Defined at:
 10865 ;;		line 14 in file "struct.c"
 10866 ;; Parameters:    Size  Location     Type
 10867 ;;		None
 10868 ;; Auto vars:     Size  Location     Type
 10869 ;;		None
 10870 ;; Return value:  Size  Location     Type
 10871 ;;                  1    wreg      void 
 10872 ;; Registers used:
 10873 ;;		wreg, status,2
 10874 ;; Tracked objects:
 10875 ;;		On entry : 0/0
 10876 ;;		On exit  : 0/0
 10877 ;;		Unchanged: 0/0
 10878 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10879 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10880 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10881 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10882 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10883 ;;Total ram usage:        0 bytes
 10884 ;; Hardware stack levels used:    1
 10885 ;; Hardware stack levels required when called:    3
 10886 ;; This function calls:
 10887 ;;		Nothing
 10888 ;; This function is called by:
 10889 ;;		_main
 10890 ;; This function uses a non-reentrant model
 10891 ;;
 10892                           
 10893                           
 10894                           ;psect for function _initCargo
 10895  0DA6                     _initCargo:	
 10896                           
 10897                           ;struct.c: 15: isMycargo = 1;
 10898                           
 10899                           ;incstack = 0
 10900                           ; Regs used in _initCargo: [wreg+status,2]
 10901  0DA6  14F0               	bsf	_isMycargo/(0+8),_isMycargo& (0+7)
 10902                           
 10903                           ;struct.c: 16: cargoData.WorkingCount = 0;
 10904  0DA7  3000               	movlw	0
 10905  0DA8  0020               	movlb	0	; select bank0
 10906  0DA9  00E8               	movwf	_cargoData+15
 10907  0DAA  3000               	movlw	0
 10908  0DAB  00E7               	movwf	_cargoData+14
 10909  0DAC  3000               	movlw	0
 10910  0DAD  00E6               	movwf	_cargoData+13
 10911  0DAE  3000               	movlw	0
 10912  0DAF  00E5               	movwf	_cargoData+12
 10913                           
 10914                           ;struct.c: 17: cargoData.address = 0;
 10915  0DB0  01DD               	clrf	_cargoData+4
 10916                           
 10917                           ;struct.c: 18: cargoData.cargoLength = 0xFFFF;
 10918  0DB1  30FF               	movlw	255
 10919  0DB2  00D9               	movwf	_cargoData
 10920  0DB3  30FF               	movlw	255
 10921  0DB4  00DA               	movwf	_cargoData+1
 10922                           
 10923                           ;struct.c: 19: cargoData.clutchMode = 0;
 10924  0DB5  01E4               	clrf	_cargoData+11
 10925                           
 10926                           ;struct.c: 20: cargoData.command = 0;
 10927  0DB6  01DB               	clrf	_cargoData+2
 10928                           
 10929                           ;struct.c: 21: cargoData.index = 0;
 10930  0DB7  01DC               	clrf	_cargoData+3
 10931                           
 10932                           ;struct.c: 22: cargoData.linkAngleTo = 360;
 10933  0DB8  3068               	movlw	104
 10934  0DB9  00DE               	movwf	_cargoData+5
 10935  0DBA  3001               	movlw	1
 10936  0DBB  00DF               	movwf	_cargoData+6
 10937                           
 10938                           ;struct.c: 23: cargoData.passedTime = 0;
 10939  0DBC  01E2               	clrf	_cargoData+9
 10940  0DBD  01E3               	clrf	_cargoData+10
 10941  0DBE  0008               	return
 10942  0DBF                     __end_of_initCargo:	
 10943                           
 10944                           	psect	text34
 10945  0E6B                     __ptext34:	
 10946 ;; *************** function _init *****************
 10947 ;; Defined at:
 10948 ;;		line 105 in file "D:/programdata/16F18346_Link_IC.X/main.c"
 10949 ;; Parameters:    Size  Location     Type
 10950 ;;		None
 10951 ;; Auto vars:     Size  Location     Type
 10952 ;;		None
 10953 ;; Return value:  Size  Location     Type
 10954 ;;                  1    wreg      void 
 10955 ;; Registers used:
 10956 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10957 ;; Tracked objects:
 10958 ;;		On entry : 0/0
 10959 ;;		On exit  : 0/0
 10960 ;;		Unchanged: 0/0
 10961 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10962 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10963 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10964 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10965 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10966 ;;Total ram usage:        0 bytes
 10967 ;; Hardware stack levels used:    1
 10968 ;; Hardware stack levels required when called:    4
 10969 ;; This function calls:
 10970 ;;		_clear
 10971 ;;		_initbuffer
 10972 ;; This function is called by:
 10973 ;;		_main
 10974 ;; This function uses a non-reentrant model
 10975 ;;
 10976                           
 10977                           
 10978                           ;psect for function _init
 10979  0E6B                     _init:	
 10980                           
 10981                           ;main.c: 106: count1 = 0;
 10982                           
 10983                           ;incstack = 0
 10984                           ; Regs used in _init: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10985  0E6B  0021               	movlb	1	; select bank1
 10986  0E6C  01D7               	clrf	_count1^(0+128)
 10987  0E6D  01D8               	clrf	(_count1+1)^(0+128)
 10988                           
 10989                           ;main.c: 107: count2 = 0;
 10990  0E6E  0020               	movlb	0	; select bank0
 10991  0E6F  01EB               	clrf	_count2
 10992  0E70  01EC               	clrf	_count2+1
 10993                           
 10994                           ;main.c: 108: initbuffer();
 10995  0E71  318E  2694  318E   	fcall	_initbuffer
 10996                           
 10997                           ;main.c: 110: OSCFRQbits.HFFRQ = 0b0111;
 10998  0E74  0032               	movlb	18	; select bank18
 10999  0E75  081F               	movf	31,w	;volatile
 11000  0E76  39F0               	andlw	-16
 11001  0E77  3807               	iorlw	7
 11002  0E78  009F               	movwf	31	;volatile
 11003                           
 11004                           ;main.c: 111: OSCTUNEbits.HFTUN = 0b000000;
 11005  0E79  30C0               	movlw	-64
 11006  0E7A  059E               	andwf	30,f	;volatile
 11007                           
 11008                           ;main.c: 112: clear();
 11009  0E7B  318D  2545         	fcall	_clear
 11010                           
 11011                           ;main.c: 113: WPUC = 0b11111111;
 11012  0E7D  30FF               	movlw	255
 11013  0E7E  0024               	movlb	4	; select bank4
 11014  0E7F  008E               	movwf	14	;volatile
 11015                           
 11016                           ;main.c: 114: WPUB = 0b11111111;
 11017  0E80  30FF               	movlw	255
 11018  0E81  008D               	movwf	13	;volatile
 11019                           
 11020                           ;main.c: 115: WPUA = 0b11111111;
 11021  0E82  30FF               	movlw	255
 11022  0E83  008C               	movwf	12	;volatile
 11023                           
 11024                           ;main.c: 116: TRISBbits.TRISB6 = 1;
 11025  0E84  0021               	movlb	1	; select bank1
 11026  0E85  170D               	bsf	13,6	;volatile
 11027                           
 11028                           ;main.c: 117: TRISBbits.TRISB4 = 1;
 11029  0E86  160D               	bsf	13,4	;volatile
 11030                           
 11031                           ;main.c: 118: TRISCbits.TRISC6 = 1;
 11032  0E87  170E               	bsf	14,6	;volatile
 11033                           
 11034                           ;main.c: 119: INLVLBbits.INLVLB4 = 0;
 11035  0E88  0027               	movlb	7	; select bank7
 11036  0E89  120D               	bcf	13,4	;volatile
 11037                           
 11038                           ;main.c: 120: INLVLBbits.INLVLB6 = 0;
 11039  0E8A  130D               	bcf	13,6	;volatile
 11040                           
 11041                           ;main.c: 121: INLVLCbits.INLVLC5 = 0;
 11042  0E8B  128E               	bcf	14,5	;volatile
 11043                           
 11044                           ;main.c: 123: TRISBbits.TRISB5 = 1;
 11045  0E8C  0021               	movlb	1	; select bank1
 11046  0E8D  168D               	bsf	13,5	;volatile
 11047                           
 11048                           ;main.c: 124: INLVLBbits.INLVLB5 = 0;
 11049  0E8E  0027               	movlb	7	; select bank7
 11050  0E8F  128D               	bcf	13,5	;volatile
 11051                           
 11052                           ;main.c: 125: INLVLBbits.INLVLB7 = 0;
 11053  0E90  138D               	bcf	13,7	;volatile
 11054                           
 11055                           ;main.c: 126: INLVLAbits.INLVLA1 = 0;
 11056  0E91  108C               	bcf	12,1	;volatile
 11057                           
 11058                           ;main.c: 127: INLVLAbits.INLVLA2 = 0;
 11059  0E92  110C               	bcf	12,2	;volatile
 11060  0E93  0008               	return
 11061  0E94                     __end_of_init:	
 11062                           ;main.c: 129: return;
 11063                           
 11064                           
 11065                           	psect	text35
 11066  0E94                     __ptext35:	
 11067 ;; *************** function _initbuffer *****************
 11068 ;; Defined at:
 11069 ;;		line 99 in file "D:/programdata/16F18346_Link_IC.X/main.c"
 11070 ;; Parameters:    Size  Location     Type
 11071 ;;		None
 11072 ;; Auto vars:     Size  Location     Type
 11073 ;;  i               2    2[BANK0 ] int 
 11074 ;; Return value:  Size  Location     Type
 11075 ;;                  1    wreg      void 
 11076 ;; Registers used:
 11077 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11078 ;; Tracked objects:
 11079 ;;		On entry : 0/0
 11080 ;;		On exit  : 0/0
 11081 ;;		Unchanged: 0/0
 11082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11083 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11084 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11085 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11086 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11087 ;;Total ram usage:        4 bytes
 11088 ;; Hardware stack levels used:    1
 11089 ;; Hardware stack levels required when called:    3
 11090 ;; This function calls:
 11091 ;;		Nothing
 11092 ;; This function is called by:
 11093 ;;		_init
 11094 ;; This function uses a non-reentrant model
 11095 ;;
 11096                           
 11097                           
 11098                           ;psect for function _initbuffer
 11099  0E94                     _initbuffer:	
 11100                           
 11101                           ;main.c: 100: for(int i = 0; i < 256; i++){
 11102                           
 11103                           ;incstack = 0
 11104                           ; Regs used in _initbuffer: [wreg+fsr1l+fsr1h+status,2+status,0]
 11105  0E94  0020               	movlb	0	; select bank0
 11106  0E95  01A2               	clrf	initbuffer@i
 11107  0E96  01A3               	clrf	initbuffer@i+1
 11108  0E97                     L30:	
 11109  0E97  0823               	movf	initbuffer@i+1,w
 11110  0E98  3A80               	xorlw	128
 11111  0E99  00A0               	movwf	??_initbuffer
 11112  0E9A  3081               	movlw	129
 11113  0E9B  0220               	subwf	??_initbuffer,w
 11114  0E9C  1D03               	skipz
 11115  0E9D  2EA0               	goto	u2385
 11116  0E9E  3000               	movlw	0
 11117  0E9F  0222               	subwf	initbuffer@i,w
 11118  0EA0                     u2385:	
 11119  0EA0  1803               	btfsc	3,0
 11120  0EA1  0008               	return
 11121                           
 11122                           ;main.c: 101: spi1_buffer_data[i] = 0;
 11123  0EA2  30F0               	movlw	240
 11124  0EA3  0020               	movlb	0	; select bank0
 11125  0EA4  00A0               	movwf	??_initbuffer
 11126  0EA5  3026               	movlw	38
 11127  0EA6  00A1               	movwf	??_initbuffer+1
 11128  0EA7  0822               	movf	initbuffer@i,w
 11129  0EA8  0720               	addwf	??_initbuffer,w
 11130  0EA9  0086               	movwf	6
 11131  0EAA  0823               	movf	initbuffer@i+1,w
 11132  0EAB  3D21               	addwfc	??_initbuffer+1,w
 11133  0EAC  0087               	movwf	7
 11134  0EAD  0181               	clrf	1
 11135                           
 11136                           ;main.c: 102: spi2_buffer_data[i] = 0;
 11137  0EAE  30F0               	movlw	240
 11138  0EAF  00A0               	movwf	??_initbuffer
 11139  0EB0  3025               	movlw	37
 11140  0EB1  00A1               	movwf	??_initbuffer+1
 11141  0EB2  0822               	movf	initbuffer@i,w
 11142  0EB3  0720               	addwf	??_initbuffer,w
 11143  0EB4  0086               	movwf	6
 11144  0EB5  0823               	movf	initbuffer@i+1,w
 11145  0EB6  3D21               	addwfc	??_initbuffer+1,w
 11146  0EB7  0087               	movwf	7
 11147  0EB8  0181               	clrf	1
 11148  0EB9  3001               	movlw	1
 11149  0EBA  07A2               	addwf	initbuffer@i,f
 11150  0EBB  3000               	movlw	0
 11151  0EBC  3DA3               	addwfc	initbuffer@i+1,f
 11152  0EBD  2E97               	goto	L30
 11153  0EBE                     __end_of_initbuffer:	
 11154                           
 11155                           	psect	text36
 11156  0D45                     __ptext36:	
 11157 ;; *************** function _clear *****************
 11158 ;; Defined at:
 11159 ;;		line 9 in file "D:/programdata/16F18346_Link_IC.X/util.c"
 11160 ;; Parameters:    Size  Location     Type
 11161 ;;		None
 11162 ;; Auto vars:     Size  Location     Type
 11163 ;;		None
 11164 ;; Return value:  Size  Location     Type
 11165 ;;                  1    wreg      void 
 11166 ;; Registers used:
 11167 ;;		status,2
 11168 ;; Tracked objects:
 11169 ;;		On entry : 0/0
 11170 ;;		On exit  : 0/0
 11171 ;;		Unchanged: 0/0
 11172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11173 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11174 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11176 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11177 ;;Total ram usage:        0 bytes
 11178 ;; Hardware stack levels used:    1
 11179 ;; Hardware stack levels required when called:    3
 11180 ;; This function calls:
 11181 ;;		Nothing
 11182 ;; This function is called by:
 11183 ;;		_init
 11184 ;; This function uses a non-reentrant model
 11185 ;;
 11186                           
 11187                           
 11188                           ;psect for function _clear
 11189  0D45                     _clear:	
 11190                           
 11191                           ;util.c: 10: ANSELA = 0x00;
 11192                           
 11193                           ;incstack = 0
 11194                           ; Regs used in _clear: [status,2]
 11195  0D45  0023               	movlb	3	; select bank3
 11196  0D46  018C               	clrf	12	;volatile
 11197                           
 11198                           ;util.c: 11: ANSELB = 0x00;
 11199  0D47  018D               	clrf	13	;volatile
 11200                           
 11201                           ;util.c: 12: ANSELC = 0x00;
 11202  0D48  018E               	clrf	14	;volatile
 11203                           
 11204                           ;util.c: 13: PORTA = 0x00;
 11205  0D49  0020               	movlb	0	; select bank0
 11206  0D4A  018C               	clrf	12	;volatile
 11207                           
 11208                           ;util.c: 14: PORTB = 0x00;
 11209  0D4B  018D               	clrf	13	;volatile
 11210                           
 11211                           ;util.c: 15: PORTC = 0x00;
 11212  0D4C  018E               	clrf	14	;volatile
 11213                           
 11214                           ;util.c: 16: TRISA = 0x00;
 11215  0D4D  0021               	movlb	1	; select bank1
 11216  0D4E  018C               	clrf	12	;volatile
 11217                           
 11218                           ;util.c: 17: TRISB = 0x00;
 11219  0D4F  018D               	clrf	13	;volatile
 11220                           
 11221                           ;util.c: 18: TRISC = 0x00;
 11222  0D50  018E               	clrf	14	;volatile
 11223  0D51  0008               	return
 11224  0D52                     __end_of_clear:	
 11225                           
 11226                           	psect	intentry
 11227  0004                     __pintentry:	
 11228 ;; *************** function _InterMSSP *****************
 11229 ;; Defined at:
 11230 ;;		line 70 in file "D:/programdata/16F18346_Link_IC.X/main.c"
 11231 ;; Parameters:    Size  Location     Type
 11232 ;;		None
 11233 ;; Auto vars:     Size  Location     Type
 11234 ;;  buf             1    8[COMMON] unsigned char 
 11235 ;; Return value:  Size  Location     Type
 11236 ;;                  1    wreg      void 
 11237 ;; Registers used:
 11238 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11239 ;; Tracked objects:
 11240 ;;		On entry : 0/0
 11241 ;;		On exit  : 0/0
 11242 ;;		Unchanged: 0/0
 11243 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11244 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11245 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11246 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11247 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11248 ;;Total ram usage:        7 bytes
 11249 ;; Hardware stack levels used:    1
 11250 ;; Hardware stack levels required when called:    2
 11251 ;; This function calls:
 11252 ;;		_addAngle
 11253 ;;		_setSPI1sendData
 11254 ;; This function is called by:
 11255 ;;		Interrupt level 1
 11256 ;; This function uses a non-reentrant model
 11257 ;;
 11258                           
 11259  0004                     _InterMSSP:	
 11260                           
 11261                           ;incstack = 0
 11262  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 11263                           
 11264                           ; Regs used in _InterMSSP: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11265  0005  3180               	pagesel	$
 11266  0006  0020               	movlb	0	; select bank0
 11267  0007  087F               	movf	127,w
 11268  0008  00F9               	movwf	??_InterMSSP+5
 11269                           
 11270                           ;main.c: 72: if (PIR1bits.SSP1IF) {
 11271  0009  1D91               	btfss	17,3	;volatile
 11272  000A  2837               	goto	i1l3019
 11273                           
 11274                           ;main.c: 74: unsigned char buf = SSP1BUF;
 11275  000B  0024               	movlb	4	; select bank4
 11276  000C  0811               	movf	17,w	;volatile
 11277  000D  00F4               	movwf	??_InterMSSP
 11278  000E  0874               	movf	??_InterMSSP,w
 11279  000F  00FA               	movwf	InterMSSP@buf
 11280                           
 11281                           ;main.c: 75: if(buf > 0){
 11282  0010  087A               	movf	InterMSSP@buf,w
 11283  0011  1903               	btfsc	3,2
 11284  0012  2830               	goto	i1l3015
 11285                           
 11286                           ;main.c: 76: spi1_buffer_data[count1] = buf -SPI_OFFSET_BYTE;
 11287  0013  037D               	decf	_SPI_OFFSET_BYTE,w
 11288  0014  3AFF               	xorlw	255
 11289  0015  077A               	addwf	InterMSSP@buf,w
 11290  0016  00F4               	movwf	??_InterMSSP
 11291  0017  30F0               	movlw	240
 11292  0018  00F5               	movwf	??_InterMSSP+1
 11293  0019  3026               	movlw	38
 11294  001A  00F6               	movwf	??_InterMSSP+2
 11295  001B  0021               	movlb	1	; select bank1
 11296  001C  0857               	movf	_count1^(0+128),w
 11297  001D  0775               	addwf	??_InterMSSP+1,w
 11298  001E  00F7               	movwf	??_InterMSSP+3
 11299  001F  0858               	movf	(_count1+1)^(0+128),w
 11300  0020  3D76               	addwfc	??_InterMSSP+2,w
 11301  0021  00F8               	movwf	??_InterMSSP+4
 11302  0022  0877               	movf	??_InterMSSP+3,w
 11303  0023  0086               	movwf	6
 11304  0024  0878               	movf	??_InterMSSP+4,w
 11305  0025  0087               	movwf	7
 11306  0026  0874               	movf	??_InterMSSP,w
 11307  0027  0081               	movwf	1
 11308                           
 11309                           ;main.c: 77: setSPI1sendData();
 11310  0028  318D  25FE  3180   	fcall	_setSPI1sendData
 11311                           
 11312                           ;main.c: 78: count1++;
 11313  002B  3001               	movlw	1
 11314  002C  0021               	movlb	1	; select bank1
 11315  002D  07D7               	addwf	_count1^(0+128),f
 11316  002E  3000               	movlw	0
 11317  002F  3DD8               	addwfc	(_count1+1)^(0+128),f
 11318  0030                     i1l3015:	
 11319                           
 11320                           ;main.c: 79: }
 11321                           ;main.c: 80: if(count1 == 256){
 11322  0030  0021               	movlb	1	; select bank1
 11323  0031  0358               	decf	(_count1+1)^(0+128),w
 11324  0032  0457               	iorwf	_count1^(0+128),w
 11325  0033  1D03               	btfss	3,2
 11326  0034  2837               	goto	i1l3019
 11327                           
 11328                           ;main.c: 81: count1 = 0;
 11329  0035  01D7               	clrf	_count1^(0+128)
 11330  0036  01D8               	clrf	(_count1+1)^(0+128)
 11331  0037                     i1l3019:	
 11332                           
 11333                           ;main.c: 82: }
 11334                           ;main.c: 83: }
 11335                           ;main.c: 84: if (PIR2bits.SSP2IF) {
 11336  0037  0020               	movlb	0	; select bank0
 11337  0038  1D92               	btfss	18,3	;volatile
 11338  0039  283C               	goto	i1l118
 11339                           
 11340                           ;main.c: 85: isSendSPI2 = 0;
 11341  003A  10F1               	bcf	_isSendSPI2/(0+8),_isSendSPI2& (0+7)
 11342                           
 11343                           ;main.c: 87: PIR2bits.SSP2IF = 0;
 11344  003B  1192               	bcf	18,3	;volatile
 11345  003C                     i1l118:	
 11346                           
 11347                           ;main.c: 88: }
 11348                           ;main.c: 89: if(IOCAFbits.IOCAF3 == 1){
 11349  003C  0027               	movlb	7	; select bank7
 11350  003D  1D93               	btfss	19,3	;volatile
 11351  003E  2841               	goto	i1l3025
 11352                           
 11353                           ;main.c: 91: addAngle();
 11354  003F  318D  255F         	fcall	_addAngle
 11355  0041                     i1l3025:	
 11356                           
 11357                           ;main.c: 92: }
 11358                           ;main.c: 93: PIR1bits.SSP1IF = 0 ;
 11359  0041  0020               	movlb	0	; select bank0
 11360  0042  1191               	bcf	17,3	;volatile
 11361                           
 11362                           ;main.c: 95: IOCAFbits.IOCAF3 = 0;
 11363  0043  0027               	movlb	7	; select bank7
 11364  0044  1193               	bcf	19,3	;volatile
 11365                           
 11366                           ;main.c: 96: PIR0bits.IOCIF = 0;
 11367  0045  0020               	movlb	0	; select bank0
 11368  0046  1210               	bcf	16,4	;volatile
 11369                           
 11370                           ;main.c: 97: PIR0bits.INTF = 0;
 11371  0047  1010               	bcf	16,0	;volatile
 11372  0048  0879               	movf	??_InterMSSP+5,w
 11373  0049  00FF               	movwf	127
 11374  004A  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 11375  004B  0009               	retfie
 11376  004C                     __end_of_InterMSSP:	
 11377                           
 11378                           	psect	text38
 11379  0DFE                     __ptext38:	
 11380 ;; *************** function _setSPI1sendData *****************
 11381 ;; Defined at:
 11382 ;;		line 91 in file "D:/programdata/16F18346_Link_IC.X/spiControl.c"
 11383 ;; Parameters:    Size  Location     Type
 11384 ;;		None
 11385 ;; Auto vars:     Size  Location     Type
 11386 ;;		None
 11387 ;; Return value:  Size  Location     Type
 11388 ;;                  1    wreg      void 
 11389 ;; Registers used:
 11390 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11391 ;; Tracked objects:
 11392 ;;		On entry : 0/0
 11393 ;;		On exit  : 0/0
 11394 ;;		Unchanged: 0/0
 11395 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11396 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11397 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11398 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11399 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11400 ;;Total ram usage:        2 bytes
 11401 ;; Hardware stack levels used:    1
 11402 ;; Hardware stack levels required when called:    1
 11403 ;; This function calls:
 11404 ;;		_isSPI2read
 11405 ;; This function is called by:
 11406 ;;		_InterMSSP
 11407 ;; This function uses a non-reentrant model
 11408 ;;
 11409                           
 11410                           
 11411                           ;psect for function _setSPI1sendData
 11412  0DFE                     _setSPI1sendData:	
 11413                           
 11414                           ;spiControl.c: 92: if(!isSPI2read() == 1){
 11415                           
 11416                           ;incstack = 0
 11417                           ; Regs used in _setSPI1sendData: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11418  0DFE  318D  256E  318D   	fcall	_isSPI2read
 11419  0E01  1803               	btfsc	3,0
 11420  0E02  2E1D               	goto	i1l2795
 11421                           
 11422                           ;spiControl.c: 93: SSP1BUF = spi2_buffer_data[read_count2];
 11423  0E03  30F0               	movlw	240
 11424  0E04  00F2               	movwf	??_setSPI1sendData
 11425  0E05  3025               	movlw	37
 11426  0E06  00F3               	movwf	??_setSPI1sendData+1
 11427  0E07  0021               	movlb	1	; select bank1
 11428  0E08  084F               	movf	_read_count2^(0+128),w
 11429  0E09  0772               	addwf	??_setSPI1sendData,w
 11430  0E0A  0086               	movwf	6
 11431  0E0B  0850               	movf	(_read_count2+1)^(0+128),w
 11432  0E0C  3D73               	addwfc	??_setSPI1sendData+1,w
 11433  0E0D  0087               	movwf	7
 11434  0E0E  0801               	movf	1,w
 11435  0E0F  0024               	movlb	4	; select bank4
 11436  0E10  0091               	movwf	17	;volatile
 11437                           
 11438                           ;spiControl.c: 94: read_count2++;
 11439  0E11  3001               	movlw	1
 11440  0E12  0021               	movlb	1	; select bank1
 11441  0E13  07CF               	addwf	_read_count2^(0+128),f
 11442  0E14  3000               	movlw	0
 11443  0E15  3DD0               	addwfc	(_read_count2+1)^(0+128),f
 11444                           
 11445                           ;spiControl.c: 95: if(read_count2 == 256){
 11446  0E16  0350               	decf	(_read_count2+1)^(0+128),w
 11447  0E17  044F               	iorwf	_read_count2^(0+128),w
 11448  0E18  1D03               	btfss	3,2
 11449  0E19  0008               	return
 11450                           
 11451                           ;spiControl.c: 96: read_count2 = 0;
 11452  0E1A  01CF               	clrf	_read_count2^(0+128)
 11453  0E1B  01D0               	clrf	(_read_count2+1)^(0+128)
 11454                           
 11455                           ;spiControl.c: 97: }
 11456                           ;spiControl.c: 98: }else{
 11457  0E1C  0008               	return
 11458  0E1D                     i1l2795:	
 11459                           
 11460                           ;spiControl.c: 99: SSP1BUF = 0x00;
 11461  0E1D  0024               	movlb	4	; select bank4
 11462  0E1E  0191               	clrf	17	;volatile
 11463  0E1F  0008               	return
 11464  0E20                     __end_of_setSPI1sendData:	
 11465                           
 11466                           	psect	text39
 11467  0D6E                     __ptext39:	
 11468 ;; *************** function _isSPI2read *****************
 11469 ;; Defined at:
 11470 ;;		line 75 in file "D:/programdata/16F18346_Link_IC.X/spiControl.c"
 11471 ;; Parameters:    Size  Location     Type
 11472 ;;		None
 11473 ;; Auto vars:     Size  Location     Type
 11474 ;;		None
 11475 ;; Return value:  Size  Location     Type
 11476 ;;		None               void
 11477 ;; Registers used:
 11478 ;;		wreg, status,2, status,0
 11479 ;; Tracked objects:
 11480 ;;		On entry : 0/0
 11481 ;;		On exit  : 0/0
 11482 ;;		Unchanged: 0/0
 11483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11484 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11485 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11486 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11487 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11488 ;;Total ram usage:        0 bytes
 11489 ;; Hardware stack levels used:    1
 11490 ;; This function calls:
 11491 ;;		Nothing
 11492 ;; This function is called by:
 11493 ;;		_setSPI1sendData
 11494 ;; This function uses a non-reentrant model
 11495 ;;
 11496                           
 11497                           
 11498                           ;psect for function _isSPI2read
 11499  0D6E                     _isSPI2read:	
 11500                           
 11501                           ;spiControl.c: 76: if(read_count2 == count2){
 11502                           
 11503                           ;incstack = 0
 11504                           ; Regs used in _isSPI2read: [wreg+status,2+status,0]
 11505  0D6E  0020               	movlb	0	; select bank0
 11506  0D6F  086C               	movf	_count2+1,w
 11507  0D70  0021               	movlb	1	; select bank1
 11508  0D71  0650               	xorwf	(_read_count2+1)^(0+128),w
 11509  0D72  1D03               	skipz
 11510  0D73  2D78               	goto	u141_25
 11511  0D74  0020               	movlb	0	; select bank0
 11512  0D75  086B               	movf	_count2,w
 11513  0D76  0021               	movlb	1	; select bank1
 11514  0D77  064F               	xorwf	_read_count2^(0+128),w
 11515  0D78                     u141_25:	
 11516  0D78  1D03               	skipz
 11517  0D79  2D7C               	goto	i1l2579
 11518                           
 11519                           ;spiControl.c: 77: return 1;
 11520  0D7A  1403               	setc
 11521                           
 11522                           ;spiControl.c: 78: }else{
 11523  0D7B  0008               	return
 11524  0D7C                     i1l2579:	
 11525                           
 11526                           ;spiControl.c: 79: return 0;
 11527  0D7C  1003               	clrc
 11528  0D7D  0008               	return
 11529  0D7E                     __end_of_isSPI2read:	
 11530                           
 11531                           	psect	text40
 11532  0D5F                     __ptext40:	
 11533 ;; *************** function _addAngle *****************
 11534 ;; Defined at:
 11535 ;;		line 62 in file "D:/programdata/16F18346_Link_IC.X/IO_control.c"
 11536 ;; Parameters:    Size  Location     Type
 11537 ;;		None
 11538 ;; Auto vars:     Size  Location     Type
 11539 ;;		None
 11540 ;; Return value:  Size  Location     Type
 11541 ;;                  1    wreg      void 
 11542 ;; Registers used:
 11543 ;;		wreg, status,2, status,0, pclath, cstack
 11544 ;; Tracked objects:
 11545 ;;		On entry : 0/0
 11546 ;;		On exit  : 0/0
 11547 ;;		Unchanged: 0/0
 11548 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11549 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11550 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11551 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11552 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11553 ;;Total ram usage:        0 bytes
 11554 ;; Hardware stack levels used:    1
 11555 ;; Hardware stack levels required when called:    1
 11556 ;; This function calls:
 11557 ;;		_getMoter_lotate
 11558 ;;		_setCargoAngle
 11559 ;; This function is called by:
 11560 ;;		_InterMSSP
 11561 ;; This function uses a non-reentrant model
 11562 ;;
 11563                           
 11564                           
 11565                           ;psect for function _addAngle
 11566  0D5F                     _addAngle:	
 11567                           
 11568                           ;IO_control.c: 63: linkAngle += getMoter_lotate();
 11569                           
 11570                           ;incstack = 0
 11571                           ; Regs used in _addAngle: [wreg+status,2+status,0+pclath+cstack]
 11572  0D5F  318C  24F9  318D   	fcall	_getMoter_lotate
 11573  0D62  0872               	movf	?_getMoter_lotate,w
 11574  0D63  0021               	movlb	1	; select bank1
 11575  0D64  07E0               	addwf	_linkAngle^(0+128),f
 11576  0D65  0873               	movf	?_getMoter_lotate+1,w
 11577  0D66  3DE1               	addwfc	(_linkAngle+1)^(0+128),f
 11578                           
 11579                           ;IO_control.c: 64: setCargoAngle(linkAngle);
 11580  0D67  0861               	movf	(_linkAngle+1)^(0+128),w
 11581  0D68  00F3               	movwf	setCargoAngle@m_linkAngleTo+1
 11582  0D69  0860               	movf	_linkAngle^(0+128),w
 11583  0D6A  00F2               	movwf	setCargoAngle@m_linkAngleTo
 11584  0D6B  318C  24FF         	fcall	_setCargoAngle
 11585  0D6D  0008               	return
 11586  0D6E                     __end_of_addAngle:	
 11587                           
 11588                           	psect	text41
 11589  0CFF                     __ptext41:	
 11590 ;; *************** function _setCargoAngle *****************
 11591 ;; Defined at:
 11592 ;;		line 41 in file "struct.c"
 11593 ;; Parameters:    Size  Location     Type
 11594 ;;  m_linkAngleT    2    0[COMMON] int 
 11595 ;; Auto vars:     Size  Location     Type
 11596 ;;		None
 11597 ;; Return value:  Size  Location     Type
 11598 ;;                  1    wreg      void 
 11599 ;; Registers used:
 11600 ;;		wreg
 11601 ;; Tracked objects:
 11602 ;;		On entry : 0/0
 11603 ;;		On exit  : 0/0
 11604 ;;		Unchanged: 0/0
 11605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11606 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11607 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11608 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11609 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11610 ;;Total ram usage:        2 bytes
 11611 ;; Hardware stack levels used:    1
 11612 ;; This function calls:
 11613 ;;		Nothing
 11614 ;; This function is called by:
 11615 ;;		_addAngle
 11616 ;; This function uses a non-reentrant model
 11617 ;;
 11618                           
 11619                           
 11620                           ;psect for function _setCargoAngle
 11621  0CFF                     _setCargoAngle:	
 11622                           
 11623                           ;struct.c: 42: cargoData.linkAngleTo = m_linkAngleTo;
 11624                           
 11625                           ;incstack = 0
 11626                           ; Regs used in _setCargoAngle: [wreg]
 11627  0CFF  0873               	movf	setCargoAngle@m_linkAngleTo+1,w
 11628  0D00  0020               	movlb	0	; select bank0
 11629  0D01  00DF               	movwf	_cargoData+6
 11630  0D02  0872               	movf	setCargoAngle@m_linkAngleTo,w
 11631  0D03  00DE               	movwf	_cargoData+5
 11632  0D04  0008               	return
 11633  0D05                     __end_of_setCargoAngle:	
 11634                           
 11635                           	psect	text42
 11636  0CF9                     __ptext42:	
 11637 ;; *************** function _getMoter_lotate *****************
 11638 ;; Defined at:
 11639 ;;		line 29 in file "D:/programdata/16F18346_Link_IC.X/cal_position.c"
 11640 ;; Parameters:    Size  Location     Type
 11641 ;;		None
 11642 ;; Auto vars:     Size  Location     Type
 11643 ;;		None
 11644 ;; Return value:  Size  Location     Type
 11645 ;;                  2    0[COMMON] int 
 11646 ;; Registers used:
 11647 ;;		wreg
 11648 ;; Tracked objects:
 11649 ;;		On entry : 0/0
 11650 ;;		On exit  : 0/0
 11651 ;;		Unchanged: 0/0
 11652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11653 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11654 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11655 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11656 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11657 ;;Total ram usage:        2 bytes
 11658 ;; Hardware stack levels used:    1
 11659 ;; This function calls:
 11660 ;;		Nothing
 11661 ;; This function is called by:
 11662 ;;		_addAngle
 11663 ;; This function uses a non-reentrant model
 11664 ;;
 11665                           
 11666                           
 11667                           ;psect for function _getMoter_lotate
 11668  0CF9                     _getMoter_lotate:	
 11669                           
 11670                           ;cal_position.c: 30: return position.moter_lotate;
 11671                           
 11672                           ;incstack = 0
 11673                           ; Regs used in _getMoter_lotate: [wreg]
 11674  0CF9  0022               	movlb	2	; select bank2
 11675  0CFA  0821               	movf	(_position+1)^(0+256),w
 11676  0CFB  00F3               	movwf	?_getMoter_lotate+1
 11677  0CFC  0820               	movf	_position^(0+256),w
 11678  0CFD  00F2               	movwf	?_getMoter_lotate
 11679  0CFE  0008               	return
 11680  0CFF                     __end_of_getMoter_lotate:	
 11681  007E                     btemp	set	126	;btemp
 11682  007E                     int$flags	set	126
 11683  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    4
    Data        7
    BSS         177
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      14
    BANK0            80     57      79
    BANK1            80      3      71
    BANK2            80      0      74
    BANK3            80      0      18
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           64      0       0
    BANK16            0      0       0
    BANK17            0      0       0
    BANK18            0      0       0
    BANK19            0      0       0
    BANK20            0      0       0
    BANK21            0      0       0
    BANK22            0      0       0
    BANK23            0      0       0
    BANK24            0      0       0
    BANK25            0      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _InterMSSP in COMMON

    _InterMSSP->_setSPI1sendData
    _addAngle->_getMoter_lotate
    _addAngle->_setCargoAngle

Critical Paths under _main in BANK0

    _main->_setComunicateMode
    _spi_init->_spi1_init
    _spi_init->_spi2_init
    _setComunicateMode->_Calibrate_download
    _setComunicateMode->_readCargo
    _readCargo->_TransLong256To255
    _setIndexMode->_setMoter_lotate
    _EEPROM_download->_getCargoData
    _Calibrate_download->_TransLong256To255
    _isEndpoint->_setSPI1sendDataManual
    _TransLong256To255->___aldiv
    _InitCalibrate->_getCargoData
    _initTrain->_isTrainSt
    _init->_initbuffer

Critical Paths under _InterMSSP in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_setComunicateMode

Critical Paths under _InterMSSP in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterMSSP in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterMSSP in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _InterMSSP in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _InterMSSP in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _InterMSSP in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _InterMSSP in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _InterMSSP in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _InterMSSP in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _InterMSSP in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _InterMSSP in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _InterMSSP in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _InterMSSP in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _InterMSSP in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _InterMSSP in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _InterMSSP in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _InterMSSP in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _InterMSSP in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _InterMSSP in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _InterMSSP in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _InterMSSP in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _InterMSSP in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _InterMSSP in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _InterMSSP in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _InterMSSP in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    6965
                      _InitCalibrate
                               _init
                          _initCargo
                         _initComand
                     _initComu_types
                          _initIndex
                       _initPosition
                          _initTrain
                            _io_init
                         _isSPI1read
                         _read_train
                  _setComunicateMode
                    _setSPI2sendData
                           _spi_init
 ---------------------------------------------------------------------------------
 (1) _spi_init                                             0     0      0       6
                          _spi1_init
                          _spi2_init
 ---------------------------------------------------------------------------------
 (2) _spi2_init                                            2     2      0       3
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _spi1_init                                            2     2      0       3
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _setSPI2sendData                                      4     4      0       0
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _setComunicateMode                                    4     4      0    6693
                                             56 BANK0      1     1      0
                                              0 BANK1      3     3      0
                 _Calibrate_download
                    _EEPROM_download
                          _readCargo
 ---------------------------------------------------------------------------------
 (2) _readCargo                                           13    13      0    3107
                                             43 BANK0     13    13      0
                  _TransLong256To255
                       _clutchaction
                       _getCargoData
                       _restartCargo
                       _setIndexMode
 ---------------------------------------------------------------------------------
 (3) _setIndexMode                                         4     4      0     254
                                              1 BANK0      4     4      0
                    _setMoter_lotate
 ---------------------------------------------------------------------------------
 (4) _setMoter_lotate                                      1     1      0      93
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _clutchaction                                         1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _EEPROM_download                                     11    11      0     430
                                             17 BANK0     11    11      0
                         _ReadEEPROM
                       _getCargoData
                       _restartCargo
 ---------------------------------------------------------------------------------
 (3) _ReadEEPROM                                           5     3      2     207
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (2) _Calibrate_download                                  13    13      0    2995
                                             43 BANK0     13    13      0
                      _InitCalibrate
                  _TransLong256To255
                         _isEndpoint
                         _resetCargo
 ---------------------------------------------------------------------------------
 (3) _resetCargo                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _isEndpoint                                           6     6      0      71
                                              1 BANK0      6     6      0
              _setSPI1sendDataManual
 ---------------------------------------------------------------------------------
 (4) _setSPI1sendDataManual                                1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _TransLong256To255                                   28    24      4    2537
                                             15 BANK0     28    24      4
                            ___aldiv
                            ___almod
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8     290
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (4) ___almod                                             11     3      8     587
                                              0 BANK0     11     3      8
 ---------------------------------------------------------------------------------
 (4) ___aldiv                                             15     7      8     599
                                              0 BANK0     15     7      8
 ---------------------------------------------------------------------------------
 (3) _InitCalibrate                                       17    17      0      40
                                             17 BANK0     17    17      0
                       _getCargoData
 ---------------------------------------------------------------------------------
 (3) _getCargoData                                        17     1     16       0
                                              0 BANK0     17     1     16
 ---------------------------------------------------------------------------------
 (1) _read_train                                           4     4      0      65
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _isSPI1read                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _io_init                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initTrain                                            3     3      0      31
                                             11 BANK0      3     3      0
                          _isTrainSt
                     _resetTrainData
 ---------------------------------------------------------------------------------
 (2) _resetTrainData                                       0     0      0       0
                       _restartCargo
 ---------------------------------------------------------------------------------
 (3) _restartCargo                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _isTrainSt                                           11    11      0      31
                                              0 BANK0     11    11      0
 ---------------------------------------------------------------------------------
 (1) _initPosition                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initIndex                                            1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _initComu_types                                       1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _initComand                                           1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _initCargo                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0     130
                              _clear
                         _initbuffer
 ---------------------------------------------------------------------------------
 (2) _initbuffer                                           4     4      0     130
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) _clear                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _InterMSSP                                            7     7      0     131
                                              2 COMMON     7     7      0
                           _addAngle
                    _setSPI1sendData
 ---------------------------------------------------------------------------------
 (6) _setSPI1sendData                                      2     2      0       0
                                              0 COMMON     2     2      0
                         _isSPI2read
 ---------------------------------------------------------------------------------
 (7) _isSPI2read                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _addAngle                                             0     0      0      86
                    _getMoter_lotate
                      _setCargoAngle
 ---------------------------------------------------------------------------------
 (7) _setCargoAngle                                        2     0      2      86
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (7) _getMoter_lotate                                      2     0      2       0
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _InitCalibrate
     _getCargoData
   _init
     _clear
     _initbuffer
   _initCargo
   _initComand
   _initComu_types
   _initIndex
   _initPosition
   _initTrain
     _isTrainSt
     _resetTrainData
       _restartCargo
   _io_init
   _isSPI1read
   _read_train
   _setComunicateMode
     _Calibrate_download
       _InitCalibrate
         _getCargoData
       _TransLong256To255
         ___aldiv
         ___almod
         ___lmul
       _isEndpoint
         _setSPI1sendDataManual
       _resetCargo
     _EEPROM_download
       _ReadEEPROM
       _getCargoData
       _restartCargo
     _readCargo
       _TransLong256To255
         ___aldiv
         ___almod
         ___lmul
       _clutchaction
       _getCargoData
       _restartCargo
       _setIndexMode
         _setMoter_lotate
   _setSPI2sendData
   _spi_init
     _spi1_init
     _spi2_init

 _InterMSSP (ROOT)
   _addAngle
     _getMoter_lotate
     _setCargoAngle
   _setSPI1sendData
     _isSPI2read

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       3       1       21.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      9       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     39      4F       5       98.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      3      47       7       88.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      4A       9       92.5%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      12      11       22.5%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
ABS                  0      0     100      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
DATA                 0      0     100      28        0.0%
BANK11              50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITBANK12           50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12              50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITBANK13           50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13              50      0       0      33        0.0%
BITBANK14           50      0       0      34        0.0%
BANK14              50      0       0      35        0.0%
BITBANK15           50      0       0      36        0.0%
BANK15              40      0       0      37        0.0%
BITBANK16           50      0       0      38        0.0%
BANK16               0      0       0      39        0.0%
BITBANK17           50      0       0      40        0.0%
BANK17               0      0       0      41        0.0%
BITBANK18           50      0       0      42        0.0%
BANK18               0      0       0      43        0.0%
BITBANK19           50      0       0      44        0.0%
BANK19               0      0       0      45        0.0%
BITBANK20           50      0       0      46        0.0%
BANK20               0      0       0      47        0.0%
BITBANK21           50      0       0      48        0.0%
BANK21               0      0       0      49        0.0%
BITBANK22           50      0       0      50        0.0%
BANK22               0      0       0      51        0.0%
BITBANK23           50      0       0      52        0.0%
BANK23               0      0       0      53        0.0%
BITBANK24           50      0       0      54        0.0%
BANK24               0      0       0      55        0.0%
BITBANK25           20      0       0      56        0.0%
BANK25               0      0       0      57        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Tue Jul 17 22:28:49 2018

                  _InitCalibrate 0EBE                                pc 0002                      __CFG_CP$OFF 0000  
                             _RD 44A8                              l138 0789                              l172 07DD  
                            l501 0FBF                              l283 0715                              l453 02B9  
                            l462 0293                              l382 0D36                              l463 029B  
                            l719 0439                              l931 0514                              l918 0492  
                            l776 0FFF                     __CFG_CPD$OFF 0000                              wreg 0009  
        setComunicateMode@m_type 00E4                             S4371 0800                             S4381 0820  
                           S4367 0834                             S4377 0840         Calibrate_download@bufint 0055  
                   __CFG_LVP$OFF 0000                             l4041 0FA5                             l4033 0F9D  
                           l4019 0D5D                             l4123 0F7A                             l4115 0F6A  
                           l4061 07A4                             l3413 0EFC                             l4037 0FA1  
                           l4125 0F7D                             l4063 07B2                             l4071 07CC  
                           l3431 04A3                             l4047 0FA9                             l4065 07C5  
                           l3441 04C1                             l3409 0EF2                             l3521 030F  
                           l4049 0FB9                             l4091 0735                             l3453 04EC  
                           l3541 03B0                             l3533 035E                             l3517 02FB  
                           l3439 04B3                             l3543 03B5                             l3535 0387  
                           l3519 0307                             l3457 04FA                             l3449 04E1  
                           l3481 054F                             l3713 01E5                             l3475 0529  
                           l3563 0F49                             l3731 027E                             l3723 020E  
                           l3715 01F7                             l3707 01D6                             l3395 0DCA  
                           l3811 0183                             l3803 0114                             l3645 0704  
                           l3477 0537                             l3485 055A                             l3469 0521  
                           l3557 0F36                             l3717 01FD                             l4373 0FE8  
                           l4365 0FAF                             l4383 07D2                             l3727 0239  
                           l3719 0205                             l4375 042F                             l3399 0DD5  
                           l3591 0FDE                             l3807 013E                             l3815 0198  
                           l3489 0568                             l3737 029F                             l3729 025A  
                           l3745 02A9                             l3841 03E9                             l4369 019D  
                           l3809 015F                             l3817 01A7                             l4379 02AF  
                           l3843 03F2                             l3587 0FDA                             l3771 00CB  
                           l3749 02BE                             l3845 03FF                             l3597 0FE2  
                           l3781 00EF                             l3773 00D4                             l3951 0773  
                           l3855 0417                             l3847 0404                             l3863 0429  
                           l3599 0FF9                             l3791 0103                             l3775 00E1  
                           l3961 0784                             l3873 0459                             l3857 0422  
                           l3849 0409                             l3793 0105                             l3777 00E6  
                           l3795 0107                             l3787 00FE                             l3885 0474  
                           l3797 0109                             l3789 0101                             l3799 010B  
                           u2020 0D89                             u2105 04B6                             u2125 04C2  
                           u2205 052C                             u2045 0EFD                             u2135 04D6  
                           u2055 0F04                             u2145 04E2                             u2225 0545  
                           u2305 0368                             u2235 0550                             u2260 0EDC  
                           u2405 06D9                             u2425 0232                             u2435 0253  
                           u2355 0FCD                             u2515 0137                             u2285 0359  
                           u2445 0274                             u2525 0158                             u2550 03E2  
                           u2295 0374                             u2535 0179                             u2480 00C4  
                           u2385 0EA0                             u2625 0468                             u2545 01B2  
                           u2475 02CD                             u2580 0420                             u2665 0790  
                           u2675 0D59                             u2685 0F90                             _WPUA 020C  
                           _WPUB 020D                             _WPUC 020E                     __CFG_WRT$OFF 0000  
                  __CFG_FCMEN$ON 0000               TransLong256To255@i 0045               TransLong256To255@j 003B  
                  ?_clutchaction 0072                             _main 0F4D                             _init 0E6B  
                           fsr0h 0005                             fsr1h 0007                             indf0 0000  
                           fsr0l 0004                             indf1 0001                             fsr1l 0006  
                           btemp 007E                    __CFG_BOREN$ON 0000                             start 004C  
                  __CFG_CSWEN$ON 0000                   ?_InitCalibrate 0072                  __end_of___aldiv 0503  
                __end_of___almod 0571                            ?_main 0072                            ?_init 0072  
                  __CFG_WDTE$OFF 0000                   __CFG_DEBUG$OFF 0000                            i1l118 003C  
           __end_of_getCargoData 0D8E                            _PORTA 000C                            _PORTB 000D  
                          _PORTC 000E                            _TRISA 008C                            _TRISB 008D  
                          _TRISC 008E               setComunicateMode@i 00E5         __size_of_setMoter_lotate 001F  
            ___lmul@multiplicand 0024   __size_of_setSPI1sendDataManual 0006    __end_of_setSPI1sendDataManual 0D0B  
                          _clear 0D45                  __end_of_io_init 0D1A                            _index 01A0  
                 __pbitbssCOMMON 0380                   ??_clutchaction 0020                   __CFG_BORV$HIGH 0000  
                     _ReadEEPROM 0E20                            status 0003                            wtemp0 007E  
       __size_of_EEPROM_download 00C3                   __CFG_MCLRE$OFF 0000                  __initialization 004E  
                   __end_of_main 0F81                     __end_of_init 0E94                           ??_main 0059  
                         ??_init 0024                    ?_initPosition 0072                           ?_clear 0072  
               __end_of_addAngle 0D6E                           _ANSELA 018C                           _ANSELB 018D  
                         _ANSELC 018E                           _RA2PPS 0E92                           _RC2PPS 0EA2  
                         _RB7PPS 0E9F                           i1l3015 0030                           i1l3025 0041  
                         i1l3019 0037                           i1l2579 0D7C                           i1l2795 0E1D  
                         u141_25 0D78                           _IOCode 0146         __size_of_setSPI1sendData 0022  
             __size_of_InterMSSP 0048                  ??_InitCalibrate 0031                __end_of_VENDER_ID 1004  
                 __CFG_PWRTE$OFF 0000         __size_of_setSPI2sendData 004B             TransLong256To255@buf 0047  
        __size_of_resetTrainData 000A             TransLong256To255@mod 003D             TransLong256To255@pow 0041  
    __size_of_Calibrate_download 011C                           ___lmul 0EE9                        ??___aldiv 0028  
                      ??___almod 0028                   __CFG_STVREN$ON 0000                           _count1 00D7  
                         _count2 006B                           _readNG 00D9                           _readOK 00DA  
        __size_of_initComu_types 006D                        ??_io_init 0020                     __pdataCOMMON 007D  
                 ??_initPosition 0020                 __end_of_spi_init 0D2E                      initbuffer@i 0022  
                   isTrainSt@buf 002A                  _getMoter_lotate 0CF9                     _ra3condision 0386  
              ??_setMoter_lotate 0020                      ?_ReadEEPROM 0020          __end_of__initialization 009C  
                 __pcstackCOMMON 0072                   ReadEEPROM@addr 0020                     __pidataBANK1 0D0B  
             __end_of_MACHINE_ID 1002                    __end_of_clear 0D52            __size_of_getCargoData 0010  
              ??_EEPROM_download 0031             __end_of_clutchaction 0D39                __end_of_InterMSSP 004C  
                __CFG_LPBOREN$ON 0000                          ??_clear 0020                    ?_setIndexMode 0072  
                   InterMSSP@buf 007A                       __pbssBANK0 0059                       __pbssBANK1 00A0  
                     __pbssBANK2 0120                       __pbssBANK3 01A0               __size_of_isTrainSt 004E  
            clutchaction@comannd 0020           InitCalibrate@cargoData 0032               __size_of_initCargo 0019  
          EEPROM_download@bufint 0039               __size_of_readCargo 011C               __size_of_initIndex 006D  
                _startTrainBytes 00C1               __size_of_initTrain 004A                       _isSPI1read 0D52  
                     _isSPI2read 0D6E                     _getCargoData 0D7E                       __pmaintext 0F4D  
             __size_of_spi1_init 0020               __size_of_spi2_init 0022                          ?___lmul 0020  
                __CFG_PPS1WAY$ON 0000                ??_setSPI1sendData 0072                       __pintentry 0004  
Calibrate_download@spi_Read_data 0057                        ?_addAngle 0072                ??_setSPI2sendData 0020  
                 ___lmul@product 0028              __CFG_RSTOSC$HFINT32 0000              __size_of_ReadEEPROM 0023  
                     _isEndpoint 0F19          __end_of_getMoter_lotate 0CFF                     _isCalibrated 0388  
                  setIndexMode@i 0023           __size_of_setCargoAngle 0006                          _NVMADRH 0892  
                        _NVMADRL 0891                          _NVMDATH 0894                          _NVMDATL 0893  
                 ??_setIndexMode 0021                  _EEPROM_ADDR_buf 00C7                          _SSP1BUF 0211  
                        _SSP2BUF 0219                       _isSendSPI2 0389                       _comu_types 0158  
            setIndexMode@m_index 0022                   _resetTrainData 0D1A             __end_of_initPosition 0E6B  
                     _initComand 064B            TransLong256To255@data 002F                          ___aldiv 0481  
                        ___almod 0503                        ?_spi_init 0072                  __size_of___lmul 0030  
                     ??_addAngle 0074                __end_of_isTrainSt 0706                       _initbuffer 0E94  
                 _initComu_types 05DE               isEndpoint@spi2data 0026                          __ptext1 0D24  
                        __ptext2 07DE                          __ptext3 0DDE                          __ptext4 0706  
                        __ptext5 0F81                          __ptext6 00A0                          __ptext7 0FC0  
                        __ptext8 0DBF                __end_of_initCargo 0DBF                          __ptext9 0D2E  
                     _read_train 079B                          _command 00A0                __end_of_readCargo 01BC  
              __end_of_initIndex 05DE                          _counta2 00D1                          _io_init 0D11  
              __end_of_initTrain 079B                    ?_restartCargo 0072                 ___aldiv@dividend 0024  
                      _IOCAFbits 0393                        _IOCANbits 0392                        _IOCAPbits 0391  
              __end_of_spi1_init 0DFE                __end_of_spi2_init 0800                          _st_type 006D  
                        clrloop0 0D3A            _setSPI1sendDataManual 0D05             end_of_initialization 009C  
         __end_of_resetTrainData 0D24                      ?_isSPI1read 0072                      ?_isSPI2read 0072  
                     _resetCargo 0D8E                    _setCargoAngle 0CFF                 ___aldiv@quotient 002B  
          __size_of_clutchaction 000B                       ??_spi_init 0022                        _VENDER_ID 1002  
               readCargo@buflong 0051           __end_of_initComu_types 064B                   spi1_init@dummy 0021  
                    ?_isEndpoint 0072                  _setMoter_lotate 0DBF                 ?_getMoter_lotate 0072  
                 ??_restartCargo 0020                  _SPI_OFFSET_BYTE 007D                        _TRISBbits 008D  
                      _TRISCbits 008E                 __CFG_FEXTOSC$OFF 0000                   spi2_init@dummy 0021  
                   ??_ReadEEPROM 0022                     _clutchaction 0D2E                  ?_resetTrainData 0072  
                _EEPROM_download 03BE       __end_of_Calibrate_download 02D8                   ?_setCargoAngle 0072  
                    ?_initComand 0072            __end_of_InitCalibrate 0EE9                  ReadEEPROM@Hiadr 0023  
                ReadEEPROM@Loadr 0024             __end_of_setIndexMode 1000                  ?_initComu_types 0072  
                 __end_of___lmul 0F19                    __pidataCOMMON 0003                      ?_initbuffer 0072  
                    ?_read_train 0072               __end_of_ReadEEPROM 0E43              __size_of_isSPI1read 000D  
            __size_of_isSPI2read 0010                    __pbitnvCOMMON 03D8              start_initialization 004E  
         ?_setSPI1sendDataManual 0072                        _InterMSSP 0004                   _isEndPointTrig 03D8  
          __size_of_initPosition 0028                  _setSPI1sendData 0DFE                  _setSPI2sendData 0706  
                    ?_resetCargo 0072              __size_of_isEndpoint 0034                _TransLong256To255 02D8  
                       ??___lmul 0028          __end_of_setMoter_lotate 0DDE               ?_TransLong256To255 002F  
                    __pdataBANK1 00DE                _setComunicateMode 0F81                __size_of_addAngle 000F  
             ?_setComunicateMode 0072              ??_TransLong256To255 0033                      __pbssBIGRAM 24F0  
                    __pbssCOMMON 007C                        ___latbits 0003                    __pcstackBANK0 0020  
                  __pcstackBANK1 00E4                     _initPosition 0E43           EEPROM_download@buflong 0035  
                    _cargo_index 0134              ??_setComunicateMode 0058              __size_of_initComand 006D  
                     ?_InterMSSP 0072          __end_of_EEPROM_download 0481                        _calibdata 00B2  
            __size_of_initbuffer 002A                        _cargoData 0059                  ??_setCargoAngle 0074  
            __size_of_read_train 0043        __end_of_TransLong256To255 03BE             __end_of_restartCargo 0CF9  
          _spi1_send_buffer_data 24F0        Calibrate_download@buflong 0051        __end_of_setComunicateMode 0FC0  
                       ?___aldiv 0020                         ?___almod 0020                        _direction 00DE  
        readCargo@spi1_Read_data 0057                __size_of_spi_init 000A                 ___almod@dividend 0024  
                      __pswtext1 0834                        __pswtext2 0800                        __pswtext3 0840  
                      __pswtext4 0820                        _isMycargo 0381                         ?_io_init 0072  
                      _isTrainSt 06B8              __size_of_resetCargo 0018                        _countabuf 0069  
                      _initCargo 0DA6                        _readCargo 00A0                        _initIndex 0571  
                      _linkAngle 00E0          __end_of_setSPI1sendData 0E20                        _initTrain 0751  
                 __size_of_clear 000D          __end_of_setSPI2sendData 0751                  ___aldiv@divisor 0020  
                      _spi1_init 0DDE                        _spi2_init 07DE                  ___aldiv@counter 0029  
                       _LATAbits 010C                     ??_isSPI1read 0020                     ??_isSPI2read 0072  
                      clear_ram0 0D39       setCargoAngle@m_linkAngleTo 0072            __size_of_setIndexMode 0040  
                       _PIE0bits 0090                         _PIE1bits 0091                         _PIE2bits 0092  
                      _send_data 00DC                         _PIR0bits 0010                         _PIR1bits 0011  
                       _PIR2bits 0012                  readCargo@bufint 0055                 ?_setMoter_lotate 0072  
                   ??_isEndpoint 0021                       ?_isTrainSt 0072               __end_of_isSPI1read 0D5F  
             __end_of_isSPI2read 0D7E                       ?_initCargo 0072                    _SSP1SSPPSbits 0E22  
                     ?_readCargo 0072                       ?_initIndex 0072                       ?_initTrain 0072  
                    ??_InterMSSP 0074                     _setIndexMode 0FC0                ___lmul@multiplier 0020  
                  _SSP2SSPPSbits 0E1F                 ??_resetTrainData 0020                 ?_EEPROM_download 0072  
                       _RaadData 00C9                   _eeprom_address 00DD                       ?_spi1_init 0072  
                     ?_spi2_init 0072       __size_of_TransLong256To255 00E6                 ??_initComu_types 0020  
             __end_of_isEndpoint 0F4D                     ??_initComand 0020       __size_of_setComunicateMode 003F  
               __size_of___aldiv 0082                 __size_of___almod 006E                         _addAngle 0D5F  
                   ??_initbuffer 0020                 _spi1_buffer_data 26F0                     ??_read_train 0020  
             _Calibrate_download 01BC          ??_setSPI1sendDataManual 0020                   _workingcounta0 0385  
                 _workingcounta1 0384                   _workingcounta2 0383                   _workingcounta3 0382  
               __size_of_io_init 0009                       _MACHINE_ID 1000                      _read_count1 00D5  
                    _read_count2 00CF              ?_Calibrate_download 0072                 ?_setSPI1sendData 0072  
                       __ptext10 03BE                         __ptext11 0E20                         __ptext20 0EBE  
                       __ptext12 01BC                         __ptext21 0D7E                         __ptext13 0D8E  
                       __ptext30 0571                         __ptext22 079B                         __ptext14 0F19  
                       __ptext31 05DE                         __ptext23 0D52                         __ptext15 0D05  
                       __ptext40 0D5F                         __ptext32 064B                         __ptext24 0D11  
                       __ptext16 02D8                         __ptext41 0CFF                         __ptext33 0DA6  
                       __ptext25 0751                         __ptext17 0EE9                         __ptext42 0CF9  
                       __ptext34 0E6B                         __ptext26 0D1A                         __ptext18 0503  
                       __ptext35 0E94                         __ptext27 0CF4                         __ptext19 0481  
                       __ptext36 0D45                         __ptext28 06B8                         __ptext29 0E43  
                       __ptext38 0DFE                         __ptext39 0D6E                     _SSP1CON1bits 0215  
                   _SSP1CON3bits 0217                         _isMyAddr 0380               __end_of_initComand 06B8  
               ?_setSPI2sendData 0072                     _SSP2CON1bits 021D                   _spi1_Read_data 007C  
                ___almod@divisor 0020                     _SSP2CON3bits 021F                  ___almod@counter 0029  
       __size_of_getMoter_lotate 0006            __size_of_restartCargo 0005                         _linkInfo 00BB  
                  __size_of_main 0034                    __size_of_init 0029                     ??_resetCargo 0020  
             __end_of_initbuffer 0EBE                    ?_getCargoData 0020                   _spi2_Read_data 00DB  
             __end_of_read_train 07DE             ??_Calibrate_download 004B                      _isreadTrain 0387  
                       _spi_init 0D24                         int$flags 007E                         _trainPos 00D3  
                       _position 0120                   _spi2_Send_data 006E                     _SSP1STATbits 0214  
               _spi2_buffer_data 25F0                     _SSP2STATbits 021C                    _st_dataLength 00E2  
                     _INLVLAbits 038C                       _INLVLBbits 038D                       _INLVLCbits 038E  
                    ??_isTrainSt 0020                      _OSCTUNEbits 091E                       _INTCONbits 000B  
                    _NVMCON1bits 0895                      ??_initCargo 0020                     _restartCargo 0CF4  
             __end_of_resetCargo 0DA6                      ??_readCargo 004B                      ??_initIndex 0020  
                    ??_initTrain 002B           __size_of_InitCalibrate 002B                      _send_count1 00CB  
          setMoter_lotate@lotate 0020                         intlevel1 0000                      ??_spi1_init 0020  
                    ??_spi2_init 0020                   ??_getCargoData 0030                __CFG_CLKOUTEN$OFF 0000  
  EEPROM_download@spi1_Read_data 003B                       _OSCFRQbits 091F       TransLong256To255@TransData 0037  
                  __pstringtext1 1000                    __pstringtext2 1002                     ___aldiv@sign 002A  
      setSPI1sendDataManual@data 0020                       _SIZE_COUNT 00C5                     ___almod@sign 002A  
               read_train@bufint 0022                  _spi1_send_count 00CD            __end_of_setCargoAngle 0D05  
              ??_getMoter_lotate 0074  

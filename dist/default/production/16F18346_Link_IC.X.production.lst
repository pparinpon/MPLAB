

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Tue Jul 17 21:26:47 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F18346
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	eeprom_data,global,class=EEDATA,space=3,delta=2
     5                           	psect	idataCOMMON,global,class=CODE,delta=2
     6                           	psect	idataBANK1,global,class=CODE,delta=2
     7                           	psect	stringtext1,global,class=STRCODE,delta=2
     8                           	psect	stringtext2,global,class=STRCODE,delta=2
     9                           	psect	bitnvCOMMON,global,bit,class=COMMON,space=1,delta=1
    10                           	psect	cinit,global,class=CODE,merge=1,delta=2
    11                           	psect	bitbssCOMMON,global,bit,class=COMMON,space=1,delta=1
    12                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    18                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    19                           	psect	clrtext,global,class=CODE,delta=2
    20                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    21                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    22                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    23                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    24                           	psect	text1,local,class=CODE,merge=1,delta=2
    25                           	psect	text2,local,class=CODE,merge=1,delta=2
    26                           	psect	text3,local,class=CODE,merge=1,delta=2
    27                           	psect	text4,local,class=CODE,merge=1,delta=2
    28                           	psect	swtext1,local,class=CONST,delta=2
    29                           	psect	text5,local,class=CODE,merge=1,delta=2
    30                           	psect	swtext2,local,class=CONST,delta=2
    31                           	psect	text6,local,class=CODE,merge=1,delta=2
    32                           	psect	text7,local,class=CODE,merge=1,delta=2
    33                           	psect	text8,local,class=CODE,merge=1,delta=2
    34                           	psect	text9,local,class=CODE,merge=1,delta=2
    35                           	psect	swtext3,local,class=CONST,delta=2
    36                           	psect	text10,local,class=CODE,merge=1,delta=2
    37                           	psect	text11,local,class=CODE,merge=1,delta=2
    38                           	psect	swtext4,local,class=CONST,delta=2
    39                           	psect	text12,local,class=CODE,merge=1,delta=2
    40                           	psect	text13,local,class=CODE,merge=1,delta=2
    41                           	psect	text14,local,class=CODE,merge=1,delta=2
    42                           	psect	text15,local,class=CODE,merge=1,delta=2
    43                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    44                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    45                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    46                           	psect	text19,local,class=CODE,merge=1,delta=2
    47                           	psect	text20,local,class=CODE,merge=1,delta=2
    48                           	psect	text21,local,class=CODE,merge=1,delta=2
    49                           	psect	text22,local,class=CODE,merge=1,delta=2
    50                           	psect	text23,local,class=CODE,merge=1,delta=2
    51                           	psect	text24,local,class=CODE,merge=1,delta=2
    52                           	psect	text25,local,class=CODE,merge=1,delta=2
    53                           	psect	text26,local,class=CODE,merge=1,delta=2
    54                           	psect	text27,local,class=CODE,merge=1,delta=2
    55                           	psect	text28,local,class=CODE,merge=1,delta=2
    56                           	psect	text29,local,class=CODE,merge=1,delta=2
    57                           	psect	text30,local,class=CODE,merge=1,delta=2
    58                           	psect	text31,local,class=CODE,merge=1,delta=2
    59                           	psect	text32,local,class=CODE,merge=1,delta=2
    60                           	psect	text33,local,class=CODE,merge=1,delta=2
    61                           	psect	text34,local,class=CODE,merge=1,delta=2
    62                           	psect	text35,local,class=CODE,merge=1,delta=2
    63                           	psect	intentry,global,class=CODE,delta=2
    64                           	psect	text37,local,class=CODE,merge=1,delta=2
    65                           	psect	text38,local,class=CODE,merge=1,delta=2
    66                           	psect	text39,local,class=CODE,merge=1,delta=2
    67                           	psect	text40,local,class=CODE,merge=1,delta=2
    68                           	psect	text41,local,class=CODE,merge=1,delta=2
    69                           	dabs	1,0xCA0,32
    70                           	dabs	1,0xC20,80
    71                           	dabs	1,0xBA0,80
    72                           	dabs	1,0xB30,64
    73                           	dabs	1,0xB20,16
    74                           	dabs	1,0xAA0,80
    75                           	dabs	1,0xA20,80
    76                           	dabs	1,0x9A0,80
    77                           	dabs	1,0x920,80
    78                           	dabs	1,0x8A0,80
    79                           	dabs	1,0x820,80
    80                           	dabs	1,0x7E0,16
    81                           	dabs	1,0x24F0,0,_spi1_send_buffer_data
    82                           	dabs	1,0x25F0,0,_spi2_buffer_data
    83                           	dabs	1,0x26F0,0,_spi1_buffer_data
    84                           	dabs	1,0x7E,2
    85  0000                     
    86                           ; Version 1.45
    87                           ; Generated 16/11/2017 GMT
    88                           ; 
    89                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    90                           ; All rights reserved.
    91                           ; 
    92                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    93                           ; 
    94                           ; Redistribution and use in source and binary forms, with or without modification, are
    95                           ; permitted provided that the following conditions are met:
    96                           ; 
    97                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    98                           ;        conditions and the following disclaimer.
    99                           ; 
   100                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   101                           ;        of conditions and the following disclaimer in the documentation and/or other
   102                           ;        materials provided with the distribution.
   103                           ; 
   104                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   105                           ;        software without specific prior written permission.
   106                           ; 
   107                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   108                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   109                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   110                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   111                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   112                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   113                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   114                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   115                           ; 
   116                           ; 
   117                           ; Code-generator required, PIC16F18346 Definitions
   118                           ; 
   119                           ; SFR Addresses
   120  0000                     	;# 
   121  0001                     	;# 
   122  0002                     	;# 
   123  0003                     	;# 
   124  0004                     	;# 
   125  0005                     	;# 
   126  0006                     	;# 
   127  0007                     	;# 
   128  0008                     	;# 
   129  0009                     	;# 
   130  000A                     	;# 
   131  000B                     	;# 
   132  000C                     	;# 
   133  000D                     	;# 
   134  000E                     	;# 
   135  0010                     	;# 
   136  0011                     	;# 
   137  0012                     	;# 
   138  0013                     	;# 
   139  0014                     	;# 
   140  0015                     	;# 
   141  0015                     	;# 
   142  0016                     	;# 
   143  0016                     	;# 
   144  0017                     	;# 
   145  0018                     	;# 
   146  0019                     	;# 
   147  0019                     	;# 
   148  001A                     	;# 
   149  001B                     	;# 
   150  001C                     	;# 
   151  001D                     	;# 
   152  001E                     	;# 
   153  001F                     	;# 
   154  008C                     	;# 
   155  008D                     	;# 
   156  008E                     	;# 
   157  0090                     	;# 
   158  0091                     	;# 
   159  0092                     	;# 
   160  0093                     	;# 
   161  0094                     	;# 
   162  0097                     	;# 
   163  009B                     	;# 
   164  009B                     	;# 
   165  009C                     	;# 
   166  009D                     	;# 
   167  009E                     	;# 
   168  009F                     	;# 
   169  010C                     	;# 
   170  010D                     	;# 
   171  010E                     	;# 
   172  0111                     	;# 
   173  0112                     	;# 
   174  0113                     	;# 
   175  0114                     	;# 
   176  0115                     	;# 
   177  0116                     	;# 
   178  0117                     	;# 
   179  0118                     	;# 
   180  0119                     	;# 
   181  018C                     	;# 
   182  018D                     	;# 
   183  018E                     	;# 
   184  0197                     	;# 
   185  0199                     	;# 
   186  0199                     	;# 
   187  0199                     	;# 
   188  019A                     	;# 
   189  019A                     	;# 
   190  019A                     	;# 
   191  019B                     	;# 
   192  019B                     	;# 
   193  019B                     	;# 
   194  019B                     	;# 
   195  019B                     	;# 
   196  019C                     	;# 
   197  019C                     	;# 
   198  019C                     	;# 
   199  019D                     	;# 
   200  019D                     	;# 
   201  019D                     	;# 
   202  019E                     	;# 
   203  019E                     	;# 
   204  019E                     	;# 
   205  019F                     	;# 
   206  019F                     	;# 
   207  019F                     	;# 
   208  019F                     	;# 
   209  019F                     	;# 
   210  020C                     	;# 
   211  020D                     	;# 
   212  020E                     	;# 
   213  0211                     	;# 
   214  0211                     	;# 
   215  0212                     	;# 
   216  0212                     	;# 
   217  0213                     	;# 
   218  0213                     	;# 
   219  0214                     	;# 
   220  0214                     	;# 
   221  0215                     	;# 
   222  0215                     	;# 
   223  0215                     	;# 
   224  0215                     	;# 
   225  0216                     	;# 
   226  0216                     	;# 
   227  0217                     	;# 
   228  0217                     	;# 
   229  0219                     	;# 
   230  021A                     	;# 
   231  021B                     	;# 
   232  021C                     	;# 
   233  021D                     	;# 
   234  021D                     	;# 
   235  021E                     	;# 
   236  021F                     	;# 
   237  028C                     	;# 
   238  028D                     	;# 
   239  028E                     	;# 
   240  0291                     	;# 
   241  0291                     	;# 
   242  0292                     	;# 
   243  0293                     	;# 
   244  0294                     	;# 
   245  0295                     	;# 
   246  0295                     	;# 
   247  0296                     	;# 
   248  0297                     	;# 
   249  0298                     	;# 
   250  029F                     	;# 
   251  030C                     	;# 
   252  030D                     	;# 
   253  030E                     	;# 
   254  0311                     	;# 
   255  0311                     	;# 
   256  0312                     	;# 
   257  0313                     	;# 
   258  0314                     	;# 
   259  0315                     	;# 
   260  0315                     	;# 
   261  0316                     	;# 
   262  0317                     	;# 
   263  0318                     	;# 
   264  038C                     	;# 
   265  038D                     	;# 
   266  038E                     	;# 
   267  0391                     	;# 
   268  0392                     	;# 
   269  0393                     	;# 
   270  0394                     	;# 
   271  0395                     	;# 
   272  0396                     	;# 
   273  0397                     	;# 
   274  0398                     	;# 
   275  0399                     	;# 
   276  039A                     	;# 
   277  039C                     	;# 
   278  039D                     	;# 
   279  039E                     	;# 
   280  039F                     	;# 
   281  0411                     	;# 
   282  0411                     	;# 
   283  0412                     	;# 
   284  0413                     	;# 
   285  0414                     	;# 
   286  0415                     	;# 
   287  0416                     	;# 
   288  0417                     	;# 
   289  0418                     	;# 
   290  0418                     	;# 
   291  0419                     	;# 
   292  041A                     	;# 
   293  041B                     	;# 
   294  041C                     	;# 
   295  041D                     	;# 
   296  041E                     	;# 
   297  041F                     	;# 
   298  0498                     	;# 
   299  0498                     	;# 
   300  0499                     	;# 
   301  049A                     	;# 
   302  049B                     	;# 
   303  049B                     	;# 
   304  049C                     	;# 
   305  049D                     	;# 
   306  049E                     	;# 
   307  049F                     	;# 
   308  0617                     	;# 
   309  0618                     	;# 
   310  0619                     	;# 
   311  0619                     	;# 
   312  061A                     	;# 
   313  061B                     	;# 
   314  061C                     	;# 
   315  061C                     	;# 
   316  061F                     	;# 
   317  0691                     	;# 
   318  0692                     	;# 
   319  0693                     	;# 
   320  0694                     	;# 
   321  0695                     	;# 
   322  0696                     	;# 
   323  0697                     	;# 
   324  0698                     	;# 
   325  0699                     	;# 
   326  0711                     	;# 
   327  0712                     	;# 
   328  0713                     	;# 
   329  0714                     	;# 
   330  0715                     	;# 
   331  0716                     	;# 
   332  0717                     	;# 
   333  0718                     	;# 
   334  0719                     	;# 
   335  0891                     	;# 
   336  0891                     	;# 
   337  0891                     	;# 
   338  0891                     	;# 
   339  0891                     	;# 
   340  0891                     	;# 
   341  0892                     	;# 
   342  0892                     	;# 
   343  0892                     	;# 
   344  0893                     	;# 
   345  0893                     	;# 
   346  0893                     	;# 
   347  0893                     	;# 
   348  0893                     	;# 
   349  0893                     	;# 
   350  0894                     	;# 
   351  0894                     	;# 
   352  0894                     	;# 
   353  0895                     	;# 
   354  0895                     	;# 
   355  0895                     	;# 
   356  0896                     	;# 
   357  0896                     	;# 
   358  0896                     	;# 
   359  089B                     	;# 
   360  0911                     	;# 
   361  0912                     	;# 
   362  0913                     	;# 
   363  0914                     	;# 
   364  0915                     	;# 
   365  0916                     	;# 
   366  0918                     	;# 
   367  0919                     	;# 
   368  091A                     	;# 
   369  091B                     	;# 
   370  091C                     	;# 
   371  091D                     	;# 
   372  091E                     	;# 
   373  091F                     	;# 
   374  0E0F                     	;# 
   375  0E10                     	;# 
   376  0E11                     	;# 
   377  0E12                     	;# 
   378  0E13                     	;# 
   379  0E14                     	;# 
   380  0E15                     	;# 
   381  0E16                     	;# 
   382  0E17                     	;# 
   383  0E18                     	;# 
   384  0E19                     	;# 
   385  0E1A                     	;# 
   386  0E1B                     	;# 
   387  0E1C                     	;# 
   388  0E1D                     	;# 
   389  0E1E                     	;# 
   390  0E1F                     	;# 
   391  0E20                     	;# 
   392  0E21                     	;# 
   393  0E22                     	;# 
   394  0E24                     	;# 
   395  0E25                     	;# 
   396  0E28                     	;# 
   397  0E29                     	;# 
   398  0E2A                     	;# 
   399  0E2B                     	;# 
   400  0E2C                     	;# 
   401  0E2D                     	;# 
   402  0E2E                     	;# 
   403  0E2F                     	;# 
   404  0E90                     	;# 
   405  0E91                     	;# 
   406  0E92                     	;# 
   407  0E94                     	;# 
   408  0E95                     	;# 
   409  0E9C                     	;# 
   410  0E9D                     	;# 
   411  0E9E                     	;# 
   412  0E9F                     	;# 
   413  0EA0                     	;# 
   414  0EA1                     	;# 
   415  0EA2                     	;# 
   416  0EA3                     	;# 
   417  0EA4                     	;# 
   418  0EA5                     	;# 
   419  0EA6                     	;# 
   420  0EA7                     	;# 
   421  0F0F                     	;# 
   422  0F10                     	;# 
   423  0F11                     	;# 
   424  0F12                     	;# 
   425  0F13                     	;# 
   426  0F14                     	;# 
   427  0F15                     	;# 
   428  0F16                     	;# 
   429  0F17                     	;# 
   430  0F18                     	;# 
   431  0F19                     	;# 
   432  0F1A                     	;# 
   433  0F1B                     	;# 
   434  0F1C                     	;# 
   435  0F1D                     	;# 
   436  0F1E                     	;# 
   437  0F1F                     	;# 
   438  0F20                     	;# 
   439  0F21                     	;# 
   440  0F22                     	;# 
   441  0F23                     	;# 
   442  0F24                     	;# 
   443  0F25                     	;# 
   444  0F26                     	;# 
   445  0F27                     	;# 
   446  0F28                     	;# 
   447  0F29                     	;# 
   448  0F2A                     	;# 
   449  0F2B                     	;# 
   450  0F2C                     	;# 
   451  0F2D                     	;# 
   452  0F2E                     	;# 
   453  0F2F                     	;# 
   454  0F30                     	;# 
   455  0F31                     	;# 
   456  0F32                     	;# 
   457  0F33                     	;# 
   458  0F34                     	;# 
   459  0F35                     	;# 
   460  0F36                     	;# 
   461  0F37                     	;# 
   462  0FE4                     	;# 
   463  0FE5                     	;# 
   464  0FE6                     	;# 
   465  0FE7                     	;# 
   466  0FE8                     	;# 
   467  0FE9                     	;# 
   468  0FEA                     	;# 
   469  0FEB                     	;# 
   470  0FED                     	;# 
   471  0FEE                     	;# 
   472  0FEF                     	;# 
   473  0000                     	;# 
   474  0001                     	;# 
   475  0002                     	;# 
   476  0003                     	;# 
   477  0004                     	;# 
   478  0005                     	;# 
   479  0006                     	;# 
   480  0007                     	;# 
   481  0008                     	;# 
   482  0009                     	;# 
   483  000A                     	;# 
   484  000B                     	;# 
   485  000C                     	;# 
   486  000D                     	;# 
   487  000E                     	;# 
   488  0010                     	;# 
   489  0011                     	;# 
   490  0012                     	;# 
   491  0013                     	;# 
   492  0014                     	;# 
   493  0015                     	;# 
   494  0015                     	;# 
   495  0016                     	;# 
   496  0016                     	;# 
   497  0017                     	;# 
   498  0018                     	;# 
   499  0019                     	;# 
   500  0019                     	;# 
   501  001A                     	;# 
   502  001B                     	;# 
   503  001C                     	;# 
   504  001D                     	;# 
   505  001E                     	;# 
   506  001F                     	;# 
   507  008C                     	;# 
   508  008D                     	;# 
   509  008E                     	;# 
   510  0090                     	;# 
   511  0091                     	;# 
   512  0092                     	;# 
   513  0093                     	;# 
   514  0094                     	;# 
   515  0097                     	;# 
   516  009B                     	;# 
   517  009B                     	;# 
   518  009C                     	;# 
   519  009D                     	;# 
   520  009E                     	;# 
   521  009F                     	;# 
   522  010C                     	;# 
   523  010D                     	;# 
   524  010E                     	;# 
   525  0111                     	;# 
   526  0112                     	;# 
   527  0113                     	;# 
   528  0114                     	;# 
   529  0115                     	;# 
   530  0116                     	;# 
   531  0117                     	;# 
   532  0118                     	;# 
   533  0119                     	;# 
   534  018C                     	;# 
   535  018D                     	;# 
   536  018E                     	;# 
   537  0197                     	;# 
   538  0199                     	;# 
   539  0199                     	;# 
   540  0199                     	;# 
   541  019A                     	;# 
   542  019A                     	;# 
   543  019A                     	;# 
   544  019B                     	;# 
   545  019B                     	;# 
   546  019B                     	;# 
   547  019B                     	;# 
   548  019B                     	;# 
   549  019C                     	;# 
   550  019C                     	;# 
   551  019C                     	;# 
   552  019D                     	;# 
   553  019D                     	;# 
   554  019D                     	;# 
   555  019E                     	;# 
   556  019E                     	;# 
   557  019E                     	;# 
   558  019F                     	;# 
   559  019F                     	;# 
   560  019F                     	;# 
   561  019F                     	;# 
   562  019F                     	;# 
   563  020C                     	;# 
   564  020D                     	;# 
   565  020E                     	;# 
   566  0211                     	;# 
   567  0211                     	;# 
   568  0212                     	;# 
   569  0212                     	;# 
   570  0213                     	;# 
   571  0213                     	;# 
   572  0214                     	;# 
   573  0214                     	;# 
   574  0215                     	;# 
   575  0215                     	;# 
   576  0215                     	;# 
   577  0215                     	;# 
   578  0216                     	;# 
   579  0216                     	;# 
   580  0217                     	;# 
   581  0217                     	;# 
   582  0219                     	;# 
   583  021A                     	;# 
   584  021B                     	;# 
   585  021C                     	;# 
   586  021D                     	;# 
   587  021D                     	;# 
   588  021E                     	;# 
   589  021F                     	;# 
   590  028C                     	;# 
   591  028D                     	;# 
   592  028E                     	;# 
   593  0291                     	;# 
   594  0291                     	;# 
   595  0292                     	;# 
   596  0293                     	;# 
   597  0294                     	;# 
   598  0295                     	;# 
   599  0295                     	;# 
   600  0296                     	;# 
   601  0297                     	;# 
   602  0298                     	;# 
   603  029F                     	;# 
   604  030C                     	;# 
   605  030D                     	;# 
   606  030E                     	;# 
   607  0311                     	;# 
   608  0311                     	;# 
   609  0312                     	;# 
   610  0313                     	;# 
   611  0314                     	;# 
   612  0315                     	;# 
   613  0315                     	;# 
   614  0316                     	;# 
   615  0317                     	;# 
   616  0318                     	;# 
   617  038C                     	;# 
   618  038D                     	;# 
   619  038E                     	;# 
   620  0391                     	;# 
   621  0392                     	;# 
   622  0393                     	;# 
   623  0394                     	;# 
   624  0395                     	;# 
   625  0396                     	;# 
   626  0397                     	;# 
   627  0398                     	;# 
   628  0399                     	;# 
   629  039A                     	;# 
   630  039C                     	;# 
   631  039D                     	;# 
   632  039E                     	;# 
   633  039F                     	;# 
   634  0411                     	;# 
   635  0411                     	;# 
   636  0412                     	;# 
   637  0413                     	;# 
   638  0414                     	;# 
   639  0415                     	;# 
   640  0416                     	;# 
   641  0417                     	;# 
   642  0418                     	;# 
   643  0418                     	;# 
   644  0419                     	;# 
   645  041A                     	;# 
   646  041B                     	;# 
   647  041C                     	;# 
   648  041D                     	;# 
   649  041E                     	;# 
   650  041F                     	;# 
   651  0498                     	;# 
   652  0498                     	;# 
   653  0499                     	;# 
   654  049A                     	;# 
   655  049B                     	;# 
   656  049B                     	;# 
   657  049C                     	;# 
   658  049D                     	;# 
   659  049E                     	;# 
   660  049F                     	;# 
   661  0617                     	;# 
   662  0618                     	;# 
   663  0619                     	;# 
   664  0619                     	;# 
   665  061A                     	;# 
   666  061B                     	;# 
   667  061C                     	;# 
   668  061C                     	;# 
   669  061F                     	;# 
   670  0691                     	;# 
   671  0692                     	;# 
   672  0693                     	;# 
   673  0694                     	;# 
   674  0695                     	;# 
   675  0696                     	;# 
   676  0697                     	;# 
   677  0698                     	;# 
   678  0699                     	;# 
   679  0711                     	;# 
   680  0712                     	;# 
   681  0713                     	;# 
   682  0714                     	;# 
   683  0715                     	;# 
   684  0716                     	;# 
   685  0717                     	;# 
   686  0718                     	;# 
   687  0719                     	;# 
   688  0891                     	;# 
   689  0891                     	;# 
   690  0891                     	;# 
   691  0891                     	;# 
   692  0891                     	;# 
   693  0891                     	;# 
   694  0892                     	;# 
   695  0892                     	;# 
   696  0892                     	;# 
   697  0893                     	;# 
   698  0893                     	;# 
   699  0893                     	;# 
   700  0893                     	;# 
   701  0893                     	;# 
   702  0893                     	;# 
   703  0894                     	;# 
   704  0894                     	;# 
   705  0894                     	;# 
   706  0895                     	;# 
   707  0895                     	;# 
   708  0895                     	;# 
   709  0896                     	;# 
   710  0896                     	;# 
   711  0896                     	;# 
   712  089B                     	;# 
   713  0911                     	;# 
   714  0912                     	;# 
   715  0913                     	;# 
   716  0914                     	;# 
   717  0915                     	;# 
   718  0916                     	;# 
   719  0918                     	;# 
   720  0919                     	;# 
   721  091A                     	;# 
   722  091B                     	;# 
   723  091C                     	;# 
   724  091D                     	;# 
   725  091E                     	;# 
   726  091F                     	;# 
   727  0E0F                     	;# 
   728  0E10                     	;# 
   729  0E11                     	;# 
   730  0E12                     	;# 
   731  0E13                     	;# 
   732  0E14                     	;# 
   733  0E15                     	;# 
   734  0E16                     	;# 
   735  0E17                     	;# 
   736  0E18                     	;# 
   737  0E19                     	;# 
   738  0E1A                     	;# 
   739  0E1B                     	;# 
   740  0E1C                     	;# 
   741  0E1D                     	;# 
   742  0E1E                     	;# 
   743  0E1F                     	;# 
   744  0E20                     	;# 
   745  0E21                     	;# 
   746  0E22                     	;# 
   747  0E24                     	;# 
   748  0E25                     	;# 
   749  0E28                     	;# 
   750  0E29                     	;# 
   751  0E2A                     	;# 
   752  0E2B                     	;# 
   753  0E2C                     	;# 
   754  0E2D                     	;# 
   755  0E2E                     	;# 
   756  0E2F                     	;# 
   757  0E90                     	;# 
   758  0E91                     	;# 
   759  0E92                     	;# 
   760  0E94                     	;# 
   761  0E95                     	;# 
   762  0E9C                     	;# 
   763  0E9D                     	;# 
   764  0E9E                     	;# 
   765  0E9F                     	;# 
   766  0EA0                     	;# 
   767  0EA1                     	;# 
   768  0EA2                     	;# 
   769  0EA3                     	;# 
   770  0EA4                     	;# 
   771  0EA5                     	;# 
   772  0EA6                     	;# 
   773  0EA7                     	;# 
   774  0F0F                     	;# 
   775  0F10                     	;# 
   776  0F11                     	;# 
   777  0F12                     	;# 
   778  0F13                     	;# 
   779  0F14                     	;# 
   780  0F15                     	;# 
   781  0F16                     	;# 
   782  0F17                     	;# 
   783  0F18                     	;# 
   784  0F19                     	;# 
   785  0F1A                     	;# 
   786  0F1B                     	;# 
   787  0F1C                     	;# 
   788  0F1D                     	;# 
   789  0F1E                     	;# 
   790  0F1F                     	;# 
   791  0F20                     	;# 
   792  0F21                     	;# 
   793  0F22                     	;# 
   794  0F23                     	;# 
   795  0F24                     	;# 
   796  0F25                     	;# 
   797  0F26                     	;# 
   798  0F27                     	;# 
   799  0F28                     	;# 
   800  0F29                     	;# 
   801  0F2A                     	;# 
   802  0F2B                     	;# 
   803  0F2C                     	;# 
   804  0F2D                     	;# 
   805  0F2E                     	;# 
   806  0F2F                     	;# 
   807  0F30                     	;# 
   808  0F31                     	;# 
   809  0F32                     	;# 
   810  0F33                     	;# 
   811  0F34                     	;# 
   812  0F35                     	;# 
   813  0F36                     	;# 
   814  0F37                     	;# 
   815  0FE4                     	;# 
   816  0FE5                     	;# 
   817  0FE6                     	;# 
   818  0FE7                     	;# 
   819  0FE8                     	;# 
   820  0FE9                     	;# 
   821  0FEA                     	;# 
   822  0FEB                     	;# 
   823  0FED                     	;# 
   824  0FEE                     	;# 
   825  0FEF                     	;# 
   826  0000                     	;# 
   827  0001                     	;# 
   828  0002                     	;# 
   829  0003                     	;# 
   830  0004                     	;# 
   831  0005                     	;# 
   832  0006                     	;# 
   833  0007                     	;# 
   834  0008                     	;# 
   835  0009                     	;# 
   836  000A                     	;# 
   837  000B                     	;# 
   838  000C                     	;# 
   839  000D                     	;# 
   840  000E                     	;# 
   841  0010                     	;# 
   842  0011                     	;# 
   843  0012                     	;# 
   844  0013                     	;# 
   845  0014                     	;# 
   846  0015                     	;# 
   847  0015                     	;# 
   848  0016                     	;# 
   849  0016                     	;# 
   850  0017                     	;# 
   851  0018                     	;# 
   852  0019                     	;# 
   853  0019                     	;# 
   854  001A                     	;# 
   855  001B                     	;# 
   856  001C                     	;# 
   857  001D                     	;# 
   858  001E                     	;# 
   859  001F                     	;# 
   860  008C                     	;# 
   861  008D                     	;# 
   862  008E                     	;# 
   863  0090                     	;# 
   864  0091                     	;# 
   865  0092                     	;# 
   866  0093                     	;# 
   867  0094                     	;# 
   868  0097                     	;# 
   869  009B                     	;# 
   870  009B                     	;# 
   871  009C                     	;# 
   872  009D                     	;# 
   873  009E                     	;# 
   874  009F                     	;# 
   875  010C                     	;# 
   876  010D                     	;# 
   877  010E                     	;# 
   878  0111                     	;# 
   879  0112                     	;# 
   880  0113                     	;# 
   881  0114                     	;# 
   882  0115                     	;# 
   883  0116                     	;# 
   884  0117                     	;# 
   885  0118                     	;# 
   886  0119                     	;# 
   887  018C                     	;# 
   888  018D                     	;# 
   889  018E                     	;# 
   890  0197                     	;# 
   891  0199                     	;# 
   892  0199                     	;# 
   893  0199                     	;# 
   894  019A                     	;# 
   895  019A                     	;# 
   896  019A                     	;# 
   897  019B                     	;# 
   898  019B                     	;# 
   899  019B                     	;# 
   900  019B                     	;# 
   901  019B                     	;# 
   902  019C                     	;# 
   903  019C                     	;# 
   904  019C                     	;# 
   905  019D                     	;# 
   906  019D                     	;# 
   907  019D                     	;# 
   908  019E                     	;# 
   909  019E                     	;# 
   910  019E                     	;# 
   911  019F                     	;# 
   912  019F                     	;# 
   913  019F                     	;# 
   914  019F                     	;# 
   915  019F                     	;# 
   916  020C                     	;# 
   917  020D                     	;# 
   918  020E                     	;# 
   919  0211                     	;# 
   920  0211                     	;# 
   921  0212                     	;# 
   922  0212                     	;# 
   923  0213                     	;# 
   924  0213                     	;# 
   925  0214                     	;# 
   926  0214                     	;# 
   927  0215                     	;# 
   928  0215                     	;# 
   929  0215                     	;# 
   930  0215                     	;# 
   931  0216                     	;# 
   932  0216                     	;# 
   933  0217                     	;# 
   934  0217                     	;# 
   935  0219                     	;# 
   936  021A                     	;# 
   937  021B                     	;# 
   938  021C                     	;# 
   939  021D                     	;# 
   940  021D                     	;# 
   941  021E                     	;# 
   942  021F                     	;# 
   943  028C                     	;# 
   944  028D                     	;# 
   945  028E                     	;# 
   946  0291                     	;# 
   947  0291                     	;# 
   948  0292                     	;# 
   949  0293                     	;# 
   950  0294                     	;# 
   951  0295                     	;# 
   952  0295                     	;# 
   953  0296                     	;# 
   954  0297                     	;# 
   955  0298                     	;# 
   956  029F                     	;# 
   957  030C                     	;# 
   958  030D                     	;# 
   959  030E                     	;# 
   960  0311                     	;# 
   961  0311                     	;# 
   962  0312                     	;# 
   963  0313                     	;# 
   964  0314                     	;# 
   965  0315                     	;# 
   966  0315                     	;# 
   967  0316                     	;# 
   968  0317                     	;# 
   969  0318                     	;# 
   970  038C                     	;# 
   971  038D                     	;# 
   972  038E                     	;# 
   973  0391                     	;# 
   974  0392                     	;# 
   975  0393                     	;# 
   976  0394                     	;# 
   977  0395                     	;# 
   978  0396                     	;# 
   979  0397                     	;# 
   980  0398                     	;# 
   981  0399                     	;# 
   982  039A                     	;# 
   983  039C                     	;# 
   984  039D                     	;# 
   985  039E                     	;# 
   986  039F                     	;# 
   987  0411                     	;# 
   988  0411                     	;# 
   989  0412                     	;# 
   990  0413                     	;# 
   991  0414                     	;# 
   992  0415                     	;# 
   993  0416                     	;# 
   994  0417                     	;# 
   995  0418                     	;# 
   996  0418                     	;# 
   997  0419                     	;# 
   998  041A                     	;# 
   999  041B                     	;# 
  1000  041C                     	;# 
  1001  041D                     	;# 
  1002  041E                     	;# 
  1003  041F                     	;# 
  1004  0498                     	;# 
  1005  0498                     	;# 
  1006  0499                     	;# 
  1007  049A                     	;# 
  1008  049B                     	;# 
  1009  049B                     	;# 
  1010  049C                     	;# 
  1011  049D                     	;# 
  1012  049E                     	;# 
  1013  049F                     	;# 
  1014  0617                     	;# 
  1015  0618                     	;# 
  1016  0619                     	;# 
  1017  0619                     	;# 
  1018  061A                     	;# 
  1019  061B                     	;# 
  1020  061C                     	;# 
  1021  061C                     	;# 
  1022  061F                     	;# 
  1023  0691                     	;# 
  1024  0692                     	;# 
  1025  0693                     	;# 
  1026  0694                     	;# 
  1027  0695                     	;# 
  1028  0696                     	;# 
  1029  0697                     	;# 
  1030  0698                     	;# 
  1031  0699                     	;# 
  1032  0711                     	;# 
  1033  0712                     	;# 
  1034  0713                     	;# 
  1035  0714                     	;# 
  1036  0715                     	;# 
  1037  0716                     	;# 
  1038  0717                     	;# 
  1039  0718                     	;# 
  1040  0719                     	;# 
  1041  0891                     	;# 
  1042  0891                     	;# 
  1043  0891                     	;# 
  1044  0891                     	;# 
  1045  0891                     	;# 
  1046  0891                     	;# 
  1047  0892                     	;# 
  1048  0892                     	;# 
  1049  0892                     	;# 
  1050  0893                     	;# 
  1051  0893                     	;# 
  1052  0893                     	;# 
  1053  0893                     	;# 
  1054  0893                     	;# 
  1055  0893                     	;# 
  1056  0894                     	;# 
  1057  0894                     	;# 
  1058  0894                     	;# 
  1059  0895                     	;# 
  1060  0895                     	;# 
  1061  0895                     	;# 
  1062  0896                     	;# 
  1063  0896                     	;# 
  1064  0896                     	;# 
  1065  089B                     	;# 
  1066  0911                     	;# 
  1067  0912                     	;# 
  1068  0913                     	;# 
  1069  0914                     	;# 
  1070  0915                     	;# 
  1071  0916                     	;# 
  1072  0918                     	;# 
  1073  0919                     	;# 
  1074  091A                     	;# 
  1075  091B                     	;# 
  1076  091C                     	;# 
  1077  091D                     	;# 
  1078  091E                     	;# 
  1079  091F                     	;# 
  1080  0E0F                     	;# 
  1081  0E10                     	;# 
  1082  0E11                     	;# 
  1083  0E12                     	;# 
  1084  0E13                     	;# 
  1085  0E14                     	;# 
  1086  0E15                     	;# 
  1087  0E16                     	;# 
  1088  0E17                     	;# 
  1089  0E18                     	;# 
  1090  0E19                     	;# 
  1091  0E1A                     	;# 
  1092  0E1B                     	;# 
  1093  0E1C                     	;# 
  1094  0E1D                     	;# 
  1095  0E1E                     	;# 
  1096  0E1F                     	;# 
  1097  0E20                     	;# 
  1098  0E21                     	;# 
  1099  0E22                     	;# 
  1100  0E24                     	;# 
  1101  0E25                     	;# 
  1102  0E28                     	;# 
  1103  0E29                     	;# 
  1104  0E2A                     	;# 
  1105  0E2B                     	;# 
  1106  0E2C                     	;# 
  1107  0E2D                     	;# 
  1108  0E2E                     	;# 
  1109  0E2F                     	;# 
  1110  0E90                     	;# 
  1111  0E91                     	;# 
  1112  0E92                     	;# 
  1113  0E94                     	;# 
  1114  0E95                     	;# 
  1115  0E9C                     	;# 
  1116  0E9D                     	;# 
  1117  0E9E                     	;# 
  1118  0E9F                     	;# 
  1119  0EA0                     	;# 
  1120  0EA1                     	;# 
  1121  0EA2                     	;# 
  1122  0EA3                     	;# 
  1123  0EA4                     	;# 
  1124  0EA5                     	;# 
  1125  0EA6                     	;# 
  1126  0EA7                     	;# 
  1127  0F0F                     	;# 
  1128  0F10                     	;# 
  1129  0F11                     	;# 
  1130  0F12                     	;# 
  1131  0F13                     	;# 
  1132  0F14                     	;# 
  1133  0F15                     	;# 
  1134  0F16                     	;# 
  1135  0F17                     	;# 
  1136  0F18                     	;# 
  1137  0F19                     	;# 
  1138  0F1A                     	;# 
  1139  0F1B                     	;# 
  1140  0F1C                     	;# 
  1141  0F1D                     	;# 
  1142  0F1E                     	;# 
  1143  0F1F                     	;# 
  1144  0F20                     	;# 
  1145  0F21                     	;# 
  1146  0F22                     	;# 
  1147  0F23                     	;# 
  1148  0F24                     	;# 
  1149  0F25                     	;# 
  1150  0F26                     	;# 
  1151  0F27                     	;# 
  1152  0F28                     	;# 
  1153  0F29                     	;# 
  1154  0F2A                     	;# 
  1155  0F2B                     	;# 
  1156  0F2C                     	;# 
  1157  0F2D                     	;# 
  1158  0F2E                     	;# 
  1159  0F2F                     	;# 
  1160  0F30                     	;# 
  1161  0F31                     	;# 
  1162  0F32                     	;# 
  1163  0F33                     	;# 
  1164  0F34                     	;# 
  1165  0F35                     	;# 
  1166  0F36                     	;# 
  1167  0F37                     	;# 
  1168  0FE4                     	;# 
  1169  0FE5                     	;# 
  1170  0FE6                     	;# 
  1171  0FE7                     	;# 
  1172  0FE8                     	;# 
  1173  0FE9                     	;# 
  1174  0FEA                     	;# 
  1175  0FEB                     	;# 
  1176  0FED                     	;# 
  1177  0FEE                     	;# 
  1178  0FEF                     	;# 
  1179  0000                     	;# 
  1180  0001                     	;# 
  1181  0002                     	;# 
  1182  0003                     	;# 
  1183  0004                     	;# 
  1184  0005                     	;# 
  1185  0006                     	;# 
  1186  0007                     	;# 
  1187  0008                     	;# 
  1188  0009                     	;# 
  1189  000A                     	;# 
  1190  000B                     	;# 
  1191  000C                     	;# 
  1192  000D                     	;# 
  1193  000E                     	;# 
  1194  0010                     	;# 
  1195  0011                     	;# 
  1196  0012                     	;# 
  1197  0013                     	;# 
  1198  0014                     	;# 
  1199  0015                     	;# 
  1200  0015                     	;# 
  1201  0016                     	;# 
  1202  0016                     	;# 
  1203  0017                     	;# 
  1204  0018                     	;# 
  1205  0019                     	;# 
  1206  0019                     	;# 
  1207  001A                     	;# 
  1208  001B                     	;# 
  1209  001C                     	;# 
  1210  001D                     	;# 
  1211  001E                     	;# 
  1212  001F                     	;# 
  1213  008C                     	;# 
  1214  008D                     	;# 
  1215  008E                     	;# 
  1216  0090                     	;# 
  1217  0091                     	;# 
  1218  0092                     	;# 
  1219  0093                     	;# 
  1220  0094                     	;# 
  1221  0097                     	;# 
  1222  009B                     	;# 
  1223  009B                     	;# 
  1224  009C                     	;# 
  1225  009D                     	;# 
  1226  009E                     	;# 
  1227  009F                     	;# 
  1228  010C                     	;# 
  1229  010D                     	;# 
  1230  010E                     	;# 
  1231  0111                     	;# 
  1232  0112                     	;# 
  1233  0113                     	;# 
  1234  0114                     	;# 
  1235  0115                     	;# 
  1236  0116                     	;# 
  1237  0117                     	;# 
  1238  0118                     	;# 
  1239  0119                     	;# 
  1240  018C                     	;# 
  1241  018D                     	;# 
  1242  018E                     	;# 
  1243  0197                     	;# 
  1244  0199                     	;# 
  1245  0199                     	;# 
  1246  0199                     	;# 
  1247  019A                     	;# 
  1248  019A                     	;# 
  1249  019A                     	;# 
  1250  019B                     	;# 
  1251  019B                     	;# 
  1252  019B                     	;# 
  1253  019B                     	;# 
  1254  019B                     	;# 
  1255  019C                     	;# 
  1256  019C                     	;# 
  1257  019C                     	;# 
  1258  019D                     	;# 
  1259  019D                     	;# 
  1260  019D                     	;# 
  1261  019E                     	;# 
  1262  019E                     	;# 
  1263  019E                     	;# 
  1264  019F                     	;# 
  1265  019F                     	;# 
  1266  019F                     	;# 
  1267  019F                     	;# 
  1268  019F                     	;# 
  1269  020C                     	;# 
  1270  020D                     	;# 
  1271  020E                     	;# 
  1272  0211                     	;# 
  1273  0211                     	;# 
  1274  0212                     	;# 
  1275  0212                     	;# 
  1276  0213                     	;# 
  1277  0213                     	;# 
  1278  0214                     	;# 
  1279  0214                     	;# 
  1280  0215                     	;# 
  1281  0215                     	;# 
  1282  0215                     	;# 
  1283  0215                     	;# 
  1284  0216                     	;# 
  1285  0216                     	;# 
  1286  0217                     	;# 
  1287  0217                     	;# 
  1288  0219                     	;# 
  1289  021A                     	;# 
  1290  021B                     	;# 
  1291  021C                     	;# 
  1292  021D                     	;# 
  1293  021D                     	;# 
  1294  021E                     	;# 
  1295  021F                     	;# 
  1296  028C                     	;# 
  1297  028D                     	;# 
  1298  028E                     	;# 
  1299  0291                     	;# 
  1300  0291                     	;# 
  1301  0292                     	;# 
  1302  0293                     	;# 
  1303  0294                     	;# 
  1304  0295                     	;# 
  1305  0295                     	;# 
  1306  0296                     	;# 
  1307  0297                     	;# 
  1308  0298                     	;# 
  1309  029F                     	;# 
  1310  030C                     	;# 
  1311  030D                     	;# 
  1312  030E                     	;# 
  1313  0311                     	;# 
  1314  0311                     	;# 
  1315  0312                     	;# 
  1316  0313                     	;# 
  1317  0314                     	;# 
  1318  0315                     	;# 
  1319  0315                     	;# 
  1320  0316                     	;# 
  1321  0317                     	;# 
  1322  0318                     	;# 
  1323  038C                     	;# 
  1324  038D                     	;# 
  1325  038E                     	;# 
  1326  0391                     	;# 
  1327  0392                     	;# 
  1328  0393                     	;# 
  1329  0394                     	;# 
  1330  0395                     	;# 
  1331  0396                     	;# 
  1332  0397                     	;# 
  1333  0398                     	;# 
  1334  0399                     	;# 
  1335  039A                     	;# 
  1336  039C                     	;# 
  1337  039D                     	;# 
  1338  039E                     	;# 
  1339  039F                     	;# 
  1340  0411                     	;# 
  1341  0411                     	;# 
  1342  0412                     	;# 
  1343  0413                     	;# 
  1344  0414                     	;# 
  1345  0415                     	;# 
  1346  0416                     	;# 
  1347  0417                     	;# 
  1348  0418                     	;# 
  1349  0418                     	;# 
  1350  0419                     	;# 
  1351  041A                     	;# 
  1352  041B                     	;# 
  1353  041C                     	;# 
  1354  041D                     	;# 
  1355  041E                     	;# 
  1356  041F                     	;# 
  1357  0498                     	;# 
  1358  0498                     	;# 
  1359  0499                     	;# 
  1360  049A                     	;# 
  1361  049B                     	;# 
  1362  049B                     	;# 
  1363  049C                     	;# 
  1364  049D                     	;# 
  1365  049E                     	;# 
  1366  049F                     	;# 
  1367  0617                     	;# 
  1368  0618                     	;# 
  1369  0619                     	;# 
  1370  0619                     	;# 
  1371  061A                     	;# 
  1372  061B                     	;# 
  1373  061C                     	;# 
  1374  061C                     	;# 
  1375  061F                     	;# 
  1376  0691                     	;# 
  1377  0692                     	;# 
  1378  0693                     	;# 
  1379  0694                     	;# 
  1380  0695                     	;# 
  1381  0696                     	;# 
  1382  0697                     	;# 
  1383  0698                     	;# 
  1384  0699                     	;# 
  1385  0711                     	;# 
  1386  0712                     	;# 
  1387  0713                     	;# 
  1388  0714                     	;# 
  1389  0715                     	;# 
  1390  0716                     	;# 
  1391  0717                     	;# 
  1392  0718                     	;# 
  1393  0719                     	;# 
  1394  0891                     	;# 
  1395  0891                     	;# 
  1396  0891                     	;# 
  1397  0891                     	;# 
  1398  0891                     	;# 
  1399  0891                     	;# 
  1400  0892                     	;# 
  1401  0892                     	;# 
  1402  0892                     	;# 
  1403  0893                     	;# 
  1404  0893                     	;# 
  1405  0893                     	;# 
  1406  0893                     	;# 
  1407  0893                     	;# 
  1408  0893                     	;# 
  1409  0894                     	;# 
  1410  0894                     	;# 
  1411  0894                     	;# 
  1412  0895                     	;# 
  1413  0895                     	;# 
  1414  0895                     	;# 
  1415  0896                     	;# 
  1416  0896                     	;# 
  1417  0896                     	;# 
  1418  089B                     	;# 
  1419  0911                     	;# 
  1420  0912                     	;# 
  1421  0913                     	;# 
  1422  0914                     	;# 
  1423  0915                     	;# 
  1424  0916                     	;# 
  1425  0918                     	;# 
  1426  0919                     	;# 
  1427  091A                     	;# 
  1428  091B                     	;# 
  1429  091C                     	;# 
  1430  091D                     	;# 
  1431  091E                     	;# 
  1432  091F                     	;# 
  1433  0E0F                     	;# 
  1434  0E10                     	;# 
  1435  0E11                     	;# 
  1436  0E12                     	;# 
  1437  0E13                     	;# 
  1438  0E14                     	;# 
  1439  0E15                     	;# 
  1440  0E16                     	;# 
  1441  0E17                     	;# 
  1442  0E18                     	;# 
  1443  0E19                     	;# 
  1444  0E1A                     	;# 
  1445  0E1B                     	;# 
  1446  0E1C                     	;# 
  1447  0E1D                     	;# 
  1448  0E1E                     	;# 
  1449  0E1F                     	;# 
  1450  0E20                     	;# 
  1451  0E21                     	;# 
  1452  0E22                     	;# 
  1453  0E24                     	;# 
  1454  0E25                     	;# 
  1455  0E28                     	;# 
  1456  0E29                     	;# 
  1457  0E2A                     	;# 
  1458  0E2B                     	;# 
  1459  0E2C                     	;# 
  1460  0E2D                     	;# 
  1461  0E2E                     	;# 
  1462  0E2F                     	;# 
  1463  0E90                     	;# 
  1464  0E91                     	;# 
  1465  0E92                     	;# 
  1466  0E94                     	;# 
  1467  0E95                     	;# 
  1468  0E9C                     	;# 
  1469  0E9D                     	;# 
  1470  0E9E                     	;# 
  1471  0E9F                     	;# 
  1472  0EA0                     	;# 
  1473  0EA1                     	;# 
  1474  0EA2                     	;# 
  1475  0EA3                     	;# 
  1476  0EA4                     	;# 
  1477  0EA5                     	;# 
  1478  0EA6                     	;# 
  1479  0EA7                     	;# 
  1480  0F0F                     	;# 
  1481  0F10                     	;# 
  1482  0F11                     	;# 
  1483  0F12                     	;# 
  1484  0F13                     	;# 
  1485  0F14                     	;# 
  1486  0F15                     	;# 
  1487  0F16                     	;# 
  1488  0F17                     	;# 
  1489  0F18                     	;# 
  1490  0F19                     	;# 
  1491  0F1A                     	;# 
  1492  0F1B                     	;# 
  1493  0F1C                     	;# 
  1494  0F1D                     	;# 
  1495  0F1E                     	;# 
  1496  0F1F                     	;# 
  1497  0F20                     	;# 
  1498  0F21                     	;# 
  1499  0F22                     	;# 
  1500  0F23                     	;# 
  1501  0F24                     	;# 
  1502  0F25                     	;# 
  1503  0F26                     	;# 
  1504  0F27                     	;# 
  1505  0F28                     	;# 
  1506  0F29                     	;# 
  1507  0F2A                     	;# 
  1508  0F2B                     	;# 
  1509  0F2C                     	;# 
  1510  0F2D                     	;# 
  1511  0F2E                     	;# 
  1512  0F2F                     	;# 
  1513  0F30                     	;# 
  1514  0F31                     	;# 
  1515  0F32                     	;# 
  1516  0F33                     	;# 
  1517  0F34                     	;# 
  1518  0F35                     	;# 
  1519  0F36                     	;# 
  1520  0F37                     	;# 
  1521  0FE4                     	;# 
  1522  0FE5                     	;# 
  1523  0FE6                     	;# 
  1524  0FE7                     	;# 
  1525  0FE8                     	;# 
  1526  0FE9                     	;# 
  1527  0FEA                     	;# 
  1528  0FEB                     	;# 
  1529  0FED                     	;# 
  1530  0FEE                     	;# 
  1531  0FEF                     	;# 
  1532  0000                     	;# 
  1533  0001                     	;# 
  1534  0002                     	;# 
  1535  0003                     	;# 
  1536  0004                     	;# 
  1537  0005                     	;# 
  1538  0006                     	;# 
  1539  0007                     	;# 
  1540  0008                     	;# 
  1541  0009                     	;# 
  1542  000A                     	;# 
  1543  000B                     	;# 
  1544  000C                     	;# 
  1545  000D                     	;# 
  1546  000E                     	;# 
  1547  0010                     	;# 
  1548  0011                     	;# 
  1549  0012                     	;# 
  1550  0013                     	;# 
  1551  0014                     	;# 
  1552  0015                     	;# 
  1553  0015                     	;# 
  1554  0016                     	;# 
  1555  0016                     	;# 
  1556  0017                     	;# 
  1557  0018                     	;# 
  1558  0019                     	;# 
  1559  0019                     	;# 
  1560  001A                     	;# 
  1561  001B                     	;# 
  1562  001C                     	;# 
  1563  001D                     	;# 
  1564  001E                     	;# 
  1565  001F                     	;# 
  1566  008C                     	;# 
  1567  008D                     	;# 
  1568  008E                     	;# 
  1569  0090                     	;# 
  1570  0091                     	;# 
  1571  0092                     	;# 
  1572  0093                     	;# 
  1573  0094                     	;# 
  1574  0097                     	;# 
  1575  009B                     	;# 
  1576  009B                     	;# 
  1577  009C                     	;# 
  1578  009D                     	;# 
  1579  009E                     	;# 
  1580  009F                     	;# 
  1581  010C                     	;# 
  1582  010D                     	;# 
  1583  010E                     	;# 
  1584  0111                     	;# 
  1585  0112                     	;# 
  1586  0113                     	;# 
  1587  0114                     	;# 
  1588  0115                     	;# 
  1589  0116                     	;# 
  1590  0117                     	;# 
  1591  0118                     	;# 
  1592  0119                     	;# 
  1593  018C                     	;# 
  1594  018D                     	;# 
  1595  018E                     	;# 
  1596  0197                     	;# 
  1597  0199                     	;# 
  1598  0199                     	;# 
  1599  0199                     	;# 
  1600  019A                     	;# 
  1601  019A                     	;# 
  1602  019A                     	;# 
  1603  019B                     	;# 
  1604  019B                     	;# 
  1605  019B                     	;# 
  1606  019B                     	;# 
  1607  019B                     	;# 
  1608  019C                     	;# 
  1609  019C                     	;# 
  1610  019C                     	;# 
  1611  019D                     	;# 
  1612  019D                     	;# 
  1613  019D                     	;# 
  1614  019E                     	;# 
  1615  019E                     	;# 
  1616  019E                     	;# 
  1617  019F                     	;# 
  1618  019F                     	;# 
  1619  019F                     	;# 
  1620  019F                     	;# 
  1621  019F                     	;# 
  1622  020C                     	;# 
  1623  020D                     	;# 
  1624  020E                     	;# 
  1625  0211                     	;# 
  1626  0211                     	;# 
  1627  0212                     	;# 
  1628  0212                     	;# 
  1629  0213                     	;# 
  1630  0213                     	;# 
  1631  0214                     	;# 
  1632  0214                     	;# 
  1633  0215                     	;# 
  1634  0215                     	;# 
  1635  0215                     	;# 
  1636  0215                     	;# 
  1637  0216                     	;# 
  1638  0216                     	;# 
  1639  0217                     	;# 
  1640  0217                     	;# 
  1641  0219                     	;# 
  1642  021A                     	;# 
  1643  021B                     	;# 
  1644  021C                     	;# 
  1645  021D                     	;# 
  1646  021D                     	;# 
  1647  021E                     	;# 
  1648  021F                     	;# 
  1649  028C                     	;# 
  1650  028D                     	;# 
  1651  028E                     	;# 
  1652  0291                     	;# 
  1653  0291                     	;# 
  1654  0292                     	;# 
  1655  0293                     	;# 
  1656  0294                     	;# 
  1657  0295                     	;# 
  1658  0295                     	;# 
  1659  0296                     	;# 
  1660  0297                     	;# 
  1661  0298                     	;# 
  1662  029F                     	;# 
  1663  030C                     	;# 
  1664  030D                     	;# 
  1665  030E                     	;# 
  1666  0311                     	;# 
  1667  0311                     	;# 
  1668  0312                     	;# 
  1669  0313                     	;# 
  1670  0314                     	;# 
  1671  0315                     	;# 
  1672  0315                     	;# 
  1673  0316                     	;# 
  1674  0317                     	;# 
  1675  0318                     	;# 
  1676  038C                     	;# 
  1677  038D                     	;# 
  1678  038E                     	;# 
  1679  0391                     	;# 
  1680  0392                     	;# 
  1681  0393                     	;# 
  1682  0394                     	;# 
  1683  0395                     	;# 
  1684  0396                     	;# 
  1685  0397                     	;# 
  1686  0398                     	;# 
  1687  0399                     	;# 
  1688  039A                     	;# 
  1689  039C                     	;# 
  1690  039D                     	;# 
  1691  039E                     	;# 
  1692  039F                     	;# 
  1693  0411                     	;# 
  1694  0411                     	;# 
  1695  0412                     	;# 
  1696  0413                     	;# 
  1697  0414                     	;# 
  1698  0415                     	;# 
  1699  0416                     	;# 
  1700  0417                     	;# 
  1701  0418                     	;# 
  1702  0418                     	;# 
  1703  0419                     	;# 
  1704  041A                     	;# 
  1705  041B                     	;# 
  1706  041C                     	;# 
  1707  041D                     	;# 
  1708  041E                     	;# 
  1709  041F                     	;# 
  1710  0498                     	;# 
  1711  0498                     	;# 
  1712  0499                     	;# 
  1713  049A                     	;# 
  1714  049B                     	;# 
  1715  049B                     	;# 
  1716  049C                     	;# 
  1717  049D                     	;# 
  1718  049E                     	;# 
  1719  049F                     	;# 
  1720  0617                     	;# 
  1721  0618                     	;# 
  1722  0619                     	;# 
  1723  0619                     	;# 
  1724  061A                     	;# 
  1725  061B                     	;# 
  1726  061C                     	;# 
  1727  061C                     	;# 
  1728  061F                     	;# 
  1729  0691                     	;# 
  1730  0692                     	;# 
  1731  0693                     	;# 
  1732  0694                     	;# 
  1733  0695                     	;# 
  1734  0696                     	;# 
  1735  0697                     	;# 
  1736  0698                     	;# 
  1737  0699                     	;# 
  1738  0711                     	;# 
  1739  0712                     	;# 
  1740  0713                     	;# 
  1741  0714                     	;# 
  1742  0715                     	;# 
  1743  0716                     	;# 
  1744  0717                     	;# 
  1745  0718                     	;# 
  1746  0719                     	;# 
  1747  0891                     	;# 
  1748  0891                     	;# 
  1749  0891                     	;# 
  1750  0891                     	;# 
  1751  0891                     	;# 
  1752  0891                     	;# 
  1753  0892                     	;# 
  1754  0892                     	;# 
  1755  0892                     	;# 
  1756  0893                     	;# 
  1757  0893                     	;# 
  1758  0893                     	;# 
  1759  0893                     	;# 
  1760  0893                     	;# 
  1761  0893                     	;# 
  1762  0894                     	;# 
  1763  0894                     	;# 
  1764  0894                     	;# 
  1765  0895                     	;# 
  1766  0895                     	;# 
  1767  0895                     	;# 
  1768  0896                     	;# 
  1769  0896                     	;# 
  1770  0896                     	;# 
  1771  089B                     	;# 
  1772  0911                     	;# 
  1773  0912                     	;# 
  1774  0913                     	;# 
  1775  0914                     	;# 
  1776  0915                     	;# 
  1777  0916                     	;# 
  1778  0918                     	;# 
  1779  0919                     	;# 
  1780  091A                     	;# 
  1781  091B                     	;# 
  1782  091C                     	;# 
  1783  091D                     	;# 
  1784  091E                     	;# 
  1785  091F                     	;# 
  1786  0E0F                     	;# 
  1787  0E10                     	;# 
  1788  0E11                     	;# 
  1789  0E12                     	;# 
  1790  0E13                     	;# 
  1791  0E14                     	;# 
  1792  0E15                     	;# 
  1793  0E16                     	;# 
  1794  0E17                     	;# 
  1795  0E18                     	;# 
  1796  0E19                     	;# 
  1797  0E1A                     	;# 
  1798  0E1B                     	;# 
  1799  0E1C                     	;# 
  1800  0E1D                     	;# 
  1801  0E1E                     	;# 
  1802  0E1F                     	;# 
  1803  0E20                     	;# 
  1804  0E21                     	;# 
  1805  0E22                     	;# 
  1806  0E24                     	;# 
  1807  0E25                     	;# 
  1808  0E28                     	;# 
  1809  0E29                     	;# 
  1810  0E2A                     	;# 
  1811  0E2B                     	;# 
  1812  0E2C                     	;# 
  1813  0E2D                     	;# 
  1814  0E2E                     	;# 
  1815  0E2F                     	;# 
  1816  0E90                     	;# 
  1817  0E91                     	;# 
  1818  0E92                     	;# 
  1819  0E94                     	;# 
  1820  0E95                     	;# 
  1821  0E9C                     	;# 
  1822  0E9D                     	;# 
  1823  0E9E                     	;# 
  1824  0E9F                     	;# 
  1825  0EA0                     	;# 
  1826  0EA1                     	;# 
  1827  0EA2                     	;# 
  1828  0EA3                     	;# 
  1829  0EA4                     	;# 
  1830  0EA5                     	;# 
  1831  0EA6                     	;# 
  1832  0EA7                     	;# 
  1833  0F0F                     	;# 
  1834  0F10                     	;# 
  1835  0F11                     	;# 
  1836  0F12                     	;# 
  1837  0F13                     	;# 
  1838  0F14                     	;# 
  1839  0F15                     	;# 
  1840  0F16                     	;# 
  1841  0F17                     	;# 
  1842  0F18                     	;# 
  1843  0F19                     	;# 
  1844  0F1A                     	;# 
  1845  0F1B                     	;# 
  1846  0F1C                     	;# 
  1847  0F1D                     	;# 
  1848  0F1E                     	;# 
  1849  0F1F                     	;# 
  1850  0F20                     	;# 
  1851  0F21                     	;# 
  1852  0F22                     	;# 
  1853  0F23                     	;# 
  1854  0F24                     	;# 
  1855  0F25                     	;# 
  1856  0F26                     	;# 
  1857  0F27                     	;# 
  1858  0F28                     	;# 
  1859  0F29                     	;# 
  1860  0F2A                     	;# 
  1861  0F2B                     	;# 
  1862  0F2C                     	;# 
  1863  0F2D                     	;# 
  1864  0F2E                     	;# 
  1865  0F2F                     	;# 
  1866  0F30                     	;# 
  1867  0F31                     	;# 
  1868  0F32                     	;# 
  1869  0F33                     	;# 
  1870  0F34                     	;# 
  1871  0F35                     	;# 
  1872  0F36                     	;# 
  1873  0F37                     	;# 
  1874  0FE4                     	;# 
  1875  0FE5                     	;# 
  1876  0FE6                     	;# 
  1877  0FE7                     	;# 
  1878  0FE8                     	;# 
  1879  0FE9                     	;# 
  1880  0FEA                     	;# 
  1881  0FEB                     	;# 
  1882  0FED                     	;# 
  1883  0FEE                     	;# 
  1884  0FEF                     	;# 
  1885  0000                     	;# 
  1886  0001                     	;# 
  1887  0002                     	;# 
  1888  0003                     	;# 
  1889  0004                     	;# 
  1890  0005                     	;# 
  1891  0006                     	;# 
  1892  0007                     	;# 
  1893  0008                     	;# 
  1894  0009                     	;# 
  1895  000A                     	;# 
  1896  000B                     	;# 
  1897  000C                     	;# 
  1898  000D                     	;# 
  1899  000E                     	;# 
  1900  0010                     	;# 
  1901  0011                     	;# 
  1902  0012                     	;# 
  1903  0013                     	;# 
  1904  0014                     	;# 
  1905  0015                     	;# 
  1906  0015                     	;# 
  1907  0016                     	;# 
  1908  0016                     	;# 
  1909  0017                     	;# 
  1910  0018                     	;# 
  1911  0019                     	;# 
  1912  0019                     	;# 
  1913  001A                     	;# 
  1914  001B                     	;# 
  1915  001C                     	;# 
  1916  001D                     	;# 
  1917  001E                     	;# 
  1918  001F                     	;# 
  1919  008C                     	;# 
  1920  008D                     	;# 
  1921  008E                     	;# 
  1922  0090                     	;# 
  1923  0091                     	;# 
  1924  0092                     	;# 
  1925  0093                     	;# 
  1926  0094                     	;# 
  1927  0097                     	;# 
  1928  009B                     	;# 
  1929  009B                     	;# 
  1930  009C                     	;# 
  1931  009D                     	;# 
  1932  009E                     	;# 
  1933  009F                     	;# 
  1934  010C                     	;# 
  1935  010D                     	;# 
  1936  010E                     	;# 
  1937  0111                     	;# 
  1938  0112                     	;# 
  1939  0113                     	;# 
  1940  0114                     	;# 
  1941  0115                     	;# 
  1942  0116                     	;# 
  1943  0117                     	;# 
  1944  0118                     	;# 
  1945  0119                     	;# 
  1946  018C                     	;# 
  1947  018D                     	;# 
  1948  018E                     	;# 
  1949  0197                     	;# 
  1950  0199                     	;# 
  1951  0199                     	;# 
  1952  0199                     	;# 
  1953  019A                     	;# 
  1954  019A                     	;# 
  1955  019A                     	;# 
  1956  019B                     	;# 
  1957  019B                     	;# 
  1958  019B                     	;# 
  1959  019B                     	;# 
  1960  019B                     	;# 
  1961  019C                     	;# 
  1962  019C                     	;# 
  1963  019C                     	;# 
  1964  019D                     	;# 
  1965  019D                     	;# 
  1966  019D                     	;# 
  1967  019E                     	;# 
  1968  019E                     	;# 
  1969  019E                     	;# 
  1970  019F                     	;# 
  1971  019F                     	;# 
  1972  019F                     	;# 
  1973  019F                     	;# 
  1974  019F                     	;# 
  1975  020C                     	;# 
  1976  020D                     	;# 
  1977  020E                     	;# 
  1978  0211                     	;# 
  1979  0211                     	;# 
  1980  0212                     	;# 
  1981  0212                     	;# 
  1982  0213                     	;# 
  1983  0213                     	;# 
  1984  0214                     	;# 
  1985  0214                     	;# 
  1986  0215                     	;# 
  1987  0215                     	;# 
  1988  0215                     	;# 
  1989  0215                     	;# 
  1990  0216                     	;# 
  1991  0216                     	;# 
  1992  0217                     	;# 
  1993  0217                     	;# 
  1994  0219                     	;# 
  1995  021A                     	;# 
  1996  021B                     	;# 
  1997  021C                     	;# 
  1998  021D                     	;# 
  1999  021D                     	;# 
  2000  021E                     	;# 
  2001  021F                     	;# 
  2002  028C                     	;# 
  2003  028D                     	;# 
  2004  028E                     	;# 
  2005  0291                     	;# 
  2006  0291                     	;# 
  2007  0292                     	;# 
  2008  0293                     	;# 
  2009  0294                     	;# 
  2010  0295                     	;# 
  2011  0295                     	;# 
  2012  0296                     	;# 
  2013  0297                     	;# 
  2014  0298                     	;# 
  2015  029F                     	;# 
  2016  030C                     	;# 
  2017  030D                     	;# 
  2018  030E                     	;# 
  2019  0311                     	;# 
  2020  0311                     	;# 
  2021  0312                     	;# 
  2022  0313                     	;# 
  2023  0314                     	;# 
  2024  0315                     	;# 
  2025  0315                     	;# 
  2026  0316                     	;# 
  2027  0317                     	;# 
  2028  0318                     	;# 
  2029  038C                     	;# 
  2030  038D                     	;# 
  2031  038E                     	;# 
  2032  0391                     	;# 
  2033  0392                     	;# 
  2034  0393                     	;# 
  2035  0394                     	;# 
  2036  0395                     	;# 
  2037  0396                     	;# 
  2038  0397                     	;# 
  2039  0398                     	;# 
  2040  0399                     	;# 
  2041  039A                     	;# 
  2042  039C                     	;# 
  2043  039D                     	;# 
  2044  039E                     	;# 
  2045  039F                     	;# 
  2046  0411                     	;# 
  2047  0411                     	;# 
  2048  0412                     	;# 
  2049  0413                     	;# 
  2050  0414                     	;# 
  2051  0415                     	;# 
  2052  0416                     	;# 
  2053  0417                     	;# 
  2054  0418                     	;# 
  2055  0418                     	;# 
  2056  0419                     	;# 
  2057  041A                     	;# 
  2058  041B                     	;# 
  2059  041C                     	;# 
  2060  041D                     	;# 
  2061  041E                     	;# 
  2062  041F                     	;# 
  2063  0498                     	;# 
  2064  0498                     	;# 
  2065  0499                     	;# 
  2066  049A                     	;# 
  2067  049B                     	;# 
  2068  049B                     	;# 
  2069  049C                     	;# 
  2070  049D                     	;# 
  2071  049E                     	;# 
  2072  049F                     	;# 
  2073  0617                     	;# 
  2074  0618                     	;# 
  2075  0619                     	;# 
  2076  0619                     	;# 
  2077  061A                     	;# 
  2078  061B                     	;# 
  2079  061C                     	;# 
  2080  061C                     	;# 
  2081  061F                     	;# 
  2082  0691                     	;# 
  2083  0692                     	;# 
  2084  0693                     	;# 
  2085  0694                     	;# 
  2086  0695                     	;# 
  2087  0696                     	;# 
  2088  0697                     	;# 
  2089  0698                     	;# 
  2090  0699                     	;# 
  2091  0711                     	;# 
  2092  0712                     	;# 
  2093  0713                     	;# 
  2094  0714                     	;# 
  2095  0715                     	;# 
  2096  0716                     	;# 
  2097  0717                     	;# 
  2098  0718                     	;# 
  2099  0719                     	;# 
  2100  0891                     	;# 
  2101  0891                     	;# 
  2102  0891                     	;# 
  2103  0891                     	;# 
  2104  0891                     	;# 
  2105  0891                     	;# 
  2106  0892                     	;# 
  2107  0892                     	;# 
  2108  0892                     	;# 
  2109  0893                     	;# 
  2110  0893                     	;# 
  2111  0893                     	;# 
  2112  0893                     	;# 
  2113  0893                     	;# 
  2114  0893                     	;# 
  2115  0894                     	;# 
  2116  0894                     	;# 
  2117  0894                     	;# 
  2118  0895                     	;# 
  2119  0895                     	;# 
  2120  0895                     	;# 
  2121  0896                     	;# 
  2122  0896                     	;# 
  2123  0896                     	;# 
  2124  089B                     	;# 
  2125  0911                     	;# 
  2126  0912                     	;# 
  2127  0913                     	;# 
  2128  0914                     	;# 
  2129  0915                     	;# 
  2130  0916                     	;# 
  2131  0918                     	;# 
  2132  0919                     	;# 
  2133  091A                     	;# 
  2134  091B                     	;# 
  2135  091C                     	;# 
  2136  091D                     	;# 
  2137  091E                     	;# 
  2138  091F                     	;# 
  2139  0E0F                     	;# 
  2140  0E10                     	;# 
  2141  0E11                     	;# 
  2142  0E12                     	;# 
  2143  0E13                     	;# 
  2144  0E14                     	;# 
  2145  0E15                     	;# 
  2146  0E16                     	;# 
  2147  0E17                     	;# 
  2148  0E18                     	;# 
  2149  0E19                     	;# 
  2150  0E1A                     	;# 
  2151  0E1B                     	;# 
  2152  0E1C                     	;# 
  2153  0E1D                     	;# 
  2154  0E1E                     	;# 
  2155  0E1F                     	;# 
  2156  0E20                     	;# 
  2157  0E21                     	;# 
  2158  0E22                     	;# 
  2159  0E24                     	;# 
  2160  0E25                     	;# 
  2161  0E28                     	;# 
  2162  0E29                     	;# 
  2163  0E2A                     	;# 
  2164  0E2B                     	;# 
  2165  0E2C                     	;# 
  2166  0E2D                     	;# 
  2167  0E2E                     	;# 
  2168  0E2F                     	;# 
  2169  0E90                     	;# 
  2170  0E91                     	;# 
  2171  0E92                     	;# 
  2172  0E94                     	;# 
  2173  0E95                     	;# 
  2174  0E9C                     	;# 
  2175  0E9D                     	;# 
  2176  0E9E                     	;# 
  2177  0E9F                     	;# 
  2178  0EA0                     	;# 
  2179  0EA1                     	;# 
  2180  0EA2                     	;# 
  2181  0EA3                     	;# 
  2182  0EA4                     	;# 
  2183  0EA5                     	;# 
  2184  0EA6                     	;# 
  2185  0EA7                     	;# 
  2186  0F0F                     	;# 
  2187  0F10                     	;# 
  2188  0F11                     	;# 
  2189  0F12                     	;# 
  2190  0F13                     	;# 
  2191  0F14                     	;# 
  2192  0F15                     	;# 
  2193  0F16                     	;# 
  2194  0F17                     	;# 
  2195  0F18                     	;# 
  2196  0F19                     	;# 
  2197  0F1A                     	;# 
  2198  0F1B                     	;# 
  2199  0F1C                     	;# 
  2200  0F1D                     	;# 
  2201  0F1E                     	;# 
  2202  0F1F                     	;# 
  2203  0F20                     	;# 
  2204  0F21                     	;# 
  2205  0F22                     	;# 
  2206  0F23                     	;# 
  2207  0F24                     	;# 
  2208  0F25                     	;# 
  2209  0F26                     	;# 
  2210  0F27                     	;# 
  2211  0F28                     	;# 
  2212  0F29                     	;# 
  2213  0F2A                     	;# 
  2214  0F2B                     	;# 
  2215  0F2C                     	;# 
  2216  0F2D                     	;# 
  2217  0F2E                     	;# 
  2218  0F2F                     	;# 
  2219  0F30                     	;# 
  2220  0F31                     	;# 
  2221  0F32                     	;# 
  2222  0F33                     	;# 
  2223  0F34                     	;# 
  2224  0F35                     	;# 
  2225  0F36                     	;# 
  2226  0F37                     	;# 
  2227  0FE4                     	;# 
  2228  0FE5                     	;# 
  2229  0FE6                     	;# 
  2230  0FE7                     	;# 
  2231  0FE8                     	;# 
  2232  0FE9                     	;# 
  2233  0FEA                     	;# 
  2234  0FEB                     	;# 
  2235  0FED                     	;# 
  2236  0FEE                     	;# 
  2237  0FEF                     	;# 
  2238  0000                     	;# 
  2239  0001                     	;# 
  2240  0002                     	;# 
  2241  0003                     	;# 
  2242  0004                     	;# 
  2243  0005                     	;# 
  2244  0006                     	;# 
  2245  0007                     	;# 
  2246  0008                     	;# 
  2247  0009                     	;# 
  2248  000A                     	;# 
  2249  000B                     	;# 
  2250  000C                     	;# 
  2251  000D                     	;# 
  2252  000E                     	;# 
  2253  0010                     	;# 
  2254  0011                     	;# 
  2255  0012                     	;# 
  2256  0013                     	;# 
  2257  0014                     	;# 
  2258  0015                     	;# 
  2259  0015                     	;# 
  2260  0016                     	;# 
  2261  0016                     	;# 
  2262  0017                     	;# 
  2263  0018                     	;# 
  2264  0019                     	;# 
  2265  0019                     	;# 
  2266  001A                     	;# 
  2267  001B                     	;# 
  2268  001C                     	;# 
  2269  001D                     	;# 
  2270  001E                     	;# 
  2271  001F                     	;# 
  2272  008C                     	;# 
  2273  008D                     	;# 
  2274  008E                     	;# 
  2275  0090                     	;# 
  2276  0091                     	;# 
  2277  0092                     	;# 
  2278  0093                     	;# 
  2279  0094                     	;# 
  2280  0097                     	;# 
  2281  009B                     	;# 
  2282  009B                     	;# 
  2283  009C                     	;# 
  2284  009D                     	;# 
  2285  009E                     	;# 
  2286  009F                     	;# 
  2287  010C                     	;# 
  2288  010D                     	;# 
  2289  010E                     	;# 
  2290  0111                     	;# 
  2291  0112                     	;# 
  2292  0113                     	;# 
  2293  0114                     	;# 
  2294  0115                     	;# 
  2295  0116                     	;# 
  2296  0117                     	;# 
  2297  0118                     	;# 
  2298  0119                     	;# 
  2299  018C                     	;# 
  2300  018D                     	;# 
  2301  018E                     	;# 
  2302  0197                     	;# 
  2303  0199                     	;# 
  2304  0199                     	;# 
  2305  0199                     	;# 
  2306  019A                     	;# 
  2307  019A                     	;# 
  2308  019A                     	;# 
  2309  019B                     	;# 
  2310  019B                     	;# 
  2311  019B                     	;# 
  2312  019B                     	;# 
  2313  019B                     	;# 
  2314  019C                     	;# 
  2315  019C                     	;# 
  2316  019C                     	;# 
  2317  019D                     	;# 
  2318  019D                     	;# 
  2319  019D                     	;# 
  2320  019E                     	;# 
  2321  019E                     	;# 
  2322  019E                     	;# 
  2323  019F                     	;# 
  2324  019F                     	;# 
  2325  019F                     	;# 
  2326  019F                     	;# 
  2327  019F                     	;# 
  2328  020C                     	;# 
  2329  020D                     	;# 
  2330  020E                     	;# 
  2331  0211                     	;# 
  2332  0211                     	;# 
  2333  0212                     	;# 
  2334  0212                     	;# 
  2335  0213                     	;# 
  2336  0213                     	;# 
  2337  0214                     	;# 
  2338  0214                     	;# 
  2339  0215                     	;# 
  2340  0215                     	;# 
  2341  0215                     	;# 
  2342  0215                     	;# 
  2343  0216                     	;# 
  2344  0216                     	;# 
  2345  0217                     	;# 
  2346  0217                     	;# 
  2347  0219                     	;# 
  2348  021A                     	;# 
  2349  021B                     	;# 
  2350  021C                     	;# 
  2351  021D                     	;# 
  2352  021D                     	;# 
  2353  021E                     	;# 
  2354  021F                     	;# 
  2355  028C                     	;# 
  2356  028D                     	;# 
  2357  028E                     	;# 
  2358  0291                     	;# 
  2359  0291                     	;# 
  2360  0292                     	;# 
  2361  0293                     	;# 
  2362  0294                     	;# 
  2363  0295                     	;# 
  2364  0295                     	;# 
  2365  0296                     	;# 
  2366  0297                     	;# 
  2367  0298                     	;# 
  2368  029F                     	;# 
  2369  030C                     	;# 
  2370  030D                     	;# 
  2371  030E                     	;# 
  2372  0311                     	;# 
  2373  0311                     	;# 
  2374  0312                     	;# 
  2375  0313                     	;# 
  2376  0314                     	;# 
  2377  0315                     	;# 
  2378  0315                     	;# 
  2379  0316                     	;# 
  2380  0317                     	;# 
  2381  0318                     	;# 
  2382  038C                     	;# 
  2383  038D                     	;# 
  2384  038E                     	;# 
  2385  0391                     	;# 
  2386  0392                     	;# 
  2387  0393                     	;# 
  2388  0394                     	;# 
  2389  0395                     	;# 
  2390  0396                     	;# 
  2391  0397                     	;# 
  2392  0398                     	;# 
  2393  0399                     	;# 
  2394  039A                     	;# 
  2395  039C                     	;# 
  2396  039D                     	;# 
  2397  039E                     	;# 
  2398  039F                     	;# 
  2399  0411                     	;# 
  2400  0411                     	;# 
  2401  0412                     	;# 
  2402  0413                     	;# 
  2403  0414                     	;# 
  2404  0415                     	;# 
  2405  0416                     	;# 
  2406  0417                     	;# 
  2407  0418                     	;# 
  2408  0418                     	;# 
  2409  0419                     	;# 
  2410  041A                     	;# 
  2411  041B                     	;# 
  2412  041C                     	;# 
  2413  041D                     	;# 
  2414  041E                     	;# 
  2415  041F                     	;# 
  2416  0498                     	;# 
  2417  0498                     	;# 
  2418  0499                     	;# 
  2419  049A                     	;# 
  2420  049B                     	;# 
  2421  049B                     	;# 
  2422  049C                     	;# 
  2423  049D                     	;# 
  2424  049E                     	;# 
  2425  049F                     	;# 
  2426  0617                     	;# 
  2427  0618                     	;# 
  2428  0619                     	;# 
  2429  0619                     	;# 
  2430  061A                     	;# 
  2431  061B                     	;# 
  2432  061C                     	;# 
  2433  061C                     	;# 
  2434  061F                     	;# 
  2435  0691                     	;# 
  2436  0692                     	;# 
  2437  0693                     	;# 
  2438  0694                     	;# 
  2439  0695                     	;# 
  2440  0696                     	;# 
  2441  0697                     	;# 
  2442  0698                     	;# 
  2443  0699                     	;# 
  2444  0711                     	;# 
  2445  0712                     	;# 
  2446  0713                     	;# 
  2447  0714                     	;# 
  2448  0715                     	;# 
  2449  0716                     	;# 
  2450  0717                     	;# 
  2451  0718                     	;# 
  2452  0719                     	;# 
  2453  0891                     	;# 
  2454  0891                     	;# 
  2455  0891                     	;# 
  2456  0891                     	;# 
  2457  0891                     	;# 
  2458  0891                     	;# 
  2459  0892                     	;# 
  2460  0892                     	;# 
  2461  0892                     	;# 
  2462  0893                     	;# 
  2463  0893                     	;# 
  2464  0893                     	;# 
  2465  0893                     	;# 
  2466  0893                     	;# 
  2467  0893                     	;# 
  2468  0894                     	;# 
  2469  0894                     	;# 
  2470  0894                     	;# 
  2471  0895                     	;# 
  2472  0895                     	;# 
  2473  0895                     	;# 
  2474  0896                     	;# 
  2475  0896                     	;# 
  2476  0896                     	;# 
  2477  089B                     	;# 
  2478  0911                     	;# 
  2479  0912                     	;# 
  2480  0913                     	;# 
  2481  0914                     	;# 
  2482  0915                     	;# 
  2483  0916                     	;# 
  2484  0918                     	;# 
  2485  0919                     	;# 
  2486  091A                     	;# 
  2487  091B                     	;# 
  2488  091C                     	;# 
  2489  091D                     	;# 
  2490  091E                     	;# 
  2491  091F                     	;# 
  2492  0E0F                     	;# 
  2493  0E10                     	;# 
  2494  0E11                     	;# 
  2495  0E12                     	;# 
  2496  0E13                     	;# 
  2497  0E14                     	;# 
  2498  0E15                     	;# 
  2499  0E16                     	;# 
  2500  0E17                     	;# 
  2501  0E18                     	;# 
  2502  0E19                     	;# 
  2503  0E1A                     	;# 
  2504  0E1B                     	;# 
  2505  0E1C                     	;# 
  2506  0E1D                     	;# 
  2507  0E1E                     	;# 
  2508  0E1F                     	;# 
  2509  0E20                     	;# 
  2510  0E21                     	;# 
  2511  0E22                     	;# 
  2512  0E24                     	;# 
  2513  0E25                     	;# 
  2514  0E28                     	;# 
  2515  0E29                     	;# 
  2516  0E2A                     	;# 
  2517  0E2B                     	;# 
  2518  0E2C                     	;# 
  2519  0E2D                     	;# 
  2520  0E2E                     	;# 
  2521  0E2F                     	;# 
  2522  0E90                     	;# 
  2523  0E91                     	;# 
  2524  0E92                     	;# 
  2525  0E94                     	;# 
  2526  0E95                     	;# 
  2527  0E9C                     	;# 
  2528  0E9D                     	;# 
  2529  0E9E                     	;# 
  2530  0E9F                     	;# 
  2531  0EA0                     	;# 
  2532  0EA1                     	;# 
  2533  0EA2                     	;# 
  2534  0EA3                     	;# 
  2535  0EA4                     	;# 
  2536  0EA5                     	;# 
  2537  0EA6                     	;# 
  2538  0EA7                     	;# 
  2539  0F0F                     	;# 
  2540  0F10                     	;# 
  2541  0F11                     	;# 
  2542  0F12                     	;# 
  2543  0F13                     	;# 
  2544  0F14                     	;# 
  2545  0F15                     	;# 
  2546  0F16                     	;# 
  2547  0F17                     	;# 
  2548  0F18                     	;# 
  2549  0F19                     	;# 
  2550  0F1A                     	;# 
  2551  0F1B                     	;# 
  2552  0F1C                     	;# 
  2553  0F1D                     	;# 
  2554  0F1E                     	;# 
  2555  0F1F                     	;# 
  2556  0F20                     	;# 
  2557  0F21                     	;# 
  2558  0F22                     	;# 
  2559  0F23                     	;# 
  2560  0F24                     	;# 
  2561  0F25                     	;# 
  2562  0F26                     	;# 
  2563  0F27                     	;# 
  2564  0F28                     	;# 
  2565  0F29                     	;# 
  2566  0F2A                     	;# 
  2567  0F2B                     	;# 
  2568  0F2C                     	;# 
  2569  0F2D                     	;# 
  2570  0F2E                     	;# 
  2571  0F2F                     	;# 
  2572  0F30                     	;# 
  2573  0F31                     	;# 
  2574  0F32                     	;# 
  2575  0F33                     	;# 
  2576  0F34                     	;# 
  2577  0F35                     	;# 
  2578  0F36                     	;# 
  2579  0F37                     	;# 
  2580  0FE4                     	;# 
  2581  0FE5                     	;# 
  2582  0FE6                     	;# 
  2583  0FE7                     	;# 
  2584  0FE8                     	;# 
  2585  0FE9                     	;# 
  2586  0FEA                     	;# 
  2587  0FEB                     	;# 
  2588  0FED                     	;# 
  2589  0FEE                     	;# 
  2590  0FEF                     	;# 
  2591  0000                     	;# 
  2592  0001                     	;# 
  2593  0002                     	;# 
  2594  0003                     	;# 
  2595  0004                     	;# 
  2596  0005                     	;# 
  2597  0006                     	;# 
  2598  0007                     	;# 
  2599  0008                     	;# 
  2600  0009                     	;# 
  2601  000A                     	;# 
  2602  000B                     	;# 
  2603  000C                     	;# 
  2604  000D                     	;# 
  2605  000E                     	;# 
  2606  0010                     	;# 
  2607  0011                     	;# 
  2608  0012                     	;# 
  2609  0013                     	;# 
  2610  0014                     	;# 
  2611  0015                     	;# 
  2612  0015                     	;# 
  2613  0016                     	;# 
  2614  0016                     	;# 
  2615  0017                     	;# 
  2616  0018                     	;# 
  2617  0019                     	;# 
  2618  0019                     	;# 
  2619  001A                     	;# 
  2620  001B                     	;# 
  2621  001C                     	;# 
  2622  001D                     	;# 
  2623  001E                     	;# 
  2624  001F                     	;# 
  2625  008C                     	;# 
  2626  008D                     	;# 
  2627  008E                     	;# 
  2628  0090                     	;# 
  2629  0091                     	;# 
  2630  0092                     	;# 
  2631  0093                     	;# 
  2632  0094                     	;# 
  2633  0097                     	;# 
  2634  009B                     	;# 
  2635  009B                     	;# 
  2636  009C                     	;# 
  2637  009D                     	;# 
  2638  009E                     	;# 
  2639  009F                     	;# 
  2640  010C                     	;# 
  2641  010D                     	;# 
  2642  010E                     	;# 
  2643  0111                     	;# 
  2644  0112                     	;# 
  2645  0113                     	;# 
  2646  0114                     	;# 
  2647  0115                     	;# 
  2648  0116                     	;# 
  2649  0117                     	;# 
  2650  0118                     	;# 
  2651  0119                     	;# 
  2652  018C                     	;# 
  2653  018D                     	;# 
  2654  018E                     	;# 
  2655  0197                     	;# 
  2656  0199                     	;# 
  2657  0199                     	;# 
  2658  0199                     	;# 
  2659  019A                     	;# 
  2660  019A                     	;# 
  2661  019A                     	;# 
  2662  019B                     	;# 
  2663  019B                     	;# 
  2664  019B                     	;# 
  2665  019B                     	;# 
  2666  019B                     	;# 
  2667  019C                     	;# 
  2668  019C                     	;# 
  2669  019C                     	;# 
  2670  019D                     	;# 
  2671  019D                     	;# 
  2672  019D                     	;# 
  2673  019E                     	;# 
  2674  019E                     	;# 
  2675  019E                     	;# 
  2676  019F                     	;# 
  2677  019F                     	;# 
  2678  019F                     	;# 
  2679  019F                     	;# 
  2680  019F                     	;# 
  2681  020C                     	;# 
  2682  020D                     	;# 
  2683  020E                     	;# 
  2684  0211                     	;# 
  2685  0211                     	;# 
  2686  0212                     	;# 
  2687  0212                     	;# 
  2688  0213                     	;# 
  2689  0213                     	;# 
  2690  0214                     	;# 
  2691  0214                     	;# 
  2692  0215                     	;# 
  2693  0215                     	;# 
  2694  0215                     	;# 
  2695  0215                     	;# 
  2696  0216                     	;# 
  2697  0216                     	;# 
  2698  0217                     	;# 
  2699  0217                     	;# 
  2700  0219                     	;# 
  2701  021A                     	;# 
  2702  021B                     	;# 
  2703  021C                     	;# 
  2704  021D                     	;# 
  2705  021D                     	;# 
  2706  021E                     	;# 
  2707  021F                     	;# 
  2708  028C                     	;# 
  2709  028D                     	;# 
  2710  028E                     	;# 
  2711  0291                     	;# 
  2712  0291                     	;# 
  2713  0292                     	;# 
  2714  0293                     	;# 
  2715  0294                     	;# 
  2716  0295                     	;# 
  2717  0295                     	;# 
  2718  0296                     	;# 
  2719  0297                     	;# 
  2720  0298                     	;# 
  2721  029F                     	;# 
  2722  030C                     	;# 
  2723  030D                     	;# 
  2724  030E                     	;# 
  2725  0311                     	;# 
  2726  0311                     	;# 
  2727  0312                     	;# 
  2728  0313                     	;# 
  2729  0314                     	;# 
  2730  0315                     	;# 
  2731  0315                     	;# 
  2732  0316                     	;# 
  2733  0317                     	;# 
  2734  0318                     	;# 
  2735  038C                     	;# 
  2736  038D                     	;# 
  2737  038E                     	;# 
  2738  0391                     	;# 
  2739  0392                     	;# 
  2740  0393                     	;# 
  2741  0394                     	;# 
  2742  0395                     	;# 
  2743  0396                     	;# 
  2744  0397                     	;# 
  2745  0398                     	;# 
  2746  0399                     	;# 
  2747  039A                     	;# 
  2748  039C                     	;# 
  2749  039D                     	;# 
  2750  039E                     	;# 
  2751  039F                     	;# 
  2752  0411                     	;# 
  2753  0411                     	;# 
  2754  0412                     	;# 
  2755  0413                     	;# 
  2756  0414                     	;# 
  2757  0415                     	;# 
  2758  0416                     	;# 
  2759  0417                     	;# 
  2760  0418                     	;# 
  2761  0418                     	;# 
  2762  0419                     	;# 
  2763  041A                     	;# 
  2764  041B                     	;# 
  2765  041C                     	;# 
  2766  041D                     	;# 
  2767  041E                     	;# 
  2768  041F                     	;# 
  2769  0498                     	;# 
  2770  0498                     	;# 
  2771  0499                     	;# 
  2772  049A                     	;# 
  2773  049B                     	;# 
  2774  049B                     	;# 
  2775  049C                     	;# 
  2776  049D                     	;# 
  2777  049E                     	;# 
  2778  049F                     	;# 
  2779  0617                     	;# 
  2780  0618                     	;# 
  2781  0619                     	;# 
  2782  0619                     	;# 
  2783  061A                     	;# 
  2784  061B                     	;# 
  2785  061C                     	;# 
  2786  061C                     	;# 
  2787  061F                     	;# 
  2788  0691                     	;# 
  2789  0692                     	;# 
  2790  0693                     	;# 
  2791  0694                     	;# 
  2792  0695                     	;# 
  2793  0696                     	;# 
  2794  0697                     	;# 
  2795  0698                     	;# 
  2796  0699                     	;# 
  2797  0711                     	;# 
  2798  0712                     	;# 
  2799  0713                     	;# 
  2800  0714                     	;# 
  2801  0715                     	;# 
  2802  0716                     	;# 
  2803  0717                     	;# 
  2804  0718                     	;# 
  2805  0719                     	;# 
  2806  0891                     	;# 
  2807  0891                     	;# 
  2808  0891                     	;# 
  2809  0891                     	;# 
  2810  0891                     	;# 
  2811  0891                     	;# 
  2812  0892                     	;# 
  2813  0892                     	;# 
  2814  0892                     	;# 
  2815  0893                     	;# 
  2816  0893                     	;# 
  2817  0893                     	;# 
  2818  0893                     	;# 
  2819  0893                     	;# 
  2820  0893                     	;# 
  2821  0894                     	;# 
  2822  0894                     	;# 
  2823  0894                     	;# 
  2824  0895                     	;# 
  2825  0895                     	;# 
  2826  0895                     	;# 
  2827  0896                     	;# 
  2828  0896                     	;# 
  2829  0896                     	;# 
  2830  089B                     	;# 
  2831  0911                     	;# 
  2832  0912                     	;# 
  2833  0913                     	;# 
  2834  0914                     	;# 
  2835  0915                     	;# 
  2836  0916                     	;# 
  2837  0918                     	;# 
  2838  0919                     	;# 
  2839  091A                     	;# 
  2840  091B                     	;# 
  2841  091C                     	;# 
  2842  091D                     	;# 
  2843  091E                     	;# 
  2844  091F                     	;# 
  2845  0E0F                     	;# 
  2846  0E10                     	;# 
  2847  0E11                     	;# 
  2848  0E12                     	;# 
  2849  0E13                     	;# 
  2850  0E14                     	;# 
  2851  0E15                     	;# 
  2852  0E16                     	;# 
  2853  0E17                     	;# 
  2854  0E18                     	;# 
  2855  0E19                     	;# 
  2856  0E1A                     	;# 
  2857  0E1B                     	;# 
  2858  0E1C                     	;# 
  2859  0E1D                     	;# 
  2860  0E1E                     	;# 
  2861  0E1F                     	;# 
  2862  0E20                     	;# 
  2863  0E21                     	;# 
  2864  0E22                     	;# 
  2865  0E24                     	;# 
  2866  0E25                     	;# 
  2867  0E28                     	;# 
  2868  0E29                     	;# 
  2869  0E2A                     	;# 
  2870  0E2B                     	;# 
  2871  0E2C                     	;# 
  2872  0E2D                     	;# 
  2873  0E2E                     	;# 
  2874  0E2F                     	;# 
  2875  0E90                     	;# 
  2876  0E91                     	;# 
  2877  0E92                     	;# 
  2878  0E94                     	;# 
  2879  0E95                     	;# 
  2880  0E9C                     	;# 
  2881  0E9D                     	;# 
  2882  0E9E                     	;# 
  2883  0E9F                     	;# 
  2884  0EA0                     	;# 
  2885  0EA1                     	;# 
  2886  0EA2                     	;# 
  2887  0EA3                     	;# 
  2888  0EA4                     	;# 
  2889  0EA5                     	;# 
  2890  0EA6                     	;# 
  2891  0EA7                     	;# 
  2892  0F0F                     	;# 
  2893  0F10                     	;# 
  2894  0F11                     	;# 
  2895  0F12                     	;# 
  2896  0F13                     	;# 
  2897  0F14                     	;# 
  2898  0F15                     	;# 
  2899  0F16                     	;# 
  2900  0F17                     	;# 
  2901  0F18                     	;# 
  2902  0F19                     	;# 
  2903  0F1A                     	;# 
  2904  0F1B                     	;# 
  2905  0F1C                     	;# 
  2906  0F1D                     	;# 
  2907  0F1E                     	;# 
  2908  0F1F                     	;# 
  2909  0F20                     	;# 
  2910  0F21                     	;# 
  2911  0F22                     	;# 
  2912  0F23                     	;# 
  2913  0F24                     	;# 
  2914  0F25                     	;# 
  2915  0F26                     	;# 
  2916  0F27                     	;# 
  2917  0F28                     	;# 
  2918  0F29                     	;# 
  2919  0F2A                     	;# 
  2920  0F2B                     	;# 
  2921  0F2C                     	;# 
  2922  0F2D                     	;# 
  2923  0F2E                     	;# 
  2924  0F2F                     	;# 
  2925  0F30                     	;# 
  2926  0F31                     	;# 
  2927  0F32                     	;# 
  2928  0F33                     	;# 
  2929  0F34                     	;# 
  2930  0F35                     	;# 
  2931  0F36                     	;# 
  2932  0F37                     	;# 
  2933  0FE4                     	;# 
  2934  0FE5                     	;# 
  2935  0FE6                     	;# 
  2936  0FE7                     	;# 
  2937  0FE8                     	;# 
  2938  0FE9                     	;# 
  2939  0FEA                     	;# 
  2940  0FEB                     	;# 
  2941  0FED                     	;# 
  2942  0FEE                     	;# 
  2943  0FEF                     	;# 
  2944  0000                     	;# 
  2945  0001                     	;# 
  2946  0002                     	;# 
  2947  0003                     	;# 
  2948  0004                     	;# 
  2949  0005                     	;# 
  2950  0006                     	;# 
  2951  0007                     	;# 
  2952  0008                     	;# 
  2953  0009                     	;# 
  2954  000A                     	;# 
  2955  000B                     	;# 
  2956  000C                     	;# 
  2957  000D                     	;# 
  2958  000E                     	;# 
  2959  0010                     	;# 
  2960  0011                     	;# 
  2961  0012                     	;# 
  2962  0013                     	;# 
  2963  0014                     	;# 
  2964  0015                     	;# 
  2965  0015                     	;# 
  2966  0016                     	;# 
  2967  0016                     	;# 
  2968  0017                     	;# 
  2969  0018                     	;# 
  2970  0019                     	;# 
  2971  0019                     	;# 
  2972  001A                     	;# 
  2973  001B                     	;# 
  2974  001C                     	;# 
  2975  001D                     	;# 
  2976  001E                     	;# 
  2977  001F                     	;# 
  2978  008C                     	;# 
  2979  008D                     	;# 
  2980  008E                     	;# 
  2981  0090                     	;# 
  2982  0091                     	;# 
  2983  0092                     	;# 
  2984  0093                     	;# 
  2985  0094                     	;# 
  2986  0097                     	;# 
  2987  009B                     	;# 
  2988  009B                     	;# 
  2989  009C                     	;# 
  2990  009D                     	;# 
  2991  009E                     	;# 
  2992  009F                     	;# 
  2993  010C                     	;# 
  2994  010D                     	;# 
  2995  010E                     	;# 
  2996  0111                     	;# 
  2997  0112                     	;# 
  2998  0113                     	;# 
  2999  0114                     	;# 
  3000  0115                     	;# 
  3001  0116                     	;# 
  3002  0117                     	;# 
  3003  0118                     	;# 
  3004  0119                     	;# 
  3005  018C                     	;# 
  3006  018D                     	;# 
  3007  018E                     	;# 
  3008  0197                     	;# 
  3009  0199                     	;# 
  3010  0199                     	;# 
  3011  0199                     	;# 
  3012  019A                     	;# 
  3013  019A                     	;# 
  3014  019A                     	;# 
  3015  019B                     	;# 
  3016  019B                     	;# 
  3017  019B                     	;# 
  3018  019B                     	;# 
  3019  019B                     	;# 
  3020  019C                     	;# 
  3021  019C                     	;# 
  3022  019C                     	;# 
  3023  019D                     	;# 
  3024  019D                     	;# 
  3025  019D                     	;# 
  3026  019E                     	;# 
  3027  019E                     	;# 
  3028  019E                     	;# 
  3029  019F                     	;# 
  3030  019F                     	;# 
  3031  019F                     	;# 
  3032  019F                     	;# 
  3033  019F                     	;# 
  3034  020C                     	;# 
  3035  020D                     	;# 
  3036  020E                     	;# 
  3037  0211                     	;# 
  3038  0211                     	;# 
  3039  0212                     	;# 
  3040  0212                     	;# 
  3041  0213                     	;# 
  3042  0213                     	;# 
  3043  0214                     	;# 
  3044  0214                     	;# 
  3045  0215                     	;# 
  3046  0215                     	;# 
  3047  0215                     	;# 
  3048  0215                     	;# 
  3049  0216                     	;# 
  3050  0216                     	;# 
  3051  0217                     	;# 
  3052  0217                     	;# 
  3053  0219                     	;# 
  3054  021A                     	;# 
  3055  021B                     	;# 
  3056  021C                     	;# 
  3057  021D                     	;# 
  3058  021D                     	;# 
  3059  021E                     	;# 
  3060  021F                     	;# 
  3061  028C                     	;# 
  3062  028D                     	;# 
  3063  028E                     	;# 
  3064  0291                     	;# 
  3065  0291                     	;# 
  3066  0292                     	;# 
  3067  0293                     	;# 
  3068  0294                     	;# 
  3069  0295                     	;# 
  3070  0295                     	;# 
  3071  0296                     	;# 
  3072  0297                     	;# 
  3073  0298                     	;# 
  3074  029F                     	;# 
  3075  030C                     	;# 
  3076  030D                     	;# 
  3077  030E                     	;# 
  3078  0311                     	;# 
  3079  0311                     	;# 
  3080  0312                     	;# 
  3081  0313                     	;# 
  3082  0314                     	;# 
  3083  0315                     	;# 
  3084  0315                     	;# 
  3085  0316                     	;# 
  3086  0317                     	;# 
  3087  0318                     	;# 
  3088  038C                     	;# 
  3089  038D                     	;# 
  3090  038E                     	;# 
  3091  0391                     	;# 
  3092  0392                     	;# 
  3093  0393                     	;# 
  3094  0394                     	;# 
  3095  0395                     	;# 
  3096  0396                     	;# 
  3097  0397                     	;# 
  3098  0398                     	;# 
  3099  0399                     	;# 
  3100  039A                     	;# 
  3101  039C                     	;# 
  3102  039D                     	;# 
  3103  039E                     	;# 
  3104  039F                     	;# 
  3105  0411                     	;# 
  3106  0411                     	;# 
  3107  0412                     	;# 
  3108  0413                     	;# 
  3109  0414                     	;# 
  3110  0415                     	;# 
  3111  0416                     	;# 
  3112  0417                     	;# 
  3113  0418                     	;# 
  3114  0418                     	;# 
  3115  0419                     	;# 
  3116  041A                     	;# 
  3117  041B                     	;# 
  3118  041C                     	;# 
  3119  041D                     	;# 
  3120  041E                     	;# 
  3121  041F                     	;# 
  3122  0498                     	;# 
  3123  0498                     	;# 
  3124  0499                     	;# 
  3125  049A                     	;# 
  3126  049B                     	;# 
  3127  049B                     	;# 
  3128  049C                     	;# 
  3129  049D                     	;# 
  3130  049E                     	;# 
  3131  049F                     	;# 
  3132  0617                     	;# 
  3133  0618                     	;# 
  3134  0619                     	;# 
  3135  0619                     	;# 
  3136  061A                     	;# 
  3137  061B                     	;# 
  3138  061C                     	;# 
  3139  061C                     	;# 
  3140  061F                     	;# 
  3141  0691                     	;# 
  3142  0692                     	;# 
  3143  0693                     	;# 
  3144  0694                     	;# 
  3145  0695                     	;# 
  3146  0696                     	;# 
  3147  0697                     	;# 
  3148  0698                     	;# 
  3149  0699                     	;# 
  3150  0711                     	;# 
  3151  0712                     	;# 
  3152  0713                     	;# 
  3153  0714                     	;# 
  3154  0715                     	;# 
  3155  0716                     	;# 
  3156  0717                     	;# 
  3157  0718                     	;# 
  3158  0719                     	;# 
  3159  0891                     	;# 
  3160  0891                     	;# 
  3161  0891                     	;# 
  3162  0891                     	;# 
  3163  0891                     	;# 
  3164  0891                     	;# 
  3165  0892                     	;# 
  3166  0892                     	;# 
  3167  0892                     	;# 
  3168  0893                     	;# 
  3169  0893                     	;# 
  3170  0893                     	;# 
  3171  0893                     	;# 
  3172  0893                     	;# 
  3173  0893                     	;# 
  3174  0894                     	;# 
  3175  0894                     	;# 
  3176  0894                     	;# 
  3177  0895                     	;# 
  3178  0895                     	;# 
  3179  0895                     	;# 
  3180  0896                     	;# 
  3181  0896                     	;# 
  3182  0896                     	;# 
  3183  089B                     	;# 
  3184  0911                     	;# 
  3185  0912                     	;# 
  3186  0913                     	;# 
  3187  0914                     	;# 
  3188  0915                     	;# 
  3189  0916                     	;# 
  3190  0918                     	;# 
  3191  0919                     	;# 
  3192  091A                     	;# 
  3193  091B                     	;# 
  3194  091C                     	;# 
  3195  091D                     	;# 
  3196  091E                     	;# 
  3197  091F                     	;# 
  3198  0E0F                     	;# 
  3199  0E10                     	;# 
  3200  0E11                     	;# 
  3201  0E12                     	;# 
  3202  0E13                     	;# 
  3203  0E14                     	;# 
  3204  0E15                     	;# 
  3205  0E16                     	;# 
  3206  0E17                     	;# 
  3207  0E18                     	;# 
  3208  0E19                     	;# 
  3209  0E1A                     	;# 
  3210  0E1B                     	;# 
  3211  0E1C                     	;# 
  3212  0E1D                     	;# 
  3213  0E1E                     	;# 
  3214  0E1F                     	;# 
  3215  0E20                     	;# 
  3216  0E21                     	;# 
  3217  0E22                     	;# 
  3218  0E24                     	;# 
  3219  0E25                     	;# 
  3220  0E28                     	;# 
  3221  0E29                     	;# 
  3222  0E2A                     	;# 
  3223  0E2B                     	;# 
  3224  0E2C                     	;# 
  3225  0E2D                     	;# 
  3226  0E2E                     	;# 
  3227  0E2F                     	;# 
  3228  0E90                     	;# 
  3229  0E91                     	;# 
  3230  0E92                     	;# 
  3231  0E94                     	;# 
  3232  0E95                     	;# 
  3233  0E9C                     	;# 
  3234  0E9D                     	;# 
  3235  0E9E                     	;# 
  3236  0E9F                     	;# 
  3237  0EA0                     	;# 
  3238  0EA1                     	;# 
  3239  0EA2                     	;# 
  3240  0EA3                     	;# 
  3241  0EA4                     	;# 
  3242  0EA5                     	;# 
  3243  0EA6                     	;# 
  3244  0EA7                     	;# 
  3245  0F0F                     	;# 
  3246  0F10                     	;# 
  3247  0F11                     	;# 
  3248  0F12                     	;# 
  3249  0F13                     	;# 
  3250  0F14                     	;# 
  3251  0F15                     	;# 
  3252  0F16                     	;# 
  3253  0F17                     	;# 
  3254  0F18                     	;# 
  3255  0F19                     	;# 
  3256  0F1A                     	;# 
  3257  0F1B                     	;# 
  3258  0F1C                     	;# 
  3259  0F1D                     	;# 
  3260  0F1E                     	;# 
  3261  0F1F                     	;# 
  3262  0F20                     	;# 
  3263  0F21                     	;# 
  3264  0F22                     	;# 
  3265  0F23                     	;# 
  3266  0F24                     	;# 
  3267  0F25                     	;# 
  3268  0F26                     	;# 
  3269  0F27                     	;# 
  3270  0F28                     	;# 
  3271  0F29                     	;# 
  3272  0F2A                     	;# 
  3273  0F2B                     	;# 
  3274  0F2C                     	;# 
  3275  0F2D                     	;# 
  3276  0F2E                     	;# 
  3277  0F2F                     	;# 
  3278  0F30                     	;# 
  3279  0F31                     	;# 
  3280  0F32                     	;# 
  3281  0F33                     	;# 
  3282  0F34                     	;# 
  3283  0F35                     	;# 
  3284  0F36                     	;# 
  3285  0F37                     	;# 
  3286  0FE4                     	;# 
  3287  0FE5                     	;# 
  3288  0FE6                     	;# 
  3289  0FE7                     	;# 
  3290  0FE8                     	;# 
  3291  0FE9                     	;# 
  3292  0FEA                     	;# 
  3293  0FEB                     	;# 
  3294  0FED                     	;# 
  3295  0FEE                     	;# 
  3296  0FEF                     	;# 
  3297  0000                     	;# 
  3298  0001                     	;# 
  3299  0002                     	;# 
  3300  0003                     	;# 
  3301  0004                     	;# 
  3302  0005                     	;# 
  3303  0006                     	;# 
  3304  0007                     	;# 
  3305  0008                     	;# 
  3306  0009                     	;# 
  3307  000A                     	;# 
  3308  000B                     	;# 
  3309  000C                     	;# 
  3310  000D                     	;# 
  3311  000E                     	;# 
  3312  0010                     	;# 
  3313  0011                     	;# 
  3314  0012                     	;# 
  3315  0013                     	;# 
  3316  0014                     	;# 
  3317  0015                     	;# 
  3318  0015                     	;# 
  3319  0016                     	;# 
  3320  0016                     	;# 
  3321  0017                     	;# 
  3322  0018                     	;# 
  3323  0019                     	;# 
  3324  0019                     	;# 
  3325  001A                     	;# 
  3326  001B                     	;# 
  3327  001C                     	;# 
  3328  001D                     	;# 
  3329  001E                     	;# 
  3330  001F                     	;# 
  3331  008C                     	;# 
  3332  008D                     	;# 
  3333  008E                     	;# 
  3334  0090                     	;# 
  3335  0091                     	;# 
  3336  0092                     	;# 
  3337  0093                     	;# 
  3338  0094                     	;# 
  3339  0097                     	;# 
  3340  009B                     	;# 
  3341  009B                     	;# 
  3342  009C                     	;# 
  3343  009D                     	;# 
  3344  009E                     	;# 
  3345  009F                     	;# 
  3346  010C                     	;# 
  3347  010D                     	;# 
  3348  010E                     	;# 
  3349  0111                     	;# 
  3350  0112                     	;# 
  3351  0113                     	;# 
  3352  0114                     	;# 
  3353  0115                     	;# 
  3354  0116                     	;# 
  3355  0117                     	;# 
  3356  0118                     	;# 
  3357  0119                     	;# 
  3358  018C                     	;# 
  3359  018D                     	;# 
  3360  018E                     	;# 
  3361  0197                     	;# 
  3362  0199                     	;# 
  3363  0199                     	;# 
  3364  0199                     	;# 
  3365  019A                     	;# 
  3366  019A                     	;# 
  3367  019A                     	;# 
  3368  019B                     	;# 
  3369  019B                     	;# 
  3370  019B                     	;# 
  3371  019B                     	;# 
  3372  019B                     	;# 
  3373  019C                     	;# 
  3374  019C                     	;# 
  3375  019C                     	;# 
  3376  019D                     	;# 
  3377  019D                     	;# 
  3378  019D                     	;# 
  3379  019E                     	;# 
  3380  019E                     	;# 
  3381  019E                     	;# 
  3382  019F                     	;# 
  3383  019F                     	;# 
  3384  019F                     	;# 
  3385  019F                     	;# 
  3386  019F                     	;# 
  3387  020C                     	;# 
  3388  020D                     	;# 
  3389  020E                     	;# 
  3390  0211                     	;# 
  3391  0211                     	;# 
  3392  0212                     	;# 
  3393  0212                     	;# 
  3394  0213                     	;# 
  3395  0213                     	;# 
  3396  0214                     	;# 
  3397  0214                     	;# 
  3398  0215                     	;# 
  3399  0215                     	;# 
  3400  0215                     	;# 
  3401  0215                     	;# 
  3402  0216                     	;# 
  3403  0216                     	;# 
  3404  0217                     	;# 
  3405  0217                     	;# 
  3406  0219                     	;# 
  3407  021A                     	;# 
  3408  021B                     	;# 
  3409  021C                     	;# 
  3410  021D                     	;# 
  3411  021D                     	;# 
  3412  021E                     	;# 
  3413  021F                     	;# 
  3414  028C                     	;# 
  3415  028D                     	;# 
  3416  028E                     	;# 
  3417  0291                     	;# 
  3418  0291                     	;# 
  3419  0292                     	;# 
  3420  0293                     	;# 
  3421  0294                     	;# 
  3422  0295                     	;# 
  3423  0295                     	;# 
  3424  0296                     	;# 
  3425  0297                     	;# 
  3426  0298                     	;# 
  3427  029F                     	;# 
  3428  030C                     	;# 
  3429  030D                     	;# 
  3430  030E                     	;# 
  3431  0311                     	;# 
  3432  0311                     	;# 
  3433  0312                     	;# 
  3434  0313                     	;# 
  3435  0314                     	;# 
  3436  0315                     	;# 
  3437  0315                     	;# 
  3438  0316                     	;# 
  3439  0317                     	;# 
  3440  0318                     	;# 
  3441  038C                     	;# 
  3442  038D                     	;# 
  3443  038E                     	;# 
  3444  0391                     	;# 
  3445  0392                     	;# 
  3446  0393                     	;# 
  3447  0394                     	;# 
  3448  0395                     	;# 
  3449  0396                     	;# 
  3450  0397                     	;# 
  3451  0398                     	;# 
  3452  0399                     	;# 
  3453  039A                     	;# 
  3454  039C                     	;# 
  3455  039D                     	;# 
  3456  039E                     	;# 
  3457  039F                     	;# 
  3458  0411                     	;# 
  3459  0411                     	;# 
  3460  0412                     	;# 
  3461  0413                     	;# 
  3462  0414                     	;# 
  3463  0415                     	;# 
  3464  0416                     	;# 
  3465  0417                     	;# 
  3466  0418                     	;# 
  3467  0418                     	;# 
  3468  0419                     	;# 
  3469  041A                     	;# 
  3470  041B                     	;# 
  3471  041C                     	;# 
  3472  041D                     	;# 
  3473  041E                     	;# 
  3474  041F                     	;# 
  3475  0498                     	;# 
  3476  0498                     	;# 
  3477  0499                     	;# 
  3478  049A                     	;# 
  3479  049B                     	;# 
  3480  049B                     	;# 
  3481  049C                     	;# 
  3482  049D                     	;# 
  3483  049E                     	;# 
  3484  049F                     	;# 
  3485  0617                     	;# 
  3486  0618                     	;# 
  3487  0619                     	;# 
  3488  0619                     	;# 
  3489  061A                     	;# 
  3490  061B                     	;# 
  3491  061C                     	;# 
  3492  061C                     	;# 
  3493  061F                     	;# 
  3494  0691                     	;# 
  3495  0692                     	;# 
  3496  0693                     	;# 
  3497  0694                     	;# 
  3498  0695                     	;# 
  3499  0696                     	;# 
  3500  0697                     	;# 
  3501  0698                     	;# 
  3502  0699                     	;# 
  3503  0711                     	;# 
  3504  0712                     	;# 
  3505  0713                     	;# 
  3506  0714                     	;# 
  3507  0715                     	;# 
  3508  0716                     	;# 
  3509  0717                     	;# 
  3510  0718                     	;# 
  3511  0719                     	;# 
  3512  0891                     	;# 
  3513  0891                     	;# 
  3514  0891                     	;# 
  3515  0891                     	;# 
  3516  0891                     	;# 
  3517  0891                     	;# 
  3518  0892                     	;# 
  3519  0892                     	;# 
  3520  0892                     	;# 
  3521  0893                     	;# 
  3522  0893                     	;# 
  3523  0893                     	;# 
  3524  0893                     	;# 
  3525  0893                     	;# 
  3526  0893                     	;# 
  3527  0894                     	;# 
  3528  0894                     	;# 
  3529  0894                     	;# 
  3530  0895                     	;# 
  3531  0895                     	;# 
  3532  0895                     	;# 
  3533  0896                     	;# 
  3534  0896                     	;# 
  3535  0896                     	;# 
  3536  089B                     	;# 
  3537  0911                     	;# 
  3538  0912                     	;# 
  3539  0913                     	;# 
  3540  0914                     	;# 
  3541  0915                     	;# 
  3542  0916                     	;# 
  3543  0918                     	;# 
  3544  0919                     	;# 
  3545  091A                     	;# 
  3546  091B                     	;# 
  3547  091C                     	;# 
  3548  091D                     	;# 
  3549  091E                     	;# 
  3550  091F                     	;# 
  3551  0E0F                     	;# 
  3552  0E10                     	;# 
  3553  0E11                     	;# 
  3554  0E12                     	;# 
  3555  0E13                     	;# 
  3556  0E14                     	;# 
  3557  0E15                     	;# 
  3558  0E16                     	;# 
  3559  0E17                     	;# 
  3560  0E18                     	;# 
  3561  0E19                     	;# 
  3562  0E1A                     	;# 
  3563  0E1B                     	;# 
  3564  0E1C                     	;# 
  3565  0E1D                     	;# 
  3566  0E1E                     	;# 
  3567  0E1F                     	;# 
  3568  0E20                     	;# 
  3569  0E21                     	;# 
  3570  0E22                     	;# 
  3571  0E24                     	;# 
  3572  0E25                     	;# 
  3573  0E28                     	;# 
  3574  0E29                     	;# 
  3575  0E2A                     	;# 
  3576  0E2B                     	;# 
  3577  0E2C                     	;# 
  3578  0E2D                     	;# 
  3579  0E2E                     	;# 
  3580  0E2F                     	;# 
  3581  0E90                     	;# 
  3582  0E91                     	;# 
  3583  0E92                     	;# 
  3584  0E94                     	;# 
  3585  0E95                     	;# 
  3586  0E9C                     	;# 
  3587  0E9D                     	;# 
  3588  0E9E                     	;# 
  3589  0E9F                     	;# 
  3590  0EA0                     	;# 
  3591  0EA1                     	;# 
  3592  0EA2                     	;# 
  3593  0EA3                     	;# 
  3594  0EA4                     	;# 
  3595  0EA5                     	;# 
  3596  0EA6                     	;# 
  3597  0EA7                     	;# 
  3598  0F0F                     	;# 
  3599  0F10                     	;# 
  3600  0F11                     	;# 
  3601  0F12                     	;# 
  3602  0F13                     	;# 
  3603  0F14                     	;# 
  3604  0F15                     	;# 
  3605  0F16                     	;# 
  3606  0F17                     	;# 
  3607  0F18                     	;# 
  3608  0F19                     	;# 
  3609  0F1A                     	;# 
  3610  0F1B                     	;# 
  3611  0F1C                     	;# 
  3612  0F1D                     	;# 
  3613  0F1E                     	;# 
  3614  0F1F                     	;# 
  3615  0F20                     	;# 
  3616  0F21                     	;# 
  3617  0F22                     	;# 
  3618  0F23                     	;# 
  3619  0F24                     	;# 
  3620  0F25                     	;# 
  3621  0F26                     	;# 
  3622  0F27                     	;# 
  3623  0F28                     	;# 
  3624  0F29                     	;# 
  3625  0F2A                     	;# 
  3626  0F2B                     	;# 
  3627  0F2C                     	;# 
  3628  0F2D                     	;# 
  3629  0F2E                     	;# 
  3630  0F2F                     	;# 
  3631  0F30                     	;# 
  3632  0F31                     	;# 
  3633  0F32                     	;# 
  3634  0F33                     	;# 
  3635  0F34                     	;# 
  3636  0F35                     	;# 
  3637  0F36                     	;# 
  3638  0F37                     	;# 
  3639  0FE4                     	;# 
  3640  0FE5                     	;# 
  3641  0FE6                     	;# 
  3642  0FE7                     	;# 
  3643  0FE8                     	;# 
  3644  0FE9                     	;# 
  3645  0FEA                     	;# 
  3646  0FEB                     	;# 
  3647  0FED                     	;# 
  3648  0FEE                     	;# 
  3649  0FEF                     	;# 
  3650  0000                     	;# 
  3651  0001                     	;# 
  3652  0002                     	;# 
  3653  0003                     	;# 
  3654  0004                     	;# 
  3655  0005                     	;# 
  3656  0006                     	;# 
  3657  0007                     	;# 
  3658  0008                     	;# 
  3659  0009                     	;# 
  3660  000A                     	;# 
  3661  000B                     	;# 
  3662  000C                     	;# 
  3663  000D                     	;# 
  3664  000E                     	;# 
  3665  0010                     	;# 
  3666  0011                     	;# 
  3667  0012                     	;# 
  3668  0013                     	;# 
  3669  0014                     	;# 
  3670  0015                     	;# 
  3671  0015                     	;# 
  3672  0016                     	;# 
  3673  0016                     	;# 
  3674  0017                     	;# 
  3675  0018                     	;# 
  3676  0019                     	;# 
  3677  0019                     	;# 
  3678  001A                     	;# 
  3679  001B                     	;# 
  3680  001C                     	;# 
  3681  001D                     	;# 
  3682  001E                     	;# 
  3683  001F                     	;# 
  3684  008C                     	;# 
  3685  008D                     	;# 
  3686  008E                     	;# 
  3687  0090                     	;# 
  3688  0091                     	;# 
  3689  0092                     	;# 
  3690  0093                     	;# 
  3691  0094                     	;# 
  3692  0097                     	;# 
  3693  009B                     	;# 
  3694  009B                     	;# 
  3695  009C                     	;# 
  3696  009D                     	;# 
  3697  009E                     	;# 
  3698  009F                     	;# 
  3699  010C                     	;# 
  3700  010D                     	;# 
  3701  010E                     	;# 
  3702  0111                     	;# 
  3703  0112                     	;# 
  3704  0113                     	;# 
  3705  0114                     	;# 
  3706  0115                     	;# 
  3707  0116                     	;# 
  3708  0117                     	;# 
  3709  0118                     	;# 
  3710  0119                     	;# 
  3711  018C                     	;# 
  3712  018D                     	;# 
  3713  018E                     	;# 
  3714  0197                     	;# 
  3715  0199                     	;# 
  3716  0199                     	;# 
  3717  0199                     	;# 
  3718  019A                     	;# 
  3719  019A                     	;# 
  3720  019A                     	;# 
  3721  019B                     	;# 
  3722  019B                     	;# 
  3723  019B                     	;# 
  3724  019B                     	;# 
  3725  019B                     	;# 
  3726  019C                     	;# 
  3727  019C                     	;# 
  3728  019C                     	;# 
  3729  019D                     	;# 
  3730  019D                     	;# 
  3731  019D                     	;# 
  3732  019E                     	;# 
  3733  019E                     	;# 
  3734  019E                     	;# 
  3735  019F                     	;# 
  3736  019F                     	;# 
  3737  019F                     	;# 
  3738  019F                     	;# 
  3739  019F                     	;# 
  3740  020C                     	;# 
  3741  020D                     	;# 
  3742  020E                     	;# 
  3743  0211                     	;# 
  3744  0211                     	;# 
  3745  0212                     	;# 
  3746  0212                     	;# 
  3747  0213                     	;# 
  3748  0213                     	;# 
  3749  0214                     	;# 
  3750  0214                     	;# 
  3751  0215                     	;# 
  3752  0215                     	;# 
  3753  0215                     	;# 
  3754  0215                     	;# 
  3755  0216                     	;# 
  3756  0216                     	;# 
  3757  0217                     	;# 
  3758  0217                     	;# 
  3759  0219                     	;# 
  3760  021A                     	;# 
  3761  021B                     	;# 
  3762  021C                     	;# 
  3763  021D                     	;# 
  3764  021D                     	;# 
  3765  021E                     	;# 
  3766  021F                     	;# 
  3767  028C                     	;# 
  3768  028D                     	;# 
  3769  028E                     	;# 
  3770  0291                     	;# 
  3771  0291                     	;# 
  3772  0292                     	;# 
  3773  0293                     	;# 
  3774  0294                     	;# 
  3775  0295                     	;# 
  3776  0295                     	;# 
  3777  0296                     	;# 
  3778  0297                     	;# 
  3779  0298                     	;# 
  3780  029F                     	;# 
  3781  030C                     	;# 
  3782  030D                     	;# 
  3783  030E                     	;# 
  3784  0311                     	;# 
  3785  0311                     	;# 
  3786  0312                     	;# 
  3787  0313                     	;# 
  3788  0314                     	;# 
  3789  0315                     	;# 
  3790  0315                     	;# 
  3791  0316                     	;# 
  3792  0317                     	;# 
  3793  0318                     	;# 
  3794  038C                     	;# 
  3795  038D                     	;# 
  3796  038E                     	;# 
  3797  0391                     	;# 
  3798  0392                     	;# 
  3799  0393                     	;# 
  3800  0394                     	;# 
  3801  0395                     	;# 
  3802  0396                     	;# 
  3803  0397                     	;# 
  3804  0398                     	;# 
  3805  0399                     	;# 
  3806  039A                     	;# 
  3807  039C                     	;# 
  3808  039D                     	;# 
  3809  039E                     	;# 
  3810  039F                     	;# 
  3811  0411                     	;# 
  3812  0411                     	;# 
  3813  0412                     	;# 
  3814  0413                     	;# 
  3815  0414                     	;# 
  3816  0415                     	;# 
  3817  0416                     	;# 
  3818  0417                     	;# 
  3819  0418                     	;# 
  3820  0418                     	;# 
  3821  0419                     	;# 
  3822  041A                     	;# 
  3823  041B                     	;# 
  3824  041C                     	;# 
  3825  041D                     	;# 
  3826  041E                     	;# 
  3827  041F                     	;# 
  3828  0498                     	;# 
  3829  0498                     	;# 
  3830  0499                     	;# 
  3831  049A                     	;# 
  3832  049B                     	;# 
  3833  049B                     	;# 
  3834  049C                     	;# 
  3835  049D                     	;# 
  3836  049E                     	;# 
  3837  049F                     	;# 
  3838  0617                     	;# 
  3839  0618                     	;# 
  3840  0619                     	;# 
  3841  0619                     	;# 
  3842  061A                     	;# 
  3843  061B                     	;# 
  3844  061C                     	;# 
  3845  061C                     	;# 
  3846  061F                     	;# 
  3847  0691                     	;# 
  3848  0692                     	;# 
  3849  0693                     	;# 
  3850  0694                     	;# 
  3851  0695                     	;# 
  3852  0696                     	;# 
  3853  0697                     	;# 
  3854  0698                     	;# 
  3855  0699                     	;# 
  3856  0711                     	;# 
  3857  0712                     	;# 
  3858  0713                     	;# 
  3859  0714                     	;# 
  3860  0715                     	;# 
  3861  0716                     	;# 
  3862  0717                     	;# 
  3863  0718                     	;# 
  3864  0719                     	;# 
  3865  0891                     	;# 
  3866  0891                     	;# 
  3867  0891                     	;# 
  3868  0891                     	;# 
  3869  0891                     	;# 
  3870  0891                     	;# 
  3871  0892                     	;# 
  3872  0892                     	;# 
  3873  0892                     	;# 
  3874  0893                     	;# 
  3875  0893                     	;# 
  3876  0893                     	;# 
  3877  0893                     	;# 
  3878  0893                     	;# 
  3879  0893                     	;# 
  3880  0894                     	;# 
  3881  0894                     	;# 
  3882  0894                     	;# 
  3883  0895                     	;# 
  3884  0895                     	;# 
  3885  0895                     	;# 
  3886  0896                     	;# 
  3887  0896                     	;# 
  3888  0896                     	;# 
  3889  089B                     	;# 
  3890  0911                     	;# 
  3891  0912                     	;# 
  3892  0913                     	;# 
  3893  0914                     	;# 
  3894  0915                     	;# 
  3895  0916                     	;# 
  3896  0918                     	;# 
  3897  0919                     	;# 
  3898  091A                     	;# 
  3899  091B                     	;# 
  3900  091C                     	;# 
  3901  091D                     	;# 
  3902  091E                     	;# 
  3903  091F                     	;# 
  3904  0E0F                     	;# 
  3905  0E10                     	;# 
  3906  0E11                     	;# 
  3907  0E12                     	;# 
  3908  0E13                     	;# 
  3909  0E14                     	;# 
  3910  0E15                     	;# 
  3911  0E16                     	;# 
  3912  0E17                     	;# 
  3913  0E18                     	;# 
  3914  0E19                     	;# 
  3915  0E1A                     	;# 
  3916  0E1B                     	;# 
  3917  0E1C                     	;# 
  3918  0E1D                     	;# 
  3919  0E1E                     	;# 
  3920  0E1F                     	;# 
  3921  0E20                     	;# 
  3922  0E21                     	;# 
  3923  0E22                     	;# 
  3924  0E24                     	;# 
  3925  0E25                     	;# 
  3926  0E28                     	;# 
  3927  0E29                     	;# 
  3928  0E2A                     	;# 
  3929  0E2B                     	;# 
  3930  0E2C                     	;# 
  3931  0E2D                     	;# 
  3932  0E2E                     	;# 
  3933  0E2F                     	;# 
  3934  0E90                     	;# 
  3935  0E91                     	;# 
  3936  0E92                     	;# 
  3937  0E94                     	;# 
  3938  0E95                     	;# 
  3939  0E9C                     	;# 
  3940  0E9D                     	;# 
  3941  0E9E                     	;# 
  3942  0E9F                     	;# 
  3943  0EA0                     	;# 
  3944  0EA1                     	;# 
  3945  0EA2                     	;# 
  3946  0EA3                     	;# 
  3947  0EA4                     	;# 
  3948  0EA5                     	;# 
  3949  0EA6                     	;# 
  3950  0EA7                     	;# 
  3951  0F0F                     	;# 
  3952  0F10                     	;# 
  3953  0F11                     	;# 
  3954  0F12                     	;# 
  3955  0F13                     	;# 
  3956  0F14                     	;# 
  3957  0F15                     	;# 
  3958  0F16                     	;# 
  3959  0F17                     	;# 
  3960  0F18                     	;# 
  3961  0F19                     	;# 
  3962  0F1A                     	;# 
  3963  0F1B                     	;# 
  3964  0F1C                     	;# 
  3965  0F1D                     	;# 
  3966  0F1E                     	;# 
  3967  0F1F                     	;# 
  3968  0F20                     	;# 
  3969  0F21                     	;# 
  3970  0F22                     	;# 
  3971  0F23                     	;# 
  3972  0F24                     	;# 
  3973  0F25                     	;# 
  3974  0F26                     	;# 
  3975  0F27                     	;# 
  3976  0F28                     	;# 
  3977  0F29                     	;# 
  3978  0F2A                     	;# 
  3979  0F2B                     	;# 
  3980  0F2C                     	;# 
  3981  0F2D                     	;# 
  3982  0F2E                     	;# 
  3983  0F2F                     	;# 
  3984  0F30                     	;# 
  3985  0F31                     	;# 
  3986  0F32                     	;# 
  3987  0F33                     	;# 
  3988  0F34                     	;# 
  3989  0F35                     	;# 
  3990  0F36                     	;# 
  3991  0F37                     	;# 
  3992  0FE4                     	;# 
  3993  0FE5                     	;# 
  3994  0FE6                     	;# 
  3995  0FE7                     	;# 
  3996  0FE8                     	;# 
  3997  0FE9                     	;# 
  3998  0FEA                     	;# 
  3999  0FEB                     	;# 
  4000  0FED                     	;# 
  4001  0FEE                     	;# 
  4002  0FEF                     	;# 
  4003                           
  4004                           	psect	eeprom_data
  4005  0000  0000 0000 0000 0000 0001 0045 0043 004F 	db	0,0,0,0,1,69,67,79	;# 
  4006  0008  0042 004F 0054 0020 004C 0043 0043 002E 	db	66,79,84,32,76,67,67,46	;# 
  4007  0010  0000 0000 0000 0000 0002 0000 0000 0000 	db	0,0,0,0,2,0,0,0	;# 
  4008  0018  0001 0000 0000 0000 0000 0002 0000 0000 	db	1,0,0,0,0,2,0,0	;# 
  4009  0020  0000 0001 0000 0000 0000 0000 0003 0003 	db	0,1,0,0,0,0,3,3	;# 
  4010  0028  0001 0000 0028 0003 0002 0000 0064 0003 	db	1,0,40,3,2,0,100,3	;# 
  4011  0030  0003 0000 0048 0003 0004 0000 00C8 0003 	db	3,0,72,3,4,0,200,3	;# 
  4012  0038  0005 0000 0000 0003 0006 0000 0052 0003 	db	5,0,0,3,6,0,82,3	;# 
  4013  0040  0007 0000 0000 0002 0008 0000 0002 0009 	db	7,0,0,2,8,0,2,9	;# 
  4014  0048  0000 0002 000A 0001 0003 000B 0000 0000 	db	0,2,10,1,3,11,0,0	;# 
  4015  0050  0003 000C 0000 0000 0003 000D 0000 00B4 	db	3,12,0,0,3,13,0,180	;# 
  4016  0058  0003 000E 0000 0000 0003 000F 0000 0000 	db	3,14,0,0,3,15,0,0	;# 
  4017  0060  0003 0010 0000 0000 0003 0011 0000 0000 	db	3,16,0,0,3,17,0,0	;# 
  4018  0068  0003 0012 0000 0000 0003 0013 0000 0000 	db	3,18,0,0,3,19,0,0	;# 
  4019  0070  0000 0000 0000 0000 00FE 0000 0000 0000 	db	0,0,0,0,254,0,0,0	;# 
  4020  0078  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  4021  0080  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  4022  0088  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  4023  0090  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  4024  0098  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  4025  00A0  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  4026  00A8  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  4027  00B0  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  4028  00B8  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  4029  00C0  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  4030  00C8  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  4031  00D0  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  4032  00D8  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  4033  00E0  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  4034  00E8  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  4035  00F0  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  4036  0000                     	;# 
  4037  0001                     	;# 
  4038  0002                     	;# 
  4039  0003                     	;# 
  4040  0004                     	;# 
  4041  0005                     	;# 
  4042  0006                     	;# 
  4043  0007                     	;# 
  4044  0008                     	;# 
  4045  0009                     	;# 
  4046  000A                     	;# 
  4047  000B                     	;# 
  4048  000C                     	;# 
  4049  000D                     	;# 
  4050  000E                     	;# 
  4051  0010                     	;# 
  4052  0011                     	;# 
  4053  0012                     	;# 
  4054  0013                     	;# 
  4055  0014                     	;# 
  4056  0015                     	;# 
  4057  0015                     	;# 
  4058  0016                     	;# 
  4059  0016                     	;# 
  4060  0017                     	;# 
  4061  0018                     	;# 
  4062  0019                     	;# 
  4063  0019                     	;# 
  4064  001A                     	;# 
  4065  001B                     	;# 
  4066  001C                     	;# 
  4067  001D                     	;# 
  4068  001E                     	;# 
  4069  001F                     	;# 
  4070  008C                     	;# 
  4071  008D                     	;# 
  4072  008E                     	;# 
  4073  0090                     	;# 
  4074  0091                     	;# 
  4075  0092                     	;# 
  4076  0093                     	;# 
  4077  0094                     	;# 
  4078  0097                     	;# 
  4079  009B                     	;# 
  4080  009B                     	;# 
  4081  009C                     	;# 
  4082  009D                     	;# 
  4083  009E                     	;# 
  4084  009F                     	;# 
  4085  010C                     	;# 
  4086  010D                     	;# 
  4087  010E                     	;# 
  4088  0111                     	;# 
  4089  0112                     	;# 
  4090  0113                     	;# 
  4091  0114                     	;# 
  4092  0115                     	;# 
  4093  0116                     	;# 
  4094  0117                     	;# 
  4095  0118                     	;# 
  4096  0119                     	;# 
  4097  018C                     	;# 
  4098  018D                     	;# 
  4099  018E                     	;# 
  4100  0197                     	;# 
  4101  0199                     	;# 
  4102  0199                     	;# 
  4103  0199                     	;# 
  4104  019A                     	;# 
  4105  019A                     	;# 
  4106  019A                     	;# 
  4107  019B                     	;# 
  4108  019B                     	;# 
  4109  019B                     	;# 
  4110  019B                     	;# 
  4111  019B                     	;# 
  4112  019C                     	;# 
  4113  019C                     	;# 
  4114  019C                     	;# 
  4115  019D                     	;# 
  4116  019D                     	;# 
  4117  019D                     	;# 
  4118  019E                     	;# 
  4119  019E                     	;# 
  4120  019E                     	;# 
  4121  019F                     	;# 
  4122  019F                     	;# 
  4123  019F                     	;# 
  4124  019F                     	;# 
  4125  019F                     	;# 
  4126  020C                     	;# 
  4127  020D                     	;# 
  4128  020E                     	;# 
  4129  0211                     	;# 
  4130  0211                     	;# 
  4131  0212                     	;# 
  4132  0212                     	;# 
  4133  0213                     	;# 
  4134  0213                     	;# 
  4135  0214                     	;# 
  4136  0214                     	;# 
  4137  0215                     	;# 
  4138  0215                     	;# 
  4139  0215                     	;# 
  4140  0215                     	;# 
  4141  0216                     	;# 
  4142  0216                     	;# 
  4143  0217                     	;# 
  4144  0217                     	;# 
  4145  0219                     	;# 
  4146  021A                     	;# 
  4147  021B                     	;# 
  4148  021C                     	;# 
  4149  021D                     	;# 
  4150  021D                     	;# 
  4151  021E                     	;# 
  4152  021F                     	;# 
  4153  028C                     	;# 
  4154  028D                     	;# 
  4155  028E                     	;# 
  4156  0291                     	;# 
  4157  0291                     	;# 
  4158  0292                     	;# 
  4159  0293                     	;# 
  4160  0294                     	;# 
  4161  0295                     	;# 
  4162  0295                     	;# 
  4163  0296                     	;# 
  4164  0297                     	;# 
  4165  0298                     	;# 
  4166  029F                     	;# 
  4167  030C                     	;# 
  4168  030D                     	;# 
  4169  030E                     	;# 
  4170  0311                     	;# 
  4171  0311                     	;# 
  4172  0312                     	;# 
  4173  0313                     	;# 
  4174  0314                     	;# 
  4175  0315                     	;# 
  4176  0315                     	;# 
  4177  0316                     	;# 
  4178  0317                     	;# 
  4179  0318                     	;# 
  4180  038C                     	;# 
  4181  038D                     	;# 
  4182  038E                     	;# 
  4183  0391                     	;# 
  4184  0392                     	;# 
  4185  0393                     	;# 
  4186  0394                     	;# 
  4187  0395                     	;# 
  4188  0396                     	;# 
  4189  0397                     	;# 
  4190  0398                     	;# 
  4191  0399                     	;# 
  4192  039A                     	;# 
  4193  039C                     	;# 
  4194  039D                     	;# 
  4195  039E                     	;# 
  4196  039F                     	;# 
  4197  0411                     	;# 
  4198  0411                     	;# 
  4199  0412                     	;# 
  4200  0413                     	;# 
  4201  0414                     	;# 
  4202  0415                     	;# 
  4203  0416                     	;# 
  4204  0417                     	;# 
  4205  0418                     	;# 
  4206  0418                     	;# 
  4207  0419                     	;# 
  4208  041A                     	;# 
  4209  041B                     	;# 
  4210  041C                     	;# 
  4211  041D                     	;# 
  4212  041E                     	;# 
  4213  041F                     	;# 
  4214  0498                     	;# 
  4215  0498                     	;# 
  4216  0499                     	;# 
  4217  049A                     	;# 
  4218  049B                     	;# 
  4219  049B                     	;# 
  4220  049C                     	;# 
  4221  049D                     	;# 
  4222  049E                     	;# 
  4223  049F                     	;# 
  4224  0617                     	;# 
  4225  0618                     	;# 
  4226  0619                     	;# 
  4227  0619                     	;# 
  4228  061A                     	;# 
  4229  061B                     	;# 
  4230  061C                     	;# 
  4231  061C                     	;# 
  4232  061F                     	;# 
  4233  0691                     	;# 
  4234  0692                     	;# 
  4235  0693                     	;# 
  4236  0694                     	;# 
  4237  0695                     	;# 
  4238  0696                     	;# 
  4239  0697                     	;# 
  4240  0698                     	;# 
  4241  0699                     	;# 
  4242  0711                     	;# 
  4243  0712                     	;# 
  4244  0713                     	;# 
  4245  0714                     	;# 
  4246  0715                     	;# 
  4247  0716                     	;# 
  4248  0717                     	;# 
  4249  0718                     	;# 
  4250  0719                     	;# 
  4251  0891                     	;# 
  4252  0891                     	;# 
  4253  0891                     	;# 
  4254  0891                     	;# 
  4255  0891                     	;# 
  4256  0891                     	;# 
  4257  0892                     	;# 
  4258  0892                     	;# 
  4259  0892                     	;# 
  4260  0893                     	;# 
  4261  0893                     	;# 
  4262  0893                     	;# 
  4263  0893                     	;# 
  4264  0893                     	;# 
  4265  0893                     	;# 
  4266  0894                     	;# 
  4267  0894                     	;# 
  4268  0894                     	;# 
  4269  0895                     	;# 
  4270  0895                     	;# 
  4271  0895                     	;# 
  4272  0896                     	;# 
  4273  0896                     	;# 
  4274  0896                     	;# 
  4275  089B                     	;# 
  4276  0911                     	;# 
  4277  0912                     	;# 
  4278  0913                     	;# 
  4279  0914                     	;# 
  4280  0915                     	;# 
  4281  0916                     	;# 
  4282  0918                     	;# 
  4283  0919                     	;# 
  4284  091A                     	;# 
  4285  091B                     	;# 
  4286  091C                     	;# 
  4287  091D                     	;# 
  4288  091E                     	;# 
  4289  091F                     	;# 
  4290  0E0F                     	;# 
  4291  0E10                     	;# 
  4292  0E11                     	;# 
  4293  0E12                     	;# 
  4294  0E13                     	;# 
  4295  0E14                     	;# 
  4296  0E15                     	;# 
  4297  0E16                     	;# 
  4298  0E17                     	;# 
  4299  0E18                     	;# 
  4300  0E19                     	;# 
  4301  0E1A                     	;# 
  4302  0E1B                     	;# 
  4303  0E1C                     	;# 
  4304  0E1D                     	;# 
  4305  0E1E                     	;# 
  4306  0E1F                     	;# 
  4307  0E20                     	;# 
  4308  0E21                     	;# 
  4309  0E22                     	;# 
  4310  0E24                     	;# 
  4311  0E25                     	;# 
  4312  0E28                     	;# 
  4313  0E29                     	;# 
  4314  0E2A                     	;# 
  4315  0E2B                     	;# 
  4316  0E2C                     	;# 
  4317  0E2D                     	;# 
  4318  0E2E                     	;# 
  4319  0E2F                     	;# 
  4320  0E90                     	;# 
  4321  0E91                     	;# 
  4322  0E92                     	;# 
  4323  0E94                     	;# 
  4324  0E95                     	;# 
  4325  0E9C                     	;# 
  4326  0E9D                     	;# 
  4327  0E9E                     	;# 
  4328  0E9F                     	;# 
  4329  0EA0                     	;# 
  4330  0EA1                     	;# 
  4331  0EA2                     	;# 
  4332  0EA3                     	;# 
  4333  0EA4                     	;# 
  4334  0EA5                     	;# 
  4335  0EA6                     	;# 
  4336  0EA7                     	;# 
  4337  0F0F                     	;# 
  4338  0F10                     	;# 
  4339  0F11                     	;# 
  4340  0F12                     	;# 
  4341  0F13                     	;# 
  4342  0F14                     	;# 
  4343  0F15                     	;# 
  4344  0F16                     	;# 
  4345  0F17                     	;# 
  4346  0F18                     	;# 
  4347  0F19                     	;# 
  4348  0F1A                     	;# 
  4349  0F1B                     	;# 
  4350  0F1C                     	;# 
  4351  0F1D                     	;# 
  4352  0F1E                     	;# 
  4353  0F1F                     	;# 
  4354  0F20                     	;# 
  4355  0F21                     	;# 
  4356  0F22                     	;# 
  4357  0F23                     	;# 
  4358  0F24                     	;# 
  4359  0F25                     	;# 
  4360  0F26                     	;# 
  4361  0F27                     	;# 
  4362  0F28                     	;# 
  4363  0F29                     	;# 
  4364  0F2A                     	;# 
  4365  0F2B                     	;# 
  4366  0F2C                     	;# 
  4367  0F2D                     	;# 
  4368  0F2E                     	;# 
  4369  0F2F                     	;# 
  4370  0F30                     	;# 
  4371  0F31                     	;# 
  4372  0F32                     	;# 
  4373  0F33                     	;# 
  4374  0F34                     	;# 
  4375  0F35                     	;# 
  4376  0F36                     	;# 
  4377  0F37                     	;# 
  4378  0FE4                     	;# 
  4379  0FE5                     	;# 
  4380  0FE6                     	;# 
  4381  0FE7                     	;# 
  4382  0FE8                     	;# 
  4383  0FE9                     	;# 
  4384  0FEA                     	;# 
  4385  0FEB                     	;# 
  4386  0FED                     	;# 
  4387  0FEE                     	;# 
  4388  0FEF                     	;# 
  4389  0000                     	;# 
  4390  0001                     	;# 
  4391  0002                     	;# 
  4392  0003                     	;# 
  4393  0004                     	;# 
  4394  0005                     	;# 
  4395  0006                     	;# 
  4396  0007                     	;# 
  4397  0008                     	;# 
  4398  0009                     	;# 
  4399  000A                     	;# 
  4400  000B                     	;# 
  4401  000C                     	;# 
  4402  000D                     	;# 
  4403  000E                     	;# 
  4404  0010                     	;# 
  4405  0011                     	;# 
  4406  0012                     	;# 
  4407  0013                     	;# 
  4408  0014                     	;# 
  4409  0015                     	;# 
  4410  0015                     	;# 
  4411  0016                     	;# 
  4412  0016                     	;# 
  4413  0017                     	;# 
  4414  0018                     	;# 
  4415  0019                     	;# 
  4416  0019                     	;# 
  4417  001A                     	;# 
  4418  001B                     	;# 
  4419  001C                     	;# 
  4420  001D                     	;# 
  4421  001E                     	;# 
  4422  001F                     	;# 
  4423  008C                     	;# 
  4424  008D                     	;# 
  4425  008E                     	;# 
  4426  0090                     	;# 
  4427  0091                     	;# 
  4428  0092                     	;# 
  4429  0093                     	;# 
  4430  0094                     	;# 
  4431  0097                     	;# 
  4432  009B                     	;# 
  4433  009B                     	;# 
  4434  009C                     	;# 
  4435  009D                     	;# 
  4436  009E                     	;# 
  4437  009F                     	;# 
  4438  010C                     	;# 
  4439  010D                     	;# 
  4440  010E                     	;# 
  4441  0111                     	;# 
  4442  0112                     	;# 
  4443  0113                     	;# 
  4444  0114                     	;# 
  4445  0115                     	;# 
  4446  0116                     	;# 
  4447  0117                     	;# 
  4448  0118                     	;# 
  4449  0119                     	;# 
  4450  018C                     	;# 
  4451  018D                     	;# 
  4452  018E                     	;# 
  4453  0197                     	;# 
  4454  0199                     	;# 
  4455  0199                     	;# 
  4456  0199                     	;# 
  4457  019A                     	;# 
  4458  019A                     	;# 
  4459  019A                     	;# 
  4460  019B                     	;# 
  4461  019B                     	;# 
  4462  019B                     	;# 
  4463  019B                     	;# 
  4464  019B                     	;# 
  4465  019C                     	;# 
  4466  019C                     	;# 
  4467  019C                     	;# 
  4468  019D                     	;# 
  4469  019D                     	;# 
  4470  019D                     	;# 
  4471  019E                     	;# 
  4472  019E                     	;# 
  4473  019E                     	;# 
  4474  019F                     	;# 
  4475  019F                     	;# 
  4476  019F                     	;# 
  4477  019F                     	;# 
  4478  019F                     	;# 
  4479  020C                     	;# 
  4480  020D                     	;# 
  4481  020E                     	;# 
  4482  0211                     	;# 
  4483  0211                     	;# 
  4484  0212                     	;# 
  4485  0212                     	;# 
  4486  0213                     	;# 
  4487  0213                     	;# 
  4488  0214                     	;# 
  4489  0214                     	;# 
  4490  0215                     	;# 
  4491  0215                     	;# 
  4492  0215                     	;# 
  4493  0215                     	;# 
  4494  0216                     	;# 
  4495  0216                     	;# 
  4496  0217                     	;# 
  4497  0217                     	;# 
  4498  0219                     	;# 
  4499  021A                     	;# 
  4500  021B                     	;# 
  4501  021C                     	;# 
  4502  021D                     	;# 
  4503  021D                     	;# 
  4504  021E                     	;# 
  4505  021F                     	;# 
  4506  028C                     	;# 
  4507  028D                     	;# 
  4508  028E                     	;# 
  4509  0291                     	;# 
  4510  0291                     	;# 
  4511  0292                     	;# 
  4512  0293                     	;# 
  4513  0294                     	;# 
  4514  0295                     	;# 
  4515  0295                     	;# 
  4516  0296                     	;# 
  4517  0297                     	;# 
  4518  0298                     	;# 
  4519  029F                     	;# 
  4520  030C                     	;# 
  4521  030D                     	;# 
  4522  030E                     	;# 
  4523  0311                     	;# 
  4524  0311                     	;# 
  4525  0312                     	;# 
  4526  0313                     	;# 
  4527  0314                     	;# 
  4528  0315                     	;# 
  4529  0315                     	;# 
  4530  0316                     	;# 
  4531  0317                     	;# 
  4532  0318                     	;# 
  4533  038C                     	;# 
  4534  038D                     	;# 
  4535  038E                     	;# 
  4536  0391                     	;# 
  4537  0392                     	;# 
  4538  0393                     	;# 
  4539  0394                     	;# 
  4540  0395                     	;# 
  4541  0396                     	;# 
  4542  0397                     	;# 
  4543  0398                     	;# 
  4544  0399                     	;# 
  4545  039A                     	;# 
  4546  039C                     	;# 
  4547  039D                     	;# 
  4548  039E                     	;# 
  4549  039F                     	;# 
  4550  0411                     	;# 
  4551  0411                     	;# 
  4552  0412                     	;# 
  4553  0413                     	;# 
  4554  0414                     	;# 
  4555  0415                     	;# 
  4556  0416                     	;# 
  4557  0417                     	;# 
  4558  0418                     	;# 
  4559  0418                     	;# 
  4560  0419                     	;# 
  4561  041A                     	;# 
  4562  041B                     	;# 
  4563  041C                     	;# 
  4564  041D                     	;# 
  4565  041E                     	;# 
  4566  041F                     	;# 
  4567  0498                     	;# 
  4568  0498                     	;# 
  4569  0499                     	;# 
  4570  049A                     	;# 
  4571  049B                     	;# 
  4572  049B                     	;# 
  4573  049C                     	;# 
  4574  049D                     	;# 
  4575  049E                     	;# 
  4576  049F                     	;# 
  4577  0617                     	;# 
  4578  0618                     	;# 
  4579  0619                     	;# 
  4580  0619                     	;# 
  4581  061A                     	;# 
  4582  061B                     	;# 
  4583  061C                     	;# 
  4584  061C                     	;# 
  4585  061F                     	;# 
  4586  0691                     	;# 
  4587  0692                     	;# 
  4588  0693                     	;# 
  4589  0694                     	;# 
  4590  0695                     	;# 
  4591  0696                     	;# 
  4592  0697                     	;# 
  4593  0698                     	;# 
  4594  0699                     	;# 
  4595  0711                     	;# 
  4596  0712                     	;# 
  4597  0713                     	;# 
  4598  0714                     	;# 
  4599  0715                     	;# 
  4600  0716                     	;# 
  4601  0717                     	;# 
  4602  0718                     	;# 
  4603  0719                     	;# 
  4604  0891                     	;# 
  4605  0891                     	;# 
  4606  0891                     	;# 
  4607  0891                     	;# 
  4608  0891                     	;# 
  4609  0891                     	;# 
  4610  0892                     	;# 
  4611  0892                     	;# 
  4612  0892                     	;# 
  4613  0893                     	;# 
  4614  0893                     	;# 
  4615  0893                     	;# 
  4616  0893                     	;# 
  4617  0893                     	;# 
  4618  0893                     	;# 
  4619  0894                     	;# 
  4620  0894                     	;# 
  4621  0894                     	;# 
  4622  0895                     	;# 
  4623  0895                     	;# 
  4624  0895                     	;# 
  4625  0896                     	;# 
  4626  0896                     	;# 
  4627  0896                     	;# 
  4628  089B                     	;# 
  4629  0911                     	;# 
  4630  0912                     	;# 
  4631  0913                     	;# 
  4632  0914                     	;# 
  4633  0915                     	;# 
  4634  0916                     	;# 
  4635  0918                     	;# 
  4636  0919                     	;# 
  4637  091A                     	;# 
  4638  091B                     	;# 
  4639  091C                     	;# 
  4640  091D                     	;# 
  4641  091E                     	;# 
  4642  091F                     	;# 
  4643  0E0F                     	;# 
  4644  0E10                     	;# 
  4645  0E11                     	;# 
  4646  0E12                     	;# 
  4647  0E13                     	;# 
  4648  0E14                     	;# 
  4649  0E15                     	;# 
  4650  0E16                     	;# 
  4651  0E17                     	;# 
  4652  0E18                     	;# 
  4653  0E19                     	;# 
  4654  0E1A                     	;# 
  4655  0E1B                     	;# 
  4656  0E1C                     	;# 
  4657  0E1D                     	;# 
  4658  0E1E                     	;# 
  4659  0E1F                     	;# 
  4660  0E20                     	;# 
  4661  0E21                     	;# 
  4662  0E22                     	;# 
  4663  0E24                     	;# 
  4664  0E25                     	;# 
  4665  0E28                     	;# 
  4666  0E29                     	;# 
  4667  0E2A                     	;# 
  4668  0E2B                     	;# 
  4669  0E2C                     	;# 
  4670  0E2D                     	;# 
  4671  0E2E                     	;# 
  4672  0E2F                     	;# 
  4673  0E90                     	;# 
  4674  0E91                     	;# 
  4675  0E92                     	;# 
  4676  0E94                     	;# 
  4677  0E95                     	;# 
  4678  0E9C                     	;# 
  4679  0E9D                     	;# 
  4680  0E9E                     	;# 
  4681  0E9F                     	;# 
  4682  0EA0                     	;# 
  4683  0EA1                     	;# 
  4684  0EA2                     	;# 
  4685  0EA3                     	;# 
  4686  0EA4                     	;# 
  4687  0EA5                     	;# 
  4688  0EA6                     	;# 
  4689  0EA7                     	;# 
  4690  0F0F                     	;# 
  4691  0F10                     	;# 
  4692  0F11                     	;# 
  4693  0F12                     	;# 
  4694  0F13                     	;# 
  4695  0F14                     	;# 
  4696  0F15                     	;# 
  4697  0F16                     	;# 
  4698  0F17                     	;# 
  4699  0F18                     	;# 
  4700  0F19                     	;# 
  4701  0F1A                     	;# 
  4702  0F1B                     	;# 
  4703  0F1C                     	;# 
  4704  0F1D                     	;# 
  4705  0F1E                     	;# 
  4706  0F1F                     	;# 
  4707  0F20                     	;# 
  4708  0F21                     	;# 
  4709  0F22                     	;# 
  4710  0F23                     	;# 
  4711  0F24                     	;# 
  4712  0F25                     	;# 
  4713  0F26                     	;# 
  4714  0F27                     	;# 
  4715  0F28                     	;# 
  4716  0F29                     	;# 
  4717  0F2A                     	;# 
  4718  0F2B                     	;# 
  4719  0F2C                     	;# 
  4720  0F2D                     	;# 
  4721  0F2E                     	;# 
  4722  0F2F                     	;# 
  4723  0F30                     	;# 
  4724  0F31                     	;# 
  4725  0F32                     	;# 
  4726  0F33                     	;# 
  4727  0F34                     	;# 
  4728  0F35                     	;# 
  4729  0F36                     	;# 
  4730  0F37                     	;# 
  4731  0FE4                     	;# 
  4732  0FE5                     	;# 
  4733  0FE6                     	;# 
  4734  0FE7                     	;# 
  4735  0FE8                     	;# 
  4736  0FE9                     	;# 
  4737  0FEA                     	;# 
  4738  0FEB                     	;# 
  4739  0FED                     	;# 
  4740  0FEE                     	;# 
  4741  0FEF                     	;# 
  4742  0000                     	;# 
  4743  0001                     	;# 
  4744  0002                     	;# 
  4745  0003                     	;# 
  4746  0004                     	;# 
  4747  0005                     	;# 
  4748  0006                     	;# 
  4749  0007                     	;# 
  4750  0008                     	;# 
  4751  0009                     	;# 
  4752  000A                     	;# 
  4753  000B                     	;# 
  4754  000C                     	;# 
  4755  000D                     	;# 
  4756  000E                     	;# 
  4757  0010                     	;# 
  4758  0011                     	;# 
  4759  0012                     	;# 
  4760  0013                     	;# 
  4761  0014                     	;# 
  4762  0015                     	;# 
  4763  0015                     	;# 
  4764  0016                     	;# 
  4765  0016                     	;# 
  4766  0017                     	;# 
  4767  0018                     	;# 
  4768  0019                     	;# 
  4769  0019                     	;# 
  4770  001A                     	;# 
  4771  001B                     	;# 
  4772  001C                     	;# 
  4773  001D                     	;# 
  4774  001E                     	;# 
  4775  001F                     	;# 
  4776  008C                     	;# 
  4777  008D                     	;# 
  4778  008E                     	;# 
  4779  0090                     	;# 
  4780  0091                     	;# 
  4781  0092                     	;# 
  4782  0093                     	;# 
  4783  0094                     	;# 
  4784  0097                     	;# 
  4785  009B                     	;# 
  4786  009B                     	;# 
  4787  009C                     	;# 
  4788  009D                     	;# 
  4789  009E                     	;# 
  4790  009F                     	;# 
  4791  010C                     	;# 
  4792  010D                     	;# 
  4793  010E                     	;# 
  4794  0111                     	;# 
  4795  0112                     	;# 
  4796  0113                     	;# 
  4797  0114                     	;# 
  4798  0115                     	;# 
  4799  0116                     	;# 
  4800  0117                     	;# 
  4801  0118                     	;# 
  4802  0119                     	;# 
  4803  018C                     	;# 
  4804  018D                     	;# 
  4805  018E                     	;# 
  4806  0197                     	;# 
  4807  0199                     	;# 
  4808  0199                     	;# 
  4809  0199                     	;# 
  4810  019A                     	;# 
  4811  019A                     	;# 
  4812  019A                     	;# 
  4813  019B                     	;# 
  4814  019B                     	;# 
  4815  019B                     	;# 
  4816  019B                     	;# 
  4817  019B                     	;# 
  4818  019C                     	;# 
  4819  019C                     	;# 
  4820  019C                     	;# 
  4821  019D                     	;# 
  4822  019D                     	;# 
  4823  019D                     	;# 
  4824  019E                     	;# 
  4825  019E                     	;# 
  4826  019E                     	;# 
  4827  019F                     	;# 
  4828  019F                     	;# 
  4829  019F                     	;# 
  4830  019F                     	;# 
  4831  019F                     	;# 
  4832  020C                     	;# 
  4833  020D                     	;# 
  4834  020E                     	;# 
  4835  0211                     	;# 
  4836  0211                     	;# 
  4837  0212                     	;# 
  4838  0212                     	;# 
  4839  0213                     	;# 
  4840  0213                     	;# 
  4841  0214                     	;# 
  4842  0214                     	;# 
  4843  0215                     	;# 
  4844  0215                     	;# 
  4845  0215                     	;# 
  4846  0215                     	;# 
  4847  0216                     	;# 
  4848  0216                     	;# 
  4849  0217                     	;# 
  4850  0217                     	;# 
  4851  0219                     	;# 
  4852  021A                     	;# 
  4853  021B                     	;# 
  4854  021C                     	;# 
  4855  021D                     	;# 
  4856  021D                     	;# 
  4857  021E                     	;# 
  4858  021F                     	;# 
  4859  028C                     	;# 
  4860  028D                     	;# 
  4861  028E                     	;# 
  4862  0291                     	;# 
  4863  0291                     	;# 
  4864  0292                     	;# 
  4865  0293                     	;# 
  4866  0294                     	;# 
  4867  0295                     	;# 
  4868  0295                     	;# 
  4869  0296                     	;# 
  4870  0297                     	;# 
  4871  0298                     	;# 
  4872  029F                     	;# 
  4873  030C                     	;# 
  4874  030D                     	;# 
  4875  030E                     	;# 
  4876  0311                     	;# 
  4877  0311                     	;# 
  4878  0312                     	;# 
  4879  0313                     	;# 
  4880  0314                     	;# 
  4881  0315                     	;# 
  4882  0315                     	;# 
  4883  0316                     	;# 
  4884  0317                     	;# 
  4885  0318                     	;# 
  4886  038C                     	;# 
  4887  038D                     	;# 
  4888  038E                     	;# 
  4889  0391                     	;# 
  4890  0392                     	;# 
  4891  0393                     	;# 
  4892  0394                     	;# 
  4893  0395                     	;# 
  4894  0396                     	;# 
  4895  0397                     	;# 
  4896  0398                     	;# 
  4897  0399                     	;# 
  4898  039A                     	;# 
  4899  039C                     	;# 
  4900  039D                     	;# 
  4901  039E                     	;# 
  4902  039F                     	;# 
  4903  0411                     	;# 
  4904  0411                     	;# 
  4905  0412                     	;# 
  4906  0413                     	;# 
  4907  0414                     	;# 
  4908  0415                     	;# 
  4909  0416                     	;# 
  4910  0417                     	;# 
  4911  0418                     	;# 
  4912  0418                     	;# 
  4913  0419                     	;# 
  4914  041A                     	;# 
  4915  041B                     	;# 
  4916  041C                     	;# 
  4917  041D                     	;# 
  4918  041E                     	;# 
  4919  041F                     	;# 
  4920  0498                     	;# 
  4921  0498                     	;# 
  4922  0499                     	;# 
  4923  049A                     	;# 
  4924  049B                     	;# 
  4925  049B                     	;# 
  4926  049C                     	;# 
  4927  049D                     	;# 
  4928  049E                     	;# 
  4929  049F                     	;# 
  4930  0617                     	;# 
  4931  0618                     	;# 
  4932  0619                     	;# 
  4933  0619                     	;# 
  4934  061A                     	;# 
  4935  061B                     	;# 
  4936  061C                     	;# 
  4937  061C                     	;# 
  4938  061F                     	;# 
  4939  0691                     	;# 
  4940  0692                     	;# 
  4941  0693                     	;# 
  4942  0694                     	;# 
  4943  0695                     	;# 
  4944  0696                     	;# 
  4945  0697                     	;# 
  4946  0698                     	;# 
  4947  0699                     	;# 
  4948  0711                     	;# 
  4949  0712                     	;# 
  4950  0713                     	;# 
  4951  0714                     	;# 
  4952  0715                     	;# 
  4953  0716                     	;# 
  4954  0717                     	;# 
  4955  0718                     	;# 
  4956  0719                     	;# 
  4957  0891                     	;# 
  4958  0891                     	;# 
  4959  0891                     	;# 
  4960  0891                     	;# 
  4961  0891                     	;# 
  4962  0891                     	;# 
  4963  0892                     	;# 
  4964  0892                     	;# 
  4965  0892                     	;# 
  4966  0893                     	;# 
  4967  0893                     	;# 
  4968  0893                     	;# 
  4969  0893                     	;# 
  4970  0893                     	;# 
  4971  0893                     	;# 
  4972  0894                     	;# 
  4973  0894                     	;# 
  4974  0894                     	;# 
  4975  0895                     	;# 
  4976  0895                     	;# 
  4977  0895                     	;# 
  4978  0896                     	;# 
  4979  0896                     	;# 
  4980  0896                     	;# 
  4981  089B                     	;# 
  4982  0911                     	;# 
  4983  0912                     	;# 
  4984  0913                     	;# 
  4985  0914                     	;# 
  4986  0915                     	;# 
  4987  0916                     	;# 
  4988  0918                     	;# 
  4989  0919                     	;# 
  4990  091A                     	;# 
  4991  091B                     	;# 
  4992  091C                     	;# 
  4993  091D                     	;# 
  4994  091E                     	;# 
  4995  091F                     	;# 
  4996  0E0F                     	;# 
  4997  0E10                     	;# 
  4998  0E11                     	;# 
  4999  0E12                     	;# 
  5000  0E13                     	;# 
  5001  0E14                     	;# 
  5002  0E15                     	;# 
  5003  0E16                     	;# 
  5004  0E17                     	;# 
  5005  0E18                     	;# 
  5006  0E19                     	;# 
  5007  0E1A                     	;# 
  5008  0E1B                     	;# 
  5009  0E1C                     	;# 
  5010  0E1D                     	;# 
  5011  0E1E                     	;# 
  5012  0E1F                     	;# 
  5013  0E20                     	;# 
  5014  0E21                     	;# 
  5015  0E22                     	;# 
  5016  0E24                     	;# 
  5017  0E25                     	;# 
  5018  0E28                     	;# 
  5019  0E29                     	;# 
  5020  0E2A                     	;# 
  5021  0E2B                     	;# 
  5022  0E2C                     	;# 
  5023  0E2D                     	;# 
  5024  0E2E                     	;# 
  5025  0E2F                     	;# 
  5026  0E90                     	;# 
  5027  0E91                     	;# 
  5028  0E92                     	;# 
  5029  0E94                     	;# 
  5030  0E95                     	;# 
  5031  0E9C                     	;# 
  5032  0E9D                     	;# 
  5033  0E9E                     	;# 
  5034  0E9F                     	;# 
  5035  0EA0                     	;# 
  5036  0EA1                     	;# 
  5037  0EA2                     	;# 
  5038  0EA3                     	;# 
  5039  0EA4                     	;# 
  5040  0EA5                     	;# 
  5041  0EA6                     	;# 
  5042  0EA7                     	;# 
  5043  0F0F                     	;# 
  5044  0F10                     	;# 
  5045  0F11                     	;# 
  5046  0F12                     	;# 
  5047  0F13                     	;# 
  5048  0F14                     	;# 
  5049  0F15                     	;# 
  5050  0F16                     	;# 
  5051  0F17                     	;# 
  5052  0F18                     	;# 
  5053  0F19                     	;# 
  5054  0F1A                     	;# 
  5055  0F1B                     	;# 
  5056  0F1C                     	;# 
  5057  0F1D                     	;# 
  5058  0F1E                     	;# 
  5059  0F1F                     	;# 
  5060  0F20                     	;# 
  5061  0F21                     	;# 
  5062  0F22                     	;# 
  5063  0F23                     	;# 
  5064  0F24                     	;# 
  5065  0F25                     	;# 
  5066  0F26                     	;# 
  5067  0F27                     	;# 
  5068  0F28                     	;# 
  5069  0F29                     	;# 
  5070  0F2A                     	;# 
  5071  0F2B                     	;# 
  5072  0F2C                     	;# 
  5073  0F2D                     	;# 
  5074  0F2E                     	;# 
  5075  0F2F                     	;# 
  5076  0F30                     	;# 
  5077  0F31                     	;# 
  5078  0F32                     	;# 
  5079  0F33                     	;# 
  5080  0F34                     	;# 
  5081  0F35                     	;# 
  5082  0F36                     	;# 
  5083  0F37                     	;# 
  5084  0FE4                     	;# 
  5085  0FE5                     	;# 
  5086  0FE6                     	;# 
  5087  0FE7                     	;# 
  5088  0FE8                     	;# 
  5089  0FE9                     	;# 
  5090  0FEA                     	;# 
  5091  0FEB                     	;# 
  5092  0FED                     	;# 
  5093  0FEE                     	;# 
  5094  0FEF                     	;_spi1_send_buffer_data
  5095                           
  5096                           	psect	idataCOMMON
  5097  07FE                     __pidataCOMMON:	
  5098                           
  5099                           ;initializer for _SPI_OFFSET_BYTE
  5100  07FE  3401               	retlw	1
  5101                           
  5102                           	psect	idataBANK1
  5103  0D62                     __pidataBANK1:	
  5104                           
  5105                           ;initializer for _direction
  5106  0D62  3401               	retlw	1
  5107  0D63  3400               	retlw	0
  5108                           
  5109                           ;initializer for _linkAngle
  5110  0D64  3468               	retlw	104
  5111  0D65  3401               	retlw	1
  5112                           
  5113                           ;initializer for _st_dataLength
  5114  0D66  34FF               	retlw	255
  5115  0D67  34FF               	retlw	255
  5116                           
  5117                           	psect	stringtext1
  5118  1000                     __pstringtext1:	
  5119  1000                     _MACHINE_ID:	
  5120  1000  3401               	retlw	1
  5121  1001  3400               	retlw	0
  5122  1002                     __end_of_MACHINE_ID:	
  5123                           
  5124                           	psect	stringtext2
  5125  1002                     __pstringtext2:	
  5126  1002                     _VENDER_ID:	
  5127  1002  3401               	retlw	1
  5128  1003  3400               	retlw	0
  5129  1004                     __end_of_VENDER_ID:	
  5130                           
  5131                           	psect	bitnvCOMMON
  5132  03D8                     __pbitnvCOMMON:	
  5133  03D8                     _isEndPointTrig:	
  5134  03D8                     	ds	1
  5135  000E                     _PORTC	set	14
  5136  000D                     _PORTB	set	13
  5137  000C                     _PORTA	set	12
  5138  000B                     _INTCONbits	set	11
  5139  0010                     _PIR0bits	set	16
  5140  0011                     _PIR1bits	set	17
  5141  008E                     _TRISC	set	142
  5142  008D                     _TRISB	set	141
  5143  008C                     _TRISA	set	140
  5144  0091                     _PIE1bits	set	145
  5145  0090                     _PIE0bits	set	144
  5146  008E                     _TRISCbits	set	142
  5147  008D                     _TRISBbits	set	141
  5148  010C                     _LATAbits	set	268
  5149  018E                     _ANSELC	set	398
  5150  018D                     _ANSELB	set	397
  5151  018C                     _ANSELA	set	396
  5152  0214                     _SSP1STATbits	set	532
  5153  0215                     _SSP1CON1bits	set	533
  5154  0217                     _SSP1CON3bits	set	535
  5155  020C                     _WPUA	set	524
  5156  020D                     _WPUB	set	525
  5157  020E                     _WPUC	set	526
  5158  0211                     _SSP1BUF	set	529
  5159  0392                     _IOCANbits	set	914
  5160  0391                     _IOCAPbits	set	913
  5161  038C                     _INLVLAbits	set	908
  5162  038E                     _INLVLCbits	set	910
  5163  038D                     _INLVLBbits	set	909
  5164  0393                     _IOCAFbits	set	915
  5165  0894                     _NVMDATH	set	2196
  5166  0893                     _NVMDATL	set	2195
  5167  0892                     _NVMADRH	set	2194
  5168  0891                     _NVMADRL	set	2193
  5169  0895                     _NVMCON1bits	set	2197
  5170  44A8                     _RD	set	17576
  5171  091E                     _OSCTUNEbits	set	2334
  5172  091F                     _OSCFRQbits	set	2335
  5173  0E22                     _SSP1SSPPSbits	set	3618
  5174  0EA2                     _RC2PPS	set	3746
  5175                           
  5176                           ; #config settings
  5177  0000                     
  5178                           	psect	cinit
  5179  0049                     start_initialization:	
  5180  0049                     __initialization:		;BIGRAM
  5181                           
  5182                           ; Initialize objects allocated to COMMON
  5183  0049  3187  27FE  3180   	fcall	__pidataCOMMON	;fetch initializer
  5184  004C  00FD               	movwf	__pdataCOMMON& (0+127)
  5185                           
  5186                           ; Initialize objects allocated to BANK1
  5187  004D  3062               	movlw	low __pidataBANK1
  5188  004E  0084               	movwf	4
  5189  004F  308D               	movlw	(high __pidataBANK1)| (0+128)
  5190  0050  0085               	movwf	5
  5191  0051  0021               	movlb	1	; select bank1
  5192  0052  0012               	moviw fsr0++
  5193  0053  00DE               	movwf	__pdataBANK1& (0+127)
  5194  0054  0012               	moviw fsr0++
  5195  0055  00DF               	movwf	(__pdataBANK1+1)& (0+127)
  5196  0056  0012               	moviw fsr0++
  5197  0057  00E0               	movwf	(__pdataBANK1+2)& (0+127)
  5198  0058  0012               	moviw fsr0++
  5199  0059  00E1               	movwf	(__pdataBANK1+3)& (0+127)
  5200  005A  0012               	moviw fsr0++
  5201  005B  00E2               	movwf	(__pdataBANK1+4)& (0+127)
  5202  005C  0012               	moviw fsr0++
  5203  005D  00E3               	movwf	(__pdataBANK1+5)& (0+127)
  5204                           
  5205                           ; Clear objects allocated to BIGRAM
  5206  005E  30F0               	movlw	low (0+9456)
  5207  005F  0084               	movwf	4
  5208  0060  3024               	movlw	high (0+9456)
  5209  0061  0085               	movwf	5
  5210  0062  3000               	movlw	0
  5211  0063  00FE               	movwf	btemp
  5212  0064  3003               	movlw	3
  5213  0065  00FF               	movwf	btemp+1
  5214  0066  318D  258D  3180   	fcall	clear_ram0
  5215                           
  5216                           ; Clear objects allocated to BITCOMMON
  5217  0069  01F0               	clrf	(__pbitbssCOMMON/(0+8))& (0+127)
  5218  006A  01F1               	clrf	((__pbitbssCOMMON/(0+8)+1))& (0+127)
  5219                           
  5220                           ; Clear objects allocated to COMMON
  5221  006B  01FC               	clrf	__pbssCOMMON& (0+127)
  5222                           
  5223                           ; Clear objects allocated to BANK0
  5224  006C  3059               	movlw	low __pbssBANK0
  5225  006D  0084               	movwf	4
  5226  006E  3000               	movlw	high __pbssBANK0
  5227  006F  0085               	movwf	5
  5228  0070  3016               	movlw	22
  5229  0071  00FE               	movwf	btemp
  5230  0072  3000               	movlw	0
  5231  0073  00FF               	movwf	btemp+1
  5232  0074  318D  258D  3180   	fcall	clear_ram0
  5233                           
  5234                           ; Clear objects allocated to BANK1
  5235  0077  30A0               	movlw	low __pbssBANK1
  5236  0078  0084               	movwf	4
  5237  0079  3000               	movlw	high __pbssBANK1
  5238  007A  0085               	movwf	5
  5239  007B  303E               	movlw	62
  5240  007C  00FE               	movwf	btemp
  5241  007D  3000               	movlw	0
  5242  007E  00FF               	movwf	btemp+1
  5243  007F  318D  258D  3180   	fcall	clear_ram0
  5244                           
  5245                           ; Clear objects allocated to BANK2
  5246  0082  3020               	movlw	low __pbssBANK2
  5247  0083  0084               	movwf	4
  5248  0084  3001               	movlw	high __pbssBANK2
  5249  0085  0085               	movwf	5
  5250  0086  304A               	movlw	74
  5251  0087  00FE               	movwf	btemp
  5252  0088  3000               	movlw	0
  5253  0089  00FF               	movwf	btemp+1
  5254  008A  318D  258D  3180   	fcall	clear_ram0
  5255                           
  5256                           ; Clear objects allocated to BANK3
  5257  008D  30A0               	movlw	low __pbssBANK3
  5258  008E  0084               	movwf	4
  5259  008F  3001               	movlw	high __pbssBANK3
  5260  0090  0085               	movwf	5
  5261  0091  3012               	movlw	18
  5262  0092  00FE               	movwf	btemp
  5263  0093  3000               	movlw	0
  5264  0094  00FF               	movwf	btemp+1
  5265  0095  318D  258D         	fcall	clear_ram0
  5266  0097                     end_of_initialization:	
  5267                           ;End of C runtime variable initialization code
  5268                           
  5269  0097                     __end_of__initialization:	
  5270  0097  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  5271  0098  0020               	movlb	0
  5272  0099  318F  2F8D         	ljmp	_main	;jump to C main() function
  5273                           
  5274                           	psect	bitbssCOMMON
  5275  0380                     __pbitbssCOMMON:	
  5276  0380                     _isMyAddr:	
  5277  0380                     	ds	1
  5278  0381                     _isMycargo:	
  5279  0381                     	ds	1
  5280  0382                     _workingcounta3:	
  5281  0382                     	ds	1
  5282  0383                     _workingcounta2:	
  5283  0383                     	ds	1
  5284  0384                     _workingcounta1:	
  5285  0384                     	ds	1
  5286  0385                     _workingcounta0:	
  5287  0385                     	ds	1
  5288  0386                     _isSendSPI2:	
  5289  0386                     	ds	1
  5290  0387                     _ra3condision:	
  5291  0387                     	ds	1
  5292  0388                     _isreadTrain:	
  5293  0388                     	ds	1
  5294  0389                     _isCalibrated:	
  5295  0389                     	ds	1
  5296                           
  5297                           	psect	bssCOMMON
  5298  007C                     __pbssCOMMON:	
  5299  007C                     _spi1_Read_data:	
  5300  007C                     	ds	1
  5301                           
  5302                           	psect	dataCOMMON
  5303  007D                     __pdataCOMMON:	
  5304  007D                     _SPI_OFFSET_BYTE:	
  5305  007D                     	ds	1
  5306                           
  5307                           	psect	bssBANK0
  5308  0059                     __pbssBANK0:	
  5309  0059                     _cargoData:	
  5310  0059                     	ds	16
  5311  0069                     _countabuf:	
  5312  0069                     	ds	2
  5313  006B                     _count2:	
  5314  006B                     	ds	2
  5315  006D                     _st_type:	
  5316  006D                     	ds	1
  5317  006E                     _spi2_Send_data:	
  5318  006E                     	ds	1
  5319                           
  5320                           	psect	bssBANK1
  5321  00A0                     __pbssBANK1:	
  5322  00A0                     _command:	
  5323  00A0                     	ds	18
  5324  00B2                     _calibdata:	
  5325  00B2                     	ds	9
  5326  00BB                     _linkInfo:	
  5327  00BB                     	ds	6
  5328  00C1                     _startTrainBytes:	
  5329  00C1                     	ds	4
  5330  00C5                     _SIZE_COUNT:	
  5331  00C5                     	ds	2
  5332  00C7                     _EEPROM_ADDR_buf:	
  5333  00C7                     	ds	2
  5334  00C9                     _RaadData:	
  5335  00C9                     	ds	2
  5336  00CB                     _send_count1:	
  5337  00CB                     	ds	2
  5338  00CD                     _spi1_send_count:	
  5339  00CD                     	ds	2
  5340  00CF                     _read_count2:	
  5341  00CF                     	ds	2
  5342  00D1                     _counta2:	
  5343  00D1                     	ds	2
  5344  00D3                     _trainPos:	
  5345  00D3                     	ds	2
  5346  00D5                     _read_count1:	
  5347  00D5                     	ds	2
  5348  00D7                     _count1:	
  5349  00D7                     	ds	2
  5350  00D9                     _readNG:	
  5351  00D9                     	ds	1
  5352  00DA                     _readOK:	
  5353  00DA                     	ds	1
  5354  00DB                     _spi2_Read_data:	
  5355  00DB                     	ds	1
  5356  00DC                     _send_data:	
  5357  00DC                     	ds	1
  5358  00DD                     _eeprom_address:	
  5359  00DD                     	ds	1
  5360                           
  5361                           	psect	dataBANK1
  5362  00DE                     __pdataBANK1:	
  5363  00DE                     _direction:	
  5364  00DE                     	ds	2
  5365  00E0                     _linkAngle:	
  5366  00E0                     	ds	2
  5367  00E2                     _st_dataLength:	
  5368  00E2                     	ds	2
  5369                           
  5370                           	psect	bssBANK2
  5371  0120                     __pbssBANK2:	
  5372  0120                     _position:	
  5373  0120                     	ds	20
  5374  0134                     _cargo_index:	
  5375  0134                     	ds	18
  5376  0146                     _IOCode:	
  5377  0146                     	ds	18
  5378  0158                     _comu_types:	
  5379  0158                     	ds	18
  5380                           
  5381                           	psect	bssBANK3
  5382  01A0                     __pbssBANK3:	
  5383  01A0                     _index:	
  5384  01A0                     	ds	18
  5385                           
  5386                           	psect	clrtext
  5387  0D8D                     clear_ram0:	
  5388                           ;	Called with FSR0 containing the base address, and
  5389                           ;	btemp/btemp+1 has the size to clear
  5390                           
  5391  0D8D  0064               	clrwdt	;clear the watchdog before getting into this loop
  5392  0D8E                     clrloop0:	
  5393  0D8E  0180               	clrf	0	;clear RAM location pointed to by FSR
  5394  0D8F  3101               	addfsr 0,1
  5395  0D90  3001               	movlw	1
  5396  0D91  02FE               	subwf	126,f
  5397  0D92  3000               	movlw	0
  5398  0D93  3BFF               	subwfb	127,f
  5399  0D94  087F               	movf	127,w
  5400  0D95  047E               	iorwf	126,w
  5401  0D96  1903               	btfsc	3,2
  5402  0D97  3400               	retlw	0	;all done for this memory range, return
  5403  0D98  2D8E               	goto	clrloop0	;have we reached the end yet?
  5404                           
  5405                           	psect	cstackBANK1
  5406  00E4                     __pcstackBANK1:	
  5407  00E4                     setComunicateMode@m_type:	
  5408                           
  5409                           ; 1 bytes @ 0x0
  5410  00E4                     	ds	1
  5411  00E5                     setComunicateMode@i:	
  5412                           
  5413                           ; 2 bytes @ 0x1
  5414  00E5                     	ds	2
  5415                           
  5416                           	psect	cstackCOMMON
  5417  0072                     __pcstackCOMMON:	
  5418  0072                     ?_isTrainSt:	
  5419  0072                     ?_isSPI1read:	
  5420                           ; 1 bit 
  5421                           
  5422  0072                     ?_setComunicateMode:	
  5423                           ; 1 bit 
  5424                           
  5425  0072                     ?_setIndexMode:	
  5426                           ; 1 bit 
  5427                           
  5428  0072                     ?_isSPI2read:	
  5429                           ; 1 bit 
  5430                           
  5431  0072                     ?_clutchaction:	
  5432                           ; 1 bit 
  5433                           
  5434  0072                     ?_isEndpoint:	
  5435                           ; 1 bit 
  5436                           
  5437  0072                     ?_setSPI1sendData:	
  5438                           ; 1 bit 
  5439                           
  5440  0072                     ??_setSPI1sendData:	
  5441                           ; 1 bytes @ 0x0
  5442                           
  5443  0072                     ?_addAngle:	
  5444                           ; 1 bytes @ 0x0
  5445                           
  5446  0072                     ?_clear:	
  5447                           ; 1 bytes @ 0x0
  5448                           
  5449  0072                     ?_resetTrainData:	
  5450                           ; 1 bytes @ 0x0
  5451                           
  5452  0072                     ?_initComand:	
  5453                           ; 1 bytes @ 0x0
  5454                           
  5455  0072                     ?_initIndex:	
  5456                           ; 1 bytes @ 0x0
  5457                           
  5458  0072                     ?_initComu_types:	
  5459                           ; 1 bytes @ 0x0
  5460                           
  5461  0072                     ?_InitCalibrate:	
  5462                           ; 1 bytes @ 0x0
  5463                           
  5464  0072                     ?_spi_init:	
  5465                           ; 1 bytes @ 0x0
  5466                           
  5467  0072                     ?_initCargo:	
  5468                           ; 1 bytes @ 0x0
  5469                           
  5470  0072                     ?_initPosition:	
  5471                           ; 1 bytes @ 0x0
  5472                           
  5473  0072                     ?_read_train:	
  5474                           ; 1 bytes @ 0x0
  5475                           
  5476  0072                     ?_setSPI2sendData:	
  5477                           ; 1 bytes @ 0x0
  5478                           
  5479  0072                     ?_restartCargo:	
  5480                           ; 1 bytes @ 0x0
  5481                           
  5482  0072                     ?_spi1_init:	
  5483                           ; 1 bytes @ 0x0
  5484                           
  5485  0072                     ?_setMoter_lotate:	
  5486                           ; 1 bytes @ 0x0
  5487                           
  5488  0072                     ?_resetCargo:	
  5489                           ; 1 bytes @ 0x0
  5490                           
  5491  0072                     ?_readCargo:	
  5492                           ; 1 bytes @ 0x0
  5493                           
  5494  0072                     ?_EEPROM_download:	
  5495                           ; 1 bytes @ 0x0
  5496                           
  5497  0072                     ?_setCargoAngle:	
  5498                           ; 1 bytes @ 0x0
  5499                           
  5500  0072                     ?_InterMSSP:	
  5501                           ; 1 bytes @ 0x0
  5502                           
  5503  0072                     ?_initbuffer:	
  5504                           ; 1 bytes @ 0x0
  5505                           
  5506  0072                     ?_init:	
  5507                           ; 1 bytes @ 0x0
  5508                           
  5509  0072                     ?_io_init:	
  5510                           ; 1 bytes @ 0x0
  5511                           
  5512  0072                     ?_initTrain:	
  5513                           ; 1 bytes @ 0x0
  5514                           
  5515  0072                     ?_main:	
  5516                           ; 1 bytes @ 0x0
  5517                           
  5518  0072                     ??_isSPI2read:	
  5519                           ; 1 bytes @ 0x0
  5520                           
  5521  0072                     ?_setSPI1sendDataManual:	
  5522                           ; 1 bytes @ 0x0
  5523                           
  5524  0072                     ?_Calibrate_download:	
  5525                           ; 1 bytes @ 0x0
  5526                           
  5527  0072                     ?_getMoter_lotate:	
  5528                           ; 1 bytes @ 0x0
  5529                           
  5530  0072                     setCargoAngle@m_linkAngleTo:	
  5531                           ; 2 bytes @ 0x0
  5532                           
  5533                           
  5534                           ; 2 bytes @ 0x0
  5535  0072                     	ds	2
  5536  0074                     ??_addAngle:	
  5537  0074                     ??_getMoter_lotate:	
  5538                           ; 1 bytes @ 0x2
  5539                           
  5540  0074                     ??_setCargoAngle:	
  5541                           ; 1 bytes @ 0x2
  5542                           
  5543  0074                     ??_InterMSSP:	
  5544                           ; 1 bytes @ 0x2
  5545                           
  5546                           
  5547                           ; 1 bytes @ 0x2
  5548  0074                     	ds	6
  5549  007A                     InterMSSP@buf:	
  5550                           
  5551                           ; 1 bytes @ 0x8
  5552  007A                     	ds	1
  5553                           
  5554                           	psect	cstackBANK0
  5555  0020                     __pcstackBANK0:	
  5556  0020                     ??_clear:	
  5557  0020                     ??_isTrainSt:	
  5558                           ; 1 bytes @ 0x0
  5559                           
  5560  0020                     ??_resetTrainData:	
  5561                           ; 1 bytes @ 0x0
  5562                           
  5563  0020                     ??_initComand:	
  5564                           ; 1 bytes @ 0x0
  5565                           
  5566  0020                     ??_initIndex:	
  5567                           ; 1 bytes @ 0x0
  5568                           
  5569  0020                     ??_initComu_types:	
  5570                           ; 1 bytes @ 0x0
  5571                           
  5572  0020                     ??_initCargo:	
  5573                           ; 1 bytes @ 0x0
  5574                           
  5575  0020                     ??_initPosition:	
  5576                           ; 1 bytes @ 0x0
  5577                           
  5578  0020                     ??_isSPI1read:	
  5579                           ; 1 bytes @ 0x0
  5580                           
  5581  0020                     ??_read_train:	
  5582                           ; 1 bytes @ 0x0
  5583                           
  5584  0020                     ??_setSPI2sendData:	
  5585                           ; 1 bytes @ 0x0
  5586                           
  5587  0020                     ??_restartCargo:	
  5588                           ; 1 bytes @ 0x0
  5589                           
  5590  0020                     ??_spi1_init:	
  5591                           ; 1 bytes @ 0x0
  5592                           
  5593  0020                     ??_setMoter_lotate:	
  5594                           ; 1 bytes @ 0x0
  5595                           
  5596  0020                     ??_resetCargo:	
  5597                           ; 1 bytes @ 0x0
  5598                           
  5599  0020                     ??_initbuffer:	
  5600                           ; 1 bytes @ 0x0
  5601                           
  5602  0020                     ??_io_init:	
  5603                           ; 1 bytes @ 0x0
  5604                           
  5605  0020                     ??_setSPI1sendDataManual:	
  5606                           ; 1 bytes @ 0x0
  5607                           
  5608  0020                     ??_clutchaction:	
  5609                           ; 1 bytes @ 0x0
  5610                           
  5611  0020                     ?_ReadEEPROM:	
  5612                           ; 1 bytes @ 0x0
  5613                           
  5614  0020                     ?___lmul:	
  5615                           ; 1 bytes @ 0x0
  5616                           
  5617  0020                     ?___aldiv:	
  5618                           ; 4 bytes @ 0x0
  5619                           
  5620  0020                     ?___almod:	
  5621                           ; 4 bytes @ 0x0
  5622                           
  5623  0020                     ?_getCargoData:	
  5624                           ; 4 bytes @ 0x0
  5625                           
  5626  0020                     setSPI1sendDataManual@data:	
  5627                           ; 16 bytes @ 0x0
  5628                           
  5629  0020                     clutchaction@comannd:	
  5630                           ; 1 bytes @ 0x0
  5631                           
  5632  0020                     setMoter_lotate@lotate:	
  5633                           ; 1 bytes @ 0x0
  5634                           
  5635  0020                     ReadEEPROM@addr:	
  5636                           ; 1 bytes @ 0x0
  5637                           
  5638  0020                     ___lmul@multiplier:	
  5639                           ; 2 bytes @ 0x0
  5640                           
  5641  0020                     ___aldiv@divisor:	
  5642                           ; 4 bytes @ 0x0
  5643                           
  5644  0020                     ___almod@divisor:	
  5645                           ; 4 bytes @ 0x0
  5646                           
  5647                           
  5648                           ; 4 bytes @ 0x0
  5649  0020                     	ds	1
  5650  0021                     ??_setIndexMode:	
  5651  0021                     ??_isEndpoint:	
  5652                           ; 1 bytes @ 0x1
  5653                           
  5654  0021                     spi1_init@dummy:	
  5655                           ; 1 bytes @ 0x1
  5656                           
  5657                           
  5658                           ; 1 bytes @ 0x1
  5659  0021                     	ds	1
  5660  0022                     ??_spi_init:	
  5661  0022                     ??_ReadEEPROM:	
  5662                           ; 1 bytes @ 0x2
  5663                           
  5664  0022                     setIndexMode@m_index:	
  5665                           ; 1 bytes @ 0x2
  5666                           
  5667  0022                     initbuffer@i:	
  5668                           ; 1 bytes @ 0x2
  5669                           
  5670  0022                     read_train@bufint:	
  5671                           ; 2 bytes @ 0x2
  5672                           
  5673                           
  5674                           ; 2 bytes @ 0x2
  5675  0022                     	ds	1
  5676  0023                     ReadEEPROM@Hiadr:	
  5677  0023                     setIndexMode@i:	
  5678                           ; 1 bytes @ 0x3
  5679                           
  5680                           
  5681                           ; 2 bytes @ 0x3
  5682  0023                     	ds	1
  5683  0024                     ??_init:	
  5684  0024                     ReadEEPROM@Loadr:	
  5685                           ; 1 bytes @ 0x4
  5686                           
  5687  0024                     ___lmul@multiplicand:	
  5688                           ; 1 bytes @ 0x4
  5689                           
  5690  0024                     ___aldiv@dividend:	
  5691                           ; 4 bytes @ 0x4
  5692                           
  5693  0024                     ___almod@dividend:	
  5694                           ; 4 bytes @ 0x4
  5695                           
  5696                           
  5697                           ; 4 bytes @ 0x4
  5698  0024                     	ds	2
  5699  0026                     isEndpoint@spi2data:	
  5700                           
  5701                           ; 1 bytes @ 0x6
  5702  0026                     	ds	2
  5703  0028                     ??___lmul:	
  5704  0028                     ??___aldiv:	
  5705                           ; 1 bytes @ 0x8
  5706                           
  5707  0028                     ??___almod:	
  5708                           ; 1 bytes @ 0x8
  5709                           
  5710  0028                     ___lmul@product:	
  5711                           ; 1 bytes @ 0x8
  5712                           
  5713                           
  5714                           ; 4 bytes @ 0x8
  5715  0028                     	ds	1
  5716  0029                     ___aldiv@counter:	
  5717  0029                     ___almod@counter:	
  5718                           ; 1 bytes @ 0x9
  5719                           
  5720                           
  5721                           ; 1 bytes @ 0x9
  5722  0029                     	ds	1
  5723  002A                     isTrainSt@buf:	
  5724  002A                     ___aldiv@sign:	
  5725                           ; 1 bytes @ 0xA
  5726                           
  5727  002A                     ___almod@sign:	
  5728                           ; 1 bytes @ 0xA
  5729                           
  5730                           
  5731                           ; 1 bytes @ 0xA
  5732  002A                     	ds	1
  5733  002B                     ??_initTrain:	
  5734  002B                     ___aldiv@quotient:	
  5735                           ; 1 bytes @ 0xB
  5736                           
  5737                           
  5738                           ; 4 bytes @ 0xB
  5739  002B                     	ds	4
  5740  002F                     ?_TransLong256To255:	
  5741  002F                     TransLong256To255@data:	
  5742                           ; 4 bytes @ 0xF
  5743                           
  5744                           
  5745                           ; 4 bytes @ 0xF
  5746  002F                     	ds	1
  5747  0030                     ??_getCargoData:	
  5748                           
  5749                           ; 1 bytes @ 0x10
  5750  0030                     	ds	1
  5751  0031                     ??_InitCalibrate:	
  5752  0031                     ??_EEPROM_download:	
  5753                           ; 1 bytes @ 0x11
  5754                           
  5755                           
  5756                           ; 1 bytes @ 0x11
  5757  0031                     	ds	1
  5758  0032                     InitCalibrate@cargoData:	
  5759                           
  5760                           ; 16 bytes @ 0x12
  5761  0032                     	ds	1
  5762  0033                     ??_TransLong256To255:	
  5763                           
  5764                           ; 1 bytes @ 0x13
  5765  0033                     	ds	2
  5766  0035                     EEPROM_download@buflong:	
  5767                           
  5768                           ; 4 bytes @ 0x15
  5769  0035                     	ds	2
  5770  0037                     TransLong256To255@TransData:	
  5771                           
  5772                           ; 4 bytes @ 0x17
  5773  0037                     	ds	2
  5774  0039                     EEPROM_download@bufint:	
  5775                           
  5776                           ; 2 bytes @ 0x19
  5777  0039                     	ds	2
  5778  003B                     EEPROM_download@spi1_Read_data:	
  5779  003B                     TransLong256To255@j:	
  5780                           ; 1 bytes @ 0x1B
  5781                           
  5782                           
  5783                           ; 2 bytes @ 0x1B
  5784  003B                     	ds	2
  5785  003D                     TransLong256To255@mod:	
  5786                           
  5787                           ; 4 bytes @ 0x1D
  5788  003D                     	ds	4
  5789  0041                     TransLong256To255@pow:	
  5790                           
  5791                           ; 4 bytes @ 0x21
  5792  0041                     	ds	4
  5793  0045                     TransLong256To255@i:	
  5794                           
  5795                           ; 2 bytes @ 0x25
  5796  0045                     	ds	2
  5797  0047                     TransLong256To255@buf:	
  5798                           
  5799                           ; 4 bytes @ 0x27
  5800  0047                     	ds	4
  5801  004B                     ??_readCargo:	
  5802  004B                     ??_Calibrate_download:	
  5803                           ; 1 bytes @ 0x2B
  5804                           
  5805                           
  5806                           ; 1 bytes @ 0x2B
  5807  004B                     	ds	6
  5808  0051                     Calibrate_download@buflong:	
  5809  0051                     readCargo@buflong:	
  5810                           ; 4 bytes @ 0x31
  5811                           
  5812                           
  5813                           ; 4 bytes @ 0x31
  5814  0051                     	ds	4
  5815  0055                     Calibrate_download@bufint:	
  5816  0055                     readCargo@bufint:	
  5817                           ; 2 bytes @ 0x35
  5818                           
  5819                           
  5820                           ; 2 bytes @ 0x35
  5821  0055                     	ds	2
  5822  0057                     Calibrate_download@spi_Read_data:	
  5823  0057                     readCargo@spi1_Read_data:	
  5824                           ; 1 bytes @ 0x37
  5825                           
  5826                           
  5827                           ; 1 bytes @ 0x37
  5828  0057                     	ds	1
  5829  0058                     ??_setComunicateMode:	
  5830                           
  5831                           ; 1 bytes @ 0x38
  5832  0058                     	ds	1
  5833  0059                     ??_main:	
  5834                           
  5835                           	psect	maintext
  5836  0F8D                     __pmaintext:	
  5837                           ; 1 bytes @ 0x39
  5838 ;;
  5839 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  5840 ;;
  5841 ;; *************** function _main *****************
  5842 ;; Defined at:
  5843 ;;		line 162 in file "D:/programdata/16F18346_Link_IC.X/main.c"
  5844 ;; Parameters:    Size  Location     Type
  5845 ;;		None
  5846 ;; Auto vars:     Size  Location     Type
  5847 ;;		None
  5848 ;; Return value:  Size  Location     Type
  5849 ;;                  1    wreg      void 
  5850 ;; Registers used:
  5851 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5852 ;; Tracked objects:
  5853 ;;		On entry : B1F/0
  5854 ;;		On exit  : 0/0
  5855 ;;		Unchanged: 0/0
  5856 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5857 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5858 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5859 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5860 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5861 ;;Total ram usage:        0 bytes
  5862 ;; Hardware stack levels required when called:    7
  5863 ;; This function calls:
  5864 ;;		_InitCalibrate
  5865 ;;		_init
  5866 ;;		_initCargo
  5867 ;;		_initComand
  5868 ;;		_initComu_types
  5869 ;;		_initIndex
  5870 ;;		_initPosition
  5871 ;;		_initTrain
  5872 ;;		_io_init
  5873 ;;		_isSPI1read
  5874 ;;		_read_train
  5875 ;;		_setComunicateMode
  5876 ;;		_setSPI2sendData
  5877 ;;		_spi_init
  5878 ;; This function is called by:
  5879 ;;		Startup code after reset
  5880 ;; This function uses a non-reentrant model
  5881 ;;
  5882                           
  5883                           
  5884                           ;psect for function _main
  5885  0F8D                     _main:	
  5886                           
  5887                           ;main.c: 163: initComand();
  5888                           
  5889                           ;incstack = 0
  5890                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5891  0F8D  3186  2646  318F   	fcall	_initComand
  5892                           
  5893                           ;main.c: 164: initIndex();
  5894  0F90  3185  256C  318F   	fcall	_initIndex
  5895                           
  5896                           ;main.c: 165: initComu_types();
  5897  0F93  3185  25D9  318F   	fcall	_initComu_types
  5898                           
  5899                           ;main.c: 166: InitCalibrate();
  5900  0F96  318F  2733  318F   	fcall	_InitCalibrate
  5901                           
  5902                           ;main.c: 167: init();
  5903  0F99  318E  26E0  318F   	fcall	_init
  5904                           
  5905                           ;main.c: 168: io_init();
  5906  0F9C  318D  256F  318F   	fcall	_io_init
  5907                           
  5908                           ;main.c: 169: spi_init();
  5909  0F9F  318D  2568  318F   	fcall	_spi_init
  5910                           
  5911                           ;main.c: 170: initCargo();
  5912  0FA2  318D  25FA  318F   	fcall	_initCargo
  5913                           
  5914                           ;main.c: 171: initPosition();
  5915  0FA5  318E  26B8  318F   	fcall	_initPosition
  5916                           
  5917                           ;main.c: 172: LATAbits.LATA0 = 1;
  5918  0FA8  0022               	movlb	2	; select bank2
  5919  0FA9  140C               	bsf	12,0	;volatile
  5920  0FAA                     l3957:	
  5921                           ;main.c: 173: while(1){
  5922                           
  5923                           
  5924                           ;main.c: 174: if(!isSPI1read()){
  5925  0FAA  318D  25A6  318F   	fcall	_isSPI1read
  5926  0FAD  1803               	btfsc	3,0
  5927  0FAE  2FAA               	goto	l3957
  5928                           
  5929                           ;main.c: 175: initTrain();
  5930  0FAF  3187  2701  318F   	fcall	_initTrain
  5931                           
  5932                           ;main.c: 176: if(isreadTrain){
  5933  0FB2  1C71               	btfss	_isreadTrain/(0+8),_isreadTrain& (0+7)
  5934  0FB3  2FBA               	goto	l3965
  5935                           
  5936                           ;main.c: 177: setComunicateMode(st_type);
  5937  0FB4  0020               	movlb	0	; select bank0
  5938  0FB5  086D               	movf	_st_type,w
  5939  0FB6  318F  27C1  318F   	fcall	_setComunicateMode
  5940                           
  5941                           ;main.c: 178: }else{
  5942  0FB9  2FBD               	goto	l3967
  5943  0FBA                     l3965:	
  5944                           
  5945                           ;main.c: 179: read_train();
  5946  0FBA  3187  274B  318F   	fcall	_read_train
  5947  0FBD                     l3967:	
  5948                           
  5949                           ;main.c: 180: }
  5950                           ;main.c: 181: setSPI2sendData();
  5951  0FBD  318E  2652  318F   	fcall	_setSPI2sendData
  5952  0FC0  2FAA               	goto	l3957
  5953  0FC1                     __end_of_main:	
  5954                           ;main.c: 182: }
  5955                           ;main.c: 183: };
  5956                           ;main.c: 184: return;
  5957                           
  5958                           
  5959                           	psect	text1
  5960  0D68                     __ptext1:	
  5961 ;; *************** function _spi_init *****************
  5962 ;; Defined at:
  5963 ;;		line 21 in file "D:/programdata/16F18346_Link_IC.X/spiControl.c"
  5964 ;; Parameters:    Size  Location     Type
  5965 ;;		None
  5966 ;; Auto vars:     Size  Location     Type
  5967 ;;		None
  5968 ;; Return value:  Size  Location     Type
  5969 ;;                  1    wreg      void 
  5970 ;; Registers used:
  5971 ;;		wreg, status,2, status,0, pclath, cstack
  5972 ;; Tracked objects:
  5973 ;;		On entry : 0/0
  5974 ;;		On exit  : 0/0
  5975 ;;		Unchanged: 0/0
  5976 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5977 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5978 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5979 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5980 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5981 ;;Total ram usage:        0 bytes
  5982 ;; Hardware stack levels used:    1
  5983 ;; Hardware stack levels required when called:    4
  5984 ;; This function calls:
  5985 ;;		_spi1_init
  5986 ;; This function is called by:
  5987 ;;		_main
  5988 ;; This function uses a non-reentrant model
  5989 ;;
  5990                           
  5991                           
  5992                           ;psect for function _spi_init
  5993  0D68                     _spi_init:	
  5994                           
  5995                           ;spiControl.c: 22: INTCONbits.PEIE = 0;
  5996                           
  5997                           ;incstack = 0
  5998                           ; Regs used in _spi_init: [wreg+status,2+status,0+pclath+cstack]
  5999  0D68  130B               	bcf	11,6	;volatile
  6000                           
  6001                           ;spiControl.c: 23: INTCONbits.GIE = 0;
  6002  0D69  138B               	bcf	11,7	;volatile
  6003                           
  6004                           ;spiControl.c: 24: spi1_init();
  6005  0D6A  318E  2632         	fcall	_spi1_init
  6006                           
  6007                           ;spiControl.c: 26: INTCONbits.PEIE = 1;
  6008  0D6C  170B               	bsf	11,6	;volatile
  6009                           
  6010                           ;spiControl.c: 27: INTCONbits.GIE = 1;
  6011  0D6D  178B               	bsf	11,7	;volatile
  6012  0D6E  0008               	return
  6013  0D6F                     __end_of_spi_init:	
  6014                           
  6015                           	psect	text2
  6016  0E32                     __ptext2:	
  6017 ;; *************** function _spi1_init *****************
  6018 ;; Defined at:
  6019 ;;		line 32 in file "D:/programdata/16F18346_Link_IC.X/spiControl.c"
  6020 ;; Parameters:    Size  Location     Type
  6021 ;;		None
  6022 ;; Auto vars:     Size  Location     Type
  6023 ;;  dummy           1    1[BANK0 ] unsigned char 
  6024 ;; Return value:  Size  Location     Type
  6025 ;;                  1    wreg      void 
  6026 ;; Registers used:
  6027 ;;		wreg, status,2, status,0
  6028 ;; Tracked objects:
  6029 ;;		On entry : 0/0
  6030 ;;		On exit  : 0/0
  6031 ;;		Unchanged: 0/0
  6032 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6033 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6034 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6035 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6036 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6037 ;;Total ram usage:        2 bytes
  6038 ;; Hardware stack levels used:    1
  6039 ;; Hardware stack levels required when called:    3
  6040 ;; This function calls:
  6041 ;;		Nothing
  6042 ;; This function is called by:
  6043 ;;		_spi_init
  6044 ;; This function uses a non-reentrant model
  6045 ;;
  6046                           
  6047                           
  6048                           ;psect for function _spi1_init
  6049  0E32                     _spi1_init:	
  6050                           
  6051                           ;spiControl.c: 33: unsigned char dummy;
  6052                           ;spiControl.c: 34: SSP1CON3bits.PCIE = 0;
  6053                           
  6054                           ;incstack = 0
  6055                           ; Regs used in _spi1_init: [wreg+status,2+status,0]
  6056  0E32  0024               	movlb	4	; select bank4
  6057  0E33  1317               	bcf	23,6	;volatile
  6058                           
  6059                           ;spiControl.c: 35: RC2PPS = 0b11001;
  6060  0E34  3019               	movlw	25
  6061  0E35  003D               	movlb	29	; select bank29
  6062  0E36  00A2               	movwf	34	;volatile
  6063                           
  6064                           ;spiControl.c: 36: SSP1SSPPSbits.SSP1SSPPS = 0b10110;
  6065  0E37  003C               	movlb	28	; select bank28
  6066  0E38  0822               	movf	34,w	;volatile
  6067  0E39  39E0               	andlw	-32
  6068  0E3A  3816               	iorlw	22
  6069  0E3B  00A2               	movwf	34	;volatile
  6070                           
  6071                           ;spiControl.c: 37: SSP1CON1bits.SSPOV = 1;
  6072  0E3C  0024               	movlb	4	; select bank4
  6073  0E3D  1715               	bsf	21,6	;volatile
  6074                           
  6075                           ;spiControl.c: 38: SSP1CON1bits.SSPEN = 1;
  6076  0E3E  1695               	bsf	21,5	;volatile
  6077                           
  6078                           ;spiControl.c: 39: SSP1CON1bits.SSPM = 0b0100;
  6079  0E3F  0815               	movf	21,w	;volatile
  6080  0E40  39F0               	andlw	-16
  6081  0E41  3804               	iorlw	4
  6082  0E42  0095               	movwf	21	;volatile
  6083                           
  6084                           ;spiControl.c: 40: SSP1CON3bits.BOEN = 1;
  6085  0E43  1617               	bsf	23,4	;volatile
  6086                           
  6087                           ;spiControl.c: 41: SSP1STATbits.SMP = 0;
  6088  0E44  1394               	bcf	20,7	;volatile
  6089                           
  6090                           ;spiControl.c: 42: SSP1STATbits.CKE = 0;
  6091  0E45  1314               	bcf	20,6	;volatile
  6092                           
  6093                           ;spiControl.c: 43: SSP1CON1bits.CKP = 0;
  6094  0E46  1215               	bcf	21,4	;volatile
  6095                           
  6096                           ;spiControl.c: 44: PIE1bits.SSP1IE = 1;
  6097  0E47  0021               	movlb	1	; select bank1
  6098  0E48  1591               	bsf	17,3	;volatile
  6099                           
  6100                           ;spiControl.c: 45: PIR1bits.SSP1IF = 0;
  6101  0E49  0020               	movlb	0	; select bank0
  6102  0E4A  1191               	bcf	17,3	;volatile
  6103                           
  6104                           ;spiControl.c: 46: dummy = SSP1BUF;
  6105  0E4B  0024               	movlb	4	; select bank4
  6106  0E4C  0811               	movf	17,w	;volatile
  6107  0E4D  0020               	movlb	0	; select bank0
  6108  0E4E  00A0               	movwf	??_spi1_init
  6109  0E4F  0820               	movf	??_spi1_init,w
  6110  0E50  00A1               	movwf	spi1_init@dummy
  6111  0E51  0008               	return
  6112  0E52                     __end_of_spi1_init:	
  6113                           
  6114                           	psect	text3
  6115  0E52                     __ptext3:	
  6116 ;; *************** function _setSPI2sendData *****************
  6117 ;; Defined at:
  6118 ;;		line 105 in file "D:/programdata/16F18346_Link_IC.X/spiControl.c"
  6119 ;; Parameters:    Size  Location     Type
  6120 ;;		None
  6121 ;; Auto vars:     Size  Location     Type
  6122 ;;		None
  6123 ;; Return value:  Size  Location     Type
  6124 ;;                  1    wreg      void 
  6125 ;; Registers used:
  6126 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6127 ;; Tracked objects:
  6128 ;;		On entry : 0/0
  6129 ;;		On exit  : 0/0
  6130 ;;		Unchanged: 0/0
  6131 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6132 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6133 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6134 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6135 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6136 ;;Total ram usage:        4 bytes
  6137 ;; Hardware stack levels used:    1
  6138 ;; Hardware stack levels required when called:    3
  6139 ;; This function calls:
  6140 ;;		Nothing
  6141 ;; This function is called by:
  6142 ;;		_main
  6143 ;; This function uses a non-reentrant model
  6144 ;;
  6145                           
  6146                           
  6147                           ;psect for function _setSPI2sendData
  6148  0E52                     _setSPI2sendData:	
  6149                           
  6150                           ;spiControl.c: 106: spi2_Send_data = spi2_Send_data + SPI_OFFSET_BYTE;
  6151                           
  6152                           ;incstack = 0
  6153                           ; Regs used in _setSPI2sendData: [wreg+fsr1l+fsr1h+status,2+status,0]
  6154  0E52  0020               	movlb	0	; select bank0
  6155  0E53  086E               	movf	_spi2_Send_data,w
  6156  0E54  077D               	addwf	_SPI_OFFSET_BYTE,w
  6157  0E55  00A0               	movwf	??_setSPI2sendData
  6158  0E56  0820               	movf	??_setSPI2sendData,w
  6159  0E57  00EE               	movwf	_spi2_Send_data
  6160                           
  6161                           ;spiControl.c: 118: spi2_buffer_data[count2] = spi2_Send_data;
  6162  0E58  30F0               	movlw	240
  6163  0E59  00A0               	movwf	??_setSPI2sendData
  6164  0E5A  3025               	movlw	37
  6165  0E5B  00A1               	movwf	??_setSPI2sendData+1
  6166  0E5C  086B               	movf	_count2,w
  6167  0E5D  0720               	addwf	??_setSPI2sendData,w
  6168  0E5E  00A2               	movwf	??_setSPI2sendData+2
  6169  0E5F  086C               	movf	_count2+1,w
  6170  0E60  3D21               	addwfc	??_setSPI2sendData+1,w
  6171  0E61  00A3               	movwf	??_setSPI2sendData+3
  6172  0E62  0822               	movf	??_setSPI2sendData+2,w
  6173  0E63  0086               	movwf	6
  6174  0E64  0823               	movf	??_setSPI2sendData+3,w
  6175  0E65  0087               	movwf	7
  6176  0E66  086E               	movf	_spi2_Send_data,w
  6177  0E67  0081               	movwf	1
  6178                           
  6179                           ;spiControl.c: 119: count2++;
  6180  0E68  3001               	movlw	1
  6181  0E69  07EB               	addwf	_count2,f
  6182  0E6A  3000               	movlw	0
  6183  0E6B  3DEC               	addwfc	_count2+1,f
  6184                           
  6185                           ;spiControl.c: 120: if(count2 == 256){
  6186  0E6C  036C               	decf	_count2+1,w
  6187  0E6D  046B               	iorwf	_count2,w
  6188  0E6E  1D03               	btfss	3,2
  6189  0E6F  0008               	return
  6190                           
  6191                           ;spiControl.c: 121: count2 = 0;
  6192  0E70  01EB               	clrf	_count2
  6193  0E71  01EC               	clrf	_count2+1
  6194  0E72  0008               	return
  6195  0E73                     __end_of_setSPI2sendData:	
  6196                           
  6197                           	psect	text4
  6198  0FC1                     __ptext4:	
  6199 ;; *************** function _setComunicateMode *****************
  6200 ;; Defined at:
  6201 ;;		line 40 in file "D:/programdata/16F18346_Link_IC.X/comu_type.c"
  6202 ;; Parameters:    Size  Location     Type
  6203 ;;  m_type          1    wreg     unsigned char 
  6204 ;; Auto vars:     Size  Location     Type
  6205 ;;  m_type          1    0[BANK1 ] unsigned char 
  6206 ;;  i               2    1[BANK1 ] int 
  6207 ;; Return value:  Size  Location     Type
  6208 ;;		None               void
  6209 ;; Registers used:
  6210 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6211 ;; Tracked objects:
  6212 ;;		On entry : 0/0
  6213 ;;		On exit  : 0/0
  6214 ;;		Unchanged: 0/0
  6215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6216 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6217 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6218 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6219 ;;      Totals:         0       1       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6220 ;;Total ram usage:        4 bytes
  6221 ;; Hardware stack levels used:    1
  6222 ;; Hardware stack levels required when called:    6
  6223 ;; This function calls:
  6224 ;;		_Calibrate_download
  6225 ;;		_EEPROM_download
  6226 ;;		_readCargo
  6227 ;; This function is called by:
  6228 ;;		_main
  6229 ;; This function uses a non-reentrant model
  6230 ;;
  6231                           
  6232                           
  6233                           ;psect for function _setComunicateMode
  6234  0FC1                     _setComunicateMode:	
  6235                           
  6236                           ;incstack = 0
  6237                           ; Regs used in _setComunicateMode: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6238                           ;setComunicateMode@m_type stored from wreg
  6239  0FC1  0021               	movlb	1	; select bank1
  6240  0FC2  00E4               	movwf	setComunicateMode@m_type^(0+128)
  6241                           
  6242                           ;comu_type.c: 41: for(int i = 0; i < 18; i++){
  6243  0FC3  01E5               	clrf	setComunicateMode@i^(0+128)
  6244  0FC4  01E6               	clrf	(setComunicateMode@i+1)^(0+128)
  6245  0FC5                     L1:	
  6246  0FC5  0866               	movf	(setComunicateMode@i+1)^(0+128),w
  6247  0FC6  3A80               	xorlw	128
  6248  0FC7  0020               	movlb	0	; select bank0
  6249  0FC8  00D8               	movwf	??_setComunicateMode
  6250  0FC9  3080               	movlw	128
  6251  0FCA  0258               	subwf	??_setComunicateMode,w
  6252  0FCB  1D03               	skipz
  6253  0FCC  2FD0               	goto	u2605
  6254  0FCD  3012               	movlw	18
  6255  0FCE  0021               	movlb	1	; select bank1
  6256  0FCF  0265               	subwf	setComunicateMode@i^(0+128),w
  6257  0FD0                     u2605:	
  6258  0FD0  1803               	btfsc	3,0
  6259  0FD1  0008               	return
  6260                           
  6261                           ;comu_type.c: 42: if(comu_types[i] == m_type){
  6262  0FD2  0021               	movlb	1	; select bank1
  6263  0FD3  0865               	movf	setComunicateMode@i^(0+128),w
  6264  0FD4  3E58               	addlw	(low (_comu_types| (0+256)))& (0+255)
  6265  0FD5  0086               	movwf	6
  6266  0FD6  3001               	movlw	1	; select bank2/3
  6267  0FD7  0087               	movwf	7
  6268  0FD8  0801               	movf	1,w
  6269  0FD9  0664               	xorwf	setComunicateMode@m_type^(0+128),w
  6270  0FDA  1903               	btfsc	3,2
  6271  0FDB  2FE9               	goto	l3901
  6272  0FDC  2FF9               	goto	l3903
  6273  0FDD                     l3887:	
  6274                           ;comu_type.c: 44: case 0:
  6275                           
  6276                           ;comu_type.c: 43: switch(i){
  6277                           
  6278                           
  6279                           ;comu_type.c: 45: Calibrate_download(spi1_Read_data);
  6280  0FDD  087C               	movf	_spi1_Read_data,w
  6281  0FDE  3181  21B7         	fcall	_Calibrate_download
  6282                           
  6283                           ;comu_type.c: 46: return 1;
  6284                           ;	Return value of _setComunicateMode is never used
  6285  0FE0  0008               	return
  6286  0FE1                     l3891:	
  6287                           ;comu_type.c: 47: case 1:
  6288                           
  6289                           
  6290                           ;comu_type.c: 48: readCargo(spi1_Read_data);
  6291  0FE1  087C               	movf	_spi1_Read_data,w
  6292  0FE2  3180  209B         	fcall	_readCargo
  6293                           
  6294                           ;comu_type.c: 55: return 1;
  6295                           ;	Return value of _setComunicateMode is never used
  6296                           
  6297                           ;comu_type.c: 54: case 4:
  6298                           
  6299                           ;comu_type.c: 53: return 1;
  6300                           ;	Return value of _setComunicateMode is never used
  6301                           
  6302                           ;comu_type.c: 52: case 3:
  6303                           
  6304                           ;comu_type.c: 51: return 1;
  6305                           ;	Return value of _setComunicateMode is never used
  6306                           
  6307                           ;comu_type.c: 50: case 2:
  6308                           
  6309                           ;comu_type.c: 49: return 1;
  6310                           ;	Return value of _setComunicateMode is never used
  6311  0FE4  0008               	return
  6312  0FE5                     l3895:	
  6313                           ;comu_type.c: 56: case 5:
  6314                           
  6315                           
  6316                           ;comu_type.c: 57: EEPROM_download(spi1_Read_data);
  6317  0FE5  087C               	movf	_spi1_Read_data,w
  6318  0FE6  3183  23B9         	fcall	_EEPROM_download
  6319                           
  6320                           ;comu_type.c: 58: return 1;
  6321                           ;	Return value of _setComunicateMode is never used
  6322  0FE8  0008               	return
  6323  0FE9                     l3901:	
  6324                           ;comu_type.c: 60: }
  6325                           
  6326                           
  6327                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6328                           ; Switch size 1, requested type "space"
  6329                           ; Number of cases is 1, Range of values is 0 to 0
  6330                           ; switch strategies available:
  6331                           ; Name         Instructions Cycles
  6332                           ; simple_byte            4     3 (average)
  6333                           ; direct_byte            8     6 (fixed)
  6334                           ; jumptable            260     6 (fixed)
  6335                           ;	Chosen strategy is simple_byte
  6336  0FE9  0021               	movlb	1	; select bank1
  6337  0FEA  0866               	movf	(setComunicateMode@i+1)^(0+128),w
  6338  0FEB  3A00               	xorlw	0	; case 0
  6339  0FEC  1903               	skipnz
  6340  0FED  2FEF               	goto	l4207
  6341  0FEE  2FF9               	goto	l3903
  6342  0FEF                     l4207:	
  6343                           
  6344                           ; Switch size 1, requested type "space"
  6345                           ; Number of cases is 6, Range of values is 0 to 5
  6346                           ; switch strategies available:
  6347                           ; Name         Instructions Cycles
  6348                           ; direct_byte           18     6 (fixed)
  6349                           ; simple_byte           19    10 (average)
  6350                           ; jumptable            260     6 (fixed)
  6351                           ;	Chosen strategy is direct_byte
  6352  0FEF  0865               	movf	setComunicateMode@i^(0+128),w
  6353  0FF0  0084               	movwf	4
  6354  0FF1  3006               	movlw	6
  6355  0FF2  0204               	subwf	4,w
  6356  0FF3  1803               	skipnc
  6357  0FF4  2FF9               	goto	l3903
  6358  0FF5  3188               	movlp	high S4209
  6359  0FF6  3504               	lslf	4,w
  6360  0FF7  3E34               	addlw	low S4209
  6361  0FF8  0082               	movwf	2
  6362  0FF9                     l3903:	
  6363  0FF9  3001               	movlw	1
  6364  0FFA  0021               	movlb	1	; select bank1
  6365  0FFB  07E5               	addwf	setComunicateMode@i^(0+128),f
  6366  0FFC  3000               	movlw	0
  6367  0FFD  3DE6               	addwfc	(setComunicateMode@i+1)^(0+128),f
  6368  0FFE  2FC5               	goto	L1
  6369  0FFF                     l463:	
  6370                           ;comu_type.c: 61: }
  6371                           ;comu_type.c: 62: }
  6372                           ;comu_type.c: 63: return 0;
  6373                           ;	Return value of _setComunicateMode is never used
  6374                           
  6375  0FFF  0008               	return
  6376  1000                     __end_of_setComunicateMode:	
  6377                           
  6378                           	psect	swtext1
  6379  0834                     __pswtext1:	
  6380  0834                     S4209:	
  6381  0834  318F  2FDD         	ljmp	l3887
  6382  0836  318F  2FE1         	ljmp	l3891
  6383  0838  318F  2FFF         	ljmp	l463
  6384  083A  318F  2FFF         	ljmp	l463
  6385  083C  318F  2FFF         	ljmp	l463
  6386  083E  318F  2FE5         	ljmp	l3895
  6387                           
  6388                           	psect	text5
  6389  009B                     __ptext5:	
  6390 ;; *************** function _readCargo *****************
  6391 ;; Defined at:
  6392 ;;		line 15 in file "D:/programdata/16F18346_Link_IC.X/normal_mode.c"
  6393 ;; Parameters:    Size  Location     Type
  6394 ;;  spi1_Read_da    1    wreg     unsigned char 
  6395 ;; Auto vars:     Size  Location     Type
  6396 ;;  spi1_Read_da    1   55[BANK0 ] unsigned char 
  6397 ;;  buflong         4   49[BANK0 ] unsigned long 
  6398 ;;  bufint          2   53[BANK0 ] unsigned int 
  6399 ;; Return value:  Size  Location     Type
  6400 ;;                  1    wreg      void 
  6401 ;; Registers used:
  6402 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6403 ;; Tracked objects:
  6404 ;;		On entry : 0/0
  6405 ;;		On exit  : 0/0
  6406 ;;		Unchanged: 0/0
  6407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6408 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6409 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6410 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6411 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6412 ;;Total ram usage:       13 bytes
  6413 ;; Hardware stack levels used:    1
  6414 ;; Hardware stack levels required when called:    5
  6415 ;; This function calls:
  6416 ;;		_TransLong256To255
  6417 ;;		_clutchaction
  6418 ;;		_getCargoData
  6419 ;;		_restartCargo
  6420 ;;		_setIndexMode
  6421 ;; This function is called by:
  6422 ;;		_setComunicateMode
  6423 ;; This function uses a non-reentrant model
  6424 ;;
  6425                           
  6426                           
  6427                           ;psect for function _readCargo
  6428  009B                     _readCargo:	
  6429                           
  6430                           ;incstack = 0
  6431                           ; Regs used in _readCargo: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6432                           ;readCargo@spi1_Read_data stored from wreg
  6433  009B  0020               	movlb	0	; select bank0
  6434  009C  00D7               	movwf	readCargo@spi1_Read_data
  6435                           
  6436                           ;normal_mode.c: 16: unsigned int bufint = spi1_Read_data;
  6437  009D  0857               	movf	readCargo@spi1_Read_data,w
  6438  009E  00CB               	movwf	??_readCargo
  6439  009F  01CC               	clrf	??_readCargo+1
  6440  00A0  084B               	movf	??_readCargo,w
  6441  00A1  00D5               	movwf	readCargo@bufint
  6442  00A2  084C               	movf	??_readCargo+1,w
  6443  00A3  00D6               	movwf	readCargo@bufint+1
  6444                           
  6445                           ;normal_mode.c: 17: unsigned long buflong = spi1_Read_data;
  6446  00A4  0857               	movf	readCargo@spi1_Read_data,w
  6447  00A5  00CB               	movwf	??_readCargo
  6448  00A6  01CC               	clrf	??_readCargo+1
  6449  00A7  01CD               	clrf	??_readCargo+2
  6450  00A8  01CE               	clrf	??_readCargo+3
  6451  00A9  084E               	movf	??_readCargo+3,w
  6452  00AA  00D4               	movwf	readCargo@buflong+3
  6453  00AB  084D               	movf	??_readCargo+2,w
  6454  00AC  00D3               	movwf	readCargo@buflong+2
  6455  00AD  084C               	movf	??_readCargo+1,w
  6456  00AE  00D2               	movwf	readCargo@buflong+1
  6457  00AF  084B               	movf	??_readCargo,w
  6458  00B0  00D1               	movwf	readCargo@buflong
  6459                           
  6460                           ;normal_mode.c: 18: cargoData = getCargoData();
  6461  00B1  318D  25D2  3180   	fcall	_getCargoData
  6462  00B4  0020               	movlb	0	; select bank0
  6463  00B5  3020               	movlw	low ?_getCargoData
  6464  00B6  0086               	movwf	6
  6465  00B7  3000               	movlw	high ?_getCargoData
  6466  00B8  0087               	movwf	7
  6467  00B9  3059               	movlw	low _cargoData
  6468  00BA  0084               	movwf	4
  6469  00BB  3000               	movlw	high _cargoData
  6470  00BC  0085               	movwf	5
  6471  00BD  3010               	movlw	16
  6472  00BE  00CB               	movwf	??_readCargo
  6473  00BF                     u2400:	
  6474  00BF  0016               	moviw fsr1++
  6475  00C0  001A               	movwi fsr0++
  6476  00C1  0BCB               	decfsz	??_readCargo,f
  6477  00C2  28BF               	goto	u2400
  6478                           
  6479                           ;normal_mode.c: 19: if(isMycargo){
  6480  00C3  18F0               	btfsc	_isMycargo/(0+8),_isMycargo& (0+7)
  6481  00C4  2993               	goto	l3669
  6482  00C5  29A2               	goto	l3671
  6483  00C6                     l3625:	
  6484                           ;normal_mode.c: 21: case 0:
  6485                           
  6486                           ;normal_mode.c: 20: switch(countabuf){
  6487                           
  6488                           
  6489                           ;normal_mode.c: 22: cargoData.cargoLength = (bufint << 8 | 0x00FF);
  6490  00C6  0855               	movf	readCargo@bufint,w
  6491  00C7  00CC               	movwf	??_readCargo+1
  6492  00C8  01CB               	clrf	??_readCargo
  6493  00C9  30FF               	movlw	255
  6494  00CA  044B               	iorwf	??_readCargo,w
  6495  00CB  00D9               	movwf	_cargoData
  6496  00CC  3000               	movlw	0
  6497  00CD  044C               	iorwf	??_readCargo+1,w
  6498  00CE  28DA               	goto	L2
  6499  00CF                     l3627:	
  6500                           ;normal_mode.c: 24: case 1:
  6501                           
  6502                           ;normal_mode.c: 23: break;
  6503                           
  6504                           
  6505                           ;normal_mode.c: 25: cargoData.cargoLength = cargoData.cargoLength & (bufint | 0xFF00);
  6506  00CF  3000               	movlw	0
  6507  00D0  0455               	iorwf	readCargo@bufint,w
  6508  00D1  00CB               	movwf	??_readCargo
  6509  00D2  30FF               	movlw	255
  6510  00D3  0456               	iorwf	readCargo@bufint+1,w
  6511  00D4  00CC               	movwf	??_readCargo+1
  6512  00D5  0859               	movf	_cargoData,w
  6513  00D6  054B               	andwf	??_readCargo,w
  6514  00D7  00D9               	movwf	_cargoData
  6515  00D8  085A               	movf	_cargoData+1,w
  6516  00D9  054C               	andwf	??_readCargo+1,w
  6517  00DA                     L2:	
  6518  00DA  00DA               	movwf	_cargoData+1
  6519                           
  6520                           ;normal_mode.c: 26: break;
  6521  00DB  29A2               	goto	l3671
  6522  00DC                     l3629:	
  6523                           ;normal_mode.c: 27: case 2:
  6524                           
  6525                           
  6526                           ;normal_mode.c: 28: cargoData.command = spi1_Read_data;
  6527  00DC  0857               	movf	readCargo@spi1_Read_data,w
  6528  00DD  00CB               	movwf	??_readCargo
  6529  00DE  084B               	movf	??_readCargo,w
  6530  00DF  00DB               	movwf	_cargoData+2
  6531                           
  6532                           ;normal_mode.c: 29: break;
  6533  00E0  29A2               	goto	l3671
  6534  00E1                     l3631:	
  6535                           ;normal_mode.c: 30: case 3:
  6536                           
  6537                           
  6538                           ;normal_mode.c: 31: cargoData.index = spi1_Read_data;
  6539  00E1  0857               	movf	readCargo@spi1_Read_data,w
  6540  00E2  00CB               	movwf	??_readCargo
  6541  00E3  084B               	movf	??_readCargo,w
  6542  00E4  00DC               	movwf	_cargoData+3
  6543                           
  6544                           ;normal_mode.c: 32: setIndexMode(spi1_Read_data);
  6545  00E5  0857               	movf	readCargo@spi1_Read_data,w
  6546  00E6  3187  278E  3180   	fcall	_setIndexMode
  6547                           
  6548                           ;normal_mode.c: 33: break;
  6549  00E9  29A2               	goto	l3671
  6550  00EA                     l3635:	
  6551                           ;normal_mode.c: 34: case 4:
  6552                           
  6553                           
  6554                           ;normal_mode.c: 35: cargoData.address = spi1_Read_data;
  6555  00EA  0020               	movlb	0	; select bank0
  6556  00EB  0857               	movf	readCargo@spi1_Read_data,w
  6557  00EC  00CB               	movwf	??_readCargo
  6558  00ED  084B               	movf	??_readCargo,w
  6559  00EE  00DD               	movwf	_cargoData+4
  6560                           
  6561                           ;normal_mode.c: 36: if(cargoData.address != linkInfo.My_address){
  6562  00EF  085D               	movf	_cargoData+4,w
  6563  00F0  0021               	movlb	1	; select bank1
  6564  00F1  063B               	xorwf	_linkInfo^(0+128),w
  6565  00F2  1903               	skipnz
  6566  00F3  29A2               	goto	l3671
  6567                           
  6568                           ;normal_mode.c: 37: restartCargo();
  6569  00F4  318D  254B  3180   	fcall	_restartCargo
  6570                           
  6571                           ;normal_mode.c: 38: isMycargo = 0;
  6572  00F7  10F0               	bcf	_isMycargo/(0+8),_isMycargo& (0+7)
  6573                           
  6574                           ;normal_mode.c: 40: }
  6575                           ;normal_mode.c: 41: break;
  6576                           
  6577                           ;normal_mode.c: 39: }else{
  6578  00F8  29A2               	goto	l3671
  6579  00F9                     l3641:	
  6580                           ;normal_mode.c: 42: case 5:
  6581                           
  6582                           
  6583                           ;normal_mode.c: 43: spi2_Send_data = (cargoData.linkAngleTo >> 8 & 0x00ff);
  6584  00F9  0020               	movlb	0	; select bank0
  6585  00FA  085F               	movf	_cargoData+6,w
  6586  00FB  298F               	goto	L12
  6587  00FC                     l3643:	
  6588                           ;normal_mode.c: 45: case 6:
  6589                           
  6590                           ;normal_mode.c: 44: break;
  6591                           
  6592                           
  6593                           ;normal_mode.c: 46: spi2_Send_data = (cargoData.linkAngleTo & 0x00ff);
  6594  00FC  085E               	movf	_cargoData+5,w
  6595  00FD  298F               	goto	L12
  6596  00FE                     l3645:	
  6597                           ;normal_mode.c: 48: case 7:
  6598                           
  6599                           ;normal_mode.c: 47: break;
  6600                           
  6601                           
  6602                           ;normal_mode.c: 49: spi2_Send_data = (cargoData.linkAngleBack >> 8 & 0x00ff);
  6603  00FE  0861               	movf	_cargoData+8,w
  6604  00FF  298F               	goto	L12
  6605  0100                     l3647:	
  6606                           ;normal_mode.c: 51: case 8:
  6607                           
  6608                           ;normal_mode.c: 50: break;
  6609                           
  6610                           
  6611                           ;normal_mode.c: 52: spi2_Send_data = (cargoData.linkAngleBack & 0x00ff);
  6612  0100  0860               	movf	_cargoData+7,w
  6613  0101  298F               	goto	L12
  6614  0102                     l3649:	
  6615                           ;normal_mode.c: 54: case 9:
  6616                           
  6617                           ;normal_mode.c: 53: break;
  6618                           
  6619                           
  6620                           ;normal_mode.c: 55: spi2_Send_data = (cargoData.passedTime >> 8 & 0x00ff);
  6621  0102  0863               	movf	_cargoData+10,w
  6622  0103  298F               	goto	L12
  6623  0104                     l3651:	
  6624                           ;normal_mode.c: 57: case 10:
  6625                           
  6626                           ;normal_mode.c: 56: break;
  6627                           
  6628                           
  6629                           ;normal_mode.c: 58: spi2_Send_data = (cargoData.passedTime & 0x00ff);
  6630  0104  0862               	movf	_cargoData+9,w
  6631  0105  298F               	goto	L12
  6632  0106                     l3653:	
  6633                           ;normal_mode.c: 60: case 11:
  6634                           
  6635                           ;normal_mode.c: 59: break;
  6636                           
  6637                           
  6638                           ;normal_mode.c: 61: cargoData.clutchMode = spi1_Read_data;
  6639  0106  0857               	movf	readCargo@spi1_Read_data,w
  6640  0107  00CB               	movwf	??_readCargo
  6641  0108  084B               	movf	??_readCargo,w
  6642  0109  00E4               	movwf	_cargoData+11
  6643                           
  6644                           ;normal_mode.c: 62: clutchaction(cargoData.clutchMode);
  6645  010A  0864               	movf	_cargoData+11,w
  6646  010B  318D  2582  3180   	fcall	_clutchaction
  6647                           
  6648                           ;normal_mode.c: 63: break;
  6649  010E  29A2               	goto	l3671
  6650  010F                     l3657:	
  6651                           ;normal_mode.c: 64: case 12:
  6652                           
  6653                           
  6654                           ;normal_mode.c: 65: cargoData.WorkingCount++;
  6655  010F  3001               	movlw	1
  6656  0110  0020               	movlb	0	; select bank0
  6657  0111  07E5               	addwf	_cargoData+12,f
  6658  0112  3000               	movlw	0
  6659  0113  3DE6               	addwfc	_cargoData+13,f
  6660  0114  3000               	movlw	0
  6661  0115  3DE7               	addwfc	_cargoData+14,f
  6662  0116  3000               	movlw	0
  6663  0117  3DE8               	addwfc	_cargoData+15,f
  6664                           
  6665                           ;normal_mode.c: 66: spi2_Send_data = (TransLong256To255(cargoData.WorkingCount) >> 24 & 
      +                          0x000000ff);
  6666  0118  300C               	movlw	12
  6667  0119  3E59               	addlw	(low (_cargoData| 0))& (0+255)
  6668  011A  0086               	movwf	6
  6669  011B  0187               	clrf	7
  6670  011C  3F40               	moviw [0]fsr1
  6671  011D  00AF               	movwf	TransLong256To255@data
  6672  011E  3F41               	moviw [1]fsr1
  6673  011F  00B0               	movwf	TransLong256To255@data+1
  6674  0120  3F42               	moviw [2]fsr1
  6675  0121  00B1               	movwf	TransLong256To255@data+2
  6676  0122  3F43               	moviw [3]fsr1
  6677  0123  00B2               	movwf	TransLong256To255@data+3
  6678  0124  3182  22D3  3180   	fcall	_TransLong256To255
  6679  0127  0020               	movlb	0	; select bank0
  6680  0128  082F               	movf	?_TransLong256To255,w
  6681  0129  00CB               	movwf	??_readCargo
  6682  012A  0830               	movf	?_TransLong256To255+1,w
  6683  012B  00CC               	movwf	??_readCargo+1
  6684  012C  0831               	movf	?_TransLong256To255+2,w
  6685  012D  00CD               	movwf	??_readCargo+2
  6686  012E  0832               	movf	?_TransLong256To255+3,w
  6687  012F  00CE               	movwf	??_readCargo+3
  6688  0130  3018               	movlw	24
  6689  0131  00CF               	movwf	??_readCargo+4
  6690  0132                     u2435:	
  6691  0132  37CE               	asrf	??_readCargo+3,f
  6692  0133  0CCD               	rrf	??_readCargo+2,f
  6693  0134  0CCC               	rrf	??_readCargo+1,f
  6694  0135  0CCB               	rrf	??_readCargo,f
  6695  0136  0BCF               	decfsz	??_readCargo+4,f
  6696  0137  2932               	goto	u2435
  6697  0138  297A               	goto	L14
  6698  0139                     l3661:	
  6699                           ;normal_mode.c: 68: case 13:
  6700                           
  6701                           ;normal_mode.c: 67: break;
  6702                           
  6703                           
  6704                           ;normal_mode.c: 69: spi2_Send_data = (TransLong256To255(cargoData.WorkingCount) >> 16 & 
      +                          0x000000ff);
  6705  0139  300C               	movlw	12
  6706  013A  3E59               	addlw	(low (_cargoData| 0))& (0+255)
  6707  013B  0086               	movwf	6
  6708  013C  0187               	clrf	7
  6709  013D  3F40               	moviw [0]fsr1
  6710  013E  00AF               	movwf	TransLong256To255@data
  6711  013F  3F41               	moviw [1]fsr1
  6712  0140  00B0               	movwf	TransLong256To255@data+1
  6713  0141  3F42               	moviw [2]fsr1
  6714  0142  00B1               	movwf	TransLong256To255@data+2
  6715  0143  3F43               	moviw [3]fsr1
  6716  0144  00B2               	movwf	TransLong256To255@data+3
  6717  0145  3182  22D3  3180   	fcall	_TransLong256To255
  6718  0148  0020               	movlb	0	; select bank0
  6719  0149  082F               	movf	?_TransLong256To255,w
  6720  014A  00CB               	movwf	??_readCargo
  6721  014B  0830               	movf	?_TransLong256To255+1,w
  6722  014C  00CC               	movwf	??_readCargo+1
  6723  014D  0831               	movf	?_TransLong256To255+2,w
  6724  014E  00CD               	movwf	??_readCargo+2
  6725  014F  0832               	movf	?_TransLong256To255+3,w
  6726  0150  00CE               	movwf	??_readCargo+3
  6727  0151  3010               	movlw	16
  6728  0152  00CF               	movwf	??_readCargo+4
  6729  0153                     u2445:	
  6730  0153  37CE               	asrf	??_readCargo+3,f
  6731  0154  0CCD               	rrf	??_readCargo+2,f
  6732  0155  0CCC               	rrf	??_readCargo+1,f
  6733  0156  0CCB               	rrf	??_readCargo,f
  6734  0157  0BCF               	decfsz	??_readCargo+4,f
  6735  0158  2953               	goto	u2445
  6736  0159  297A               	goto	L14
  6737  015A                     l3663:	
  6738                           ;normal_mode.c: 71: case 14:
  6739                           
  6740                           ;normal_mode.c: 70: break;
  6741                           
  6742                           
  6743                           ;normal_mode.c: 72: spi2_Send_data = (TransLong256To255(cargoData.WorkingCount) >> 8 & 0
      +                          x000000ff);
  6744  015A  300C               	movlw	12
  6745  015B  3E59               	addlw	(low (_cargoData| 0))& (0+255)
  6746  015C  0086               	movwf	6
  6747  015D  0187               	clrf	7
  6748  015E  3F40               	moviw [0]fsr1
  6749  015F  00AF               	movwf	TransLong256To255@data
  6750  0160  3F41               	moviw [1]fsr1
  6751  0161  00B0               	movwf	TransLong256To255@data+1
  6752  0162  3F42               	moviw [2]fsr1
  6753  0163  00B1               	movwf	TransLong256To255@data+2
  6754  0164  3F43               	moviw [3]fsr1
  6755  0165  00B2               	movwf	TransLong256To255@data+3
  6756  0166  3182  22D3  3180   	fcall	_TransLong256To255
  6757  0169  0020               	movlb	0	; select bank0
  6758  016A  082F               	movf	?_TransLong256To255,w
  6759  016B  00CB               	movwf	??_readCargo
  6760  016C  0830               	movf	?_TransLong256To255+1,w
  6761  016D  00CC               	movwf	??_readCargo+1
  6762  016E  0831               	movf	?_TransLong256To255+2,w
  6763  016F  00CD               	movwf	??_readCargo+2
  6764  0170  0832               	movf	?_TransLong256To255+3,w
  6765  0171  00CE               	movwf	??_readCargo+3
  6766  0172  3008               	movlw	8
  6767  0173  00CF               	movwf	??_readCargo+4
  6768  0174                     u2455:	
  6769  0174  37CE               	asrf	??_readCargo+3,f
  6770  0175  0CCD               	rrf	??_readCargo+2,f
  6771  0176  0CCC               	rrf	??_readCargo+1,f
  6772  0177  0CCB               	rrf	??_readCargo,f
  6773  0178  0BCF               	decfsz	??_readCargo+4,f
  6774  0179  2974               	goto	u2455
  6775  017A                     L14:	
  6776  017A  084B               	movf	??_readCargo,w
  6777  017B  00D0               	movwf	??_readCargo+5
  6778  017C  0850               	movf	??_readCargo+5,w
  6779  017D  2991               	goto	L11
  6780  017E                     l3665:	
  6781                           ;normal_mode.c: 74: case 15:
  6782                           
  6783                           ;normal_mode.c: 73: break;
  6784                           
  6785                           
  6786                           ;normal_mode.c: 75: spi2_Send_data = (TransLong256To255(cargoData.WorkingCount) & 0x0000
      +                          00ff);
  6787  017E  300C               	movlw	12
  6788  017F  3E59               	addlw	(low (_cargoData| 0))& (0+255)
  6789  0180  0086               	movwf	6
  6790  0181  0187               	clrf	7
  6791  0182  3F40               	moviw [0]fsr1
  6792  0183  00AF               	movwf	TransLong256To255@data
  6793  0184  3F41               	moviw [1]fsr1
  6794  0185  00B0               	movwf	TransLong256To255@data+1
  6795  0186  3F42               	moviw [2]fsr1
  6796  0187  00B1               	movwf	TransLong256To255@data+2
  6797  0188  3F43               	moviw [3]fsr1
  6798  0189  00B2               	movwf	TransLong256To255@data+3
  6799  018A  3182  22D3  3180   	fcall	_TransLong256To255
  6800  018D  0020               	movlb	0	; select bank0
  6801  018E  082F               	movf	?_TransLong256To255,w
  6802  018F                     L12:	
  6803  018F  00CB               	movwf	??_readCargo
  6804  0190  084B               	movf	??_readCargo,w
  6805  0191                     L11:	
  6806  0191  00EE               	movwf	_spi2_Send_data
  6807                           
  6808                           ;normal_mode.c: 77: }
  6809                           
  6810                           ;normal_mode.c: 76: break;
  6811  0192  29A2               	goto	l3671
  6812  0193                     l3669:	
  6813                           
  6814                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6815                           ; Switch size 1, requested type "space"
  6816                           ; Number of cases is 1, Range of values is 0 to 0
  6817                           ; switch strategies available:
  6818                           ; Name         Instructions Cycles
  6819                           ; simple_byte            4     3 (average)
  6820                           ; direct_byte            8     6 (fixed)
  6821                           ; jumptable            260     6 (fixed)
  6822                           ;	Chosen strategy is simple_byte
  6823  0193  086A               	movf	_countabuf+1,w
  6824  0194  3A00               	xorlw	0	; case 0
  6825  0195  1903               	skipnz
  6826  0196  2998               	goto	l4211
  6827  0197  29A2               	goto	l3671
  6828  0198                     l4211:	
  6829                           
  6830                           ; Switch size 1, requested type "space"
  6831                           ; Number of cases is 16, Range of values is 0 to 15
  6832                           ; switch strategies available:
  6833                           ; Name         Instructions Cycles
  6834                           ; direct_byte           38     6 (fixed)
  6835                           ; simple_byte           49    25 (average)
  6836                           ; jumptable            260     6 (fixed)
  6837                           ;	Chosen strategy is direct_byte
  6838  0198  0869               	movf	_countabuf,w
  6839  0199  0084               	movwf	4
  6840  019A  3010               	movlw	16
  6841  019B  0204               	subwf	4,w
  6842  019C  1803               	skipnc
  6843  019D  29A2               	goto	l3671
  6844  019E  3188               	movlp	high S4213
  6845  019F  3504               	lslf	4,w
  6846  01A0  3E00               	addlw	low S4213
  6847  01A1  0082               	movwf	2
  6848  01A2                     l3671:	
  6849                           
  6850                           ;normal_mode.c: 78: }
  6851                           ;normal_mode.c: 80: countabuf++;
  6852  01A2  3001               	movlw	1
  6853  01A3  0020               	movlb	0	; select bank0
  6854  01A4  07E9               	addwf	_countabuf,f
  6855  01A5  3000               	movlw	0
  6856  01A6  3DEA               	addwfc	_countabuf+1,f
  6857                           
  6858                           ;normal_mode.c: 81: if(cargoData.cargoLength <= countabuf){
  6859  01A7  085A               	movf	_cargoData+1,w
  6860  01A8  026A               	subwf	_countabuf+1,w
  6861  01A9  1D03               	skipz
  6862  01AA  29AD               	goto	u2465
  6863  01AB  0859               	movf	_cargoData,w
  6864  01AC  0269               	subwf	_countabuf,w
  6865  01AD                     u2465:	
  6866  01AD  1C03               	skipc
  6867  01AE  0008               	return
  6868                           
  6869                           ;normal_mode.c: 82: cargoData.cargoLength = 0xFFFF;
  6870  01AF  30FF               	movlw	255
  6871  01B0  00D9               	movwf	_cargoData
  6872  01B1  30FF               	movlw	255
  6873  01B2  00DA               	movwf	_cargoData+1
  6874                           
  6875                           ;normal_mode.c: 83: countabuf = 0;
  6876  01B3  01E9               	clrf	_countabuf
  6877  01B4  01EA               	clrf	_countabuf+1
  6878                           
  6879                           ;normal_mode.c: 84: isMycargo = 1;
  6880  01B5  14F0               	bsf	_isMycargo/(0+8),_isMycargo& (0+7)
  6881  01B6  0008               	return
  6882  01B7                     __end_of_readCargo:	
  6883                           
  6884                           	psect	swtext2
  6885  0800                     __pswtext2:	
  6886  0800                     S4213:	
  6887  0800  3180  28C6         	ljmp	l3625
  6888  0802  3180  28CF         	ljmp	l3627
  6889  0804  3180  28DC         	ljmp	l3629
  6890  0806  3180  28E1         	ljmp	l3631
  6891  0808  3180  28EA         	ljmp	l3635
  6892  080A  3180  28F9         	ljmp	l3641
  6893  080C  3180  28FC         	ljmp	l3643
  6894  080E  3180  28FE         	ljmp	l3645
  6895  0810  3181  2900         	ljmp	l3647
  6896  0812  3181  2902         	ljmp	l3649
  6897  0814  3181  2904         	ljmp	l3651
  6898  0816  3181  2906         	ljmp	l3653
  6899  0818  3181  290F         	ljmp	l3657
  6900  081A  3181  2939         	ljmp	l3661
  6901  081C  3181  295A         	ljmp	l3663
  6902  081E  3181  297E         	ljmp	l3665
  6903                           
  6904                           	psect	text6
  6905  078E                     __ptext6:	
  6906 ;; *************** function _setIndexMode *****************
  6907 ;; Defined at:
  6908 ;;		line 31 in file "D:/programdata/16F18346_Link_IC.X/index.c"
  6909 ;; Parameters:    Size  Location     Type
  6910 ;;  m_index         1    wreg     unsigned char 
  6911 ;; Auto vars:     Size  Location     Type
  6912 ;;  m_index         1    2[BANK0 ] unsigned char 
  6913 ;;  i               2    3[BANK0 ] int 
  6914 ;; Return value:  Size  Location     Type
  6915 ;;		None               void
  6916 ;; Registers used:
  6917 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6918 ;; Tracked objects:
  6919 ;;		On entry : 0/0
  6920 ;;		On exit  : 0/0
  6921 ;;		Unchanged: 0/0
  6922 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6923 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6924 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6925 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6926 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6927 ;;Total ram usage:        4 bytes
  6928 ;; Hardware stack levels used:    1
  6929 ;; Hardware stack levels required when called:    4
  6930 ;; This function calls:
  6931 ;;		_setMoter_lotate
  6932 ;; This function is called by:
  6933 ;;		_readCargo
  6934 ;; This function uses a non-reentrant model
  6935 ;;
  6936                           
  6937                           
  6938                           ;psect for function _setIndexMode
  6939  078E                     _setIndexMode:	
  6940                           
  6941                           ;incstack = 0
  6942                           ; Regs used in _setIndexMode: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6943                           ;setIndexMode@m_index stored from wreg
  6944  078E  0020               	movlb	0	; select bank0
  6945  078F  00A2               	movwf	setIndexMode@m_index
  6946                           
  6947                           ;index.c: 32: for(int i = 0; i < 18; i++){
  6948  0790  01A3               	clrf	setIndexMode@i
  6949  0791  01A4               	clrf	setIndexMode@i+1
  6950  0792                     L15:	
  6951  0792  0824               	movf	setIndexMode@i+1,w
  6952  0793  3A80               	xorlw	128
  6953  0794  00A1               	movwf	??_setIndexMode
  6954  0795  3080               	movlw	128
  6955  0796  0221               	subwf	??_setIndexMode,w
  6956  0797  1D03               	skipz
  6957  0798  2F9B               	goto	u2275
  6958  0799  3012               	movlw	18
  6959  079A  0223               	subwf	setIndexMode@i,w
  6960  079B                     u2275:	
  6961  079B  1803               	btfsc	3,0
  6962  079C  0008               	return
  6963                           
  6964                           ;index.c: 33: if(index[i] == m_index){
  6965  079D  0020               	movlb	0	; select bank0
  6966  079E  0823               	movf	setIndexMode@i,w
  6967  079F  3EA0               	addlw	(low (_index| (0+256)))& (0+255)
  6968  07A0  0086               	movwf	6
  6969  07A1  3001               	movlw	1	; select bank3/4
  6970  07A2  0087               	movwf	7
  6971  07A3  0801               	movf	1,w
  6972  07A4  0622               	xorwf	setIndexMode@m_index,w
  6973  07A5  1903               	btfsc	3,2
  6974  07A6  2FB0               	goto	l3475
  6975  07A7  2FC7               	goto	l3477
  6976  07A8                     l3465:	
  6977                           ;index.c: 38: case 1:
  6978                           
  6979                           ;index.c: 37: return 1;
  6980                           ;	Return value of _setIndexMode is never used
  6981                           
  6982                           ;index.c: 35: case 0:
  6983                           
  6984                           ;index.c: 34: switch(i){
  6985                           
  6986                           
  6987                           ;index.c: 39: setMoter_lotate(0x01);
  6988  07A8  3001               	movlw	1
  6989  07A9  318E  2613         	fcall	_setMoter_lotate
  6990                           
  6991                           ;index.c: 40: return 1;
  6992                           ;	Return value of _setIndexMode is never used
  6993  07AB  0008               	return
  6994  07AC                     l3469:	
  6995                           ;index.c: 41: case 2:
  6996                           
  6997                           
  6998                           ;index.c: 42: setMoter_lotate(0x02);
  6999  07AC  3002               	movlw	2
  7000  07AD  318E  2613         	fcall	_setMoter_lotate
  7001                           
  7002                           ;index.c: 47: return 1;
  7003                           ;	Return value of _setIndexMode is never used
  7004                           
  7005                           ;index.c: 46: case 6:
  7006                           
  7007                           ;index.c: 45: return 1;
  7008                           ;	Return value of _setIndexMode is never used
  7009                           
  7010                           ;index.c: 44: case 3:
  7011                           
  7012                           ;index.c: 43: return 1;
  7013                           ;	Return value of _setIndexMode is never used
  7014  07AF  0008               	return
  7015  07B0                     l3475:	
  7016                           ;index.c: 48: }
  7017                           
  7018                           
  7019                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7020                           ; Switch size 1, requested type "space"
  7021                           ; Number of cases is 1, Range of values is 0 to 0
  7022                           ; switch strategies available:
  7023                           ; Name         Instructions Cycles
  7024                           ; simple_byte            4     3 (average)
  7025                           ; direct_byte            8     6 (fixed)
  7026                           ; jumptable            260     6 (fixed)
  7027                           ;	Chosen strategy is simple_byte
  7028  07B0  0020               	movlb	0	; select bank0
  7029  07B1  0824               	movf	setIndexMode@i+1,w
  7030  07B2  3A00               	xorlw	0	; case 0
  7031  07B3  1903               	skipnz
  7032  07B4  2FB6               	goto	l4215
  7033  07B5  2FC7               	goto	l3477
  7034  07B6                     l4215:	
  7035                           
  7036                           ; Switch size 1, requested type "space"
  7037                           ; Number of cases is 5, Range of values is 0 to 6
  7038                           ; switch strategies available:
  7039                           ; Name         Instructions Cycles
  7040                           ; simple_byte           16     9 (average)
  7041                           ; direct_byte           20     6 (fixed)
  7042                           ; jumptable            260     6 (fixed)
  7043                           ;	Chosen strategy is simple_byte
  7044  07B6  0823               	movf	setIndexMode@i,w
  7045  07B7  3A00               	xorlw	0	; case 0
  7046  07B8  1903               	skipnz
  7047  07B9  2FCD               	goto	l738
  7048  07BA  3A01               	xorlw	1	; case 1
  7049  07BB  1903               	skipnz
  7050  07BC  2FA8               	goto	l3465
  7051  07BD  3A03               	xorlw	3	; case 2
  7052  07BE  1903               	skipnz
  7053  07BF  2FAC               	goto	l3469
  7054  07C0  3A01               	xorlw	1	; case 3
  7055  07C1  1903               	skipnz
  7056  07C2  2FCD               	goto	l738
  7057  07C3  3A05               	xorlw	5	; case 6
  7058  07C4  1903               	skipnz
  7059  07C5  2FCD               	goto	l738
  7060  07C6  2FC7               	goto	l3477
  7061  07C7                     l3477:	
  7062  07C7  3001               	movlw	1
  7063  07C8  0020               	movlb	0	; select bank0
  7064  07C9  07A3               	addwf	setIndexMode@i,f
  7065  07CA  3000               	movlw	0
  7066  07CB  3DA4               	addwfc	setIndexMode@i+1,f
  7067  07CC  2F92               	goto	L15
  7068  07CD                     l738:	
  7069                           ;index.c: 49: }
  7070                           ;index.c: 50: }
  7071                           ;index.c: 51: return 0;
  7072                           ;	Return value of _setIndexMode is never used
  7073                           
  7074  07CD  0008               	return
  7075  07CE                     __end_of_setIndexMode:	
  7076                           
  7077                           	psect	text7
  7078  0E13                     __ptext7:	
  7079 ;; *************** function _setMoter_lotate *****************
  7080 ;; Defined at:
  7081 ;;		line 17 in file "D:/programdata/16F18346_Link_IC.X/cal_position.c"
  7082 ;; Parameters:    Size  Location     Type
  7083 ;;  lotate          1    wreg     unsigned char 
  7084 ;; Auto vars:     Size  Location     Type
  7085 ;;  lotate          1    0[BANK0 ] unsigned char 
  7086 ;; Return value:  Size  Location     Type
  7087 ;;                  1    wreg      void 
  7088 ;; Registers used:
  7089 ;;		wreg, status,2, status,0
  7090 ;; Tracked objects:
  7091 ;;		On entry : 0/0
  7092 ;;		On exit  : 0/0
  7093 ;;		Unchanged: 0/0
  7094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7095 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7096 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7097 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7098 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7099 ;;Total ram usage:        1 bytes
  7100 ;; Hardware stack levels used:    1
  7101 ;; Hardware stack levels required when called:    3
  7102 ;; This function calls:
  7103 ;;		Nothing
  7104 ;; This function is called by:
  7105 ;;		_setIndexMode
  7106 ;;		_setCommandMode
  7107 ;; This function uses a non-reentrant model
  7108 ;;
  7109                           
  7110                           
  7111                           ;psect for function _setMoter_lotate
  7112  0E13                     _setMoter_lotate:	
  7113                           
  7114                           ;incstack = 0
  7115                           ; Regs used in _setMoter_lotate: [wreg+status,2+status,0]
  7116                           ;setMoter_lotate@lotate stored from wreg
  7117  0E13  0020               	movlb	0	; select bank0
  7118  0E14  00A0               	movwf	setMoter_lotate@lotate
  7119                           
  7120                           ;cal_position.c: 18: if(lotate == 0x01){
  7121  0E15  0320               	decf	setMoter_lotate@lotate,w
  7122  0E16  1D03               	btfss	3,2
  7123  0E17  2E1E               	goto	l3277
  7124                           
  7125                           ;cal_position.c: 20: position.moter_lotate = 1;
  7126  0E18  3001               	movlw	1
  7127  0E19  0022               	movlb	2	; select bank2
  7128  0E1A  00A0               	movwf	_position^(0+256)
  7129  0E1B  3000               	movlw	0
  7130  0E1C  00A1               	movwf	(_position^(0+256)+1)
  7131                           
  7132                           ;cal_position.c: 21: }else if(lotate == 0x02){
  7133  0E1D  0008               	return
  7134  0E1E                     l3277:	
  7135  0E1E  3002               	movlw	2
  7136  0E1F  0020               	movlb	0	; select bank0
  7137  0E20  0620               	xorwf	setMoter_lotate@lotate,w
  7138  0E21  1D03               	btfss	3,2
  7139  0E22  2E29               	goto	l3281
  7140                           
  7141                           ;cal_position.c: 23: position.moter_lotate = -1;
  7142  0E23  30FF               	movlw	255
  7143  0E24  0022               	movlb	2	; select bank2
  7144  0E25  00A0               	movwf	_position^(0+256)
  7145  0E26  30FF               	movlw	255
  7146  0E27  00A1               	movwf	(_position^(0+256)+1)
  7147                           
  7148                           ;cal_position.c: 24: }else if(lotate == 0x03){
  7149  0E28  0008               	return
  7150  0E29                     l3281:	
  7151  0E29  3003               	movlw	3
  7152  0E2A  0020               	movlb	0	; select bank0
  7153  0E2B  0620               	xorwf	setMoter_lotate@lotate,w
  7154  0E2C  1D03               	btfss	3,2
  7155  0E2D  0008               	return
  7156                           
  7157                           ;cal_position.c: 25: position.moter_lotate = 0;
  7158  0E2E  0022               	movlb	2	; select bank2
  7159  0E2F  01A0               	clrf	_position^(0+256)
  7160  0E30  01A1               	clrf	(_position+1)^(0+256)
  7161  0E31  0008               	return
  7162  0E32                     __end_of_setMoter_lotate:	
  7163                           
  7164                           	psect	text8
  7165  0D82                     __ptext8:	
  7166 ;; *************** function _clutchaction *****************
  7167 ;; Defined at:
  7168 ;;		line 73 in file "D:/programdata/16F18346_Link_IC.X/command.c"
  7169 ;; Parameters:    Size  Location     Type
  7170 ;;  comannd         1    wreg     unsigned char 
  7171 ;; Auto vars:     Size  Location     Type
  7172 ;;  comannd         1    0[BANK0 ] unsigned char 
  7173 ;; Return value:  Size  Location     Type
  7174 ;;		None               void
  7175 ;; Registers used:
  7176 ;;		wreg, status,2, status,0
  7177 ;; Tracked objects:
  7178 ;;		On entry : 0/0
  7179 ;;		On exit  : 0/0
  7180 ;;		Unchanged: 0/0
  7181 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7182 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7183 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7184 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7185 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7186 ;;Total ram usage:        1 bytes
  7187 ;; Hardware stack levels used:    1
  7188 ;; Hardware stack levels required when called:    3
  7189 ;; This function calls:
  7190 ;;		Nothing
  7191 ;; This function is called by:
  7192 ;;		_readCargo
  7193 ;; This function uses a non-reentrant model
  7194 ;;
  7195                           
  7196                           
  7197                           ;psect for function _clutchaction
  7198  0D82                     _clutchaction:	
  7199                           
  7200                           ;incstack = 0
  7201                           ; Regs used in _clutchaction: [wreg+status,2+status,0]
  7202                           ;clutchaction@comannd stored from wreg
  7203  0D82  0020               	movlb	0	; select bank0
  7204  0D83  00A0               	movwf	clutchaction@comannd
  7205                           
  7206                           ;command.c: 74: if(comannd == 1){
  7207  0D84  0320               	decf	clutchaction@comannd,w
  7208  0D85  1D03               	btfss	3,2
  7209  0D86  2D8A               	goto	l346
  7210                           
  7211                           ;command.c: 75: LATAbits.LATA0 = 1;
  7212  0D87  0022               	movlb	2	; select bank2
  7213  0D88  140C               	bsf	12,0	;volatile
  7214                           
  7215                           ;command.c: 76: }
  7216  0D89  0008               	return
  7217  0D8A                     l346:	
  7218                           
  7219                           ;command.c: 77: else{
  7220                           ;command.c: 78: LATAbits.LATA0 = 0;
  7221  0D8A  0022               	movlb	2	; select bank2
  7222  0D8B  100C               	bcf	12,0	;volatile
  7223  0D8C  0008               	return
  7224  0D8D                     __end_of_clutchaction:	
  7225                           
  7226                           	psect	text9
  7227  03B9                     __ptext9:	
  7228 ;; *************** function _EEPROM_download *****************
  7229 ;; Defined at:
  7230 ;;		line 70 in file "eeprom.c"
  7231 ;; Parameters:    Size  Location     Type
  7232 ;;  spi1_Read_da    1    wreg     unsigned char 
  7233 ;; Auto vars:     Size  Location     Type
  7234 ;;  spi1_Read_da    1   27[BANK0 ] unsigned char 
  7235 ;;  buflong         4   21[BANK0 ] unsigned long 
  7236 ;;  bufint          2   25[BANK0 ] unsigned int 
  7237 ;; Return value:  Size  Location     Type
  7238 ;;                  1    wreg      void 
  7239 ;; Registers used:
  7240 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7241 ;; Tracked objects:
  7242 ;;		On entry : 0/0
  7243 ;;		On exit  : 0/0
  7244 ;;		Unchanged: 0/0
  7245 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7246 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7247 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7248 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7249 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7250 ;;Total ram usage:       11 bytes
  7251 ;; Hardware stack levels used:    1
  7252 ;; Hardware stack levels required when called:    4
  7253 ;; This function calls:
  7254 ;;		_ReadEEPROM
  7255 ;;		_getCargoData
  7256 ;;		_restartCargo
  7257 ;; This function is called by:
  7258 ;;		_setComunicateMode
  7259 ;; This function uses a non-reentrant model
  7260 ;;
  7261                           
  7262                           
  7263                           ;psect for function _EEPROM_download
  7264  03B9                     _EEPROM_download:	
  7265                           
  7266                           ;incstack = 0
  7267                           ; Regs used in _EEPROM_download: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7268                           ;EEPROM_download@spi1_Read_data stored from wreg
  7269  03B9  0020               	movlb	0	; select bank0
  7270  03BA  00BB               	movwf	EEPROM_download@spi1_Read_data
  7271                           
  7272                           ;eeprom.c: 71: unsigned int bufint = spi1_Read_data;
  7273  03BB  083B               	movf	EEPROM_download@spi1_Read_data,w
  7274  03BC  00B1               	movwf	??_EEPROM_download
  7275  03BD  01B2               	clrf	??_EEPROM_download+1
  7276  03BE  0831               	movf	??_EEPROM_download,w
  7277  03BF  00B9               	movwf	EEPROM_download@bufint
  7278  03C0  0832               	movf	??_EEPROM_download+1,w
  7279  03C1  00BA               	movwf	EEPROM_download@bufint+1
  7280                           
  7281                           ;eeprom.c: 72: unsigned long buflong = spi1_Read_data;
  7282  03C2  083B               	movf	EEPROM_download@spi1_Read_data,w
  7283  03C3  00B1               	movwf	??_EEPROM_download
  7284  03C4  01B2               	clrf	??_EEPROM_download+1
  7285  03C5  01B3               	clrf	??_EEPROM_download+2
  7286  03C6  01B4               	clrf	??_EEPROM_download+3
  7287  03C7  0834               	movf	??_EEPROM_download+3,w
  7288  03C8  00B8               	movwf	EEPROM_download@buflong+3
  7289  03C9  0833               	movf	??_EEPROM_download+2,w
  7290  03CA  00B7               	movwf	EEPROM_download@buflong+2
  7291  03CB  0832               	movf	??_EEPROM_download+1,w
  7292  03CC  00B6               	movwf	EEPROM_download@buflong+1
  7293  03CD  0831               	movf	??_EEPROM_download,w
  7294  03CE  00B5               	movwf	EEPROM_download@buflong
  7295                           
  7296                           ;eeprom.c: 73: cargoData = getCargoData();
  7297  03CF  318D  25D2  3183   	fcall	_getCargoData
  7298  03D2  0020               	movlb	0	; select bank0
  7299  03D3  3020               	movlw	low ?_getCargoData
  7300  03D4  0086               	movwf	6
  7301  03D5  3000               	movlw	high ?_getCargoData
  7302  03D6  0087               	movwf	7
  7303  03D7  3059               	movlw	low _cargoData
  7304  03D8  0084               	movwf	4
  7305  03D9  3000               	movlw	high _cargoData
  7306  03DA  0085               	movwf	5
  7307  03DB  3010               	movlw	16
  7308  03DC  00B1               	movwf	??_EEPROM_download
  7309  03DD                     u2470:	
  7310  03DD  0016               	moviw fsr1++
  7311  03DE  001A               	movwi fsr0++
  7312  03DF  0BB1               	decfsz	??_EEPROM_download,f
  7313  03E0  2BDD               	goto	u2470
  7314                           
  7315                           ;eeprom.c: 74: if(isMycargo){
  7316  03E1  18F0               	btfsc	_isMycargo/(0+8),_isMycargo& (0+7)
  7317  03E2  2C24               	goto	l3717
  7318  03E3  2C34               	goto	l681
  7319  03E4                     l3695:	
  7320                           ;eeprom.c: 76: case 0:
  7321                           
  7322                           ;eeprom.c: 75: switch(countabuf){
  7323                           
  7324                           
  7325                           ;eeprom.c: 77: cargoData.cargoLength = (bufint << 8 | 0x00FF);
  7326  03E4  0839               	movf	EEPROM_download@bufint,w
  7327  03E5  00B2               	movwf	??_EEPROM_download+1
  7328  03E6  01B1               	clrf	??_EEPROM_download
  7329  03E7  30FF               	movlw	255
  7330  03E8  0431               	iorwf	??_EEPROM_download,w
  7331  03E9  00D9               	movwf	_cargoData
  7332  03EA  3000               	movlw	0
  7333  03EB  0432               	iorwf	??_EEPROM_download+1,w
  7334  03EC  2BF8               	goto	L16
  7335  03ED                     l3697:	
  7336                           ;eeprom.c: 79: case 1:
  7337                           
  7338                           ;eeprom.c: 78: break;
  7339                           
  7340                           
  7341                           ;eeprom.c: 80: cargoData.cargoLength = cargoData.cargoLength & (bufint | 0xFF00);
  7342  03ED  3000               	movlw	0
  7343  03EE  0439               	iorwf	EEPROM_download@bufint,w
  7344  03EF  00B1               	movwf	??_EEPROM_download
  7345  03F0  30FF               	movlw	255
  7346  03F1  043A               	iorwf	EEPROM_download@bufint+1,w
  7347  03F2  00B2               	movwf	??_EEPROM_download+1
  7348  03F3  0859               	movf	_cargoData,w
  7349  03F4  0531               	andwf	??_EEPROM_download,w
  7350  03F5  00D9               	movwf	_cargoData
  7351  03F6  085A               	movf	_cargoData+1,w
  7352  03F7  0532               	andwf	??_EEPROM_download+1,w
  7353  03F8                     L16:	
  7354  03F8  00DA               	movwf	_cargoData+1
  7355                           
  7356                           ;eeprom.c: 81: break;
  7357  03F9  2C34               	goto	l681
  7358  03FA                     l3699:	
  7359                           ;eeprom.c: 82: case 2:
  7360                           
  7361                           
  7362                           ;eeprom.c: 83: cargoData.command = spi1_Read_data;
  7363  03FA  083B               	movf	EEPROM_download@spi1_Read_data,w
  7364  03FB  00B1               	movwf	??_EEPROM_download
  7365  03FC  0831               	movf	??_EEPROM_download,w
  7366  03FD  00DB               	movwf	_cargoData+2
  7367                           
  7368                           ;eeprom.c: 84: break;
  7369  03FE  2C34               	goto	l681
  7370  03FF                     l3701:	
  7371                           ;eeprom.c: 85: case 3:
  7372                           
  7373                           
  7374                           ;eeprom.c: 86: cargoData.index = spi1_Read_data;
  7375  03FF  083B               	movf	EEPROM_download@spi1_Read_data,w
  7376  0400  00B1               	movwf	??_EEPROM_download
  7377  0401  0831               	movf	??_EEPROM_download,w
  7378  0402  00DC               	movwf	_cargoData+3
  7379                           
  7380                           ;eeprom.c: 87: break;
  7381  0403  2C34               	goto	l681
  7382  0404                     l3703:	
  7383                           ;eeprom.c: 88: case 4:
  7384                           
  7385                           
  7386                           ;eeprom.c: 89: cargoData.address = spi1_Read_data;
  7387  0404  083B               	movf	EEPROM_download@spi1_Read_data,w
  7388  0405  00B1               	movwf	??_EEPROM_download
  7389  0406  0831               	movf	??_EEPROM_download,w
  7390  0407  00DD               	movwf	_cargoData+4
  7391                           
  7392                           ;eeprom.c: 90: if(cargoData.address != linkInfo.My_address){
  7393  0408  085D               	movf	_cargoData+4,w
  7394  0409  0021               	movlb	1	; select bank1
  7395  040A  063B               	xorwf	_linkInfo^(0+128),w
  7396  040B  1903               	skipnz
  7397  040C  2C12               	goto	l3709
  7398                           
  7399                           ;eeprom.c: 91: restartCargo();
  7400  040D  318D  254B  3183   	fcall	_restartCargo
  7401                           
  7402                           ;eeprom.c: 92: isMycargo = 0;
  7403  0410  10F0               	bcf	_isMycargo/(0+8),_isMycargo& (0+7)
  7404                           
  7405                           ;eeprom.c: 93: }else{
  7406  0411  2C34               	goto	l681
  7407  0412                     l3709:	
  7408                           
  7409                           ;eeprom.c: 94: LATAbits.LATA0 = ~LATAbits.LATA0;
  7410  0412  1003               	clrc
  7411  0413  0022               	movlb	2	; select bank2
  7412  0414  1C0C               	btfss	12,0	;volatile
  7413  0415  1403               	setc
  7414  0416  1C03               	btfss	3,0
  7415  0417  2C1B               	goto	u2500
  7416  0418  0022               	movlb	2	; select bank2
  7417  0419  140C               	bsf	12,0	;volatile
  7418  041A  2C1D               	goto	l3711
  7419  041B                     u2500:	
  7420  041B  0022               	movlb	2	; select bank2
  7421  041C  100C               	bcf	12,0	;volatile
  7422  041D                     l3711:	
  7423                           
  7424                           ;eeprom.c: 95: isMyAddr = 1;
  7425  041D  1470               	bsf	_isMyAddr/(0+8),_isMyAddr& (0+7)
  7426                           
  7427                           ;eeprom.c: 96: EEPROM_ADDR_buf = 0xF000;
  7428  041E  3000               	movlw	0
  7429  041F  0021               	movlb	1	; select bank1
  7430  0420  00C7               	movwf	_EEPROM_ADDR_buf^(0+128)
  7431  0421  30F0               	movlw	240
  7432  0422  00C8               	movwf	(_EEPROM_ADDR_buf^(0+128)+1)
  7433                           
  7434                           ;eeprom.c: 99: }
  7435                           
  7436                           ;eeprom.c: 97: }
  7437                           ;eeprom.c: 98: break;
  7438  0423  2C34               	goto	l681
  7439  0424                     l3717:	
  7440                           
  7441                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7442                           ; Switch size 1, requested type "space"
  7443                           ; Number of cases is 1, Range of values is 0 to 0
  7444                           ; switch strategies available:
  7445                           ; Name         Instructions Cycles
  7446                           ; simple_byte            4     3 (average)
  7447                           ; direct_byte            8     6 (fixed)
  7448                           ; jumptable            260     6 (fixed)
  7449                           ;	Chosen strategy is simple_byte
  7450  0424  0020               	movlb	0	; select bank0
  7451  0425  086A               	movf	_countabuf+1,w
  7452  0426  3A00               	xorlw	0	; case 0
  7453  0427  1903               	skipnz
  7454  0428  2C2A               	goto	l4217
  7455  0429  2C34               	goto	l681
  7456  042A                     l4217:	
  7457                           
  7458                           ; Switch size 1, requested type "space"
  7459                           ; Number of cases is 5, Range of values is 0 to 4
  7460                           ; switch strategies available:
  7461                           ; Name         Instructions Cycles
  7462                           ; direct_byte           16     6 (fixed)
  7463                           ; simple_byte           16     9 (average)
  7464                           ; jumptable            260     6 (fixed)
  7465                           ;	Chosen strategy is direct_byte
  7466  042A  0869               	movf	_countabuf,w
  7467  042B  0084               	movwf	4
  7468  042C  3005               	movlw	5
  7469  042D  0204               	subwf	4,w
  7470  042E  1803               	skipnc
  7471  042F  2C34               	goto	l681
  7472  0430  3188               	movlp	high S4219
  7473  0431  3504               	lslf	4,w
  7474  0432  3E40               	addlw	low S4219
  7475  0433  0082               	movwf	2
  7476  0434                     l681:	
  7477                           
  7478                           ;eeprom.c: 100: }
  7479                           ;eeprom.c: 101: if(isMyAddr && countabuf > 4){
  7480  0434  1C70               	btfss	_isMyAddr/(0+8),_isMyAddr& (0+7)
  7481  0435  2C54               	goto	l3727
  7482  0436  3000               	movlw	0
  7483  0437  0020               	movlb	0	; select bank0
  7484  0438  026A               	subwf	_countabuf+1,w
  7485  0439  3005               	movlw	5
  7486  043A  1903               	skipnz
  7487  043B  0269               	subwf	_countabuf,w
  7488  043C  1C03               	skipc
  7489  043D  2C54               	goto	l3727
  7490                           
  7491                           ;eeprom.c: 103: ReadEEPROM (EEPROM_ADDR_buf);
  7492  043E  0021               	movlb	1	; select bank1
  7493  043F  0848               	movf	(_EEPROM_ADDR_buf+1)^(0+128),w
  7494  0440  0020               	movlb	0	; select bank0
  7495  0441  00A1               	movwf	ReadEEPROM@addr+1
  7496  0442  0021               	movlb	1	; select bank1
  7497  0443  0847               	movf	_EEPROM_ADDR_buf^(0+128),w
  7498  0444  0020               	movlb	0	; select bank0
  7499  0445  00A0               	movwf	ReadEEPROM@addr
  7500  0446  318E  2695  3183   	fcall	_ReadEEPROM
  7501                           
  7502                           ;eeprom.c: 104: spi2_Send_data = RaadData[0];
  7503  0449  0021               	movlb	1	; select bank1
  7504  044A  0849               	movf	_RaadData^(0+128),w
  7505  044B  0020               	movlb	0	; select bank0
  7506  044C  00B1               	movwf	??_EEPROM_download
  7507  044D  0831               	movf	??_EEPROM_download,w
  7508  044E  00EE               	movwf	_spi2_Send_data
  7509                           
  7510                           ;eeprom.c: 107: EEPROM_ADDR_buf += 1;
  7511  044F  3001               	movlw	1
  7512  0450  0021               	movlb	1	; select bank1
  7513  0451  07C7               	addwf	_EEPROM_ADDR_buf^(0+128),f
  7514  0452  3000               	movlw	0
  7515  0453  3DC8               	addwfc	(_EEPROM_ADDR_buf+1)^(0+128),f
  7516  0454                     l3727:	
  7517                           
  7518                           ;eeprom.c: 109: }
  7519                           ;eeprom.c: 110: countabuf++;
  7520  0454  3001               	movlw	1
  7521  0455  0020               	movlb	0	; select bank0
  7522  0456  07E9               	addwf	_countabuf,f
  7523  0457  3000               	movlw	0
  7524  0458  3DEA               	addwfc	_countabuf+1,f
  7525                           
  7526                           ;eeprom.c: 111: if(calibdata.cargoLength <= countabuf){
  7527  0459  0021               	movlb	1	; select bank1
  7528  045A  0833               	movf	(_calibdata+1)^(0+128),w
  7529  045B  0020               	movlb	0	; select bank0
  7530  045C  026A               	subwf	_countabuf+1,w
  7531  045D  1D03               	skipz
  7532  045E  2C63               	goto	u2545
  7533  045F  0021               	movlb	1	; select bank1
  7534  0460  0832               	movf	_calibdata^(0+128),w
  7535  0461  0020               	movlb	0	; select bank0
  7536  0462  0269               	subwf	_countabuf,w
  7537  0463                     u2545:	
  7538  0463  1C03               	skipc
  7539  0464  2C6F               	goto	l3739
  7540                           
  7541                           ;eeprom.c: 112: calibdata.cargoLength = 0xFFFF;
  7542  0465  30FF               	movlw	255
  7543  0466  0021               	movlb	1	; select bank1
  7544  0467  00B2               	movwf	_calibdata^(0+128)
  7545  0468  30FF               	movlw	255
  7546  0469  00B3               	movwf	(_calibdata^(0+128)+1)
  7547                           
  7548                           ;eeprom.c: 113: countabuf = 0;
  7549  046A  0020               	movlb	0	; select bank0
  7550  046B  01E9               	clrf	_countabuf
  7551  046C  01EA               	clrf	_countabuf+1
  7552                           
  7553                           ;eeprom.c: 114: isMycargo = 1;
  7554  046D  14F0               	bsf	_isMycargo/(0+8),_isMycargo& (0+7)
  7555                           
  7556                           ;eeprom.c: 115: isMyAddr = 0;
  7557  046E  1070               	bcf	_isMyAddr/(0+8),_isMyAddr& (0+7)
  7558  046F                     l3739:	
  7559                           
  7560                           ;eeprom.c: 116: }
  7561                           ;eeprom.c: 118: if(0xF0FF <= EEPROM_ADDR_buf){
  7562  046F  30F0               	movlw	240
  7563  0470  0021               	movlb	1	; select bank1
  7564  0471  0248               	subwf	(_EEPROM_ADDR_buf+1)^(0+128),w
  7565  0472  30FF               	movlw	255
  7566  0473  1903               	skipnz
  7567  0474  0247               	subwf	_EEPROM_ADDR_buf^(0+128),w
  7568  0475  1C03               	skipc
  7569  0476  0008               	return
  7570                           
  7571                           ;eeprom.c: 119: countabuf = 0;
  7572  0477  0020               	movlb	0	; select bank0
  7573  0478  01E9               	clrf	_countabuf
  7574  0479  01EA               	clrf	_countabuf+1
  7575                           
  7576                           ;eeprom.c: 120: isMycargo = 1;
  7577  047A  14F0               	bsf	_isMycargo/(0+8),_isMycargo& (0+7)
  7578  047B  0008               	return
  7579  047C                     __end_of_EEPROM_download:	
  7580                           
  7581                           	psect	swtext3
  7582  0840                     __pswtext3:	
  7583  0840                     S4219:	
  7584  0840  3183  2BE4         	ljmp	l3695
  7585  0842  3183  2BED         	ljmp	l3697
  7586  0844  3183  2BFA         	ljmp	l3699
  7587  0846  3183  2BFF         	ljmp	l3701
  7588  0848  3184  2C04         	ljmp	l3703
  7589                           
  7590                           	psect	text10
  7591  0E95                     __ptext10:	
  7592 ;; *************** function _ReadEEPROM *****************
  7593 ;; Defined at:
  7594 ;;		line 54 in file "eeprom.c"
  7595 ;; Parameters:    Size  Location     Type
  7596 ;;  addr            2    0[BANK0 ] int 
  7597 ;; Auto vars:     Size  Location     Type
  7598 ;;  Loadr           1    4[BANK0 ] unsigned char 
  7599 ;;  Hiadr           1    3[BANK0 ] unsigned char 
  7600 ;; Return value:  Size  Location     Type
  7601 ;;                  1    wreg      void 
  7602 ;; Registers used:
  7603 ;;		wreg, status,2
  7604 ;; Tracked objects:
  7605 ;;		On entry : 0/0
  7606 ;;		On exit  : 0/0
  7607 ;;		Unchanged: 0/0
  7608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7609 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7610 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7611 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7612 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7613 ;;Total ram usage:        5 bytes
  7614 ;; Hardware stack levels used:    1
  7615 ;; Hardware stack levels required when called:    3
  7616 ;; This function calls:
  7617 ;;		Nothing
  7618 ;; This function is called by:
  7619 ;;		_EEPROM_download
  7620 ;; This function uses a non-reentrant model
  7621 ;;
  7622                           
  7623                           
  7624                           ;psect for function _ReadEEPROM
  7625  0E95                     _ReadEEPROM:	
  7626                           
  7627                           ;eeprom.c: 56: unsigned char Hiadr = addr >> 8 & 0xFF;
  7628                           
  7629                           ;incstack = 0
  7630                           ; Regs used in _ReadEEPROM: [wreg+status,2]
  7631  0E95  0020               	movlb	0	; select bank0
  7632  0E96  0821               	movf	ReadEEPROM@addr+1,w
  7633  0E97  00A2               	movwf	??_ReadEEPROM
  7634  0E98  0822               	movf	??_ReadEEPROM,w
  7635  0E99  00A3               	movwf	ReadEEPROM@Hiadr
  7636                           
  7637                           ;eeprom.c: 57: unsigned char Loadr = addr & 0xFF;
  7638  0E9A  0820               	movf	ReadEEPROM@addr,w
  7639  0E9B  00A2               	movwf	??_ReadEEPROM
  7640  0E9C  0822               	movf	??_ReadEEPROM,w
  7641  0E9D  00A4               	movwf	ReadEEPROM@Loadr
  7642                           
  7643                           ;eeprom.c: 58: NVMCON1bits.NVMREGS = 1;
  7644  0E9E  0031               	movlb	17	; select bank17
  7645  0E9F  1715               	bsf	21,6	;volsfr
  7646                           
  7647                           ;eeprom.c: 59: NVMADRL = Loadr;
  7648  0EA0  0020               	movlb	0	; select bank0
  7649  0EA1  0824               	movf	ReadEEPROM@Loadr,w
  7650  0EA2  0031               	movlb	17	; select bank17
  7651  0EA3  0091               	movwf	17	;volatile
  7652                           
  7653                           ;eeprom.c: 60: NVMADRH = Hiadr;
  7654  0EA4  0020               	movlb	0	; select bank0
  7655  0EA5  0823               	movf	ReadEEPROM@Hiadr,w
  7656  0EA6  0031               	movlb	17	; select bank17
  7657  0EA7  0092               	movwf	18	;volatile
  7658                           
  7659                           ;eeprom.c: 61: NVMCON1bits.RD = 1;
  7660  0EA8  1415               	bsf	21,0	;volsfr
  7661                           
  7662                           ;eeprom.c: 62: RD = 1;
  7663  0EA9  1415               	bsf	21,0	;volsfr
  7664                           
  7665                           ;eeprom.c: 64: RaadData[0] = NVMDATL;
  7666  0EAA  0813               	movf	19,w	;volatile
  7667  0EAB  0020               	movlb	0	; select bank0
  7668  0EAC  00A2               	movwf	??_ReadEEPROM
  7669  0EAD  0822               	movf	??_ReadEEPROM,w
  7670  0EAE  0021               	movlb	1	; select bank1
  7671  0EAF  00C9               	movwf	_RaadData^(0+128)
  7672                           
  7673                           ;eeprom.c: 65: RaadData[1] = NVMDATH;
  7674  0EB0  0031               	movlb	17	; select bank17
  7675  0EB1  0814               	movf	20,w	;volatile
  7676  0EB2  0020               	movlb	0	; select bank0
  7677  0EB3  00A2               	movwf	??_ReadEEPROM
  7678  0EB4  0822               	movf	??_ReadEEPROM,w
  7679  0EB5  0021               	movlb	1	; select bank1
  7680  0EB6  00CA               	movwf	(_RaadData^(0+128)+1)
  7681  0EB7  0008               	return
  7682  0EB8                     __end_of_ReadEEPROM:	
  7683                           
  7684                           	psect	text11
  7685  01B7                     __ptext11:	
  7686 ;; *************** function _Calibrate_download *****************
  7687 ;; Defined at:
  7688 ;;		line 65 in file "D:/programdata/16F18346_Link_IC.X/calibrate_mode.c"
  7689 ;; Parameters:    Size  Location     Type
  7690 ;;  spi_Read_dat    1    wreg     unsigned char 
  7691 ;; Auto vars:     Size  Location     Type
  7692 ;;  spi_Read_dat    1   55[BANK0 ] unsigned char 
  7693 ;;  buflong         4   49[BANK0 ] unsigned long 
  7694 ;;  bufint          2   53[BANK0 ] unsigned int 
  7695 ;; Return value:  Size  Location     Type
  7696 ;;                  1    wreg      void 
  7697 ;; Registers used:
  7698 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7699 ;; Tracked objects:
  7700 ;;		On entry : 0/0
  7701 ;;		On exit  : 0/0
  7702 ;;		Unchanged: 0/0
  7703 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7704 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7705 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7706 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7707 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7708 ;;Total ram usage:       13 bytes
  7709 ;; Hardware stack levels used:    1
  7710 ;; Hardware stack levels required when called:    5
  7711 ;; This function calls:
  7712 ;;		_InitCalibrate
  7713 ;;		_TransLong256To255
  7714 ;;		_isEndpoint
  7715 ;;		_resetCargo
  7716 ;; This function is called by:
  7717 ;;		_setComunicateMode
  7718 ;; This function uses a non-reentrant model
  7719 ;;
  7720                           
  7721                           
  7722                           ;psect for function _Calibrate_download
  7723  01B7                     _Calibrate_download:	
  7724                           
  7725                           ;incstack = 0
  7726                           ; Regs used in _Calibrate_download: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7727                           ;Calibrate_download@spi_Read_data stored from wreg
  7728  01B7  0020               	movlb	0	; select bank0
  7729  01B8  00D7               	movwf	Calibrate_download@spi_Read_data
  7730                           
  7731                           ;calibrate_mode.c: 67: unsigned int bufint = spi_Read_data;
  7732  01B9  0857               	movf	Calibrate_download@spi_Read_data,w
  7733  01BA  00CB               	movwf	??_Calibrate_download
  7734  01BB  01CC               	clrf	??_Calibrate_download+1
  7735  01BC  084B               	movf	??_Calibrate_download,w
  7736  01BD  00D5               	movwf	Calibrate_download@bufint
  7737  01BE  084C               	movf	??_Calibrate_download+1,w
  7738  01BF  00D6               	movwf	Calibrate_download@bufint+1
  7739                           
  7740                           ;calibrate_mode.c: 68: unsigned long buflong = spi_Read_data;
  7741  01C0  0857               	movf	Calibrate_download@spi_Read_data,w
  7742  01C1  00CB               	movwf	??_Calibrate_download
  7743  01C2  01CC               	clrf	??_Calibrate_download+1
  7744  01C3  01CD               	clrf	??_Calibrate_download+2
  7745  01C4  01CE               	clrf	??_Calibrate_download+3
  7746  01C5  084E               	movf	??_Calibrate_download+3,w
  7747  01C6  00D4               	movwf	Calibrate_download@buflong+3
  7748  01C7  084D               	movf	??_Calibrate_download+2,w
  7749  01C8  00D3               	movwf	Calibrate_download@buflong+2
  7750  01C9  084C               	movf	??_Calibrate_download+1,w
  7751  01CA  00D2               	movwf	Calibrate_download@buflong+1
  7752  01CB  084B               	movf	??_Calibrate_download,w
  7753  01CC  00D1               	movwf	Calibrate_download@buflong
  7754                           
  7755                           ;calibrate_mode.c: 69: isEndpoint();
  7756  01CD  318F  275E  3181   	fcall	_isEndpoint
  7757                           
  7758                           ;calibrate_mode.c: 70: switch(countabuf){
  7759  01D0  2AA4               	goto	l3599
  7760  01D1                     l3561:	
  7761                           ;calibrate_mode.c: 71: case 0:
  7762                           
  7763                           
  7764                           ;calibrate_mode.c: 72: InitCalibrate();
  7765  01D1  318F  2733  3181   	fcall	_InitCalibrate
  7766                           
  7767                           ;calibrate_mode.c: 73: calibdata.cargoLength = (bufint << 8 | 0x00FF);
  7768  01D4  0020               	movlb	0	; select bank0
  7769  01D5  0855               	movf	Calibrate_download@bufint,w
  7770  01D6  00CC               	movwf	??_Calibrate_download+1
  7771  01D7  01CB               	clrf	??_Calibrate_download
  7772  01D8  30FF               	movlw	255
  7773  01D9  044B               	iorwf	??_Calibrate_download,w
  7774  01DA  0021               	movlb	1	; select bank1
  7775  01DB  00B2               	movwf	_calibdata^(0+128)
  7776  01DC  3000               	movlw	0
  7777  01DD  0020               	movlb	0	; select bank0
  7778  01DE  044C               	iorwf	??_Calibrate_download+1,w
  7779  01DF  29EF               	goto	L17
  7780  01E0                     l3567:	
  7781                           ;calibrate_mode.c: 76: case 1:
  7782                           
  7783                           ;calibrate_mode.c: 75: break;
  7784                           
  7785                           ;calibrate_mode.c: 74: spi2_Send_data = spi_Read_data;
  7786                           
  7787                           
  7788                           ;calibrate_mode.c: 77: calibdata.cargoLength = calibdata.cargoLength & (bufint | 0xFF00)
      +                          ;
  7789  01E0  3000               	movlw	0
  7790  01E1  0455               	iorwf	Calibrate_download@bufint,w
  7791  01E2  00CB               	movwf	??_Calibrate_download
  7792  01E3  30FF               	movlw	255
  7793  01E4  0456               	iorwf	Calibrate_download@bufint+1,w
  7794  01E5  00CC               	movwf	??_Calibrate_download+1
  7795  01E6  0021               	movlb	1	; select bank1
  7796  01E7  0832               	movf	_calibdata^(0+128),w
  7797  01E8  0020               	movlb	0	; select bank0
  7798  01E9  054B               	andwf	??_Calibrate_download,w
  7799  01EA  0021               	movlb	1	; select bank1
  7800  01EB  00B2               	movwf	_calibdata^(0+128)
  7801  01EC  0833               	movf	(_calibdata+1)^(0+128),w
  7802  01ED  0020               	movlb	0	; select bank0
  7803  01EE  054C               	andwf	??_Calibrate_download+1,w
  7804  01EF                     L17:	
  7805  01EF  0021               	movlb	1	; select bank1
  7806  01F0  00B3               	movwf	(_calibdata+1)^(0+128)
  7807  01F1  29FD               	goto	L19
  7808  01F2                     l3569:	
  7809                           ;calibrate_mode.c: 80: case 2:
  7810                           
  7811                           ;calibrate_mode.c: 79: break;
  7812                           
  7813                           ;calibrate_mode.c: 78: spi2_Send_data = spi_Read_data;
  7814                           
  7815                           
  7816                           ;calibrate_mode.c: 81: calibdata.command = spi_Read_data;
  7817  01F2  0857               	movf	Calibrate_download@spi_Read_data,w
  7818  01F3  00CB               	movwf	??_Calibrate_download
  7819  01F4  084B               	movf	??_Calibrate_download,w
  7820  01F5  0021               	movlb	1	; select bank1
  7821  01F6  00B4               	movwf	(_calibdata^(0+128)+2)
  7822  01F7  29FD               	goto	L19
  7823  01F8                     l3571:	
  7824                           ;calibrate_mode.c: 84: case 3:
  7825                           
  7826                           ;calibrate_mode.c: 83: break;
  7827                           
  7828                           ;calibrate_mode.c: 82: spi2_Send_data = spi_Read_data;
  7829                           
  7830                           
  7831                           ;calibrate_mode.c: 85: calibdata.index = spi_Read_data;
  7832  01F8  0857               	movf	Calibrate_download@spi_Read_data,w
  7833  01F9  00CB               	movwf	??_Calibrate_download
  7834  01FA  084B               	movf	??_Calibrate_download,w
  7835  01FB  0021               	movlb	1	; select bank1
  7836  01FC  00B5               	movwf	(_calibdata^(0+128)+3)
  7837  01FD                     L19:	
  7838                           
  7839                           ;calibrate_mode.c: 86: spi2_Send_data = spi_Read_data;
  7840  01FD  0020               	movlb	0	; select bank0
  7841  01FE  0857               	movf	Calibrate_download@spi_Read_data,w
  7842  01FF  2A8A               	goto	L25
  7843  0200                     l3573:	
  7844                           ;calibrate_mode.c: 88: case 4:
  7845                           
  7846                           ;calibrate_mode.c: 87: break;
  7847                           
  7848                           
  7849                           ;calibrate_mode.c: 89: linkInfo.My_address = spi_Read_data +1;
  7850  0200  0857               	movf	Calibrate_download@spi_Read_data,w
  7851  0201  3E01               	addlw	1
  7852  0202  00CB               	movwf	??_Calibrate_download
  7853  0203  084B               	movf	??_Calibrate_download,w
  7854  0204  0021               	movlb	1	; select bank1
  7855  0205  00BB               	movwf	_linkInfo^(0+128)
  7856                           
  7857                           ;calibrate_mode.c: 90: spi2_Send_data = linkInfo.My_address;
  7858  0206  083B               	movf	_linkInfo^(0+128),w
  7859  0207  0020               	movlb	0	; select bank0
  7860  0208  2A8A               	goto	L25
  7861  0209                     l3577:	
  7862                           ;calibrate_mode.c: 92: case 5:
  7863                           
  7864                           ;calibrate_mode.c: 91: break;
  7865                           
  7866                           
  7867                           ;calibrate_mode.c: 93: calibdata.WorkingCount++;
  7868  0209  3001               	movlw	1
  7869  020A  0021               	movlb	1	; select bank1
  7870  020B  07B6               	addwf	(_calibdata^(0+128)+4),f
  7871  020C  3000               	movlw	0
  7872  020D  3DB7               	addwfc	((_calibdata+1)^(0+128)+4),f
  7873  020E  3000               	movlw	0
  7874  020F  3DB8               	addwfc	((_calibdata+2)^(0+128)+4),f
  7875  0210  3000               	movlw	0
  7876  0211  3DB9               	addwfc	((_calibdata+3)^(0+128)+4),f
  7877                           
  7878                           ;calibrate_mode.c: 94: spi2_Send_data = (TransLong256To255(calibdata.WorkingCount) >> 24
      +                           & 0x000000ff);
  7879  0212  3004               	movlw	4
  7880  0213  3EB2               	addlw	(low (_calibdata| 0))& (0+255)
  7881  0214  0086               	movwf	6
  7882  0215  0187               	clrf	7
  7883  0216  3F40               	moviw [0]fsr1
  7884  0217  0020               	movlb	0	; select bank0
  7885  0218  00AF               	movwf	TransLong256To255@data
  7886  0219  3F41               	moviw [1]fsr1
  7887  021A  00B0               	movwf	TransLong256To255@data+1
  7888  021B  3F42               	moviw [2]fsr1
  7889  021C  00B1               	movwf	TransLong256To255@data+2
  7890  021D  3F43               	moviw [3]fsr1
  7891  021E  00B2               	movwf	TransLong256To255@data+3
  7892  021F  3182  22D3  3181   	fcall	_TransLong256To255
  7893  0222  0020               	movlb	0	; select bank0
  7894  0223  082F               	movf	?_TransLong256To255,w
  7895  0224  00CB               	movwf	??_Calibrate_download
  7896  0225  0830               	movf	?_TransLong256To255+1,w
  7897  0226  00CC               	movwf	??_Calibrate_download+1
  7898  0227  0831               	movf	?_TransLong256To255+2,w
  7899  0228  00CD               	movwf	??_Calibrate_download+2
  7900  0229  0832               	movf	?_TransLong256To255+3,w
  7901  022A  00CE               	movwf	??_Calibrate_download+3
  7902  022B  3018               	movlw	24
  7903  022C  00CF               	movwf	??_Calibrate_download+4
  7904  022D                     u2345:	
  7905  022D  37CE               	asrf	??_Calibrate_download+3,f
  7906  022E  0CCD               	rrf	??_Calibrate_download+2,f
  7907  022F  0CCC               	rrf	??_Calibrate_download+1,f
  7908  0230  0CCB               	rrf	??_Calibrate_download,f
  7909  0231  0BCF               	decfsz	??_Calibrate_download+4,f
  7910  0232  2A2D               	goto	u2345
  7911  0233  2A75               	goto	L27
  7912  0234                     l3581:	
  7913                           ;calibrate_mode.c: 96: case 6:
  7914                           
  7915                           ;calibrate_mode.c: 95: break;
  7916                           
  7917                           
  7918                           ;calibrate_mode.c: 97: spi2_Send_data = (TransLong256To255(calibdata.WorkingCount) >> 16
      +                           & 0x000000ff);
  7919  0234  3004               	movlw	4
  7920  0235  3EB2               	addlw	(low (_calibdata| 0))& (0+255)
  7921  0236  0086               	movwf	6
  7922  0237  0187               	clrf	7
  7923  0238  3F40               	moviw [0]fsr1
  7924  0239  00AF               	movwf	TransLong256To255@data
  7925  023A  3F41               	moviw [1]fsr1
  7926  023B  00B0               	movwf	TransLong256To255@data+1
  7927  023C  3F42               	moviw [2]fsr1
  7928  023D  00B1               	movwf	TransLong256To255@data+2
  7929  023E  3F43               	moviw [3]fsr1
  7930  023F  00B2               	movwf	TransLong256To255@data+3
  7931  0240  3182  22D3  3181   	fcall	_TransLong256To255
  7932  0243  0020               	movlb	0	; select bank0
  7933  0244  082F               	movf	?_TransLong256To255,w
  7934  0245  00CB               	movwf	??_Calibrate_download
  7935  0246  0830               	movf	?_TransLong256To255+1,w
  7936  0247  00CC               	movwf	??_Calibrate_download+1
  7937  0248  0831               	movf	?_TransLong256To255+2,w
  7938  0249  00CD               	movwf	??_Calibrate_download+2
  7939  024A  0832               	movf	?_TransLong256To255+3,w
  7940  024B  00CE               	movwf	??_Calibrate_download+3
  7941  024C  3010               	movlw	16
  7942  024D  00CF               	movwf	??_Calibrate_download+4
  7943  024E                     u2355:	
  7944  024E  37CE               	asrf	??_Calibrate_download+3,f
  7945  024F  0CCD               	rrf	??_Calibrate_download+2,f
  7946  0250  0CCC               	rrf	??_Calibrate_download+1,f
  7947  0251  0CCB               	rrf	??_Calibrate_download,f
  7948  0252  0BCF               	decfsz	??_Calibrate_download+4,f
  7949  0253  2A4E               	goto	u2355
  7950  0254  2A75               	goto	L27
  7951  0255                     l3583:	
  7952                           ;calibrate_mode.c: 99: case 7:
  7953                           
  7954                           ;calibrate_mode.c: 98: break;
  7955                           
  7956                           
  7957                           ;calibrate_mode.c: 100: spi2_Send_data = (TransLong256To255(calibdata.WorkingCount) >> 8
      +                           & 0x000000ff);
  7958  0255  3004               	movlw	4
  7959  0256  3EB2               	addlw	(low (_calibdata| 0))& (0+255)
  7960  0257  0086               	movwf	6
  7961  0258  0187               	clrf	7
  7962  0259  3F40               	moviw [0]fsr1
  7963  025A  00AF               	movwf	TransLong256To255@data
  7964  025B  3F41               	moviw [1]fsr1
  7965  025C  00B0               	movwf	TransLong256To255@data+1
  7966  025D  3F42               	moviw [2]fsr1
  7967  025E  00B1               	movwf	TransLong256To255@data+2
  7968  025F  3F43               	moviw [3]fsr1
  7969  0260  00B2               	movwf	TransLong256To255@data+3
  7970  0261  3182  22D3  3181   	fcall	_TransLong256To255
  7971  0264  0020               	movlb	0	; select bank0
  7972  0265  082F               	movf	?_TransLong256To255,w
  7973  0266  00CB               	movwf	??_Calibrate_download
  7974  0267  0830               	movf	?_TransLong256To255+1,w
  7975  0268  00CC               	movwf	??_Calibrate_download+1
  7976  0269  0831               	movf	?_TransLong256To255+2,w
  7977  026A  00CD               	movwf	??_Calibrate_download+2
  7978  026B  0832               	movf	?_TransLong256To255+3,w
  7979  026C  00CE               	movwf	??_Calibrate_download+3
  7980  026D  3008               	movlw	8
  7981  026E  00CF               	movwf	??_Calibrate_download+4
  7982  026F                     u2365:	
  7983  026F  37CE               	asrf	??_Calibrate_download+3,f
  7984  0270  0CCD               	rrf	??_Calibrate_download+2,f
  7985  0271  0CCC               	rrf	??_Calibrate_download+1,f
  7986  0272  0CCB               	rrf	??_Calibrate_download,f
  7987  0273  0BCF               	decfsz	??_Calibrate_download+4,f
  7988  0274  2A6F               	goto	u2365
  7989  0275                     L27:	
  7990  0275  084B               	movf	??_Calibrate_download,w
  7991  0276  00D0               	movwf	??_Calibrate_download+5
  7992  0277  0850               	movf	??_Calibrate_download+5,w
  7993  0278  2A8C               	goto	L24
  7994  0279                     l3585:	
  7995                           ;calibrate_mode.c: 102: case 8:
  7996                           
  7997                           ;calibrate_mode.c: 101: break;
  7998                           
  7999                           
  8000                           ;calibrate_mode.c: 103: spi2_Send_data = (TransLong256To255(calibdata.WorkingCount) & 0x
      +                          000000ff);
  8001  0279  3004               	movlw	4
  8002  027A  3EB2               	addlw	(low (_calibdata| 0))& (0+255)
  8003  027B  0086               	movwf	6
  8004  027C  0187               	clrf	7
  8005  027D  3F40               	moviw [0]fsr1
  8006  027E  00AF               	movwf	TransLong256To255@data
  8007  027F  3F41               	moviw [1]fsr1
  8008  0280  00B0               	movwf	TransLong256To255@data+1
  8009  0281  3F42               	moviw [2]fsr1
  8010  0282  00B1               	movwf	TransLong256To255@data+2
  8011  0283  3F43               	moviw [3]fsr1
  8012  0284  00B2               	movwf	TransLong256To255@data+3
  8013  0285  3182  22D3  3181   	fcall	_TransLong256To255
  8014  0288  0020               	movlb	0	; select bank0
  8015  0289  082F               	movf	?_TransLong256To255,w
  8016  028A                     L25:	
  8017  028A  00CB               	movwf	??_Calibrate_download
  8018  028B  084B               	movf	??_Calibrate_download,w
  8019  028C                     L24:	
  8020  028C  00EE               	movwf	_spi2_Send_data
  8021                           
  8022                           ;calibrate_mode.c: 104: break;
  8023  028D  2AB4               	goto	l415
  8024  028E                     l424:	
  8025                           ;calibrate_mode.c: 105: case 9:
  8026                           
  8027                           
  8028                           ;calibrate_mode.c: 107: if(isEndPointTrig == 1){
  8029  028E  1C7B               	btfss	_isEndPointTrig/(0+8),_isEndPointTrig& (0+7)
  8030  028F  2A96               	goto	l425
  8031                           
  8032                           ;calibrate_mode.c: 108: LATAbits.LATA0 = 1;
  8033  0290  0022               	movlb	2	; select bank2
  8034  0291  140C               	bsf	12,0	;volatile
  8035                           
  8036                           ;calibrate_mode.c: 109: linkInfo.endpoint = 1;
  8037  0292  0021               	movlb	1	; select bank1
  8038  0293  01C0               	clrf	(_linkInfo^(0+128)+5)
  8039  0294  0AC0               	incf	(_linkInfo^(0+128)+5),f
  8040                           
  8041                           ;calibrate_mode.c: 110: }else{
  8042  0295  2A9A               	goto	l3591
  8043  0296                     l425:	
  8044                           
  8045                           ;calibrate_mode.c: 111: LATAbits.LATA0 = 0;
  8046  0296  0022               	movlb	2	; select bank2
  8047  0297  100C               	bcf	12,0	;volatile
  8048                           
  8049                           ;calibrate_mode.c: 112: linkInfo.endpoint = 0;
  8050  0298  0021               	movlb	1	; select bank1
  8051  0299  01C0               	clrf	(_linkInfo^(0+128)+5)
  8052  029A                     l3591:	
  8053                           
  8054                           ;calibrate_mode.c: 113: }
  8055                           ;calibrate_mode.c: 114: spi2_Send_data = linkInfo.My_address;
  8056  029A  083B               	movf	_linkInfo^(0+128),w
  8057  029B  0020               	movlb	0	; select bank0
  8058  029C  00CB               	movwf	??_Calibrate_download
  8059  029D  084B               	movf	??_Calibrate_download,w
  8060  029E  00EE               	movwf	_spi2_Send_data
  8061                           
  8062                           ;calibrate_mode.c: 115: isEndPointTrig = 0;
  8063  029F  107B               	bcf	_isEndPointTrig/(0+8),_isEndPointTrig& (0+7)
  8064                           
  8065                           ;calibrate_mode.c: 116: resetCargo();
  8066  02A0  318D  25E2  3181   	fcall	_resetCargo
  8067                           
  8068                           ;calibrate_mode.c: 118: }
  8069                           
  8070                           ;calibrate_mode.c: 117: break;
  8071  02A3  2AB4               	goto	l415
  8072  02A4                     l3599:	
  8073                           
  8074                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8075                           ; Switch size 1, requested type "space"
  8076                           ; Number of cases is 1, Range of values is 0 to 0
  8077                           ; switch strategies available:
  8078                           ; Name         Instructions Cycles
  8079                           ; simple_byte            4     3 (average)
  8080                           ; direct_byte            8     6 (fixed)
  8081                           ; jumptable            260     6 (fixed)
  8082                           ;	Chosen strategy is simple_byte
  8083  02A4  0020               	movlb	0	; select bank0
  8084  02A5  086A               	movf	_countabuf+1,w
  8085  02A6  3A00               	xorlw	0	; case 0
  8086  02A7  1903               	skipnz
  8087  02A8  2AAA               	goto	l4221
  8088  02A9  2AB4               	goto	l415
  8089  02AA                     l4221:	
  8090                           
  8091                           ; Switch size 1, requested type "space"
  8092                           ; Number of cases is 10, Range of values is 0 to 9
  8093                           ; switch strategies available:
  8094                           ; Name         Instructions Cycles
  8095                           ; direct_byte           26     6 (fixed)
  8096                           ; simple_byte           31    16 (average)
  8097                           ; jumptable            260     6 (fixed)
  8098                           ;	Chosen strategy is direct_byte
  8099  02AA  0869               	movf	_countabuf,w
  8100  02AB  0084               	movwf	4
  8101  02AC  300A               	movlw	10
  8102  02AD  0204               	subwf	4,w
  8103  02AE  1803               	skipnc
  8104  02AF  2AB4               	goto	l415
  8105  02B0  3188               	movlp	high S4223
  8106  02B1  3504               	lslf	4,w
  8107  02B2  3E20               	addlw	low S4223
  8108  02B3  0082               	movwf	2
  8109  02B4                     l415:	
  8110                           
  8111                           ;calibrate_mode.c: 119: if(isEndPointTrig){
  8112  02B4  1C7B               	btfss	_isEndPointTrig/(0+8),_isEndPointTrig& (0+7)
  8113  02B5  2AB9               	goto	l3603
  8114                           
  8115                           ;calibrate_mode.c: 120: spi2_Send_data = 0x01;
  8116  02B6  0020               	movlb	0	; select bank0
  8117  02B7  01EE               	clrf	_spi2_Send_data
  8118  02B8  0AEE               	incf	_spi2_Send_data,f
  8119  02B9                     l3603:	
  8120                           
  8121                           ;calibrate_mode.c: 121: }
  8122                           ;calibrate_mode.c: 125: countabuf++;
  8123  02B9  3001               	movlw	1
  8124  02BA  0020               	movlb	0	; select bank0
  8125  02BB  07E9               	addwf	_countabuf,f
  8126  02BC  3000               	movlw	0
  8127  02BD  3DEA               	addwfc	_countabuf+1,f
  8128                           
  8129                           ;calibrate_mode.c: 126: if(calibdata.cargoLength <= countabuf){
  8130  02BE  0021               	movlb	1	; select bank1
  8131  02BF  0833               	movf	(_calibdata+1)^(0+128),w
  8132  02C0  0020               	movlb	0	; select bank0
  8133  02C1  026A               	subwf	_countabuf+1,w
  8134  02C2  1D03               	skipz
  8135  02C3  2AC8               	goto	u2395
  8136  02C4  0021               	movlb	1	; select bank1
  8137  02C5  0832               	movf	_calibdata^(0+128),w
  8138  02C6  0020               	movlb	0	; select bank0
  8139  02C7  0269               	subwf	_countabuf,w
  8140  02C8                     u2395:	
  8141  02C8  1C03               	skipc
  8142  02C9  0008               	return
  8143                           
  8144                           ;calibrate_mode.c: 127: calibdata.cargoLength = 0xFFFF;
  8145  02CA  30FF               	movlw	255
  8146  02CB  0021               	movlb	1	; select bank1
  8147  02CC  00B2               	movwf	_calibdata^(0+128)
  8148  02CD  30FF               	movlw	255
  8149  02CE  00B3               	movwf	(_calibdata^(0+128)+1)
  8150                           
  8151                           ;calibrate_mode.c: 128: countabuf = 0;
  8152  02CF  0020               	movlb	0	; select bank0
  8153  02D0  01E9               	clrf	_countabuf
  8154  02D1  01EA               	clrf	_countabuf+1
  8155  02D2  0008               	return
  8156  02D3                     __end_of_Calibrate_download:	
  8157                           
  8158                           	psect	swtext4
  8159  0820                     __pswtext4:	
  8160  0820                     S4223:	
  8161  0820  3181  29D1         	ljmp	l3561
  8162  0822  3181  29E0         	ljmp	l3567
  8163  0824  3181  29F2         	ljmp	l3569
  8164  0826  3181  29F8         	ljmp	l3571
  8165  0828  3182  2A00         	ljmp	l3573
  8166  082A  3182  2A09         	ljmp	l3577
  8167  082C  3182  2A34         	ljmp	l3581
  8168  082E  3182  2A55         	ljmp	l3583
  8169  0830  3182  2A79         	ljmp	l3585
  8170  0832  3182  2A8E         	ljmp	l424
  8171                           
  8172                           	psect	text12
  8173  0DE2                     __ptext12:	
  8174 ;; *************** function _resetCargo *****************
  8175 ;; Defined at:
  8176 ;;		line 25 in file "struct.c"
  8177 ;; Parameters:    Size  Location     Type
  8178 ;;		None
  8179 ;; Auto vars:     Size  Location     Type
  8180 ;;		None
  8181 ;; Return value:  Size  Location     Type
  8182 ;;                  1    wreg      void 
  8183 ;; Registers used:
  8184 ;;		wreg, status,2
  8185 ;; Tracked objects:
  8186 ;;		On entry : 0/0
  8187 ;;		On exit  : 0/0
  8188 ;;		Unchanged: 0/0
  8189 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8190 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8191 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8193 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8194 ;;Total ram usage:        0 bytes
  8195 ;; Hardware stack levels used:    1
  8196 ;; Hardware stack levels required when called:    3
  8197 ;; This function calls:
  8198 ;;		Nothing
  8199 ;; This function is called by:
  8200 ;;		_Calibrate_download
  8201 ;; This function uses a non-reentrant model
  8202 ;;
  8203                           
  8204                           
  8205                           ;psect for function _resetCargo
  8206  0DE2                     _resetCargo:	
  8207                           
  8208                           ;struct.c: 26: cargoData.WorkingCount = 0;
  8209                           
  8210                           ;incstack = 0
  8211                           ; Regs used in _resetCargo: [wreg+status,2]
  8212  0DE2  3000               	movlw	0
  8213  0DE3  0020               	movlb	0	; select bank0
  8214  0DE4  00E8               	movwf	_cargoData+15
  8215  0DE5  3000               	movlw	0
  8216  0DE6  00E7               	movwf	_cargoData+14
  8217  0DE7  3000               	movlw	0
  8218  0DE8  00E6               	movwf	_cargoData+13
  8219  0DE9  3000               	movlw	0
  8220  0DEA  00E5               	movwf	_cargoData+12
  8221                           
  8222                           ;struct.c: 27: cargoData.address = 0;
  8223  0DEB  01DD               	clrf	_cargoData+4
  8224                           
  8225                           ;struct.c: 28: cargoData.cargoLength = 0xFFFF;
  8226  0DEC  30FF               	movlw	255
  8227  0DED  00D9               	movwf	_cargoData
  8228  0DEE  30FF               	movlw	255
  8229  0DEF  00DA               	movwf	_cargoData+1
  8230                           
  8231                           ;struct.c: 29: cargoData.clutchMode = 0;
  8232  0DF0  01E4               	clrf	_cargoData+11
  8233                           
  8234                           ;struct.c: 30: cargoData.command = 0;
  8235  0DF1  01DB               	clrf	_cargoData+2
  8236                           
  8237                           ;struct.c: 31: cargoData.index = 0;
  8238  0DF2  01DC               	clrf	_cargoData+3
  8239                           
  8240                           ;struct.c: 32: cargoData.linkAngleTo = 360;
  8241  0DF3  3068               	movlw	104
  8242  0DF4  00DE               	movwf	_cargoData+5
  8243  0DF5  3001               	movlw	1
  8244  0DF6  00DF               	movwf	_cargoData+6
  8245                           
  8246                           ;struct.c: 33: cargoData.passedTime = 0;
  8247  0DF7  01E2               	clrf	_cargoData+9
  8248  0DF8  01E3               	clrf	_cargoData+10
  8249  0DF9  0008               	return
  8250  0DFA                     __end_of_resetCargo:	
  8251                           
  8252                           	psect	text13
  8253  0F5E                     __ptext13:	
  8254 ;; *************** function _isEndpoint *****************
  8255 ;; Defined at:
  8256 ;;		line 31 in file "D:/programdata/16F18346_Link_IC.X/calibrate_mode.c"
  8257 ;; Parameters:    Size  Location     Type
  8258 ;;		None
  8259 ;; Auto vars:     Size  Location     Type
  8260 ;;  spi2data        1    6[BANK0 ] unsigned char 
  8261 ;; Return value:  Size  Location     Type
  8262 ;;		None               void
  8263 ;; Registers used:
  8264 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8265 ;; Tracked objects:
  8266 ;;		On entry : 0/0
  8267 ;;		On exit  : 0/0
  8268 ;;		Unchanged: 0/0
  8269 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8270 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8271 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8272 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8273 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8274 ;;Total ram usage:        6 bytes
  8275 ;; Hardware stack levels used:    1
  8276 ;; Hardware stack levels required when called:    4
  8277 ;; This function calls:
  8278 ;;		_setSPI1sendDataManual
  8279 ;; This function is called by:
  8280 ;;		_Calibrate_download
  8281 ;; This function uses a non-reentrant model
  8282 ;;
  8283                           
  8284                           
  8285                           ;psect for function _isEndpoint
  8286  0F5E                     _isEndpoint:	
  8287                           
  8288                           ;calibrate_mode.c: 32: unsigned char spi2data = 0;
  8289                           
  8290                           ;incstack = 0
  8291                           ; Regs used in _isEndpoint: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8292  0F5E  0020               	movlb	0	; select bank0
  8293  0F5F  01A6               	clrf	isEndpoint@spi2data
  8294                           
  8295                           ;calibrate_mode.c: 33: if(count2 > 1){
  8296  0F60  3000               	movlw	0
  8297  0F61  026C               	subwf	_count2+1,w
  8298  0F62  3002               	movlw	2
  8299  0F63  1903               	skipnz
  8300  0F64  026B               	subwf	_count2,w
  8301  0F65  1C03               	skipc
  8302  0F66  2F7B               	goto	l3439
  8303                           
  8304                           ;calibrate_mode.c: 34: spi2data = spi2_buffer_data[count2 -1];
  8305  0F67  086B               	movf	_count2,w
  8306  0F68  3EFF               	addlw	255
  8307  0F69  00A1               	movwf	??_isEndpoint
  8308  0F6A  30FF               	movlw	255
  8309  0F6B  3D6C               	addwfc	_count2+1,w
  8310  0F6C  00A2               	movwf	??_isEndpoint+1
  8311  0F6D  30F0               	movlw	240
  8312  0F6E  00A3               	movwf	??_isEndpoint+2
  8313  0F6F  3025               	movlw	37
  8314  0F70  00A4               	movwf	??_isEndpoint+3
  8315  0F71  0821               	movf	??_isEndpoint,w
  8316  0F72  0723               	addwf	??_isEndpoint+2,w
  8317  0F73  0086               	movwf	6
  8318  0F74  0822               	movf	??_isEndpoint+1,w
  8319  0F75  3D24               	addwfc	??_isEndpoint+3,w
  8320  0F76  0087               	movwf	7
  8321  0F77  0801               	movf	1,w
  8322  0F78  00A5               	movwf	??_isEndpoint+4
  8323  0F79  0825               	movf	??_isEndpoint+4,w
  8324  0F7A  2F88               	goto	L28
  8325  0F7B                     l3439:	
  8326                           ;calibrate_mode.c: 35: }else{
  8327                           
  8328                           
  8329                           ;calibrate_mode.c: 36: spi2data = spi2_buffer_data[count2];
  8330  0F7B  30F0               	movlw	240
  8331  0F7C  00A1               	movwf	??_isEndpoint
  8332  0F7D  3025               	movlw	37
  8333  0F7E  00A2               	movwf	??_isEndpoint+1
  8334  0F7F  086B               	movf	_count2,w
  8335  0F80  0721               	addwf	??_isEndpoint,w
  8336  0F81  0086               	movwf	6
  8337  0F82  086C               	movf	_count2+1,w
  8338  0F83  3D22               	addwfc	??_isEndpoint+1,w
  8339  0F84  0087               	movwf	7
  8340  0F85  0801               	movf	1,w
  8341  0F86  00A3               	movwf	??_isEndpoint+2
  8342  0F87  0823               	movf	??_isEndpoint+2,w
  8343  0F88                     L28:	
  8344  0F88  00A6               	movwf	isEndpoint@spi2data
  8345                           
  8346                           ;calibrate_mode.c: 37: }
  8347                           ;calibrate_mode.c: 41: setSPI1sendDataManual(0x01);
  8348  0F89  3001               	movlw	1
  8349  0F8A  318D  255C         	fcall	_setSPI1sendDataManual
  8350  0F8C  0008               	return
  8351  0F8D                     __end_of_isEndpoint:	
  8352                           ;calibrate_mode.c: 44: return isEndPointTrig;
  8353                           ;	Return value of _isEndpoint is never used
  8354                           
  8355                           
  8356                           	psect	text14
  8357  0D5C                     __ptext14:	
  8358 ;; *************** function _setSPI1sendDataManual *****************
  8359 ;; Defined at:
  8360 ;;		line 102 in file "D:/programdata/16F18346_Link_IC.X/spiControl.c"
  8361 ;; Parameters:    Size  Location     Type
  8362 ;;  data            1    wreg     unsigned char 
  8363 ;; Auto vars:     Size  Location     Type
  8364 ;;  data            1    0[BANK0 ] unsigned char 
  8365 ;; Return value:  Size  Location     Type
  8366 ;;                  1    wreg      void 
  8367 ;; Registers used:
  8368 ;;		wreg
  8369 ;; Tracked objects:
  8370 ;;		On entry : 0/0
  8371 ;;		On exit  : 0/0
  8372 ;;		Unchanged: 0/0
  8373 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8374 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8375 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8376 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8377 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8378 ;;Total ram usage:        1 bytes
  8379 ;; Hardware stack levels used:    1
  8380 ;; Hardware stack levels required when called:    3
  8381 ;; This function calls:
  8382 ;;		Nothing
  8383 ;; This function is called by:
  8384 ;;		_isEndpoint
  8385 ;; This function uses a non-reentrant model
  8386 ;;
  8387                           
  8388                           
  8389                           ;psect for function _setSPI1sendDataManual
  8390  0D5C                     _setSPI1sendDataManual:	
  8391                           
  8392                           ;incstack = 0
  8393                           ; Regs used in _setSPI1sendDataManual: [wreg]
  8394                           ;setSPI1sendDataManual@data stored from wreg
  8395  0D5C  0020               	movlb	0	; select bank0
  8396  0D5D  00A0               	movwf	setSPI1sendDataManual@data
  8397                           
  8398                           ;spiControl.c: 103: SSP1BUF = data;
  8399  0D5E  0820               	movf	setSPI1sendDataManual@data,w
  8400  0D5F  0024               	movlb	4	; select bank4
  8401  0D60  0091               	movwf	17	;volatile
  8402  0D61  0008               	return
  8403  0D62                     __end_of_setSPI1sendDataManual:	
  8404                           
  8405                           	psect	text15
  8406  02D3                     __ptext15:	
  8407 ;; *************** function _TransLong256To255 *****************
  8408 ;; Defined at:
  8409 ;;		line 20 in file "D:/programdata/16F18346_Link_IC.X/util.c"
  8410 ;; Parameters:    Size  Location     Type
  8411 ;;  data            4   15[BANK0 ] long 
  8412 ;; Auto vars:     Size  Location     Type
  8413 ;;  j               2   27[BANK0 ] int 
  8414 ;;  pow             4   33[BANK0 ] long 
  8415 ;;  buf             4   39[BANK0 ] long 
  8416 ;;  mod             4   29[BANK0 ] long 
  8417 ;;  TransData       4   23[BANK0 ] long 
  8418 ;;  i               2   37[BANK0 ] int 
  8419 ;; Return value:  Size  Location     Type
  8420 ;;                  4   15[BANK0 ] long 
  8421 ;; Registers used:
  8422 ;;		wreg, status,2, status,0, pclath, cstack
  8423 ;; Tracked objects:
  8424 ;;		On entry : 0/0
  8425 ;;		On exit  : 0/0
  8426 ;;		Unchanged: 0/0
  8427 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8428 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8429 ;;      Locals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8430 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8431 ;;      Totals:         0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8432 ;;Total ram usage:       28 bytes
  8433 ;; Hardware stack levels used:    1
  8434 ;; Hardware stack levels required when called:    4
  8435 ;; This function calls:
  8436 ;;		___aldiv
  8437 ;;		___almod
  8438 ;;		___lmul
  8439 ;; This function is called by:
  8440 ;;		_Calibrate_download
  8441 ;;		_readCargo
  8442 ;; This function uses a non-reentrant model
  8443 ;;
  8444                           
  8445                           
  8446                           ;psect for function _TransLong256To255
  8447  02D3                     _TransLong256To255:	
  8448                           
  8449                           ;util.c: 22: long buf = 0;
  8450                           
  8451                           ;incstack = 0
  8452                           ; Regs used in _TransLong256To255: [wreg+status,2+status,0+pclath+cstack]
  8453  02D3  3000               	movlw	0
  8454  02D4  0020               	movlb	0	; select bank0
  8455  02D5  00CA               	movwf	TransLong256To255@buf+3
  8456  02D6  3000               	movlw	0
  8457  02D7  00C9               	movwf	TransLong256To255@buf+2
  8458  02D8  3000               	movlw	0
  8459  02D9  00C8               	movwf	TransLong256To255@buf+1
  8460  02DA  3000               	movlw	0
  8461  02DB  00C7               	movwf	TransLong256To255@buf
  8462                           
  8463                           ;util.c: 23: buf = data;
  8464  02DC  0832               	movf	TransLong256To255@data+3,w
  8465  02DD  00CA               	movwf	TransLong256To255@buf+3
  8466  02DE  0831               	movf	TransLong256To255@data+2,w
  8467  02DF  00C9               	movwf	TransLong256To255@buf+2
  8468  02E0  0830               	movf	TransLong256To255@data+1,w
  8469  02E1  00C8               	movwf	TransLong256To255@buf+1
  8470  02E2  082F               	movf	TransLong256To255@data,w
  8471  02E3  00C7               	movwf	TransLong256To255@buf
  8472                           
  8473                           ;util.c: 24: long TransData = 0;
  8474  02E4  3000               	movlw	0
  8475  02E5  00BA               	movwf	TransLong256To255@TransData+3
  8476  02E6  3000               	movlw	0
  8477  02E7  00B9               	movwf	TransLong256To255@TransData+2
  8478  02E8  3000               	movlw	0
  8479  02E9  00B8               	movwf	TransLong256To255@TransData+1
  8480  02EA  3000               	movlw	0
  8481  02EB  00B7               	movwf	TransLong256To255@TransData
  8482                           
  8483                           ;util.c: 25: long mod = 0;
  8484  02EC  3000               	movlw	0
  8485  02ED  00C0               	movwf	TransLong256To255@mod+3
  8486  02EE  3000               	movlw	0
  8487  02EF  00BF               	movwf	TransLong256To255@mod+2
  8488  02F0  3000               	movlw	0
  8489  02F1  00BE               	movwf	TransLong256To255@mod+1
  8490  02F2  3000               	movlw	0
  8491  02F3  00BD               	movwf	TransLong256To255@mod
  8492                           
  8493                           ;util.c: 26: int i = 0;
  8494  02F4  01C5               	clrf	TransLong256To255@i
  8495  02F5  01C6               	clrf	TransLong256To255@i+1
  8496  02F6                     l3399:	
  8497                           ;util.c: 27: while(1){
  8498                           
  8499                           
  8500                           ;util.c: 28: if(buf <= 255){
  8501  02F6  1BCA               	btfsc	TransLong256To255@buf+3,7
  8502  02F7  2B02               	goto	l3401
  8503  02F8  084A               	movf	TransLong256To255@buf+3,w
  8504  02F9  1D03               	btfss	3,2
  8505  02FA  2B0A               	goto	l3403
  8506  02FB  0849               	movf	TransLong256To255@buf+2,w
  8507  02FC  1D03               	btfss	3,2
  8508  02FD  2B0A               	goto	l3403
  8509  02FE  3001               	movlw	1
  8510  02FF  0248               	subwf	TransLong256To255@buf+1,w
  8511  0300  1803               	btfsc	3,0
  8512  0301  2B0A               	goto	l3403
  8513  0302                     l3401:	
  8514                           
  8515                           ;util.c: 29: mod = buf;
  8516  0302  084A               	movf	TransLong256To255@buf+3,w
  8517  0303  00C0               	movwf	TransLong256To255@mod+3
  8518  0304  0849               	movf	TransLong256To255@buf+2,w
  8519  0305  00BF               	movwf	TransLong256To255@mod+2
  8520  0306  0848               	movf	TransLong256To255@buf+1,w
  8521  0307  00BE               	movwf	TransLong256To255@mod+1
  8522  0308  0847               	movf	TransLong256To255@buf,w
  8523  0309  2B25               	goto	L29
  8524  030A                     l3403:	
  8525                           ;util.c: 30: }else{
  8526                           
  8527                           
  8528                           ;util.c: 31: mod = buf % 255;
  8529  030A  3000               	movlw	0
  8530  030B  00A3               	movwf	___almod@divisor+3
  8531  030C  3000               	movlw	0
  8532  030D  00A2               	movwf	___almod@divisor+2
  8533  030E  3000               	movlw	0
  8534  030F  00A1               	movwf	___almod@divisor+1
  8535  0310  30FF               	movlw	255
  8536  0311  00A0               	movwf	___almod@divisor
  8537  0312  084A               	movf	TransLong256To255@buf+3,w
  8538  0313  00A7               	movwf	___almod@dividend+3
  8539  0314  0849               	movf	TransLong256To255@buf+2,w
  8540  0315  00A6               	movwf	___almod@dividend+2
  8541  0316  0848               	movf	TransLong256To255@buf+1,w
  8542  0317  00A5               	movwf	___almod@dividend+1
  8543  0318  0847               	movf	TransLong256To255@buf,w
  8544  0319  00A4               	movwf	___almod@dividend
  8545  031A  3184  24FE  3182   	fcall	___almod
  8546  031D  0020               	movlb	0	; select bank0
  8547  031E  0823               	movf	?___almod+3,w
  8548  031F  00C0               	movwf	TransLong256To255@mod+3
  8549  0320  0822               	movf	?___almod+2,w
  8550  0321  00BF               	movwf	TransLong256To255@mod+2
  8551  0322  0821               	movf	?___almod+1,w
  8552  0323  00BE               	movwf	TransLong256To255@mod+1
  8553  0324  0820               	movf	?___almod,w
  8554  0325                     L29:	
  8555  0325  00BD               	movwf	TransLong256To255@mod
  8556                           
  8557                           ;util.c: 32: }
  8558                           ;util.c: 33: buf = (int)(buf / 255);
  8559  0326  3000               	movlw	0
  8560  0327  00A3               	movwf	___aldiv@divisor+3
  8561  0328  3000               	movlw	0
  8562  0329  00A2               	movwf	___aldiv@divisor+2
  8563  032A  3000               	movlw	0
  8564  032B  00A1               	movwf	___aldiv@divisor+1
  8565  032C  30FF               	movlw	255
  8566  032D  00A0               	movwf	___aldiv@divisor
  8567  032E  084A               	movf	TransLong256To255@buf+3,w
  8568  032F  00A7               	movwf	___aldiv@dividend+3
  8569  0330  0849               	movf	TransLong256To255@buf+2,w
  8570  0331  00A6               	movwf	___aldiv@dividend+2
  8571  0332  0848               	movf	TransLong256To255@buf+1,w
  8572  0333  00A5               	movwf	___aldiv@dividend+1
  8573  0334  0847               	movf	TransLong256To255@buf,w
  8574  0335  00A4               	movwf	___aldiv@dividend
  8575  0336  3184  247C  3182   	fcall	___aldiv
  8576  0339  0020               	movlb	0	; select bank0
  8577  033A  0820               	movf	?___aldiv,w
  8578  033B  00C7               	movwf	TransLong256To255@buf
  8579  033C  0821               	movf	?___aldiv+1,w
  8580  033D  00C8               	movwf	TransLong256To255@buf+1
  8581  033E  0D89               	rlf	9,f
  8582  033F  3B89               	subwfb	9,f
  8583  0340  0989               	comf	9,f
  8584  0341  00C9               	movwf	TransLong256To255@buf+2
  8585  0342  00CA               	movwf	TransLong256To255@buf+3
  8586                           
  8587                           ;util.c: 34: long pow = 1;
  8588  0343  3000               	movlw	0
  8589  0344  00C4               	movwf	TransLong256To255@pow+3
  8590  0345  3000               	movlw	0
  8591  0346  00C3               	movwf	TransLong256To255@pow+2
  8592  0347  3000               	movlw	0
  8593  0348  00C2               	movwf	TransLong256To255@pow+1
  8594  0349  3001               	movlw	1
  8595  034A  00C1               	movwf	TransLong256To255@pow
  8596                           
  8597                           ;util.c: 35: if(i > 0){
  8598  034B  0846               	movf	TransLong256To255@i+1,w
  8599  034C  3A80               	xorlw	128
  8600  034D  00B3               	movwf	??_TransLong256To255
  8601  034E  3080               	movlw	128
  8602  034F  0233               	subwf	??_TransLong256To255,w
  8603  0350  1D03               	skipz
  8604  0351  2B54               	goto	u2215
  8605  0352  3001               	movlw	1
  8606  0353  0245               	subwf	TransLong256To255@i,w
  8607  0354                     u2215:	
  8608  0354  1C03               	skipc
  8609  0355  2B82               	goto	l3417
  8610                           
  8611                           ;util.c: 36: for(int j = 0; j < i; j++){
  8612  0356  0020               	movlb	0	; select bank0
  8613  0357  01BB               	clrf	TransLong256To255@j
  8614  0358  01BC               	clrf	TransLong256To255@j+1
  8615  0359                     l3415:	
  8616  0359  083C               	movf	TransLong256To255@j+1,w
  8617  035A  3A80               	xorlw	128
  8618  035B  00B3               	movwf	??_TransLong256To255
  8619  035C  0846               	movf	TransLong256To255@i+1,w
  8620  035D  3A80               	xorlw	128
  8621  035E  0233               	subwf	??_TransLong256To255,w
  8622  035F  1D03               	skipz
  8623  0360  2B63               	goto	u2235
  8624  0361  0845               	movf	TransLong256To255@i,w
  8625  0362  023B               	subwf	TransLong256To255@j,w
  8626  0363                     u2235:	
  8627  0363  1803               	btfsc	3,0
  8628  0364  2B82               	goto	l3417
  8629                           
  8630                           ;util.c: 37: pow = pow * 256;
  8631  0365  0020               	movlb	0	; select bank0
  8632  0366  0841               	movf	TransLong256To255@pow,w
  8633  0367  00B3               	movwf	??_TransLong256To255
  8634  0368  0842               	movf	TransLong256To255@pow+1,w
  8635  0369  00B4               	movwf	??_TransLong256To255+1
  8636  036A  0843               	movf	TransLong256To255@pow+2,w
  8637  036B  00B5               	movwf	??_TransLong256To255+2
  8638  036C  0844               	movf	TransLong256To255@pow+3,w
  8639  036D  00B6               	movwf	??_TransLong256To255+3
  8640  036E  3008               	movlw	8
  8641  036F                     u2225:	
  8642  036F  35B3               	lslf	??_TransLong256To255,f
  8643  0370  0DB4               	rlf	??_TransLong256To255+1,f
  8644  0371  0DB5               	rlf	??_TransLong256To255+2,f
  8645  0372  0DB6               	rlf	??_TransLong256To255+3,f
  8646  0373  0B89               	decfsz	9,f
  8647  0374  2B6F               	goto	u2225
  8648  0375  0836               	movf	??_TransLong256To255+3,w
  8649  0376  00C4               	movwf	TransLong256To255@pow+3
  8650  0377  0835               	movf	??_TransLong256To255+2,w
  8651  0378  00C3               	movwf	TransLong256To255@pow+2
  8652  0379  0834               	movf	??_TransLong256To255+1,w
  8653  037A  00C2               	movwf	TransLong256To255@pow+1
  8654  037B  0833               	movf	??_TransLong256To255,w
  8655  037C  00C1               	movwf	TransLong256To255@pow
  8656  037D  3001               	movlw	1
  8657  037E  07BB               	addwf	TransLong256To255@j,f
  8658  037F  3000               	movlw	0
  8659  0380  3DBC               	addwfc	TransLong256To255@j+1,f
  8660  0381  2B59               	goto	l3415
  8661  0382                     l3417:	
  8662                           
  8663                           ;util.c: 38: }
  8664                           ;util.c: 39: }
  8665                           ;util.c: 40: TransData += mod * pow;
  8666  0382  0020               	movlb	0	; select bank0
  8667  0383  0840               	movf	TransLong256To255@mod+3,w
  8668  0384  00A3               	movwf	___lmul@multiplier+3
  8669  0385  083F               	movf	TransLong256To255@mod+2,w
  8670  0386  00A2               	movwf	___lmul@multiplier+2
  8671  0387  083E               	movf	TransLong256To255@mod+1,w
  8672  0388  00A1               	movwf	___lmul@multiplier+1
  8673  0389  083D               	movf	TransLong256To255@mod,w
  8674  038A  00A0               	movwf	___lmul@multiplier
  8675  038B  0844               	movf	TransLong256To255@pow+3,w
  8676  038C  00A7               	movwf	___lmul@multiplicand+3
  8677  038D  0843               	movf	TransLong256To255@pow+2,w
  8678  038E  00A6               	movwf	___lmul@multiplicand+2
  8679  038F  0842               	movf	TransLong256To255@pow+1,w
  8680  0390  00A5               	movwf	___lmul@multiplicand+1
  8681  0391  0841               	movf	TransLong256To255@pow,w
  8682  0392  00A4               	movwf	___lmul@multiplicand
  8683  0393  3187  27CE  3182   	fcall	___lmul
  8684  0396  0020               	movlb	0	; select bank0
  8685  0397  0820               	movf	?___lmul,w
  8686  0398  07B7               	addwf	TransLong256To255@TransData,f
  8687  0399  0821               	movf	?___lmul+1,w
  8688  039A  3DB8               	addwfc	TransLong256To255@TransData+1,f
  8689  039B  0822               	movf	?___lmul+2,w
  8690  039C  3DB9               	addwfc	TransLong256To255@TransData+2,f
  8691  039D  0823               	movf	?___lmul+3,w
  8692  039E  3DBA               	addwfc	TransLong256To255@TransData+3,f
  8693                           
  8694                           ;util.c: 41: if(buf <= 255){
  8695  039F  1BCA               	btfsc	TransLong256To255@buf+3,7
  8696  03A0  2BB0               	goto	l3425
  8697  03A1  084A               	movf	TransLong256To255@buf+3,w
  8698  03A2  1D03               	btfss	3,2
  8699  03A3  2BAB               	goto	l3423
  8700  03A4  0849               	movf	TransLong256To255@buf+2,w
  8701  03A5  1D03               	btfss	3,2
  8702  03A6  2BAB               	goto	l3423
  8703  03A7  3001               	movlw	1
  8704  03A8  0248               	subwf	TransLong256To255@buf+1,w
  8705  03A9  1C03               	btfss	3,0
  8706  03AA  2BB0               	goto	l3425
  8707  03AB                     l3423:	
  8708                           ;util.c: 42: break;
  8709                           
  8710                           
  8711                           ;util.c: 43: }
  8712                           ;util.c: 44: i++;
  8713  03AB  3001               	movlw	1
  8714  03AC  07C5               	addwf	TransLong256To255@i,f
  8715  03AD  3000               	movlw	0
  8716  03AE  3DC6               	addwfc	TransLong256To255@i+1,f
  8717  03AF  2AF6               	goto	l3399
  8718  03B0                     l3425:	
  8719                           
  8720                           ;util.c: 45: }
  8721                           ;util.c: 46: return TransData;
  8722  03B0  083A               	movf	TransLong256To255@TransData+3,w
  8723  03B1  00B2               	movwf	?_TransLong256To255+3
  8724  03B2  0839               	movf	TransLong256To255@TransData+2,w
  8725  03B3  00B1               	movwf	?_TransLong256To255+2
  8726  03B4  0838               	movf	TransLong256To255@TransData+1,w
  8727  03B5  00B0               	movwf	?_TransLong256To255+1
  8728  03B6  0837               	movf	TransLong256To255@TransData,w
  8729  03B7  00AF               	movwf	?_TransLong256To255
  8730  03B8  0008               	return
  8731  03B9                     __end_of_TransLong256To255:	
  8732                           
  8733                           	psect	text16
  8734  07CE                     __ptext16:	
  8735 ;; *************** function ___lmul *****************
  8736 ;; Defined at:
  8737 ;;		line 15 in file "E:\microchip\xc8\v1.45\sources\common\Umul32.c"
  8738 ;; Parameters:    Size  Location     Type
  8739 ;;  multiplier      4    0[BANK0 ] unsigned long 
  8740 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  8741 ;; Auto vars:     Size  Location     Type
  8742 ;;  product         4    8[BANK0 ] unsigned long 
  8743 ;; Return value:  Size  Location     Type
  8744 ;;                  4    0[BANK0 ] unsigned long 
  8745 ;; Registers used:
  8746 ;;		wreg, status,2, status,0
  8747 ;; Tracked objects:
  8748 ;;		On entry : 0/0
  8749 ;;		On exit  : 0/0
  8750 ;;		Unchanged: 0/0
  8751 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8752 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8753 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8754 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8755 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8756 ;;Total ram usage:       12 bytes
  8757 ;; Hardware stack levels used:    1
  8758 ;; Hardware stack levels required when called:    3
  8759 ;; This function calls:
  8760 ;;		Nothing
  8761 ;; This function is called by:
  8762 ;;		_TransLong256To255
  8763 ;; This function uses a non-reentrant model
  8764 ;;
  8765                           
  8766                           
  8767                           ;psect for function ___lmul
  8768  07CE                     ___lmul:	
  8769                           
  8770                           ;incstack = 0
  8771                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  8772  07CE  3000               	movlw	0
  8773  07CF  0020               	movlb	0	; select bank0
  8774  07D0  00AB               	movwf	___lmul@product+3
  8775  07D1  3000               	movlw	0
  8776  07D2  00AA               	movwf	___lmul@product+2
  8777  07D3  3000               	movlw	0
  8778  07D4  00A9               	movwf	___lmul@product+1
  8779  07D5  3000               	movlw	0
  8780  07D6  00A8               	movwf	___lmul@product
  8781  07D7                     l3291:	
  8782  07D7  1C20               	btfss	___lmul@multiplier,0
  8783  07D8  2FE1               	goto	l3295
  8784  07D9  0824               	movf	___lmul@multiplicand,w
  8785  07DA  07A8               	addwf	___lmul@product,f
  8786  07DB  0825               	movf	___lmul@multiplicand+1,w
  8787  07DC  3DA9               	addwfc	___lmul@product+1,f
  8788  07DD  0826               	movf	___lmul@multiplicand+2,w
  8789  07DE  3DAA               	addwfc	___lmul@product+2,f
  8790  07DF  0827               	movf	___lmul@multiplicand+3,w
  8791  07E0  3DAB               	addwfc	___lmul@product+3,f
  8792  07E1                     l3295:	
  8793  07E1  3001               	movlw	1
  8794  07E2                     u1975:	
  8795  07E2  35A4               	lslf	___lmul@multiplicand,f
  8796  07E3  0DA5               	rlf	___lmul@multiplicand+1,f
  8797  07E4  0DA6               	rlf	___lmul@multiplicand+2,f
  8798  07E5  0DA7               	rlf	___lmul@multiplicand+3,f
  8799  07E6  0B89               	decfsz	9,f
  8800  07E7  2FE2               	goto	u1975
  8801  07E8  3001               	movlw	1
  8802  07E9                     u1985:	
  8803  07E9  36A3               	lsrf	___lmul@multiplier+3,f
  8804  07EA  0CA2               	rrf	___lmul@multiplier+2,f
  8805  07EB  0CA1               	rrf	___lmul@multiplier+1,f
  8806  07EC  0CA0               	rrf	___lmul@multiplier,f
  8807  07ED  0B89               	decfsz	9,f
  8808  07EE  2FE9               	goto	u1985
  8809  07EF  0823               	movf	___lmul@multiplier+3,w
  8810  07F0  0422               	iorwf	___lmul@multiplier+2,w
  8811  07F1  0421               	iorwf	___lmul@multiplier+1,w
  8812  07F2  0420               	iorwf	___lmul@multiplier,w
  8813  07F3  1D03               	skipz
  8814  07F4  2FD7               	goto	l3291
  8815  07F5  082B               	movf	___lmul@product+3,w
  8816  07F6  00A3               	movwf	?___lmul+3
  8817  07F7  082A               	movf	___lmul@product+2,w
  8818  07F8  00A2               	movwf	?___lmul+2
  8819  07F9  0829               	movf	___lmul@product+1,w
  8820  07FA  00A1               	movwf	?___lmul+1
  8821  07FB  0828               	movf	___lmul@product,w
  8822  07FC  00A0               	movwf	?___lmul
  8823  07FD  0008               	return
  8824  07FE                     __end_of___lmul:	
  8825                           
  8826                           	psect	text17
  8827  04FE                     __ptext17:	
  8828 ;; *************** function ___almod *****************
  8829 ;; Defined at:
  8830 ;;		line 5 in file "E:\microchip\xc8\v1.45\sources\common\almod.c"
  8831 ;; Parameters:    Size  Location     Type
  8832 ;;  divisor         4    0[BANK0 ] long 
  8833 ;;  dividend        4    4[BANK0 ] long 
  8834 ;; Auto vars:     Size  Location     Type
  8835 ;;  sign            1   10[BANK0 ] unsigned char 
  8836 ;;  counter         1    9[BANK0 ] unsigned char 
  8837 ;; Return value:  Size  Location     Type
  8838 ;;                  4    0[BANK0 ] long 
  8839 ;; Registers used:
  8840 ;;		wreg, status,2, status,0
  8841 ;; Tracked objects:
  8842 ;;		On entry : 0/0
  8843 ;;		On exit  : 0/0
  8844 ;;		Unchanged: 0/0
  8845 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8846 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8847 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8848 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8849 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8850 ;;Total ram usage:       11 bytes
  8851 ;; Hardware stack levels used:    1
  8852 ;; Hardware stack levels required when called:    3
  8853 ;; This function calls:
  8854 ;;		Nothing
  8855 ;; This function is called by:
  8856 ;;		_TransLong256To255
  8857 ;; This function uses a non-reentrant model
  8858 ;;
  8859                           
  8860                           
  8861                           ;psect for function ___almod
  8862  04FE                     ___almod:	
  8863                           
  8864                           ;incstack = 0
  8865                           ; Regs used in ___almod: [wreg+status,2+status,0]
  8866  04FE  0020               	movlb	0	; select bank0
  8867  04FF  01AA               	clrf	___almod@sign
  8868  0500  1FA7               	btfss	___almod@dividend+3,7
  8869  0501  2D0F               	goto	l893
  8870  0502  09A4               	comf	___almod@dividend,f
  8871  0503  09A5               	comf	___almod@dividend+1,f
  8872  0504  09A6               	comf	___almod@dividend+2,f
  8873  0505  09A7               	comf	___almod@dividend+3,f
  8874  0506  0AA4               	incf	___almod@dividend,f
  8875  0507  1903               	skipnz
  8876  0508  0AA5               	incf	___almod@dividend+1,f
  8877  0509  1903               	skipnz
  8878  050A  0AA6               	incf	___almod@dividend+2,f
  8879  050B  1903               	skipnz
  8880  050C  0AA7               	incf	___almod@dividend+3,f
  8881  050D  01AA               	clrf	___almod@sign
  8882  050E  0AAA               	incf	___almod@sign,f
  8883  050F                     l893:	
  8884  050F  1FA3               	btfss	___almod@divisor+3,7
  8885  0510  2D1C               	goto	l3351
  8886  0511  09A0               	comf	___almod@divisor,f
  8887  0512  09A1               	comf	___almod@divisor+1,f
  8888  0513  09A2               	comf	___almod@divisor+2,f
  8889  0514  09A3               	comf	___almod@divisor+3,f
  8890  0515  0AA0               	incf	___almod@divisor,f
  8891  0516  1903               	skipnz
  8892  0517  0AA1               	incf	___almod@divisor+1,f
  8893  0518  1903               	skipnz
  8894  0519  0AA2               	incf	___almod@divisor+2,f
  8895  051A  1903               	skipnz
  8896  051B  0AA3               	incf	___almod@divisor+3,f
  8897  051C                     l3351:	
  8898  051C  0823               	movf	___almod@divisor+3,w
  8899  051D  0422               	iorwf	___almod@divisor+2,w
  8900  051E  0421               	iorwf	___almod@divisor+1,w
  8901  051F  0420               	iorwf	___almod@divisor,w
  8902  0520  1903               	skipnz
  8903  0521  2D55               	goto	l3367
  8904  0522  01A9               	clrf	___almod@counter
  8905  0523  0AA9               	incf	___almod@counter,f
  8906  0524                     l3357:	
  8907  0524  1BA3               	btfsc	___almod@divisor+3,7
  8908  0525  2D32               	goto	l3359
  8909  0526  3001               	movlw	1
  8910  0527                     u2135:	
  8911  0527  35A0               	lslf	___almod@divisor,f
  8912  0528  0DA1               	rlf	___almod@divisor+1,f
  8913  0529  0DA2               	rlf	___almod@divisor+2,f
  8914  052A  0DA3               	rlf	___almod@divisor+3,f
  8915  052B  0B89               	decfsz	9,f
  8916  052C  2D27               	goto	u2135
  8917  052D  3001               	movlw	1
  8918  052E  00A8               	movwf	??___almod
  8919  052F  0828               	movf	??___almod,w
  8920  0530  07A9               	addwf	___almod@counter,f
  8921  0531  2D24               	goto	l3357
  8922  0532                     l3359:	
  8923  0532  0823               	movf	___almod@divisor+3,w
  8924  0533  0227               	subwf	___almod@dividend+3,w
  8925  0534  1D03               	skipz
  8926  0535  2D40               	goto	u2155
  8927  0536  0822               	movf	___almod@divisor+2,w
  8928  0537  0226               	subwf	___almod@dividend+2,w
  8929  0538  1D03               	skipz
  8930  0539  2D40               	goto	u2155
  8931  053A  0821               	movf	___almod@divisor+1,w
  8932  053B  0225               	subwf	___almod@dividend+1,w
  8933  053C  1D03               	skipz
  8934  053D  2D40               	goto	u2155
  8935  053E  0820               	movf	___almod@divisor,w
  8936  053F  0224               	subwf	___almod@dividend,w
  8937  0540                     u2155:	
  8938  0540  1C03               	skipc
  8939  0541  2D4A               	goto	l3363
  8940  0542  0820               	movf	___almod@divisor,w
  8941  0543  02A4               	subwf	___almod@dividend,f
  8942  0544  0821               	movf	___almod@divisor+1,w
  8943  0545  3BA5               	subwfb	___almod@dividend+1,f
  8944  0546  0822               	movf	___almod@divisor+2,w
  8945  0547  3BA6               	subwfb	___almod@dividend+2,f
  8946  0548  0823               	movf	___almod@divisor+3,w
  8947  0549  3BA7               	subwfb	___almod@dividend+3,f
  8948  054A                     l3363:	
  8949  054A  3001               	movlw	1
  8950  054B                     u2165:	
  8951  054B  36A3               	lsrf	___almod@divisor+3,f
  8952  054C  0CA2               	rrf	___almod@divisor+2,f
  8953  054D  0CA1               	rrf	___almod@divisor+1,f
  8954  054E  0CA0               	rrf	___almod@divisor,f
  8955  054F  0B89               	decfsz	9,f
  8956  0550  2D4B               	goto	u2165
  8957  0551  3001               	movlw	1
  8958  0552  02A9               	subwf	___almod@counter,f
  8959  0553  1D03               	btfss	3,2
  8960  0554  2D32               	goto	l3359
  8961  0555                     l3367:	
  8962  0555  082A               	movf	___almod@sign,w
  8963  0556  1903               	btfsc	3,2
  8964  0557  2D63               	goto	l3371
  8965  0558  09A4               	comf	___almod@dividend,f
  8966  0559  09A5               	comf	___almod@dividend+1,f
  8967  055A  09A6               	comf	___almod@dividend+2,f
  8968  055B  09A7               	comf	___almod@dividend+3,f
  8969  055C  0AA4               	incf	___almod@dividend,f
  8970  055D  1903               	skipnz
  8971  055E  0AA5               	incf	___almod@dividend+1,f
  8972  055F  1903               	skipnz
  8973  0560  0AA6               	incf	___almod@dividend+2,f
  8974  0561  1903               	skipnz
  8975  0562  0AA7               	incf	___almod@dividend+3,f
  8976  0563                     l3371:	
  8977  0563  0827               	movf	___almod@dividend+3,w
  8978  0564  00A3               	movwf	?___almod+3
  8979  0565  0826               	movf	___almod@dividend+2,w
  8980  0566  00A2               	movwf	?___almod+2
  8981  0567  0825               	movf	___almod@dividend+1,w
  8982  0568  00A1               	movwf	?___almod+1
  8983  0569  0824               	movf	___almod@dividend,w
  8984  056A  00A0               	movwf	?___almod
  8985  056B  0008               	return
  8986  056C                     __end_of___almod:	
  8987                           
  8988                           	psect	text18
  8989  047C                     __ptext18:	
  8990 ;; *************** function ___aldiv *****************
  8991 ;; Defined at:
  8992 ;;		line 6 in file "E:\microchip\xc8\v1.45\sources\common\aldiv.c"
  8993 ;; Parameters:    Size  Location     Type
  8994 ;;  divisor         4    0[BANK0 ] long 
  8995 ;;  dividend        4    4[BANK0 ] long 
  8996 ;; Auto vars:     Size  Location     Type
  8997 ;;  quotient        4   11[BANK0 ] long 
  8998 ;;  sign            1   10[BANK0 ] unsigned char 
  8999 ;;  counter         1    9[BANK0 ] unsigned char 
  9000 ;; Return value:  Size  Location     Type
  9001 ;;                  4    0[BANK0 ] long 
  9002 ;; Registers used:
  9003 ;;		wreg, status,2, status,0
  9004 ;; Tracked objects:
  9005 ;;		On entry : 0/0
  9006 ;;		On exit  : 0/0
  9007 ;;		Unchanged: 0/0
  9008 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9009 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9010 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9011 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9012 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9013 ;;Total ram usage:       15 bytes
  9014 ;; Hardware stack levels used:    1
  9015 ;; Hardware stack levels required when called:    3
  9016 ;; This function calls:
  9017 ;;		Nothing
  9018 ;; This function is called by:
  9019 ;;		_TransLong256To255
  9020 ;; This function uses a non-reentrant model
  9021 ;;
  9022                           
  9023                           
  9024                           ;psect for function ___aldiv
  9025  047C                     ___aldiv:	
  9026                           
  9027                           ;incstack = 0
  9028                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  9029  047C  0020               	movlb	0	; select bank0
  9030  047D  01AA               	clrf	___aldiv@sign
  9031  047E  1FA3               	btfss	___aldiv@divisor+3,7
  9032  047F  2C8D               	goto	l880
  9033  0480  09A0               	comf	___aldiv@divisor,f
  9034  0481  09A1               	comf	___aldiv@divisor+1,f
  9035  0482  09A2               	comf	___aldiv@divisor+2,f
  9036  0483  09A3               	comf	___aldiv@divisor+3,f
  9037  0484  0AA0               	incf	___aldiv@divisor,f
  9038  0485  1903               	skipnz
  9039  0486  0AA1               	incf	___aldiv@divisor+1,f
  9040  0487  1903               	skipnz
  9041  0488  0AA2               	incf	___aldiv@divisor+2,f
  9042  0489  1903               	skipnz
  9043  048A  0AA3               	incf	___aldiv@divisor+3,f
  9044  048B  01AA               	clrf	___aldiv@sign
  9045  048C  0AAA               	incf	___aldiv@sign,f
  9046  048D                     l880:	
  9047  048D  1FA7               	btfss	___aldiv@dividend+3,7
  9048  048E  2C9E               	goto	l3313
  9049  048F  09A4               	comf	___aldiv@dividend,f
  9050  0490  09A5               	comf	___aldiv@dividend+1,f
  9051  0491  09A6               	comf	___aldiv@dividend+2,f
  9052  0492  09A7               	comf	___aldiv@dividend+3,f
  9053  0493  0AA4               	incf	___aldiv@dividend,f
  9054  0494  1903               	skipnz
  9055  0495  0AA5               	incf	___aldiv@dividend+1,f
  9056  0496  1903               	skipnz
  9057  0497  0AA6               	incf	___aldiv@dividend+2,f
  9058  0498  1903               	skipnz
  9059  0499  0AA7               	incf	___aldiv@dividend+3,f
  9060  049A  3001               	movlw	1
  9061  049B  00A8               	movwf	??___aldiv
  9062  049C  0828               	movf	??___aldiv,w
  9063  049D  06AA               	xorwf	___aldiv@sign,f
  9064  049E                     l3313:	
  9065  049E  3000               	movlw	0
  9066  049F  00AE               	movwf	___aldiv@quotient+3
  9067  04A0  3000               	movlw	0
  9068  04A1  00AD               	movwf	___aldiv@quotient+2
  9069  04A2  3000               	movlw	0
  9070  04A3  00AC               	movwf	___aldiv@quotient+1
  9071  04A4  3000               	movlw	0
  9072  04A5  00AB               	movwf	___aldiv@quotient
  9073  04A6  0823               	movf	___aldiv@divisor+3,w
  9074  04A7  0422               	iorwf	___aldiv@divisor+2,w
  9075  04A8  0421               	iorwf	___aldiv@divisor+1,w
  9076  04A9  0420               	iorwf	___aldiv@divisor,w
  9077  04AA  1903               	skipnz
  9078  04AB  2CE7               	goto	l3335
  9079  04AC  01A9               	clrf	___aldiv@counter
  9080  04AD  0AA9               	incf	___aldiv@counter,f
  9081  04AE                     l3321:	
  9082  04AE  1BA3               	btfsc	___aldiv@divisor+3,7
  9083  04AF  2CBC               	goto	l3323
  9084  04B0  3001               	movlw	1
  9085  04B1                     u2035:	
  9086  04B1  35A0               	lslf	___aldiv@divisor,f
  9087  04B2  0DA1               	rlf	___aldiv@divisor+1,f
  9088  04B3  0DA2               	rlf	___aldiv@divisor+2,f
  9089  04B4  0DA3               	rlf	___aldiv@divisor+3,f
  9090  04B5  0B89               	decfsz	9,f
  9091  04B6  2CB1               	goto	u2035
  9092  04B7  3001               	movlw	1
  9093  04B8  00A8               	movwf	??___aldiv
  9094  04B9  0828               	movf	??___aldiv,w
  9095  04BA  07A9               	addwf	___aldiv@counter,f
  9096  04BB  2CAE               	goto	l3321
  9097  04BC                     l3323:	
  9098  04BC  3001               	movlw	1
  9099  04BD                     u2055:	
  9100  04BD  35AB               	lslf	___aldiv@quotient,f
  9101  04BE  0DAC               	rlf	___aldiv@quotient+1,f
  9102  04BF  0DAD               	rlf	___aldiv@quotient+2,f
  9103  04C0  0DAE               	rlf	___aldiv@quotient+3,f
  9104  04C1  0B89               	decfsz	9,f
  9105  04C2  2CBD               	goto	u2055
  9106  04C3  0823               	movf	___aldiv@divisor+3,w
  9107  04C4  0227               	subwf	___aldiv@dividend+3,w
  9108  04C5  1D03               	skipz
  9109  04C6  2CD1               	goto	u2065
  9110  04C7  0822               	movf	___aldiv@divisor+2,w
  9111  04C8  0226               	subwf	___aldiv@dividend+2,w
  9112  04C9  1D03               	skipz
  9113  04CA  2CD1               	goto	u2065
  9114  04CB  0821               	movf	___aldiv@divisor+1,w
  9115  04CC  0225               	subwf	___aldiv@dividend+1,w
  9116  04CD  1D03               	skipz
  9117  04CE  2CD1               	goto	u2065
  9118  04CF  0820               	movf	___aldiv@divisor,w
  9119  04D0  0224               	subwf	___aldiv@dividend,w
  9120  04D1                     u2065:	
  9121  04D1  1C03               	skipc
  9122  04D2  2CDC               	goto	l3331
  9123  04D3  0820               	movf	___aldiv@divisor,w
  9124  04D4  02A4               	subwf	___aldiv@dividend,f
  9125  04D5  0821               	movf	___aldiv@divisor+1,w
  9126  04D6  3BA5               	subwfb	___aldiv@dividend+1,f
  9127  04D7  0822               	movf	___aldiv@divisor+2,w
  9128  04D8  3BA6               	subwfb	___aldiv@dividend+2,f
  9129  04D9  0823               	movf	___aldiv@divisor+3,w
  9130  04DA  3BA7               	subwfb	___aldiv@dividend+3,f
  9131  04DB  142B               	bsf	___aldiv@quotient,0
  9132  04DC                     l3331:	
  9133  04DC  3001               	movlw	1
  9134  04DD                     u2075:	
  9135  04DD  36A3               	lsrf	___aldiv@divisor+3,f
  9136  04DE  0CA2               	rrf	___aldiv@divisor+2,f
  9137  04DF  0CA1               	rrf	___aldiv@divisor+1,f
  9138  04E0  0CA0               	rrf	___aldiv@divisor,f
  9139  04E1  0B89               	decfsz	9,f
  9140  04E2  2CDD               	goto	u2075
  9141  04E3  3001               	movlw	1
  9142  04E4  02A9               	subwf	___aldiv@counter,f
  9143  04E5  1D03               	btfss	3,2
  9144  04E6  2CBC               	goto	l3323
  9145  04E7                     l3335:	
  9146  04E7  082A               	movf	___aldiv@sign,w
  9147  04E8  1903               	btfsc	3,2
  9148  04E9  2CF5               	goto	l3339
  9149  04EA  09AB               	comf	___aldiv@quotient,f
  9150  04EB  09AC               	comf	___aldiv@quotient+1,f
  9151  04EC  09AD               	comf	___aldiv@quotient+2,f
  9152  04ED  09AE               	comf	___aldiv@quotient+3,f
  9153  04EE  0AAB               	incf	___aldiv@quotient,f
  9154  04EF  1903               	skipnz
  9155  04F0  0AAC               	incf	___aldiv@quotient+1,f
  9156  04F1  1903               	skipnz
  9157  04F2  0AAD               	incf	___aldiv@quotient+2,f
  9158  04F3  1903               	skipnz
  9159  04F4  0AAE               	incf	___aldiv@quotient+3,f
  9160  04F5                     l3339:	
  9161  04F5  082E               	movf	___aldiv@quotient+3,w
  9162  04F6  00A3               	movwf	?___aldiv+3
  9163  04F7  082D               	movf	___aldiv@quotient+2,w
  9164  04F8  00A2               	movwf	?___aldiv+2
  9165  04F9  082C               	movf	___aldiv@quotient+1,w
  9166  04FA  00A1               	movwf	?___aldiv+1
  9167  04FB  082B               	movf	___aldiv@quotient,w
  9168  04FC  00A0               	movwf	?___aldiv
  9169  04FD  0008               	return
  9170  04FE                     __end_of___aldiv:	
  9171                           
  9172                           	psect	text19
  9173  0F33                     __ptext19:	
  9174 ;; *************** function _InitCalibrate *****************
  9175 ;; Defined at:
  9176 ;;		line 53 in file "D:/programdata/16F18346_Link_IC.X/calibrate_mode.c"
  9177 ;; Parameters:    Size  Location     Type
  9178 ;;		None
  9179 ;; Auto vars:     Size  Location     Type
  9180 ;;  cargoData      16   18[BANK0 ] struct .
  9181 ;; Return value:  Size  Location     Type
  9182 ;;                  1    wreg      void 
  9183 ;; Registers used:
  9184 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9185 ;; Tracked objects:
  9186 ;;		On entry : 0/0
  9187 ;;		On exit  : 0/0
  9188 ;;		Unchanged: 0/0
  9189 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9190 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9191 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9192 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9193 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9194 ;;Total ram usage:       17 bytes
  9195 ;; Hardware stack levels used:    1
  9196 ;; Hardware stack levels required when called:    4
  9197 ;; This function calls:
  9198 ;;		_getCargoData
  9199 ;; This function is called by:
  9200 ;;		_main
  9201 ;;		_Calibrate_download
  9202 ;; This function uses a non-reentrant model
  9203 ;;
  9204                           
  9205                           
  9206                           ;psect for function _InitCalibrate
  9207  0F33                     _InitCalibrate:	
  9208                           
  9209                           ;calibrate_mode.c: 54: isEndPointTrig = 1;
  9210                           
  9211                           ;incstack = 0
  9212                           ; Regs used in _InitCalibrate: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9213  0F33  147B               	bsf	_isEndPointTrig/(0+8),_isEndPointTrig& (0+7)
  9214                           
  9215                           ;calibrate_mode.c: 55: calibdata.cargoLength = 0xFFFF;
  9216  0F34  30FF               	movlw	255
  9217  0F35  0021               	movlb	1	; select bank1
  9218  0F36  00B2               	movwf	_calibdata^(0+128)
  9219  0F37  30FF               	movlw	255
  9220  0F38  00B3               	movwf	(_calibdata^(0+128)+1)
  9221                           
  9222                           ;calibrate_mode.c: 56: calibdata.index = 0x00;
  9223  0F39  01B5               	clrf	(_calibdata^(0+128)+3)
  9224                           
  9225                           ;calibrate_mode.c: 57: calibdata.command =0x00;
  9226  0F3A  01B4               	clrf	(_calibdata^(0+128)+2)
  9227                           
  9228                           ;calibrate_mode.c: 58: calibdata.WorkingCount = 0;
  9229  0F3B  3000               	movlw	0
  9230  0F3C  00B9               	movwf	((_calibdata+3)^(0+128)+4)
  9231  0F3D  3000               	movlw	0
  9232  0F3E  00B8               	movwf	((_calibdata+2)^(0+128)+4)
  9233  0F3F  3000               	movlw	0
  9234  0F40  00B7               	movwf	((_calibdata+1)^(0+128)+4)
  9235  0F41  3000               	movlw	0
  9236  0F42  00B6               	movwf	(_calibdata^(0+128)+4)
  9237                           
  9238                           ;calibrate_mode.c: 59: CargoData cargoData = getCargoData();
  9239  0F43  318D  25D2  318F   	fcall	_getCargoData
  9240  0F46  0020               	movlb	0	; select bank0
  9241  0F47  3020               	movlw	low ?_getCargoData
  9242  0F48  0086               	movwf	6
  9243  0F49  3000               	movlw	high ?_getCargoData
  9244  0F4A  0087               	movwf	7
  9245  0F4B  3032               	movlw	low InitCalibrate@cargoData
  9246  0F4C  0084               	movwf	4
  9247  0F4D  3000               	movlw	high InitCalibrate@cargoData
  9248  0F4E  0085               	movwf	5
  9249  0F4F  3010               	movlw	16
  9250  0F50  00B1               	movwf	??_InitCalibrate
  9251  0F51                     u2190:	
  9252  0F51  0016               	moviw fsr1++
  9253  0F52  001A               	movwi fsr0++
  9254  0F53  0BB1               	decfsz	??_InitCalibrate,f
  9255  0F54  2F51               	goto	u2190
  9256                           
  9257                           ;calibrate_mode.c: 60: cargoData.linkAngleTo = 0;
  9258  0F55  01B7               	clrf	InitCalibrate@cargoData+5
  9259  0F56  01B8               	clrf	InitCalibrate@cargoData+6
  9260                           
  9261                           ;calibrate_mode.c: 61: linkInfo.endpoint = 0;
  9262  0F57  0021               	movlb	1	; select bank1
  9263  0F58  01C0               	clrf	(_linkInfo^(0+128)+5)
  9264                           
  9265                           ;calibrate_mode.c: 62: linkInfo.My_address = 0;
  9266  0F59  01BB               	clrf	_linkInfo^(0+128)
  9267                           
  9268                           ;calibrate_mode.c: 63: countabuf = 0;
  9269  0F5A  0020               	movlb	0	; select bank0
  9270  0F5B  01E9               	clrf	_countabuf
  9271  0F5C  01EA               	clrf	_countabuf+1
  9272  0F5D  0008               	return
  9273  0F5E                     __end_of_InitCalibrate:	
  9274                           
  9275                           	psect	text20
  9276  0DD2                     __ptext20:	
  9277 ;; *************** function _getCargoData *****************
  9278 ;; Defined at:
  9279 ;;		line 8 in file "struct.c"
  9280 ;; Parameters:    Size  Location     Type
  9281 ;;		None
  9282 ;; Auto vars:     Size  Location     Type
  9283 ;;		None
  9284 ;; Return value:  Size  Location     Type
  9285 ;;                  16    0[BANK0 ] struct .
  9286 ;; Registers used:
  9287 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  9288 ;; Tracked objects:
  9289 ;;		On entry : 0/0
  9290 ;;		On exit  : 0/0
  9291 ;;		Unchanged: 0/0
  9292 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9293 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9294 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9295 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9296 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9297 ;;Total ram usage:       17 bytes
  9298 ;; Hardware stack levels used:    1
  9299 ;; Hardware stack levels required when called:    3
  9300 ;; This function calls:
  9301 ;;		Nothing
  9302 ;; This function is called by:
  9303 ;;		_InitCalibrate
  9304 ;;		_readCargo
  9305 ;;		_EEPROM_download
  9306 ;;		_setCargo_Angle
  9307 ;; This function uses a non-reentrant model
  9308 ;;
  9309                           
  9310                           
  9311                           ;psect for function _getCargoData
  9312  0DD2                     _getCargoData:	
  9313                           
  9314                           ;struct.c: 9: return cargoData;
  9315                           
  9316                           ;incstack = 0
  9317                           ; Regs used in _getCargoData: [wreg-fsr1h+status,2+status,0]
  9318  0DD2  3059               	movlw	low _cargoData
  9319  0DD3  0086               	movwf	6
  9320  0DD4  3000               	movlw	high _cargoData
  9321  0DD5  0087               	movwf	7
  9322  0DD6  3020               	movlw	low ?_getCargoData
  9323  0DD7  0084               	movwf	4
  9324  0DD8  3000               	movlw	high ?_getCargoData
  9325  0DD9  0085               	movwf	5
  9326  0DDA  3010               	movlw	16
  9327  0DDB  0020               	movlb	0	; select bank0
  9328  0DDC  00B0               	movwf	??_getCargoData
  9329  0DDD                     u1950:	
  9330  0DDD  0016               	moviw fsr1++
  9331  0DDE  001A               	movwi fsr0++
  9332  0DDF  0BB0               	decfsz	??_getCargoData,f
  9333  0DE0  2DDD               	goto	u1950
  9334  0DE1  0008               	return
  9335  0DE2                     __end_of_getCargoData:	
  9336                           
  9337                           	psect	text21
  9338  074B                     __ptext21:	
  9339 ;; *************** function _read_train *****************
  9340 ;; Defined at:
  9341 ;;		line 204 in file "D:/programdata/16F18346_Link_IC.X/main.c"
  9342 ;; Parameters:    Size  Location     Type
  9343 ;;		None
  9344 ;; Auto vars:     Size  Location     Type
  9345 ;;  bufint          2    2[BANK0 ] unsigned int 
  9346 ;; Return value:  Size  Location     Type
  9347 ;;                  1    wreg      void 
  9348 ;; Registers used:
  9349 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  9350 ;; Tracked objects:
  9351 ;;		On entry : 0/0
  9352 ;;		On exit  : 0/0
  9353 ;;		Unchanged: 0/0
  9354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9355 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9356 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9357 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9358 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9359 ;;Total ram usage:        4 bytes
  9360 ;; Hardware stack levels used:    1
  9361 ;; Hardware stack levels required when called:    3
  9362 ;; This function calls:
  9363 ;;		Nothing
  9364 ;; This function is called by:
  9365 ;;		_main
  9366 ;; This function uses a non-reentrant model
  9367 ;;
  9368                           
  9369                           
  9370                           ;psect for function _read_train
  9371  074B                     _read_train:	
  9372                           
  9373                           ;main.c: 205: unsigned int bufint = spi1_Read_data;
  9374                           
  9375                           ;incstack = 0
  9376                           ; Regs used in _read_train: [wreg-fsr0h+status,2+status,0]
  9377  074B  087C               	movf	_spi1_Read_data,w
  9378  074C  0020               	movlb	0	; select bank0
  9379  074D  00A0               	movwf	??_read_train
  9380  074E  01A1               	clrf	??_read_train+1
  9381  074F  0820               	movf	??_read_train,w
  9382  0750  00A2               	movwf	read_train@bufint
  9383  0751  0821               	movf	??_read_train+1,w
  9384  0752  00A3               	movwf	read_train@bufint+1
  9385                           
  9386                           ;main.c: 206: switch(trainPos){
  9387  0753  2F7C               	goto	l3925
  9388  0754                     l3915:	
  9389                           ;main.c: 207: case 1:
  9390                           
  9391                           
  9392                           ;main.c: 208: st_dataLength = (bufint << 8 | 0x00FF);
  9393  0754  0020               	movlb	0	; select bank0
  9394  0755  0822               	movf	read_train@bufint,w
  9395  0756  00A1               	movwf	??_read_train+1
  9396  0757  01A0               	clrf	??_read_train
  9397  0758  30FF               	movlw	255
  9398  0759  0420               	iorwf	??_read_train,w
  9399  075A  0021               	movlb	1	; select bank1
  9400  075B  00E2               	movwf	_st_dataLength^(0+128)
  9401  075C  3000               	movlw	0
  9402  075D  0020               	movlb	0	; select bank0
  9403  075E  0421               	iorwf	??_read_train+1,w
  9404  075F  0021               	movlb	1	; select bank1
  9405  0760  00E3               	movwf	(_st_dataLength+1)^(0+128)
  9406                           
  9407                           ;main.c: 209: break;
  9408  0761  0008               	return
  9409  0762                     l3917:	
  9410                           ;main.c: 210: case 2:
  9411                           
  9412                           
  9413                           ;main.c: 211: st_dataLength = st_dataLength & (bufint | 0xFF00);
  9414  0762  3000               	movlw	0
  9415  0763  0020               	movlb	0	; select bank0
  9416  0764  0422               	iorwf	read_train@bufint,w
  9417  0765  00A0               	movwf	??_read_train
  9418  0766  30FF               	movlw	255
  9419  0767  0423               	iorwf	read_train@bufint+1,w
  9420  0768  00A1               	movwf	??_read_train+1
  9421  0769  0021               	movlb	1	; select bank1
  9422  076A  0862               	movf	_st_dataLength^(0+128),w
  9423  076B  0020               	movlb	0	; select bank0
  9424  076C  0520               	andwf	??_read_train,w
  9425  076D  0021               	movlb	1	; select bank1
  9426  076E  00E2               	movwf	_st_dataLength^(0+128)
  9427  076F  0863               	movf	(_st_dataLength+1)^(0+128),w
  9428  0770  0020               	movlb	0	; select bank0
  9429  0771  0521               	andwf	??_read_train+1,w
  9430  0772  0021               	movlb	1	; select bank1
  9431  0773  00E3               	movwf	(_st_dataLength+1)^(0+128)
  9432                           
  9433                           ;main.c: 212: break;
  9434  0774  0008               	return
  9435  0775                     l3919:	
  9436                           ;main.c: 213: case 3:
  9437                           
  9438                           
  9439                           ;main.c: 214: st_type = spi1_Read_data;
  9440  0775  087C               	movf	_spi1_Read_data,w
  9441  0776  0020               	movlb	0	; select bank0
  9442  0777  00A0               	movwf	??_read_train
  9443  0778  0820               	movf	??_read_train,w
  9444  0779  00ED               	movwf	_st_type
  9445                           
  9446                           ;main.c: 215: isreadTrain = 1;
  9447  077A  1471               	bsf	_isreadTrain/(0+8),_isreadTrain& (0+7)
  9448                           
  9449                           ;main.c: 219: }
  9450                           
  9451                           ;main.c: 218: break;
  9452                           
  9453                           ;main.c: 217: default :
  9454                           
  9455                           ;main.c: 216: break;
  9456  077B  0008               	return
  9457  077C                     l3925:	
  9458                           
  9459                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9460                           ; Switch size 1, requested type "space"
  9461                           ; Number of cases is 1, Range of values is 0 to 0
  9462                           ; switch strategies available:
  9463                           ; Name         Instructions Cycles
  9464                           ; simple_byte            4     3 (average)
  9465                           ; direct_byte            8     6 (fixed)
  9466                           ; jumptable            260     6 (fixed)
  9467                           ;	Chosen strategy is simple_byte
  9468  077C  0021               	movlb	1	; select bank1
  9469  077D  0854               	movf	(_trainPos+1)^(0+128),w
  9470  077E  3A00               	xorlw	0	; case 0
  9471  077F  1903               	skipnz
  9472  0780  2F82               	goto	l4225
  9473  0781  2F8D               	goto	l167
  9474  0782                     l4225:	
  9475                           
  9476                           ; Switch size 1, requested type "space"
  9477                           ; Number of cases is 3, Range of values is 1 to 3
  9478                           ; switch strategies available:
  9479                           ; Name         Instructions Cycles
  9480                           ; simple_byte           10     6 (average)
  9481                           ; direct_byte           15     9 (fixed)
  9482                           ; jumptable            263     9 (fixed)
  9483                           ;	Chosen strategy is simple_byte
  9484  0782  0853               	movf	_trainPos^(0+128),w
  9485  0783  3A01               	xorlw	1	; case 1
  9486  0784  1903               	skipnz
  9487  0785  2F54               	goto	l3915
  9488  0786  3A03               	xorlw	3	; case 2
  9489  0787  1903               	skipnz
  9490  0788  2F62               	goto	l3917
  9491  0789  3A01               	xorlw	1	; case 3
  9492  078A  1903               	skipnz
  9493  078B  2F75               	goto	l3919
  9494  078C  2F8D               	goto	l167
  9495  078D                     l167:	
  9496  078D  0008               	return
  9497  078E                     __end_of_read_train:	
  9498                           
  9499                           	psect	text22
  9500  0DA6                     __ptext22:	
  9501 ;; *************** function _isSPI1read *****************
  9502 ;; Defined at:
  9503 ;;		line 66 in file "D:/programdata/16F18346_Link_IC.X/spiControl.c"
  9504 ;; Parameters:    Size  Location     Type
  9505 ;;		None
  9506 ;; Auto vars:     Size  Location     Type
  9507 ;;		None
  9508 ;; Return value:  Size  Location     Type
  9509 ;;		None               void
  9510 ;; Registers used:
  9511 ;;		wreg, status,2, status,0
  9512 ;; Tracked objects:
  9513 ;;		On entry : 0/0
  9514 ;;		On exit  : 0/0
  9515 ;;		Unchanged: 0/0
  9516 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9517 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9518 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9520 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9521 ;;Total ram usage:        0 bytes
  9522 ;; Hardware stack levels used:    1
  9523 ;; Hardware stack levels required when called:    3
  9524 ;; This function calls:
  9525 ;;		Nothing
  9526 ;; This function is called by:
  9527 ;;		_main
  9528 ;; This function uses a non-reentrant model
  9529 ;;
  9530                           
  9531                           
  9532                           ;psect for function _isSPI1read
  9533  0DA6                     _isSPI1read:	
  9534                           
  9535                           ;spiControl.c: 67: if(read_count1 == count1){
  9536                           
  9537                           ;incstack = 0
  9538                           ; Regs used in _isSPI1read: [wreg+status,2+status,0]
  9539  0DA6  0021               	movlb	1	; select bank1
  9540  0DA7  0858               	movf	(_count1+1)^(0+128),w
  9541  0DA8  0656               	xorwf	(_read_count1+1)^(0+128),w
  9542  0DA9  1D03               	skipz
  9543  0DAA  2DAD               	goto	u2595
  9544  0DAB  0857               	movf	_count1^(0+128),w
  9545  0DAC  0655               	xorwf	_read_count1^(0+128),w
  9546  0DAD                     u2595:	
  9547  0DAD  1D03               	skipz
  9548  0DAE  2DB1               	goto	l3873
  9549                           
  9550                           ;spiControl.c: 68: return 1;
  9551  0DAF  1403               	setc
  9552                           
  9553                           ;spiControl.c: 69: }else{
  9554  0DB0  0008               	return
  9555  0DB1                     l3873:	
  9556                           
  9557                           ;spiControl.c: 70: return 0;
  9558  0DB1  1003               	clrc
  9559  0DB2  0008               	return
  9560  0DB3                     __end_of_isSPI1read:	
  9561                           
  9562                           	psect	text23
  9563  0D6F                     __ptext23:	
  9564 ;; *************** function _io_init *****************
  9565 ;; Defined at:
  9566 ;;		line 132 in file "D:/programdata/16F18346_Link_IC.X/main.c"
  9567 ;; Parameters:    Size  Location     Type
  9568 ;;		None
  9569 ;; Auto vars:     Size  Location     Type
  9570 ;;		None
  9571 ;; Return value:  Size  Location     Type
  9572 ;;                  1    wreg      void 
  9573 ;; Registers used:
  9574 ;;		None
  9575 ;; Tracked objects:
  9576 ;;		On entry : 0/0
  9577 ;;		On exit  : 0/0
  9578 ;;		Unchanged: 0/0
  9579 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9580 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9581 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9582 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9583 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9584 ;;Total ram usage:        0 bytes
  9585 ;; Hardware stack levels used:    1
  9586 ;; Hardware stack levels required when called:    3
  9587 ;; This function calls:
  9588 ;;		Nothing
  9589 ;; This function is called by:
  9590 ;;		_main
  9591 ;; This function uses a non-reentrant model
  9592 ;;
  9593                           
  9594                           
  9595                           ;psect for function _io_init
  9596  0D6F                     _io_init:	
  9597                           
  9598                           ;main.c: 133: PIE0bits.IOCIE = 1;
  9599                           
  9600                           ;incstack = 0
  9601                           ; Regs used in _io_init: []
  9602  0D6F  0021               	movlb	1	; select bank1
  9603  0D70  1610               	bsf	16,4	;volatile
  9604                           
  9605                           ;main.c: 134: IOCAPbits.IOCAP3 = 1;
  9606  0D71  0027               	movlb	7	; select bank7
  9607  0D72  1591               	bsf	17,3	;volatile
  9608                           
  9609                           ;main.c: 135: IOCANbits.IOCAN3 = 1;
  9610  0D73  1592               	bsf	18,3	;volatile
  9611                           
  9612                           ;main.c: 136: PIE0bits.INTE = 1;
  9613  0D74  0021               	movlb	1	; select bank1
  9614  0D75  1410               	bsf	16,0	;volatile
  9615                           
  9616                           ;main.c: 137: INTCONbits.INTEDG = 1;
  9617  0D76  140B               	bsf	11,0	;volatile
  9618  0D77  0008               	return
  9619  0D78                     __end_of_io_init:	
  9620                           
  9621                           	psect	text24
  9622  0701                     __ptext24:	
  9623 ;; *************** function _initTrain *****************
  9624 ;; Defined at:
  9625 ;;		line 140 in file "D:/programdata/16F18346_Link_IC.X/main.c"
  9626 ;; Parameters:    Size  Location     Type
  9627 ;;		None
  9628 ;; Auto vars:     Size  Location     Type
  9629 ;;		None
  9630 ;; Return value:  Size  Location     Type
  9631 ;;                  1    wreg      void 
  9632 ;; Registers used:
  9633 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9634 ;; Tracked objects:
  9635 ;;		On entry : 0/0
  9636 ;;		On exit  : 0/0
  9637 ;;		Unchanged: 0/0
  9638 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9639 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9640 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9641 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9642 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9643 ;;Total ram usage:        3 bytes
  9644 ;; Hardware stack levels used:    1
  9645 ;; Hardware stack levels required when called:    5
  9646 ;; This function calls:
  9647 ;;		_isTrainSt
  9648 ;;		_resetTrainData
  9649 ;; This function is called by:
  9650 ;;		_main
  9651 ;; This function uses a non-reentrant model
  9652 ;;
  9653                           
  9654                           
  9655                           ;psect for function _initTrain
  9656  0701                     _initTrain:	
  9657                           
  9658                           ;main.c: 141: spi1_Read_data = spi1_buffer_data[read_count1];
  9659                           
  9660                           ;incstack = 0
  9661                           ; Regs used in _initTrain: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9662  0701  30F0               	movlw	240
  9663  0702  0020               	movlb	0	; select bank0
  9664  0703  00AB               	movwf	??_initTrain
  9665  0704  3026               	movlw	38
  9666  0705  00AC               	movwf	??_initTrain+1
  9667  0706  0021               	movlb	1	; select bank1
  9668  0707  0855               	movf	_read_count1^(0+128),w
  9669  0708  0020               	movlb	0	; select bank0
  9670  0709  072B               	addwf	??_initTrain,w
  9671  070A  0086               	movwf	6
  9672  070B  0021               	movlb	1	; select bank1
  9673  070C  0856               	movf	(_read_count1+1)^(0+128),w
  9674  070D  0020               	movlb	0	; select bank0
  9675  070E  3D2C               	addwfc	??_initTrain+1,w
  9676  070F  0087               	movwf	7
  9677  0710  0801               	movf	1,w
  9678  0711  00AD               	movwf	??_initTrain+2
  9679  0712  082D               	movf	??_initTrain+2,w
  9680  0713  00FC               	movwf	_spi1_Read_data
  9681                           
  9682                           ;main.c: 142: spi2_Send_data = spi1_Read_data;
  9683  0714  087C               	movf	_spi1_Read_data,w
  9684  0715  00AB               	movwf	??_initTrain
  9685  0716  082B               	movf	??_initTrain,w
  9686  0717  00EE               	movwf	_spi2_Send_data
  9687                           
  9688                           ;main.c: 143: read_count1++;
  9689  0718  3001               	movlw	1
  9690  0719  0021               	movlb	1	; select bank1
  9691  071A  07D5               	addwf	_read_count1^(0+128),f
  9692  071B  3000               	movlw	0
  9693  071C  3DD6               	addwfc	(_read_count1+1)^(0+128),f
  9694                           
  9695                           ;main.c: 144: if(read_count1 == 256){
  9696  071D  0356               	decf	(_read_count1+1)^(0+128),w
  9697  071E  0455               	iorwf	_read_count1^(0+128),w
  9698  071F  1D03               	btfss	3,2
  9699  0720  2F23               	goto	l3805
  9700                           
  9701                           ;main.c: 145: read_count1 = 0;
  9702  0721  01D5               	clrf	_read_count1^(0+128)
  9703  0722  01D6               	clrf	(_read_count1+1)^(0+128)
  9704  0723                     l3805:	
  9705                           
  9706                           ;main.c: 146: }
  9707                           ;main.c: 147: if(isTrainSt(spi1_Read_data)){
  9708  0723  087C               	movf	_spi1_Read_data,w
  9709  0724  3186  26B3  3187   	fcall	_isTrainSt
  9710  0727  1C03               	btfss	3,0
  9711  0728  2F34               	goto	l3815
  9712                           
  9713                           ;main.c: 148: trainPos = 0;
  9714  0729  0021               	movlb	1	; select bank1
  9715  072A  01D3               	clrf	_trainPos^(0+128)
  9716  072B  01D4               	clrf	(_trainPos+1)^(0+128)
  9717                           
  9718                           ;main.c: 149: resetTrainData();
  9719  072C  318D  2578  3187   	fcall	_resetTrainData
  9720                           
  9721                           ;main.c: 150: isreadTrain = 0;
  9722  072F  1071               	bcf	_isreadTrain/(0+8),_isreadTrain& (0+7)
  9723                           
  9724                           ;main.c: 151: countabuf = 0;
  9725  0730  0020               	movlb	0	; select bank0
  9726  0731  01E9               	clrf	_countabuf
  9727  0732  01EA               	clrf	_countabuf+1
  9728                           
  9729                           ;main.c: 152: }else{
  9730  0733  2F39               	goto	l133
  9731  0734                     l3815:	
  9732                           
  9733                           ;main.c: 153: trainPos++;
  9734  0734  3001               	movlw	1
  9735  0735  0021               	movlb	1	; select bank1
  9736  0736  07D3               	addwf	_trainPos^(0+128),f
  9737  0737  3000               	movlw	0
  9738  0738  3DD4               	addwfc	(_trainPos+1)^(0+128),f
  9739  0739                     l133:	
  9740                           
  9741                           ;main.c: 154: }
  9742                           ;main.c: 155: if(st_dataLength < trainPos){
  9743  0739  0021               	movlb	1	; select bank1
  9744  073A  0854               	movf	(_trainPos+1)^(0+128),w
  9745  073B  0263               	subwf	(_st_dataLength+1)^(0+128),w
  9746  073C  1D03               	skipz
  9747  073D  2F40               	goto	u2585
  9748  073E  0853               	movf	_trainPos^(0+128),w
  9749  073F  0262               	subwf	_st_dataLength^(0+128),w
  9750  0740                     u2585:	
  9751  0740  1803               	skipnc
  9752  0741  0008               	return
  9753                           
  9754                           ;main.c: 156: trainPos = 0;
  9755  0742  01D3               	clrf	_trainPos^(0+128)
  9756  0743  01D4               	clrf	(_trainPos+1)^(0+128)
  9757                           
  9758                           ;main.c: 157: resetTrainData();
  9759  0744  318D  2578         	fcall	_resetTrainData
  9760                           
  9761                           ;main.c: 158: isreadTrain = 0;
  9762  0746  1071               	bcf	_isreadTrain/(0+8),_isreadTrain& (0+7)
  9763                           
  9764                           ;main.c: 159: countabuf = 0;
  9765  0747  0020               	movlb	0	; select bank0
  9766  0748  01E9               	clrf	_countabuf
  9767  0749  01EA               	clrf	_countabuf+1
  9768  074A  0008               	return
  9769  074B                     __end_of_initTrain:	
  9770                           
  9771                           	psect	text25
  9772  0D78                     __ptext25:	
  9773 ;; *************** function _resetTrainData *****************
  9774 ;; Defined at:
  9775 ;;		line 186 in file "D:/programdata/16F18346_Link_IC.X/main.c"
  9776 ;; Parameters:    Size  Location     Type
  9777 ;;		None
  9778 ;; Auto vars:     Size  Location     Type
  9779 ;;		None
  9780 ;; Return value:  Size  Location     Type
  9781 ;;                  1    wreg      void 
  9782 ;; Registers used:
  9783 ;;		wreg, status,2, status,0, pclath, cstack
  9784 ;; Tracked objects:
  9785 ;;		On entry : 0/0
  9786 ;;		On exit  : 0/0
  9787 ;;		Unchanged: 0/0
  9788 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9789 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9790 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9791 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9792 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9793 ;;Total ram usage:        0 bytes
  9794 ;; Hardware stack levels used:    1
  9795 ;; Hardware stack levels required when called:    4
  9796 ;; This function calls:
  9797 ;;		_restartCargo
  9798 ;; This function is called by:
  9799 ;;		_initTrain
  9800 ;; This function uses a non-reentrant model
  9801 ;;
  9802                           
  9803                           
  9804                           ;psect for function _resetTrainData
  9805  0D78                     _resetTrainData:	
  9806                           
  9807                           ;main.c: 187: st_dataLength = 0xFFFF;
  9808                           
  9809                           ;incstack = 0
  9810                           ; Regs used in _resetTrainData: [wreg+status,2+status,0+pclath+cstack]
  9811  0D78  30FF               	movlw	255
  9812  0D79  0021               	movlb	1	; select bank1
  9813  0D7A  00E2               	movwf	_st_dataLength^(0+128)
  9814  0D7B  30FF               	movlw	255
  9815  0D7C  00E3               	movwf	(_st_dataLength^(0+128)+1)
  9816                           
  9817                           ;main.c: 188: st_type = 0;
  9818  0D7D  0020               	movlb	0	; select bank0
  9819  0D7E  01ED               	clrf	_st_type
  9820                           
  9821                           ;main.c: 189: restartCargo();
  9822  0D7F  318D  254B         	fcall	_restartCargo
  9823  0D81  0008               	return
  9824  0D82                     __end_of_resetTrainData:	
  9825                           
  9826                           	psect	text26
  9827  0D4B                     __ptext26:	
  9828 ;; *************** function _restartCargo *****************
  9829 ;; Defined at:
  9830 ;;		line 36 in file "struct.c"
  9831 ;; Parameters:    Size  Location     Type
  9832 ;;		None
  9833 ;; Auto vars:     Size  Location     Type
  9834 ;;		None
  9835 ;; Return value:  Size  Location     Type
  9836 ;;                  1    wreg      void 
  9837 ;; Registers used:
  9838 ;;		status,2
  9839 ;; Tracked objects:
  9840 ;;		On entry : 0/0
  9841 ;;		On exit  : 0/0
  9842 ;;		Unchanged: 0/0
  9843 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9844 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9845 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9846 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9847 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9848 ;;Total ram usage:        0 bytes
  9849 ;; Hardware stack levels used:    1
  9850 ;; Hardware stack levels required when called:    3
  9851 ;; This function calls:
  9852 ;;		Nothing
  9853 ;; This function is called by:
  9854 ;;		_resetTrainData
  9855 ;;		_readCargo
  9856 ;;		_EEPROM_download
  9857 ;; This function uses a non-reentrant model
  9858 ;;
  9859                           
  9860                           
  9861                           ;psect for function _restartCargo
  9862  0D4B                     _restartCargo:	
  9863                           
  9864                           ;struct.c: 37: cargoData.address = 0;
  9865                           
  9866                           ;incstack = 0
  9867                           ; Regs used in _restartCargo: [status,2]
  9868  0D4B  0020               	movlb	0	; select bank0
  9869  0D4C  01DD               	clrf	_cargoData+4
  9870                           
  9871                           ;struct.c: 38: cargoData.command = 0;
  9872  0D4D  01DB               	clrf	_cargoData+2
  9873                           
  9874                           ;struct.c: 39: cargoData.index = 0;
  9875  0D4E  01DC               	clrf	_cargoData+3
  9876  0D4F  0008               	return
  9877  0D50                     __end_of_restartCargo:	
  9878                           
  9879                           	psect	text27
  9880  06B3                     __ptext27:	
  9881 ;; *************** function _isTrainSt *****************
  9882 ;; Defined at:
  9883 ;;		line 192 in file "D:/programdata/16F18346_Link_IC.X/main.c"
  9884 ;; Parameters:    Size  Location     Type
  9885 ;;  buf             1    wreg     unsigned char 
  9886 ;; Auto vars:     Size  Location     Type
  9887 ;;  buf             1   10[BANK0 ] unsigned char 
  9888 ;; Return value:  Size  Location     Type
  9889 ;;		None               void
  9890 ;; Registers used:
  9891 ;;		wreg, status,2, status,0
  9892 ;; Tracked objects:
  9893 ;;		On entry : 0/0
  9894 ;;		On exit  : 0/0
  9895 ;;		Unchanged: 0/0
  9896 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9897 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9898 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9899 ;;      Temps:          0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9900 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9901 ;;Total ram usage:       11 bytes
  9902 ;; Hardware stack levels used:    1
  9903 ;; Hardware stack levels required when called:    3
  9904 ;; This function calls:
  9905 ;;		Nothing
  9906 ;; This function is called by:
  9907 ;;		_initTrain
  9908 ;; This function uses a non-reentrant model
  9909 ;;
  9910                           
  9911                           
  9912                           ;psect for function _isTrainSt
  9913  06B3                     _isTrainSt:	
  9914                           
  9915                           ;incstack = 0
  9916                           ; Regs used in _isTrainSt: [wreg+status,2+status,0]
  9917                           ;isTrainSt@buf stored from wreg
  9918  06B3  0020               	movlb	0	; select bank0
  9919  06B4  00AA               	movwf	isTrainSt@buf
  9920                           
  9921                           ;main.c: 193: startTrainBytes = startTrainBytes << 8 | (buf +SPI_OFFSET_BYTE);
  9922  06B5  082A               	movf	isTrainSt@buf,w
  9923  06B6  077D               	addwf	_SPI_OFFSET_BYTE,w
  9924  06B7  00A0               	movwf	??_isTrainSt
  9925  06B8  01A1               	clrf	??_isTrainSt+1
  9926  06B9  0DA1               	rlf	??_isTrainSt+1,f
  9927  06BA  0820               	movf	??_isTrainSt,w
  9928  06BB  00A2               	movwf	??_isTrainSt+2
  9929  06BC  0821               	movf	??_isTrainSt+1,w
  9930  06BD  00A3               	movwf	??_isTrainSt+3
  9931  06BE  3000               	movlw	0
  9932  06BF  1BA3               	btfsc	??_isTrainSt+3,7
  9933  06C0  30FF               	movlw	255
  9934  06C1  00A4               	movwf	??_isTrainSt+4
  9935  06C2  00A5               	movwf	??_isTrainSt+5
  9936  06C3  0021               	movlb	1	; select bank1
  9937  06C4  0841               	movf	_startTrainBytes^(0+128),w
  9938  06C5  0020               	movlb	0	; select bank0
  9939  06C6  00A6               	movwf	??_isTrainSt+6
  9940  06C7  0021               	movlb	1	; select bank1
  9941  06C8  0842               	movf	(_startTrainBytes+1)^(0+128),w
  9942  06C9  0020               	movlb	0	; select bank0
  9943  06CA  00A7               	movwf	??_isTrainSt+7
  9944  06CB  0021               	movlb	1	; select bank1
  9945  06CC  0843               	movf	(_startTrainBytes+2)^(0+128),w
  9946  06CD  0020               	movlb	0	; select bank0
  9947  06CE  00A8               	movwf	??_isTrainSt+8
  9948  06CF  0021               	movlb	1	; select bank1
  9949  06D0  0844               	movf	(_startTrainBytes+3)^(0+128),w
  9950  06D1  0020               	movlb	0	; select bank0
  9951  06D2  00A9               	movwf	??_isTrainSt+9
  9952  06D3  3008               	movlw	8
  9953  06D4                     u2325:	
  9954  06D4  35A6               	lslf	??_isTrainSt+6,f
  9955  06D5  0DA7               	rlf	??_isTrainSt+7,f
  9956  06D6  0DA8               	rlf	??_isTrainSt+8,f
  9957  06D7  0DA9               	rlf	??_isTrainSt+9,f
  9958  06D8  0B89               	decfsz	9,f
  9959  06D9  2ED4               	goto	u2325
  9960  06DA  0826               	movf	??_isTrainSt+6,w
  9961  06DB  04A2               	iorwf	??_isTrainSt+2,f
  9962  06DC  0827               	movf	??_isTrainSt+7,w
  9963  06DD  04A3               	iorwf	??_isTrainSt+3,f
  9964  06DE  0828               	movf	??_isTrainSt+8,w
  9965  06DF  04A4               	iorwf	??_isTrainSt+4,f
  9966  06E0  0829               	movf	??_isTrainSt+9,w
  9967  06E1  04A5               	iorwf	??_isTrainSt+5,f
  9968  06E2  0825               	movf	??_isTrainSt+5,w
  9969  06E3  0021               	movlb	1	; select bank1
  9970  06E4  00C4               	movwf	(_startTrainBytes+3)^(0+128)
  9971  06E5  0020               	movlb	0	; select bank0
  9972  06E6  0824               	movf	??_isTrainSt+4,w
  9973  06E7  0021               	movlb	1	; select bank1
  9974  06E8  00C3               	movwf	(_startTrainBytes+2)^(0+128)
  9975  06E9  0020               	movlb	0	; select bank0
  9976  06EA  0823               	movf	??_isTrainSt+3,w
  9977  06EB  0021               	movlb	1	; select bank1
  9978  06EC  00C2               	movwf	(_startTrainBytes+1)^(0+128)
  9979  06ED  0020               	movlb	0	; select bank0
  9980  06EE  0822               	movf	??_isTrainSt+2,w
  9981  06EF  0021               	movlb	1	; select bank1
  9982  06F0  00C1               	movwf	_startTrainBytes^(0+128)
  9983                           
  9984                           ;main.c: 194: if(startTrainBytes == 0xFFFFFFFF){
  9985  06F1  0A41               	incf	_startTrainBytes^(0+128),w
  9986  06F2  1D03               	skipz
  9987  06F3  2EFF               	goto	l3523
  9988  06F4  0A42               	incf	(_startTrainBytes+1)^(0+128),w
  9989  06F5  1D03               	skipz
  9990  06F6  2EFF               	goto	l3523
  9991  06F7  0A43               	incf	(_startTrainBytes+2)^(0+128),w
  9992  06F8  1D03               	skipz
  9993  06F9  2EFF               	goto	l3523
  9994  06FA  0A44               	incf	(_startTrainBytes+3)^(0+128),w
  9995  06FB  1D03               	btfss	3,2
  9996  06FC  2EFF               	goto	l3523
  9997                           
  9998                           ;main.c: 195: return 1;
  9999  06FD  1403               	setc
 10000                           
 10001                           ;main.c: 196: }else{
 10002  06FE  0008               	return
 10003  06FF                     l3523:	
 10004                           
 10005                           ;main.c: 197: return 0;
 10006  06FF  1003               	clrc
 10007  0700  0008               	return
 10008  0701                     __end_of_isTrainSt:	
 10009                           
 10010                           	psect	text28
 10011  0EB8                     __ptext28:	
 10012 ;; *************** function _initPosition *****************
 10013 ;; Defined at:
 10014 ;;		line 8 in file "D:/programdata/16F18346_Link_IC.X/cal_position.c"
 10015 ;; Parameters:    Size  Location     Type
 10016 ;;		None
 10017 ;; Auto vars:     Size  Location     Type
 10018 ;;		None
 10019 ;; Return value:  Size  Location     Type
 10020 ;;                  1    wreg      void 
 10021 ;; Registers used:
 10022 ;;		wreg, status,2
 10023 ;; Tracked objects:
 10024 ;;		On entry : 0/0
 10025 ;;		On exit  : 0/0
 10026 ;;		Unchanged: 0/0
 10027 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10028 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10029 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10030 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10031 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10032 ;;Total ram usage:        0 bytes
 10033 ;; Hardware stack levels used:    1
 10034 ;; Hardware stack levels required when called:    3
 10035 ;; This function calls:
 10036 ;;		Nothing
 10037 ;; This function is called by:
 10038 ;;		_main
 10039 ;; This function uses a non-reentrant model
 10040 ;;
 10041                           
 10042                           
 10043                           ;psect for function _initPosition
 10044  0EB8                     _initPosition:	
 10045                           
 10046                           ;cal_position.c: 9: position.moter_lotate = 0;
 10047                           
 10048                           ;incstack = 0
 10049                           ; Regs used in _initPosition: [wreg+status,2]
 10050  0EB8  0022               	movlb	2	; select bank2
 10051  0EB9  01A0               	clrf	_position^(0+256)
 10052  0EBA  01A1               	clrf	(_position+1)^(0+256)
 10053                           
 10054                           ;cal_position.c: 10: position.pos_x = 0;
 10055  0EBB  3000               	movlw	0
 10056  0EBC  00A2               	movwf	(_position^(0+256)+2)
 10057  0EBD  3000               	movlw	0
 10058  0EBE  00A3               	movwf	((_position+1)^(0+256)+2)
 10059  0EBF  3000               	movlw	0
 10060  0EC0  00A4               	movwf	((_position+2)^(0+256)+2)
 10061                           
 10062                           ;cal_position.c: 11: position.pos_y = 0;
 10063  0EC1  3000               	movlw	0
 10064  0EC2  00A5               	movwf	(_position^(0+256)+5)
 10065  0EC3  3000               	movlw	0
 10066  0EC4  00A6               	movwf	((_position+1)^(0+256)+5)
 10067  0EC5  3000               	movlw	0
 10068  0EC6  00A7               	movwf	((_position+2)^(0+256)+5)
 10069                           
 10070                           ;cal_position.c: 12: position.pos_z = 0;
 10071  0EC7  3000               	movlw	0
 10072  0EC8  00A8               	movwf	(_position^(0+256)+8)
 10073  0EC9  3000               	movlw	0
 10074  0ECA  00A9               	movwf	((_position+1)^(0+256)+8)
 10075  0ECB  3000               	movlw	0
 10076  0ECC  00AA               	movwf	((_position+2)^(0+256)+8)
 10077                           
 10078                           ;cal_position.c: 13: position.rotate_x = 0;
 10079  0ECD  3000               	movlw	0
 10080  0ECE  00AB               	movwf	(_position^(0+256)+11)
 10081  0ECF  3000               	movlw	0
 10082  0ED0  00AC               	movwf	((_position+1)^(0+256)+11)
 10083  0ED1  3000               	movlw	0
 10084  0ED2  00AD               	movwf	((_position+2)^(0+256)+11)
 10085                           
 10086                           ;cal_position.c: 14: position.rotate_y = 0;
 10087  0ED3  3000               	movlw	0
 10088  0ED4  00AE               	movwf	(_position^(0+256)+14)
 10089  0ED5  3000               	movlw	0
 10090  0ED6  00AF               	movwf	((_position+1)^(0+256)+14)
 10091  0ED7  3000               	movlw	0
 10092  0ED8  00B0               	movwf	((_position+2)^(0+256)+14)
 10093                           
 10094                           ;cal_position.c: 15: position.rotate_z = 0;
 10095  0ED9  3000               	movlw	0
 10096  0EDA  00B1               	movwf	(_position^(0+256)+17)
 10097  0EDB  3000               	movlw	0
 10098  0EDC  00B2               	movwf	((_position+1)^(0+256)+17)
 10099  0EDD  3000               	movlw	0
 10100  0EDE  00B3               	movwf	((_position+2)^(0+256)+17)
 10101  0EDF  0008               	return
 10102  0EE0                     __end_of_initPosition:	
 10103                           
 10104                           	psect	text29
 10105  056C                     __ptext29:	
 10106 ;; *************** function _initIndex *****************
 10107 ;; Defined at:
 10108 ;;		line 11 in file "D:/programdata/16F18346_Link_IC.X/index.c"
 10109 ;; Parameters:    Size  Location     Type
 10110 ;;		None
 10111 ;; Auto vars:     Size  Location     Type
 10112 ;;		None
 10113 ;; Return value:  Size  Location     Type
 10114 ;;                  1    wreg      void 
 10115 ;; Registers used:
 10116 ;;		wreg
 10117 ;; Tracked objects:
 10118 ;;		On entry : 0/0
 10119 ;;		On exit  : 0/0
 10120 ;;		Unchanged: 0/0
 10121 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10122 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10123 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10124 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10125 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10126 ;;Total ram usage:        1 bytes
 10127 ;; Hardware stack levels used:    1
 10128 ;; Hardware stack levels required when called:    3
 10129 ;; This function calls:
 10130 ;;		Nothing
 10131 ;; This function is called by:
 10132 ;;		_main
 10133 ;; This function uses a non-reentrant model
 10134 ;;
 10135                           
 10136                           
 10137                           ;psect for function _initIndex
 10138  056C                     _initIndex:	
 10139                           
 10140                           ;index.c: 12: index[0] = 0b00111111;
 10141                           
 10142                           ;incstack = 0
 10143                           ; Regs used in _initIndex: [wreg]
 10144  056C  303F               	movlw	63
 10145  056D  0020               	movlb	0	; select bank0
 10146  056E  00A0               	movwf	??_initIndex
 10147  056F  0820               	movf	??_initIndex,w
 10148  0570  0023               	movlb	3	; select bank3
 10149  0571  00A0               	movwf	_index^(0+384)
 10150                           
 10151                           ;index.c: 13: index[1] = 0b01111111;
 10152  0572  307F               	movlw	127
 10153  0573  0020               	movlb	0	; select bank0
 10154  0574  00A0               	movwf	??_initIndex
 10155  0575  0820               	movf	??_initIndex,w
 10156  0576  0023               	movlb	3	; select bank3
 10157  0577  00A1               	movwf	(_index^(0+384)+1)
 10158                           
 10159                           ;index.c: 14: index[2] = 0b10011111;;
 10160  0578  309F               	movlw	159
 10161  0579  0020               	movlb	0	; select bank0
 10162  057A  00A0               	movwf	??_initIndex
 10163  057B  0820               	movf	??_initIndex,w
 10164  057C  0023               	movlb	3	; select bank3
 10165  057D  00A2               	movwf	(_index^(0+384)+2)
 10166                           
 10167                           ;index.c: 15: index[3] = 0b10101111;
 10168  057E  30AF               	movlw	175
 10169  057F  0020               	movlb	0	; select bank0
 10170  0580  00A0               	movwf	??_initIndex
 10171  0581  0820               	movf	??_initIndex,w
 10172  0582  0023               	movlb	3	; select bank3
 10173  0583  00A3               	movwf	(_index^(0+384)+3)
 10174                           
 10175                           ;index.c: 16: index[4] = 0b10111111;
 10176  0584  30BF               	movlw	191
 10177  0585  0020               	movlb	0	; select bank0
 10178  0586  00A0               	movwf	??_initIndex
 10179  0587  0820               	movf	??_initIndex,w
 10180  0588  0023               	movlb	3	; select bank3
 10181  0589  00A4               	movwf	(_index^(0+384)+4)
 10182                           
 10183                           ;index.c: 17: index[5] = 0b11001111;
 10184  058A  30CF               	movlw	207
 10185  058B  0020               	movlb	0	; select bank0
 10186  058C  00A0               	movwf	??_initIndex
 10187  058D  0820               	movf	??_initIndex,w
 10188  058E  0023               	movlb	3	; select bank3
 10189  058F  00A5               	movwf	(_index^(0+384)+5)
 10190                           
 10191                           ;index.c: 18: index[6] = 0b11010111;
 10192  0590  30D7               	movlw	215
 10193  0591  0020               	movlb	0	; select bank0
 10194  0592  00A0               	movwf	??_initIndex
 10195  0593  0820               	movf	??_initIndex,w
 10196  0594  0023               	movlb	3	; select bank3
 10197  0595  00A6               	movwf	(_index^(0+384)+6)
 10198                           
 10199                           ;index.c: 19: index[7] = 0b11011111;
 10200  0596  30DF               	movlw	223
 10201  0597  0020               	movlb	0	; select bank0
 10202  0598  00A0               	movwf	??_initIndex
 10203  0599  0820               	movf	??_initIndex,w
 10204  059A  0023               	movlb	3	; select bank3
 10205  059B  00A7               	movwf	(_index^(0+384)+7)
 10206                           
 10207                           ;index.c: 20: index[8] = 0b11100111;
 10208  059C  30E7               	movlw	231
 10209  059D  0020               	movlb	0	; select bank0
 10210  059E  00A0               	movwf	??_initIndex
 10211  059F  0820               	movf	??_initIndex,w
 10212  05A0  0023               	movlb	3	; select bank3
 10213  05A1  00A8               	movwf	(_index^(0+384)+8)
 10214                           
 10215                           ;index.c: 21: index[9] = 0b11101011;
 10216  05A2  30EB               	movlw	235
 10217  05A3  0020               	movlb	0	; select bank0
 10218  05A4  00A0               	movwf	??_initIndex
 10219  05A5  0820               	movf	??_initIndex,w
 10220  05A6  0023               	movlb	3	; select bank3
 10221  05A7  00A9               	movwf	(_index^(0+384)+9)
 10222                           
 10223                           ;index.c: 22: index[10] = 0b11101111;
 10224  05A8  30EF               	movlw	239
 10225  05A9  0020               	movlb	0	; select bank0
 10226  05AA  00A0               	movwf	??_initIndex
 10227  05AB  0820               	movf	??_initIndex,w
 10228  05AC  0023               	movlb	3	; select bank3
 10229  05AD  00AA               	movwf	(_index^(0+384)+10)
 10230                           
 10231                           ;index.c: 23: index[11] = 0b11110001;
 10232  05AE  30F1               	movlw	241
 10233  05AF  0020               	movlb	0	; select bank0
 10234  05B0  00A0               	movwf	??_initIndex
 10235  05B1  0820               	movf	??_initIndex,w
 10236  05B2  0023               	movlb	3	; select bank3
 10237  05B3  00AB               	movwf	(_index^(0+384)+11)
 10238                           
 10239                           ;index.c: 24: index[12] = 0b11110011;
 10240  05B4  30F3               	movlw	243
 10241  05B5  0020               	movlb	0	; select bank0
 10242  05B6  00A0               	movwf	??_initIndex
 10243  05B7  0820               	movf	??_initIndex,w
 10244  05B8  0023               	movlb	3	; select bank3
 10245  05B9  00AC               	movwf	(_index^(0+384)+12)
 10246                           
 10247                           ;index.c: 25: index[13] = 0b11110101;
 10248  05BA  30F5               	movlw	245
 10249  05BB  0020               	movlb	0	; select bank0
 10250  05BC  00A0               	movwf	??_initIndex
 10251  05BD  0820               	movf	??_initIndex,w
 10252  05BE  0023               	movlb	3	; select bank3
 10253  05BF  00AD               	movwf	(_index^(0+384)+13)
 10254                           
 10255                           ;index.c: 26: index[14] = 0b11110111;
 10256  05C0  30F7               	movlw	247
 10257  05C1  0020               	movlb	0	; select bank0
 10258  05C2  00A0               	movwf	??_initIndex
 10259  05C3  0820               	movf	??_initIndex,w
 10260  05C4  0023               	movlb	3	; select bank3
 10261  05C5  00AE               	movwf	(_index^(0+384)+14)
 10262                           
 10263                           ;index.c: 27: index[15] = 0b11111000;
 10264  05C6  30F8               	movlw	248
 10265  05C7  0020               	movlb	0	; select bank0
 10266  05C8  00A0               	movwf	??_initIndex
 10267  05C9  0820               	movf	??_initIndex,w
 10268  05CA  0023               	movlb	3	; select bank3
 10269  05CB  00AF               	movwf	(_index^(0+384)+15)
 10270                           
 10271                           ;index.c: 28: index[16] = 0b11111001;
 10272  05CC  30F9               	movlw	249
 10273  05CD  0020               	movlb	0	; select bank0
 10274  05CE  00A0               	movwf	??_initIndex
 10275  05CF  0820               	movf	??_initIndex,w
 10276  05D0  0023               	movlb	3	; select bank3
 10277  05D1  00B0               	movwf	(_index^(0+384)+16)
 10278                           
 10279                           ;index.c: 29: index[17] = 0b11111010;
 10280  05D2  30FA               	movlw	250
 10281  05D3  0020               	movlb	0	; select bank0
 10282  05D4  00A0               	movwf	??_initIndex
 10283  05D5  0820               	movf	??_initIndex,w
 10284  05D6  0023               	movlb	3	; select bank3
 10285  05D7  00B1               	movwf	(_index^(0+384)+17)
 10286  05D8  0008               	return
 10287  05D9                     __end_of_initIndex:	
 10288                           
 10289                           	psect	text30
 10290  05D9                     __ptext30:	
 10291 ;; *************** function _initComu_types *****************
 10292 ;; Defined at:
 10293 ;;		line 20 in file "D:/programdata/16F18346_Link_IC.X/comu_type.c"
 10294 ;; Parameters:    Size  Location     Type
 10295 ;;		None
 10296 ;; Auto vars:     Size  Location     Type
 10297 ;;		None
 10298 ;; Return value:  Size  Location     Type
 10299 ;;                  1    wreg      void 
 10300 ;; Registers used:
 10301 ;;		wreg
 10302 ;; Tracked objects:
 10303 ;;		On entry : 0/0
 10304 ;;		On exit  : 0/0
 10305 ;;		Unchanged: 0/0
 10306 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10307 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10308 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10309 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10310 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10311 ;;Total ram usage:        1 bytes
 10312 ;; Hardware stack levels used:    1
 10313 ;; Hardware stack levels required when called:    3
 10314 ;; This function calls:
 10315 ;;		Nothing
 10316 ;; This function is called by:
 10317 ;;		_main
 10318 ;; This function uses a non-reentrant model
 10319 ;;
 10320                           
 10321                           
 10322                           ;psect for function _initComu_types
 10323  05D9                     _initComu_types:	
 10324                           
 10325                           ;comu_type.c: 21: comu_types[0] = 0b00111111;
 10326                           
 10327                           ;incstack = 0
 10328                           ; Regs used in _initComu_types: [wreg]
 10329  05D9  303F               	movlw	63
 10330  05DA  0020               	movlb	0	; select bank0
 10331  05DB  00A0               	movwf	??_initComu_types
 10332  05DC  0820               	movf	??_initComu_types,w
 10333  05DD  0022               	movlb	2	; select bank2
 10334  05DE  00D8               	movwf	_comu_types^(0+256)
 10335                           
 10336                           ;comu_type.c: 22: comu_types[1] = 0b01111111;
 10337  05DF  307F               	movlw	127
 10338  05E0  0020               	movlb	0	; select bank0
 10339  05E1  00A0               	movwf	??_initComu_types
 10340  05E2  0820               	movf	??_initComu_types,w
 10341  05E3  0022               	movlb	2	; select bank2
 10342  05E4  00D9               	movwf	(_comu_types^(0+256)+1)
 10343                           
 10344                           ;comu_type.c: 23: comu_types[2] = 0b10011111;
 10345  05E5  309F               	movlw	159
 10346  05E6  0020               	movlb	0	; select bank0
 10347  05E7  00A0               	movwf	??_initComu_types
 10348  05E8  0820               	movf	??_initComu_types,w
 10349  05E9  0022               	movlb	2	; select bank2
 10350  05EA  00DA               	movwf	(_comu_types^(0+256)+2)
 10351                           
 10352                           ;comu_type.c: 24: comu_types[3] = 0b10101111;
 10353  05EB  30AF               	movlw	175
 10354  05EC  0020               	movlb	0	; select bank0
 10355  05ED  00A0               	movwf	??_initComu_types
 10356  05EE  0820               	movf	??_initComu_types,w
 10357  05EF  0022               	movlb	2	; select bank2
 10358  05F0  00DB               	movwf	(_comu_types^(0+256)+3)
 10359                           
 10360                           ;comu_type.c: 25: comu_types[4] = 0b10111111;
 10361  05F1  30BF               	movlw	191
 10362  05F2  0020               	movlb	0	; select bank0
 10363  05F3  00A0               	movwf	??_initComu_types
 10364  05F4  0820               	movf	??_initComu_types,w
 10365  05F5  0022               	movlb	2	; select bank2
 10366  05F6  00DC               	movwf	(_comu_types^(0+256)+4)
 10367                           
 10368                           ;comu_type.c: 26: comu_types[5] = 0b11001111;
 10369  05F7  30CF               	movlw	207
 10370  05F8  0020               	movlb	0	; select bank0
 10371  05F9  00A0               	movwf	??_initComu_types
 10372  05FA  0820               	movf	??_initComu_types,w
 10373  05FB  0022               	movlb	2	; select bank2
 10374  05FC  00DD               	movwf	(_comu_types^(0+256)+5)
 10375                           
 10376                           ;comu_type.c: 27: comu_types[6] = 0b11010111;
 10377  05FD  30D7               	movlw	215
 10378  05FE  0020               	movlb	0	; select bank0
 10379  05FF  00A0               	movwf	??_initComu_types
 10380  0600  0820               	movf	??_initComu_types,w
 10381  0601  0022               	movlb	2	; select bank2
 10382  0602  00DE               	movwf	(_comu_types^(0+256)+6)
 10383                           
 10384                           ;comu_type.c: 28: comu_types[7] = 0b11011111;
 10385  0603  30DF               	movlw	223
 10386  0604  0020               	movlb	0	; select bank0
 10387  0605  00A0               	movwf	??_initComu_types
 10388  0606  0820               	movf	??_initComu_types,w
 10389  0607  0022               	movlb	2	; select bank2
 10390  0608  00DF               	movwf	(_comu_types^(0+256)+7)
 10391                           
 10392                           ;comu_type.c: 29: comu_types[8] = 0b11100111;
 10393  0609  30E7               	movlw	231
 10394  060A  0020               	movlb	0	; select bank0
 10395  060B  00A0               	movwf	??_initComu_types
 10396  060C  0820               	movf	??_initComu_types,w
 10397  060D  0022               	movlb	2	; select bank2
 10398  060E  00E0               	movwf	(_comu_types^(0+256)+8)
 10399                           
 10400                           ;comu_type.c: 30: comu_types[9] = 0b11101011;
 10401  060F  30EB               	movlw	235
 10402  0610  0020               	movlb	0	; select bank0
 10403  0611  00A0               	movwf	??_initComu_types
 10404  0612  0820               	movf	??_initComu_types,w
 10405  0613  0022               	movlb	2	; select bank2
 10406  0614  00E1               	movwf	(_comu_types^(0+256)+9)
 10407                           
 10408                           ;comu_type.c: 31: comu_types[10] = 0b11101111;
 10409  0615  30EF               	movlw	239
 10410  0616  0020               	movlb	0	; select bank0
 10411  0617  00A0               	movwf	??_initComu_types
 10412  0618  0820               	movf	??_initComu_types,w
 10413  0619  0022               	movlb	2	; select bank2
 10414  061A  00E2               	movwf	(_comu_types^(0+256)+10)
 10415                           
 10416                           ;comu_type.c: 32: comu_types[11] = 0b11110001;
 10417  061B  30F1               	movlw	241
 10418  061C  0020               	movlb	0	; select bank0
 10419  061D  00A0               	movwf	??_initComu_types
 10420  061E  0820               	movf	??_initComu_types,w
 10421  061F  0022               	movlb	2	; select bank2
 10422  0620  00E3               	movwf	(_comu_types^(0+256)+11)
 10423                           
 10424                           ;comu_type.c: 33: comu_types[12] = 0b11110011;
 10425  0621  30F3               	movlw	243
 10426  0622  0020               	movlb	0	; select bank0
 10427  0623  00A0               	movwf	??_initComu_types
 10428  0624  0820               	movf	??_initComu_types,w
 10429  0625  0022               	movlb	2	; select bank2
 10430  0626  00E4               	movwf	(_comu_types^(0+256)+12)
 10431                           
 10432                           ;comu_type.c: 34: comu_types[13] = 0b11110101;
 10433  0627  30F5               	movlw	245
 10434  0628  0020               	movlb	0	; select bank0
 10435  0629  00A0               	movwf	??_initComu_types
 10436  062A  0820               	movf	??_initComu_types,w
 10437  062B  0022               	movlb	2	; select bank2
 10438  062C  00E5               	movwf	(_comu_types^(0+256)+13)
 10439                           
 10440                           ;comu_type.c: 35: comu_types[14] = 0b11110111;
 10441  062D  30F7               	movlw	247
 10442  062E  0020               	movlb	0	; select bank0
 10443  062F  00A0               	movwf	??_initComu_types
 10444  0630  0820               	movf	??_initComu_types,w
 10445  0631  0022               	movlb	2	; select bank2
 10446  0632  00E6               	movwf	(_comu_types^(0+256)+14)
 10447                           
 10448                           ;comu_type.c: 36: comu_types[15] = 0b11111000;
 10449  0633  30F8               	movlw	248
 10450  0634  0020               	movlb	0	; select bank0
 10451  0635  00A0               	movwf	??_initComu_types
 10452  0636  0820               	movf	??_initComu_types,w
 10453  0637  0022               	movlb	2	; select bank2
 10454  0638  00E7               	movwf	(_comu_types^(0+256)+15)
 10455                           
 10456                           ;comu_type.c: 37: comu_types[16] = 0b11111001;
 10457  0639  30F9               	movlw	249
 10458  063A  0020               	movlb	0	; select bank0
 10459  063B  00A0               	movwf	??_initComu_types
 10460  063C  0820               	movf	??_initComu_types,w
 10461  063D  0022               	movlb	2	; select bank2
 10462  063E  00E8               	movwf	(_comu_types^(0+256)+16)
 10463                           
 10464                           ;comu_type.c: 38: comu_types[17] = 0b11111010;
 10465  063F  30FA               	movlw	250
 10466  0640  0020               	movlb	0	; select bank0
 10467  0641  00A0               	movwf	??_initComu_types
 10468  0642  0820               	movf	??_initComu_types,w
 10469  0643  0022               	movlb	2	; select bank2
 10470  0644  00E9               	movwf	(_comu_types^(0+256)+17)
 10471  0645  0008               	return
 10472  0646                     __end_of_initComu_types:	
 10473                           
 10474                           	psect	text31
 10475  0646                     __ptext31:	
 10476 ;; *************** function _initComand *****************
 10477 ;; Defined at:
 10478 ;;		line 15 in file "D:/programdata/16F18346_Link_IC.X/command.c"
 10479 ;; Parameters:    Size  Location     Type
 10480 ;;		None
 10481 ;; Auto vars:     Size  Location     Type
 10482 ;;		None
 10483 ;; Return value:  Size  Location     Type
 10484 ;;                  1    wreg      void 
 10485 ;; Registers used:
 10486 ;;		wreg
 10487 ;; Tracked objects:
 10488 ;;		On entry : 0/0
 10489 ;;		On exit  : 0/0
 10490 ;;		Unchanged: 0/0
 10491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10492 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10493 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10494 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10495 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10496 ;;Total ram usage:        1 bytes
 10497 ;; Hardware stack levels used:    1
 10498 ;; Hardware stack levels required when called:    3
 10499 ;; This function calls:
 10500 ;;		Nothing
 10501 ;; This function is called by:
 10502 ;;		_main
 10503 ;; This function uses a non-reentrant model
 10504 ;;
 10505                           
 10506                           
 10507                           ;psect for function _initComand
 10508  0646                     _initComand:	
 10509                           
 10510                           ;command.c: 16: command[0] = 0b00111111;
 10511                           
 10512                           ;incstack = 0
 10513                           ; Regs used in _initComand: [wreg]
 10514  0646  303F               	movlw	63
 10515  0647  0020               	movlb	0	; select bank0
 10516  0648  00A0               	movwf	??_initComand
 10517  0649  0820               	movf	??_initComand,w
 10518  064A  0021               	movlb	1	; select bank1
 10519  064B  00A0               	movwf	_command^(0+128)
 10520                           
 10521                           ;command.c: 17: command[1] = 0b01111111;
 10522  064C  307F               	movlw	127
 10523  064D  0020               	movlb	0	; select bank0
 10524  064E  00A0               	movwf	??_initComand
 10525  064F  0820               	movf	??_initComand,w
 10526  0650  0021               	movlb	1	; select bank1
 10527  0651  00A1               	movwf	(_command^(0+128)+1)
 10528                           
 10529                           ;command.c: 18: command[2] = 0b10011111;;
 10530  0652  309F               	movlw	159
 10531  0653  0020               	movlb	0	; select bank0
 10532  0654  00A0               	movwf	??_initComand
 10533  0655  0820               	movf	??_initComand,w
 10534  0656  0021               	movlb	1	; select bank1
 10535  0657  00A2               	movwf	(_command^(0+128)+2)
 10536                           
 10537                           ;command.c: 19: command[3] = 0b10101111;
 10538  0658  30AF               	movlw	175
 10539  0659  0020               	movlb	0	; select bank0
 10540  065A  00A0               	movwf	??_initComand
 10541  065B  0820               	movf	??_initComand,w
 10542  065C  0021               	movlb	1	; select bank1
 10543  065D  00A3               	movwf	(_command^(0+128)+3)
 10544                           
 10545                           ;command.c: 20: command[4] = 0b10111111;
 10546  065E  30BF               	movlw	191
 10547  065F  0020               	movlb	0	; select bank0
 10548  0660  00A0               	movwf	??_initComand
 10549  0661  0820               	movf	??_initComand,w
 10550  0662  0021               	movlb	1	; select bank1
 10551  0663  00A4               	movwf	(_command^(0+128)+4)
 10552                           
 10553                           ;command.c: 21: command[5] = 0b11001111;
 10554  0664  30CF               	movlw	207
 10555  0665  0020               	movlb	0	; select bank0
 10556  0666  00A0               	movwf	??_initComand
 10557  0667  0820               	movf	??_initComand,w
 10558  0668  0021               	movlb	1	; select bank1
 10559  0669  00A5               	movwf	(_command^(0+128)+5)
 10560                           
 10561                           ;command.c: 22: command[6] = 0b11010111;
 10562  066A  30D7               	movlw	215
 10563  066B  0020               	movlb	0	; select bank0
 10564  066C  00A0               	movwf	??_initComand
 10565  066D  0820               	movf	??_initComand,w
 10566  066E  0021               	movlb	1	; select bank1
 10567  066F  00A6               	movwf	(_command^(0+128)+6)
 10568                           
 10569                           ;command.c: 23: command[7] = 0b11011111;
 10570  0670  30DF               	movlw	223
 10571  0671  0020               	movlb	0	; select bank0
 10572  0672  00A0               	movwf	??_initComand
 10573  0673  0820               	movf	??_initComand,w
 10574  0674  0021               	movlb	1	; select bank1
 10575  0675  00A7               	movwf	(_command^(0+128)+7)
 10576                           
 10577                           ;command.c: 24: command[8] = 0b11100111;
 10578  0676  30E7               	movlw	231
 10579  0677  0020               	movlb	0	; select bank0
 10580  0678  00A0               	movwf	??_initComand
 10581  0679  0820               	movf	??_initComand,w
 10582  067A  0021               	movlb	1	; select bank1
 10583  067B  00A8               	movwf	(_command^(0+128)+8)
 10584                           
 10585                           ;command.c: 25: command[9] = 0b11101011;
 10586  067C  30EB               	movlw	235
 10587  067D  0020               	movlb	0	; select bank0
 10588  067E  00A0               	movwf	??_initComand
 10589  067F  0820               	movf	??_initComand,w
 10590  0680  0021               	movlb	1	; select bank1
 10591  0681  00A9               	movwf	(_command^(0+128)+9)
 10592                           
 10593                           ;command.c: 26: command[10] = 0b11101111;
 10594  0682  30EF               	movlw	239
 10595  0683  0020               	movlb	0	; select bank0
 10596  0684  00A0               	movwf	??_initComand
 10597  0685  0820               	movf	??_initComand,w
 10598  0686  0021               	movlb	1	; select bank1
 10599  0687  00AA               	movwf	(_command^(0+128)+10)
 10600                           
 10601                           ;command.c: 27: command[11] = 0b11110001;
 10602  0688  30F1               	movlw	241
 10603  0689  0020               	movlb	0	; select bank0
 10604  068A  00A0               	movwf	??_initComand
 10605  068B  0820               	movf	??_initComand,w
 10606  068C  0021               	movlb	1	; select bank1
 10607  068D  00AB               	movwf	(_command^(0+128)+11)
 10608                           
 10609                           ;command.c: 28: command[12] = 0b11110011;
 10610  068E  30F3               	movlw	243
 10611  068F  0020               	movlb	0	; select bank0
 10612  0690  00A0               	movwf	??_initComand
 10613  0691  0820               	movf	??_initComand,w
 10614  0692  0021               	movlb	1	; select bank1
 10615  0693  00AC               	movwf	(_command^(0+128)+12)
 10616                           
 10617                           ;command.c: 29: command[13] = 0b11110101;
 10618  0694  30F5               	movlw	245
 10619  0695  0020               	movlb	0	; select bank0
 10620  0696  00A0               	movwf	??_initComand
 10621  0697  0820               	movf	??_initComand,w
 10622  0698  0021               	movlb	1	; select bank1
 10623  0699  00AD               	movwf	(_command^(0+128)+13)
 10624                           
 10625                           ;command.c: 30: command[14] = 0b11110111;
 10626  069A  30F7               	movlw	247
 10627  069B  0020               	movlb	0	; select bank0
 10628  069C  00A0               	movwf	??_initComand
 10629  069D  0820               	movf	??_initComand,w
 10630  069E  0021               	movlb	1	; select bank1
 10631  069F  00AE               	movwf	(_command^(0+128)+14)
 10632                           
 10633                           ;command.c: 31: command[15] = 0b11111000;
 10634  06A0  30F8               	movlw	248
 10635  06A1  0020               	movlb	0	; select bank0
 10636  06A2  00A0               	movwf	??_initComand
 10637  06A3  0820               	movf	??_initComand,w
 10638  06A4  0021               	movlb	1	; select bank1
 10639  06A5  00AF               	movwf	(_command^(0+128)+15)
 10640                           
 10641                           ;command.c: 32: command[16] = 0b11111001;
 10642  06A6  30F9               	movlw	249
 10643  06A7  0020               	movlb	0	; select bank0
 10644  06A8  00A0               	movwf	??_initComand
 10645  06A9  0820               	movf	??_initComand,w
 10646  06AA  0021               	movlb	1	; select bank1
 10647  06AB  00B0               	movwf	(_command^(0+128)+16)
 10648                           
 10649                           ;command.c: 33: command[17] = 0b11111010;
 10650  06AC  30FA               	movlw	250
 10651  06AD  0020               	movlb	0	; select bank0
 10652  06AE  00A0               	movwf	??_initComand
 10653  06AF  0820               	movf	??_initComand,w
 10654  06B0  0021               	movlb	1	; select bank1
 10655  06B1  00B1               	movwf	(_command^(0+128)+17)
 10656  06B2  0008               	return
 10657  06B3                     __end_of_initComand:	
 10658                           
 10659                           	psect	text32
 10660  0DFA                     __ptext32:	
 10661 ;; *************** function _initCargo *****************
 10662 ;; Defined at:
 10663 ;;		line 14 in file "struct.c"
 10664 ;; Parameters:    Size  Location     Type
 10665 ;;		None
 10666 ;; Auto vars:     Size  Location     Type
 10667 ;;		None
 10668 ;; Return value:  Size  Location     Type
 10669 ;;                  1    wreg      void 
 10670 ;; Registers used:
 10671 ;;		wreg, status,2
 10672 ;; Tracked objects:
 10673 ;;		On entry : 0/0
 10674 ;;		On exit  : 0/0
 10675 ;;		Unchanged: 0/0
 10676 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10677 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10678 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10680 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10681 ;;Total ram usage:        0 bytes
 10682 ;; Hardware stack levels used:    1
 10683 ;; Hardware stack levels required when called:    3
 10684 ;; This function calls:
 10685 ;;		Nothing
 10686 ;; This function is called by:
 10687 ;;		_main
 10688 ;; This function uses a non-reentrant model
 10689 ;;
 10690                           
 10691                           
 10692                           ;psect for function _initCargo
 10693  0DFA                     _initCargo:	
 10694                           
 10695                           ;struct.c: 15: isMycargo = 1;
 10696                           
 10697                           ;incstack = 0
 10698                           ; Regs used in _initCargo: [wreg+status,2]
 10699  0DFA  14F0               	bsf	_isMycargo/(0+8),_isMycargo& (0+7)
 10700                           
 10701                           ;struct.c: 16: cargoData.WorkingCount = 0;
 10702  0DFB  3000               	movlw	0
 10703  0DFC  0020               	movlb	0	; select bank0
 10704  0DFD  00E8               	movwf	_cargoData+15
 10705  0DFE  3000               	movlw	0
 10706  0DFF  00E7               	movwf	_cargoData+14
 10707  0E00  3000               	movlw	0
 10708  0E01  00E6               	movwf	_cargoData+13
 10709  0E02  3000               	movlw	0
 10710  0E03  00E5               	movwf	_cargoData+12
 10711                           
 10712                           ;struct.c: 17: cargoData.address = 0;
 10713  0E04  01DD               	clrf	_cargoData+4
 10714                           
 10715                           ;struct.c: 18: cargoData.cargoLength = 0xFFFF;
 10716  0E05  30FF               	movlw	255
 10717  0E06  00D9               	movwf	_cargoData
 10718  0E07  30FF               	movlw	255
 10719  0E08  00DA               	movwf	_cargoData+1
 10720                           
 10721                           ;struct.c: 19: cargoData.clutchMode = 0;
 10722  0E09  01E4               	clrf	_cargoData+11
 10723                           
 10724                           ;struct.c: 20: cargoData.command = 0;
 10725  0E0A  01DB               	clrf	_cargoData+2
 10726                           
 10727                           ;struct.c: 21: cargoData.index = 0;
 10728  0E0B  01DC               	clrf	_cargoData+3
 10729                           
 10730                           ;struct.c: 22: cargoData.linkAngleTo = 360;
 10731  0E0C  3068               	movlw	104
 10732  0E0D  00DE               	movwf	_cargoData+5
 10733  0E0E  3001               	movlw	1
 10734  0E0F  00DF               	movwf	_cargoData+6
 10735                           
 10736                           ;struct.c: 23: cargoData.passedTime = 0;
 10737  0E10  01E2               	clrf	_cargoData+9
 10738  0E11  01E3               	clrf	_cargoData+10
 10739  0E12  0008               	return
 10740  0E13                     __end_of_initCargo:	
 10741                           
 10742                           	psect	text33
 10743  0EE0                     __ptext33:	
 10744 ;; *************** function _init *****************
 10745 ;; Defined at:
 10746 ;;		line 105 in file "D:/programdata/16F18346_Link_IC.X/main.c"
 10747 ;; Parameters:    Size  Location     Type
 10748 ;;		None
 10749 ;; Auto vars:     Size  Location     Type
 10750 ;;		None
 10751 ;; Return value:  Size  Location     Type
 10752 ;;                  1    wreg      void 
 10753 ;; Registers used:
 10754 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10755 ;; Tracked objects:
 10756 ;;		On entry : 0/0
 10757 ;;		On exit  : 0/0
 10758 ;;		Unchanged: 0/0
 10759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10760 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10761 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10762 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10763 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10764 ;;Total ram usage:        0 bytes
 10765 ;; Hardware stack levels used:    1
 10766 ;; Hardware stack levels required when called:    4
 10767 ;; This function calls:
 10768 ;;		_clear
 10769 ;;		_initbuffer
 10770 ;; This function is called by:
 10771 ;;		_main
 10772 ;; This function uses a non-reentrant model
 10773 ;;
 10774                           
 10775                           
 10776                           ;psect for function _init
 10777  0EE0                     _init:	
 10778                           
 10779                           ;main.c: 106: count1 = 0;
 10780                           
 10781                           ;incstack = 0
 10782                           ; Regs used in _init: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10783  0EE0  0021               	movlb	1	; select bank1
 10784  0EE1  01D7               	clrf	_count1^(0+128)
 10785  0EE2  01D8               	clrf	(_count1+1)^(0+128)
 10786                           
 10787                           ;main.c: 107: count2 = 0;
 10788  0EE3  0020               	movlb	0	; select bank0
 10789  0EE4  01EB               	clrf	_count2
 10790  0EE5  01EC               	clrf	_count2+1
 10791                           
 10792                           ;main.c: 108: initbuffer();
 10793  0EE6  318F  2709  318E   	fcall	_initbuffer
 10794                           
 10795                           ;main.c: 110: OSCFRQbits.HFFRQ = 0b0111;
 10796  0EE9  0032               	movlb	18	; select bank18
 10797  0EEA  081F               	movf	31,w	;volatile
 10798  0EEB  39F0               	andlw	-16
 10799  0EEC  3807               	iorlw	7
 10800  0EED  009F               	movwf	31	;volatile
 10801                           
 10802                           ;main.c: 111: OSCTUNEbits.HFTUN = 0b000000;
 10803  0EEE  30C0               	movlw	-64
 10804  0EEF  059E               	andwf	30,f	;volatile
 10805                           
 10806                           ;main.c: 112: clear();
 10807  0EF0  318D  2599         	fcall	_clear
 10808                           
 10809                           ;main.c: 113: WPUC = 0b11111111;
 10810  0EF2  30FF               	movlw	255
 10811  0EF3  0024               	movlb	4	; select bank4
 10812  0EF4  008E               	movwf	14	;volatile
 10813                           
 10814                           ;main.c: 114: WPUB = 0b11111111;
 10815  0EF5  30FF               	movlw	255
 10816  0EF6  008D               	movwf	13	;volatile
 10817                           
 10818                           ;main.c: 115: WPUA = 0b11111111;
 10819  0EF7  30FF               	movlw	255
 10820  0EF8  008C               	movwf	12	;volatile
 10821                           
 10822                           ;main.c: 116: TRISBbits.TRISB6 = 1;
 10823  0EF9  0021               	movlb	1	; select bank1
 10824  0EFA  170D               	bsf	13,6	;volatile
 10825                           
 10826                           ;main.c: 117: TRISBbits.TRISB4 = 1;
 10827  0EFB  160D               	bsf	13,4	;volatile
 10828                           
 10829                           ;main.c: 118: TRISCbits.TRISC6 = 1;
 10830  0EFC  170E               	bsf	14,6	;volatile
 10831                           
 10832                           ;main.c: 119: INLVLBbits.INLVLB4 = 0;
 10833  0EFD  0027               	movlb	7	; select bank7
 10834  0EFE  120D               	bcf	13,4	;volatile
 10835                           
 10836                           ;main.c: 120: INLVLBbits.INLVLB6 = 0;
 10837  0EFF  130D               	bcf	13,6	;volatile
 10838                           
 10839                           ;main.c: 121: INLVLCbits.INLVLC5 = 0;
 10840  0F00  128E               	bcf	14,5	;volatile
 10841                           
 10842                           ;main.c: 123: TRISBbits.TRISB5 = 1;
 10843  0F01  0021               	movlb	1	; select bank1
 10844  0F02  168D               	bsf	13,5	;volatile
 10845                           
 10846                           ;main.c: 124: INLVLBbits.INLVLB5 = 0;
 10847  0F03  0027               	movlb	7	; select bank7
 10848  0F04  128D               	bcf	13,5	;volatile
 10849                           
 10850                           ;main.c: 125: INLVLBbits.INLVLB7 = 0;
 10851  0F05  138D               	bcf	13,7	;volatile
 10852                           
 10853                           ;main.c: 126: INLVLAbits.INLVLA1 = 0;
 10854  0F06  108C               	bcf	12,1	;volatile
 10855                           
 10856                           ;main.c: 127: INLVLAbits.INLVLA2 = 0;
 10857  0F07  110C               	bcf	12,2	;volatile
 10858  0F08  0008               	return
 10859  0F09                     __end_of_init:	
 10860                           ;main.c: 129: return;
 10861                           
 10862                           
 10863                           	psect	text34
 10864  0F09                     __ptext34:	
 10865 ;; *************** function _initbuffer *****************
 10866 ;; Defined at:
 10867 ;;		line 99 in file "D:/programdata/16F18346_Link_IC.X/main.c"
 10868 ;; Parameters:    Size  Location     Type
 10869 ;;		None
 10870 ;; Auto vars:     Size  Location     Type
 10871 ;;  i               2    2[BANK0 ] int 
 10872 ;; Return value:  Size  Location     Type
 10873 ;;                  1    wreg      void 
 10874 ;; Registers used:
 10875 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10876 ;; Tracked objects:
 10877 ;;		On entry : 0/0
 10878 ;;		On exit  : 0/0
 10879 ;;		Unchanged: 0/0
 10880 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10881 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10882 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10883 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10884 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10885 ;;Total ram usage:        4 bytes
 10886 ;; Hardware stack levels used:    1
 10887 ;; Hardware stack levels required when called:    3
 10888 ;; This function calls:
 10889 ;;		Nothing
 10890 ;; This function is called by:
 10891 ;;		_init
 10892 ;; This function uses a non-reentrant model
 10893 ;;
 10894                           
 10895                           
 10896                           ;psect for function _initbuffer
 10897  0F09                     _initbuffer:	
 10898                           
 10899                           ;main.c: 100: for(int i = 0; i < 256; i++){
 10900                           
 10901                           ;incstack = 0
 10902                           ; Regs used in _initbuffer: [wreg+fsr1l+fsr1h+status,2+status,0]
 10903  0F09  0020               	movlb	0	; select bank0
 10904  0F0A  01A2               	clrf	initbuffer@i
 10905  0F0B  01A3               	clrf	initbuffer@i+1
 10906  0F0C                     L30:	
 10907  0F0C  0823               	movf	initbuffer@i+1,w
 10908  0F0D  3A80               	xorlw	128
 10909  0F0E  00A0               	movwf	??_initbuffer
 10910  0F0F  3081               	movlw	129
 10911  0F10  0220               	subwf	??_initbuffer,w
 10912  0F11  1D03               	skipz
 10913  0F12  2F15               	goto	u2305
 10914  0F13  3000               	movlw	0
 10915  0F14  0222               	subwf	initbuffer@i,w
 10916  0F15                     u2305:	
 10917  0F15  1803               	btfsc	3,0
 10918  0F16  0008               	return
 10919                           
 10920                           ;main.c: 101: spi1_buffer_data[i] = 0;
 10921  0F17  30F0               	movlw	240
 10922  0F18  0020               	movlb	0	; select bank0
 10923  0F19  00A0               	movwf	??_initbuffer
 10924  0F1A  3026               	movlw	38
 10925  0F1B  00A1               	movwf	??_initbuffer+1
 10926  0F1C  0822               	movf	initbuffer@i,w
 10927  0F1D  0720               	addwf	??_initbuffer,w
 10928  0F1E  0086               	movwf	6
 10929  0F1F  0823               	movf	initbuffer@i+1,w
 10930  0F20  3D21               	addwfc	??_initbuffer+1,w
 10931  0F21  0087               	movwf	7
 10932  0F22  0181               	clrf	1
 10933                           
 10934                           ;main.c: 102: spi2_buffer_data[i] = 0;
 10935  0F23  30F0               	movlw	240
 10936  0F24  00A0               	movwf	??_initbuffer
 10937  0F25  3025               	movlw	37
 10938  0F26  00A1               	movwf	??_initbuffer+1
 10939  0F27  0822               	movf	initbuffer@i,w
 10940  0F28  0720               	addwf	??_initbuffer,w
 10941  0F29  0086               	movwf	6
 10942  0F2A  0823               	movf	initbuffer@i+1,w
 10943  0F2B  3D21               	addwfc	??_initbuffer+1,w
 10944  0F2C  0087               	movwf	7
 10945  0F2D  0181               	clrf	1
 10946  0F2E  3001               	movlw	1
 10947  0F2F  07A2               	addwf	initbuffer@i,f
 10948  0F30  3000               	movlw	0
 10949  0F31  3DA3               	addwfc	initbuffer@i+1,f
 10950  0F32  2F0C               	goto	L30
 10951  0F33                     __end_of_initbuffer:	
 10952                           
 10953                           	psect	text35
 10954  0D99                     __ptext35:	
 10955 ;; *************** function _clear *****************
 10956 ;; Defined at:
 10957 ;;		line 9 in file "D:/programdata/16F18346_Link_IC.X/util.c"
 10958 ;; Parameters:    Size  Location     Type
 10959 ;;		None
 10960 ;; Auto vars:     Size  Location     Type
 10961 ;;		None
 10962 ;; Return value:  Size  Location     Type
 10963 ;;                  1    wreg      void 
 10964 ;; Registers used:
 10965 ;;		status,2
 10966 ;; Tracked objects:
 10967 ;;		On entry : 0/0
 10968 ;;		On exit  : 0/0
 10969 ;;		Unchanged: 0/0
 10970 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10971 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10972 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10973 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10974 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10975 ;;Total ram usage:        0 bytes
 10976 ;; Hardware stack levels used:    1
 10977 ;; Hardware stack levels required when called:    3
 10978 ;; This function calls:
 10979 ;;		Nothing
 10980 ;; This function is called by:
 10981 ;;		_init
 10982 ;; This function uses a non-reentrant model
 10983 ;;
 10984                           
 10985                           
 10986                           ;psect for function _clear
 10987  0D99                     _clear:	
 10988                           
 10989                           ;util.c: 10: ANSELA = 0x00;
 10990                           
 10991                           ;incstack = 0
 10992                           ; Regs used in _clear: [status,2]
 10993  0D99  0023               	movlb	3	; select bank3
 10994  0D9A  018C               	clrf	12	;volatile
 10995                           
 10996                           ;util.c: 11: ANSELB = 0x00;
 10997  0D9B  018D               	clrf	13	;volatile
 10998                           
 10999                           ;util.c: 12: ANSELC = 0x00;
 11000  0D9C  018E               	clrf	14	;volatile
 11001                           
 11002                           ;util.c: 13: PORTA = 0x00;
 11003  0D9D  0020               	movlb	0	; select bank0
 11004  0D9E  018C               	clrf	12	;volatile
 11005                           
 11006                           ;util.c: 14: PORTB = 0x00;
 11007  0D9F  018D               	clrf	13	;volatile
 11008                           
 11009                           ;util.c: 15: PORTC = 0x00;
 11010  0DA0  018E               	clrf	14	;volatile
 11011                           
 11012                           ;util.c: 16: TRISA = 0x00;
 11013  0DA1  0021               	movlb	1	; select bank1
 11014  0DA2  018C               	clrf	12	;volatile
 11015                           
 11016                           ;util.c: 17: TRISB = 0x00;
 11017  0DA3  018D               	clrf	13	;volatile
 11018                           
 11019                           ;util.c: 18: TRISC = 0x00;
 11020  0DA4  018E               	clrf	14	;volatile
 11021  0DA5  0008               	return
 11022  0DA6                     __end_of_clear:	
 11023                           
 11024                           	psect	intentry
 11025  0004                     __pintentry:	
 11026 ;; *************** function _InterMSSP *****************
 11027 ;; Defined at:
 11028 ;;		line 70 in file "D:/programdata/16F18346_Link_IC.X/main.c"
 11029 ;; Parameters:    Size  Location     Type
 11030 ;;		None
 11031 ;; Auto vars:     Size  Location     Type
 11032 ;;  buf             1    8[COMMON] unsigned char 
 11033 ;; Return value:  Size  Location     Type
 11034 ;;                  1    wreg      void 
 11035 ;; Registers used:
 11036 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11037 ;; Tracked objects:
 11038 ;;		On entry : 0/0
 11039 ;;		On exit  : 0/0
 11040 ;;		Unchanged: 0/0
 11041 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11042 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11043 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11044 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11045 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11046 ;;Total ram usage:        7 bytes
 11047 ;; Hardware stack levels used:    1
 11048 ;; Hardware stack levels required when called:    2
 11049 ;; This function calls:
 11050 ;;		_addAngle
 11051 ;;		_setSPI1sendData
 11052 ;; This function is called by:
 11053 ;;		Interrupt level 1
 11054 ;; This function uses a non-reentrant model
 11055 ;;
 11056                           
 11057  0004                     _InterMSSP:	
 11058                           
 11059                           ;incstack = 0
 11060  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 11061                           
 11062                           ; Regs used in _InterMSSP: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11063  0005  3180               	pagesel	$
 11064  0006  0020               	movlb	0	; select bank0
 11065  0007  087F               	movf	127,w
 11066  0008  00F9               	movwf	??_InterMSSP+5
 11067                           
 11068                           ;main.c: 72: if (PIR1bits.SSP1IF) {
 11069  0009  1D91               	btfss	17,3	;volatile
 11070  000A  2837               	goto	i1l2903
 11071                           
 11072                           ;main.c: 74: unsigned char buf = SSP1BUF;
 11073  000B  0024               	movlb	4	; select bank4
 11074  000C  0811               	movf	17,w	;volatile
 11075  000D  00F4               	movwf	??_InterMSSP
 11076  000E  0874               	movf	??_InterMSSP,w
 11077  000F  00FA               	movwf	InterMSSP@buf
 11078                           
 11079                           ;main.c: 75: if(buf > 0){
 11080  0010  087A               	movf	InterMSSP@buf,w
 11081  0011  1903               	btfsc	3,2
 11082  0012  2830               	goto	i1l2899
 11083                           
 11084                           ;main.c: 76: spi1_buffer_data[count1] = buf -SPI_OFFSET_BYTE;
 11085  0013  037D               	decf	_SPI_OFFSET_BYTE,w
 11086  0014  3AFF               	xorlw	255
 11087  0015  077A               	addwf	InterMSSP@buf,w
 11088  0016  00F4               	movwf	??_InterMSSP
 11089  0017  30F0               	movlw	240
 11090  0018  00F5               	movwf	??_InterMSSP+1
 11091  0019  3026               	movlw	38
 11092  001A  00F6               	movwf	??_InterMSSP+2
 11093  001B  0021               	movlb	1	; select bank1
 11094  001C  0857               	movf	_count1^(0+128),w
 11095  001D  0775               	addwf	??_InterMSSP+1,w
 11096  001E  00F7               	movwf	??_InterMSSP+3
 11097  001F  0858               	movf	(_count1+1)^(0+128),w
 11098  0020  3D76               	addwfc	??_InterMSSP+2,w
 11099  0021  00F8               	movwf	??_InterMSSP+4
 11100  0022  0877               	movf	??_InterMSSP+3,w
 11101  0023  0086               	movwf	6
 11102  0024  0878               	movf	??_InterMSSP+4,w
 11103  0025  0087               	movwf	7
 11104  0026  0874               	movf	??_InterMSSP,w
 11105  0027  0081               	movwf	1
 11106                           
 11107                           ;main.c: 77: setSPI1sendData();
 11108  0028  318E  2673  3180   	fcall	_setSPI1sendData
 11109                           
 11110                           ;main.c: 78: count1++;
 11111  002B  3001               	movlw	1
 11112  002C  0021               	movlb	1	; select bank1
 11113  002D  07D7               	addwf	_count1^(0+128),f
 11114  002E  3000               	movlw	0
 11115  002F  3DD8               	addwfc	(_count1+1)^(0+128),f
 11116  0030                     i1l2899:	
 11117                           
 11118                           ;main.c: 79: }
 11119                           ;main.c: 80: if(count1 == 256){
 11120  0030  0021               	movlb	1	; select bank1
 11121  0031  0358               	decf	(_count1+1)^(0+128),w
 11122  0032  0457               	iorwf	_count1^(0+128),w
 11123  0033  1D03               	btfss	3,2
 11124  0034  2837               	goto	i1l2903
 11125                           
 11126                           ;main.c: 81: count1 = 0;
 11127  0035  01D7               	clrf	_count1^(0+128)
 11128  0036  01D8               	clrf	(_count1+1)^(0+128)
 11129  0037                     i1l2903:	
 11130                           
 11131                           ;main.c: 82: }
 11132                           ;main.c: 83: }
 11133                           ;main.c: 89: if(IOCAFbits.IOCAF3 == 1){
 11134  0037  0027               	movlb	7	; select bank7
 11135  0038  1D93               	btfss	19,3	;volatile
 11136  0039  283C               	goto	i1l2907
 11137                           
 11138                           ;main.c: 91: addAngle();
 11139  003A  318D  25B3         	fcall	_addAngle
 11140  003C                     i1l2907:	
 11141                           
 11142                           ;main.c: 92: }
 11143                           ;main.c: 93: PIR1bits.SSP1IF = 0 ;
 11144  003C  0020               	movlb	0	; select bank0
 11145  003D  1191               	bcf	17,3	;volatile
 11146                           
 11147                           ;main.c: 95: IOCAFbits.IOCAF3 = 0;
 11148  003E  0027               	movlb	7	; select bank7
 11149  003F  1193               	bcf	19,3	;volatile
 11150                           
 11151                           ;main.c: 96: PIR0bits.IOCIF = 0;
 11152  0040  0020               	movlb	0	; select bank0
 11153  0041  1210               	bcf	16,4	;volatile
 11154                           
 11155                           ;main.c: 97: PIR0bits.INTF = 0;
 11156  0042  1010               	bcf	16,0	;volatile
 11157  0043  0879               	movf	??_InterMSSP+5,w
 11158  0044  00FF               	movwf	127
 11159  0045  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 11160  0046  0009               	retfie
 11161  0047                     __end_of_InterMSSP:	
 11162                           
 11163                           	psect	text37
 11164  0E73                     __ptext37:	
 11165 ;; *************** function _setSPI1sendData *****************
 11166 ;; Defined at:
 11167 ;;		line 91 in file "D:/programdata/16F18346_Link_IC.X/spiControl.c"
 11168 ;; Parameters:    Size  Location     Type
 11169 ;;		None
 11170 ;; Auto vars:     Size  Location     Type
 11171 ;;		None
 11172 ;; Return value:  Size  Location     Type
 11173 ;;                  1    wreg      void 
 11174 ;; Registers used:
 11175 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11176 ;; Tracked objects:
 11177 ;;		On entry : 0/0
 11178 ;;		On exit  : 0/0
 11179 ;;		Unchanged: 0/0
 11180 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11181 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11182 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11183 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11184 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11185 ;;Total ram usage:        2 bytes
 11186 ;; Hardware stack levels used:    1
 11187 ;; Hardware stack levels required when called:    1
 11188 ;; This function calls:
 11189 ;;		_isSPI2read
 11190 ;; This function is called by:
 11191 ;;		_InterMSSP
 11192 ;; This function uses a non-reentrant model
 11193 ;;
 11194                           
 11195                           
 11196                           ;psect for function _setSPI1sendData
 11197  0E73                     _setSPI1sendData:	
 11198                           
 11199                           ;spiControl.c: 92: if(!isSPI2read() == 1){
 11200                           
 11201                           ;incstack = 0
 11202                           ; Regs used in _setSPI1sendData: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11203  0E73  318D  25C2  318E   	fcall	_isSPI2read
 11204  0E76  1803               	btfsc	3,0
 11205  0E77  2E92               	goto	i1l2691
 11206                           
 11207                           ;spiControl.c: 93: SSP1BUF = spi2_buffer_data[read_count2];
 11208  0E78  30F0               	movlw	240
 11209  0E79  00F2               	movwf	??_setSPI1sendData
 11210  0E7A  3025               	movlw	37
 11211  0E7B  00F3               	movwf	??_setSPI1sendData+1
 11212  0E7C  0021               	movlb	1	; select bank1
 11213  0E7D  084F               	movf	_read_count2^(0+128),w
 11214  0E7E  0772               	addwf	??_setSPI1sendData,w
 11215  0E7F  0086               	movwf	6
 11216  0E80  0850               	movf	(_read_count2+1)^(0+128),w
 11217  0E81  3D73               	addwfc	??_setSPI1sendData+1,w
 11218  0E82  0087               	movwf	7
 11219  0E83  0801               	movf	1,w
 11220  0E84  0024               	movlb	4	; select bank4
 11221  0E85  0091               	movwf	17	;volatile
 11222                           
 11223                           ;spiControl.c: 94: read_count2++;
 11224  0E86  3001               	movlw	1
 11225  0E87  0021               	movlb	1	; select bank1
 11226  0E88  07CF               	addwf	_read_count2^(0+128),f
 11227  0E89  3000               	movlw	0
 11228  0E8A  3DD0               	addwfc	(_read_count2+1)^(0+128),f
 11229                           
 11230                           ;spiControl.c: 95: if(read_count2 == 256){
 11231  0E8B  0350               	decf	(_read_count2+1)^(0+128),w
 11232  0E8C  044F               	iorwf	_read_count2^(0+128),w
 11233  0E8D  1D03               	btfss	3,2
 11234  0E8E  0008               	return
 11235                           
 11236                           ;spiControl.c: 96: read_count2 = 0;
 11237  0E8F  01CF               	clrf	_read_count2^(0+128)
 11238  0E90  01D0               	clrf	(_read_count2+1)^(0+128)
 11239                           
 11240                           ;spiControl.c: 97: }
 11241                           ;spiControl.c: 98: }else{
 11242  0E91  0008               	return
 11243  0E92                     i1l2691:	
 11244                           
 11245                           ;spiControl.c: 99: SSP1BUF = 0x00;
 11246  0E92  0024               	movlb	4	; select bank4
 11247  0E93  0191               	clrf	17	;volatile
 11248  0E94  0008               	return
 11249  0E95                     __end_of_setSPI1sendData:	
 11250                           
 11251                           	psect	text38
 11252  0DC2                     __ptext38:	
 11253 ;; *************** function _isSPI2read *****************
 11254 ;; Defined at:
 11255 ;;		line 75 in file "D:/programdata/16F18346_Link_IC.X/spiControl.c"
 11256 ;; Parameters:    Size  Location     Type
 11257 ;;		None
 11258 ;; Auto vars:     Size  Location     Type
 11259 ;;		None
 11260 ;; Return value:  Size  Location     Type
 11261 ;;		None               void
 11262 ;; Registers used:
 11263 ;;		wreg, status,2, status,0
 11264 ;; Tracked objects:
 11265 ;;		On entry : 0/0
 11266 ;;		On exit  : 0/0
 11267 ;;		Unchanged: 0/0
 11268 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11269 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11270 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11271 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11272 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11273 ;;Total ram usage:        0 bytes
 11274 ;; Hardware stack levels used:    1
 11275 ;; This function calls:
 11276 ;;		Nothing
 11277 ;; This function is called by:
 11278 ;;		_setSPI1sendData
 11279 ;; This function uses a non-reentrant model
 11280 ;;
 11281                           
 11282                           
 11283                           ;psect for function _isSPI2read
 11284  0DC2                     _isSPI2read:	
 11285                           
 11286                           ;spiControl.c: 76: if(read_count2 == count2){
 11287                           
 11288                           ;incstack = 0
 11289                           ; Regs used in _isSPI2read: [wreg+status,2+status,0]
 11290  0DC2  0020               	movlb	0	; select bank0
 11291  0DC3  086C               	movf	_count2+1,w
 11292  0DC4  0021               	movlb	1	; select bank1
 11293  0DC5  0650               	xorwf	(_read_count2+1)^(0+128),w
 11294  0DC6  1D03               	skipz
 11295  0DC7  2DCC               	goto	u138_25
 11296  0DC8  0020               	movlb	0	; select bank0
 11297  0DC9  086B               	movf	_count2,w
 11298  0DCA  0021               	movlb	1	; select bank1
 11299  0DCB  064F               	xorwf	_read_count2^(0+128),w
 11300  0DCC                     u138_25:	
 11301  0DCC  1D03               	skipz
 11302  0DCD  2DD0               	goto	i1l2475
 11303                           
 11304                           ;spiControl.c: 77: return 1;
 11305  0DCE  1403               	setc
 11306                           
 11307                           ;spiControl.c: 78: }else{
 11308  0DCF  0008               	return
 11309  0DD0                     i1l2475:	
 11310                           
 11311                           ;spiControl.c: 79: return 0;
 11312  0DD0  1003               	clrc
 11313  0DD1  0008               	return
 11314  0DD2                     __end_of_isSPI2read:	
 11315                           
 11316                           	psect	text39
 11317  0DB3                     __ptext39:	
 11318 ;; *************** function _addAngle *****************
 11319 ;; Defined at:
 11320 ;;		line 62 in file "D:/programdata/16F18346_Link_IC.X/IO_control.c"
 11321 ;; Parameters:    Size  Location     Type
 11322 ;;		None
 11323 ;; Auto vars:     Size  Location     Type
 11324 ;;		None
 11325 ;; Return value:  Size  Location     Type
 11326 ;;                  1    wreg      void 
 11327 ;; Registers used:
 11328 ;;		wreg, status,2, status,0, pclath, cstack
 11329 ;; Tracked objects:
 11330 ;;		On entry : 0/0
 11331 ;;		On exit  : 0/0
 11332 ;;		Unchanged: 0/0
 11333 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11334 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11335 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11336 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11337 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11338 ;;Total ram usage:        0 bytes
 11339 ;; Hardware stack levels used:    1
 11340 ;; Hardware stack levels required when called:    1
 11341 ;; This function calls:
 11342 ;;		_getMoter_lotate
 11343 ;;		_setCargoAngle
 11344 ;; This function is called by:
 11345 ;;		_InterMSSP
 11346 ;; This function uses a non-reentrant model
 11347 ;;
 11348                           
 11349                           
 11350                           ;psect for function _addAngle
 11351  0DB3                     _addAngle:	
 11352                           
 11353                           ;IO_control.c: 63: linkAngle += getMoter_lotate();
 11354                           
 11355                           ;incstack = 0
 11356                           ; Regs used in _addAngle: [wreg+status,2+status,0+pclath+cstack]
 11357  0DB3  318D  2550  318D   	fcall	_getMoter_lotate
 11358  0DB6  0872               	movf	?_getMoter_lotate,w
 11359  0DB7  0021               	movlb	1	; select bank1
 11360  0DB8  07E0               	addwf	_linkAngle^(0+128),f
 11361  0DB9  0873               	movf	?_getMoter_lotate+1,w
 11362  0DBA  3DE1               	addwfc	(_linkAngle+1)^(0+128),f
 11363                           
 11364                           ;IO_control.c: 64: setCargoAngle(linkAngle);
 11365  0DBB  0861               	movf	(_linkAngle+1)^(0+128),w
 11366  0DBC  00F3               	movwf	setCargoAngle@m_linkAngleTo+1
 11367  0DBD  0860               	movf	_linkAngle^(0+128),w
 11368  0DBE  00F2               	movwf	setCargoAngle@m_linkAngleTo
 11369  0DBF  318D  2556         	fcall	_setCargoAngle
 11370  0DC1  0008               	return
 11371  0DC2                     __end_of_addAngle:	
 11372                           
 11373                           	psect	text40
 11374  0D56                     __ptext40:	
 11375 ;; *************** function _setCargoAngle *****************
 11376 ;; Defined at:
 11377 ;;		line 41 in file "struct.c"
 11378 ;; Parameters:    Size  Location     Type
 11379 ;;  m_linkAngleT    2    0[COMMON] int 
 11380 ;; Auto vars:     Size  Location     Type
 11381 ;;		None
 11382 ;; Return value:  Size  Location     Type
 11383 ;;                  1    wreg      void 
 11384 ;; Registers used:
 11385 ;;		wreg
 11386 ;; Tracked objects:
 11387 ;;		On entry : 0/0
 11388 ;;		On exit  : 0/0
 11389 ;;		Unchanged: 0/0
 11390 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11391 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11392 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11393 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11394 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11395 ;;Total ram usage:        2 bytes
 11396 ;; Hardware stack levels used:    1
 11397 ;; This function calls:
 11398 ;;		Nothing
 11399 ;; This function is called by:
 11400 ;;		_addAngle
 11401 ;; This function uses a non-reentrant model
 11402 ;;
 11403                           
 11404                           
 11405                           ;psect for function _setCargoAngle
 11406  0D56                     _setCargoAngle:	
 11407                           
 11408                           ;struct.c: 42: cargoData.linkAngleTo = m_linkAngleTo;
 11409                           
 11410                           ;incstack = 0
 11411                           ; Regs used in _setCargoAngle: [wreg]
 11412  0D56  0873               	movf	setCargoAngle@m_linkAngleTo+1,w
 11413  0D57  0020               	movlb	0	; select bank0
 11414  0D58  00DF               	movwf	_cargoData+6
 11415  0D59  0872               	movf	setCargoAngle@m_linkAngleTo,w
 11416  0D5A  00DE               	movwf	_cargoData+5
 11417  0D5B  0008               	return
 11418  0D5C                     __end_of_setCargoAngle:	
 11419                           
 11420                           	psect	text41
 11421  0D50                     __ptext41:	
 11422 ;; *************** function _getMoter_lotate *****************
 11423 ;; Defined at:
 11424 ;;		line 29 in file "D:/programdata/16F18346_Link_IC.X/cal_position.c"
 11425 ;; Parameters:    Size  Location     Type
 11426 ;;		None
 11427 ;; Auto vars:     Size  Location     Type
 11428 ;;		None
 11429 ;; Return value:  Size  Location     Type
 11430 ;;                  2    0[COMMON] int 
 11431 ;; Registers used:
 11432 ;;		wreg
 11433 ;; Tracked objects:
 11434 ;;		On entry : 0/0
 11435 ;;		On exit  : 0/0
 11436 ;;		Unchanged: 0/0
 11437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11438 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11439 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11440 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11441 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11442 ;;Total ram usage:        2 bytes
 11443 ;; Hardware stack levels used:    1
 11444 ;; This function calls:
 11445 ;;		Nothing
 11446 ;; This function is called by:
 11447 ;;		_addAngle
 11448 ;; This function uses a non-reentrant model
 11449 ;;
 11450                           
 11451                           
 11452                           ;psect for function _getMoter_lotate
 11453  0D50                     _getMoter_lotate:	
 11454                           
 11455                           ;cal_position.c: 30: return position.moter_lotate;
 11456                           
 11457                           ;incstack = 0
 11458                           ; Regs used in _getMoter_lotate: [wreg]
 11459  0D50  0022               	movlb	2	; select bank2
 11460  0D51  0821               	movf	(_position+1)^(0+256),w
 11461  0D52  00F3               	movwf	?_getMoter_lotate+1
 11462  0D53  0820               	movf	_position^(0+256),w
 11463  0D54  00F2               	movwf	?_getMoter_lotate
 11464  0D55  0008               	return
 11465  0D56                     __end_of_getMoter_lotate:	
 11466  007E                     btemp	set	126	;btemp
 11467  007E                     int$flags	set	126
 11468  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    4
    Data        7
    BSS         177
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      14
    BANK0            80     57      79
    BANK1            80      3      71
    BANK2            80      0      74
    BANK3            80      0      18
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           64      0       0
    BANK16            0      0       0
    BANK17            0      0       0
    BANK18            0      0       0
    BANK19            0      0       0
    BANK20            0      0       0
    BANK21            0      0       0
    BANK22            0      0       0
    BANK23            0      0       0
    BANK24            0      0       0
    BANK25            0      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _InterMSSP in COMMON

    _InterMSSP->_setSPI1sendData
    _addAngle->_getMoter_lotate
    _addAngle->_setCargoAngle

Critical Paths under _main in BANK0

    _main->_setComunicateMode
    _spi_init->_spi1_init
    _setComunicateMode->_Calibrate_download
    _setComunicateMode->_readCargo
    _readCargo->_TransLong256To255
    _setIndexMode->_setMoter_lotate
    _EEPROM_download->_getCargoData
    _Calibrate_download->_TransLong256To255
    _isEndpoint->_setSPI1sendDataManual
    _TransLong256To255->___aldiv
    _InitCalibrate->_getCargoData
    _initTrain->_isTrainSt
    _init->_initbuffer

Critical Paths under _InterMSSP in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_setComunicateMode

Critical Paths under _InterMSSP in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterMSSP in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterMSSP in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _InterMSSP in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _InterMSSP in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _InterMSSP in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _InterMSSP in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _InterMSSP in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _InterMSSP in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _InterMSSP in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _InterMSSP in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _InterMSSP in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _InterMSSP in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _InterMSSP in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _InterMSSP in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _InterMSSP in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _InterMSSP in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _InterMSSP in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _InterMSSP in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _InterMSSP in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _InterMSSP in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _InterMSSP in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _InterMSSP in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _InterMSSP in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _InterMSSP in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    6931
                      _InitCalibrate
                               _init
                          _initCargo
                         _initComand
                     _initComu_types
                          _initIndex
                       _initPosition
                          _initTrain
                            _io_init
                         _isSPI1read
                         _read_train
                  _setComunicateMode
                    _setSPI2sendData
                           _spi_init
 ---------------------------------------------------------------------------------
 (1) _spi_init                                             0     0      0       3
                          _spi1_init
 ---------------------------------------------------------------------------------
 (2) _spi1_init                                            2     2      0       3
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _setSPI2sendData                                      4     4      0       0
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _setComunicateMode                                    4     4      0    6662
                                             56 BANK0      1     1      0
                                              0 BANK1      3     3      0
                 _Calibrate_download
                    _EEPROM_download
                          _readCargo
 ---------------------------------------------------------------------------------
 (2) _readCargo                                           13    13      0    3107
                                             43 BANK0     13    13      0
                  _TransLong256To255
                       _clutchaction
                       _getCargoData
                       _restartCargo
                       _setIndexMode
 ---------------------------------------------------------------------------------
 (3) _setIndexMode                                         4     4      0     254
                                              1 BANK0      4     4      0
                    _setMoter_lotate
 ---------------------------------------------------------------------------------
 (4) _setMoter_lotate                                      1     1      0      93
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _clutchaction                                         1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _EEPROM_download                                     11    11      0     430
                                             17 BANK0     11    11      0
                         _ReadEEPROM
                       _getCargoData
                       _restartCargo
 ---------------------------------------------------------------------------------
 (3) _ReadEEPROM                                           5     3      2     207
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (2) _Calibrate_download                                  13    13      0    2964
                                             43 BANK0     13    13      0
                      _InitCalibrate
                  _TransLong256To255
                         _isEndpoint
                         _resetCargo
 ---------------------------------------------------------------------------------
 (3) _resetCargo                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _isEndpoint                                           6     6      0      40
                                              1 BANK0      6     6      0
              _setSPI1sendDataManual
 ---------------------------------------------------------------------------------
 (4) _setSPI1sendDataManual                                1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _TransLong256To255                                   28    24      4    2537
                                             15 BANK0     28    24      4
                            ___aldiv
                            ___almod
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8     290
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (4) ___almod                                             11     3      8     587
                                              0 BANK0     11     3      8
 ---------------------------------------------------------------------------------
 (4) ___aldiv                                             15     7      8     599
                                              0 BANK0     15     7      8
 ---------------------------------------------------------------------------------
 (3) _InitCalibrate                                       17    17      0      40
                                             17 BANK0     17    17      0
                       _getCargoData
 ---------------------------------------------------------------------------------
 (3) _getCargoData                                        17     1     16       0
                                              0 BANK0     17     1     16
 ---------------------------------------------------------------------------------
 (1) _read_train                                           4     4      0      65
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _isSPI1read                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _io_init                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initTrain                                            3     3      0      31
                                             11 BANK0      3     3      0
                          _isTrainSt
                     _resetTrainData
 ---------------------------------------------------------------------------------
 (2) _resetTrainData                                       0     0      0       0
                       _restartCargo
 ---------------------------------------------------------------------------------
 (3) _restartCargo                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _isTrainSt                                           11    11      0      31
                                              0 BANK0     11    11      0
 ---------------------------------------------------------------------------------
 (1) _initPosition                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initIndex                                            1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _initComu_types                                       1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _initComand                                           1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _initCargo                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0     130
                              _clear
                         _initbuffer
 ---------------------------------------------------------------------------------
 (2) _initbuffer                                           4     4      0     130
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) _clear                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _InterMSSP                                            7     7      0     131
                                              2 COMMON     7     7      0
                           _addAngle
                    _setSPI1sendData
 ---------------------------------------------------------------------------------
 (6) _setSPI1sendData                                      2     2      0       0
                                              0 COMMON     2     2      0
                         _isSPI2read
 ---------------------------------------------------------------------------------
 (7) _isSPI2read                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _addAngle                                             0     0      0      86
                    _getMoter_lotate
                      _setCargoAngle
 ---------------------------------------------------------------------------------
 (7) _setCargoAngle                                        2     0      2      86
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (7) _getMoter_lotate                                      2     0      2       0
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _InitCalibrate
     _getCargoData
   _init
     _clear
     _initbuffer
   _initCargo
   _initComand
   _initComu_types
   _initIndex
   _initPosition
   _initTrain
     _isTrainSt
     _resetTrainData
       _restartCargo
   _io_init
   _isSPI1read
   _read_train
   _setComunicateMode
     _Calibrate_download
       _InitCalibrate
         _getCargoData
       _TransLong256To255
         ___aldiv
         ___almod
         ___lmul
       _isEndpoint
         _setSPI1sendDataManual
       _resetCargo
     _EEPROM_download
       _ReadEEPROM
       _getCargoData
       _restartCargo
     _readCargo
       _TransLong256To255
         ___aldiv
         ___almod
         ___lmul
       _clutchaction
       _getCargoData
       _restartCargo
       _setIndexMode
         _setMoter_lotate
   _setSPI2sendData
   _spi_init
     _spi1_init

 _InterMSSP (ROOT)
   _addAngle
     _getMoter_lotate
     _setCargoAngle
   _setSPI1sendData
     _isSPI2read

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       3       1       21.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      9       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     39      4F       5       98.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      3      47       7       88.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      4A       9       92.5%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      12      11       22.5%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
ABS                  0      0     100      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
DATA                 0      0     100      28        0.0%
BANK11              50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITBANK12           50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12              50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITBANK13           50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13              50      0       0      33        0.0%
BITBANK14           50      0       0      34        0.0%
BANK14              50      0       0      35        0.0%
BITBANK15           50      0       0      36        0.0%
BANK15              40      0       0      37        0.0%
BITBANK16           50      0       0      38        0.0%
BANK16               0      0       0      39        0.0%
BITBANK17           50      0       0      40        0.0%
BANK17               0      0       0      41        0.0%
BITBANK18           50      0       0      42        0.0%
BANK18               0      0       0      43        0.0%
BITBANK19           50      0       0      44        0.0%
BANK19               0      0       0      45        0.0%
BITBANK20           50      0       0      46        0.0%
BANK20               0      0       0      47        0.0%
BITBANK21           50      0       0      48        0.0%
BANK21               0      0       0      49        0.0%
BITBANK22           50      0       0      50        0.0%
BANK22               0      0       0      51        0.0%
BITBANK23           50      0       0      52        0.0%
BANK23               0      0       0      53        0.0%
BITBANK24           50      0       0      54        0.0%
BANK24               0      0       0      55        0.0%
BITBANK25           20      0       0      56        0.0%
BANK25               0      0       0      57        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Tue Jul 17 21:26:47 2018

                  _InitCalibrate 0F33                                pc 0002                      __CFG_CP$OFF 0000  
                             _RD 44A8                              l133 0739                              l167 078D  
                            l415 02B4                              l424 028E                              l425 0296  
                            l346 0D8A                              l463 0FFF                              l681 0434  
                            l738 07CD                              l880 048D                              l893 050F  
                   __CFG_CPD$OFF 0000                              wreg 0009          setComunicateMode@m_type 00E4  
                           S4213 0800                             S4223 0820                             S4209 0834  
                           S4219 0840         Calibrate_download@bufint 0055                     __CFG_LVP$OFF 0000  
                           l3321 04AE                             l3313 049E                             l3401 0302  
                           l3331 04DC                             l3323 04BC                             l3403 030A  
                           l4211 0198                             l4221 02AA                             l3335 04E7  
                           l3351 051C                             l3423 03AB                             l3415 0359  
                           l4215 07B6                             l4207 0FEF                             l4225 0782  
                           l3425 03B0                             l3417 0382                             l4217 042A  
                           l3281 0E29                             l3523 06FF                             l3339 04F5  
                           l3371 0563                             l3363 054A                             l3291 07D7  
                           l3603 02B9                             l3357 0524                             l3701 03FF  
                           l3277 0E1E                             l3359 0532                             l3367 0555  
                           l3295 07E1                             l3439 0F7B                             l3711 041D  
                           l3703 0404                             l3631 00E1                             l3561 01D1  
                           l3465 07A8                             l3641 00F9                             l3625 00C6  
                           l3571 01F8                             l3475 07B0                             l3651 0104  
                           l3643 00FC                             l3635 00EA                             l3627 00CF  
                           l3805 0723                             l3581 0234                             l3573 0200  
                           l3709 0412                             l3717 0424                             l3469 07AC  
                           l3477 07C7                             l3661 0139                             l3653 0106  
                           l3645 00FE                             l3629 00DC                             l3901 0FE9  
                           l3815 0734                             l3399 02F6                             l3591 029A  
                           l3583 0255                             l3567 01E0                             l3727 0454  
                           l3663 015A                             l3647 0100                             l3671 01A2  
                           l3903 0FF9                             l3585 0279                             l3577 0209  
                           l3569 01F2                             l3665 017E                             l3657 010F  
                           l3649 0102                             l3915 0754                             l3739 046F  
                           l3917 0762                             l3925 077C                             l3669 0193  
                           l3919 0775                             l3599 02A4                             l3695 03E4  
                           l3873 0DB1                             l3697 03ED                             l3699 03FA  
                           l3891 0FE1                             l3965 0FBA                             l3957 0FAA  
                           l3895 0FE5                             l3887 0FDD                             l3967 0FBD  
                           u2035 04B1                             u2055 04BD                             u2135 0527  
                           u2215 0354                             u2400 00BF                             u2305 0F15  
                           u2065 04D1                             u2225 036F                             u2075 04DD  
                           u2155 0540                             u2235 0363                             u2500 041B  
                           u2325 06D4                             u2165 054B                             u2190 0F51  
                           u2345 022D                             u2355 024E                             u2275 079B  
                           u2435 0132                             u2365 026F                             u2445 0153  
                           u2605 0FD0                             u2470 03DD                             u2455 0174  
                           u2545 0463                             u2465 01AD                             u2395 02C8  
                           u1950 0DDD                             u2585 0740                             u2595 0DAD  
                           u1975 07E2                             u1985 07E9                             _WPUA 020C  
                           _WPUB 020D                             _WPUC 020E                     __CFG_WRT$OFF 0000  
                  __CFG_FCMEN$ON 0000               TransLong256To255@i 0045               TransLong256To255@j 003B  
                  ?_clutchaction 0072                             _main 0F8D                             _init 0EE0  
                           fsr0h 0005                             fsr1h 0007                             indf0 0000  
                           fsr0l 0004                             indf1 0001                             fsr1l 0006  
                           btemp 007E                    __CFG_BOREN$ON 0000                             start 0047  
                  __CFG_CSWEN$ON 0000                   ?_InitCalibrate 0072                  __end_of___aldiv 04FE  
                __end_of___almod 056C                            ?_main 0072                            ?_init 0072  
                  __CFG_WDTE$OFF 0000                   __CFG_DEBUG$OFF 0000             __end_of_getCargoData 0DE2  
                          _PORTA 000C                            _PORTB 000D                            _PORTC 000E  
                          _TRISA 008C                            _TRISB 008D                            _TRISC 008E  
             setComunicateMode@i 00E5         __size_of_setMoter_lotate 001F              ___lmul@multiplicand 0024  
 __size_of_setSPI1sendDataManual 0006    __end_of_setSPI1sendDataManual 0D62                            _clear 0D99  
                __end_of_io_init 0D78                            _index 01A0                   __pbitbssCOMMON 0380  
                 ??_clutchaction 0020                   __CFG_BORV$HIGH 0000                       _ReadEEPROM 0E95  
                          status 0003                            wtemp0 007E         __size_of_EEPROM_download 00C3  
                 __CFG_MCLRE$OFF 0000                  __initialization 0049                     __end_of_main 0FC1  
                   __end_of_init 0F09                           ??_main 0059                           ??_init 0024  
                  ?_initPosition 0072                           ?_clear 0072                 __end_of_addAngle 0DC2  
                         _ANSELA 018C                           _ANSELB 018D                           _ANSELC 018E  
                         _RC2PPS 0EA2                           i1l2475 0DD0                           i1l2903 0037  
                         i1l2691 0E92                           i1l2907 003C                           i1l2899 0030  
                         u138_25 0DCC                           _IOCode 0146         __size_of_setSPI1sendData 0022  
             __size_of_InterMSSP 0043                  ??_InitCalibrate 0031                __end_of_VENDER_ID 1004  
                 __CFG_PWRTE$OFF 0000         __size_of_setSPI2sendData 0021             TransLong256To255@buf 0047  
        __size_of_resetTrainData 000A             TransLong256To255@mod 003D             TransLong256To255@pow 0041  
    __size_of_Calibrate_download 011C                           ___lmul 07CE                        ??___aldiv 0028  
                      ??___almod 0028                   __CFG_STVREN$ON 0000                           _count1 00D7  
                         _count2 006B                           _readNG 00D9                           _readOK 00DA  
        __size_of_initComu_types 006D                        ??_io_init 0020                     __pdataCOMMON 007D  
                 ??_initPosition 0020                 __end_of_spi_init 0D6F                      initbuffer@i 0022  
                   isTrainSt@buf 002A                  _getMoter_lotate 0D50                     _ra3condision 0387  
              ??_setMoter_lotate 0020                      ?_ReadEEPROM 0020          __end_of__initialization 0097  
                 __pcstackCOMMON 0072                   ReadEEPROM@addr 0020                     __pidataBANK1 0D62  
             __end_of_MACHINE_ID 1002                    __end_of_clear 0DA6            __size_of_getCargoData 0010  
              ??_EEPROM_download 0031             __end_of_clutchaction 0D8D                __end_of_InterMSSP 0047  
                __CFG_LPBOREN$ON 0000                          ??_clear 0020                    ?_setIndexMode 0072  
                   InterMSSP@buf 007A                       __pbssBANK0 0059                       __pbssBANK1 00A0  
                     __pbssBANK2 0120                       __pbssBANK3 01A0               __size_of_isTrainSt 004E  
            clutchaction@comannd 0020           InitCalibrate@cargoData 0032               __size_of_initCargo 0019  
          EEPROM_download@bufint 0039               __size_of_readCargo 011C               __size_of_initIndex 006D  
                _startTrainBytes 00C1               __size_of_initTrain 004A                       _isSPI1read 0DA6  
                     _isSPI2read 0DC2                     _getCargoData 0DD2                       __pmaintext 0F8D  
             __size_of_spi1_init 0020                          ?___lmul 0020                  __CFG_PPS1WAY$ON 0000  
              ??_setSPI1sendData 0072                       __pintentry 0004  Calibrate_download@spi_Read_data 0057  
                      ?_addAngle 0072                ??_setSPI2sendData 0020                   ___lmul@product 0028  
            __CFG_RSTOSC$HFINT32 0000              __size_of_ReadEEPROM 0023                       _isEndpoint 0F5E  
        __end_of_getMoter_lotate 0D56                     _isCalibrated 0389                    setIndexMode@i 0023  
         __size_of_setCargoAngle 0006                          _NVMADRH 0892                          _NVMADRL 0891  
                        _NVMDATH 0894                          _NVMDATL 0893                   ??_setIndexMode 0021  
                _EEPROM_ADDR_buf 00C7                          _SSP1BUF 0211                       _isSendSPI2 0386  
                     _comu_types 0158              setIndexMode@m_index 0022                   _resetTrainData 0D78  
           __end_of_initPosition 0EE0                       _initComand 0646            TransLong256To255@data 002F  
                        ___aldiv 047C                          ___almod 04FE                        ?_spi_init 0072  
                __size_of___lmul 0030                       ??_addAngle 0074                __end_of_isTrainSt 0701  
                     _initbuffer 0F09                   _initComu_types 05D9               isEndpoint@spi2data 0026  
                        __ptext1 0D68                          __ptext2 0E32                          __ptext3 0E52  
                        __ptext4 0FC1                          __ptext5 009B                          __ptext6 078E  
                        __ptext7 0E13                          __ptext8 0D82                __end_of_initCargo 0E13  
                        __ptext9 03B9                       _read_train 074B                          _command 00A0  
              __end_of_readCargo 01B7                __end_of_initIndex 05D9                          _counta2 00D1  
                        _io_init 0D6F                __end_of_initTrain 074B                    ?_restartCargo 0072  
               ___aldiv@dividend 0024                        _IOCAFbits 0393                        _IOCANbits 0392  
                      _IOCAPbits 0391                __end_of_spi1_init 0E52                          _st_type 006D  
                        clrloop0 0D8E            _setSPI1sendDataManual 0D5C             end_of_initialization 0097  
         __end_of_resetTrainData 0D82                      ?_isSPI1read 0072                      ?_isSPI2read 0072  
                     _resetCargo 0DE2                    _setCargoAngle 0D56                 ___aldiv@quotient 002B  
          __size_of_clutchaction 000B                       ??_spi_init 0022                        _VENDER_ID 1002  
               readCargo@buflong 0051           __end_of_initComu_types 0646                   spi1_init@dummy 0021  
                    ?_isEndpoint 0072                  _setMoter_lotate 0E13                 ?_getMoter_lotate 0072  
                 ??_restartCargo 0020                  _SPI_OFFSET_BYTE 007D                        _TRISBbits 008D  
                      _TRISCbits 008E                 __CFG_FEXTOSC$OFF 0000                     ??_ReadEEPROM 0022  
                   _clutchaction 0D82                  ?_resetTrainData 0072                  _EEPROM_download 03B9  
     __end_of_Calibrate_download 02D3                   ?_setCargoAngle 0072                      ?_initComand 0072  
          __end_of_InitCalibrate 0F5E                  ReadEEPROM@Hiadr 0023                  ReadEEPROM@Loadr 0024  
           __end_of_setIndexMode 07CE                  ?_initComu_types 0072                   __end_of___lmul 07FE  
                  __pidataCOMMON 07FE                      ?_initbuffer 0072                      ?_read_train 0072  
             __end_of_ReadEEPROM 0EB8              __size_of_isSPI1read 000D              __size_of_isSPI2read 0010  
                  __pbitnvCOMMON 03D8              start_initialization 0049           ?_setSPI1sendDataManual 0072  
                      _InterMSSP 0004                   _isEndPointTrig 03D8            __size_of_initPosition 0028  
                _setSPI1sendData 0E73                  _setSPI2sendData 0E52                      ?_resetCargo 0072  
            __size_of_isEndpoint 002F                _TransLong256To255 02D3                         ??___lmul 0028  
        __end_of_setMoter_lotate 0E32               ?_TransLong256To255 002F                      __pdataBANK1 00DE  
              _setComunicateMode 0FC1                __size_of_addAngle 000F               ?_setComunicateMode 0072  
            ??_TransLong256To255 0033                      __pbssBIGRAM 24F0                      __pbssCOMMON 007C  
                      ___latbits 0003                    __pcstackBANK0 0020                    __pcstackBANK1 00E4  
                   _initPosition 0EB8           EEPROM_download@buflong 0035                      _cargo_index 0134  
            ??_setComunicateMode 0058              __size_of_initComand 006D                       ?_InterMSSP 0072  
        __end_of_EEPROM_download 047C                        _calibdata 00B2              __size_of_initbuffer 002A  
                      _cargoData 0059                  ??_setCargoAngle 0074              __size_of_read_train 0043  
      __end_of_TransLong256To255 03B9             __end_of_restartCargo 0D50            _spi1_send_buffer_data 24F0  
      Calibrate_download@buflong 0051        __end_of_setComunicateMode 1000                         ?___aldiv 0020  
                       ?___almod 0020                        _direction 00DE          readCargo@spi1_Read_data 0057  
              __size_of_spi_init 0007                 ___almod@dividend 0024                        __pswtext1 0834  
                      __pswtext2 0800                        __pswtext3 0840                        __pswtext4 0820  
                      _isMycargo 0381                         ?_io_init 0072                        _isTrainSt 06B3  
            __size_of_resetCargo 0018                        _countabuf 0069                        _initCargo 0DFA  
                      _readCargo 009B                        _initIndex 056C                        _linkAngle 00E0  
        __end_of_setSPI1sendData 0E95                        _initTrain 0701                   __size_of_clear 000D  
        __end_of_setSPI2sendData 0E73                  ___aldiv@divisor 0020                        _spi1_init 0E32  
                ___aldiv@counter 0029                         _LATAbits 010C                     ??_isSPI1read 0020  
                   ??_isSPI2read 0072                        clear_ram0 0D8D       setCargoAngle@m_linkAngleTo 0072  
          __size_of_setIndexMode 0040                         _PIE0bits 0090                         _PIE1bits 0091  
                      _send_data 00DC                         _PIR0bits 0010                         _PIR1bits 0011  
                readCargo@bufint 0055                 ?_setMoter_lotate 0072                     ??_isEndpoint 0021  
                     ?_isTrainSt 0072               __end_of_isSPI1read 0DB3               __end_of_isSPI2read 0DD2  
                     ?_initCargo 0072                    _SSP1SSPPSbits 0E22                       ?_readCargo 0072  
                     ?_initIndex 0072                       ?_initTrain 0072                      ??_InterMSSP 0074  
                   _setIndexMode 078E                ___lmul@multiplier 0020                 ??_resetTrainData 0020  
               ?_EEPROM_download 0072                         _RaadData 00C9                   _eeprom_address 00DD  
                     ?_spi1_init 0072       __size_of_TransLong256To255 00E6                 ??_initComu_types 0020  
             __end_of_isEndpoint 0F8D                     ??_initComand 0020       __size_of_setComunicateMode 003F  
               __size_of___aldiv 0082                 __size_of___almod 006E                         _addAngle 0DB3  
                   ??_initbuffer 0020                 _spi1_buffer_data 26F0                     ??_read_train 0020  
             _Calibrate_download 01B7          ??_setSPI1sendDataManual 0020                   _workingcounta0 0385  
                 _workingcounta1 0384                   _workingcounta2 0383                   _workingcounta3 0382  
               __size_of_io_init 0009                       _MACHINE_ID 1000                      _read_count1 00D5  
                    _read_count2 00CF              ?_Calibrate_download 0072                 ?_setSPI1sendData 0072  
                       __ptext10 0E95                         __ptext11 01B7                         __ptext20 0DD2  
                       __ptext12 0DE2                         __ptext21 074B                         __ptext13 0F5E  
                       __ptext30 05D9                         __ptext22 0DA6                         __ptext14 0D5C  
                       __ptext31 0646                         __ptext23 0D6F                         __ptext15 02D3  
                       __ptext40 0D56                         __ptext32 0DFA                         __ptext24 0701  
                       __ptext16 07CE                         __ptext41 0D50                         __ptext33 0EE0  
                       __ptext25 0D78                         __ptext17 04FE                         __ptext34 0F09  
                       __ptext26 0D4B                         __ptext18 047C                         __ptext35 0D99  
                       __ptext27 06B3                         __ptext19 0F33                         __ptext28 0EB8  
                       __ptext37 0E73                         __ptext29 056C                         __ptext38 0DC2  
                       __ptext39 0DB3                     _SSP1CON1bits 0215                     _SSP1CON3bits 0217  
                       _isMyAddr 0380               __end_of_initComand 06B3                 ?_setSPI2sendData 0072  
                 _spi1_Read_data 007C                  ___almod@divisor 0020                  ___almod@counter 0029  
       __size_of_getMoter_lotate 0006            __size_of_restartCargo 0005                         _linkInfo 00BB  
                  __size_of_main 0034                    __size_of_init 0029                     ??_resetCargo 0020  
             __end_of_initbuffer 0F33                    ?_getCargoData 0020                   _spi2_Read_data 00DB  
             __end_of_read_train 078E             ??_Calibrate_download 004B                      _isreadTrain 0388  
                       _spi_init 0D68                         int$flags 007E                         _trainPos 00D3  
                       _position 0120                   _spi2_Send_data 006E                     _SSP1STATbits 0214  
               _spi2_buffer_data 25F0                    _st_dataLength 00E2                       _INLVLAbits 038C  
                     _INLVLBbits 038D                       _INLVLCbits 038E                      ??_isTrainSt 0020  
                    _OSCTUNEbits 091E                       _INTCONbits 000B                      _NVMCON1bits 0895  
                    ??_initCargo 0020                     _restartCargo 0D4B               __end_of_resetCargo 0DFA  
                    ??_readCargo 004B                      ??_initIndex 0020                      ??_initTrain 002B  
         __size_of_InitCalibrate 002B                      _send_count1 00CB            setMoter_lotate@lotate 0020  
                       intlevel1 0000                      ??_spi1_init 0020                   ??_getCargoData 0030  
              __CFG_CLKOUTEN$OFF 0000    EEPROM_download@spi1_Read_data 003B                       _OSCFRQbits 091F  
     TransLong256To255@TransData 0037                    __pstringtext1 1000                    __pstringtext2 1002  
                   ___aldiv@sign 002A        setSPI1sendDataManual@data 0020                       _SIZE_COUNT 00C5  
                   ___almod@sign 002A                 read_train@bufint 0022                  _spi1_send_count 00CD  
          __end_of_setCargoAngle 0D5C                ??_getMoter_lotate 0074  

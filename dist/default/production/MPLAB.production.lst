

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Mon Jun 18 14:18:43 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F18346
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	eeprom_data,global,class=EEDATA,space=3,delta=2
     5                           	psect	idataCOMMON,global,class=CODE,delta=2
     6                           	psect	idataBANK1,global,class=CODE,delta=2
     7                           	psect	stringtext1,global,class=STRCODE,delta=2
     8                           	psect	stringtext2,global,class=STRCODE,delta=2
     9                           	psect	bitnvCOMMON,global,bit,class=COMMON,space=1,delta=1
    10                           	psect	cinit,global,class=CODE,merge=1,delta=2
    11                           	psect	bitbssCOMMON,global,bit,class=COMMON,space=1,delta=1
    12                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    17                           	psect	clrtext,global,class=CODE,delta=2
    18                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    19                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    20                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    21                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    22                           	psect	text1,local,class=CODE,merge=1,delta=2
    23                           	psect	text2,local,class=CODE,merge=1,delta=2
    24                           	psect	text3,local,class=CODE,merge=1,delta=2
    25                           	psect	text4,local,class=CODE,merge=1,delta=2
    26                           	psect	text5,local,class=CODE,merge=1,delta=2
    27                           	psect	swtext1,local,class=CONST,delta=2
    28                           	psect	text6,local,class=CODE,merge=1,delta=2
    29                           	psect	swtext2,local,class=CONST,delta=2
    30                           	psect	text7,local,class=CODE,merge=1,delta=2
    31                           	psect	text8,local,class=CODE,merge=1,delta=2
    32                           	psect	swtext3,local,class=CONST,delta=2
    33                           	psect	text9,local,class=CODE,merge=1,delta=2
    34                           	psect	text10,local,class=CODE,merge=1,delta=2
    35                           	psect	text11,local,class=CODE,merge=1,delta=2
    36                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text15,local,class=CODE,merge=1,delta=2
    40                           	psect	text16,local,class=CODE,merge=1,delta=2
    41                           	psect	text17,local,class=CODE,merge=1,delta=2
    42                           	psect	text18,local,class=CODE,merge=1,delta=2
    43                           	psect	text19,local,class=CODE,merge=1,delta=2
    44                           	psect	text20,local,class=CODE,merge=1,delta=2
    45                           	psect	text21,local,class=CODE,merge=1,delta=2
    46                           	psect	text22,local,class=CODE,merge=1,delta=2
    47                           	psect	text23,local,class=CODE,merge=1,delta=2
    48                           	psect	text24,local,class=CODE,merge=1,delta=2
    49                           	psect	text25,local,class=CODE,merge=1,delta=2
    50                           	psect	text26,local,class=CODE,merge=1,delta=2
    51                           	psect	text27,local,class=CODE,merge=1,delta=2
    52                           	psect	text28,local,class=CODE,merge=1,delta=2
    53                           	psect	text29,local,class=CODE,merge=1,delta=2
    54                           	psect	intentry,global,class=CODE,delta=2
    55                           	psect	text31,local,class=CODE,merge=1,delta=2
    56                           	psect	text32,local,class=CODE,merge=1,delta=2
    57                           	psect	text33,local,class=CODE,merge=1,delta=2
    58                           	psect	text34,local,class=CODE,merge=1,delta=2
    59                           	dabs	1,0xCA0,32
    60                           	dabs	1,0xC20,80
    61                           	dabs	1,0xBA0,80
    62                           	dabs	1,0xB30,64
    63                           	dabs	1,0xB20,16
    64                           	dabs	1,0xAA0,80
    65                           	dabs	1,0xA20,80
    66                           	dabs	1,0x9A0,80
    67                           	dabs	1,0x920,80
    68                           	dabs	1,0x8A0,80
    69                           	dabs	1,0x820,80
    70                           	dabs	1,0x7E0,16
    71                           	dabs	1,0x24F0,0,_spi1_send_buffer_data
    72                           	dabs	1,0x25F0,0,_spi1_buffer_data
    73                           	dabs	1,0x26F0,0,_spi2_buffer_data
    74                           	dabs	1,0x7E,2
    75  0000                     
    76                           ; Version 1.45
    77                           ; Generated 16/11/2017 GMT
    78                           ; 
    79                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    80                           ; All rights reserved.
    81                           ; 
    82                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    83                           ; 
    84                           ; Redistribution and use in source and binary forms, with or without modification, are
    85                           ; permitted provided that the following conditions are met:
    86                           ; 
    87                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    88                           ;        conditions and the following disclaimer.
    89                           ; 
    90                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    91                           ;        of conditions and the following disclaimer in the documentation and/or other
    92                           ;        materials provided with the distribution.
    93                           ; 
    94                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    95                           ;        software without specific prior written permission.
    96                           ; 
    97                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    98                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    99                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   100                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   101                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   102                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   103                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   104                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   105                           ; 
   106                           ; 
   107                           ; Code-generator required, PIC16F18346 Definitions
   108                           ; 
   109                           ; SFR Addresses
   110  0000                     	;# 
   111  0001                     	;# 
   112  0002                     	;# 
   113  0003                     	;# 
   114  0004                     	;# 
   115  0005                     	;# 
   116  0006                     	;# 
   117  0007                     	;# 
   118  0008                     	;# 
   119  0009                     	;# 
   120  000A                     	;# 
   121  000B                     	;# 
   122  000C                     	;# 
   123  000D                     	;# 
   124  000E                     	;# 
   125  0010                     	;# 
   126  0011                     	;# 
   127  0012                     	;# 
   128  0013                     	;# 
   129  0014                     	;# 
   130  0015                     	;# 
   131  0015                     	;# 
   132  0016                     	;# 
   133  0016                     	;# 
   134  0017                     	;# 
   135  0018                     	;# 
   136  0019                     	;# 
   137  0019                     	;# 
   138  001A                     	;# 
   139  001B                     	;# 
   140  001C                     	;# 
   141  001D                     	;# 
   142  001E                     	;# 
   143  001F                     	;# 
   144  008C                     	;# 
   145  008D                     	;# 
   146  008E                     	;# 
   147  0090                     	;# 
   148  0091                     	;# 
   149  0092                     	;# 
   150  0093                     	;# 
   151  0094                     	;# 
   152  0097                     	;# 
   153  009B                     	;# 
   154  009B                     	;# 
   155  009C                     	;# 
   156  009D                     	;# 
   157  009E                     	;# 
   158  009F                     	;# 
   159  010C                     	;# 
   160  010D                     	;# 
   161  010E                     	;# 
   162  0111                     	;# 
   163  0112                     	;# 
   164  0113                     	;# 
   165  0114                     	;# 
   166  0115                     	;# 
   167  0116                     	;# 
   168  0117                     	;# 
   169  0118                     	;# 
   170  0119                     	;# 
   171  018C                     	;# 
   172  018D                     	;# 
   173  018E                     	;# 
   174  0197                     	;# 
   175  0199                     	;# 
   176  0199                     	;# 
   177  0199                     	;# 
   178  019A                     	;# 
   179  019A                     	;# 
   180  019A                     	;# 
   181  019B                     	;# 
   182  019B                     	;# 
   183  019B                     	;# 
   184  019B                     	;# 
   185  019B                     	;# 
   186  019C                     	;# 
   187  019C                     	;# 
   188  019C                     	;# 
   189  019D                     	;# 
   190  019D                     	;# 
   191  019D                     	;# 
   192  019E                     	;# 
   193  019E                     	;# 
   194  019E                     	;# 
   195  019F                     	;# 
   196  019F                     	;# 
   197  019F                     	;# 
   198  019F                     	;# 
   199  019F                     	;# 
   200  020C                     	;# 
   201  020D                     	;# 
   202  020E                     	;# 
   203  0211                     	;# 
   204  0211                     	;# 
   205  0212                     	;# 
   206  0212                     	;# 
   207  0213                     	;# 
   208  0213                     	;# 
   209  0214                     	;# 
   210  0214                     	;# 
   211  0215                     	;# 
   212  0215                     	;# 
   213  0215                     	;# 
   214  0215                     	;# 
   215  0216                     	;# 
   216  0216                     	;# 
   217  0217                     	;# 
   218  0217                     	;# 
   219  0219                     	;# 
   220  021A                     	;# 
   221  021B                     	;# 
   222  021C                     	;# 
   223  021D                     	;# 
   224  021D                     	;# 
   225  021E                     	;# 
   226  021F                     	;# 
   227  028C                     	;# 
   228  028D                     	;# 
   229  028E                     	;# 
   230  0291                     	;# 
   231  0291                     	;# 
   232  0292                     	;# 
   233  0293                     	;# 
   234  0294                     	;# 
   235  0295                     	;# 
   236  0295                     	;# 
   237  0296                     	;# 
   238  0297                     	;# 
   239  0298                     	;# 
   240  029F                     	;# 
   241  030C                     	;# 
   242  030D                     	;# 
   243  030E                     	;# 
   244  0311                     	;# 
   245  0311                     	;# 
   246  0312                     	;# 
   247  0313                     	;# 
   248  0314                     	;# 
   249  0315                     	;# 
   250  0315                     	;# 
   251  0316                     	;# 
   252  0317                     	;# 
   253  0318                     	;# 
   254  038C                     	;# 
   255  038D                     	;# 
   256  038E                     	;# 
   257  0391                     	;# 
   258  0392                     	;# 
   259  0393                     	;# 
   260  0394                     	;# 
   261  0395                     	;# 
   262  0396                     	;# 
   263  0397                     	;# 
   264  0398                     	;# 
   265  0399                     	;# 
   266  039A                     	;# 
   267  039C                     	;# 
   268  039D                     	;# 
   269  039E                     	;# 
   270  039F                     	;# 
   271  0411                     	;# 
   272  0411                     	;# 
   273  0412                     	;# 
   274  0413                     	;# 
   275  0414                     	;# 
   276  0415                     	;# 
   277  0416                     	;# 
   278  0417                     	;# 
   279  0418                     	;# 
   280  0418                     	;# 
   281  0419                     	;# 
   282  041A                     	;# 
   283  041B                     	;# 
   284  041C                     	;# 
   285  041D                     	;# 
   286  041E                     	;# 
   287  041F                     	;# 
   288  0498                     	;# 
   289  0498                     	;# 
   290  0499                     	;# 
   291  049A                     	;# 
   292  049B                     	;# 
   293  049B                     	;# 
   294  049C                     	;# 
   295  049D                     	;# 
   296  049E                     	;# 
   297  049F                     	;# 
   298  0617                     	;# 
   299  0618                     	;# 
   300  0619                     	;# 
   301  0619                     	;# 
   302  061A                     	;# 
   303  061B                     	;# 
   304  061C                     	;# 
   305  061C                     	;# 
   306  061F                     	;# 
   307  0691                     	;# 
   308  0692                     	;# 
   309  0693                     	;# 
   310  0694                     	;# 
   311  0695                     	;# 
   312  0696                     	;# 
   313  0697                     	;# 
   314  0698                     	;# 
   315  0699                     	;# 
   316  0711                     	;# 
   317  0712                     	;# 
   318  0713                     	;# 
   319  0714                     	;# 
   320  0715                     	;# 
   321  0716                     	;# 
   322  0717                     	;# 
   323  0718                     	;# 
   324  0719                     	;# 
   325  0891                     	;# 
   326  0891                     	;# 
   327  0891                     	;# 
   328  0891                     	;# 
   329  0891                     	;# 
   330  0891                     	;# 
   331  0892                     	;# 
   332  0892                     	;# 
   333  0892                     	;# 
   334  0893                     	;# 
   335  0893                     	;# 
   336  0893                     	;# 
   337  0893                     	;# 
   338  0893                     	;# 
   339  0893                     	;# 
   340  0894                     	;# 
   341  0894                     	;# 
   342  0894                     	;# 
   343  0895                     	;# 
   344  0895                     	;# 
   345  0895                     	;# 
   346  0896                     	;# 
   347  0896                     	;# 
   348  0896                     	;# 
   349  089B                     	;# 
   350  0911                     	;# 
   351  0912                     	;# 
   352  0913                     	;# 
   353  0914                     	;# 
   354  0915                     	;# 
   355  0916                     	;# 
   356  0918                     	;# 
   357  0919                     	;# 
   358  091A                     	;# 
   359  091B                     	;# 
   360  091C                     	;# 
   361  091D                     	;# 
   362  091E                     	;# 
   363  091F                     	;# 
   364  0E0F                     	;# 
   365  0E10                     	;# 
   366  0E11                     	;# 
   367  0E12                     	;# 
   368  0E13                     	;# 
   369  0E14                     	;# 
   370  0E15                     	;# 
   371  0E16                     	;# 
   372  0E17                     	;# 
   373  0E18                     	;# 
   374  0E19                     	;# 
   375  0E1A                     	;# 
   376  0E1B                     	;# 
   377  0E1C                     	;# 
   378  0E1D                     	;# 
   379  0E1E                     	;# 
   380  0E1F                     	;# 
   381  0E20                     	;# 
   382  0E21                     	;# 
   383  0E22                     	;# 
   384  0E24                     	;# 
   385  0E25                     	;# 
   386  0E28                     	;# 
   387  0E29                     	;# 
   388  0E2A                     	;# 
   389  0E2B                     	;# 
   390  0E2C                     	;# 
   391  0E2D                     	;# 
   392  0E2E                     	;# 
   393  0E2F                     	;# 
   394  0E90                     	;# 
   395  0E91                     	;# 
   396  0E92                     	;# 
   397  0E94                     	;# 
   398  0E95                     	;# 
   399  0E9C                     	;# 
   400  0E9D                     	;# 
   401  0E9E                     	;# 
   402  0E9F                     	;# 
   403  0EA0                     	;# 
   404  0EA1                     	;# 
   405  0EA2                     	;# 
   406  0EA3                     	;# 
   407  0EA4                     	;# 
   408  0EA5                     	;# 
   409  0EA6                     	;# 
   410  0EA7                     	;# 
   411  0F0F                     	;# 
   412  0F10                     	;# 
   413  0F11                     	;# 
   414  0F12                     	;# 
   415  0F13                     	;# 
   416  0F14                     	;# 
   417  0F15                     	;# 
   418  0F16                     	;# 
   419  0F17                     	;# 
   420  0F18                     	;# 
   421  0F19                     	;# 
   422  0F1A                     	;# 
   423  0F1B                     	;# 
   424  0F1C                     	;# 
   425  0F1D                     	;# 
   426  0F1E                     	;# 
   427  0F1F                     	;# 
   428  0F20                     	;# 
   429  0F21                     	;# 
   430  0F22                     	;# 
   431  0F23                     	;# 
   432  0F24                     	;# 
   433  0F25                     	;# 
   434  0F26                     	;# 
   435  0F27                     	;# 
   436  0F28                     	;# 
   437  0F29                     	;# 
   438  0F2A                     	;# 
   439  0F2B                     	;# 
   440  0F2C                     	;# 
   441  0F2D                     	;# 
   442  0F2E                     	;# 
   443  0F2F                     	;# 
   444  0F30                     	;# 
   445  0F31                     	;# 
   446  0F32                     	;# 
   447  0F33                     	;# 
   448  0F34                     	;# 
   449  0F35                     	;# 
   450  0F36                     	;# 
   451  0F37                     	;# 
   452  0FE4                     	;# 
   453  0FE5                     	;# 
   454  0FE6                     	;# 
   455  0FE7                     	;# 
   456  0FE8                     	;# 
   457  0FE9                     	;# 
   458  0FEA                     	;# 
   459  0FEB                     	;# 
   460  0FED                     	;# 
   461  0FEE                     	;# 
   462  0FEF                     	;# 
   463  0000                     	;# 
   464  0001                     	;# 
   465  0002                     	;# 
   466  0003                     	;# 
   467  0004                     	;# 
   468  0005                     	;# 
   469  0006                     	;# 
   470  0007                     	;# 
   471  0008                     	;# 
   472  0009                     	;# 
   473  000A                     	;# 
   474  000B                     	;# 
   475  000C                     	;# 
   476  000D                     	;# 
   477  000E                     	;# 
   478  0010                     	;# 
   479  0011                     	;# 
   480  0012                     	;# 
   481  0013                     	;# 
   482  0014                     	;# 
   483  0015                     	;# 
   484  0015                     	;# 
   485  0016                     	;# 
   486  0016                     	;# 
   487  0017                     	;# 
   488  0018                     	;# 
   489  0019                     	;# 
   490  0019                     	;# 
   491  001A                     	;# 
   492  001B                     	;# 
   493  001C                     	;# 
   494  001D                     	;# 
   495  001E                     	;# 
   496  001F                     	;# 
   497  008C                     	;# 
   498  008D                     	;# 
   499  008E                     	;# 
   500  0090                     	;# 
   501  0091                     	;# 
   502  0092                     	;# 
   503  0093                     	;# 
   504  0094                     	;# 
   505  0097                     	;# 
   506  009B                     	;# 
   507  009B                     	;# 
   508  009C                     	;# 
   509  009D                     	;# 
   510  009E                     	;# 
   511  009F                     	;# 
   512  010C                     	;# 
   513  010D                     	;# 
   514  010E                     	;# 
   515  0111                     	;# 
   516  0112                     	;# 
   517  0113                     	;# 
   518  0114                     	;# 
   519  0115                     	;# 
   520  0116                     	;# 
   521  0117                     	;# 
   522  0118                     	;# 
   523  0119                     	;# 
   524  018C                     	;# 
   525  018D                     	;# 
   526  018E                     	;# 
   527  0197                     	;# 
   528  0199                     	;# 
   529  0199                     	;# 
   530  0199                     	;# 
   531  019A                     	;# 
   532  019A                     	;# 
   533  019A                     	;# 
   534  019B                     	;# 
   535  019B                     	;# 
   536  019B                     	;# 
   537  019B                     	;# 
   538  019B                     	;# 
   539  019C                     	;# 
   540  019C                     	;# 
   541  019C                     	;# 
   542  019D                     	;# 
   543  019D                     	;# 
   544  019D                     	;# 
   545  019E                     	;# 
   546  019E                     	;# 
   547  019E                     	;# 
   548  019F                     	;# 
   549  019F                     	;# 
   550  019F                     	;# 
   551  019F                     	;# 
   552  019F                     	;# 
   553  020C                     	;# 
   554  020D                     	;# 
   555  020E                     	;# 
   556  0211                     	;# 
   557  0211                     	;# 
   558  0212                     	;# 
   559  0212                     	;# 
   560  0213                     	;# 
   561  0213                     	;# 
   562  0214                     	;# 
   563  0214                     	;# 
   564  0215                     	;# 
   565  0215                     	;# 
   566  0215                     	;# 
   567  0215                     	;# 
   568  0216                     	;# 
   569  0216                     	;# 
   570  0217                     	;# 
   571  0217                     	;# 
   572  0219                     	;# 
   573  021A                     	;# 
   574  021B                     	;# 
   575  021C                     	;# 
   576  021D                     	;# 
   577  021D                     	;# 
   578  021E                     	;# 
   579  021F                     	;# 
   580  028C                     	;# 
   581  028D                     	;# 
   582  028E                     	;# 
   583  0291                     	;# 
   584  0291                     	;# 
   585  0292                     	;# 
   586  0293                     	;# 
   587  0294                     	;# 
   588  0295                     	;# 
   589  0295                     	;# 
   590  0296                     	;# 
   591  0297                     	;# 
   592  0298                     	;# 
   593  029F                     	;# 
   594  030C                     	;# 
   595  030D                     	;# 
   596  030E                     	;# 
   597  0311                     	;# 
   598  0311                     	;# 
   599  0312                     	;# 
   600  0313                     	;# 
   601  0314                     	;# 
   602  0315                     	;# 
   603  0315                     	;# 
   604  0316                     	;# 
   605  0317                     	;# 
   606  0318                     	;# 
   607  038C                     	;# 
   608  038D                     	;# 
   609  038E                     	;# 
   610  0391                     	;# 
   611  0392                     	;# 
   612  0393                     	;# 
   613  0394                     	;# 
   614  0395                     	;# 
   615  0396                     	;# 
   616  0397                     	;# 
   617  0398                     	;# 
   618  0399                     	;# 
   619  039A                     	;# 
   620  039C                     	;# 
   621  039D                     	;# 
   622  039E                     	;# 
   623  039F                     	;# 
   624  0411                     	;# 
   625  0411                     	;# 
   626  0412                     	;# 
   627  0413                     	;# 
   628  0414                     	;# 
   629  0415                     	;# 
   630  0416                     	;# 
   631  0417                     	;# 
   632  0418                     	;# 
   633  0418                     	;# 
   634  0419                     	;# 
   635  041A                     	;# 
   636  041B                     	;# 
   637  041C                     	;# 
   638  041D                     	;# 
   639  041E                     	;# 
   640  041F                     	;# 
   641  0498                     	;# 
   642  0498                     	;# 
   643  0499                     	;# 
   644  049A                     	;# 
   645  049B                     	;# 
   646  049B                     	;# 
   647  049C                     	;# 
   648  049D                     	;# 
   649  049E                     	;# 
   650  049F                     	;# 
   651  0617                     	;# 
   652  0618                     	;# 
   653  0619                     	;# 
   654  0619                     	;# 
   655  061A                     	;# 
   656  061B                     	;# 
   657  061C                     	;# 
   658  061C                     	;# 
   659  061F                     	;# 
   660  0691                     	;# 
   661  0692                     	;# 
   662  0693                     	;# 
   663  0694                     	;# 
   664  0695                     	;# 
   665  0696                     	;# 
   666  0697                     	;# 
   667  0698                     	;# 
   668  0699                     	;# 
   669  0711                     	;# 
   670  0712                     	;# 
   671  0713                     	;# 
   672  0714                     	;# 
   673  0715                     	;# 
   674  0716                     	;# 
   675  0717                     	;# 
   676  0718                     	;# 
   677  0719                     	;# 
   678  0891                     	;# 
   679  0891                     	;# 
   680  0891                     	;# 
   681  0891                     	;# 
   682  0891                     	;# 
   683  0891                     	;# 
   684  0892                     	;# 
   685  0892                     	;# 
   686  0892                     	;# 
   687  0893                     	;# 
   688  0893                     	;# 
   689  0893                     	;# 
   690  0893                     	;# 
   691  0893                     	;# 
   692  0893                     	;# 
   693  0894                     	;# 
   694  0894                     	;# 
   695  0894                     	;# 
   696  0895                     	;# 
   697  0895                     	;# 
   698  0895                     	;# 
   699  0896                     	;# 
   700  0896                     	;# 
   701  0896                     	;# 
   702  089B                     	;# 
   703  0911                     	;# 
   704  0912                     	;# 
   705  0913                     	;# 
   706  0914                     	;# 
   707  0915                     	;# 
   708  0916                     	;# 
   709  0918                     	;# 
   710  0919                     	;# 
   711  091A                     	;# 
   712  091B                     	;# 
   713  091C                     	;# 
   714  091D                     	;# 
   715  091E                     	;# 
   716  091F                     	;# 
   717  0E0F                     	;# 
   718  0E10                     	;# 
   719  0E11                     	;# 
   720  0E12                     	;# 
   721  0E13                     	;# 
   722  0E14                     	;# 
   723  0E15                     	;# 
   724  0E16                     	;# 
   725  0E17                     	;# 
   726  0E18                     	;# 
   727  0E19                     	;# 
   728  0E1A                     	;# 
   729  0E1B                     	;# 
   730  0E1C                     	;# 
   731  0E1D                     	;# 
   732  0E1E                     	;# 
   733  0E1F                     	;# 
   734  0E20                     	;# 
   735  0E21                     	;# 
   736  0E22                     	;# 
   737  0E24                     	;# 
   738  0E25                     	;# 
   739  0E28                     	;# 
   740  0E29                     	;# 
   741  0E2A                     	;# 
   742  0E2B                     	;# 
   743  0E2C                     	;# 
   744  0E2D                     	;# 
   745  0E2E                     	;# 
   746  0E2F                     	;# 
   747  0E90                     	;# 
   748  0E91                     	;# 
   749  0E92                     	;# 
   750  0E94                     	;# 
   751  0E95                     	;# 
   752  0E9C                     	;# 
   753  0E9D                     	;# 
   754  0E9E                     	;# 
   755  0E9F                     	;# 
   756  0EA0                     	;# 
   757  0EA1                     	;# 
   758  0EA2                     	;# 
   759  0EA3                     	;# 
   760  0EA4                     	;# 
   761  0EA5                     	;# 
   762  0EA6                     	;# 
   763  0EA7                     	;# 
   764  0F0F                     	;# 
   765  0F10                     	;# 
   766  0F11                     	;# 
   767  0F12                     	;# 
   768  0F13                     	;# 
   769  0F14                     	;# 
   770  0F15                     	;# 
   771  0F16                     	;# 
   772  0F17                     	;# 
   773  0F18                     	;# 
   774  0F19                     	;# 
   775  0F1A                     	;# 
   776  0F1B                     	;# 
   777  0F1C                     	;# 
   778  0F1D                     	;# 
   779  0F1E                     	;# 
   780  0F1F                     	;# 
   781  0F20                     	;# 
   782  0F21                     	;# 
   783  0F22                     	;# 
   784  0F23                     	;# 
   785  0F24                     	;# 
   786  0F25                     	;# 
   787  0F26                     	;# 
   788  0F27                     	;# 
   789  0F28                     	;# 
   790  0F29                     	;# 
   791  0F2A                     	;# 
   792  0F2B                     	;# 
   793  0F2C                     	;# 
   794  0F2D                     	;# 
   795  0F2E                     	;# 
   796  0F2F                     	;# 
   797  0F30                     	;# 
   798  0F31                     	;# 
   799  0F32                     	;# 
   800  0F33                     	;# 
   801  0F34                     	;# 
   802  0F35                     	;# 
   803  0F36                     	;# 
   804  0F37                     	;# 
   805  0FE4                     	;# 
   806  0FE5                     	;# 
   807  0FE6                     	;# 
   808  0FE7                     	;# 
   809  0FE8                     	;# 
   810  0FE9                     	;# 
   811  0FEA                     	;# 
   812  0FEB                     	;# 
   813  0FED                     	;# 
   814  0FEE                     	;# 
   815  0FEF                     	;# 
   816  0000                     	;# 
   817  0001                     	;# 
   818  0002                     	;# 
   819  0003                     	;# 
   820  0004                     	;# 
   821  0005                     	;# 
   822  0006                     	;# 
   823  0007                     	;# 
   824  0008                     	;# 
   825  0009                     	;# 
   826  000A                     	;# 
   827  000B                     	;# 
   828  000C                     	;# 
   829  000D                     	;# 
   830  000E                     	;# 
   831  0010                     	;# 
   832  0011                     	;# 
   833  0012                     	;# 
   834  0013                     	;# 
   835  0014                     	;# 
   836  0015                     	;# 
   837  0015                     	;# 
   838  0016                     	;# 
   839  0016                     	;# 
   840  0017                     	;# 
   841  0018                     	;# 
   842  0019                     	;# 
   843  0019                     	;# 
   844  001A                     	;# 
   845  001B                     	;# 
   846  001C                     	;# 
   847  001D                     	;# 
   848  001E                     	;# 
   849  001F                     	;# 
   850  008C                     	;# 
   851  008D                     	;# 
   852  008E                     	;# 
   853  0090                     	;# 
   854  0091                     	;# 
   855  0092                     	;# 
   856  0093                     	;# 
   857  0094                     	;# 
   858  0097                     	;# 
   859  009B                     	;# 
   860  009B                     	;# 
   861  009C                     	;# 
   862  009D                     	;# 
   863  009E                     	;# 
   864  009F                     	;# 
   865  010C                     	;# 
   866  010D                     	;# 
   867  010E                     	;# 
   868  0111                     	;# 
   869  0112                     	;# 
   870  0113                     	;# 
   871  0114                     	;# 
   872  0115                     	;# 
   873  0116                     	;# 
   874  0117                     	;# 
   875  0118                     	;# 
   876  0119                     	;# 
   877  018C                     	;# 
   878  018D                     	;# 
   879  018E                     	;# 
   880  0197                     	;# 
   881  0199                     	;# 
   882  0199                     	;# 
   883  0199                     	;# 
   884  019A                     	;# 
   885  019A                     	;# 
   886  019A                     	;# 
   887  019B                     	;# 
   888  019B                     	;# 
   889  019B                     	;# 
   890  019B                     	;# 
   891  019B                     	;# 
   892  019C                     	;# 
   893  019C                     	;# 
   894  019C                     	;# 
   895  019D                     	;# 
   896  019D                     	;# 
   897  019D                     	;# 
   898  019E                     	;# 
   899  019E                     	;# 
   900  019E                     	;# 
   901  019F                     	;# 
   902  019F                     	;# 
   903  019F                     	;# 
   904  019F                     	;# 
   905  019F                     	;# 
   906  020C                     	;# 
   907  020D                     	;# 
   908  020E                     	;# 
   909  0211                     	;# 
   910  0211                     	;# 
   911  0212                     	;# 
   912  0212                     	;# 
   913  0213                     	;# 
   914  0213                     	;# 
   915  0214                     	;# 
   916  0214                     	;# 
   917  0215                     	;# 
   918  0215                     	;# 
   919  0215                     	;# 
   920  0215                     	;# 
   921  0216                     	;# 
   922  0216                     	;# 
   923  0217                     	;# 
   924  0217                     	;# 
   925  0219                     	;# 
   926  021A                     	;# 
   927  021B                     	;# 
   928  021C                     	;# 
   929  021D                     	;# 
   930  021D                     	;# 
   931  021E                     	;# 
   932  021F                     	;# 
   933  028C                     	;# 
   934  028D                     	;# 
   935  028E                     	;# 
   936  0291                     	;# 
   937  0291                     	;# 
   938  0292                     	;# 
   939  0293                     	;# 
   940  0294                     	;# 
   941  0295                     	;# 
   942  0295                     	;# 
   943  0296                     	;# 
   944  0297                     	;# 
   945  0298                     	;# 
   946  029F                     	;# 
   947  030C                     	;# 
   948  030D                     	;# 
   949  030E                     	;# 
   950  0311                     	;# 
   951  0311                     	;# 
   952  0312                     	;# 
   953  0313                     	;# 
   954  0314                     	;# 
   955  0315                     	;# 
   956  0315                     	;# 
   957  0316                     	;# 
   958  0317                     	;# 
   959  0318                     	;# 
   960  038C                     	;# 
   961  038D                     	;# 
   962  038E                     	;# 
   963  0391                     	;# 
   964  0392                     	;# 
   965  0393                     	;# 
   966  0394                     	;# 
   967  0395                     	;# 
   968  0396                     	;# 
   969  0397                     	;# 
   970  0398                     	;# 
   971  0399                     	;# 
   972  039A                     	;# 
   973  039C                     	;# 
   974  039D                     	;# 
   975  039E                     	;# 
   976  039F                     	;# 
   977  0411                     	;# 
   978  0411                     	;# 
   979  0412                     	;# 
   980  0413                     	;# 
   981  0414                     	;# 
   982  0415                     	;# 
   983  0416                     	;# 
   984  0417                     	;# 
   985  0418                     	;# 
   986  0418                     	;# 
   987  0419                     	;# 
   988  041A                     	;# 
   989  041B                     	;# 
   990  041C                     	;# 
   991  041D                     	;# 
   992  041E                     	;# 
   993  041F                     	;# 
   994  0498                     	;# 
   995  0498                     	;# 
   996  0499                     	;# 
   997  049A                     	;# 
   998  049B                     	;# 
   999  049B                     	;# 
  1000  049C                     	;# 
  1001  049D                     	;# 
  1002  049E                     	;# 
  1003  049F                     	;# 
  1004  0617                     	;# 
  1005  0618                     	;# 
  1006  0619                     	;# 
  1007  0619                     	;# 
  1008  061A                     	;# 
  1009  061B                     	;# 
  1010  061C                     	;# 
  1011  061C                     	;# 
  1012  061F                     	;# 
  1013  0691                     	;# 
  1014  0692                     	;# 
  1015  0693                     	;# 
  1016  0694                     	;# 
  1017  0695                     	;# 
  1018  0696                     	;# 
  1019  0697                     	;# 
  1020  0698                     	;# 
  1021  0699                     	;# 
  1022  0711                     	;# 
  1023  0712                     	;# 
  1024  0713                     	;# 
  1025  0714                     	;# 
  1026  0715                     	;# 
  1027  0716                     	;# 
  1028  0717                     	;# 
  1029  0718                     	;# 
  1030  0719                     	;# 
  1031  0891                     	;# 
  1032  0891                     	;# 
  1033  0891                     	;# 
  1034  0891                     	;# 
  1035  0891                     	;# 
  1036  0891                     	;# 
  1037  0892                     	;# 
  1038  0892                     	;# 
  1039  0892                     	;# 
  1040  0893                     	;# 
  1041  0893                     	;# 
  1042  0893                     	;# 
  1043  0893                     	;# 
  1044  0893                     	;# 
  1045  0893                     	;# 
  1046  0894                     	;# 
  1047  0894                     	;# 
  1048  0894                     	;# 
  1049  0895                     	;# 
  1050  0895                     	;# 
  1051  0895                     	;# 
  1052  0896                     	;# 
  1053  0896                     	;# 
  1054  0896                     	;# 
  1055  089B                     	;# 
  1056  0911                     	;# 
  1057  0912                     	;# 
  1058  0913                     	;# 
  1059  0914                     	;# 
  1060  0915                     	;# 
  1061  0916                     	;# 
  1062  0918                     	;# 
  1063  0919                     	;# 
  1064  091A                     	;# 
  1065  091B                     	;# 
  1066  091C                     	;# 
  1067  091D                     	;# 
  1068  091E                     	;# 
  1069  091F                     	;# 
  1070  0E0F                     	;# 
  1071  0E10                     	;# 
  1072  0E11                     	;# 
  1073  0E12                     	;# 
  1074  0E13                     	;# 
  1075  0E14                     	;# 
  1076  0E15                     	;# 
  1077  0E16                     	;# 
  1078  0E17                     	;# 
  1079  0E18                     	;# 
  1080  0E19                     	;# 
  1081  0E1A                     	;# 
  1082  0E1B                     	;# 
  1083  0E1C                     	;# 
  1084  0E1D                     	;# 
  1085  0E1E                     	;# 
  1086  0E1F                     	;# 
  1087  0E20                     	;# 
  1088  0E21                     	;# 
  1089  0E22                     	;# 
  1090  0E24                     	;# 
  1091  0E25                     	;# 
  1092  0E28                     	;# 
  1093  0E29                     	;# 
  1094  0E2A                     	;# 
  1095  0E2B                     	;# 
  1096  0E2C                     	;# 
  1097  0E2D                     	;# 
  1098  0E2E                     	;# 
  1099  0E2F                     	;# 
  1100  0E90                     	;# 
  1101  0E91                     	;# 
  1102  0E92                     	;# 
  1103  0E94                     	;# 
  1104  0E95                     	;# 
  1105  0E9C                     	;# 
  1106  0E9D                     	;# 
  1107  0E9E                     	;# 
  1108  0E9F                     	;# 
  1109  0EA0                     	;# 
  1110  0EA1                     	;# 
  1111  0EA2                     	;# 
  1112  0EA3                     	;# 
  1113  0EA4                     	;# 
  1114  0EA5                     	;# 
  1115  0EA6                     	;# 
  1116  0EA7                     	;# 
  1117  0F0F                     	;# 
  1118  0F10                     	;# 
  1119  0F11                     	;# 
  1120  0F12                     	;# 
  1121  0F13                     	;# 
  1122  0F14                     	;# 
  1123  0F15                     	;# 
  1124  0F16                     	;# 
  1125  0F17                     	;# 
  1126  0F18                     	;# 
  1127  0F19                     	;# 
  1128  0F1A                     	;# 
  1129  0F1B                     	;# 
  1130  0F1C                     	;# 
  1131  0F1D                     	;# 
  1132  0F1E                     	;# 
  1133  0F1F                     	;# 
  1134  0F20                     	;# 
  1135  0F21                     	;# 
  1136  0F22                     	;# 
  1137  0F23                     	;# 
  1138  0F24                     	;# 
  1139  0F25                     	;# 
  1140  0F26                     	;# 
  1141  0F27                     	;# 
  1142  0F28                     	;# 
  1143  0F29                     	;# 
  1144  0F2A                     	;# 
  1145  0F2B                     	;# 
  1146  0F2C                     	;# 
  1147  0F2D                     	;# 
  1148  0F2E                     	;# 
  1149  0F2F                     	;# 
  1150  0F30                     	;# 
  1151  0F31                     	;# 
  1152  0F32                     	;# 
  1153  0F33                     	;# 
  1154  0F34                     	;# 
  1155  0F35                     	;# 
  1156  0F36                     	;# 
  1157  0F37                     	;# 
  1158  0FE4                     	;# 
  1159  0FE5                     	;# 
  1160  0FE6                     	;# 
  1161  0FE7                     	;# 
  1162  0FE8                     	;# 
  1163  0FE9                     	;# 
  1164  0FEA                     	;# 
  1165  0FEB                     	;# 
  1166  0FED                     	;# 
  1167  0FEE                     	;# 
  1168  0FEF                     	;# 
  1169  0000                     	;# 
  1170  0001                     	;# 
  1171  0002                     	;# 
  1172  0003                     	;# 
  1173  0004                     	;# 
  1174  0005                     	;# 
  1175  0006                     	;# 
  1176  0007                     	;# 
  1177  0008                     	;# 
  1178  0009                     	;# 
  1179  000A                     	;# 
  1180  000B                     	;# 
  1181  000C                     	;# 
  1182  000D                     	;# 
  1183  000E                     	;# 
  1184  0010                     	;# 
  1185  0011                     	;# 
  1186  0012                     	;# 
  1187  0013                     	;# 
  1188  0014                     	;# 
  1189  0015                     	;# 
  1190  0015                     	;# 
  1191  0016                     	;# 
  1192  0016                     	;# 
  1193  0017                     	;# 
  1194  0018                     	;# 
  1195  0019                     	;# 
  1196  0019                     	;# 
  1197  001A                     	;# 
  1198  001B                     	;# 
  1199  001C                     	;# 
  1200  001D                     	;# 
  1201  001E                     	;# 
  1202  001F                     	;# 
  1203  008C                     	;# 
  1204  008D                     	;# 
  1205  008E                     	;# 
  1206  0090                     	;# 
  1207  0091                     	;# 
  1208  0092                     	;# 
  1209  0093                     	;# 
  1210  0094                     	;# 
  1211  0097                     	;# 
  1212  009B                     	;# 
  1213  009B                     	;# 
  1214  009C                     	;# 
  1215  009D                     	;# 
  1216  009E                     	;# 
  1217  009F                     	;# 
  1218  010C                     	;# 
  1219  010D                     	;# 
  1220  010E                     	;# 
  1221  0111                     	;# 
  1222  0112                     	;# 
  1223  0113                     	;# 
  1224  0114                     	;# 
  1225  0115                     	;# 
  1226  0116                     	;# 
  1227  0117                     	;# 
  1228  0118                     	;# 
  1229  0119                     	;# 
  1230  018C                     	;# 
  1231  018D                     	;# 
  1232  018E                     	;# 
  1233  0197                     	;# 
  1234  0199                     	;# 
  1235  0199                     	;# 
  1236  0199                     	;# 
  1237  019A                     	;# 
  1238  019A                     	;# 
  1239  019A                     	;# 
  1240  019B                     	;# 
  1241  019B                     	;# 
  1242  019B                     	;# 
  1243  019B                     	;# 
  1244  019B                     	;# 
  1245  019C                     	;# 
  1246  019C                     	;# 
  1247  019C                     	;# 
  1248  019D                     	;# 
  1249  019D                     	;# 
  1250  019D                     	;# 
  1251  019E                     	;# 
  1252  019E                     	;# 
  1253  019E                     	;# 
  1254  019F                     	;# 
  1255  019F                     	;# 
  1256  019F                     	;# 
  1257  019F                     	;# 
  1258  019F                     	;# 
  1259  020C                     	;# 
  1260  020D                     	;# 
  1261  020E                     	;# 
  1262  0211                     	;# 
  1263  0211                     	;# 
  1264  0212                     	;# 
  1265  0212                     	;# 
  1266  0213                     	;# 
  1267  0213                     	;# 
  1268  0214                     	;# 
  1269  0214                     	;# 
  1270  0215                     	;# 
  1271  0215                     	;# 
  1272  0215                     	;# 
  1273  0215                     	;# 
  1274  0216                     	;# 
  1275  0216                     	;# 
  1276  0217                     	;# 
  1277  0217                     	;# 
  1278  0219                     	;# 
  1279  021A                     	;# 
  1280  021B                     	;# 
  1281  021C                     	;# 
  1282  021D                     	;# 
  1283  021D                     	;# 
  1284  021E                     	;# 
  1285  021F                     	;# 
  1286  028C                     	;# 
  1287  028D                     	;# 
  1288  028E                     	;# 
  1289  0291                     	;# 
  1290  0291                     	;# 
  1291  0292                     	;# 
  1292  0293                     	;# 
  1293  0294                     	;# 
  1294  0295                     	;# 
  1295  0295                     	;# 
  1296  0296                     	;# 
  1297  0297                     	;# 
  1298  0298                     	;# 
  1299  029F                     	;# 
  1300  030C                     	;# 
  1301  030D                     	;# 
  1302  030E                     	;# 
  1303  0311                     	;# 
  1304  0311                     	;# 
  1305  0312                     	;# 
  1306  0313                     	;# 
  1307  0314                     	;# 
  1308  0315                     	;# 
  1309  0315                     	;# 
  1310  0316                     	;# 
  1311  0317                     	;# 
  1312  0318                     	;# 
  1313  038C                     	;# 
  1314  038D                     	;# 
  1315  038E                     	;# 
  1316  0391                     	;# 
  1317  0392                     	;# 
  1318  0393                     	;# 
  1319  0394                     	;# 
  1320  0395                     	;# 
  1321  0396                     	;# 
  1322  0397                     	;# 
  1323  0398                     	;# 
  1324  0399                     	;# 
  1325  039A                     	;# 
  1326  039C                     	;# 
  1327  039D                     	;# 
  1328  039E                     	;# 
  1329  039F                     	;# 
  1330  0411                     	;# 
  1331  0411                     	;# 
  1332  0412                     	;# 
  1333  0413                     	;# 
  1334  0414                     	;# 
  1335  0415                     	;# 
  1336  0416                     	;# 
  1337  0417                     	;# 
  1338  0418                     	;# 
  1339  0418                     	;# 
  1340  0419                     	;# 
  1341  041A                     	;# 
  1342  041B                     	;# 
  1343  041C                     	;# 
  1344  041D                     	;# 
  1345  041E                     	;# 
  1346  041F                     	;# 
  1347  0498                     	;# 
  1348  0498                     	;# 
  1349  0499                     	;# 
  1350  049A                     	;# 
  1351  049B                     	;# 
  1352  049B                     	;# 
  1353  049C                     	;# 
  1354  049D                     	;# 
  1355  049E                     	;# 
  1356  049F                     	;# 
  1357  0617                     	;# 
  1358  0618                     	;# 
  1359  0619                     	;# 
  1360  0619                     	;# 
  1361  061A                     	;# 
  1362  061B                     	;# 
  1363  061C                     	;# 
  1364  061C                     	;# 
  1365  061F                     	;# 
  1366  0691                     	;# 
  1367  0692                     	;# 
  1368  0693                     	;# 
  1369  0694                     	;# 
  1370  0695                     	;# 
  1371  0696                     	;# 
  1372  0697                     	;# 
  1373  0698                     	;# 
  1374  0699                     	;# 
  1375  0711                     	;# 
  1376  0712                     	;# 
  1377  0713                     	;# 
  1378  0714                     	;# 
  1379  0715                     	;# 
  1380  0716                     	;# 
  1381  0717                     	;# 
  1382  0718                     	;# 
  1383  0719                     	;# 
  1384  0891                     	;# 
  1385  0891                     	;# 
  1386  0891                     	;# 
  1387  0891                     	;# 
  1388  0891                     	;# 
  1389  0891                     	;# 
  1390  0892                     	;# 
  1391  0892                     	;# 
  1392  0892                     	;# 
  1393  0893                     	;# 
  1394  0893                     	;# 
  1395  0893                     	;# 
  1396  0893                     	;# 
  1397  0893                     	;# 
  1398  0893                     	;# 
  1399  0894                     	;# 
  1400  0894                     	;# 
  1401  0894                     	;# 
  1402  0895                     	;# 
  1403  0895                     	;# 
  1404  0895                     	;# 
  1405  0896                     	;# 
  1406  0896                     	;# 
  1407  0896                     	;# 
  1408  089B                     	;# 
  1409  0911                     	;# 
  1410  0912                     	;# 
  1411  0913                     	;# 
  1412  0914                     	;# 
  1413  0915                     	;# 
  1414  0916                     	;# 
  1415  0918                     	;# 
  1416  0919                     	;# 
  1417  091A                     	;# 
  1418  091B                     	;# 
  1419  091C                     	;# 
  1420  091D                     	;# 
  1421  091E                     	;# 
  1422  091F                     	;# 
  1423  0E0F                     	;# 
  1424  0E10                     	;# 
  1425  0E11                     	;# 
  1426  0E12                     	;# 
  1427  0E13                     	;# 
  1428  0E14                     	;# 
  1429  0E15                     	;# 
  1430  0E16                     	;# 
  1431  0E17                     	;# 
  1432  0E18                     	;# 
  1433  0E19                     	;# 
  1434  0E1A                     	;# 
  1435  0E1B                     	;# 
  1436  0E1C                     	;# 
  1437  0E1D                     	;# 
  1438  0E1E                     	;# 
  1439  0E1F                     	;# 
  1440  0E20                     	;# 
  1441  0E21                     	;# 
  1442  0E22                     	;# 
  1443  0E24                     	;# 
  1444  0E25                     	;# 
  1445  0E28                     	;# 
  1446  0E29                     	;# 
  1447  0E2A                     	;# 
  1448  0E2B                     	;# 
  1449  0E2C                     	;# 
  1450  0E2D                     	;# 
  1451  0E2E                     	;# 
  1452  0E2F                     	;# 
  1453  0E90                     	;# 
  1454  0E91                     	;# 
  1455  0E92                     	;# 
  1456  0E94                     	;# 
  1457  0E95                     	;# 
  1458  0E9C                     	;# 
  1459  0E9D                     	;# 
  1460  0E9E                     	;# 
  1461  0E9F                     	;# 
  1462  0EA0                     	;# 
  1463  0EA1                     	;# 
  1464  0EA2                     	;# 
  1465  0EA3                     	;# 
  1466  0EA4                     	;# 
  1467  0EA5                     	;# 
  1468  0EA6                     	;# 
  1469  0EA7                     	;# 
  1470  0F0F                     	;# 
  1471  0F10                     	;# 
  1472  0F11                     	;# 
  1473  0F12                     	;# 
  1474  0F13                     	;# 
  1475  0F14                     	;# 
  1476  0F15                     	;# 
  1477  0F16                     	;# 
  1478  0F17                     	;# 
  1479  0F18                     	;# 
  1480  0F19                     	;# 
  1481  0F1A                     	;# 
  1482  0F1B                     	;# 
  1483  0F1C                     	;# 
  1484  0F1D                     	;# 
  1485  0F1E                     	;# 
  1486  0F1F                     	;# 
  1487  0F20                     	;# 
  1488  0F21                     	;# 
  1489  0F22                     	;# 
  1490  0F23                     	;# 
  1491  0F24                     	;# 
  1492  0F25                     	;# 
  1493  0F26                     	;# 
  1494  0F27                     	;# 
  1495  0F28                     	;# 
  1496  0F29                     	;# 
  1497  0F2A                     	;# 
  1498  0F2B                     	;# 
  1499  0F2C                     	;# 
  1500  0F2D                     	;# 
  1501  0F2E                     	;# 
  1502  0F2F                     	;# 
  1503  0F30                     	;# 
  1504  0F31                     	;# 
  1505  0F32                     	;# 
  1506  0F33                     	;# 
  1507  0F34                     	;# 
  1508  0F35                     	;# 
  1509  0F36                     	;# 
  1510  0F37                     	;# 
  1511  0FE4                     	;# 
  1512  0FE5                     	;# 
  1513  0FE6                     	;# 
  1514  0FE7                     	;# 
  1515  0FE8                     	;# 
  1516  0FE9                     	;# 
  1517  0FEA                     	;# 
  1518  0FEB                     	;# 
  1519  0FED                     	;# 
  1520  0FEE                     	;# 
  1521  0FEF                     	;# 
  1522  0000                     	;# 
  1523  0001                     	;# 
  1524  0002                     	;# 
  1525  0003                     	;# 
  1526  0004                     	;# 
  1527  0005                     	;# 
  1528  0006                     	;# 
  1529  0007                     	;# 
  1530  0008                     	;# 
  1531  0009                     	;# 
  1532  000A                     	;# 
  1533  000B                     	;# 
  1534  000C                     	;# 
  1535  000D                     	;# 
  1536  000E                     	;# 
  1537  0010                     	;# 
  1538  0011                     	;# 
  1539  0012                     	;# 
  1540  0013                     	;# 
  1541  0014                     	;# 
  1542  0015                     	;# 
  1543  0015                     	;# 
  1544  0016                     	;# 
  1545  0016                     	;# 
  1546  0017                     	;# 
  1547  0018                     	;# 
  1548  0019                     	;# 
  1549  0019                     	;# 
  1550  001A                     	;# 
  1551  001B                     	;# 
  1552  001C                     	;# 
  1553  001D                     	;# 
  1554  001E                     	;# 
  1555  001F                     	;# 
  1556  008C                     	;# 
  1557  008D                     	;# 
  1558  008E                     	;# 
  1559  0090                     	;# 
  1560  0091                     	;# 
  1561  0092                     	;# 
  1562  0093                     	;# 
  1563  0094                     	;# 
  1564  0097                     	;# 
  1565  009B                     	;# 
  1566  009B                     	;# 
  1567  009C                     	;# 
  1568  009D                     	;# 
  1569  009E                     	;# 
  1570  009F                     	;# 
  1571  010C                     	;# 
  1572  010D                     	;# 
  1573  010E                     	;# 
  1574  0111                     	;# 
  1575  0112                     	;# 
  1576  0113                     	;# 
  1577  0114                     	;# 
  1578  0115                     	;# 
  1579  0116                     	;# 
  1580  0117                     	;# 
  1581  0118                     	;# 
  1582  0119                     	;# 
  1583  018C                     	;# 
  1584  018D                     	;# 
  1585  018E                     	;# 
  1586  0197                     	;# 
  1587  0199                     	;# 
  1588  0199                     	;# 
  1589  0199                     	;# 
  1590  019A                     	;# 
  1591  019A                     	;# 
  1592  019A                     	;# 
  1593  019B                     	;# 
  1594  019B                     	;# 
  1595  019B                     	;# 
  1596  019B                     	;# 
  1597  019B                     	;# 
  1598  019C                     	;# 
  1599  019C                     	;# 
  1600  019C                     	;# 
  1601  019D                     	;# 
  1602  019D                     	;# 
  1603  019D                     	;# 
  1604  019E                     	;# 
  1605  019E                     	;# 
  1606  019E                     	;# 
  1607  019F                     	;# 
  1608  019F                     	;# 
  1609  019F                     	;# 
  1610  019F                     	;# 
  1611  019F                     	;# 
  1612  020C                     	;# 
  1613  020D                     	;# 
  1614  020E                     	;# 
  1615  0211                     	;# 
  1616  0211                     	;# 
  1617  0212                     	;# 
  1618  0212                     	;# 
  1619  0213                     	;# 
  1620  0213                     	;# 
  1621  0214                     	;# 
  1622  0214                     	;# 
  1623  0215                     	;# 
  1624  0215                     	;# 
  1625  0215                     	;# 
  1626  0215                     	;# 
  1627  0216                     	;# 
  1628  0216                     	;# 
  1629  0217                     	;# 
  1630  0217                     	;# 
  1631  0219                     	;# 
  1632  021A                     	;# 
  1633  021B                     	;# 
  1634  021C                     	;# 
  1635  021D                     	;# 
  1636  021D                     	;# 
  1637  021E                     	;# 
  1638  021F                     	;# 
  1639  028C                     	;# 
  1640  028D                     	;# 
  1641  028E                     	;# 
  1642  0291                     	;# 
  1643  0291                     	;# 
  1644  0292                     	;# 
  1645  0293                     	;# 
  1646  0294                     	;# 
  1647  0295                     	;# 
  1648  0295                     	;# 
  1649  0296                     	;# 
  1650  0297                     	;# 
  1651  0298                     	;# 
  1652  029F                     	;# 
  1653  030C                     	;# 
  1654  030D                     	;# 
  1655  030E                     	;# 
  1656  0311                     	;# 
  1657  0311                     	;# 
  1658  0312                     	;# 
  1659  0313                     	;# 
  1660  0314                     	;# 
  1661  0315                     	;# 
  1662  0315                     	;# 
  1663  0316                     	;# 
  1664  0317                     	;# 
  1665  0318                     	;# 
  1666  038C                     	;# 
  1667  038D                     	;# 
  1668  038E                     	;# 
  1669  0391                     	;# 
  1670  0392                     	;# 
  1671  0393                     	;# 
  1672  0394                     	;# 
  1673  0395                     	;# 
  1674  0396                     	;# 
  1675  0397                     	;# 
  1676  0398                     	;# 
  1677  0399                     	;# 
  1678  039A                     	;# 
  1679  039C                     	;# 
  1680  039D                     	;# 
  1681  039E                     	;# 
  1682  039F                     	;# 
  1683  0411                     	;# 
  1684  0411                     	;# 
  1685  0412                     	;# 
  1686  0413                     	;# 
  1687  0414                     	;# 
  1688  0415                     	;# 
  1689  0416                     	;# 
  1690  0417                     	;# 
  1691  0418                     	;# 
  1692  0418                     	;# 
  1693  0419                     	;# 
  1694  041A                     	;# 
  1695  041B                     	;# 
  1696  041C                     	;# 
  1697  041D                     	;# 
  1698  041E                     	;# 
  1699  041F                     	;# 
  1700  0498                     	;# 
  1701  0498                     	;# 
  1702  0499                     	;# 
  1703  049A                     	;# 
  1704  049B                     	;# 
  1705  049B                     	;# 
  1706  049C                     	;# 
  1707  049D                     	;# 
  1708  049E                     	;# 
  1709  049F                     	;# 
  1710  0617                     	;# 
  1711  0618                     	;# 
  1712  0619                     	;# 
  1713  0619                     	;# 
  1714  061A                     	;# 
  1715  061B                     	;# 
  1716  061C                     	;# 
  1717  061C                     	;# 
  1718  061F                     	;# 
  1719  0691                     	;# 
  1720  0692                     	;# 
  1721  0693                     	;# 
  1722  0694                     	;# 
  1723  0695                     	;# 
  1724  0696                     	;# 
  1725  0697                     	;# 
  1726  0698                     	;# 
  1727  0699                     	;# 
  1728  0711                     	;# 
  1729  0712                     	;# 
  1730  0713                     	;# 
  1731  0714                     	;# 
  1732  0715                     	;# 
  1733  0716                     	;# 
  1734  0717                     	;# 
  1735  0718                     	;# 
  1736  0719                     	;# 
  1737  0891                     	;# 
  1738  0891                     	;# 
  1739  0891                     	;# 
  1740  0891                     	;# 
  1741  0891                     	;# 
  1742  0891                     	;# 
  1743  0892                     	;# 
  1744  0892                     	;# 
  1745  0892                     	;# 
  1746  0893                     	;# 
  1747  0893                     	;# 
  1748  0893                     	;# 
  1749  0893                     	;# 
  1750  0893                     	;# 
  1751  0893                     	;# 
  1752  0894                     	;# 
  1753  0894                     	;# 
  1754  0894                     	;# 
  1755  0895                     	;# 
  1756  0895                     	;# 
  1757  0895                     	;# 
  1758  0896                     	;# 
  1759  0896                     	;# 
  1760  0896                     	;# 
  1761  089B                     	;# 
  1762  0911                     	;# 
  1763  0912                     	;# 
  1764  0913                     	;# 
  1765  0914                     	;# 
  1766  0915                     	;# 
  1767  0916                     	;# 
  1768  0918                     	;# 
  1769  0919                     	;# 
  1770  091A                     	;# 
  1771  091B                     	;# 
  1772  091C                     	;# 
  1773  091D                     	;# 
  1774  091E                     	;# 
  1775  091F                     	;# 
  1776  0E0F                     	;# 
  1777  0E10                     	;# 
  1778  0E11                     	;# 
  1779  0E12                     	;# 
  1780  0E13                     	;# 
  1781  0E14                     	;# 
  1782  0E15                     	;# 
  1783  0E16                     	;# 
  1784  0E17                     	;# 
  1785  0E18                     	;# 
  1786  0E19                     	;# 
  1787  0E1A                     	;# 
  1788  0E1B                     	;# 
  1789  0E1C                     	;# 
  1790  0E1D                     	;# 
  1791  0E1E                     	;# 
  1792  0E1F                     	;# 
  1793  0E20                     	;# 
  1794  0E21                     	;# 
  1795  0E22                     	;# 
  1796  0E24                     	;# 
  1797  0E25                     	;# 
  1798  0E28                     	;# 
  1799  0E29                     	;# 
  1800  0E2A                     	;# 
  1801  0E2B                     	;# 
  1802  0E2C                     	;# 
  1803  0E2D                     	;# 
  1804  0E2E                     	;# 
  1805  0E2F                     	;# 
  1806  0E90                     	;# 
  1807  0E91                     	;# 
  1808  0E92                     	;# 
  1809  0E94                     	;# 
  1810  0E95                     	;# 
  1811  0E9C                     	;# 
  1812  0E9D                     	;# 
  1813  0E9E                     	;# 
  1814  0E9F                     	;# 
  1815  0EA0                     	;# 
  1816  0EA1                     	;# 
  1817  0EA2                     	;# 
  1818  0EA3                     	;# 
  1819  0EA4                     	;# 
  1820  0EA5                     	;# 
  1821  0EA6                     	;# 
  1822  0EA7                     	;# 
  1823  0F0F                     	;# 
  1824  0F10                     	;# 
  1825  0F11                     	;# 
  1826  0F12                     	;# 
  1827  0F13                     	;# 
  1828  0F14                     	;# 
  1829  0F15                     	;# 
  1830  0F16                     	;# 
  1831  0F17                     	;# 
  1832  0F18                     	;# 
  1833  0F19                     	;# 
  1834  0F1A                     	;# 
  1835  0F1B                     	;# 
  1836  0F1C                     	;# 
  1837  0F1D                     	;# 
  1838  0F1E                     	;# 
  1839  0F1F                     	;# 
  1840  0F20                     	;# 
  1841  0F21                     	;# 
  1842  0F22                     	;# 
  1843  0F23                     	;# 
  1844  0F24                     	;# 
  1845  0F25                     	;# 
  1846  0F26                     	;# 
  1847  0F27                     	;# 
  1848  0F28                     	;# 
  1849  0F29                     	;# 
  1850  0F2A                     	;# 
  1851  0F2B                     	;# 
  1852  0F2C                     	;# 
  1853  0F2D                     	;# 
  1854  0F2E                     	;# 
  1855  0F2F                     	;# 
  1856  0F30                     	;# 
  1857  0F31                     	;# 
  1858  0F32                     	;# 
  1859  0F33                     	;# 
  1860  0F34                     	;# 
  1861  0F35                     	;# 
  1862  0F36                     	;# 
  1863  0F37                     	;# 
  1864  0FE4                     	;# 
  1865  0FE5                     	;# 
  1866  0FE6                     	;# 
  1867  0FE7                     	;# 
  1868  0FE8                     	;# 
  1869  0FE9                     	;# 
  1870  0FEA                     	;# 
  1871  0FEB                     	;# 
  1872  0FED                     	;# 
  1873  0FEE                     	;# 
  1874  0FEF                     	;# 
  1875  0000                     	;# 
  1876  0001                     	;# 
  1877  0002                     	;# 
  1878  0003                     	;# 
  1879  0004                     	;# 
  1880  0005                     	;# 
  1881  0006                     	;# 
  1882  0007                     	;# 
  1883  0008                     	;# 
  1884  0009                     	;# 
  1885  000A                     	;# 
  1886  000B                     	;# 
  1887  000C                     	;# 
  1888  000D                     	;# 
  1889  000E                     	;# 
  1890  0010                     	;# 
  1891  0011                     	;# 
  1892  0012                     	;# 
  1893  0013                     	;# 
  1894  0014                     	;# 
  1895  0015                     	;# 
  1896  0015                     	;# 
  1897  0016                     	;# 
  1898  0016                     	;# 
  1899  0017                     	;# 
  1900  0018                     	;# 
  1901  0019                     	;# 
  1902  0019                     	;# 
  1903  001A                     	;# 
  1904  001B                     	;# 
  1905  001C                     	;# 
  1906  001D                     	;# 
  1907  001E                     	;# 
  1908  001F                     	;# 
  1909  008C                     	;# 
  1910  008D                     	;# 
  1911  008E                     	;# 
  1912  0090                     	;# 
  1913  0091                     	;# 
  1914  0092                     	;# 
  1915  0093                     	;# 
  1916  0094                     	;# 
  1917  0097                     	;# 
  1918  009B                     	;# 
  1919  009B                     	;# 
  1920  009C                     	;# 
  1921  009D                     	;# 
  1922  009E                     	;# 
  1923  009F                     	;# 
  1924  010C                     	;# 
  1925  010D                     	;# 
  1926  010E                     	;# 
  1927  0111                     	;# 
  1928  0112                     	;# 
  1929  0113                     	;# 
  1930  0114                     	;# 
  1931  0115                     	;# 
  1932  0116                     	;# 
  1933  0117                     	;# 
  1934  0118                     	;# 
  1935  0119                     	;# 
  1936  018C                     	;# 
  1937  018D                     	;# 
  1938  018E                     	;# 
  1939  0197                     	;# 
  1940  0199                     	;# 
  1941  0199                     	;# 
  1942  0199                     	;# 
  1943  019A                     	;# 
  1944  019A                     	;# 
  1945  019A                     	;# 
  1946  019B                     	;# 
  1947  019B                     	;# 
  1948  019B                     	;# 
  1949  019B                     	;# 
  1950  019B                     	;# 
  1951  019C                     	;# 
  1952  019C                     	;# 
  1953  019C                     	;# 
  1954  019D                     	;# 
  1955  019D                     	;# 
  1956  019D                     	;# 
  1957  019E                     	;# 
  1958  019E                     	;# 
  1959  019E                     	;# 
  1960  019F                     	;# 
  1961  019F                     	;# 
  1962  019F                     	;# 
  1963  019F                     	;# 
  1964  019F                     	;# 
  1965  020C                     	;# 
  1966  020D                     	;# 
  1967  020E                     	;# 
  1968  0211                     	;# 
  1969  0211                     	;# 
  1970  0212                     	;# 
  1971  0212                     	;# 
  1972  0213                     	;# 
  1973  0213                     	;# 
  1974  0214                     	;# 
  1975  0214                     	;# 
  1976  0215                     	;# 
  1977  0215                     	;# 
  1978  0215                     	;# 
  1979  0215                     	;# 
  1980  0216                     	;# 
  1981  0216                     	;# 
  1982  0217                     	;# 
  1983  0217                     	;# 
  1984  0219                     	;# 
  1985  021A                     	;# 
  1986  021B                     	;# 
  1987  021C                     	;# 
  1988  021D                     	;# 
  1989  021D                     	;# 
  1990  021E                     	;# 
  1991  021F                     	;# 
  1992  028C                     	;# 
  1993  028D                     	;# 
  1994  028E                     	;# 
  1995  0291                     	;# 
  1996  0291                     	;# 
  1997  0292                     	;# 
  1998  0293                     	;# 
  1999  0294                     	;# 
  2000  0295                     	;# 
  2001  0295                     	;# 
  2002  0296                     	;# 
  2003  0297                     	;# 
  2004  0298                     	;# 
  2005  029F                     	;# 
  2006  030C                     	;# 
  2007  030D                     	;# 
  2008  030E                     	;# 
  2009  0311                     	;# 
  2010  0311                     	;# 
  2011  0312                     	;# 
  2012  0313                     	;# 
  2013  0314                     	;# 
  2014  0315                     	;# 
  2015  0315                     	;# 
  2016  0316                     	;# 
  2017  0317                     	;# 
  2018  0318                     	;# 
  2019  038C                     	;# 
  2020  038D                     	;# 
  2021  038E                     	;# 
  2022  0391                     	;# 
  2023  0392                     	;# 
  2024  0393                     	;# 
  2025  0394                     	;# 
  2026  0395                     	;# 
  2027  0396                     	;# 
  2028  0397                     	;# 
  2029  0398                     	;# 
  2030  0399                     	;# 
  2031  039A                     	;# 
  2032  039C                     	;# 
  2033  039D                     	;# 
  2034  039E                     	;# 
  2035  039F                     	;# 
  2036  0411                     	;# 
  2037  0411                     	;# 
  2038  0412                     	;# 
  2039  0413                     	;# 
  2040  0414                     	;# 
  2041  0415                     	;# 
  2042  0416                     	;# 
  2043  0417                     	;# 
  2044  0418                     	;# 
  2045  0418                     	;# 
  2046  0419                     	;# 
  2047  041A                     	;# 
  2048  041B                     	;# 
  2049  041C                     	;# 
  2050  041D                     	;# 
  2051  041E                     	;# 
  2052  041F                     	;# 
  2053  0498                     	;# 
  2054  0498                     	;# 
  2055  0499                     	;# 
  2056  049A                     	;# 
  2057  049B                     	;# 
  2058  049B                     	;# 
  2059  049C                     	;# 
  2060  049D                     	;# 
  2061  049E                     	;# 
  2062  049F                     	;# 
  2063  0617                     	;# 
  2064  0618                     	;# 
  2065  0619                     	;# 
  2066  0619                     	;# 
  2067  061A                     	;# 
  2068  061B                     	;# 
  2069  061C                     	;# 
  2070  061C                     	;# 
  2071  061F                     	;# 
  2072  0691                     	;# 
  2073  0692                     	;# 
  2074  0693                     	;# 
  2075  0694                     	;# 
  2076  0695                     	;# 
  2077  0696                     	;# 
  2078  0697                     	;# 
  2079  0698                     	;# 
  2080  0699                     	;# 
  2081  0711                     	;# 
  2082  0712                     	;# 
  2083  0713                     	;# 
  2084  0714                     	;# 
  2085  0715                     	;# 
  2086  0716                     	;# 
  2087  0717                     	;# 
  2088  0718                     	;# 
  2089  0719                     	;# 
  2090  0891                     	;# 
  2091  0891                     	;# 
  2092  0891                     	;# 
  2093  0891                     	;# 
  2094  0891                     	;# 
  2095  0891                     	;# 
  2096  0892                     	;# 
  2097  0892                     	;# 
  2098  0892                     	;# 
  2099  0893                     	;# 
  2100  0893                     	;# 
  2101  0893                     	;# 
  2102  0893                     	;# 
  2103  0893                     	;# 
  2104  0893                     	;# 
  2105  0894                     	;# 
  2106  0894                     	;# 
  2107  0894                     	;# 
  2108  0895                     	;# 
  2109  0895                     	;# 
  2110  0895                     	;# 
  2111  0896                     	;# 
  2112  0896                     	;# 
  2113  0896                     	;# 
  2114  089B                     	;# 
  2115  0911                     	;# 
  2116  0912                     	;# 
  2117  0913                     	;# 
  2118  0914                     	;# 
  2119  0915                     	;# 
  2120  0916                     	;# 
  2121  0918                     	;# 
  2122  0919                     	;# 
  2123  091A                     	;# 
  2124  091B                     	;# 
  2125  091C                     	;# 
  2126  091D                     	;# 
  2127  091E                     	;# 
  2128  091F                     	;# 
  2129  0E0F                     	;# 
  2130  0E10                     	;# 
  2131  0E11                     	;# 
  2132  0E12                     	;# 
  2133  0E13                     	;# 
  2134  0E14                     	;# 
  2135  0E15                     	;# 
  2136  0E16                     	;# 
  2137  0E17                     	;# 
  2138  0E18                     	;# 
  2139  0E19                     	;# 
  2140  0E1A                     	;# 
  2141  0E1B                     	;# 
  2142  0E1C                     	;# 
  2143  0E1D                     	;# 
  2144  0E1E                     	;# 
  2145  0E1F                     	;# 
  2146  0E20                     	;# 
  2147  0E21                     	;# 
  2148  0E22                     	;# 
  2149  0E24                     	;# 
  2150  0E25                     	;# 
  2151  0E28                     	;# 
  2152  0E29                     	;# 
  2153  0E2A                     	;# 
  2154  0E2B                     	;# 
  2155  0E2C                     	;# 
  2156  0E2D                     	;# 
  2157  0E2E                     	;# 
  2158  0E2F                     	;# 
  2159  0E90                     	;# 
  2160  0E91                     	;# 
  2161  0E92                     	;# 
  2162  0E94                     	;# 
  2163  0E95                     	;# 
  2164  0E9C                     	;# 
  2165  0E9D                     	;# 
  2166  0E9E                     	;# 
  2167  0E9F                     	;# 
  2168  0EA0                     	;# 
  2169  0EA1                     	;# 
  2170  0EA2                     	;# 
  2171  0EA3                     	;# 
  2172  0EA4                     	;# 
  2173  0EA5                     	;# 
  2174  0EA6                     	;# 
  2175  0EA7                     	;# 
  2176  0F0F                     	;# 
  2177  0F10                     	;# 
  2178  0F11                     	;# 
  2179  0F12                     	;# 
  2180  0F13                     	;# 
  2181  0F14                     	;# 
  2182  0F15                     	;# 
  2183  0F16                     	;# 
  2184  0F17                     	;# 
  2185  0F18                     	;# 
  2186  0F19                     	;# 
  2187  0F1A                     	;# 
  2188  0F1B                     	;# 
  2189  0F1C                     	;# 
  2190  0F1D                     	;# 
  2191  0F1E                     	;# 
  2192  0F1F                     	;# 
  2193  0F20                     	;# 
  2194  0F21                     	;# 
  2195  0F22                     	;# 
  2196  0F23                     	;# 
  2197  0F24                     	;# 
  2198  0F25                     	;# 
  2199  0F26                     	;# 
  2200  0F27                     	;# 
  2201  0F28                     	;# 
  2202  0F29                     	;# 
  2203  0F2A                     	;# 
  2204  0F2B                     	;# 
  2205  0F2C                     	;# 
  2206  0F2D                     	;# 
  2207  0F2E                     	;# 
  2208  0F2F                     	;# 
  2209  0F30                     	;# 
  2210  0F31                     	;# 
  2211  0F32                     	;# 
  2212  0F33                     	;# 
  2213  0F34                     	;# 
  2214  0F35                     	;# 
  2215  0F36                     	;# 
  2216  0F37                     	;# 
  2217  0FE4                     	;# 
  2218  0FE5                     	;# 
  2219  0FE6                     	;# 
  2220  0FE7                     	;# 
  2221  0FE8                     	;# 
  2222  0FE9                     	;# 
  2223  0FEA                     	;# 
  2224  0FEB                     	;# 
  2225  0FED                     	;# 
  2226  0FEE                     	;# 
  2227  0FEF                     	;# 
  2228                           
  2229                           	psect	eeprom_data
  2230  0000  00FF 00FF 00FF 00FF 0001 0045 0043 004F 	db	255,255,255,255,1,69,67,79	;# 
  2231  0008  0042 004F 0054 0020 004C 0043 0043 002E 	db	66,79,84,32,76,67,67,46	;# 
  2232  0010  00FF 00FF 00FF 00FF 0002 0000 0000 0000 	db	255,255,255,255,2,0,0,0	;# 
  2233  0018  0001 00FF 00FF 00FF 00FF 0002 0000 0000 	db	1,255,255,255,255,2,0,0	;# 
  2234  0020  0000 0001 00FF 00FF 00FF 00FF 0003 0003 	db	0,1,255,255,255,255,3,3	;# 
  2235  0028  0001 0000 0028 0003 0002 0000 0064 0003 	db	1,0,40,3,2,0,100,3	;# 
  2236  0030  0003 0000 0048 0003 0004 0000 00C8 0003 	db	3,0,72,3,4,0,200,3	;# 
  2237  0038  0005 0000 0000 0003 0006 0000 0052 0003 	db	5,0,0,3,6,0,82,3	;# 
  2238  0040  0007 0000 0000 0002 0008 0000 0002 0009 	db	7,0,0,2,8,0,2,9	;# 
  2239  0048  0000 0002 000A 0001 0003 000B 0000 0000 	db	0,2,10,1,3,11,0,0	;# 
  2240  0050  0003 000C 0000 0000 0003 000D 0000 00B4 	db	3,12,0,0,3,13,0,180	;# 
  2241  0058  0003 000E 0000 0000 0003 000F 0000 0000 	db	3,14,0,0,3,15,0,0	;# 
  2242  0060  0003 0010 0000 0000 0003 0011 0000 0000 	db	3,16,0,0,3,17,0,0	;# 
  2243  0068  0003 0012 0000 0000 0003 0013 0000 0000 	db	3,18,0,0,3,19,0,0	;# 
  2244  0070  00FF 00FF 00FF 00FF 00FE 0000 0000 0000 	db	255,255,255,255,254,0,0,0	;# 
  2245  0078  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  2246  0080  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  2247  0088  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  2248  0090  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  2249  0098  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  2250  00A0  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  2251  00A8  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  2252  00B0  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  2253  00B8  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  2254  00C0  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  2255  00C8  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  2256  00D0  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  2257  00D8  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  2258  00E0  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  2259  00E8  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  2260  00F0  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  2261  0000                     	;# 
  2262  0001                     	;# 
  2263  0002                     	;# 
  2264  0003                     	;# 
  2265  0004                     	;# 
  2266  0005                     	;# 
  2267  0006                     	;# 
  2268  0007                     	;# 
  2269  0008                     	;# 
  2270  0009                     	;# 
  2271  000A                     	;# 
  2272  000B                     	;# 
  2273  000C                     	;# 
  2274  000D                     	;# 
  2275  000E                     	;# 
  2276  0010                     	;# 
  2277  0011                     	;# 
  2278  0012                     	;# 
  2279  0013                     	;# 
  2280  0014                     	;# 
  2281  0015                     	;# 
  2282  0015                     	;# 
  2283  0016                     	;# 
  2284  0016                     	;# 
  2285  0017                     	;# 
  2286  0018                     	;# 
  2287  0019                     	;# 
  2288  0019                     	;# 
  2289  001A                     	;# 
  2290  001B                     	;# 
  2291  001C                     	;# 
  2292  001D                     	;# 
  2293  001E                     	;# 
  2294  001F                     	;# 
  2295  008C                     	;# 
  2296  008D                     	;# 
  2297  008E                     	;# 
  2298  0090                     	;# 
  2299  0091                     	;# 
  2300  0092                     	;# 
  2301  0093                     	;# 
  2302  0094                     	;# 
  2303  0097                     	;# 
  2304  009B                     	;# 
  2305  009B                     	;# 
  2306  009C                     	;# 
  2307  009D                     	;# 
  2308  009E                     	;# 
  2309  009F                     	;# 
  2310  010C                     	;# 
  2311  010D                     	;# 
  2312  010E                     	;# 
  2313  0111                     	;# 
  2314  0112                     	;# 
  2315  0113                     	;# 
  2316  0114                     	;# 
  2317  0115                     	;# 
  2318  0116                     	;# 
  2319  0117                     	;# 
  2320  0118                     	;# 
  2321  0119                     	;# 
  2322  018C                     	;# 
  2323  018D                     	;# 
  2324  018E                     	;# 
  2325  0197                     	;# 
  2326  0199                     	;# 
  2327  0199                     	;# 
  2328  0199                     	;# 
  2329  019A                     	;# 
  2330  019A                     	;# 
  2331  019A                     	;# 
  2332  019B                     	;# 
  2333  019B                     	;# 
  2334  019B                     	;# 
  2335  019B                     	;# 
  2336  019B                     	;# 
  2337  019C                     	;# 
  2338  019C                     	;# 
  2339  019C                     	;# 
  2340  019D                     	;# 
  2341  019D                     	;# 
  2342  019D                     	;# 
  2343  019E                     	;# 
  2344  019E                     	;# 
  2345  019E                     	;# 
  2346  019F                     	;# 
  2347  019F                     	;# 
  2348  019F                     	;# 
  2349  019F                     	;# 
  2350  019F                     	;# 
  2351  020C                     	;# 
  2352  020D                     	;# 
  2353  020E                     	;# 
  2354  0211                     	;# 
  2355  0211                     	;# 
  2356  0212                     	;# 
  2357  0212                     	;# 
  2358  0213                     	;# 
  2359  0213                     	;# 
  2360  0214                     	;# 
  2361  0214                     	;# 
  2362  0215                     	;# 
  2363  0215                     	;# 
  2364  0215                     	;# 
  2365  0215                     	;# 
  2366  0216                     	;# 
  2367  0216                     	;# 
  2368  0217                     	;# 
  2369  0217                     	;# 
  2370  0219                     	;# 
  2371  021A                     	;# 
  2372  021B                     	;# 
  2373  021C                     	;# 
  2374  021D                     	;# 
  2375  021D                     	;# 
  2376  021E                     	;# 
  2377  021F                     	;# 
  2378  028C                     	;# 
  2379  028D                     	;# 
  2380  028E                     	;# 
  2381  0291                     	;# 
  2382  0291                     	;# 
  2383  0292                     	;# 
  2384  0293                     	;# 
  2385  0294                     	;# 
  2386  0295                     	;# 
  2387  0295                     	;# 
  2388  0296                     	;# 
  2389  0297                     	;# 
  2390  0298                     	;# 
  2391  029F                     	;# 
  2392  030C                     	;# 
  2393  030D                     	;# 
  2394  030E                     	;# 
  2395  0311                     	;# 
  2396  0311                     	;# 
  2397  0312                     	;# 
  2398  0313                     	;# 
  2399  0314                     	;# 
  2400  0315                     	;# 
  2401  0315                     	;# 
  2402  0316                     	;# 
  2403  0317                     	;# 
  2404  0318                     	;# 
  2405  038C                     	;# 
  2406  038D                     	;# 
  2407  038E                     	;# 
  2408  0391                     	;# 
  2409  0392                     	;# 
  2410  0393                     	;# 
  2411  0394                     	;# 
  2412  0395                     	;# 
  2413  0396                     	;# 
  2414  0397                     	;# 
  2415  0398                     	;# 
  2416  0399                     	;# 
  2417  039A                     	;# 
  2418  039C                     	;# 
  2419  039D                     	;# 
  2420  039E                     	;# 
  2421  039F                     	;# 
  2422  0411                     	;# 
  2423  0411                     	;# 
  2424  0412                     	;# 
  2425  0413                     	;# 
  2426  0414                     	;# 
  2427  0415                     	;# 
  2428  0416                     	;# 
  2429  0417                     	;# 
  2430  0418                     	;# 
  2431  0418                     	;# 
  2432  0419                     	;# 
  2433  041A                     	;# 
  2434  041B                     	;# 
  2435  041C                     	;# 
  2436  041D                     	;# 
  2437  041E                     	;# 
  2438  041F                     	;# 
  2439  0498                     	;# 
  2440  0498                     	;# 
  2441  0499                     	;# 
  2442  049A                     	;# 
  2443  049B                     	;# 
  2444  049B                     	;# 
  2445  049C                     	;# 
  2446  049D                     	;# 
  2447  049E                     	;# 
  2448  049F                     	;# 
  2449  0617                     	;# 
  2450  0618                     	;# 
  2451  0619                     	;# 
  2452  0619                     	;# 
  2453  061A                     	;# 
  2454  061B                     	;# 
  2455  061C                     	;# 
  2456  061C                     	;# 
  2457  061F                     	;# 
  2458  0691                     	;# 
  2459  0692                     	;# 
  2460  0693                     	;# 
  2461  0694                     	;# 
  2462  0695                     	;# 
  2463  0696                     	;# 
  2464  0697                     	;# 
  2465  0698                     	;# 
  2466  0699                     	;# 
  2467  0711                     	;# 
  2468  0712                     	;# 
  2469  0713                     	;# 
  2470  0714                     	;# 
  2471  0715                     	;# 
  2472  0716                     	;# 
  2473  0717                     	;# 
  2474  0718                     	;# 
  2475  0719                     	;# 
  2476  0891                     	;# 
  2477  0891                     	;# 
  2478  0891                     	;# 
  2479  0891                     	;# 
  2480  0891                     	;# 
  2481  0891                     	;# 
  2482  0892                     	;# 
  2483  0892                     	;# 
  2484  0892                     	;# 
  2485  0893                     	;# 
  2486  0893                     	;# 
  2487  0893                     	;# 
  2488  0893                     	;# 
  2489  0893                     	;# 
  2490  0893                     	;# 
  2491  0894                     	;# 
  2492  0894                     	;# 
  2493  0894                     	;# 
  2494  0895                     	;# 
  2495  0895                     	;# 
  2496  0895                     	;# 
  2497  0896                     	;# 
  2498  0896                     	;# 
  2499  0896                     	;# 
  2500  089B                     	;# 
  2501  0911                     	;# 
  2502  0912                     	;# 
  2503  0913                     	;# 
  2504  0914                     	;# 
  2505  0915                     	;# 
  2506  0916                     	;# 
  2507  0918                     	;# 
  2508  0919                     	;# 
  2509  091A                     	;# 
  2510  091B                     	;# 
  2511  091C                     	;# 
  2512  091D                     	;# 
  2513  091E                     	;# 
  2514  091F                     	;# 
  2515  0E0F                     	;# 
  2516  0E10                     	;# 
  2517  0E11                     	;# 
  2518  0E12                     	;# 
  2519  0E13                     	;# 
  2520  0E14                     	;# 
  2521  0E15                     	;# 
  2522  0E16                     	;# 
  2523  0E17                     	;# 
  2524  0E18                     	;# 
  2525  0E19                     	;# 
  2526  0E1A                     	;# 
  2527  0E1B                     	;# 
  2528  0E1C                     	;# 
  2529  0E1D                     	;# 
  2530  0E1E                     	;# 
  2531  0E1F                     	;# 
  2532  0E20                     	;# 
  2533  0E21                     	;# 
  2534  0E22                     	;# 
  2535  0E24                     	;# 
  2536  0E25                     	;# 
  2537  0E28                     	;# 
  2538  0E29                     	;# 
  2539  0E2A                     	;# 
  2540  0E2B                     	;# 
  2541  0E2C                     	;# 
  2542  0E2D                     	;# 
  2543  0E2E                     	;# 
  2544  0E2F                     	;# 
  2545  0E90                     	;# 
  2546  0E91                     	;# 
  2547  0E92                     	;# 
  2548  0E94                     	;# 
  2549  0E95                     	;# 
  2550  0E9C                     	;# 
  2551  0E9D                     	;# 
  2552  0E9E                     	;# 
  2553  0E9F                     	;# 
  2554  0EA0                     	;# 
  2555  0EA1                     	;# 
  2556  0EA2                     	;# 
  2557  0EA3                     	;# 
  2558  0EA4                     	;# 
  2559  0EA5                     	;# 
  2560  0EA6                     	;# 
  2561  0EA7                     	;# 
  2562  0F0F                     	;# 
  2563  0F10                     	;# 
  2564  0F11                     	;# 
  2565  0F12                     	;# 
  2566  0F13                     	;# 
  2567  0F14                     	;# 
  2568  0F15                     	;# 
  2569  0F16                     	;# 
  2570  0F17                     	;# 
  2571  0F18                     	;# 
  2572  0F19                     	;# 
  2573  0F1A                     	;# 
  2574  0F1B                     	;# 
  2575  0F1C                     	;# 
  2576  0F1D                     	;# 
  2577  0F1E                     	;# 
  2578  0F1F                     	;# 
  2579  0F20                     	;# 
  2580  0F21                     	;# 
  2581  0F22                     	;# 
  2582  0F23                     	;# 
  2583  0F24                     	;# 
  2584  0F25                     	;# 
  2585  0F26                     	;# 
  2586  0F27                     	;# 
  2587  0F28                     	;# 
  2588  0F29                     	;# 
  2589  0F2A                     	;# 
  2590  0F2B                     	;# 
  2591  0F2C                     	;# 
  2592  0F2D                     	;# 
  2593  0F2E                     	;# 
  2594  0F2F                     	;# 
  2595  0F30                     	;# 
  2596  0F31                     	;# 
  2597  0F32                     	;# 
  2598  0F33                     	;# 
  2599  0F34                     	;# 
  2600  0F35                     	;# 
  2601  0F36                     	;# 
  2602  0F37                     	;# 
  2603  0FE4                     	;# 
  2604  0FE5                     	;# 
  2605  0FE6                     	;# 
  2606  0FE7                     	;# 
  2607  0FE8                     	;# 
  2608  0FE9                     	;# 
  2609  0FEA                     	;# 
  2610  0FEB                     	;# 
  2611  0FED                     	;# 
  2612  0FEE                     	;# 
  2613  0FEF                     	;# 
  2614  0000                     	;# 
  2615  0001                     	;# 
  2616  0002                     	;# 
  2617  0003                     	;# 
  2618  0004                     	;# 
  2619  0005                     	;# 
  2620  0006                     	;# 
  2621  0007                     	;# 
  2622  0008                     	;# 
  2623  0009                     	;# 
  2624  000A                     	;# 
  2625  000B                     	;# 
  2626  000C                     	;# 
  2627  000D                     	;# 
  2628  000E                     	;# 
  2629  0010                     	;# 
  2630  0011                     	;# 
  2631  0012                     	;# 
  2632  0013                     	;# 
  2633  0014                     	;# 
  2634  0015                     	;# 
  2635  0015                     	;# 
  2636  0016                     	;# 
  2637  0016                     	;# 
  2638  0017                     	;# 
  2639  0018                     	;# 
  2640  0019                     	;# 
  2641  0019                     	;# 
  2642  001A                     	;# 
  2643  001B                     	;# 
  2644  001C                     	;# 
  2645  001D                     	;# 
  2646  001E                     	;# 
  2647  001F                     	;# 
  2648  008C                     	;# 
  2649  008D                     	;# 
  2650  008E                     	;# 
  2651  0090                     	;# 
  2652  0091                     	;# 
  2653  0092                     	;# 
  2654  0093                     	;# 
  2655  0094                     	;# 
  2656  0097                     	;# 
  2657  009B                     	;# 
  2658  009B                     	;# 
  2659  009C                     	;# 
  2660  009D                     	;# 
  2661  009E                     	;# 
  2662  009F                     	;# 
  2663  010C                     	;# 
  2664  010D                     	;# 
  2665  010E                     	;# 
  2666  0111                     	;# 
  2667  0112                     	;# 
  2668  0113                     	;# 
  2669  0114                     	;# 
  2670  0115                     	;# 
  2671  0116                     	;# 
  2672  0117                     	;# 
  2673  0118                     	;# 
  2674  0119                     	;# 
  2675  018C                     	;# 
  2676  018D                     	;# 
  2677  018E                     	;# 
  2678  0197                     	;# 
  2679  0199                     	;# 
  2680  0199                     	;# 
  2681  0199                     	;# 
  2682  019A                     	;# 
  2683  019A                     	;# 
  2684  019A                     	;# 
  2685  019B                     	;# 
  2686  019B                     	;# 
  2687  019B                     	;# 
  2688  019B                     	;# 
  2689  019B                     	;# 
  2690  019C                     	;# 
  2691  019C                     	;# 
  2692  019C                     	;# 
  2693  019D                     	;# 
  2694  019D                     	;# 
  2695  019D                     	;# 
  2696  019E                     	;# 
  2697  019E                     	;# 
  2698  019E                     	;# 
  2699  019F                     	;# 
  2700  019F                     	;# 
  2701  019F                     	;# 
  2702  019F                     	;# 
  2703  019F                     	;# 
  2704  020C                     	;# 
  2705  020D                     	;# 
  2706  020E                     	;# 
  2707  0211                     	;# 
  2708  0211                     	;# 
  2709  0212                     	;# 
  2710  0212                     	;# 
  2711  0213                     	;# 
  2712  0213                     	;# 
  2713  0214                     	;# 
  2714  0214                     	;# 
  2715  0215                     	;# 
  2716  0215                     	;# 
  2717  0215                     	;# 
  2718  0215                     	;# 
  2719  0216                     	;# 
  2720  0216                     	;# 
  2721  0217                     	;# 
  2722  0217                     	;# 
  2723  0219                     	;# 
  2724  021A                     	;# 
  2725  021B                     	;# 
  2726  021C                     	;# 
  2727  021D                     	;# 
  2728  021D                     	;# 
  2729  021E                     	;# 
  2730  021F                     	;# 
  2731  028C                     	;# 
  2732  028D                     	;# 
  2733  028E                     	;# 
  2734  0291                     	;# 
  2735  0291                     	;# 
  2736  0292                     	;# 
  2737  0293                     	;# 
  2738  0294                     	;# 
  2739  0295                     	;# 
  2740  0295                     	;# 
  2741  0296                     	;# 
  2742  0297                     	;# 
  2743  0298                     	;# 
  2744  029F                     	;# 
  2745  030C                     	;# 
  2746  030D                     	;# 
  2747  030E                     	;# 
  2748  0311                     	;# 
  2749  0311                     	;# 
  2750  0312                     	;# 
  2751  0313                     	;# 
  2752  0314                     	;# 
  2753  0315                     	;# 
  2754  0315                     	;# 
  2755  0316                     	;# 
  2756  0317                     	;# 
  2757  0318                     	;# 
  2758  038C                     	;# 
  2759  038D                     	;# 
  2760  038E                     	;# 
  2761  0391                     	;# 
  2762  0392                     	;# 
  2763  0393                     	;# 
  2764  0394                     	;# 
  2765  0395                     	;# 
  2766  0396                     	;# 
  2767  0397                     	;# 
  2768  0398                     	;# 
  2769  0399                     	;# 
  2770  039A                     	;# 
  2771  039C                     	;# 
  2772  039D                     	;# 
  2773  039E                     	;# 
  2774  039F                     	;# 
  2775  0411                     	;# 
  2776  0411                     	;# 
  2777  0412                     	;# 
  2778  0413                     	;# 
  2779  0414                     	;# 
  2780  0415                     	;# 
  2781  0416                     	;# 
  2782  0417                     	;# 
  2783  0418                     	;# 
  2784  0418                     	;# 
  2785  0419                     	;# 
  2786  041A                     	;# 
  2787  041B                     	;# 
  2788  041C                     	;# 
  2789  041D                     	;# 
  2790  041E                     	;# 
  2791  041F                     	;# 
  2792  0498                     	;# 
  2793  0498                     	;# 
  2794  0499                     	;# 
  2795  049A                     	;# 
  2796  049B                     	;# 
  2797  049B                     	;# 
  2798  049C                     	;# 
  2799  049D                     	;# 
  2800  049E                     	;# 
  2801  049F                     	;# 
  2802  0617                     	;# 
  2803  0618                     	;# 
  2804  0619                     	;# 
  2805  0619                     	;# 
  2806  061A                     	;# 
  2807  061B                     	;# 
  2808  061C                     	;# 
  2809  061C                     	;# 
  2810  061F                     	;# 
  2811  0691                     	;# 
  2812  0692                     	;# 
  2813  0693                     	;# 
  2814  0694                     	;# 
  2815  0695                     	;# 
  2816  0696                     	;# 
  2817  0697                     	;# 
  2818  0698                     	;# 
  2819  0699                     	;# 
  2820  0711                     	;# 
  2821  0712                     	;# 
  2822  0713                     	;# 
  2823  0714                     	;# 
  2824  0715                     	;# 
  2825  0716                     	;# 
  2826  0717                     	;# 
  2827  0718                     	;# 
  2828  0719                     	;# 
  2829  0891                     	;# 
  2830  0891                     	;# 
  2831  0891                     	;# 
  2832  0891                     	;# 
  2833  0891                     	;# 
  2834  0891                     	;# 
  2835  0892                     	;# 
  2836  0892                     	;# 
  2837  0892                     	;# 
  2838  0893                     	;# 
  2839  0893                     	;# 
  2840  0893                     	;# 
  2841  0893                     	;# 
  2842  0893                     	;# 
  2843  0893                     	;# 
  2844  0894                     	;# 
  2845  0894                     	;# 
  2846  0894                     	;# 
  2847  0895                     	;# 
  2848  0895                     	;# 
  2849  0895                     	;# 
  2850  0896                     	;# 
  2851  0896                     	;# 
  2852  0896                     	;# 
  2853  089B                     	;# 
  2854  0911                     	;# 
  2855  0912                     	;# 
  2856  0913                     	;# 
  2857  0914                     	;# 
  2858  0915                     	;# 
  2859  0916                     	;# 
  2860  0918                     	;# 
  2861  0919                     	;# 
  2862  091A                     	;# 
  2863  091B                     	;# 
  2864  091C                     	;# 
  2865  091D                     	;# 
  2866  091E                     	;# 
  2867  091F                     	;# 
  2868  0E0F                     	;# 
  2869  0E10                     	;# 
  2870  0E11                     	;# 
  2871  0E12                     	;# 
  2872  0E13                     	;# 
  2873  0E14                     	;# 
  2874  0E15                     	;# 
  2875  0E16                     	;# 
  2876  0E17                     	;# 
  2877  0E18                     	;# 
  2878  0E19                     	;# 
  2879  0E1A                     	;# 
  2880  0E1B                     	;# 
  2881  0E1C                     	;# 
  2882  0E1D                     	;# 
  2883  0E1E                     	;# 
  2884  0E1F                     	;# 
  2885  0E20                     	;# 
  2886  0E21                     	;# 
  2887  0E22                     	;# 
  2888  0E24                     	;# 
  2889  0E25                     	;# 
  2890  0E28                     	;# 
  2891  0E29                     	;# 
  2892  0E2A                     	;# 
  2893  0E2B                     	;# 
  2894  0E2C                     	;# 
  2895  0E2D                     	;# 
  2896  0E2E                     	;# 
  2897  0E2F                     	;# 
  2898  0E90                     	;# 
  2899  0E91                     	;# 
  2900  0E92                     	;# 
  2901  0E94                     	;# 
  2902  0E95                     	;# 
  2903  0E9C                     	;# 
  2904  0E9D                     	;# 
  2905  0E9E                     	;# 
  2906  0E9F                     	;# 
  2907  0EA0                     	;# 
  2908  0EA1                     	;# 
  2909  0EA2                     	;# 
  2910  0EA3                     	;# 
  2911  0EA4                     	;# 
  2912  0EA5                     	;# 
  2913  0EA6                     	;# 
  2914  0EA7                     	;# 
  2915  0F0F                     	;# 
  2916  0F10                     	;# 
  2917  0F11                     	;# 
  2918  0F12                     	;# 
  2919  0F13                     	;# 
  2920  0F14                     	;# 
  2921  0F15                     	;# 
  2922  0F16                     	;# 
  2923  0F17                     	;# 
  2924  0F18                     	;# 
  2925  0F19                     	;# 
  2926  0F1A                     	;# 
  2927  0F1B                     	;# 
  2928  0F1C                     	;# 
  2929  0F1D                     	;# 
  2930  0F1E                     	;# 
  2931  0F1F                     	;# 
  2932  0F20                     	;# 
  2933  0F21                     	;# 
  2934  0F22                     	;# 
  2935  0F23                     	;# 
  2936  0F24                     	;# 
  2937  0F25                     	;# 
  2938  0F26                     	;# 
  2939  0F27                     	;# 
  2940  0F28                     	;# 
  2941  0F29                     	;# 
  2942  0F2A                     	;# 
  2943  0F2B                     	;# 
  2944  0F2C                     	;# 
  2945  0F2D                     	;# 
  2946  0F2E                     	;# 
  2947  0F2F                     	;# 
  2948  0F30                     	;# 
  2949  0F31                     	;# 
  2950  0F32                     	;# 
  2951  0F33                     	;# 
  2952  0F34                     	;# 
  2953  0F35                     	;# 
  2954  0F36                     	;# 
  2955  0F37                     	;# 
  2956  0FE4                     	;# 
  2957  0FE5                     	;# 
  2958  0FE6                     	;# 
  2959  0FE7                     	;# 
  2960  0FE8                     	;# 
  2961  0FE9                     	;# 
  2962  0FEA                     	;# 
  2963  0FEB                     	;# 
  2964  0FED                     	;# 
  2965  0FEE                     	;# 
  2966  0FEF                     	;# 
  2967  0000                     	;# 
  2968  0001                     	;# 
  2969  0002                     	;# 
  2970  0003                     	;# 
  2971  0004                     	;# 
  2972  0005                     	;# 
  2973  0006                     	;# 
  2974  0007                     	;# 
  2975  0008                     	;# 
  2976  0009                     	;# 
  2977  000A                     	;# 
  2978  000B                     	;# 
  2979  000C                     	;# 
  2980  000D                     	;# 
  2981  000E                     	;# 
  2982  0010                     	;# 
  2983  0011                     	;# 
  2984  0012                     	;# 
  2985  0013                     	;# 
  2986  0014                     	;# 
  2987  0015                     	;# 
  2988  0015                     	;# 
  2989  0016                     	;# 
  2990  0016                     	;# 
  2991  0017                     	;# 
  2992  0018                     	;# 
  2993  0019                     	;# 
  2994  0019                     	;# 
  2995  001A                     	;# 
  2996  001B                     	;# 
  2997  001C                     	;# 
  2998  001D                     	;# 
  2999  001E                     	;# 
  3000  001F                     	;# 
  3001  008C                     	;# 
  3002  008D                     	;# 
  3003  008E                     	;# 
  3004  0090                     	;# 
  3005  0091                     	;# 
  3006  0092                     	;# 
  3007  0093                     	;# 
  3008  0094                     	;# 
  3009  0097                     	;# 
  3010  009B                     	;# 
  3011  009B                     	;# 
  3012  009C                     	;# 
  3013  009D                     	;# 
  3014  009E                     	;# 
  3015  009F                     	;# 
  3016  010C                     	;# 
  3017  010D                     	;# 
  3018  010E                     	;# 
  3019  0111                     	;# 
  3020  0112                     	;# 
  3021  0113                     	;# 
  3022  0114                     	;# 
  3023  0115                     	;# 
  3024  0116                     	;# 
  3025  0117                     	;# 
  3026  0118                     	;# 
  3027  0119                     	;# 
  3028  018C                     	;# 
  3029  018D                     	;# 
  3030  018E                     	;# 
  3031  0197                     	;# 
  3032  0199                     	;# 
  3033  0199                     	;# 
  3034  0199                     	;# 
  3035  019A                     	;# 
  3036  019A                     	;# 
  3037  019A                     	;# 
  3038  019B                     	;# 
  3039  019B                     	;# 
  3040  019B                     	;# 
  3041  019B                     	;# 
  3042  019B                     	;# 
  3043  019C                     	;# 
  3044  019C                     	;# 
  3045  019C                     	;# 
  3046  019D                     	;# 
  3047  019D                     	;# 
  3048  019D                     	;# 
  3049  019E                     	;# 
  3050  019E                     	;# 
  3051  019E                     	;# 
  3052  019F                     	;# 
  3053  019F                     	;# 
  3054  019F                     	;# 
  3055  019F                     	;# 
  3056  019F                     	;# 
  3057  020C                     	;# 
  3058  020D                     	;# 
  3059  020E                     	;# 
  3060  0211                     	;# 
  3061  0211                     	;# 
  3062  0212                     	;# 
  3063  0212                     	;# 
  3064  0213                     	;# 
  3065  0213                     	;# 
  3066  0214                     	;# 
  3067  0214                     	;# 
  3068  0215                     	;# 
  3069  0215                     	;# 
  3070  0215                     	;# 
  3071  0215                     	;# 
  3072  0216                     	;# 
  3073  0216                     	;# 
  3074  0217                     	;# 
  3075  0217                     	;# 
  3076  0219                     	;# 
  3077  021A                     	;# 
  3078  021B                     	;# 
  3079  021C                     	;# 
  3080  021D                     	;# 
  3081  021D                     	;# 
  3082  021E                     	;# 
  3083  021F                     	;# 
  3084  028C                     	;# 
  3085  028D                     	;# 
  3086  028E                     	;# 
  3087  0291                     	;# 
  3088  0291                     	;# 
  3089  0292                     	;# 
  3090  0293                     	;# 
  3091  0294                     	;# 
  3092  0295                     	;# 
  3093  0295                     	;# 
  3094  0296                     	;# 
  3095  0297                     	;# 
  3096  0298                     	;# 
  3097  029F                     	;# 
  3098  030C                     	;# 
  3099  030D                     	;# 
  3100  030E                     	;# 
  3101  0311                     	;# 
  3102  0311                     	;# 
  3103  0312                     	;# 
  3104  0313                     	;# 
  3105  0314                     	;# 
  3106  0315                     	;# 
  3107  0315                     	;# 
  3108  0316                     	;# 
  3109  0317                     	;# 
  3110  0318                     	;# 
  3111  038C                     	;# 
  3112  038D                     	;# 
  3113  038E                     	;# 
  3114  0391                     	;# 
  3115  0392                     	;# 
  3116  0393                     	;# 
  3117  0394                     	;# 
  3118  0395                     	;# 
  3119  0396                     	;# 
  3120  0397                     	;# 
  3121  0398                     	;# 
  3122  0399                     	;# 
  3123  039A                     	;# 
  3124  039C                     	;# 
  3125  039D                     	;# 
  3126  039E                     	;# 
  3127  039F                     	;# 
  3128  0411                     	;# 
  3129  0411                     	;# 
  3130  0412                     	;# 
  3131  0413                     	;# 
  3132  0414                     	;# 
  3133  0415                     	;# 
  3134  0416                     	;# 
  3135  0417                     	;# 
  3136  0418                     	;# 
  3137  0418                     	;# 
  3138  0419                     	;# 
  3139  041A                     	;# 
  3140  041B                     	;# 
  3141  041C                     	;# 
  3142  041D                     	;# 
  3143  041E                     	;# 
  3144  041F                     	;# 
  3145  0498                     	;# 
  3146  0498                     	;# 
  3147  0499                     	;# 
  3148  049A                     	;# 
  3149  049B                     	;# 
  3150  049B                     	;# 
  3151  049C                     	;# 
  3152  049D                     	;# 
  3153  049E                     	;# 
  3154  049F                     	;# 
  3155  0617                     	;# 
  3156  0618                     	;# 
  3157  0619                     	;# 
  3158  0619                     	;# 
  3159  061A                     	;# 
  3160  061B                     	;# 
  3161  061C                     	;# 
  3162  061C                     	;# 
  3163  061F                     	;# 
  3164  0691                     	;# 
  3165  0692                     	;# 
  3166  0693                     	;# 
  3167  0694                     	;# 
  3168  0695                     	;# 
  3169  0696                     	;# 
  3170  0697                     	;# 
  3171  0698                     	;# 
  3172  0699                     	;# 
  3173  0711                     	;# 
  3174  0712                     	;# 
  3175  0713                     	;# 
  3176  0714                     	;# 
  3177  0715                     	;# 
  3178  0716                     	;# 
  3179  0717                     	;# 
  3180  0718                     	;# 
  3181  0719                     	;# 
  3182  0891                     	;# 
  3183  0891                     	;# 
  3184  0891                     	;# 
  3185  0891                     	;# 
  3186  0891                     	;# 
  3187  0891                     	;# 
  3188  0892                     	;# 
  3189  0892                     	;# 
  3190  0892                     	;# 
  3191  0893                     	;# 
  3192  0893                     	;# 
  3193  0893                     	;# 
  3194  0893                     	;# 
  3195  0893                     	;# 
  3196  0893                     	;# 
  3197  0894                     	;# 
  3198  0894                     	;# 
  3199  0894                     	;# 
  3200  0895                     	;# 
  3201  0895                     	;# 
  3202  0895                     	;# 
  3203  0896                     	;# 
  3204  0896                     	;# 
  3205  0896                     	;# 
  3206  089B                     	;# 
  3207  0911                     	;# 
  3208  0912                     	;# 
  3209  0913                     	;# 
  3210  0914                     	;# 
  3211  0915                     	;# 
  3212  0916                     	;# 
  3213  0918                     	;# 
  3214  0919                     	;# 
  3215  091A                     	;# 
  3216  091B                     	;# 
  3217  091C                     	;# 
  3218  091D                     	;# 
  3219  091E                     	;# 
  3220  091F                     	;# 
  3221  0E0F                     	;# 
  3222  0E10                     	;# 
  3223  0E11                     	;# 
  3224  0E12                     	;# 
  3225  0E13                     	;# 
  3226  0E14                     	;# 
  3227  0E15                     	;# 
  3228  0E16                     	;# 
  3229  0E17                     	;# 
  3230  0E18                     	;# 
  3231  0E19                     	;# 
  3232  0E1A                     	;# 
  3233  0E1B                     	;# 
  3234  0E1C                     	;# 
  3235  0E1D                     	;# 
  3236  0E1E                     	;# 
  3237  0E1F                     	;# 
  3238  0E20                     	;# 
  3239  0E21                     	;# 
  3240  0E22                     	;# 
  3241  0E24                     	;# 
  3242  0E25                     	;# 
  3243  0E28                     	;# 
  3244  0E29                     	;# 
  3245  0E2A                     	;# 
  3246  0E2B                     	;# 
  3247  0E2C                     	;# 
  3248  0E2D                     	;# 
  3249  0E2E                     	;# 
  3250  0E2F                     	;# 
  3251  0E90                     	;# 
  3252  0E91                     	;# 
  3253  0E92                     	;# 
  3254  0E94                     	;# 
  3255  0E95                     	;# 
  3256  0E9C                     	;# 
  3257  0E9D                     	;# 
  3258  0E9E                     	;# 
  3259  0E9F                     	;# 
  3260  0EA0                     	;# 
  3261  0EA1                     	;# 
  3262  0EA2                     	;# 
  3263  0EA3                     	;# 
  3264  0EA4                     	;# 
  3265  0EA5                     	;# 
  3266  0EA6                     	;# 
  3267  0EA7                     	;# 
  3268  0F0F                     	;# 
  3269  0F10                     	;# 
  3270  0F11                     	;# 
  3271  0F12                     	;# 
  3272  0F13                     	;# 
  3273  0F14                     	;# 
  3274  0F15                     	;# 
  3275  0F16                     	;# 
  3276  0F17                     	;# 
  3277  0F18                     	;# 
  3278  0F19                     	;# 
  3279  0F1A                     	;# 
  3280  0F1B                     	;# 
  3281  0F1C                     	;# 
  3282  0F1D                     	;# 
  3283  0F1E                     	;# 
  3284  0F1F                     	;# 
  3285  0F20                     	;# 
  3286  0F21                     	;# 
  3287  0F22                     	;# 
  3288  0F23                     	;# 
  3289  0F24                     	;# 
  3290  0F25                     	;# 
  3291  0F26                     	;# 
  3292  0F27                     	;# 
  3293  0F28                     	;# 
  3294  0F29                     	;# 
  3295  0F2A                     	;# 
  3296  0F2B                     	;# 
  3297  0F2C                     	;# 
  3298  0F2D                     	;# 
  3299  0F2E                     	;# 
  3300  0F2F                     	;# 
  3301  0F30                     	;# 
  3302  0F31                     	;# 
  3303  0F32                     	;# 
  3304  0F33                     	;# 
  3305  0F34                     	;# 
  3306  0F35                     	;# 
  3307  0F36                     	;# 
  3308  0F37                     	;# 
  3309  0FE4                     	;# 
  3310  0FE5                     	;# 
  3311  0FE6                     	;# 
  3312  0FE7                     	;# 
  3313  0FE8                     	;# 
  3314  0FE9                     	;# 
  3315  0FEA                     	;# 
  3316  0FEB                     	;# 
  3317  0FED                     	;# 
  3318  0FEE                     	;# 
  3319  0FEF                     	;# 
  3320  0000                     	;# 
  3321  0001                     	;# 
  3322  0002                     	;# 
  3323  0003                     	;# 
  3324  0004                     	;# 
  3325  0005                     	;# 
  3326  0006                     	;# 
  3327  0007                     	;# 
  3328  0008                     	;# 
  3329  0009                     	;# 
  3330  000A                     	;# 
  3331  000B                     	;# 
  3332  000C                     	;# 
  3333  000D                     	;# 
  3334  000E                     	;# 
  3335  0010                     	;# 
  3336  0011                     	;# 
  3337  0012                     	;# 
  3338  0013                     	;# 
  3339  0014                     	;# 
  3340  0015                     	;# 
  3341  0015                     	;# 
  3342  0016                     	;# 
  3343  0016                     	;# 
  3344  0017                     	;# 
  3345  0018                     	;# 
  3346  0019                     	;# 
  3347  0019                     	;# 
  3348  001A                     	;# 
  3349  001B                     	;# 
  3350  001C                     	;# 
  3351  001D                     	;# 
  3352  001E                     	;# 
  3353  001F                     	;# 
  3354  008C                     	;# 
  3355  008D                     	;# 
  3356  008E                     	;# 
  3357  0090                     	;# 
  3358  0091                     	;# 
  3359  0092                     	;# 
  3360  0093                     	;# 
  3361  0094                     	;# 
  3362  0097                     	;# 
  3363  009B                     	;# 
  3364  009B                     	;# 
  3365  009C                     	;# 
  3366  009D                     	;# 
  3367  009E                     	;# 
  3368  009F                     	;# 
  3369  010C                     	;# 
  3370  010D                     	;# 
  3371  010E                     	;# 
  3372  0111                     	;# 
  3373  0112                     	;# 
  3374  0113                     	;# 
  3375  0114                     	;# 
  3376  0115                     	;# 
  3377  0116                     	;# 
  3378  0117                     	;# 
  3379  0118                     	;# 
  3380  0119                     	;# 
  3381  018C                     	;# 
  3382  018D                     	;# 
  3383  018E                     	;# 
  3384  0197                     	;# 
  3385  0199                     	;# 
  3386  0199                     	;# 
  3387  0199                     	;# 
  3388  019A                     	;# 
  3389  019A                     	;# 
  3390  019A                     	;# 
  3391  019B                     	;# 
  3392  019B                     	;# 
  3393  019B                     	;# 
  3394  019B                     	;# 
  3395  019B                     	;# 
  3396  019C                     	;# 
  3397  019C                     	;# 
  3398  019C                     	;# 
  3399  019D                     	;# 
  3400  019D                     	;# 
  3401  019D                     	;# 
  3402  019E                     	;# 
  3403  019E                     	;# 
  3404  019E                     	;# 
  3405  019F                     	;# 
  3406  019F                     	;# 
  3407  019F                     	;# 
  3408  019F                     	;# 
  3409  019F                     	;# 
  3410  020C                     	;# 
  3411  020D                     	;# 
  3412  020E                     	;# 
  3413  0211                     	;# 
  3414  0211                     	;# 
  3415  0212                     	;# 
  3416  0212                     	;# 
  3417  0213                     	;# 
  3418  0213                     	;# 
  3419  0214                     	;# 
  3420  0214                     	;# 
  3421  0215                     	;# 
  3422  0215                     	;# 
  3423  0215                     	;# 
  3424  0215                     	;# 
  3425  0216                     	;# 
  3426  0216                     	;# 
  3427  0217                     	;# 
  3428  0217                     	;# 
  3429  0219                     	;# 
  3430  021A                     	;# 
  3431  021B                     	;# 
  3432  021C                     	;# 
  3433  021D                     	;# 
  3434  021D                     	;# 
  3435  021E                     	;# 
  3436  021F                     	;# 
  3437  028C                     	;# 
  3438  028D                     	;# 
  3439  028E                     	;# 
  3440  0291                     	;# 
  3441  0291                     	;# 
  3442  0292                     	;# 
  3443  0293                     	;# 
  3444  0294                     	;# 
  3445  0295                     	;# 
  3446  0295                     	;# 
  3447  0296                     	;# 
  3448  0297                     	;# 
  3449  0298                     	;# 
  3450  029F                     	;# 
  3451  030C                     	;# 
  3452  030D                     	;# 
  3453  030E                     	;# 
  3454  0311                     	;# 
  3455  0311                     	;# 
  3456  0312                     	;# 
  3457  0313                     	;# 
  3458  0314                     	;# 
  3459  0315                     	;# 
  3460  0315                     	;# 
  3461  0316                     	;# 
  3462  0317                     	;# 
  3463  0318                     	;# 
  3464  038C                     	;# 
  3465  038D                     	;# 
  3466  038E                     	;# 
  3467  0391                     	;# 
  3468  0392                     	;# 
  3469  0393                     	;# 
  3470  0394                     	;# 
  3471  0395                     	;# 
  3472  0396                     	;# 
  3473  0397                     	;# 
  3474  0398                     	;# 
  3475  0399                     	;# 
  3476  039A                     	;# 
  3477  039C                     	;# 
  3478  039D                     	;# 
  3479  039E                     	;# 
  3480  039F                     	;# 
  3481  0411                     	;# 
  3482  0411                     	;# 
  3483  0412                     	;# 
  3484  0413                     	;# 
  3485  0414                     	;# 
  3486  0415                     	;# 
  3487  0416                     	;# 
  3488  0417                     	;# 
  3489  0418                     	;# 
  3490  0418                     	;# 
  3491  0419                     	;# 
  3492  041A                     	;# 
  3493  041B                     	;# 
  3494  041C                     	;# 
  3495  041D                     	;# 
  3496  041E                     	;# 
  3497  041F                     	;# 
  3498  0498                     	;# 
  3499  0498                     	;# 
  3500  0499                     	;# 
  3501  049A                     	;# 
  3502  049B                     	;# 
  3503  049B                     	;# 
  3504  049C                     	;# 
  3505  049D                     	;# 
  3506  049E                     	;# 
  3507  049F                     	;# 
  3508  0617                     	;# 
  3509  0618                     	;# 
  3510  0619                     	;# 
  3511  0619                     	;# 
  3512  061A                     	;# 
  3513  061B                     	;# 
  3514  061C                     	;# 
  3515  061C                     	;# 
  3516  061F                     	;# 
  3517  0691                     	;# 
  3518  0692                     	;# 
  3519  0693                     	;# 
  3520  0694                     	;# 
  3521  0695                     	;# 
  3522  0696                     	;# 
  3523  0697                     	;# 
  3524  0698                     	;# 
  3525  0699                     	;# 
  3526  0711                     	;# 
  3527  0712                     	;# 
  3528  0713                     	;# 
  3529  0714                     	;# 
  3530  0715                     	;# 
  3531  0716                     	;# 
  3532  0717                     	;# 
  3533  0718                     	;# 
  3534  0719                     	;# 
  3535  0891                     	;# 
  3536  0891                     	;# 
  3537  0891                     	;# 
  3538  0891                     	;# 
  3539  0891                     	;# 
  3540  0891                     	;# 
  3541  0892                     	;# 
  3542  0892                     	;# 
  3543  0892                     	;# 
  3544  0893                     	;# 
  3545  0893                     	;# 
  3546  0893                     	;# 
  3547  0893                     	;# 
  3548  0893                     	;# 
  3549  0893                     	;# 
  3550  0894                     	;# 
  3551  0894                     	;# 
  3552  0894                     	;# 
  3553  0895                     	;# 
  3554  0895                     	;# 
  3555  0895                     	;# 
  3556  0896                     	;# 
  3557  0896                     	;# 
  3558  0896                     	;# 
  3559  089B                     	;# 
  3560  0911                     	;# 
  3561  0912                     	;# 
  3562  0913                     	;# 
  3563  0914                     	;# 
  3564  0915                     	;# 
  3565  0916                     	;# 
  3566  0918                     	;# 
  3567  0919                     	;# 
  3568  091A                     	;# 
  3569  091B                     	;# 
  3570  091C                     	;# 
  3571  091D                     	;# 
  3572  091E                     	;# 
  3573  091F                     	;# 
  3574  0E0F                     	;# 
  3575  0E10                     	;# 
  3576  0E11                     	;# 
  3577  0E12                     	;# 
  3578  0E13                     	;# 
  3579  0E14                     	;# 
  3580  0E15                     	;# 
  3581  0E16                     	;# 
  3582  0E17                     	;# 
  3583  0E18                     	;# 
  3584  0E19                     	;# 
  3585  0E1A                     	;# 
  3586  0E1B                     	;# 
  3587  0E1C                     	;# 
  3588  0E1D                     	;# 
  3589  0E1E                     	;# 
  3590  0E1F                     	;# 
  3591  0E20                     	;# 
  3592  0E21                     	;# 
  3593  0E22                     	;# 
  3594  0E24                     	;# 
  3595  0E25                     	;# 
  3596  0E28                     	;# 
  3597  0E29                     	;# 
  3598  0E2A                     	;# 
  3599  0E2B                     	;# 
  3600  0E2C                     	;# 
  3601  0E2D                     	;# 
  3602  0E2E                     	;# 
  3603  0E2F                     	;# 
  3604  0E90                     	;# 
  3605  0E91                     	;# 
  3606  0E92                     	;# 
  3607  0E94                     	;# 
  3608  0E95                     	;# 
  3609  0E9C                     	;# 
  3610  0E9D                     	;# 
  3611  0E9E                     	;# 
  3612  0E9F                     	;# 
  3613  0EA0                     	;# 
  3614  0EA1                     	;# 
  3615  0EA2                     	;# 
  3616  0EA3                     	;# 
  3617  0EA4                     	;# 
  3618  0EA5                     	;# 
  3619  0EA6                     	;# 
  3620  0EA7                     	;# 
  3621  0F0F                     	;# 
  3622  0F10                     	;# 
  3623  0F11                     	;# 
  3624  0F12                     	;# 
  3625  0F13                     	;# 
  3626  0F14                     	;# 
  3627  0F15                     	;# 
  3628  0F16                     	;# 
  3629  0F17                     	;# 
  3630  0F18                     	;# 
  3631  0F19                     	;# 
  3632  0F1A                     	;# 
  3633  0F1B                     	;# 
  3634  0F1C                     	;# 
  3635  0F1D                     	;# 
  3636  0F1E                     	;# 
  3637  0F1F                     	;# 
  3638  0F20                     	;# 
  3639  0F21                     	;# 
  3640  0F22                     	;# 
  3641  0F23                     	;# 
  3642  0F24                     	;# 
  3643  0F25                     	;# 
  3644  0F26                     	;# 
  3645  0F27                     	;# 
  3646  0F28                     	;# 
  3647  0F29                     	;# 
  3648  0F2A                     	;# 
  3649  0F2B                     	;# 
  3650  0F2C                     	;# 
  3651  0F2D                     	;# 
  3652  0F2E                     	;# 
  3653  0F2F                     	;# 
  3654  0F30                     	;# 
  3655  0F31                     	;# 
  3656  0F32                     	;# 
  3657  0F33                     	;# 
  3658  0F34                     	;# 
  3659  0F35                     	;# 
  3660  0F36                     	;# 
  3661  0F37                     	;# 
  3662  0FE4                     	;# 
  3663  0FE5                     	;# 
  3664  0FE6                     	;# 
  3665  0FE7                     	;# 
  3666  0FE8                     	;# 
  3667  0FE9                     	;# 
  3668  0FEA                     	;# 
  3669  0FEB                     	;# 
  3670  0FED                     	;# 
  3671  0FEE                     	;# 
  3672  0FEF                     	;# 
  3673  0000                     	;# 
  3674  0001                     	;# 
  3675  0002                     	;# 
  3676  0003                     	;# 
  3677  0004                     	;# 
  3678  0005                     	;# 
  3679  0006                     	;# 
  3680  0007                     	;# 
  3681  0008                     	;# 
  3682  0009                     	;# 
  3683  000A                     	;# 
  3684  000B                     	;# 
  3685  000C                     	;# 
  3686  000D                     	;# 
  3687  000E                     	;# 
  3688  0010                     	;# 
  3689  0011                     	;# 
  3690  0012                     	;# 
  3691  0013                     	;# 
  3692  0014                     	;# 
  3693  0015                     	;# 
  3694  0015                     	;# 
  3695  0016                     	;# 
  3696  0016                     	;# 
  3697  0017                     	;# 
  3698  0018                     	;# 
  3699  0019                     	;# 
  3700  0019                     	;# 
  3701  001A                     	;# 
  3702  001B                     	;# 
  3703  001C                     	;# 
  3704  001D                     	;# 
  3705  001E                     	;# 
  3706  001F                     	;# 
  3707  008C                     	;# 
  3708  008D                     	;# 
  3709  008E                     	;# 
  3710  0090                     	;# 
  3711  0091                     	;# 
  3712  0092                     	;# 
  3713  0093                     	;# 
  3714  0094                     	;# 
  3715  0097                     	;# 
  3716  009B                     	;# 
  3717  009B                     	;# 
  3718  009C                     	;# 
  3719  009D                     	;# 
  3720  009E                     	;# 
  3721  009F                     	;# 
  3722  010C                     	;# 
  3723  010D                     	;# 
  3724  010E                     	;# 
  3725  0111                     	;# 
  3726  0112                     	;# 
  3727  0113                     	;# 
  3728  0114                     	;# 
  3729  0115                     	;# 
  3730  0116                     	;# 
  3731  0117                     	;# 
  3732  0118                     	;# 
  3733  0119                     	;# 
  3734  018C                     	;# 
  3735  018D                     	;# 
  3736  018E                     	;# 
  3737  0197                     	;# 
  3738  0199                     	;# 
  3739  0199                     	;# 
  3740  0199                     	;# 
  3741  019A                     	;# 
  3742  019A                     	;# 
  3743  019A                     	;# 
  3744  019B                     	;# 
  3745  019B                     	;# 
  3746  019B                     	;# 
  3747  019B                     	;# 
  3748  019B                     	;# 
  3749  019C                     	;# 
  3750  019C                     	;# 
  3751  019C                     	;# 
  3752  019D                     	;# 
  3753  019D                     	;# 
  3754  019D                     	;# 
  3755  019E                     	;# 
  3756  019E                     	;# 
  3757  019E                     	;# 
  3758  019F                     	;# 
  3759  019F                     	;# 
  3760  019F                     	;# 
  3761  019F                     	;# 
  3762  019F                     	;# 
  3763  020C                     	;# 
  3764  020D                     	;# 
  3765  020E                     	;# 
  3766  0211                     	;# 
  3767  0211                     	;# 
  3768  0212                     	;# 
  3769  0212                     	;# 
  3770  0213                     	;# 
  3771  0213                     	;# 
  3772  0214                     	;# 
  3773  0214                     	;# 
  3774  0215                     	;# 
  3775  0215                     	;# 
  3776  0215                     	;# 
  3777  0215                     	;# 
  3778  0216                     	;# 
  3779  0216                     	;# 
  3780  0217                     	;# 
  3781  0217                     	;# 
  3782  0219                     	;# 
  3783  021A                     	;# 
  3784  021B                     	;# 
  3785  021C                     	;# 
  3786  021D                     	;# 
  3787  021D                     	;# 
  3788  021E                     	;# 
  3789  021F                     	;# 
  3790  028C                     	;# 
  3791  028D                     	;# 
  3792  028E                     	;# 
  3793  0291                     	;# 
  3794  0291                     	;# 
  3795  0292                     	;# 
  3796  0293                     	;# 
  3797  0294                     	;# 
  3798  0295                     	;# 
  3799  0295                     	;# 
  3800  0296                     	;# 
  3801  0297                     	;# 
  3802  0298                     	;# 
  3803  029F                     	;# 
  3804  030C                     	;# 
  3805  030D                     	;# 
  3806  030E                     	;# 
  3807  0311                     	;# 
  3808  0311                     	;# 
  3809  0312                     	;# 
  3810  0313                     	;# 
  3811  0314                     	;# 
  3812  0315                     	;# 
  3813  0315                     	;# 
  3814  0316                     	;# 
  3815  0317                     	;# 
  3816  0318                     	;# 
  3817  038C                     	;# 
  3818  038D                     	;# 
  3819  038E                     	;# 
  3820  0391                     	;# 
  3821  0392                     	;# 
  3822  0393                     	;# 
  3823  0394                     	;# 
  3824  0395                     	;# 
  3825  0396                     	;# 
  3826  0397                     	;# 
  3827  0398                     	;# 
  3828  0399                     	;# 
  3829  039A                     	;# 
  3830  039C                     	;# 
  3831  039D                     	;# 
  3832  039E                     	;# 
  3833  039F                     	;# 
  3834  0411                     	;# 
  3835  0411                     	;# 
  3836  0412                     	;# 
  3837  0413                     	;# 
  3838  0414                     	;# 
  3839  0415                     	;# 
  3840  0416                     	;# 
  3841  0417                     	;# 
  3842  0418                     	;# 
  3843  0418                     	;# 
  3844  0419                     	;# 
  3845  041A                     	;# 
  3846  041B                     	;# 
  3847  041C                     	;# 
  3848  041D                     	;# 
  3849  041E                     	;# 
  3850  041F                     	;# 
  3851  0498                     	;# 
  3852  0498                     	;# 
  3853  0499                     	;# 
  3854  049A                     	;# 
  3855  049B                     	;# 
  3856  049B                     	;# 
  3857  049C                     	;# 
  3858  049D                     	;# 
  3859  049E                     	;# 
  3860  049F                     	;# 
  3861  0617                     	;# 
  3862  0618                     	;# 
  3863  0619                     	;# 
  3864  0619                     	;# 
  3865  061A                     	;# 
  3866  061B                     	;# 
  3867  061C                     	;# 
  3868  061C                     	;# 
  3869  061F                     	;# 
  3870  0691                     	;# 
  3871  0692                     	;# 
  3872  0693                     	;# 
  3873  0694                     	;# 
  3874  0695                     	;# 
  3875  0696                     	;# 
  3876  0697                     	;# 
  3877  0698                     	;# 
  3878  0699                     	;# 
  3879  0711                     	;# 
  3880  0712                     	;# 
  3881  0713                     	;# 
  3882  0714                     	;# 
  3883  0715                     	;# 
  3884  0716                     	;# 
  3885  0717                     	;# 
  3886  0718                     	;# 
  3887  0719                     	;# 
  3888  0891                     	;# 
  3889  0891                     	;# 
  3890  0891                     	;# 
  3891  0891                     	;# 
  3892  0891                     	;# 
  3893  0891                     	;# 
  3894  0892                     	;# 
  3895  0892                     	;# 
  3896  0892                     	;# 
  3897  0893                     	;# 
  3898  0893                     	;# 
  3899  0893                     	;# 
  3900  0893                     	;# 
  3901  0893                     	;# 
  3902  0893                     	;# 
  3903  0894                     	;# 
  3904  0894                     	;# 
  3905  0894                     	;# 
  3906  0895                     	;# 
  3907  0895                     	;# 
  3908  0895                     	;# 
  3909  0896                     	;# 
  3910  0896                     	;# 
  3911  0896                     	;# 
  3912  089B                     	;# 
  3913  0911                     	;# 
  3914  0912                     	;# 
  3915  0913                     	;# 
  3916  0914                     	;# 
  3917  0915                     	;# 
  3918  0916                     	;# 
  3919  0918                     	;# 
  3920  0919                     	;# 
  3921  091A                     	;# 
  3922  091B                     	;# 
  3923  091C                     	;# 
  3924  091D                     	;# 
  3925  091E                     	;# 
  3926  091F                     	;# 
  3927  0E0F                     	;# 
  3928  0E10                     	;# 
  3929  0E11                     	;# 
  3930  0E12                     	;# 
  3931  0E13                     	;# 
  3932  0E14                     	;# 
  3933  0E15                     	;# 
  3934  0E16                     	;# 
  3935  0E17                     	;# 
  3936  0E18                     	;# 
  3937  0E19                     	;# 
  3938  0E1A                     	;# 
  3939  0E1B                     	;# 
  3940  0E1C                     	;# 
  3941  0E1D                     	;# 
  3942  0E1E                     	;# 
  3943  0E1F                     	;# 
  3944  0E20                     	;# 
  3945  0E21                     	;# 
  3946  0E22                     	;# 
  3947  0E24                     	;# 
  3948  0E25                     	;# 
  3949  0E28                     	;# 
  3950  0E29                     	;# 
  3951  0E2A                     	;# 
  3952  0E2B                     	;# 
  3953  0E2C                     	;# 
  3954  0E2D                     	;# 
  3955  0E2E                     	;# 
  3956  0E2F                     	;# 
  3957  0E90                     	;# 
  3958  0E91                     	;# 
  3959  0E92                     	;# 
  3960  0E94                     	;# 
  3961  0E95                     	;# 
  3962  0E9C                     	;# 
  3963  0E9D                     	;# 
  3964  0E9E                     	;# 
  3965  0E9F                     	;# 
  3966  0EA0                     	;# 
  3967  0EA1                     	;# 
  3968  0EA2                     	;# 
  3969  0EA3                     	;# 
  3970  0EA4                     	;# 
  3971  0EA5                     	;# 
  3972  0EA6                     	;# 
  3973  0EA7                     	;# 
  3974  0F0F                     	;# 
  3975  0F10                     	;# 
  3976  0F11                     	;# 
  3977  0F12                     	;# 
  3978  0F13                     	;# 
  3979  0F14                     	;# 
  3980  0F15                     	;# 
  3981  0F16                     	;# 
  3982  0F17                     	;# 
  3983  0F18                     	;# 
  3984  0F19                     	;# 
  3985  0F1A                     	;# 
  3986  0F1B                     	;# 
  3987  0F1C                     	;# 
  3988  0F1D                     	;# 
  3989  0F1E                     	;# 
  3990  0F1F                     	;# 
  3991  0F20                     	;# 
  3992  0F21                     	;# 
  3993  0F22                     	;# 
  3994  0F23                     	;# 
  3995  0F24                     	;# 
  3996  0F25                     	;# 
  3997  0F26                     	;# 
  3998  0F27                     	;# 
  3999  0F28                     	;# 
  4000  0F29                     	;# 
  4001  0F2A                     	;# 
  4002  0F2B                     	;# 
  4003  0F2C                     	;# 
  4004  0F2D                     	;# 
  4005  0F2E                     	;# 
  4006  0F2F                     	;# 
  4007  0F30                     	;# 
  4008  0F31                     	;# 
  4009  0F32                     	;# 
  4010  0F33                     	;# 
  4011  0F34                     	;# 
  4012  0F35                     	;# 
  4013  0F36                     	;# 
  4014  0F37                     	;# 
  4015  0FE4                     	;# 
  4016  0FE5                     	;# 
  4017  0FE6                     	;# 
  4018  0FE7                     	;# 
  4019  0FE8                     	;# 
  4020  0FE9                     	;# 
  4021  0FEA                     	;# 
  4022  0FEB                     	;# 
  4023  0FED                     	;# 
  4024  0FEE                     	;# 
  4025  0FEF                     	;_spi1_send_buffer_data
  4026                           
  4027                           	psect	idataCOMMON
  4028  0003                     __pidataCOMMON:	
  4029                           
  4030                           ;initializer for _SPI_OFFSET_BYTE
  4031  0003  3401               	retlw	1
  4032                           
  4033                           	psect	idataBANK1
  4034  07FC                     __pidataBANK1:	
  4035                           
  4036                           ;initializer for _direction
  4037  07FC  3401               	retlw	1
  4038  07FD  3400               	retlw	0
  4039                           
  4040                           ;initializer for _st_dataLength
  4041  07FE  34FF               	retlw	255
  4042  07FF  34FF               	retlw	255
  4043                           
  4044                           	psect	stringtext1
  4045  1000                     __pstringtext1:	
  4046  1000                     _MACHINE_ID:	
  4047  1000  3401               	retlw	1
  4048  1001  3400               	retlw	0
  4049  1002                     __end_of_MACHINE_ID:	
  4050                           
  4051                           	psect	stringtext2
  4052  1002                     __pstringtext2:	
  4053  1002                     _VENDER_ID:	
  4054  1002  3401               	retlw	1
  4055  1003  3400               	retlw	0
  4056  1004                     __end_of_VENDER_ID:	
  4057                           
  4058                           	psect	bitnvCOMMON
  4059  03C8                     __pbitnvCOMMON:	
  4060  03C8                     _isEndPointTrig:	
  4061  03C8                     	ds	1
  4062  000E                     _PORTC	set	14
  4063  000D                     _PORTB	set	13
  4064  000C                     _PORTA	set	12
  4065  000B                     _INTCONbits	set	11
  4066  0010                     _PIR0bits	set	16
  4067  0012                     _PIR2bits	set	18
  4068  0011                     _PIR1bits	set	17
  4069  008E                     _TRISC	set	142
  4070  008D                     _TRISB	set	141
  4071  008C                     _TRISA	set	140
  4072  0092                     _PIE2bits	set	146
  4073  0091                     _PIE1bits	set	145
  4074  0090                     _PIE0bits	set	144
  4075  008E                     _TRISCbits	set	142
  4076  008D                     _TRISBbits	set	141
  4077  010C                     _LATAbits	set	268
  4078  018E                     _ANSELC	set	398
  4079  018D                     _ANSELB	set	397
  4080  018C                     _ANSELA	set	396
  4081  021C                     _SSP2STATbits	set	540
  4082  021D                     _SSP2CON1bits	set	541
  4083  021F                     _SSP2CON3bits	set	543
  4084  0214                     _SSP1STATbits	set	532
  4085  0215                     _SSP1CON1bits	set	533
  4086  0217                     _SSP1CON3bits	set	535
  4087  020C                     _WPUA	set	524
  4088  020D                     _WPUB	set	525
  4089  020E                     _WPUC	set	526
  4090  0219                     _SSP2BUF	set	537
  4091  0211                     _SSP1BUF	set	529
  4092  0392                     _IOCANbits	set	914
  4093  0391                     _IOCAPbits	set	913
  4094  038C                     _INLVLAbits	set	908
  4095  038E                     _INLVLCbits	set	910
  4096  038D                     _INLVLBbits	set	909
  4097  0393                     _IOCAFbits	set	915
  4098  0894                     _NVMDATH	set	2196
  4099  0893                     _NVMDATL	set	2195
  4100  0892                     _NVMADRH	set	2194
  4101  0891                     _NVMADRL	set	2193
  4102  0895                     _NVMCON1bits	set	2197
  4103  44A8                     _RD	set	17576
  4104  091E                     _OSCTUNEbits	set	2334
  4105  091F                     _OSCFRQbits	set	2335
  4106  0E1F                     _SSP2SSPPSbits	set	3615
  4107  0E22                     _SSP1SSPPSbits	set	3618
  4108  0E9F                     _RB7PPS	set	3743
  4109  0E92                     _RA2PPS	set	3730
  4110  0EA2                     _RC2PPS	set	3746
  4111                           
  4112                           ; #config settings
  4113  0000                     
  4114                           	psect	cinit
  4115  0062                     start_initialization:	
  4116  0062                     __initialization:		;BIGRAM
  4117                           
  4118                           ; Initialize objects allocated to COMMON
  4119  0062  3180  2003  3180   	fcall	__pidataCOMMON	;fetch initializer
  4120  0065  00FA               	movwf	__pdataCOMMON& (0+127)
  4121                           
  4122                           ; Initialize objects allocated to BANK1
  4123  0066  0021               	movlb	1	; select bank1
  4124  0067  3187  27FC  3180   	fcall	__pidataBANK1	;fetch initializer
  4125  006A  00EC               	movwf	__pdataBANK1& (0+127)
  4126  006B  3187  27FD  3180   	fcall	__pidataBANK1+1	;fetch initializer
  4127  006E  00ED               	movwf	(__pdataBANK1+1)& (0+127)
  4128  006F  3187  27FE  3180   	fcall	__pidataBANK1+2	;fetch initializer
  4129  0072  00EE               	movwf	(__pdataBANK1+2)& (0+127)
  4130  0073  3187  27FF  3180   	fcall	__pidataBANK1+3	;fetch initializer
  4131  0076  00EF               	movwf	(__pdataBANK1+3)& (0+127)
  4132                           
  4133                           ; Clear objects allocated to BIGRAM
  4134  0077  30F0               	movlw	low (0+9456)
  4135  0078  0084               	movwf	4
  4136  0079  3024               	movlw	high (0+9456)
  4137  007A  0085               	movwf	5
  4138  007B  3000               	movlw	0
  4139  007C  00FE               	movwf	btemp
  4140  007D  3003               	movlw	3
  4141  007E  00FF               	movwf	btemp+1
  4142  007F  318F  2739  3180   	fcall	clear_ram0
  4143                           
  4144                           ; Clear objects allocated to BITCOMMON
  4145  0082  01F0               	clrf	(__pbitbssCOMMON/(0+8))& (0+127)
  4146                           
  4147                           ; Clear objects allocated to BANK0
  4148  0083  3052               	movlw	low __pbssBANK0
  4149  0084  0084               	movwf	4
  4150  0085  3000               	movlw	high __pbssBANK0
  4151  0086  0085               	movwf	5
  4152  0087  301D               	movlw	29
  4153  0088  00FE               	movwf	btemp
  4154  0089  3000               	movlw	0
  4155  008A  00FF               	movwf	btemp+1
  4156  008B  318F  2739  3180   	fcall	clear_ram0
  4157                           
  4158                           ; Clear objects allocated to BANK1
  4159  008E  30A0               	movlw	low __pbssBANK1
  4160  008F  0084               	movwf	4
  4161  0090  3000               	movlw	high __pbssBANK1
  4162  0091  0085               	movwf	5
  4163  0092  304C               	movlw	76
  4164  0093  00FE               	movwf	btemp
  4165  0094  3000               	movlw	0
  4166  0095  00FF               	movwf	btemp+1
  4167  0096  318F  2739  3180   	fcall	clear_ram0
  4168                           
  4169                           ; Clear objects allocated to BANK2
  4170  0099  3020               	movlw	low __pbssBANK2
  4171  009A  0084               	movwf	4
  4172  009B  3001               	movlw	high __pbssBANK2
  4173  009C  0085               	movwf	5
  4174  009D  3012               	movlw	18
  4175  009E  00FE               	movwf	btemp
  4176  009F  3000               	movlw	0
  4177  00A0  00FF               	movwf	btemp+1
  4178  00A1  318F  2739         	fcall	clear_ram0
  4179  00A3                     end_of_initialization:	
  4180                           ;End of C runtime variable initialization code
  4181                           
  4182  00A3                     __end_of__initialization:	
  4183  00A3  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  4184  00A4  0020               	movlb	0
  4185  00A5  3187  2F2B         	ljmp	_main	;jump to C main() function
  4186                           
  4187                           	psect	bitbssCOMMON
  4188  0380                     __pbitbssCOMMON:	
  4189  0380                     _ra3condision:	
  4190  0380                     	ds	1
  4191  0381                     _isreadTrain:	
  4192  0381                     	ds	1
  4193  0382                     _isMycargo:	
  4194  0382                     	ds	1
  4195  0383                     _workingcounta3:	
  4196  0383                     	ds	1
  4197  0384                     _workingcounta2:	
  4198  0384                     	ds	1
  4199  0385                     _workingcounta1:	
  4200  0385                     	ds	1
  4201  0386                     _workingcounta0:	
  4202  0386                     	ds	1
  4203  0387                     _isCalibrated:	
  4204  0387                     	ds	1
  4205                           
  4206                           	psect	dataCOMMON
  4207  007A                     __pdataCOMMON:	
  4208  007A                     _SPI_OFFSET_BYTE:	
  4209  007A                     	ds	1
  4210                           
  4211                           	psect	bssBANK0
  4212  0052                     __pbssBANK0:	
  4213  0052                     _cargoData:	
  4214  0052                     	ds	16
  4215  0062                     _read_count1:	
  4216  0062                     	ds	2
  4217  0064                     _count1:	
  4218  0064                     	ds	2
  4219  0066                     _EEPROM_ADDR_buf:	
  4220  0066                     	ds	2
  4221  0068                     _countabuf:	
  4222  0068                     	ds	2
  4223  006A                     _count2:	
  4224  006A                     	ds	2
  4225  006C                     _spi1_Read_data:	
  4226  006C                     	ds	1
  4227  006D                     _spi2_Send_data:	
  4228  006D                     	ds	1
  4229  006E                     _st_type:	
  4230  006E                     	ds	1
  4231                           
  4232                           	psect	bssBANK1
  4233  00A0                     __pbssBANK1:	
  4234  00A0                     _command:	
  4235  00A0                     	ds	18
  4236  00B2                     _cargo_index:	
  4237  00B2                     	ds	18
  4238  00C4                     _calibdata:	
  4239  00C4                     	ds	9
  4240  00CD                     _linkInfo:	
  4241  00CD                     	ds	6
  4242  00D3                     _startTrainBytes:	
  4243  00D3                     	ds	4
  4244  00D7                     _send_count1:	
  4245  00D7                     	ds	2
  4246  00D9                     _spi1_send_count:	
  4247  00D9                     	ds	2
  4248  00DB                     _read_count2:	
  4249  00DB                     	ds	2
  4250  00DD                     _counta2:	
  4251  00DD                     	ds	2
  4252  00DF                     _trainPos:	
  4253  00DF                     	ds	2
  4254  00E1                     _SIZE_COUNT:	
  4255  00E1                     	ds	2
  4256  00E3                     _RaadData:	
  4257  00E3                     	ds	2
  4258  00E5                     _linkAngle:	
  4259  00E5                     	ds	2
  4260  00E7                     _spi2_Read_data:	
  4261  00E7                     	ds	1
  4262  00E8                     _send_data:	
  4263  00E8                     	ds	1
  4264  00E9                     _eeprom_address:	
  4265  00E9                     	ds	1
  4266  00EA                     _readNG:	
  4267  00EA                     	ds	1
  4268  00EB                     _readOK:	
  4269  00EB                     	ds	1
  4270                           
  4271                           	psect	dataBANK1
  4272  00EC                     __pdataBANK1:	
  4273  00EC                     _direction:	
  4274  00EC                     	ds	2
  4275  00EE                     _st_dataLength:	
  4276  00EE                     	ds	2
  4277                           
  4278                           	psect	bssBANK2
  4279  0120                     __pbssBANK2:	
  4280  0120                     _comu_types:	
  4281  0120                     	ds	18
  4282                           
  4283                           	psect	clrtext
  4284  0F39                     clear_ram0:	
  4285                           ;	Called with FSR0 containing the base address, and
  4286                           ;	btemp/btemp+1 has the size to clear
  4287                           
  4288  0F39  0064               	clrwdt	;clear the watchdog before getting into this loop
  4289  0F3A                     clrloop0:	
  4290  0F3A  0180               	clrf	0	;clear RAM location pointed to by FSR
  4291  0F3B  3101               	addfsr 0,1
  4292  0F3C  3001               	movlw	1
  4293  0F3D  02FE               	subwf	126,f
  4294  0F3E  3000               	movlw	0
  4295  0F3F  3BFF               	subwfb	127,f
  4296  0F40  087F               	movf	127,w
  4297  0F41  047E               	iorwf	126,w
  4298  0F42  1903               	btfsc	3,2
  4299  0F43  3400               	retlw	0	;all done for this memory range, return
  4300  0F44  2F3A               	goto	clrloop0	;have we reached the end yet?
  4301                           
  4302                           	psect	cstackBANK2
  4303  0132                     __pcstackBANK2:	
  4304  0132                     Calibrate_download@buflong:	
  4305  0132                     readCargo@buflong:	
  4306                           ; 4 bytes @ 0x0
  4307                           
  4308                           
  4309                           ; 4 bytes @ 0x0
  4310  0132                     	ds	4
  4311  0136                     Calibrate_download@bufint:	
  4312  0136                     readCargo@bufint:	
  4313                           ; 2 bytes @ 0x4
  4314                           
  4315                           
  4316                           ; 2 bytes @ 0x4
  4317  0136                     	ds	2
  4318  0138                     Calibrate_download@spi_Read_data:	
  4319  0138                     readCargo@spi1_Read_data:	
  4320                           ; 1 bytes @ 0x6
  4321                           
  4322                           
  4323                           ; 1 bytes @ 0x6
  4324  0138                     	ds	1
  4325  0139                     setComunicateMode@m_type:	
  4326                           
  4327                           ; 1 bytes @ 0x7
  4328  0139                     	ds	1
  4329  013A                     setComunicateMode@i:	
  4330                           
  4331                           ; 2 bytes @ 0x8
  4332  013A                     	ds	2
  4333                           
  4334                           	psect	cstackCOMMON
  4335  0071                     __pcstackCOMMON:	
  4336  0071                     ?_isTrainSt:	
  4337  0071                     ?_isSPI1read:	
  4338                           ; 1 bit 
  4339                           
  4340  0071                     ?_isEndpoint:	
  4341                           ; 1 bit 
  4342                           
  4343  0071                     ?_clutchaction:	
  4344                           ; 1 bit 
  4345                           
  4346  0071                     ?_setComunicateMode:	
  4347                           ; 1 bit 
  4348                           
  4349  0071                     ?_isSPI2read:	
  4350                           ; 1 bit 
  4351                           
  4352  0071                     ?_setCargoAngle:	
  4353                           ; 1 bit 
  4354                           
  4355  0071                     ?_setSPI1sendDataManual:	
  4356                           ; 1 bytes @ 0x0
  4357                           
  4358  0071                     ?_readCargo:	
  4359                           ; 1 bytes @ 0x0
  4360                           
  4361  0071                     ?_restartCargo:	
  4362                           ; 1 bytes @ 0x0
  4363                           
  4364  0071                     ?_setSPI1sendData:	
  4365                           ; 1 bytes @ 0x0
  4366                           
  4367  0071                     ??_setSPI1sendData:	
  4368                           ; 1 bytes @ 0x0
  4369                           
  4370  0071                     ?_clear:	
  4371                           ; 1 bytes @ 0x0
  4372                           
  4373  0071                     ?_resetTrainData:	
  4374                           ; 1 bytes @ 0x0
  4375                           
  4376  0071                     ?_spi_init:	
  4377                           ; 1 bytes @ 0x0
  4378                           
  4379  0071                     ?_initCargo:	
  4380                           ; 1 bytes @ 0x0
  4381                           
  4382  0071                     ?_read_train:	
  4383                           ; 1 bytes @ 0x0
  4384                           
  4385  0071                     ?_setSPI2sendData:	
  4386                           ; 1 bytes @ 0x0
  4387                           
  4388  0071                     ?_spi1_init:	
  4389                           ; 1 bytes @ 0x0
  4390                           
  4391  0071                     ?_spi2_init:	
  4392                           ; 1 bytes @ 0x0
  4393                           
  4394  0071                     ?_addAngle:	
  4395                           ; 1 bytes @ 0x0
  4396                           
  4397  0071                     ?_InitCalibrate:	
  4398                           ; 1 bytes @ 0x0
  4399                           
  4400  0071                     ?_Calibrate_download:	
  4401                           ; 1 bytes @ 0x0
  4402                           
  4403  0071                     ?_initComand:	
  4404                           ; 1 bytes @ 0x0
  4405                           
  4406  0071                     ?_initComu_types:	
  4407                           ; 1 bytes @ 0x0
  4408                           
  4409  0071                     ?_InterMSSP:	
  4410                           ; 1 bytes @ 0x0
  4411                           
  4412  0071                     ?_initbuffer:	
  4413                           ; 1 bytes @ 0x0
  4414                           
  4415  0071                     ?_init:	
  4416                           ; 1 bytes @ 0x0
  4417                           
  4418  0071                     ?_io_init:	
  4419                           ; 1 bytes @ 0x0
  4420                           
  4421  0071                     ?_initTrain:	
  4422                           ; 1 bytes @ 0x0
  4423                           
  4424  0071                     ?_main:	
  4425                           ; 1 bytes @ 0x0
  4426                           
  4427  0071                     ??_isSPI2read:	
  4428                           ; 1 bytes @ 0x0
  4429                           
  4430  0071                     setCargoAngle@m_linkAngleTo:	
  4431                           ; 1 bytes @ 0x0
  4432                           
  4433                           
  4434                           ; 2 bytes @ 0x0
  4435  0071                     	ds	2
  4436  0073                     ??_setCargoAngle:	
  4437  0073                     ??_addAngle:	
  4438                           ; 1 bytes @ 0x2
  4439                           
  4440  0073                     ??_InterMSSP:	
  4441                           ; 1 bytes @ 0x2
  4442                           
  4443                           
  4444                           ; 1 bytes @ 0x2
  4445  0073                     	ds	6
  4446                           
  4447                           	psect	cstackBANK0
  4448  0020                     __pcstackBANK0:	
  4449  0020                     ??_setSPI1sendDataManual:	
  4450  0020                     ??_restartCargo:	
  4451                           ; 1 bytes @ 0x0
  4452                           
  4453  0020                     ??_clear:	
  4454                           ; 1 bytes @ 0x0
  4455                           
  4456  0020                     ??_isTrainSt:	
  4457                           ; 1 bytes @ 0x0
  4458                           
  4459  0020                     ??_resetTrainData:	
  4460                           ; 1 bytes @ 0x0
  4461                           
  4462  0020                     ??_initCargo:	
  4463                           ; 1 bytes @ 0x0
  4464                           
  4465  0020                     ??_isSPI1read:	
  4466                           ; 1 bytes @ 0x0
  4467                           
  4468  0020                     ??_read_train:	
  4469                           ; 1 bytes @ 0x0
  4470                           
  4471  0020                     ??_setSPI2sendData:	
  4472                           ; 1 bytes @ 0x0
  4473                           
  4474  0020                     ??_spi1_init:	
  4475                           ; 1 bytes @ 0x0
  4476                           
  4477  0020                     ??_spi2_init:	
  4478                           ; 1 bytes @ 0x0
  4479                           
  4480  0020                     ??_initComand:	
  4481                           ; 1 bytes @ 0x0
  4482                           
  4483  0020                     ??_clutchaction:	
  4484                           ; 1 bytes @ 0x0
  4485                           
  4486  0020                     ??_initComu_types:	
  4487                           ; 1 bytes @ 0x0
  4488                           
  4489  0020                     ??_initbuffer:	
  4490                           ; 1 bytes @ 0x0
  4491                           
  4492  0020                     ??_io_init:	
  4493                           ; 1 bytes @ 0x0
  4494                           
  4495  0020                     ?___lmul:	
  4496                           ; 1 bytes @ 0x0
  4497                           
  4498  0020                     ?___aldiv:	
  4499                           ; 4 bytes @ 0x0
  4500                           
  4501  0020                     ?___almod:	
  4502                           ; 4 bytes @ 0x0
  4503                           
  4504  0020                     ?_getCargoData:	
  4505                           ; 4 bytes @ 0x0
  4506                           
  4507  0020                     clutchaction@comannd:	
  4508                           ; 16 bytes @ 0x0
  4509                           
  4510  0020                     setSPI1sendDataManual@data:	
  4511                           ; 1 bytes @ 0x0
  4512                           
  4513  0020                     ___lmul@multiplier:	
  4514                           ; 1 bytes @ 0x0
  4515                           
  4516  0020                     ___aldiv@divisor:	
  4517                           ; 4 bytes @ 0x0
  4518                           
  4519  0020                     ___almod@divisor:	
  4520                           ; 4 bytes @ 0x0
  4521                           
  4522                           
  4523                           ; 4 bytes @ 0x0
  4524  0020                     	ds	1
  4525  0021                     ??_isEndpoint:	
  4526  0021                     spi1_init@dummy:	
  4527                           ; 1 bytes @ 0x1
  4528                           
  4529  0021                     spi2_init@dummy:	
  4530                           ; 1 bytes @ 0x1
  4531                           
  4532                           
  4533                           ; 1 bytes @ 0x1
  4534  0021                     	ds	1
  4535  0022                     ??_spi_init:	
  4536  0022                     initbuffer@i:	
  4537                           ; 1 bytes @ 0x2
  4538                           
  4539  0022                     read_train@bufint:	
  4540                           ; 2 bytes @ 0x2
  4541                           
  4542                           
  4543                           ; 2 bytes @ 0x2
  4544  0022                     	ds	2
  4545  0024                     ??_init:	
  4546  0024                     ___lmul@multiplicand:	
  4547                           ; 1 bytes @ 0x4
  4548                           
  4549  0024                     ___aldiv@dividend:	
  4550                           ; 4 bytes @ 0x4
  4551                           
  4552  0024                     ___almod@dividend:	
  4553                           ; 4 bytes @ 0x4
  4554                           
  4555                           
  4556                           ; 4 bytes @ 0x4
  4557  0024                     	ds	2
  4558  0026                     isEndpoint@spi2data:	
  4559                           
  4560                           ; 1 bytes @ 0x6
  4561  0026                     	ds	2
  4562  0028                     ??___lmul:	
  4563  0028                     ??___aldiv:	
  4564                           ; 1 bytes @ 0x8
  4565                           
  4566  0028                     ??___almod:	
  4567                           ; 1 bytes @ 0x8
  4568                           
  4569  0028                     ___lmul@product:	
  4570                           ; 1 bytes @ 0x8
  4571                           
  4572                           
  4573                           ; 4 bytes @ 0x8
  4574  0028                     	ds	1
  4575  0029                     ___aldiv@counter:	
  4576  0029                     ___almod@counter:	
  4577                           ; 1 bytes @ 0x9
  4578                           
  4579                           
  4580                           ; 1 bytes @ 0x9
  4581  0029                     	ds	1
  4582  002A                     isTrainSt@buf:	
  4583  002A                     ___aldiv@sign:	
  4584                           ; 1 bytes @ 0xA
  4585                           
  4586  002A                     ___almod@sign:	
  4587                           ; 1 bytes @ 0xA
  4588                           
  4589                           
  4590                           ; 1 bytes @ 0xA
  4591  002A                     	ds	1
  4592  002B                     ??_initTrain:	
  4593  002B                     ___aldiv@quotient:	
  4594                           ; 1 bytes @ 0xB
  4595                           
  4596                           
  4597                           ; 4 bytes @ 0xB
  4598  002B                     	ds	4
  4599  002F                     ?_TransLong256To255:	
  4600  002F                     TransLong256To255@data:	
  4601                           ; 4 bytes @ 0xF
  4602                           
  4603                           
  4604                           ; 4 bytes @ 0xF
  4605  002F                     	ds	1
  4606  0030                     ??_getCargoData:	
  4607                           
  4608                           ; 1 bytes @ 0x10
  4609  0030                     	ds	1
  4610  0031                     ??_InitCalibrate:	
  4611                           
  4612                           ; 1 bytes @ 0x11
  4613  0031                     	ds	1
  4614  0032                     InitCalibrate@cargoData:	
  4615                           
  4616                           ; 16 bytes @ 0x12
  4617  0032                     	ds	1
  4618  0033                     ??_TransLong256To255:	
  4619                           
  4620                           ; 1 bytes @ 0x13
  4621  0033                     	ds	4
  4622  0037                     TransLong256To255@TransData:	
  4623                           
  4624                           ; 4 bytes @ 0x17
  4625  0037                     	ds	4
  4626  003B                     TransLong256To255@j:	
  4627                           
  4628                           ; 2 bytes @ 0x1B
  4629  003B                     	ds	2
  4630  003D                     TransLong256To255@mod:	
  4631                           
  4632                           ; 4 bytes @ 0x1D
  4633  003D                     	ds	4
  4634  0041                     TransLong256To255@pow:	
  4635                           
  4636                           ; 4 bytes @ 0x21
  4637  0041                     	ds	4
  4638  0045                     TransLong256To255@i:	
  4639                           
  4640                           ; 2 bytes @ 0x25
  4641  0045                     	ds	2
  4642  0047                     TransLong256To255@buf:	
  4643                           
  4644                           ; 4 bytes @ 0x27
  4645  0047                     	ds	4
  4646  004B                     ??_readCargo:	
  4647  004B                     ??_Calibrate_download:	
  4648                           ; 1 bytes @ 0x2B
  4649                           
  4650                           
  4651                           ; 1 bytes @ 0x2B
  4652  004B                     	ds	6
  4653  0051                     ??_setComunicateMode:	
  4654                           
  4655                           ; 1 bytes @ 0x31
  4656  0051                     	ds	1
  4657  0052                     ??_main:	
  4658                           
  4659                           	psect	maintext
  4660  072B                     __pmaintext:	
  4661                           ; 1 bytes @ 0x32
  4662 ;;
  4663 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  4664 ;;
  4665 ;; *************** function _main *****************
  4666 ;; Defined at:
  4667 ;;		line 158 in file "main.c"
  4668 ;; Parameters:    Size  Location     Type
  4669 ;;		None
  4670 ;; Auto vars:     Size  Location     Type
  4671 ;;		None
  4672 ;; Return value:  Size  Location     Type
  4673 ;;                  1    wreg      void 
  4674 ;; Registers used:
  4675 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4676 ;; Tracked objects:
  4677 ;;		On entry : B1F/0
  4678 ;;		On exit  : 0/0
  4679 ;;		Unchanged: 0/0
  4680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4681 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4682 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4683 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4684 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4685 ;;Total ram usage:        0 bytes
  4686 ;; Hardware stack levels required when called:    7
  4687 ;; This function calls:
  4688 ;;		_InitCalibrate
  4689 ;;		_init
  4690 ;;		_initCargo
  4691 ;;		_initComand
  4692 ;;		_initComu_types
  4693 ;;		_initTrain
  4694 ;;		_io_init
  4695 ;;		_isSPI1read
  4696 ;;		_read_train
  4697 ;;		_setComunicateMode
  4698 ;;		_setSPI2sendData
  4699 ;;		_spi_init
  4700 ;; This function is called by:
  4701 ;;		Startup code after reset
  4702 ;; This function uses a non-reentrant model
  4703 ;;
  4704                           
  4705                           
  4706                           ;psect for function _main
  4707  072B                     _main:	
  4708                           
  4709                           ;main.c: 159: initComand();
  4710                           
  4711                           ;incstack = 0
  4712                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4713  072B  3185  2547  3187   	fcall	_initComand
  4714                           
  4715                           ;main.c: 160: initComu_types();
  4716  072E  3184  24DA  3187   	fcall	_initComu_types
  4717                           
  4718                           ;main.c: 161: InitCalibrate();
  4719  0731  3187  2784  3187   	fcall	_InitCalibrate
  4720                           
  4721                           ;main.c: 162: init();
  4722  0734  318F  27D8  3187   	fcall	_init
  4723                           
  4724                           ;main.c: 163: io_init();
  4725  0737  318F  2705  3187   	fcall	_io_init
  4726                           
  4727                           ;main.c: 164: spi_init();
  4728  073A  318F  2718  3187   	fcall	_spi_init
  4729                           
  4730                           ;main.c: 165: initCargo();
  4731  073D  318F  277F  3187   	fcall	_initCargo
  4732                           
  4733                           ;main.c: 166: LATAbits.LATA0 = 1;
  4734  0740  0022               	movlb	2	; select bank2
  4735  0741  140C               	bsf	12,0	;volatile
  4736  0742                     l3577:	
  4737                           ;main.c: 167: while(1){
  4738                           
  4739                           
  4740                           ;main.c: 168: if(!isSPI1read()){
  4741  0742  318F  2752  3187   	fcall	_isSPI1read
  4742  0745  1803               	btfsc	3,0
  4743  0746  2F42               	goto	l3577
  4744                           
  4745                           ;main.c: 169: initTrain();
  4746  0747  3186  2602  3187   	fcall	_initTrain
  4747                           
  4748                           ;main.c: 170: if(isreadTrain){
  4749  074A  1CF0               	btfss	_isreadTrain/(0+8),_isreadTrain& (0+7)
  4750  074B  2F52               	goto	l3585
  4751                           
  4752                           ;main.c: 171: setComunicateMode(st_type);
  4753  074C  0020               	movlb	0	; select bank0
  4754  074D  086E               	movf	_st_type,w
  4755  074E  3186  268A  3187   	fcall	_setComunicateMode
  4756                           
  4757                           ;main.c: 172: }else{
  4758  0751  2F55               	goto	l3587
  4759  0752                     l3585:	
  4760                           
  4761                           ;main.c: 173: read_train();
  4762  0752  3186  2647  3187   	fcall	_read_train
  4763  0755                     l3587:	
  4764                           
  4765                           ;main.c: 174: }
  4766                           ;main.c: 175: setSPI2sendData();
  4767  0755  3187  2759  3187   	fcall	_setSPI2sendData
  4768  0758  2F42               	goto	l3577
  4769  0759                     __end_of_main:	
  4770                           ;main.c: 176: }
  4771                           ;main.c: 177: };
  4772                           ;main.c: 178: return;
  4773                           
  4774                           
  4775                           	psect	text1
  4776  0F18                     __ptext1:	
  4777 ;; *************** function _spi_init *****************
  4778 ;; Defined at:
  4779 ;;		line 22 in file "spiControl.c"
  4780 ;; Parameters:    Size  Location     Type
  4781 ;;		None
  4782 ;; Auto vars:     Size  Location     Type
  4783 ;;		None
  4784 ;; Return value:  Size  Location     Type
  4785 ;;                  1    wreg      void 
  4786 ;; Registers used:
  4787 ;;		wreg, status,2, status,0, pclath, cstack
  4788 ;; Tracked objects:
  4789 ;;		On entry : 0/0
  4790 ;;		On exit  : 0/0
  4791 ;;		Unchanged: 0/0
  4792 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4793 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4794 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4795 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4796 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4797 ;;Total ram usage:        0 bytes
  4798 ;; Hardware stack levels used:    1
  4799 ;; Hardware stack levels required when called:    4
  4800 ;; This function calls:
  4801 ;;		_spi1_init
  4802 ;;		_spi2_init
  4803 ;; This function is called by:
  4804 ;;		_main
  4805 ;; This function uses a non-reentrant model
  4806 ;;
  4807                           
  4808                           
  4809                           ;psect for function _spi_init
  4810  0F18                     _spi_init:	
  4811                           
  4812                           ;spiControl.c: 23: INTCONbits.PEIE = 0;
  4813                           
  4814                           ;incstack = 0
  4815                           ; Regs used in _spi_init: [wreg+status,2+status,0+pclath+cstack]
  4816  0F18  130B               	bcf	11,6	;volatile
  4817                           
  4818                           ;spiControl.c: 24: INTCONbits.GIE = 0;
  4819  0F19  138B               	bcf	11,7	;volatile
  4820                           
  4821                           ;spiControl.c: 25: spi1_init();
  4822  0F1A  318F  2796  318F   	fcall	_spi1_init
  4823                           
  4824                           ;spiControl.c: 26: spi2_init();
  4825  0F1D  318F  27B6         	fcall	_spi2_init
  4826                           
  4827                           ;spiControl.c: 27: INTCONbits.PEIE = 1;
  4828  0F1F  170B               	bsf	11,6	;volatile
  4829                           
  4830                           ;spiControl.c: 28: INTCONbits.GIE = 1;
  4831  0F20  178B               	bsf	11,7	;volatile
  4832  0F21  0008               	return
  4833  0F22                     __end_of_spi_init:	
  4834                           
  4835                           	psect	text2
  4836  0FB6                     __ptext2:	
  4837 ;; *************** function _spi2_init *****************
  4838 ;; Defined at:
  4839 ;;		line 49 in file "spiControl.c"
  4840 ;; Parameters:    Size  Location     Type
  4841 ;;		None
  4842 ;; Auto vars:     Size  Location     Type
  4843 ;;  dummy           1    1[BANK0 ] unsigned char 
  4844 ;; Return value:  Size  Location     Type
  4845 ;;                  1    wreg      void 
  4846 ;; Registers used:
  4847 ;;		wreg, status,2, status,0
  4848 ;; Tracked objects:
  4849 ;;		On entry : 0/0
  4850 ;;		On exit  : 0/0
  4851 ;;		Unchanged: 0/0
  4852 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4853 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4854 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4855 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4856 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4857 ;;Total ram usage:        2 bytes
  4858 ;; Hardware stack levels used:    1
  4859 ;; Hardware stack levels required when called:    3
  4860 ;; This function calls:
  4861 ;;		Nothing
  4862 ;; This function is called by:
  4863 ;;		_spi_init
  4864 ;; This function uses a non-reentrant model
  4865 ;;
  4866                           
  4867                           
  4868                           ;psect for function _spi2_init
  4869  0FB6                     _spi2_init:	
  4870                           
  4871                           ;spiControl.c: 50: unsigned char dummy;
  4872                           ;spiControl.c: 51: SSP2CON3bits.PCIE = 0;
  4873                           
  4874                           ;incstack = 0
  4875                           ; Regs used in _spi2_init: [wreg+status,2+status,0]
  4876  0FB6  0024               	movlb	4	; select bank4
  4877  0FB7  131F               	bcf	31,6	;volatile
  4878                           
  4879                           ;spiControl.c: 52: RA2PPS = 0b11011;
  4880  0FB8  301B               	movlw	27
  4881  0FB9  003D               	movlb	29	; select bank29
  4882  0FBA  0092               	movwf	18	;volatile
  4883                           
  4884                           ;spiControl.c: 53: RB7PPS = 0b11010;
  4885  0FBB  301A               	movlw	26
  4886  0FBC  009F               	movwf	31	;volatile
  4887                           
  4888                           ;spiControl.c: 54: SSP2SSPPSbits.SSP2SSPPS = 0b01111;
  4889  0FBD  003C               	movlb	28	; select bank28
  4890  0FBE  081F               	movf	31,w	;volatile
  4891  0FBF  39E0               	andlw	-32
  4892  0FC0  380F               	iorlw	15
  4893  0FC1  009F               	movwf	31	;volatile
  4894                           
  4895                           ;spiControl.c: 55: SSP2CON1bits.SSPOV = 1;
  4896  0FC2  0024               	movlb	4	; select bank4
  4897  0FC3  171D               	bsf	29,6	;volatile
  4898                           
  4899                           ;spiControl.c: 56: SSP2CON1bits.SSPEN = 1;
  4900  0FC4  169D               	bsf	29,5	;volatile
  4901                           
  4902                           ;spiControl.c: 57: SSP2CON1bits.SSPM = 0b0001;
  4903  0FC5  081D               	movf	29,w	;volatile
  4904  0FC6  39F0               	andlw	-16
  4905  0FC7  3801               	iorlw	1
  4906  0FC8  009D               	movwf	29	;volatile
  4907                           
  4908                           ;spiControl.c: 58: SSP2CON3bits.BOEN = 1;
  4909  0FC9  161F               	bsf	31,4	;volatile
  4910                           
  4911                           ;spiControl.c: 59: SSP2STATbits.SMP = 0;
  4912  0FCA  139C               	bcf	28,7	;volatile
  4913                           
  4914                           ;spiControl.c: 60: SSP2STATbits.CKE = 0;
  4915  0FCB  131C               	bcf	28,6	;volatile
  4916                           
  4917                           ;spiControl.c: 61: SSP2CON1bits.CKP = 0;
  4918  0FCC  121D               	bcf	29,4	;volatile
  4919                           
  4920                           ;spiControl.c: 62: PIE2bits.SSP2IE = 1;
  4921  0FCD  0021               	movlb	1	; select bank1
  4922  0FCE  1592               	bsf	18,3	;volatile
  4923                           
  4924                           ;spiControl.c: 63: PIR2bits.SSP2IF = 0;
  4925  0FCF  0020               	movlb	0	; select bank0
  4926  0FD0  1192               	bcf	18,3	;volatile
  4927                           
  4928                           ;spiControl.c: 64: dummy = SSP2BUF;
  4929  0FD1  0024               	movlb	4	; select bank4
  4930  0FD2  0819               	movf	25,w	;volatile
  4931  0FD3  0020               	movlb	0	; select bank0
  4932  0FD4  00A0               	movwf	??_spi2_init
  4933  0FD5  0820               	movf	??_spi2_init,w
  4934  0FD6  00A1               	movwf	spi2_init@dummy
  4935  0FD7  0008               	return
  4936  0FD8                     __end_of_spi2_init:	
  4937                           
  4938                           	psect	text3
  4939  0F96                     __ptext3:	
  4940 ;; *************** function _spi1_init *****************
  4941 ;; Defined at:
  4942 ;;		line 33 in file "spiControl.c"
  4943 ;; Parameters:    Size  Location     Type
  4944 ;;		None
  4945 ;; Auto vars:     Size  Location     Type
  4946 ;;  dummy           1    1[BANK0 ] unsigned char 
  4947 ;; Return value:  Size  Location     Type
  4948 ;;                  1    wreg      void 
  4949 ;; Registers used:
  4950 ;;		wreg, status,2, status,0
  4951 ;; Tracked objects:
  4952 ;;		On entry : 0/0
  4953 ;;		On exit  : 0/0
  4954 ;;		Unchanged: 0/0
  4955 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4956 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4957 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4958 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4959 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4960 ;;Total ram usage:        2 bytes
  4961 ;; Hardware stack levels used:    1
  4962 ;; Hardware stack levels required when called:    3
  4963 ;; This function calls:
  4964 ;;		Nothing
  4965 ;; This function is called by:
  4966 ;;		_spi_init
  4967 ;; This function uses a non-reentrant model
  4968 ;;
  4969                           
  4970                           
  4971                           ;psect for function _spi1_init
  4972  0F96                     _spi1_init:	
  4973                           
  4974                           ;spiControl.c: 34: unsigned char dummy;
  4975                           ;spiControl.c: 35: SSP1CON3bits.PCIE = 0;
  4976                           
  4977                           ;incstack = 0
  4978                           ; Regs used in _spi1_init: [wreg+status,2+status,0]
  4979  0F96  0024               	movlb	4	; select bank4
  4980  0F97  1317               	bcf	23,6	;volatile
  4981                           
  4982                           ;spiControl.c: 36: RC2PPS = 0b11001;
  4983  0F98  3019               	movlw	25
  4984  0F99  003D               	movlb	29	; select bank29
  4985  0F9A  00A2               	movwf	34	;volatile
  4986                           
  4987                           ;spiControl.c: 37: SSP1SSPPSbits.SSP1SSPPS = 0b10110;
  4988  0F9B  003C               	movlb	28	; select bank28
  4989  0F9C  0822               	movf	34,w	;volatile
  4990  0F9D  39E0               	andlw	-32
  4991  0F9E  3816               	iorlw	22
  4992  0F9F  00A2               	movwf	34	;volatile
  4993                           
  4994                           ;spiControl.c: 38: SSP1CON1bits.SSPOV = 1;
  4995  0FA0  0024               	movlb	4	; select bank4
  4996  0FA1  1715               	bsf	21,6	;volatile
  4997                           
  4998                           ;spiControl.c: 39: SSP1CON1bits.SSPEN = 1;
  4999  0FA2  1695               	bsf	21,5	;volatile
  5000                           
  5001                           ;spiControl.c: 40: SSP1CON1bits.SSPM = 0b0100;
  5002  0FA3  0815               	movf	21,w	;volatile
  5003  0FA4  39F0               	andlw	-16
  5004  0FA5  3804               	iorlw	4
  5005  0FA6  0095               	movwf	21	;volatile
  5006                           
  5007                           ;spiControl.c: 41: SSP1CON3bits.BOEN = 1;
  5008  0FA7  1617               	bsf	23,4	;volatile
  5009                           
  5010                           ;spiControl.c: 42: SSP1STATbits.SMP = 0;
  5011  0FA8  1394               	bcf	20,7	;volatile
  5012                           
  5013                           ;spiControl.c: 43: SSP1STATbits.CKE = 0;
  5014  0FA9  1314               	bcf	20,6	;volatile
  5015                           
  5016                           ;spiControl.c: 44: SSP1CON1bits.CKP = 0;
  5017  0FAA  1215               	bcf	21,4	;volatile
  5018                           
  5019                           ;spiControl.c: 45: PIE1bits.SSP1IE = 1;
  5020  0FAB  0021               	movlb	1	; select bank1
  5021  0FAC  1591               	bsf	17,3	;volatile
  5022                           
  5023                           ;spiControl.c: 46: PIR1bits.SSP1IF = 0;
  5024  0FAD  0020               	movlb	0	; select bank0
  5025  0FAE  1191               	bcf	17,3	;volatile
  5026                           
  5027                           ;spiControl.c: 47: dummy = SSP1BUF;
  5028  0FAF  0024               	movlb	4	; select bank4
  5029  0FB0  0811               	movf	17,w	;volatile
  5030  0FB1  0020               	movlb	0	; select bank0
  5031  0FB2  00A0               	movwf	??_spi1_init
  5032  0FB3  0820               	movf	??_spi1_init,w
  5033  0FB4  00A1               	movwf	spi1_init@dummy
  5034  0FB5  0008               	return
  5035  0FB6                     __end_of_spi1_init:	
  5036                           
  5037                           	psect	text4
  5038  0759                     __ptext4:	
  5039 ;; *************** function _setSPI2sendData *****************
  5040 ;; Defined at:
  5041 ;;		line 108 in file "spiControl.c"
  5042 ;; Parameters:    Size  Location     Type
  5043 ;;		None
  5044 ;; Auto vars:     Size  Location     Type
  5045 ;;		None
  5046 ;; Return value:  Size  Location     Type
  5047 ;;                  1    wreg      void 
  5048 ;; Registers used:
  5049 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5050 ;; Tracked objects:
  5051 ;;		On entry : 0/0
  5052 ;;		On exit  : 0/0
  5053 ;;		Unchanged: 0/0
  5054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5055 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5056 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5057 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5058 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5059 ;;Total ram usage:        4 bytes
  5060 ;; Hardware stack levels used:    1
  5061 ;; Hardware stack levels required when called:    3
  5062 ;; This function calls:
  5063 ;;		Nothing
  5064 ;; This function is called by:
  5065 ;;		_main
  5066 ;; This function uses a non-reentrant model
  5067 ;;
  5068                           
  5069                           
  5070                           ;psect for function _setSPI2sendData
  5071  0759                     _setSPI2sendData:	
  5072                           
  5073                           ;spiControl.c: 109: spi2_Send_data = spi2_Send_data + SPI_OFFSET_BYTE;
  5074                           
  5075                           ;incstack = 0
  5076                           ; Regs used in _setSPI2sendData: [wreg+fsr1l+fsr1h+status,2+status,0]
  5077  0759  0020               	movlb	0	; select bank0
  5078  075A  086D               	movf	_spi2_Send_data,w
  5079  075B  077A               	addwf	_SPI_OFFSET_BYTE,w
  5080  075C  00A0               	movwf	??_setSPI2sendData
  5081  075D  0820               	movf	??_setSPI2sendData,w
  5082  075E  00ED               	movwf	_spi2_Send_data
  5083                           
  5084                           ;spiControl.c: 110: if(linkInfo.endpoint == 0){
  5085  075F  0021               	movlb	1	; select bank1
  5086  0760  0852               	movf	(_linkInfo^(0+128)+5),w
  5087  0761  1D03               	btfss	3,2
  5088  0762  2F68               	goto	l3485
  5089                           
  5090                           ;spiControl.c: 112: SSP2BUF = spi2_Send_data;
  5091  0763  0020               	movlb	0	; select bank0
  5092  0764  086D               	movf	_spi2_Send_data,w
  5093  0765  0024               	movlb	4	; select bank4
  5094  0766  0099               	movwf	25	;volatile
  5095                           
  5096                           ;spiControl.c: 113: }else{
  5097  0767  0008               	return
  5098  0768                     l3485:	
  5099                           
  5100                           ;spiControl.c: 114: spi2_buffer_data[count2] = spi2_Send_data;
  5101  0768  30F0               	movlw	240
  5102  0769  0020               	movlb	0	; select bank0
  5103  076A  00A0               	movwf	??_setSPI2sendData
  5104  076B  3026               	movlw	38
  5105  076C  00A1               	movwf	??_setSPI2sendData+1
  5106  076D  086A               	movf	_count2,w
  5107  076E  0720               	addwf	??_setSPI2sendData,w
  5108  076F  00A2               	movwf	??_setSPI2sendData+2
  5109  0770  086B               	movf	_count2+1,w
  5110  0771  3D21               	addwfc	??_setSPI2sendData+1,w
  5111  0772  00A3               	movwf	??_setSPI2sendData+3
  5112  0773  0822               	movf	??_setSPI2sendData+2,w
  5113  0774  0086               	movwf	6
  5114  0775  0823               	movf	??_setSPI2sendData+3,w
  5115  0776  0087               	movwf	7
  5116  0777  086D               	movf	_spi2_Send_data,w
  5117  0778  0081               	movwf	1
  5118                           
  5119                           ;spiControl.c: 115: count2++;
  5120  0779  3001               	movlw	1
  5121  077A  07EA               	addwf	_count2,f
  5122  077B  3000               	movlw	0
  5123  077C  3DEB               	addwfc	_count2+1,f
  5124                           
  5125                           ;spiControl.c: 116: if(count2 == 256){
  5126  077D  036B               	decf	_count2+1,w
  5127  077E  046A               	iorwf	_count2,w
  5128  077F  1D03               	btfss	3,2
  5129  0780  0008               	return
  5130                           
  5131                           ;spiControl.c: 117: count2 = 0;
  5132  0781  01EA               	clrf	_count2
  5133  0782  01EB               	clrf	_count2+1
  5134  0783  0008               	return
  5135  0784                     __end_of_setSPI2sendData:	
  5136                           
  5137                           	psect	text5
  5138  068A                     __ptext5:	
  5139 ;; *************** function _setComunicateMode *****************
  5140 ;; Defined at:
  5141 ;;		line 39 in file "comu_type.c"
  5142 ;; Parameters:    Size  Location     Type
  5143 ;;  m_type          1    wreg     unsigned char 
  5144 ;; Auto vars:     Size  Location     Type
  5145 ;;  m_type          1    7[BANK2 ] unsigned char 
  5146 ;;  i               2    8[BANK2 ] int 
  5147 ;; Return value:  Size  Location     Type
  5148 ;;		None               void
  5149 ;; Registers used:
  5150 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5151 ;; Tracked objects:
  5152 ;;		On entry : 0/0
  5153 ;;		On exit  : 0/0
  5154 ;;		Unchanged: 0/0
  5155 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5156 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5157 ;;      Locals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5158 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5159 ;;      Totals:         0       1       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5160 ;;Total ram usage:        4 bytes
  5161 ;; Hardware stack levels used:    1
  5162 ;; Hardware stack levels required when called:    6
  5163 ;; This function calls:
  5164 ;;		_Calibrate_download
  5165 ;;		_readCargo
  5166 ;; This function is called by:
  5167 ;;		_main
  5168 ;; This function uses a non-reentrant model
  5169 ;;
  5170                           
  5171                           
  5172                           ;psect for function _setComunicateMode
  5173  068A                     _setComunicateMode:	
  5174                           
  5175                           ;incstack = 0
  5176                           ; Regs used in _setComunicateMode: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5177                           ;setComunicateMode@m_type stored from wreg
  5178  068A  0022               	movlb	2	; select bank2
  5179  068B  00B9               	movwf	setComunicateMode@m_type^(0+256)
  5180                           
  5181                           ;comu_type.c: 40: for(int i = 0; i < 18; i++){
  5182  068C  01BA               	clrf	setComunicateMode@i^(0+256)
  5183  068D  01BB               	clrf	(setComunicateMode@i+1)^(0+256)
  5184  068E                     L1:	
  5185  068E  083B               	movf	(setComunicateMode@i+1)^(0+256),w
  5186  068F  3A80               	xorlw	128
  5187  0690  0020               	movlb	0	; select bank0
  5188  0691  00D1               	movwf	??_setComunicateMode
  5189  0692  3080               	movlw	128
  5190  0693  0251               	subwf	??_setComunicateMode,w
  5191  0694  1D03               	skipz
  5192  0695  2E99               	goto	u2195
  5193  0696  3012               	movlw	18
  5194  0697  0022               	movlb	2	; select bank2
  5195  0698  023A               	subwf	setComunicateMode@i^(0+256),w
  5196  0699                     u2195:	
  5197  0699  1803               	btfsc	3,0
  5198  069A  0008               	return
  5199                           
  5200                           ;comu_type.c: 41: if(comu_types[i] == m_type){
  5201  069B  0022               	movlb	2	; select bank2
  5202  069C  083A               	movf	setComunicateMode@i^(0+256),w
  5203  069D  3E20               	addlw	(low (_comu_types| (0+256)))& (0+255)
  5204  069E  0086               	movwf	6
  5205  069F  3001               	movlw	1	; select bank2/3
  5206  06A0  0087               	movwf	7
  5207  06A1  0801               	movf	1,w
  5208  06A2  0639               	xorwf	setComunicateMode@m_type^(0+256),w
  5209  06A3  1903               	btfsc	3,2
  5210  06A4  2EB0               	goto	l3351
  5211  06A5  2EC0               	goto	l3353
  5212  06A6                     l3341:	
  5213                           ;comu_type.c: 43: case 0:
  5214                           
  5215                           ;comu_type.c: 42: switch(i){
  5216                           
  5217                           
  5218                           ;comu_type.c: 44: Calibrate_download(spi1_Read_data);
  5219  06A6  0020               	movlb	0	; select bank0
  5220  06A7  086C               	movf	_spi1_Read_data,w
  5221  06A8  3181  21D8         	fcall	_Calibrate_download
  5222                           
  5223                           ;comu_type.c: 45: return 1;
  5224                           ;	Return value of _setComunicateMode is never used
  5225  06AA  0008               	return
  5226  06AB                     l3345:	
  5227                           ;comu_type.c: 46: case 1:
  5228                           
  5229                           
  5230                           ;comu_type.c: 47: readCargo(spi1_Read_data);
  5231  06AB  0020               	movlb	0	; select bank0
  5232  06AC  086C               	movf	_spi1_Read_data,w
  5233  06AD  3180  20A7         	fcall	_readCargo
  5234                           
  5235                           ;comu_type.c: 57: return 1;
  5236                           ;	Return value of _setComunicateMode is never used
  5237                           
  5238                           ;comu_type.c: 55: case 5:
  5239                           
  5240                           ;comu_type.c: 54: return 1;
  5241                           ;	Return value of _setComunicateMode is never used
  5242                           
  5243                           ;comu_type.c: 53: case 4:
  5244                           
  5245                           ;comu_type.c: 52: return 1;
  5246                           ;	Return value of _setComunicateMode is never used
  5247                           
  5248                           ;comu_type.c: 51: case 3:
  5249                           
  5250                           ;comu_type.c: 50: return 1;
  5251                           ;	Return value of _setComunicateMode is never used
  5252                           
  5253                           ;comu_type.c: 49: case 2:
  5254                           
  5255                           ;comu_type.c: 48: return 1;
  5256                           ;	Return value of _setComunicateMode is never used
  5257  06AF  0008               	return
  5258  06B0                     l3351:	
  5259                           ;comu_type.c: 59: }
  5260                           
  5261                           
  5262                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5263                           ; Switch size 1, requested type "space"
  5264                           ; Number of cases is 1, Range of values is 0 to 0
  5265                           ; switch strategies available:
  5266                           ; Name         Instructions Cycles
  5267                           ; simple_byte            4     3 (average)
  5268                           ; direct_byte            8     6 (fixed)
  5269                           ; jumptable            260     6 (fixed)
  5270                           ;	Chosen strategy is simple_byte
  5271  06B0  0022               	movlb	2	; select bank2
  5272  06B1  083B               	movf	(setComunicateMode@i+1)^(0+256),w
  5273  06B2  3A00               	xorlw	0	; case 0
  5274  06B3  1903               	skipnz
  5275  06B4  2EB6               	goto	l3749
  5276  06B5  2EC0               	goto	l3353
  5277  06B6                     l3749:	
  5278                           
  5279                           ; Switch size 1, requested type "space"
  5280                           ; Number of cases is 6, Range of values is 0 to 5
  5281                           ; switch strategies available:
  5282                           ; Name         Instructions Cycles
  5283                           ; direct_byte           18     6 (fixed)
  5284                           ; simple_byte           19    10 (average)
  5285                           ; jumptable            260     6 (fixed)
  5286                           ;	Chosen strategy is direct_byte
  5287  06B6  083A               	movf	setComunicateMode@i^(0+256),w
  5288  06B7  0084               	movwf	4
  5289  06B8  3006               	movlw	6
  5290  06B9  0204               	subwf	4,w
  5291  06BA  1803               	skipnc
  5292  06BB  2EC0               	goto	l3353
  5293  06BC  3188               	movlp	high S3751
  5294  06BD  3504               	lslf	4,w
  5295  06BE  3E34               	addlw	low S3751
  5296  06BF  0082               	movwf	2
  5297  06C0                     l3353:	
  5298  06C0  3001               	movlw	1
  5299  06C1  0022               	movlb	2	; select bank2
  5300  06C2  07BA               	addwf	setComunicateMode@i^(0+256),f
  5301  06C3  3000               	movlw	0
  5302  06C4  3DBB               	addwfc	(setComunicateMode@i+1)^(0+256),f
  5303  06C5  2E8E               	goto	L1
  5304  06C6                     l207:	
  5305                           ;comu_type.c: 60: }
  5306                           ;comu_type.c: 61: }
  5307                           ;comu_type.c: 62: return 0;
  5308                           ;	Return value of _setComunicateMode is never used
  5309                           
  5310  06C6  0008               	return
  5311  06C7                     __end_of_setComunicateMode:	
  5312                           
  5313                           	psect	swtext1
  5314  0834                     __pswtext1:	
  5315  0834                     S3751:	
  5316  0834  3186  2EA6         	ljmp	l3341
  5317  0836  3186  2EAB         	ljmp	l3345
  5318  0838  3186  2EC6         	ljmp	l207
  5319  083A  3186  2EC6         	ljmp	l207
  5320  083C  3186  2EC6         	ljmp	l207
  5321  083E  3186  2EC6         	ljmp	l207
  5322                           
  5323                           	psect	text6
  5324  00A7                     __ptext6:	
  5325 ;; *************** function _readCargo *****************
  5326 ;; Defined at:
  5327 ;;		line 14 in file "normal_mode.c"
  5328 ;; Parameters:    Size  Location     Type
  5329 ;;  spi1_Read_da    1    wreg     unsigned char 
  5330 ;; Auto vars:     Size  Location     Type
  5331 ;;  spi1_Read_da    1    6[BANK2 ] unsigned char 
  5332 ;;  buflong         4    0[BANK2 ] unsigned long 
  5333 ;;  bufint          2    4[BANK2 ] unsigned int 
  5334 ;; Return value:  Size  Location     Type
  5335 ;;                  1    wreg      void 
  5336 ;; Registers used:
  5337 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5338 ;; Tracked objects:
  5339 ;;		On entry : 0/0
  5340 ;;		On exit  : 0/0
  5341 ;;		Unchanged: 0/0
  5342 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5343 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5344 ;;      Locals:         0       0       0       7       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5345 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5346 ;;      Totals:         0       6       0       7       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5347 ;;Total ram usage:       13 bytes
  5348 ;; Hardware stack levels used:    1
  5349 ;; Hardware stack levels required when called:    5
  5350 ;; This function calls:
  5351 ;;		_TransLong256To255
  5352 ;;		_clutchaction
  5353 ;;		_getCargoData
  5354 ;;		_restartCargo
  5355 ;; This function is called by:
  5356 ;;		_setComunicateMode
  5357 ;; This function uses a non-reentrant model
  5358 ;;
  5359                           
  5360                           
  5361                           ;psect for function _readCargo
  5362  00A7                     _readCargo:	
  5363                           
  5364                           ;incstack = 0
  5365                           ; Regs used in _readCargo: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5366                           ;readCargo@spi1_Read_data stored from wreg
  5367  00A7  0022               	movlb	2	; select bank2
  5368  00A8  00B8               	movwf	readCargo@spi1_Read_data^(0+256)
  5369                           
  5370                           ;normal_mode.c: 15: unsigned int bufint = spi1_Read_data;
  5371  00A9  0838               	movf	readCargo@spi1_Read_data^(0+256),w
  5372  00AA  0020               	movlb	0	; select bank0
  5373  00AB  00CB               	movwf	??_readCargo
  5374  00AC  01CC               	clrf	??_readCargo+1
  5375  00AD  084B               	movf	??_readCargo,w
  5376  00AE  0022               	movlb	2	; select bank2
  5377  00AF  00B6               	movwf	readCargo@bufint^(0+256)
  5378  00B0  0020               	movlb	0	; select bank0
  5379  00B1  084C               	movf	??_readCargo+1,w
  5380  00B2  0022               	movlb	2	; select bank2
  5381  00B3  00B7               	movwf	(readCargo@bufint+1)^(0+256)
  5382                           
  5383                           ;normal_mode.c: 16: unsigned long buflong = spi1_Read_data;
  5384  00B4  0838               	movf	readCargo@spi1_Read_data^(0+256),w
  5385  00B5  0020               	movlb	0	; select bank0
  5386  00B6  00CB               	movwf	??_readCargo
  5387  00B7  01CC               	clrf	??_readCargo+1
  5388  00B8  01CD               	clrf	??_readCargo+2
  5389  00B9  01CE               	clrf	??_readCargo+3
  5390  00BA  084E               	movf	??_readCargo+3,w
  5391  00BB  0022               	movlb	2	; select bank2
  5392  00BC  00B5               	movwf	(readCargo@buflong+3)^(0+256)
  5393  00BD  0020               	movlb	0	; select bank0
  5394  00BE  084D               	movf	??_readCargo+2,w
  5395  00BF  0022               	movlb	2	; select bank2
  5396  00C0  00B4               	movwf	(readCargo@buflong+2)^(0+256)
  5397  00C1  0020               	movlb	0	; select bank0
  5398  00C2  084C               	movf	??_readCargo+1,w
  5399  00C3  0022               	movlb	2	; select bank2
  5400  00C4  00B3               	movwf	(readCargo@buflong+1)^(0+256)
  5401  00C5  0020               	movlb	0	; select bank0
  5402  00C6  084B               	movf	??_readCargo,w
  5403  00C7  0022               	movlb	2	; select bank2
  5404  00C8  00B2               	movwf	readCargo@buflong^(0+256)
  5405                           
  5406                           ;normal_mode.c: 17: cargoData = getCargoData();
  5407  00C9  318F  276F  3180   	fcall	_getCargoData
  5408  00CC  0020               	movlb	0	; select bank0
  5409  00CD  3020               	movlw	low ?_getCargoData
  5410  00CE  0086               	movwf	6
  5411  00CF  3000               	movlw	high ?_getCargoData
  5412  00D0  0087               	movwf	7
  5413  00D1  3052               	movlw	low _cargoData
  5414  00D2  0084               	movwf	4
  5415  00D3  3000               	movlw	high _cargoData
  5416  00D4  0085               	movwf	5
  5417  00D5  3010               	movlw	16
  5418  00D6  00CB               	movwf	??_readCargo
  5419  00D7                     u2080:	
  5420  00D7  0016               	moviw fsr1++
  5421  00D8  001A               	movwi fsr0++
  5422  00D9  0BCB               	decfsz	??_readCargo,f
  5423  00DA  28D7               	goto	u2080
  5424                           
  5425                           ;normal_mode.c: 18: if(isMycargo){
  5426  00DB  1970               	btfsc	_isMycargo/(0+8),_isMycargo& (0+7)
  5427  00DC  29B4               	goto	l3229
  5428  00DD  29C3               	goto	l3231
  5429  00DE                     l3187:	
  5430                           ;normal_mode.c: 20: case 0:
  5431                           
  5432                           ;normal_mode.c: 19: switch(countabuf){
  5433                           
  5434                           
  5435                           ;normal_mode.c: 21: cargoData.cargoLength = (bufint << 8 | 0x00FF);
  5436  00DE  0022               	movlb	2	; select bank2
  5437  00DF  0836               	movf	readCargo@bufint^(0+256),w
  5438  00E0  0020               	movlb	0	; select bank0
  5439  00E1  00CC               	movwf	??_readCargo+1
  5440  00E2  01CB               	clrf	??_readCargo
  5441  00E3  30FF               	movlw	255
  5442  00E4  044B               	iorwf	??_readCargo,w
  5443  00E5  00D2               	movwf	_cargoData
  5444  00E6  3000               	movlw	0
  5445  00E7  044C               	iorwf	??_readCargo+1,w
  5446  00E8  28F8               	goto	L2
  5447  00E9                     l3189:	
  5448                           ;normal_mode.c: 23: case 1:
  5449                           
  5450                           ;normal_mode.c: 22: break;
  5451                           
  5452                           
  5453                           ;normal_mode.c: 24: cargoData.cargoLength = cargoData.cargoLength & (bufint | 0xFF00);
  5454  00E9  3000               	movlw	0
  5455  00EA  0022               	movlb	2	; select bank2
  5456  00EB  0436               	iorwf	readCargo@bufint^(0+256),w
  5457  00EC  0020               	movlb	0	; select bank0
  5458  00ED  00CB               	movwf	??_readCargo
  5459  00EE  30FF               	movlw	255
  5460  00EF  0022               	movlb	2	; select bank2
  5461  00F0  0437               	iorwf	(readCargo@bufint+1)^(0+256),w
  5462  00F1  0020               	movlb	0	; select bank0
  5463  00F2  00CC               	movwf	??_readCargo+1
  5464  00F3  0852               	movf	_cargoData,w
  5465  00F4  054B               	andwf	??_readCargo,w
  5466  00F5  00D2               	movwf	_cargoData
  5467  00F6  0853               	movf	_cargoData+1,w
  5468  00F7  054C               	andwf	??_readCargo+1,w
  5469  00F8                     L2:	
  5470  00F8  00D3               	movwf	_cargoData+1
  5471                           
  5472                           ;normal_mode.c: 25: break;
  5473  00F9  29C3               	goto	l3231
  5474  00FA                     l3191:	
  5475                           ;normal_mode.c: 26: case 2:
  5476                           
  5477                           
  5478                           ;normal_mode.c: 27: cargoData.command = spi1_Read_data;
  5479  00FA  0022               	movlb	2	; select bank2
  5480  00FB  0838               	movf	readCargo@spi1_Read_data^(0+256),w
  5481  00FC  0020               	movlb	0	; select bank0
  5482  00FD  00CB               	movwf	??_readCargo
  5483  00FE  084B               	movf	??_readCargo,w
  5484  00FF  00D4               	movwf	_cargoData+2
  5485                           
  5486                           ;normal_mode.c: 28: break;
  5487  0100  29C3               	goto	l3231
  5488  0101                     l3193:	
  5489                           ;normal_mode.c: 29: case 3:
  5490                           
  5491                           
  5492                           ;normal_mode.c: 30: cargoData.index = spi1_Read_data;
  5493  0101  0022               	movlb	2	; select bank2
  5494  0102  0838               	movf	readCargo@spi1_Read_data^(0+256),w
  5495  0103  0020               	movlb	0	; select bank0
  5496  0104  00CB               	movwf	??_readCargo
  5497  0105  084B               	movf	??_readCargo,w
  5498  0106  00D5               	movwf	_cargoData+3
  5499                           
  5500                           ;normal_mode.c: 31: break;
  5501  0107  29C3               	goto	l3231
  5502  0108                     l3195:	
  5503                           ;normal_mode.c: 32: case 4:
  5504                           
  5505                           
  5506                           ;normal_mode.c: 33: cargoData.address = spi1_Read_data;
  5507  0108  0022               	movlb	2	; select bank2
  5508  0109  0838               	movf	readCargo@spi1_Read_data^(0+256),w
  5509  010A  0020               	movlb	0	; select bank0
  5510  010B  00CB               	movwf	??_readCargo
  5511  010C  084B               	movf	??_readCargo,w
  5512  010D  00D6               	movwf	_cargoData+4
  5513                           
  5514                           ;normal_mode.c: 34: if(cargoData.address != linkInfo.My_address){
  5515  010E  0856               	movf	_cargoData+4,w
  5516  010F  0021               	movlb	1	; select bank1
  5517  0110  064D               	xorwf	_linkInfo^(0+128),w
  5518  0111  1903               	skipnz
  5519  0112  29C3               	goto	l3231
  5520                           
  5521                           ;normal_mode.c: 35: restartCargo();
  5522  0113  318E  26F4  3180   	fcall	_restartCargo
  5523                           
  5524                           ;normal_mode.c: 36: isMycargo = 0;
  5525  0116  1170               	bcf	_isMycargo/(0+8),_isMycargo& (0+7)
  5526                           
  5527                           ;normal_mode.c: 38: }
  5528                           ;normal_mode.c: 39: break;
  5529                           
  5530                           ;normal_mode.c: 37: }else{
  5531  0117  29C3               	goto	l3231
  5532  0118                     l3201:	
  5533                           ;normal_mode.c: 40: case 5:
  5534                           
  5535                           
  5536                           ;normal_mode.c: 41: spi2_Send_data = (cargoData.linkAngleTo >> 8 & 0x00ff);
  5537  0118  0020               	movlb	0	; select bank0
  5538  0119  0858               	movf	_cargoData+6,w
  5539  011A  29B0               	goto	L12
  5540  011B                     l3203:	
  5541                           ;normal_mode.c: 43: case 6:
  5542                           
  5543                           ;normal_mode.c: 42: break;
  5544                           
  5545                           
  5546                           ;normal_mode.c: 44: spi2_Send_data = (cargoData.linkAngleTo & 0x00ff);
  5547  011B  0857               	movf	_cargoData+5,w
  5548  011C  29B0               	goto	L12
  5549  011D                     l3205:	
  5550                           ;normal_mode.c: 46: case 7:
  5551                           
  5552                           ;normal_mode.c: 45: break;
  5553                           
  5554                           
  5555                           ;normal_mode.c: 47: spi2_Send_data = (cargoData.linkAngleBack >> 8 & 0x00ff);
  5556  011D  085A               	movf	_cargoData+8,w
  5557  011E  29B0               	goto	L12
  5558  011F                     l3207:	
  5559                           ;normal_mode.c: 49: case 8:
  5560                           
  5561                           ;normal_mode.c: 48: break;
  5562                           
  5563                           
  5564                           ;normal_mode.c: 50: spi2_Send_data = (cargoData.linkAngleBack & 0x00ff);
  5565  011F  0859               	movf	_cargoData+7,w
  5566  0120  29B0               	goto	L12
  5567  0121                     l3209:	
  5568                           ;normal_mode.c: 52: case 9:
  5569                           
  5570                           ;normal_mode.c: 51: break;
  5571                           
  5572                           
  5573                           ;normal_mode.c: 53: spi2_Send_data = (cargoData.passedTime >> 8 & 0x00ff);
  5574  0121  085C               	movf	_cargoData+10,w
  5575  0122  29B0               	goto	L12
  5576  0123                     l3211:	
  5577                           ;normal_mode.c: 55: case 10:
  5578                           
  5579                           ;normal_mode.c: 54: break;
  5580                           
  5581                           
  5582                           ;normal_mode.c: 56: spi2_Send_data = (cargoData.passedTime & 0x00ff);
  5583  0123  085B               	movf	_cargoData+9,w
  5584  0124  29B0               	goto	L12
  5585  0125                     l3213:	
  5586                           ;normal_mode.c: 58: case 11:
  5587                           
  5588                           ;normal_mode.c: 57: break;
  5589                           
  5590                           
  5591                           ;normal_mode.c: 59: cargoData.clutchMode = spi1_Read_data;
  5592  0125  0022               	movlb	2	; select bank2
  5593  0126  0838               	movf	readCargo@spi1_Read_data^(0+256),w
  5594  0127  0020               	movlb	0	; select bank0
  5595  0128  00CB               	movwf	??_readCargo
  5596  0129  084B               	movf	??_readCargo,w
  5597  012A  00DD               	movwf	_cargoData+11
  5598                           
  5599                           ;normal_mode.c: 60: clutchaction(cargoData.clutchMode);
  5600  012B  085D               	movf	_cargoData+11,w
  5601  012C  318F  2722  3180   	fcall	_clutchaction
  5602                           
  5603                           ;normal_mode.c: 61: break;
  5604  012F  29C3               	goto	l3231
  5605  0130                     l3217:	
  5606                           ;normal_mode.c: 62: case 12:
  5607                           
  5608                           
  5609                           ;normal_mode.c: 63: cargoData.WorkingCount++;
  5610  0130  3001               	movlw	1
  5611  0131  0020               	movlb	0	; select bank0
  5612  0132  07DE               	addwf	_cargoData+12,f
  5613  0133  3000               	movlw	0
  5614  0134  3DDF               	addwfc	_cargoData+13,f
  5615  0135  3000               	movlw	0
  5616  0136  3DE0               	addwfc	_cargoData+14,f
  5617  0137  3000               	movlw	0
  5618  0138  3DE1               	addwfc	_cargoData+15,f
  5619                           
  5620                           ;normal_mode.c: 64: spi2_Send_data = (TransLong256To255(cargoData.WorkingCount) >> 24 & 
      +                          0x000000ff);
  5621  0139  300C               	movlw	12
  5622  013A  3E52               	addlw	(low (_cargoData| 0))& (0+255)
  5623  013B  0086               	movwf	6
  5624  013C  0187               	clrf	7
  5625  013D  3F40               	moviw [0]fsr1
  5626  013E  00AF               	movwf	TransLong256To255@data
  5627  013F  3F41               	moviw [1]fsr1
  5628  0140  00B0               	movwf	TransLong256To255@data+1
  5629  0141  3F42               	moviw [2]fsr1
  5630  0142  00B1               	movwf	TransLong256To255@data+2
  5631  0143  3F43               	moviw [3]fsr1
  5632  0144  00B2               	movwf	TransLong256To255@data+3
  5633  0145  3183  2304  3180   	fcall	_TransLong256To255
  5634  0148  0020               	movlb	0	; select bank0
  5635  0149  082F               	movf	?_TransLong256To255,w
  5636  014A  00CB               	movwf	??_readCargo
  5637  014B  0830               	movf	?_TransLong256To255+1,w
  5638  014C  00CC               	movwf	??_readCargo+1
  5639  014D  0831               	movf	?_TransLong256To255+2,w
  5640  014E  00CD               	movwf	??_readCargo+2
  5641  014F  0832               	movf	?_TransLong256To255+3,w
  5642  0150  00CE               	movwf	??_readCargo+3
  5643  0151  3018               	movlw	24
  5644  0152  00CF               	movwf	??_readCargo+4
  5645  0153                     u2115:	
  5646  0153  37CE               	asrf	??_readCargo+3,f
  5647  0154  0CCD               	rrf	??_readCargo+2,f
  5648  0155  0CCC               	rrf	??_readCargo+1,f
  5649  0156  0CCB               	rrf	??_readCargo,f
  5650  0157  0BCF               	decfsz	??_readCargo+4,f
  5651  0158  2953               	goto	u2115
  5652  0159  299B               	goto	L14
  5653  015A                     l3221:	
  5654                           ;normal_mode.c: 66: case 13:
  5655                           
  5656                           ;normal_mode.c: 65: break;
  5657                           
  5658                           
  5659                           ;normal_mode.c: 67: spi2_Send_data = (TransLong256To255(cargoData.WorkingCount) >> 16 & 
      +                          0x000000ff);
  5660  015A  300C               	movlw	12
  5661  015B  3E52               	addlw	(low (_cargoData| 0))& (0+255)
  5662  015C  0086               	movwf	6
  5663  015D  0187               	clrf	7
  5664  015E  3F40               	moviw [0]fsr1
  5665  015F  00AF               	movwf	TransLong256To255@data
  5666  0160  3F41               	moviw [1]fsr1
  5667  0161  00B0               	movwf	TransLong256To255@data+1
  5668  0162  3F42               	moviw [2]fsr1
  5669  0163  00B1               	movwf	TransLong256To255@data+2
  5670  0164  3F43               	moviw [3]fsr1
  5671  0165  00B2               	movwf	TransLong256To255@data+3
  5672  0166  3183  2304  3180   	fcall	_TransLong256To255
  5673  0169  0020               	movlb	0	; select bank0
  5674  016A  082F               	movf	?_TransLong256To255,w
  5675  016B  00CB               	movwf	??_readCargo
  5676  016C  0830               	movf	?_TransLong256To255+1,w
  5677  016D  00CC               	movwf	??_readCargo+1
  5678  016E  0831               	movf	?_TransLong256To255+2,w
  5679  016F  00CD               	movwf	??_readCargo+2
  5680  0170  0832               	movf	?_TransLong256To255+3,w
  5681  0171  00CE               	movwf	??_readCargo+3
  5682  0172  3010               	movlw	16
  5683  0173  00CF               	movwf	??_readCargo+4
  5684  0174                     u2125:	
  5685  0174  37CE               	asrf	??_readCargo+3,f
  5686  0175  0CCD               	rrf	??_readCargo+2,f
  5687  0176  0CCC               	rrf	??_readCargo+1,f
  5688  0177  0CCB               	rrf	??_readCargo,f
  5689  0178  0BCF               	decfsz	??_readCargo+4,f
  5690  0179  2974               	goto	u2125
  5691  017A  299B               	goto	L14
  5692  017B                     l3223:	
  5693                           ;normal_mode.c: 69: case 14:
  5694                           
  5695                           ;normal_mode.c: 68: break;
  5696                           
  5697                           
  5698                           ;normal_mode.c: 70: spi2_Send_data = (TransLong256To255(cargoData.WorkingCount) >> 8 & 0
      +                          x000000ff);
  5699  017B  300C               	movlw	12
  5700  017C  3E52               	addlw	(low (_cargoData| 0))& (0+255)
  5701  017D  0086               	movwf	6
  5702  017E  0187               	clrf	7
  5703  017F  3F40               	moviw [0]fsr1
  5704  0180  00AF               	movwf	TransLong256To255@data
  5705  0181  3F41               	moviw [1]fsr1
  5706  0182  00B0               	movwf	TransLong256To255@data+1
  5707  0183  3F42               	moviw [2]fsr1
  5708  0184  00B1               	movwf	TransLong256To255@data+2
  5709  0185  3F43               	moviw [3]fsr1
  5710  0186  00B2               	movwf	TransLong256To255@data+3
  5711  0187  3183  2304  3180   	fcall	_TransLong256To255
  5712  018A  0020               	movlb	0	; select bank0
  5713  018B  082F               	movf	?_TransLong256To255,w
  5714  018C  00CB               	movwf	??_readCargo
  5715  018D  0830               	movf	?_TransLong256To255+1,w
  5716  018E  00CC               	movwf	??_readCargo+1
  5717  018F  0831               	movf	?_TransLong256To255+2,w
  5718  0190  00CD               	movwf	??_readCargo+2
  5719  0191  0832               	movf	?_TransLong256To255+3,w
  5720  0192  00CE               	movwf	??_readCargo+3
  5721  0193  3008               	movlw	8
  5722  0194  00CF               	movwf	??_readCargo+4
  5723  0195                     u2135:	
  5724  0195  37CE               	asrf	??_readCargo+3,f
  5725  0196  0CCD               	rrf	??_readCargo+2,f
  5726  0197  0CCC               	rrf	??_readCargo+1,f
  5727  0198  0CCB               	rrf	??_readCargo,f
  5728  0199  0BCF               	decfsz	??_readCargo+4,f
  5729  019A  2995               	goto	u2135
  5730  019B                     L14:	
  5731  019B  084B               	movf	??_readCargo,w
  5732  019C  00D0               	movwf	??_readCargo+5
  5733  019D  0850               	movf	??_readCargo+5,w
  5734  019E  29B2               	goto	L11
  5735  019F                     l3225:	
  5736                           ;normal_mode.c: 72: case 15:
  5737                           
  5738                           ;normal_mode.c: 71: break;
  5739                           
  5740                           
  5741                           ;normal_mode.c: 73: spi2_Send_data = (TransLong256To255(cargoData.WorkingCount) & 0x0000
      +                          00ff);
  5742  019F  300C               	movlw	12
  5743  01A0  3E52               	addlw	(low (_cargoData| 0))& (0+255)
  5744  01A1  0086               	movwf	6
  5745  01A2  0187               	clrf	7
  5746  01A3  3F40               	moviw [0]fsr1
  5747  01A4  00AF               	movwf	TransLong256To255@data
  5748  01A5  3F41               	moviw [1]fsr1
  5749  01A6  00B0               	movwf	TransLong256To255@data+1
  5750  01A7  3F42               	moviw [2]fsr1
  5751  01A8  00B1               	movwf	TransLong256To255@data+2
  5752  01A9  3F43               	moviw [3]fsr1
  5753  01AA  00B2               	movwf	TransLong256To255@data+3
  5754  01AB  3183  2304  3180   	fcall	_TransLong256To255
  5755  01AE  0020               	movlb	0	; select bank0
  5756  01AF  082F               	movf	?_TransLong256To255,w
  5757  01B0                     L12:	
  5758  01B0  00CB               	movwf	??_readCargo
  5759  01B1  084B               	movf	??_readCargo,w
  5760  01B2                     L11:	
  5761  01B2  00ED               	movwf	_spi2_Send_data
  5762                           
  5763                           ;normal_mode.c: 75: }
  5764                           
  5765                           ;normal_mode.c: 74: break;
  5766  01B3  29C3               	goto	l3231
  5767  01B4                     l3229:	
  5768                           
  5769                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5770                           ; Switch size 1, requested type "space"
  5771                           ; Number of cases is 1, Range of values is 0 to 0
  5772                           ; switch strategies available:
  5773                           ; Name         Instructions Cycles
  5774                           ; simple_byte            4     3 (average)
  5775                           ; direct_byte            8     6 (fixed)
  5776                           ; jumptable            260     6 (fixed)
  5777                           ;	Chosen strategy is simple_byte
  5778  01B4  0869               	movf	_countabuf+1,w
  5779  01B5  3A00               	xorlw	0	; case 0
  5780  01B6  1903               	skipnz
  5781  01B7  29B9               	goto	l3753
  5782  01B8  29C3               	goto	l3231
  5783  01B9                     l3753:	
  5784                           
  5785                           ; Switch size 1, requested type "space"
  5786                           ; Number of cases is 16, Range of values is 0 to 15
  5787                           ; switch strategies available:
  5788                           ; Name         Instructions Cycles
  5789                           ; direct_byte           38     6 (fixed)
  5790                           ; simple_byte           49    25 (average)
  5791                           ; jumptable            260     6 (fixed)
  5792                           ;	Chosen strategy is direct_byte
  5793  01B9  0868               	movf	_countabuf,w
  5794  01BA  0084               	movwf	4
  5795  01BB  3010               	movlw	16
  5796  01BC  0204               	subwf	4,w
  5797  01BD  1803               	skipnc
  5798  01BE  29C3               	goto	l3231
  5799  01BF  3188               	movlp	high S3755
  5800  01C0  3504               	lslf	4,w
  5801  01C1  3E00               	addlw	low S3755
  5802  01C2  0082               	movwf	2
  5803  01C3                     l3231:	
  5804                           
  5805                           ;normal_mode.c: 76: }
  5806                           ;normal_mode.c: 78: countabuf++;
  5807  01C3  3001               	movlw	1
  5808  01C4  0020               	movlb	0	; select bank0
  5809  01C5  07E8               	addwf	_countabuf,f
  5810  01C6  3000               	movlw	0
  5811  01C7  3DE9               	addwfc	_countabuf+1,f
  5812                           
  5813                           ;normal_mode.c: 79: if(cargoData.cargoLength <= countabuf){
  5814  01C8  0853               	movf	_cargoData+1,w
  5815  01C9  0269               	subwf	_countabuf+1,w
  5816  01CA  1D03               	skipz
  5817  01CB  29CE               	goto	u2145
  5818  01CC  0852               	movf	_cargoData,w
  5819  01CD  0268               	subwf	_countabuf,w
  5820  01CE                     u2145:	
  5821  01CE  1C03               	skipc
  5822  01CF  0008               	return
  5823                           
  5824                           ;normal_mode.c: 80: cargoData.cargoLength = 0xFFFF;
  5825  01D0  30FF               	movlw	255
  5826  01D1  00D2               	movwf	_cargoData
  5827  01D2  30FF               	movlw	255
  5828  01D3  00D3               	movwf	_cargoData+1
  5829                           
  5830                           ;normal_mode.c: 81: countabuf = 0;
  5831  01D4  01E8               	clrf	_countabuf
  5832  01D5  01E9               	clrf	_countabuf+1
  5833                           
  5834                           ;normal_mode.c: 82: isMycargo = 1;
  5835  01D6  1570               	bsf	_isMycargo/(0+8),_isMycargo& (0+7)
  5836  01D7  0008               	return
  5837  01D8                     __end_of_readCargo:	
  5838                           
  5839                           	psect	swtext2
  5840  0800                     __pswtext2:	
  5841  0800                     S3755:	
  5842  0800  3180  28DE         	ljmp	l3187
  5843  0802  3180  28E9         	ljmp	l3189
  5844  0804  3180  28FA         	ljmp	l3191
  5845  0806  3181  2901         	ljmp	l3193
  5846  0808  3181  2908         	ljmp	l3195
  5847  080A  3181  2918         	ljmp	l3201
  5848  080C  3181  291B         	ljmp	l3203
  5849  080E  3181  291D         	ljmp	l3205
  5850  0810  3181  291F         	ljmp	l3207
  5851  0812  3181  2921         	ljmp	l3209
  5852  0814  3181  2923         	ljmp	l3211
  5853  0816  3181  2925         	ljmp	l3213
  5854  0818  3181  2930         	ljmp	l3217
  5855  081A  3181  295A         	ljmp	l3221
  5856  081C  3181  297B         	ljmp	l3223
  5857  081E  3181  299F         	ljmp	l3225
  5858                           
  5859                           	psect	text7
  5860  0F22                     __ptext7:	
  5861 ;; *************** function _clutchaction *****************
  5862 ;; Defined at:
  5863 ;;		line 68 in file "command.c"
  5864 ;; Parameters:    Size  Location     Type
  5865 ;;  comannd         1    wreg     unsigned char 
  5866 ;; Auto vars:     Size  Location     Type
  5867 ;;  comannd         1    0[BANK0 ] unsigned char 
  5868 ;; Return value:  Size  Location     Type
  5869 ;;		None               void
  5870 ;; Registers used:
  5871 ;;		wreg, status,2, status,0
  5872 ;; Tracked objects:
  5873 ;;		On entry : 0/0
  5874 ;;		On exit  : 0/0
  5875 ;;		Unchanged: 0/0
  5876 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5877 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5878 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5879 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5880 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5881 ;;Total ram usage:        1 bytes
  5882 ;; Hardware stack levels used:    1
  5883 ;; Hardware stack levels required when called:    3
  5884 ;; This function calls:
  5885 ;;		Nothing
  5886 ;; This function is called by:
  5887 ;;		_readCargo
  5888 ;; This function uses a non-reentrant model
  5889 ;;
  5890                           
  5891                           
  5892                           ;psect for function _clutchaction
  5893  0F22                     _clutchaction:	
  5894                           
  5895                           ;incstack = 0
  5896                           ; Regs used in _clutchaction: [wreg+status,2+status,0]
  5897                           ;clutchaction@comannd stored from wreg
  5898  0F22  0020               	movlb	0	; select bank0
  5899  0F23  00A0               	movwf	clutchaction@comannd
  5900                           
  5901                           ;command.c: 69: if(comannd == 1){
  5902  0F24  0320               	decf	clutchaction@comannd,w
  5903  0F25  1D03               	btfss	3,2
  5904  0F26  2F2A               	goto	l184
  5905                           
  5906                           ;command.c: 70: LATAbits.LATA0 = 1;
  5907  0F27  0022               	movlb	2	; select bank2
  5908  0F28  140C               	bsf	12,0	;volatile
  5909                           
  5910                           ;command.c: 71: }else{
  5911  0F29  0008               	return
  5912  0F2A                     l184:	
  5913                           
  5914                           ;command.c: 72: LATAbits.LATA0 = 0;
  5915  0F2A  0022               	movlb	2	; select bank2
  5916  0F2B  100C               	bcf	12,0	;volatile
  5917  0F2C  0008               	return
  5918  0F2D                     __end_of_clutchaction:	
  5919                           
  5920                           	psect	text8
  5921  01D8                     __ptext8:	
  5922 ;; *************** function _Calibrate_download *****************
  5923 ;; Defined at:
  5924 ;;		line 65 in file "calibrate_mode.c"
  5925 ;; Parameters:    Size  Location     Type
  5926 ;;  spi_Read_dat    1    wreg     unsigned char 
  5927 ;; Auto vars:     Size  Location     Type
  5928 ;;  spi_Read_dat    1    6[BANK2 ] unsigned char 
  5929 ;;  buflong         4    0[BANK2 ] unsigned long 
  5930 ;;  bufint          2    4[BANK2 ] unsigned int 
  5931 ;; Return value:  Size  Location     Type
  5932 ;;                  1    wreg      void 
  5933 ;; Registers used:
  5934 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5935 ;; Tracked objects:
  5936 ;;		On entry : 0/0
  5937 ;;		On exit  : 0/0
  5938 ;;		Unchanged: 0/0
  5939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5940 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5941 ;;      Locals:         0       0       0       7       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5942 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5943 ;;      Totals:         0       6       0       7       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5944 ;;Total ram usage:       13 bytes
  5945 ;; Hardware stack levels used:    1
  5946 ;; Hardware stack levels required when called:    5
  5947 ;; This function calls:
  5948 ;;		_InitCalibrate
  5949 ;;		_TransLong256To255
  5950 ;;		_isEndpoint
  5951 ;; This function is called by:
  5952 ;;		_setComunicateMode
  5953 ;; This function uses a non-reentrant model
  5954 ;;
  5955                           
  5956                           
  5957                           ;psect for function _Calibrate_download
  5958  01D8                     _Calibrate_download:	
  5959                           
  5960                           ;incstack = 0
  5961                           ; Regs used in _Calibrate_download: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5962                           ;Calibrate_download@spi_Read_data stored from wreg
  5963  01D8  0022               	movlb	2	; select bank2
  5964  01D9  00B8               	movwf	Calibrate_download@spi_Read_data^(0+256)
  5965                           
  5966                           ;calibrate_mode.c: 67: unsigned int bufint = spi_Read_data;
  5967  01DA  0838               	movf	Calibrate_download@spi_Read_data^(0+256),w
  5968  01DB  0020               	movlb	0	; select bank0
  5969  01DC  00CB               	movwf	??_Calibrate_download
  5970  01DD  01CC               	clrf	??_Calibrate_download+1
  5971  01DE  084B               	movf	??_Calibrate_download,w
  5972  01DF  0022               	movlb	2	; select bank2
  5973  01E0  00B6               	movwf	Calibrate_download@bufint^(0+256)
  5974  01E1  0020               	movlb	0	; select bank0
  5975  01E2  084C               	movf	??_Calibrate_download+1,w
  5976  01E3  0022               	movlb	2	; select bank2
  5977  01E4  00B7               	movwf	(Calibrate_download@bufint+1)^(0+256)
  5978                           
  5979                           ;calibrate_mode.c: 68: unsigned long buflong = spi_Read_data;
  5980  01E5  0838               	movf	Calibrate_download@spi_Read_data^(0+256),w
  5981  01E6  0020               	movlb	0	; select bank0
  5982  01E7  00CB               	movwf	??_Calibrate_download
  5983  01E8  01CC               	clrf	??_Calibrate_download+1
  5984  01E9  01CD               	clrf	??_Calibrate_download+2
  5985  01EA  01CE               	clrf	??_Calibrate_download+3
  5986  01EB  084E               	movf	??_Calibrate_download+3,w
  5987  01EC  0022               	movlb	2	; select bank2
  5988  01ED  00B5               	movwf	(Calibrate_download@buflong+3)^(0+256)
  5989  01EE  0020               	movlb	0	; select bank0
  5990  01EF  084D               	movf	??_Calibrate_download+2,w
  5991  01F0  0022               	movlb	2	; select bank2
  5992  01F1  00B4               	movwf	(Calibrate_download@buflong+2)^(0+256)
  5993  01F2  0020               	movlb	0	; select bank0
  5994  01F3  084C               	movf	??_Calibrate_download+1,w
  5995  01F4  0022               	movlb	2	; select bank2
  5996  01F5  00B3               	movwf	(Calibrate_download@buflong+1)^(0+256)
  5997  01F6  0020               	movlb	0	; select bank0
  5998  01F7  084B               	movf	??_Calibrate_download,w
  5999  01F8  0022               	movlb	2	; select bank2
  6000  01F9  00B2               	movwf	Calibrate_download@buflong^(0+256)
  6001                           
  6002                           ;calibrate_mode.c: 69: isEndpoint();
  6003  01FA  3186  26C7  3181   	fcall	_isEndpoint
  6004                           
  6005                           ;calibrate_mode.c: 70: switch(countabuf){
  6006  01FD  2AD9               	goto	l3155
  6007  01FE                     l3119:	
  6008                           ;calibrate_mode.c: 71: case 0:
  6009                           
  6010                           
  6011                           ;calibrate_mode.c: 72: InitCalibrate();
  6012  01FE  3187  2784  3181   	fcall	_InitCalibrate
  6013                           
  6014                           ;calibrate_mode.c: 73: calibdata.cargoLength = (bufint << 8 | 0x00FF);
  6015  0201  0022               	movlb	2	; select bank2
  6016  0202  0836               	movf	Calibrate_download@bufint^(0+256),w
  6017  0203  0020               	movlb	0	; select bank0
  6018  0204  00CC               	movwf	??_Calibrate_download+1
  6019  0205  01CB               	clrf	??_Calibrate_download
  6020  0206  30FF               	movlw	255
  6021  0207  044B               	iorwf	??_Calibrate_download,w
  6022  0208  0021               	movlb	1	; select bank1
  6023  0209  00C4               	movwf	_calibdata^(0+128)
  6024  020A  3000               	movlw	0
  6025  020B  0020               	movlb	0	; select bank0
  6026  020C  044C               	iorwf	??_Calibrate_download+1,w
  6027  020D  2A21               	goto	L15
  6028  020E                     l3125:	
  6029                           ;calibrate_mode.c: 76: case 1:
  6030                           
  6031                           ;calibrate_mode.c: 75: break;
  6032                           
  6033                           ;calibrate_mode.c: 74: spi2_Send_data = spi_Read_data;
  6034                           
  6035                           
  6036                           ;calibrate_mode.c: 77: calibdata.cargoLength = calibdata.cargoLength & (bufint | 0xFF00)
      +                          ;
  6037  020E  3000               	movlw	0
  6038  020F  0022               	movlb	2	; select bank2
  6039  0210  0436               	iorwf	Calibrate_download@bufint^(0+256),w
  6040  0211  0020               	movlb	0	; select bank0
  6041  0212  00CB               	movwf	??_Calibrate_download
  6042  0213  30FF               	movlw	255
  6043  0214  0022               	movlb	2	; select bank2
  6044  0215  0437               	iorwf	(Calibrate_download@bufint+1)^(0+256),w
  6045  0216  0020               	movlb	0	; select bank0
  6046  0217  00CC               	movwf	??_Calibrate_download+1
  6047  0218  0021               	movlb	1	; select bank1
  6048  0219  0844               	movf	_calibdata^(0+128),w
  6049  021A  0020               	movlb	0	; select bank0
  6050  021B  054B               	andwf	??_Calibrate_download,w
  6051  021C  0021               	movlb	1	; select bank1
  6052  021D  00C4               	movwf	_calibdata^(0+128)
  6053  021E  0845               	movf	(_calibdata+1)^(0+128),w
  6054  021F  0020               	movlb	0	; select bank0
  6055  0220  054C               	andwf	??_Calibrate_download+1,w
  6056  0221                     L15:	
  6057  0221  0021               	movlb	1	; select bank1
  6058  0222  00C5               	movwf	(_calibdata+1)^(0+128)
  6059  0223  2A33               	goto	L17
  6060  0224                     l3127:	
  6061                           ;calibrate_mode.c: 80: case 2:
  6062                           
  6063                           ;calibrate_mode.c: 79: break;
  6064                           
  6065                           ;calibrate_mode.c: 78: spi2_Send_data = spi_Read_data;
  6066                           
  6067                           
  6068                           ;calibrate_mode.c: 81: calibdata.command = spi_Read_data;
  6069  0224  0022               	movlb	2	; select bank2
  6070  0225  0838               	movf	Calibrate_download@spi_Read_data^(0+256),w
  6071  0226  0020               	movlb	0	; select bank0
  6072  0227  00CB               	movwf	??_Calibrate_download
  6073  0228  084B               	movf	??_Calibrate_download,w
  6074  0229  0021               	movlb	1	; select bank1
  6075  022A  00C6               	movwf	(_calibdata^(0+128)+2)
  6076  022B  2A33               	goto	L17
  6077  022C                     l3129:	
  6078                           ;calibrate_mode.c: 84: case 3:
  6079                           
  6080                           ;calibrate_mode.c: 83: break;
  6081                           
  6082                           ;calibrate_mode.c: 82: spi2_Send_data = spi_Read_data;
  6083                           
  6084                           
  6085                           ;calibrate_mode.c: 85: calibdata.index = spi_Read_data;
  6086  022C  0022               	movlb	2	; select bank2
  6087  022D  0838               	movf	Calibrate_download@spi_Read_data^(0+256),w
  6088  022E  0020               	movlb	0	; select bank0
  6089  022F  00CB               	movwf	??_Calibrate_download
  6090  0230  084B               	movf	??_Calibrate_download,w
  6091  0231  0021               	movlb	1	; select bank1
  6092  0232  00C7               	movwf	(_calibdata^(0+128)+3)
  6093  0233                     L17:	
  6094                           
  6095                           ;calibrate_mode.c: 86: spi2_Send_data = spi_Read_data;
  6096  0233  0022               	movlb	2	; select bank2
  6097  0234  0838               	movf	Calibrate_download@spi_Read_data^(0+256),w
  6098  0235  2A3F               	goto	L18
  6099  0236                     l3131:	
  6100                           ;calibrate_mode.c: 88: case 4:
  6101                           
  6102                           ;calibrate_mode.c: 87: break;
  6103                           
  6104                           
  6105                           ;calibrate_mode.c: 89: linkInfo.My_address = spi_Read_data +1;
  6106  0236  0022               	movlb	2	; select bank2
  6107  0237  0838               	movf	Calibrate_download@spi_Read_data^(0+256),w
  6108  0238  3E01               	addlw	1
  6109  0239  0020               	movlb	0	; select bank0
  6110  023A  00CB               	movwf	??_Calibrate_download
  6111  023B  084B               	movf	??_Calibrate_download,w
  6112  023C  0021               	movlb	1	; select bank1
  6113  023D  00CD               	movwf	_linkInfo^(0+128)
  6114                           
  6115                           ;calibrate_mode.c: 90: spi2_Send_data = linkInfo.My_address;
  6116  023E  084D               	movf	_linkInfo^(0+128),w
  6117  023F                     L18:	
  6118  023F  0020               	movlb	0	; select bank0
  6119  0240  2AC2               	goto	L23
  6120  0241                     l3135:	
  6121                           ;calibrate_mode.c: 92: case 5:
  6122                           
  6123                           ;calibrate_mode.c: 91: break;
  6124                           
  6125                           
  6126                           ;calibrate_mode.c: 93: calibdata.WorkingCount++;
  6127  0241  3001               	movlw	1
  6128  0242  0021               	movlb	1	; select bank1
  6129  0243  07C8               	addwf	(_calibdata^(0+128)+4),f
  6130  0244  3000               	movlw	0
  6131  0245  3DC9               	addwfc	((_calibdata+1)^(0+128)+4),f
  6132  0246  3000               	movlw	0
  6133  0247  3DCA               	addwfc	((_calibdata+2)^(0+128)+4),f
  6134  0248  3000               	movlw	0
  6135  0249  3DCB               	addwfc	((_calibdata+3)^(0+128)+4),f
  6136                           
  6137                           ;calibrate_mode.c: 94: spi2_Send_data = (TransLong256To255(calibdata.WorkingCount) >> 24
      +                           & 0x000000ff);
  6138  024A  3004               	movlw	4
  6139  024B  3EC4               	addlw	(low (_calibdata| 0))& (0+255)
  6140  024C  0086               	movwf	6
  6141  024D  0187               	clrf	7
  6142  024E  3F40               	moviw [0]fsr1
  6143  024F  0020               	movlb	0	; select bank0
  6144  0250  00AF               	movwf	TransLong256To255@data
  6145  0251  3F41               	moviw [1]fsr1
  6146  0252  00B0               	movwf	TransLong256To255@data+1
  6147  0253  3F42               	moviw [2]fsr1
  6148  0254  00B1               	movwf	TransLong256To255@data+2
  6149  0255  3F43               	moviw [3]fsr1
  6150  0256  00B2               	movwf	TransLong256To255@data+3
  6151  0257  3183  2304  3181   	fcall	_TransLong256To255
  6152  025A  0020               	movlb	0	; select bank0
  6153  025B  082F               	movf	?_TransLong256To255,w
  6154  025C  00CB               	movwf	??_Calibrate_download
  6155  025D  0830               	movf	?_TransLong256To255+1,w
  6156  025E  00CC               	movwf	??_Calibrate_download+1
  6157  025F  0831               	movf	?_TransLong256To255+2,w
  6158  0260  00CD               	movwf	??_Calibrate_download+2
  6159  0261  0832               	movf	?_TransLong256To255+3,w
  6160  0262  00CE               	movwf	??_Calibrate_download+3
  6161  0263  3018               	movlw	24
  6162  0264  00CF               	movwf	??_Calibrate_download+4
  6163  0265                     u2025:	
  6164  0265  37CE               	asrf	??_Calibrate_download+3,f
  6165  0266  0CCD               	rrf	??_Calibrate_download+2,f
  6166  0267  0CCC               	rrf	??_Calibrate_download+1,f
  6167  0268  0CCB               	rrf	??_Calibrate_download,f
  6168  0269  0BCF               	decfsz	??_Calibrate_download+4,f
  6169  026A  2A65               	goto	u2025
  6170  026B  2AAD               	goto	L25
  6171  026C                     l3139:	
  6172                           ;calibrate_mode.c: 96: case 6:
  6173                           
  6174                           ;calibrate_mode.c: 95: break;
  6175                           
  6176                           
  6177                           ;calibrate_mode.c: 97: spi2_Send_data = (TransLong256To255(calibdata.WorkingCount) >> 16
      +                           & 0x000000ff);
  6178  026C  3004               	movlw	4
  6179  026D  3EC4               	addlw	(low (_calibdata| 0))& (0+255)
  6180  026E  0086               	movwf	6
  6181  026F  0187               	clrf	7
  6182  0270  3F40               	moviw [0]fsr1
  6183  0271  00AF               	movwf	TransLong256To255@data
  6184  0272  3F41               	moviw [1]fsr1
  6185  0273  00B0               	movwf	TransLong256To255@data+1
  6186  0274  3F42               	moviw [2]fsr1
  6187  0275  00B1               	movwf	TransLong256To255@data+2
  6188  0276  3F43               	moviw [3]fsr1
  6189  0277  00B2               	movwf	TransLong256To255@data+3
  6190  0278  3183  2304  3181   	fcall	_TransLong256To255
  6191  027B  0020               	movlb	0	; select bank0
  6192  027C  082F               	movf	?_TransLong256To255,w
  6193  027D  00CB               	movwf	??_Calibrate_download
  6194  027E  0830               	movf	?_TransLong256To255+1,w
  6195  027F  00CC               	movwf	??_Calibrate_download+1
  6196  0280  0831               	movf	?_TransLong256To255+2,w
  6197  0281  00CD               	movwf	??_Calibrate_download+2
  6198  0282  0832               	movf	?_TransLong256To255+3,w
  6199  0283  00CE               	movwf	??_Calibrate_download+3
  6200  0284  3010               	movlw	16
  6201  0285  00CF               	movwf	??_Calibrate_download+4
  6202  0286                     u2035:	
  6203  0286  37CE               	asrf	??_Calibrate_download+3,f
  6204  0287  0CCD               	rrf	??_Calibrate_download+2,f
  6205  0288  0CCC               	rrf	??_Calibrate_download+1,f
  6206  0289  0CCB               	rrf	??_Calibrate_download,f
  6207  028A  0BCF               	decfsz	??_Calibrate_download+4,f
  6208  028B  2A86               	goto	u2035
  6209  028C  2AAD               	goto	L25
  6210  028D                     l3141:	
  6211                           ;calibrate_mode.c: 99: case 7:
  6212                           
  6213                           ;calibrate_mode.c: 98: break;
  6214                           
  6215                           
  6216                           ;calibrate_mode.c: 100: spi2_Send_data = (TransLong256To255(calibdata.WorkingCount) >> 8
      +                           & 0x000000ff);
  6217  028D  3004               	movlw	4
  6218  028E  3EC4               	addlw	(low (_calibdata| 0))& (0+255)
  6219  028F  0086               	movwf	6
  6220  0290  0187               	clrf	7
  6221  0291  3F40               	moviw [0]fsr1
  6222  0292  00AF               	movwf	TransLong256To255@data
  6223  0293  3F41               	moviw [1]fsr1
  6224  0294  00B0               	movwf	TransLong256To255@data+1
  6225  0295  3F42               	moviw [2]fsr1
  6226  0296  00B1               	movwf	TransLong256To255@data+2
  6227  0297  3F43               	moviw [3]fsr1
  6228  0298  00B2               	movwf	TransLong256To255@data+3
  6229  0299  3183  2304  3181   	fcall	_TransLong256To255
  6230  029C  0020               	movlb	0	; select bank0
  6231  029D  082F               	movf	?_TransLong256To255,w
  6232  029E  00CB               	movwf	??_Calibrate_download
  6233  029F  0830               	movf	?_TransLong256To255+1,w
  6234  02A0  00CC               	movwf	??_Calibrate_download+1
  6235  02A1  0831               	movf	?_TransLong256To255+2,w
  6236  02A2  00CD               	movwf	??_Calibrate_download+2
  6237  02A3  0832               	movf	?_TransLong256To255+3,w
  6238  02A4  00CE               	movwf	??_Calibrate_download+3
  6239  02A5  3008               	movlw	8
  6240  02A6  00CF               	movwf	??_Calibrate_download+4
  6241  02A7                     u2045:	
  6242  02A7  37CE               	asrf	??_Calibrate_download+3,f
  6243  02A8  0CCD               	rrf	??_Calibrate_download+2,f
  6244  02A9  0CCC               	rrf	??_Calibrate_download+1,f
  6245  02AA  0CCB               	rrf	??_Calibrate_download,f
  6246  02AB  0BCF               	decfsz	??_Calibrate_download+4,f
  6247  02AC  2AA7               	goto	u2045
  6248  02AD                     L25:	
  6249  02AD  084B               	movf	??_Calibrate_download,w
  6250  02AE  00D0               	movwf	??_Calibrate_download+5
  6251  02AF  0850               	movf	??_Calibrate_download+5,w
  6252  02B0  2AC4               	goto	L22
  6253  02B1                     l3143:	
  6254                           ;calibrate_mode.c: 102: case 8:
  6255                           
  6256                           ;calibrate_mode.c: 101: break;
  6257                           
  6258                           
  6259                           ;calibrate_mode.c: 103: spi2_Send_data = (TransLong256To255(calibdata.WorkingCount) & 0x
      +                          000000ff);
  6260  02B1  3004               	movlw	4
  6261  02B2  3EC4               	addlw	(low (_calibdata| 0))& (0+255)
  6262  02B3  0086               	movwf	6
  6263  02B4  0187               	clrf	7
  6264  02B5  3F40               	moviw [0]fsr1
  6265  02B6  00AF               	movwf	TransLong256To255@data
  6266  02B7  3F41               	moviw [1]fsr1
  6267  02B8  00B0               	movwf	TransLong256To255@data+1
  6268  02B9  3F42               	moviw [2]fsr1
  6269  02BA  00B1               	movwf	TransLong256To255@data+2
  6270  02BB  3F43               	moviw [3]fsr1
  6271  02BC  00B2               	movwf	TransLong256To255@data+3
  6272  02BD  3183  2304  3181   	fcall	_TransLong256To255
  6273  02C0  0020               	movlb	0	; select bank0
  6274  02C1  082F               	movf	?_TransLong256To255,w
  6275  02C2                     L23:	
  6276  02C2  00CB               	movwf	??_Calibrate_download
  6277  02C3  084B               	movf	??_Calibrate_download,w
  6278  02C4                     L22:	
  6279  02C4  00ED               	movwf	_spi2_Send_data
  6280                           
  6281                           ;calibrate_mode.c: 104: break;
  6282  02C5  2AE9               	goto	l99
  6283  02C6                     l108:	
  6284                           ;calibrate_mode.c: 105: case 9:
  6285                           
  6286                           
  6287                           ;calibrate_mode.c: 107: if(isEndPointTrig == 1){
  6288  02C6  1C79               	btfss	_isEndPointTrig/(0+8),_isEndPointTrig& (0+7)
  6289  02C7  2ACE               	goto	l109
  6290                           
  6291                           ;calibrate_mode.c: 108: LATAbits.LATA0 = 1;
  6292  02C8  0022               	movlb	2	; select bank2
  6293  02C9  140C               	bsf	12,0	;volatile
  6294                           
  6295                           ;calibrate_mode.c: 109: linkInfo.endpoint = 1;
  6296  02CA  0021               	movlb	1	; select bank1
  6297  02CB  01D2               	clrf	(_linkInfo^(0+128)+5)
  6298  02CC  0AD2               	incf	(_linkInfo^(0+128)+5),f
  6299                           
  6300                           ;calibrate_mode.c: 110: }else{
  6301  02CD  2AD2               	goto	l3149
  6302  02CE                     l109:	
  6303                           
  6304                           ;calibrate_mode.c: 111: LATAbits.LATA0 = 0;
  6305  02CE  0022               	movlb	2	; select bank2
  6306  02CF  100C               	bcf	12,0	;volatile
  6307                           
  6308                           ;calibrate_mode.c: 112: linkInfo.endpoint = 0;
  6309  02D0  0021               	movlb	1	; select bank1
  6310  02D1  01D2               	clrf	(_linkInfo^(0+128)+5)
  6311  02D2                     l3149:	
  6312                           
  6313                           ;calibrate_mode.c: 113: }
  6314                           ;calibrate_mode.c: 114: spi2_Send_data = linkInfo.My_address;
  6315  02D2  084D               	movf	_linkInfo^(0+128),w
  6316  02D3  0020               	movlb	0	; select bank0
  6317  02D4  00CB               	movwf	??_Calibrate_download
  6318  02D5  084B               	movf	??_Calibrate_download,w
  6319  02D6  00ED               	movwf	_spi2_Send_data
  6320                           
  6321                           ;calibrate_mode.c: 115: isEndPointTrig = 0;
  6322  02D7  1079               	bcf	_isEndPointTrig/(0+8),_isEndPointTrig& (0+7)
  6323                           
  6324                           ;calibrate_mode.c: 117: }
  6325                           
  6326                           ;calibrate_mode.c: 116: break;
  6327  02D8  2AE9               	goto	l99
  6328  02D9                     l3155:	
  6329                           
  6330                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6331                           ; Switch size 1, requested type "space"
  6332                           ; Number of cases is 1, Range of values is 0 to 0
  6333                           ; switch strategies available:
  6334                           ; Name         Instructions Cycles
  6335                           ; simple_byte            4     3 (average)
  6336                           ; direct_byte            8     6 (fixed)
  6337                           ; jumptable            260     6 (fixed)
  6338                           ;	Chosen strategy is simple_byte
  6339  02D9  0020               	movlb	0	; select bank0
  6340  02DA  0869               	movf	_countabuf+1,w
  6341  02DB  3A00               	xorlw	0	; case 0
  6342  02DC  1903               	skipnz
  6343  02DD  2ADF               	goto	l3757
  6344  02DE  2AE9               	goto	l99
  6345  02DF                     l3757:	
  6346                           
  6347                           ; Switch size 1, requested type "space"
  6348                           ; Number of cases is 10, Range of values is 0 to 9
  6349                           ; switch strategies available:
  6350                           ; Name         Instructions Cycles
  6351                           ; direct_byte           26     6 (fixed)
  6352                           ; simple_byte           31    16 (average)
  6353                           ; jumptable            260     6 (fixed)
  6354                           ;	Chosen strategy is direct_byte
  6355  02DF  0868               	movf	_countabuf,w
  6356  02E0  0084               	movwf	4
  6357  02E1  300A               	movlw	10
  6358  02E2  0204               	subwf	4,w
  6359  02E3  1803               	skipnc
  6360  02E4  2AE9               	goto	l99
  6361  02E5  3188               	movlp	high S3759
  6362  02E6  3504               	lslf	4,w
  6363  02E7  3E20               	addlw	low S3759
  6364  02E8  0082               	movwf	2
  6365  02E9                     l99:	
  6366                           
  6367                           ;calibrate_mode.c: 118: if(isEndPointTrig){
  6368  02E9  1879               	btfsc	_isEndPointTrig/(0+8),_isEndPointTrig& (0+7)
  6369                           
  6370                           ;calibrate_mode.c: 119: spi2_Send_data = 0x00;
  6371  02EA  01ED               	clrf	_spi2_Send_data
  6372                           
  6373                           ;calibrate_mode.c: 120: }
  6374                           ;calibrate_mode.c: 124: countabuf++;
  6375  02EB  3001               	movlw	1
  6376  02EC  07E8               	addwf	_countabuf,f
  6377  02ED  3000               	movlw	0
  6378  02EE  3DE9               	addwfc	_countabuf+1,f
  6379                           
  6380                           ;calibrate_mode.c: 125: if(calibdata.cargoLength <= countabuf){
  6381  02EF  0021               	movlb	1	; select bank1
  6382  02F0  0845               	movf	(_calibdata+1)^(0+128),w
  6383  02F1  0020               	movlb	0	; select bank0
  6384  02F2  0269               	subwf	_countabuf+1,w
  6385  02F3  1D03               	skipz
  6386  02F4  2AF9               	goto	u2075
  6387  02F5  0021               	movlb	1	; select bank1
  6388  02F6  0844               	movf	_calibdata^(0+128),w
  6389  02F7  0020               	movlb	0	; select bank0
  6390  02F8  0268               	subwf	_countabuf,w
  6391  02F9                     u2075:	
  6392  02F9  1C03               	skipc
  6393  02FA  0008               	return
  6394                           
  6395                           ;calibrate_mode.c: 126: calibdata.cargoLength = 0xFFFF;
  6396  02FB  30FF               	movlw	255
  6397  02FC  0021               	movlb	1	; select bank1
  6398  02FD  00C4               	movwf	_calibdata^(0+128)
  6399  02FE  30FF               	movlw	255
  6400  02FF  00C5               	movwf	(_calibdata^(0+128)+1)
  6401                           
  6402                           ;calibrate_mode.c: 127: countabuf = 0;
  6403  0300  0020               	movlb	0	; select bank0
  6404  0301  01E8               	clrf	_countabuf
  6405  0302  01E9               	clrf	_countabuf+1
  6406  0303  0008               	return
  6407  0304                     __end_of_Calibrate_download:	
  6408                           
  6409                           	psect	swtext3
  6410  0820                     __pswtext3:	
  6411  0820                     S3759:	
  6412  0820  3181  29FE         	ljmp	l3119
  6413  0822  3182  2A0E         	ljmp	l3125
  6414  0824  3182  2A24         	ljmp	l3127
  6415  0826  3182  2A2C         	ljmp	l3129
  6416  0828  3182  2A36         	ljmp	l3131
  6417  082A  3182  2A41         	ljmp	l3135
  6418  082C  3182  2A6C         	ljmp	l3139
  6419  082E  3182  2A8D         	ljmp	l3141
  6420  0830  3182  2AB1         	ljmp	l3143
  6421  0832  3182  2AC6         	ljmp	l108
  6422                           
  6423                           	psect	text9
  6424  06C7                     __ptext9:	
  6425 ;; *************** function _isEndpoint *****************
  6426 ;; Defined at:
  6427 ;;		line 31 in file "calibrate_mode.c"
  6428 ;; Parameters:    Size  Location     Type
  6429 ;;		None
  6430 ;; Auto vars:     Size  Location     Type
  6431 ;;  spi2data        1    6[BANK0 ] unsigned char 
  6432 ;; Return value:  Size  Location     Type
  6433 ;;		None               void
  6434 ;; Registers used:
  6435 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6436 ;; Tracked objects:
  6437 ;;		On entry : 0/0
  6438 ;;		On exit  : 0/0
  6439 ;;		Unchanged: 0/0
  6440 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6441 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6442 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6443 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6444 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6445 ;;Total ram usage:        6 bytes
  6446 ;; Hardware stack levels used:    1
  6447 ;; Hardware stack levels required when called:    4
  6448 ;; This function calls:
  6449 ;;		_setSPI1sendDataManual
  6450 ;; This function is called by:
  6451 ;;		_Calibrate_download
  6452 ;; This function uses a non-reentrant model
  6453 ;;
  6454                           
  6455                           
  6456                           ;psect for function _isEndpoint
  6457  06C7                     _isEndpoint:	
  6458                           
  6459                           ;calibrate_mode.c: 32: unsigned char spi2data = 0;
  6460                           
  6461                           ;incstack = 0
  6462                           ; Regs used in _isEndpoint: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6463  06C7  0020               	movlb	0	; select bank0
  6464  06C8  01A6               	clrf	isEndpoint@spi2data
  6465                           
  6466                           ;calibrate_mode.c: 33: if(count2 > 1){
  6467  06C9  3000               	movlw	0
  6468  06CA  026B               	subwf	_count2+1,w
  6469  06CB  3002               	movlw	2
  6470  06CC  1903               	skipnz
  6471  06CD  026A               	subwf	_count2,w
  6472  06CE  1C03               	skipc
  6473  06CF  2EE4               	goto	l3047
  6474                           
  6475                           ;calibrate_mode.c: 34: spi2data = spi2_buffer_data[count2 -1];
  6476  06D0  086A               	movf	_count2,w
  6477  06D1  3EFF               	addlw	255
  6478  06D2  00A1               	movwf	??_isEndpoint
  6479  06D3  30FF               	movlw	255
  6480  06D4  3D6B               	addwfc	_count2+1,w
  6481  06D5  00A2               	movwf	??_isEndpoint+1
  6482  06D6  30F0               	movlw	240
  6483  06D7  00A3               	movwf	??_isEndpoint+2
  6484  06D8  3026               	movlw	38
  6485  06D9  00A4               	movwf	??_isEndpoint+3
  6486  06DA  0821               	movf	??_isEndpoint,w
  6487  06DB  0723               	addwf	??_isEndpoint+2,w
  6488  06DC  0086               	movwf	6
  6489  06DD  0822               	movf	??_isEndpoint+1,w
  6490  06DE  3D24               	addwfc	??_isEndpoint+3,w
  6491  06DF  0087               	movwf	7
  6492  06E0  0801               	movf	1,w
  6493  06E1  00A5               	movwf	??_isEndpoint+4
  6494  06E2  0825               	movf	??_isEndpoint+4,w
  6495  06E3  2EF1               	goto	L26
  6496  06E4                     l3047:	
  6497                           ;calibrate_mode.c: 35: }else{
  6498                           
  6499                           
  6500                           ;calibrate_mode.c: 36: spi2data = spi2_buffer_data[count2];
  6501  06E4  30F0               	movlw	240
  6502  06E5  00A1               	movwf	??_isEndpoint
  6503  06E6  3026               	movlw	38
  6504  06E7  00A2               	movwf	??_isEndpoint+1
  6505  06E8  086A               	movf	_count2,w
  6506  06E9  0721               	addwf	??_isEndpoint,w
  6507  06EA  0086               	movwf	6
  6508  06EB  086B               	movf	_count2+1,w
  6509  06EC  3D22               	addwfc	??_isEndpoint+1,w
  6510  06ED  0087               	movwf	7
  6511  06EE  0801               	movf	1,w
  6512  06EF  00A3               	movwf	??_isEndpoint+2
  6513  06F0  0823               	movf	??_isEndpoint+2,w
  6514  06F1                     L26:	
  6515  06F1  00A6               	movwf	isEndpoint@spi2data
  6516                           
  6517                           ;calibrate_mode.c: 37: }
  6518                           ;calibrate_mode.c: 38: if(spi2data < 255){
  6519  06F2  0A26               	incf	isEndpoint@spi2data,w
  6520  06F3  1903               	btfsc	3,2
  6521  06F4  2EF7               	goto	l3053
  6522                           
  6523                           ;calibrate_mode.c: 39: isEndPointTrig = 0;
  6524  06F5  1079               	bcf	_isEndPointTrig/(0+8),_isEndPointTrig& (0+7)
  6525                           
  6526                           ;calibrate_mode.c: 40: }else{
  6527  06F6  0008               	return
  6528  06F7                     l3053:	
  6529                           
  6530                           ;calibrate_mode.c: 41: setSPI1sendDataManual(0x00);
  6531  06F7  3000               	movlw	0
  6532  06F8  318E  26FF         	fcall	_setSPI1sendDataManual
  6533  06FA  0008               	return
  6534  06FB                     __end_of_isEndpoint:	
  6535                           ;calibrate_mode.c: 42: }
  6536                           ;calibrate_mode.c: 44: return isEndPointTrig;
  6537                           ;	Return value of _isEndpoint is never used
  6538                           
  6539                           
  6540                           	psect	text10
  6541  0EFF                     __ptext10:	
  6542 ;; *************** function _setSPI1sendDataManual *****************
  6543 ;; Defined at:
  6544 ;;		line 105 in file "spiControl.c"
  6545 ;; Parameters:    Size  Location     Type
  6546 ;;  data            1    wreg     unsigned char 
  6547 ;; Auto vars:     Size  Location     Type
  6548 ;;  data            1    0[BANK0 ] unsigned char 
  6549 ;; Return value:  Size  Location     Type
  6550 ;;                  1    wreg      void 
  6551 ;; Registers used:
  6552 ;;		wreg
  6553 ;; Tracked objects:
  6554 ;;		On entry : 0/0
  6555 ;;		On exit  : 0/0
  6556 ;;		Unchanged: 0/0
  6557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6558 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6559 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6561 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6562 ;;Total ram usage:        1 bytes
  6563 ;; Hardware stack levels used:    1
  6564 ;; Hardware stack levels required when called:    3
  6565 ;; This function calls:
  6566 ;;		Nothing
  6567 ;; This function is called by:
  6568 ;;		_isEndpoint
  6569 ;; This function uses a non-reentrant model
  6570 ;;
  6571                           
  6572                           
  6573                           ;psect for function _setSPI1sendDataManual
  6574  0EFF                     _setSPI1sendDataManual:	
  6575                           
  6576                           ;incstack = 0
  6577                           ; Regs used in _setSPI1sendDataManual: [wreg]
  6578                           ;setSPI1sendDataManual@data stored from wreg
  6579  0EFF  0020               	movlb	0	; select bank0
  6580  0F00  00A0               	movwf	setSPI1sendDataManual@data
  6581                           
  6582                           ;spiControl.c: 106: SSP1BUF = data;
  6583  0F01  0820               	movf	setSPI1sendDataManual@data,w
  6584  0F02  0024               	movlb	4	; select bank4
  6585  0F03  0091               	movwf	17	;volatile
  6586  0F04  0008               	return
  6587  0F05                     __end_of_setSPI1sendDataManual:	
  6588                           
  6589                           	psect	text11
  6590  0304                     __ptext11:	
  6591 ;; *************** function _TransLong256To255 *****************
  6592 ;; Defined at:
  6593 ;;		line 20 in file "util.c"
  6594 ;; Parameters:    Size  Location     Type
  6595 ;;  data            4   15[BANK0 ] long 
  6596 ;; Auto vars:     Size  Location     Type
  6597 ;;  j               2   27[BANK0 ] int 
  6598 ;;  pow             4   33[BANK0 ] long 
  6599 ;;  buf             4   39[BANK0 ] long 
  6600 ;;  mod             4   29[BANK0 ] long 
  6601 ;;  TransData       4   23[BANK0 ] long 
  6602 ;;  i               2   37[BANK0 ] int 
  6603 ;; Return value:  Size  Location     Type
  6604 ;;                  4   15[BANK0 ] long 
  6605 ;; Registers used:
  6606 ;;		wreg, status,2, status,0, pclath, cstack
  6607 ;; Tracked objects:
  6608 ;;		On entry : 0/0
  6609 ;;		On exit  : 0/0
  6610 ;;		Unchanged: 0/0
  6611 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6612 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6613 ;;      Locals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6614 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6615 ;;      Totals:         0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6616 ;;Total ram usage:       28 bytes
  6617 ;; Hardware stack levels used:    1
  6618 ;; Hardware stack levels required when called:    4
  6619 ;; This function calls:
  6620 ;;		___aldiv
  6621 ;;		___almod
  6622 ;;		___lmul
  6623 ;; This function is called by:
  6624 ;;		_Calibrate_download
  6625 ;;		_readCargo
  6626 ;; This function uses a non-reentrant model
  6627 ;;
  6628                           
  6629                           
  6630                           ;psect for function _TransLong256To255
  6631  0304                     _TransLong256To255:	
  6632                           
  6633                           ;util.c: 22: long buf = 0;
  6634                           
  6635                           ;incstack = 0
  6636                           ; Regs used in _TransLong256To255: [wreg+status,2+status,0+pclath+cstack]
  6637  0304  3000               	movlw	0
  6638  0305  0020               	movlb	0	; select bank0
  6639  0306  00CA               	movwf	TransLong256To255@buf+3
  6640  0307  3000               	movlw	0
  6641  0308  00C9               	movwf	TransLong256To255@buf+2
  6642  0309  3000               	movlw	0
  6643  030A  00C8               	movwf	TransLong256To255@buf+1
  6644  030B  3000               	movlw	0
  6645  030C  00C7               	movwf	TransLong256To255@buf
  6646                           
  6647                           ;util.c: 23: buf = data;
  6648  030D  0832               	movf	TransLong256To255@data+3,w
  6649  030E  00CA               	movwf	TransLong256To255@buf+3
  6650  030F  0831               	movf	TransLong256To255@data+2,w
  6651  0310  00C9               	movwf	TransLong256To255@buf+2
  6652  0311  0830               	movf	TransLong256To255@data+1,w
  6653  0312  00C8               	movwf	TransLong256To255@buf+1
  6654  0313  082F               	movf	TransLong256To255@data,w
  6655  0314  00C7               	movwf	TransLong256To255@buf
  6656                           
  6657                           ;util.c: 24: long TransData = 0;
  6658  0315  3000               	movlw	0
  6659  0316  00BA               	movwf	TransLong256To255@TransData+3
  6660  0317  3000               	movlw	0
  6661  0318  00B9               	movwf	TransLong256To255@TransData+2
  6662  0319  3000               	movlw	0
  6663  031A  00B8               	movwf	TransLong256To255@TransData+1
  6664  031B  3000               	movlw	0
  6665  031C  00B7               	movwf	TransLong256To255@TransData
  6666                           
  6667                           ;util.c: 25: long mod = 0;
  6668  031D  3000               	movlw	0
  6669  031E  00C0               	movwf	TransLong256To255@mod+3
  6670  031F  3000               	movlw	0
  6671  0320  00BF               	movwf	TransLong256To255@mod+2
  6672  0321  3000               	movlw	0
  6673  0322  00BE               	movwf	TransLong256To255@mod+1
  6674  0323  3000               	movlw	0
  6675  0324  00BD               	movwf	TransLong256To255@mod
  6676                           
  6677                           ;util.c: 26: int i = 0;
  6678  0325  01C5               	clrf	TransLong256To255@i
  6679  0326  01C6               	clrf	TransLong256To255@i+1
  6680  0327                     l3079:	
  6681                           ;util.c: 27: while(1){
  6682                           
  6683                           
  6684                           ;util.c: 28: if(buf <= 255){
  6685  0327  1BCA               	btfsc	TransLong256To255@buf+3,7
  6686  0328  2B33               	goto	l3081
  6687  0329  084A               	movf	TransLong256To255@buf+3,w
  6688  032A  1D03               	btfss	3,2
  6689  032B  2B3B               	goto	l3083
  6690  032C  0849               	movf	TransLong256To255@buf+2,w
  6691  032D  1D03               	btfss	3,2
  6692  032E  2B3B               	goto	l3083
  6693  032F  3001               	movlw	1
  6694  0330  0248               	subwf	TransLong256To255@buf+1,w
  6695  0331  1803               	btfsc	3,0
  6696  0332  2B3B               	goto	l3083
  6697  0333                     l3081:	
  6698                           
  6699                           ;util.c: 29: mod = buf;
  6700  0333  084A               	movf	TransLong256To255@buf+3,w
  6701  0334  00C0               	movwf	TransLong256To255@mod+3
  6702  0335  0849               	movf	TransLong256To255@buf+2,w
  6703  0336  00BF               	movwf	TransLong256To255@mod+2
  6704  0337  0848               	movf	TransLong256To255@buf+1,w
  6705  0338  00BE               	movwf	TransLong256To255@mod+1
  6706  0339  0847               	movf	TransLong256To255@buf,w
  6707  033A  2B56               	goto	L27
  6708  033B                     l3083:	
  6709                           ;util.c: 30: }else{
  6710                           
  6711                           
  6712                           ;util.c: 31: mod = buf % 255;
  6713  033B  3000               	movlw	0
  6714  033C  00A3               	movwf	___almod@divisor+3
  6715  033D  3000               	movlw	0
  6716  033E  00A2               	movwf	___almod@divisor+2
  6717  033F  3000               	movlw	0
  6718  0340  00A1               	movwf	___almod@divisor+1
  6719  0341  30FF               	movlw	255
  6720  0342  00A0               	movwf	___almod@divisor
  6721  0343  084A               	movf	TransLong256To255@buf+3,w
  6722  0344  00A7               	movwf	___almod@dividend+3
  6723  0345  0849               	movf	TransLong256To255@buf+2,w
  6724  0346  00A6               	movwf	___almod@dividend+2
  6725  0347  0848               	movf	TransLong256To255@buf+1,w
  6726  0348  00A5               	movwf	___almod@dividend+1
  6727  0349  0847               	movf	TransLong256To255@buf,w
  6728  034A  00A4               	movwf	___almod@dividend
  6729  034B  3184  246C  3183   	fcall	___almod
  6730  034E  0020               	movlb	0	; select bank0
  6731  034F  0823               	movf	?___almod+3,w
  6732  0350  00C0               	movwf	TransLong256To255@mod+3
  6733  0351  0822               	movf	?___almod+2,w
  6734  0352  00BF               	movwf	TransLong256To255@mod+2
  6735  0353  0821               	movf	?___almod+1,w
  6736  0354  00BE               	movwf	TransLong256To255@mod+1
  6737  0355  0820               	movf	?___almod,w
  6738  0356                     L27:	
  6739  0356  00BD               	movwf	TransLong256To255@mod
  6740                           
  6741                           ;util.c: 32: }
  6742                           ;util.c: 33: buf = (int)(buf / 255);
  6743  0357  3000               	movlw	0
  6744  0358  00A3               	movwf	___aldiv@divisor+3
  6745  0359  3000               	movlw	0
  6746  035A  00A2               	movwf	___aldiv@divisor+2
  6747  035B  3000               	movlw	0
  6748  035C  00A1               	movwf	___aldiv@divisor+1
  6749  035D  30FF               	movlw	255
  6750  035E  00A0               	movwf	___aldiv@divisor
  6751  035F  084A               	movf	TransLong256To255@buf+3,w
  6752  0360  00A7               	movwf	___aldiv@dividend+3
  6753  0361  0849               	movf	TransLong256To255@buf+2,w
  6754  0362  00A6               	movwf	___aldiv@dividend+2
  6755  0363  0848               	movf	TransLong256To255@buf+1,w
  6756  0364  00A5               	movwf	___aldiv@dividend+1
  6757  0365  0847               	movf	TransLong256To255@buf,w
  6758  0366  00A4               	movwf	___aldiv@dividend
  6759  0367  3183  23EA  3183   	fcall	___aldiv
  6760  036A  0020               	movlb	0	; select bank0
  6761  036B  0820               	movf	?___aldiv,w
  6762  036C  00C7               	movwf	TransLong256To255@buf
  6763  036D  0821               	movf	?___aldiv+1,w
  6764  036E  00C8               	movwf	TransLong256To255@buf+1
  6765  036F  0D89               	rlf	9,f
  6766  0370  3B89               	subwfb	9,f
  6767  0371  0989               	comf	9,f
  6768  0372  00C9               	movwf	TransLong256To255@buf+2
  6769  0373  00CA               	movwf	TransLong256To255@buf+3
  6770                           
  6771                           ;util.c: 34: long pow = 1;
  6772  0374  3000               	movlw	0
  6773  0375  00C4               	movwf	TransLong256To255@pow+3
  6774  0376  3000               	movlw	0
  6775  0377  00C3               	movwf	TransLong256To255@pow+2
  6776  0378  3000               	movlw	0
  6777  0379  00C2               	movwf	TransLong256To255@pow+1
  6778  037A  3001               	movlw	1
  6779  037B  00C1               	movwf	TransLong256To255@pow
  6780                           
  6781                           ;util.c: 35: if(i > 0){
  6782  037C  0846               	movf	TransLong256To255@i+1,w
  6783  037D  3A80               	xorlw	128
  6784  037E  00B3               	movwf	??_TransLong256To255
  6785  037F  3080               	movlw	128
  6786  0380  0233               	subwf	??_TransLong256To255,w
  6787  0381  1D03               	skipz
  6788  0382  2B85               	goto	u1975
  6789  0383  3001               	movlw	1
  6790  0384  0245               	subwf	TransLong256To255@i,w
  6791  0385                     u1975:	
  6792  0385  1C03               	skipc
  6793  0386  2BB3               	goto	l3097
  6794                           
  6795                           ;util.c: 36: for(int j = 0; j < i; j++){
  6796  0387  0020               	movlb	0	; select bank0
  6797  0388  01BB               	clrf	TransLong256To255@j
  6798  0389  01BC               	clrf	TransLong256To255@j+1
  6799  038A                     l3095:	
  6800  038A  083C               	movf	TransLong256To255@j+1,w
  6801  038B  3A80               	xorlw	128
  6802  038C  00B3               	movwf	??_TransLong256To255
  6803  038D  0846               	movf	TransLong256To255@i+1,w
  6804  038E  3A80               	xorlw	128
  6805  038F  0233               	subwf	??_TransLong256To255,w
  6806  0390  1D03               	skipz
  6807  0391  2B94               	goto	u1995
  6808  0392  0845               	movf	TransLong256To255@i,w
  6809  0393  023B               	subwf	TransLong256To255@j,w
  6810  0394                     u1995:	
  6811  0394  1803               	btfsc	3,0
  6812  0395  2BB3               	goto	l3097
  6813                           
  6814                           ;util.c: 37: pow = pow * 256;
  6815  0396  0020               	movlb	0	; select bank0
  6816  0397  0841               	movf	TransLong256To255@pow,w
  6817  0398  00B3               	movwf	??_TransLong256To255
  6818  0399  0842               	movf	TransLong256To255@pow+1,w
  6819  039A  00B4               	movwf	??_TransLong256To255+1
  6820  039B  0843               	movf	TransLong256To255@pow+2,w
  6821  039C  00B5               	movwf	??_TransLong256To255+2
  6822  039D  0844               	movf	TransLong256To255@pow+3,w
  6823  039E  00B6               	movwf	??_TransLong256To255+3
  6824  039F  3008               	movlw	8
  6825  03A0                     u1985:	
  6826  03A0  35B3               	lslf	??_TransLong256To255,f
  6827  03A1  0DB4               	rlf	??_TransLong256To255+1,f
  6828  03A2  0DB5               	rlf	??_TransLong256To255+2,f
  6829  03A3  0DB6               	rlf	??_TransLong256To255+3,f
  6830  03A4  0B89               	decfsz	9,f
  6831  03A5  2BA0               	goto	u1985
  6832  03A6  0836               	movf	??_TransLong256To255+3,w
  6833  03A7  00C4               	movwf	TransLong256To255@pow+3
  6834  03A8  0835               	movf	??_TransLong256To255+2,w
  6835  03A9  00C3               	movwf	TransLong256To255@pow+2
  6836  03AA  0834               	movf	??_TransLong256To255+1,w
  6837  03AB  00C2               	movwf	TransLong256To255@pow+1
  6838  03AC  0833               	movf	??_TransLong256To255,w
  6839  03AD  00C1               	movwf	TransLong256To255@pow
  6840  03AE  3001               	movlw	1
  6841  03AF  07BB               	addwf	TransLong256To255@j,f
  6842  03B0  3000               	movlw	0
  6843  03B1  3DBC               	addwfc	TransLong256To255@j+1,f
  6844  03B2  2B8A               	goto	l3095
  6845  03B3                     l3097:	
  6846                           
  6847                           ;util.c: 38: }
  6848                           ;util.c: 39: }
  6849                           ;util.c: 40: TransData += mod * pow;
  6850  03B3  0020               	movlb	0	; select bank0
  6851  03B4  0840               	movf	TransLong256To255@mod+3,w
  6852  03B5  00A3               	movwf	___lmul@multiplier+3
  6853  03B6  083F               	movf	TransLong256To255@mod+2,w
  6854  03B7  00A2               	movwf	___lmul@multiplier+2
  6855  03B8  083E               	movf	TransLong256To255@mod+1,w
  6856  03B9  00A1               	movwf	___lmul@multiplier+1
  6857  03BA  083D               	movf	TransLong256To255@mod,w
  6858  03BB  00A0               	movwf	___lmul@multiplier
  6859  03BC  0844               	movf	TransLong256To255@pow+3,w
  6860  03BD  00A7               	movwf	___lmul@multiplicand+3
  6861  03BE  0843               	movf	TransLong256To255@pow+2,w
  6862  03BF  00A6               	movwf	___lmul@multiplicand+2
  6863  03C0  0842               	movf	TransLong256To255@pow+1,w
  6864  03C1  00A5               	movwf	___lmul@multiplicand+1
  6865  03C2  0841               	movf	TransLong256To255@pow,w
  6866  03C3  00A4               	movwf	___lmul@multiplicand
  6867  03C4  3186  26FB  3183   	fcall	___lmul
  6868  03C7  0020               	movlb	0	; select bank0
  6869  03C8  0820               	movf	?___lmul,w
  6870  03C9  07B7               	addwf	TransLong256To255@TransData,f
  6871  03CA  0821               	movf	?___lmul+1,w
  6872  03CB  3DB8               	addwfc	TransLong256To255@TransData+1,f
  6873  03CC  0822               	movf	?___lmul+2,w
  6874  03CD  3DB9               	addwfc	TransLong256To255@TransData+2,f
  6875  03CE  0823               	movf	?___lmul+3,w
  6876  03CF  3DBA               	addwfc	TransLong256To255@TransData+3,f
  6877                           
  6878                           ;util.c: 41: if(buf <= 255){
  6879  03D0  1BCA               	btfsc	TransLong256To255@buf+3,7
  6880  03D1  2BE1               	goto	l3105
  6881  03D2  084A               	movf	TransLong256To255@buf+3,w
  6882  03D3  1D03               	btfss	3,2
  6883  03D4  2BDC               	goto	l3103
  6884  03D5  0849               	movf	TransLong256To255@buf+2,w
  6885  03D6  1D03               	btfss	3,2
  6886  03D7  2BDC               	goto	l3103
  6887  03D8  3001               	movlw	1
  6888  03D9  0248               	subwf	TransLong256To255@buf+1,w
  6889  03DA  1C03               	btfss	3,0
  6890  03DB  2BE1               	goto	l3105
  6891  03DC                     l3103:	
  6892                           ;util.c: 42: break;
  6893                           
  6894                           
  6895                           ;util.c: 43: }
  6896                           ;util.c: 44: i++;
  6897  03DC  3001               	movlw	1
  6898  03DD  07C5               	addwf	TransLong256To255@i,f
  6899  03DE  3000               	movlw	0
  6900  03DF  3DC6               	addwfc	TransLong256To255@i+1,f
  6901  03E0  2B27               	goto	l3079
  6902  03E1                     l3105:	
  6903                           
  6904                           ;util.c: 45: }
  6905                           ;util.c: 46: return TransData;
  6906  03E1  083A               	movf	TransLong256To255@TransData+3,w
  6907  03E2  00B2               	movwf	?_TransLong256To255+3
  6908  03E3  0839               	movf	TransLong256To255@TransData+2,w
  6909  03E4  00B1               	movwf	?_TransLong256To255+2
  6910  03E5  0838               	movf	TransLong256To255@TransData+1,w
  6911  03E6  00B0               	movwf	?_TransLong256To255+1
  6912  03E7  0837               	movf	TransLong256To255@TransData,w
  6913  03E8  00AF               	movwf	?_TransLong256To255
  6914  03E9  0008               	return
  6915  03EA                     __end_of_TransLong256To255:	
  6916                           
  6917                           	psect	text12
  6918  06FB                     __ptext12:	
  6919 ;; *************** function ___lmul *****************
  6920 ;; Defined at:
  6921 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul32.c"
  6922 ;; Parameters:    Size  Location     Type
  6923 ;;  multiplier      4    0[BANK0 ] unsigned long 
  6924 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  6925 ;; Auto vars:     Size  Location     Type
  6926 ;;  product         4    8[BANK0 ] unsigned long 
  6927 ;; Return value:  Size  Location     Type
  6928 ;;                  4    0[BANK0 ] unsigned long 
  6929 ;; Registers used:
  6930 ;;		wreg, status,2, status,0
  6931 ;; Tracked objects:
  6932 ;;		On entry : 0/0
  6933 ;;		On exit  : 0/0
  6934 ;;		Unchanged: 0/0
  6935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6936 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6937 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6939 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6940 ;;Total ram usage:       12 bytes
  6941 ;; Hardware stack levels used:    1
  6942 ;; Hardware stack levels required when called:    3
  6943 ;; This function calls:
  6944 ;;		Nothing
  6945 ;; This function is called by:
  6946 ;;		_TransLong256To255
  6947 ;; This function uses a non-reentrant model
  6948 ;;
  6949                           
  6950                           
  6951                           ;psect for function ___lmul
  6952  06FB                     ___lmul:	
  6953                           
  6954                           ;incstack = 0
  6955                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  6956  06FB  3000               	movlw	0
  6957  06FC  0020               	movlb	0	; select bank0
  6958  06FD  00AB               	movwf	___lmul@product+3
  6959  06FE  3000               	movlw	0
  6960  06FF  00AA               	movwf	___lmul@product+2
  6961  0700  3000               	movlw	0
  6962  0701  00A9               	movwf	___lmul@product+1
  6963  0702  3000               	movlw	0
  6964  0703  00A8               	movwf	___lmul@product
  6965  0704                     l2957:	
  6966  0704  1C20               	btfss	___lmul@multiplier,0
  6967  0705  2F0E               	goto	l2961
  6968  0706  0824               	movf	___lmul@multiplicand,w
  6969  0707  07A8               	addwf	___lmul@product,f
  6970  0708  0825               	movf	___lmul@multiplicand+1,w
  6971  0709  3DA9               	addwfc	___lmul@product+1,f
  6972  070A  0826               	movf	___lmul@multiplicand+2,w
  6973  070B  3DAA               	addwfc	___lmul@product+2,f
  6974  070C  0827               	movf	___lmul@multiplicand+3,w
  6975  070D  3DAB               	addwfc	___lmul@product+3,f
  6976  070E                     l2961:	
  6977  070E  3001               	movlw	1
  6978  070F                     u1715:	
  6979  070F  35A4               	lslf	___lmul@multiplicand,f
  6980  0710  0DA5               	rlf	___lmul@multiplicand+1,f
  6981  0711  0DA6               	rlf	___lmul@multiplicand+2,f
  6982  0712  0DA7               	rlf	___lmul@multiplicand+3,f
  6983  0713  0B89               	decfsz	9,f
  6984  0714  2F0F               	goto	u1715
  6985  0715  3001               	movlw	1
  6986  0716                     u1725:	
  6987  0716  36A3               	lsrf	___lmul@multiplier+3,f
  6988  0717  0CA2               	rrf	___lmul@multiplier+2,f
  6989  0718  0CA1               	rrf	___lmul@multiplier+1,f
  6990  0719  0CA0               	rrf	___lmul@multiplier,f
  6991  071A  0B89               	decfsz	9,f
  6992  071B  2F16               	goto	u1725
  6993  071C  0823               	movf	___lmul@multiplier+3,w
  6994  071D  0422               	iorwf	___lmul@multiplier+2,w
  6995  071E  0421               	iorwf	___lmul@multiplier+1,w
  6996  071F  0420               	iorwf	___lmul@multiplier,w
  6997  0720  1D03               	skipz
  6998  0721  2F04               	goto	l2957
  6999  0722  082B               	movf	___lmul@product+3,w
  7000  0723  00A3               	movwf	?___lmul+3
  7001  0724  082A               	movf	___lmul@product+2,w
  7002  0725  00A2               	movwf	?___lmul+2
  7003  0726  0829               	movf	___lmul@product+1,w
  7004  0727  00A1               	movwf	?___lmul+1
  7005  0728  0828               	movf	___lmul@product,w
  7006  0729  00A0               	movwf	?___lmul
  7007  072A  0008               	return
  7008  072B                     __end_of___lmul:	
  7009                           
  7010                           	psect	text13
  7011  046C                     __ptext13:	
  7012 ;; *************** function ___almod *****************
  7013 ;; Defined at:
  7014 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\almod.c"
  7015 ;; Parameters:    Size  Location     Type
  7016 ;;  divisor         4    0[BANK0 ] long 
  7017 ;;  dividend        4    4[BANK0 ] long 
  7018 ;; Auto vars:     Size  Location     Type
  7019 ;;  sign            1   10[BANK0 ] unsigned char 
  7020 ;;  counter         1    9[BANK0 ] unsigned char 
  7021 ;; Return value:  Size  Location     Type
  7022 ;;                  4    0[BANK0 ] long 
  7023 ;; Registers used:
  7024 ;;		wreg, status,2, status,0
  7025 ;; Tracked objects:
  7026 ;;		On entry : 0/0
  7027 ;;		On exit  : 0/0
  7028 ;;		Unchanged: 0/0
  7029 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7030 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7031 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7032 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7033 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7034 ;;Total ram usage:       11 bytes
  7035 ;; Hardware stack levels used:    1
  7036 ;; Hardware stack levels required when called:    3
  7037 ;; This function calls:
  7038 ;;		Nothing
  7039 ;; This function is called by:
  7040 ;;		_TransLong256To255
  7041 ;; This function uses a non-reentrant model
  7042 ;;
  7043                           
  7044                           
  7045                           ;psect for function ___almod
  7046  046C                     ___almod:	
  7047                           
  7048                           ;incstack = 0
  7049                           ; Regs used in ___almod: [wreg+status,2+status,0]
  7050  046C  0020               	movlb	0	; select bank0
  7051  046D  01AA               	clrf	___almod@sign
  7052  046E  1FA7               	btfss	___almod@dividend+3,7
  7053  046F  2C7D               	goto	l837
  7054  0470  09A4               	comf	___almod@dividend,f
  7055  0471  09A5               	comf	___almod@dividend+1,f
  7056  0472  09A6               	comf	___almod@dividend+2,f
  7057  0473  09A7               	comf	___almod@dividend+3,f
  7058  0474  0AA4               	incf	___almod@dividend,f
  7059  0475  1903               	skipnz
  7060  0476  0AA5               	incf	___almod@dividend+1,f
  7061  0477  1903               	skipnz
  7062  0478  0AA6               	incf	___almod@dividend+2,f
  7063  0479  1903               	skipnz
  7064  047A  0AA7               	incf	___almod@dividend+3,f
  7065  047B  01AA               	clrf	___almod@sign
  7066  047C  0AAA               	incf	___almod@sign,f
  7067  047D                     l837:	
  7068  047D  1FA3               	btfss	___almod@divisor+3,7
  7069  047E  2C8A               	goto	l3017
  7070  047F  09A0               	comf	___almod@divisor,f
  7071  0480  09A1               	comf	___almod@divisor+1,f
  7072  0481  09A2               	comf	___almod@divisor+2,f
  7073  0482  09A3               	comf	___almod@divisor+3,f
  7074  0483  0AA0               	incf	___almod@divisor,f
  7075  0484  1903               	skipnz
  7076  0485  0AA1               	incf	___almod@divisor+1,f
  7077  0486  1903               	skipnz
  7078  0487  0AA2               	incf	___almod@divisor+2,f
  7079  0488  1903               	skipnz
  7080  0489  0AA3               	incf	___almod@divisor+3,f
  7081  048A                     l3017:	
  7082  048A  0823               	movf	___almod@divisor+3,w
  7083  048B  0422               	iorwf	___almod@divisor+2,w
  7084  048C  0421               	iorwf	___almod@divisor+1,w
  7085  048D  0420               	iorwf	___almod@divisor,w
  7086  048E  1903               	skipnz
  7087  048F  2CC3               	goto	l3033
  7088  0490  01A9               	clrf	___almod@counter
  7089  0491  0AA9               	incf	___almod@counter,f
  7090  0492                     l3023:	
  7091  0492  1BA3               	btfsc	___almod@divisor+3,7
  7092  0493  2CA0               	goto	l3025
  7093  0494  3001               	movlw	1
  7094  0495                     u1875:	
  7095  0495  35A0               	lslf	___almod@divisor,f
  7096  0496  0DA1               	rlf	___almod@divisor+1,f
  7097  0497  0DA2               	rlf	___almod@divisor+2,f
  7098  0498  0DA3               	rlf	___almod@divisor+3,f
  7099  0499  0B89               	decfsz	9,f
  7100  049A  2C95               	goto	u1875
  7101  049B  3001               	movlw	1
  7102  049C  00A8               	movwf	??___almod
  7103  049D  0828               	movf	??___almod,w
  7104  049E  07A9               	addwf	___almod@counter,f
  7105  049F  2C92               	goto	l3023
  7106  04A0                     l3025:	
  7107  04A0  0823               	movf	___almod@divisor+3,w
  7108  04A1  0227               	subwf	___almod@dividend+3,w
  7109  04A2  1D03               	skipz
  7110  04A3  2CAE               	goto	u1895
  7111  04A4  0822               	movf	___almod@divisor+2,w
  7112  04A5  0226               	subwf	___almod@dividend+2,w
  7113  04A6  1D03               	skipz
  7114  04A7  2CAE               	goto	u1895
  7115  04A8  0821               	movf	___almod@divisor+1,w
  7116  04A9  0225               	subwf	___almod@dividend+1,w
  7117  04AA  1D03               	skipz
  7118  04AB  2CAE               	goto	u1895
  7119  04AC  0820               	movf	___almod@divisor,w
  7120  04AD  0224               	subwf	___almod@dividend,w
  7121  04AE                     u1895:	
  7122  04AE  1C03               	skipc
  7123  04AF  2CB8               	goto	l3029
  7124  04B0  0820               	movf	___almod@divisor,w
  7125  04B1  02A4               	subwf	___almod@dividend,f
  7126  04B2  0821               	movf	___almod@divisor+1,w
  7127  04B3  3BA5               	subwfb	___almod@dividend+1,f
  7128  04B4  0822               	movf	___almod@divisor+2,w
  7129  04B5  3BA6               	subwfb	___almod@dividend+2,f
  7130  04B6  0823               	movf	___almod@divisor+3,w
  7131  04B7  3BA7               	subwfb	___almod@dividend+3,f
  7132  04B8                     l3029:	
  7133  04B8  3001               	movlw	1
  7134  04B9                     u1905:	
  7135  04B9  36A3               	lsrf	___almod@divisor+3,f
  7136  04BA  0CA2               	rrf	___almod@divisor+2,f
  7137  04BB  0CA1               	rrf	___almod@divisor+1,f
  7138  04BC  0CA0               	rrf	___almod@divisor,f
  7139  04BD  0B89               	decfsz	9,f
  7140  04BE  2CB9               	goto	u1905
  7141  04BF  3001               	movlw	1
  7142  04C0  02A9               	subwf	___almod@counter,f
  7143  04C1  1D03               	btfss	3,2
  7144  04C2  2CA0               	goto	l3025
  7145  04C3                     l3033:	
  7146  04C3  082A               	movf	___almod@sign,w
  7147  04C4  1903               	btfsc	3,2
  7148  04C5  2CD1               	goto	l3037
  7149  04C6  09A4               	comf	___almod@dividend,f
  7150  04C7  09A5               	comf	___almod@dividend+1,f
  7151  04C8  09A6               	comf	___almod@dividend+2,f
  7152  04C9  09A7               	comf	___almod@dividend+3,f
  7153  04CA  0AA4               	incf	___almod@dividend,f
  7154  04CB  1903               	skipnz
  7155  04CC  0AA5               	incf	___almod@dividend+1,f
  7156  04CD  1903               	skipnz
  7157  04CE  0AA6               	incf	___almod@dividend+2,f
  7158  04CF  1903               	skipnz
  7159  04D0  0AA7               	incf	___almod@dividend+3,f
  7160  04D1                     l3037:	
  7161  04D1  0827               	movf	___almod@dividend+3,w
  7162  04D2  00A3               	movwf	?___almod+3
  7163  04D3  0826               	movf	___almod@dividend+2,w
  7164  04D4  00A2               	movwf	?___almod+2
  7165  04D5  0825               	movf	___almod@dividend+1,w
  7166  04D6  00A1               	movwf	?___almod+1
  7167  04D7  0824               	movf	___almod@dividend,w
  7168  04D8  00A0               	movwf	?___almod
  7169  04D9  0008               	return
  7170  04DA                     __end_of___almod:	
  7171                           
  7172                           	psect	text14
  7173  03EA                     __ptext14:	
  7174 ;; *************** function ___aldiv *****************
  7175 ;; Defined at:
  7176 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\aldiv.c"
  7177 ;; Parameters:    Size  Location     Type
  7178 ;;  divisor         4    0[BANK0 ] long 
  7179 ;;  dividend        4    4[BANK0 ] long 
  7180 ;; Auto vars:     Size  Location     Type
  7181 ;;  quotient        4   11[BANK0 ] long 
  7182 ;;  sign            1   10[BANK0 ] unsigned char 
  7183 ;;  counter         1    9[BANK0 ] unsigned char 
  7184 ;; Return value:  Size  Location     Type
  7185 ;;                  4    0[BANK0 ] long 
  7186 ;; Registers used:
  7187 ;;		wreg, status,2, status,0
  7188 ;; Tracked objects:
  7189 ;;		On entry : 0/0
  7190 ;;		On exit  : 0/0
  7191 ;;		Unchanged: 0/0
  7192 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7193 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7194 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7195 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7196 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7197 ;;Total ram usage:       15 bytes
  7198 ;; Hardware stack levels used:    1
  7199 ;; Hardware stack levels required when called:    3
  7200 ;; This function calls:
  7201 ;;		Nothing
  7202 ;; This function is called by:
  7203 ;;		_TransLong256To255
  7204 ;; This function uses a non-reentrant model
  7205 ;;
  7206                           
  7207                           
  7208                           ;psect for function ___aldiv
  7209  03EA                     ___aldiv:	
  7210                           
  7211                           ;incstack = 0
  7212                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  7213  03EA  0020               	movlb	0	; select bank0
  7214  03EB  01AA               	clrf	___aldiv@sign
  7215  03EC  1FA3               	btfss	___aldiv@divisor+3,7
  7216  03ED  2BFB               	goto	l824
  7217  03EE  09A0               	comf	___aldiv@divisor,f
  7218  03EF  09A1               	comf	___aldiv@divisor+1,f
  7219  03F0  09A2               	comf	___aldiv@divisor+2,f
  7220  03F1  09A3               	comf	___aldiv@divisor+3,f
  7221  03F2  0AA0               	incf	___aldiv@divisor,f
  7222  03F3  1903               	skipnz
  7223  03F4  0AA1               	incf	___aldiv@divisor+1,f
  7224  03F5  1903               	skipnz
  7225  03F6  0AA2               	incf	___aldiv@divisor+2,f
  7226  03F7  1903               	skipnz
  7227  03F8  0AA3               	incf	___aldiv@divisor+3,f
  7228  03F9  01AA               	clrf	___aldiv@sign
  7229  03FA  0AAA               	incf	___aldiv@sign,f
  7230  03FB                     l824:	
  7231  03FB  1FA7               	btfss	___aldiv@dividend+3,7
  7232  03FC  2C0C               	goto	l2979
  7233  03FD  09A4               	comf	___aldiv@dividend,f
  7234  03FE  09A5               	comf	___aldiv@dividend+1,f
  7235  03FF  09A6               	comf	___aldiv@dividend+2,f
  7236  0400  09A7               	comf	___aldiv@dividend+3,f
  7237  0401  0AA4               	incf	___aldiv@dividend,f
  7238  0402  1903               	skipnz
  7239  0403  0AA5               	incf	___aldiv@dividend+1,f
  7240  0404  1903               	skipnz
  7241  0405  0AA6               	incf	___aldiv@dividend+2,f
  7242  0406  1903               	skipnz
  7243  0407  0AA7               	incf	___aldiv@dividend+3,f
  7244  0408  3001               	movlw	1
  7245  0409  00A8               	movwf	??___aldiv
  7246  040A  0828               	movf	??___aldiv,w
  7247  040B  06AA               	xorwf	___aldiv@sign,f
  7248  040C                     l2979:	
  7249  040C  3000               	movlw	0
  7250  040D  00AE               	movwf	___aldiv@quotient+3
  7251  040E  3000               	movlw	0
  7252  040F  00AD               	movwf	___aldiv@quotient+2
  7253  0410  3000               	movlw	0
  7254  0411  00AC               	movwf	___aldiv@quotient+1
  7255  0412  3000               	movlw	0
  7256  0413  00AB               	movwf	___aldiv@quotient
  7257  0414  0823               	movf	___aldiv@divisor+3,w
  7258  0415  0422               	iorwf	___aldiv@divisor+2,w
  7259  0416  0421               	iorwf	___aldiv@divisor+1,w
  7260  0417  0420               	iorwf	___aldiv@divisor,w
  7261  0418  1903               	skipnz
  7262  0419  2C55               	goto	l3001
  7263  041A  01A9               	clrf	___aldiv@counter
  7264  041B  0AA9               	incf	___aldiv@counter,f
  7265  041C                     l2987:	
  7266  041C  1BA3               	btfsc	___aldiv@divisor+3,7
  7267  041D  2C2A               	goto	l2989
  7268  041E  3001               	movlw	1
  7269  041F                     u1775:	
  7270  041F  35A0               	lslf	___aldiv@divisor,f
  7271  0420  0DA1               	rlf	___aldiv@divisor+1,f
  7272  0421  0DA2               	rlf	___aldiv@divisor+2,f
  7273  0422  0DA3               	rlf	___aldiv@divisor+3,f
  7274  0423  0B89               	decfsz	9,f
  7275  0424  2C1F               	goto	u1775
  7276  0425  3001               	movlw	1
  7277  0426  00A8               	movwf	??___aldiv
  7278  0427  0828               	movf	??___aldiv,w
  7279  0428  07A9               	addwf	___aldiv@counter,f
  7280  0429  2C1C               	goto	l2987
  7281  042A                     l2989:	
  7282  042A  3001               	movlw	1
  7283  042B                     u1795:	
  7284  042B  35AB               	lslf	___aldiv@quotient,f
  7285  042C  0DAC               	rlf	___aldiv@quotient+1,f
  7286  042D  0DAD               	rlf	___aldiv@quotient+2,f
  7287  042E  0DAE               	rlf	___aldiv@quotient+3,f
  7288  042F  0B89               	decfsz	9,f
  7289  0430  2C2B               	goto	u1795
  7290  0431  0823               	movf	___aldiv@divisor+3,w
  7291  0432  0227               	subwf	___aldiv@dividend+3,w
  7292  0433  1D03               	skipz
  7293  0434  2C3F               	goto	u1805
  7294  0435  0822               	movf	___aldiv@divisor+2,w
  7295  0436  0226               	subwf	___aldiv@dividend+2,w
  7296  0437  1D03               	skipz
  7297  0438  2C3F               	goto	u1805
  7298  0439  0821               	movf	___aldiv@divisor+1,w
  7299  043A  0225               	subwf	___aldiv@dividend+1,w
  7300  043B  1D03               	skipz
  7301  043C  2C3F               	goto	u1805
  7302  043D  0820               	movf	___aldiv@divisor,w
  7303  043E  0224               	subwf	___aldiv@dividend,w
  7304  043F                     u1805:	
  7305  043F  1C03               	skipc
  7306  0440  2C4A               	goto	l2997
  7307  0441  0820               	movf	___aldiv@divisor,w
  7308  0442  02A4               	subwf	___aldiv@dividend,f
  7309  0443  0821               	movf	___aldiv@divisor+1,w
  7310  0444  3BA5               	subwfb	___aldiv@dividend+1,f
  7311  0445  0822               	movf	___aldiv@divisor+2,w
  7312  0446  3BA6               	subwfb	___aldiv@dividend+2,f
  7313  0447  0823               	movf	___aldiv@divisor+3,w
  7314  0448  3BA7               	subwfb	___aldiv@dividend+3,f
  7315  0449  142B               	bsf	___aldiv@quotient,0
  7316  044A                     l2997:	
  7317  044A  3001               	movlw	1
  7318  044B                     u1815:	
  7319  044B  36A3               	lsrf	___aldiv@divisor+3,f
  7320  044C  0CA2               	rrf	___aldiv@divisor+2,f
  7321  044D  0CA1               	rrf	___aldiv@divisor+1,f
  7322  044E  0CA0               	rrf	___aldiv@divisor,f
  7323  044F  0B89               	decfsz	9,f
  7324  0450  2C4B               	goto	u1815
  7325  0451  3001               	movlw	1
  7326  0452  02A9               	subwf	___aldiv@counter,f
  7327  0453  1D03               	btfss	3,2
  7328  0454  2C2A               	goto	l2989
  7329  0455                     l3001:	
  7330  0455  082A               	movf	___aldiv@sign,w
  7331  0456  1903               	btfsc	3,2
  7332  0457  2C63               	goto	l3005
  7333  0458  09AB               	comf	___aldiv@quotient,f
  7334  0459  09AC               	comf	___aldiv@quotient+1,f
  7335  045A  09AD               	comf	___aldiv@quotient+2,f
  7336  045B  09AE               	comf	___aldiv@quotient+3,f
  7337  045C  0AAB               	incf	___aldiv@quotient,f
  7338  045D  1903               	skipnz
  7339  045E  0AAC               	incf	___aldiv@quotient+1,f
  7340  045F  1903               	skipnz
  7341  0460  0AAD               	incf	___aldiv@quotient+2,f
  7342  0461  1903               	skipnz
  7343  0462  0AAE               	incf	___aldiv@quotient+3,f
  7344  0463                     l3005:	
  7345  0463  082E               	movf	___aldiv@quotient+3,w
  7346  0464  00A3               	movwf	?___aldiv+3
  7347  0465  082D               	movf	___aldiv@quotient+2,w
  7348  0466  00A2               	movwf	?___aldiv+2
  7349  0467  082C               	movf	___aldiv@quotient+1,w
  7350  0468  00A1               	movwf	?___aldiv+1
  7351  0469  082B               	movf	___aldiv@quotient,w
  7352  046A  00A0               	movwf	?___aldiv
  7353  046B  0008               	return
  7354  046C                     __end_of___aldiv:	
  7355                           
  7356                           	psect	text15
  7357  0784                     __ptext15:	
  7358 ;; *************** function _InitCalibrate *****************
  7359 ;; Defined at:
  7360 ;;		line 53 in file "calibrate_mode.c"
  7361 ;; Parameters:    Size  Location     Type
  7362 ;;		None
  7363 ;; Auto vars:     Size  Location     Type
  7364 ;;  cargoData      16   18[BANK0 ] struct .
  7365 ;; Return value:  Size  Location     Type
  7366 ;;                  1    wreg      void 
  7367 ;; Registers used:
  7368 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7369 ;; Tracked objects:
  7370 ;;		On entry : 0/0
  7371 ;;		On exit  : 0/0
  7372 ;;		Unchanged: 0/0
  7373 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7374 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7375 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7376 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7377 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7378 ;;Total ram usage:       17 bytes
  7379 ;; Hardware stack levels used:    1
  7380 ;; Hardware stack levels required when called:    4
  7381 ;; This function calls:
  7382 ;;		_getCargoData
  7383 ;; This function is called by:
  7384 ;;		_Calibrate_download
  7385 ;;		_main
  7386 ;; This function uses a non-reentrant model
  7387 ;;
  7388                           
  7389                           
  7390                           ;psect for function _InitCalibrate
  7391  0784                     _InitCalibrate:	
  7392                           
  7393                           ;calibrate_mode.c: 54: isEndPointTrig = 1;
  7394                           
  7395                           ;incstack = 0
  7396                           ; Regs used in _InitCalibrate: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7397  0784  1479               	bsf	_isEndPointTrig/(0+8),_isEndPointTrig& (0+7)
  7398                           
  7399                           ;calibrate_mode.c: 55: calibdata.cargoLength = 0xFFFF;
  7400  0785  30FF               	movlw	255
  7401  0786  0021               	movlb	1	; select bank1
  7402  0787  00C4               	movwf	_calibdata^(0+128)
  7403  0788  30FF               	movlw	255
  7404  0789  00C5               	movwf	(_calibdata^(0+128)+1)
  7405                           
  7406                           ;calibrate_mode.c: 56: calibdata.index = 0x00;
  7407  078A  01C7               	clrf	(_calibdata^(0+128)+3)
  7408                           
  7409                           ;calibrate_mode.c: 57: calibdata.command =0x00;
  7410  078B  01C6               	clrf	(_calibdata^(0+128)+2)
  7411                           
  7412                           ;calibrate_mode.c: 58: calibdata.WorkingCount = 0;
  7413  078C  3000               	movlw	0
  7414  078D  00CB               	movwf	((_calibdata+3)^(0+128)+4)
  7415  078E  3000               	movlw	0
  7416  078F  00CA               	movwf	((_calibdata+2)^(0+128)+4)
  7417  0790  3000               	movlw	0
  7418  0791  00C9               	movwf	((_calibdata+1)^(0+128)+4)
  7419  0792  3000               	movlw	0
  7420  0793  00C8               	movwf	(_calibdata^(0+128)+4)
  7421                           
  7422                           ;calibrate_mode.c: 59: CargoData cargoData = getCargoData();
  7423  0794  318F  276F  3187   	fcall	_getCargoData
  7424  0797  0020               	movlb	0	; select bank0
  7425  0798  3020               	movlw	low ?_getCargoData
  7426  0799  0086               	movwf	6
  7427  079A  3000               	movlw	high ?_getCargoData
  7428  079B  0087               	movwf	7
  7429  079C  3032               	movlw	low InitCalibrate@cargoData
  7430  079D  0084               	movwf	4
  7431  079E  3000               	movlw	high InitCalibrate@cargoData
  7432  079F  0085               	movwf	5
  7433  07A0  3010               	movlw	16
  7434  07A1  00B1               	movwf	??_InitCalibrate
  7435  07A2                     u1950:	
  7436  07A2  0016               	moviw fsr1++
  7437  07A3  001A               	movwi fsr0++
  7438  07A4  0BB1               	decfsz	??_InitCalibrate,f
  7439  07A5  2FA2               	goto	u1950
  7440                           
  7441                           ;calibrate_mode.c: 60: cargoData.linkAngleTo = 0;
  7442  07A6  01B7               	clrf	InitCalibrate@cargoData+5
  7443  07A7  01B8               	clrf	InitCalibrate@cargoData+6
  7444                           
  7445                           ;calibrate_mode.c: 61: linkInfo.endpoint = 0;
  7446  07A8  0021               	movlb	1	; select bank1
  7447  07A9  01D2               	clrf	(_linkInfo^(0+128)+5)
  7448                           
  7449                           ;calibrate_mode.c: 62: linkInfo.My_address = 0;
  7450  07AA  01CD               	clrf	_linkInfo^(0+128)
  7451                           
  7452                           ;calibrate_mode.c: 63: countabuf = 0;
  7453  07AB  0020               	movlb	0	; select bank0
  7454  07AC  01E8               	clrf	_countabuf
  7455  07AD  01E9               	clrf	_countabuf+1
  7456  07AE  0008               	return
  7457  07AF                     __end_of_InitCalibrate:	
  7458                           
  7459                           	psect	text16
  7460  0F6F                     __ptext16:	
  7461 ;; *************** function _getCargoData *****************
  7462 ;; Defined at:
  7463 ;;		line 8 in file "struct.c"
  7464 ;; Parameters:    Size  Location     Type
  7465 ;;		None
  7466 ;; Auto vars:     Size  Location     Type
  7467 ;;		None
  7468 ;; Return value:  Size  Location     Type
  7469 ;;                  16    0[BANK0 ] struct .
  7470 ;; Registers used:
  7471 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  7472 ;; Tracked objects:
  7473 ;;		On entry : 0/0
  7474 ;;		On exit  : 0/0
  7475 ;;		Unchanged: 0/0
  7476 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7477 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7478 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7479 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7480 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7481 ;;Total ram usage:       17 bytes
  7482 ;; Hardware stack levels used:    1
  7483 ;; Hardware stack levels required when called:    3
  7484 ;; This function calls:
  7485 ;;		Nothing
  7486 ;; This function is called by:
  7487 ;;		_InitCalibrate
  7488 ;;		_readCargo
  7489 ;;		_setCargo_Angle
  7490 ;;		_EEPROM_download
  7491 ;; This function uses a non-reentrant model
  7492 ;;
  7493                           
  7494                           
  7495                           ;psect for function _getCargoData
  7496  0F6F                     _getCargoData:	
  7497                           
  7498                           ;struct.c: 9: return cargoData;
  7499                           
  7500                           ;incstack = 0
  7501                           ; Regs used in _getCargoData: [wreg-fsr1h+status,2+status,0]
  7502  0F6F  3052               	movlw	low _cargoData
  7503  0F70  0086               	movwf	6
  7504  0F71  3000               	movlw	high _cargoData
  7505  0F72  0087               	movwf	7
  7506  0F73  3020               	movlw	low ?_getCargoData
  7507  0F74  0084               	movwf	4
  7508  0F75  3000               	movlw	high ?_getCargoData
  7509  0F76  0085               	movwf	5
  7510  0F77  3010               	movlw	16
  7511  0F78  0020               	movlb	0	; select bank0
  7512  0F79  00B0               	movwf	??_getCargoData
  7513  0F7A                     u1690:	
  7514  0F7A  0016               	moviw fsr1++
  7515  0F7B  001A               	movwi fsr0++
  7516  0F7C  0BB0               	decfsz	??_getCargoData,f
  7517  0F7D  2F7A               	goto	u1690
  7518  0F7E  0008               	return
  7519  0F7F                     __end_of_getCargoData:	
  7520                           
  7521                           	psect	text17
  7522  0647                     __ptext17:	
  7523 ;; *************** function _read_train *****************
  7524 ;; Defined at:
  7525 ;;		line 198 in file "main.c"
  7526 ;; Parameters:    Size  Location     Type
  7527 ;;		None
  7528 ;; Auto vars:     Size  Location     Type
  7529 ;;  bufint          2    2[BANK0 ] unsigned int 
  7530 ;; Return value:  Size  Location     Type
  7531 ;;                  1    wreg      void 
  7532 ;; Registers used:
  7533 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  7534 ;; Tracked objects:
  7535 ;;		On entry : 0/0
  7536 ;;		On exit  : 0/0
  7537 ;;		Unchanged: 0/0
  7538 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7539 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7540 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7541 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7542 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7543 ;;Total ram usage:        4 bytes
  7544 ;; Hardware stack levels used:    1
  7545 ;; Hardware stack levels required when called:    3
  7546 ;; This function calls:
  7547 ;;		Nothing
  7548 ;; This function is called by:
  7549 ;;		_main
  7550 ;; This function uses a non-reentrant model
  7551 ;;
  7552                           
  7553                           
  7554                           ;psect for function _read_train
  7555  0647                     _read_train:	
  7556                           
  7557                           ;main.c: 199: unsigned int bufint = spi1_Read_data;
  7558                           
  7559                           ;incstack = 0
  7560                           ; Regs used in _read_train: [wreg-fsr0h+status,2+status,0]
  7561  0647  0020               	movlb	0	; select bank0
  7562  0648  086C               	movf	_spi1_Read_data,w
  7563  0649  00A0               	movwf	??_read_train
  7564  064A  01A1               	clrf	??_read_train+1
  7565  064B  0820               	movf	??_read_train,w
  7566  064C  00A2               	movwf	read_train@bufint
  7567  064D  0821               	movf	??_read_train+1,w
  7568  064E  00A3               	movwf	read_train@bufint+1
  7569                           
  7570                           ;main.c: 200: switch(trainPos){
  7571  064F  2E78               	goto	l3475
  7572  0650                     l3465:	
  7573                           ;main.c: 201: case 1:
  7574                           
  7575                           
  7576                           ;main.c: 202: st_dataLength = (bufint << 8 | 0x00FF);
  7577  0650  0020               	movlb	0	; select bank0
  7578  0651  0822               	movf	read_train@bufint,w
  7579  0652  00A1               	movwf	??_read_train+1
  7580  0653  01A0               	clrf	??_read_train
  7581  0654  30FF               	movlw	255
  7582  0655  0420               	iorwf	??_read_train,w
  7583  0656  0021               	movlb	1	; select bank1
  7584  0657  00EE               	movwf	_st_dataLength^(0+128)
  7585  0658  3000               	movlw	0
  7586  0659  0020               	movlb	0	; select bank0
  7587  065A  0421               	iorwf	??_read_train+1,w
  7588  065B  0021               	movlb	1	; select bank1
  7589  065C  00EF               	movwf	(_st_dataLength+1)^(0+128)
  7590                           
  7591                           ;main.c: 203: break;
  7592  065D  0008               	return
  7593  065E                     l3467:	
  7594                           ;main.c: 204: case 2:
  7595                           
  7596                           
  7597                           ;main.c: 205: st_dataLength = st_dataLength & (bufint | 0xFF00);
  7598  065E  3000               	movlw	0
  7599  065F  0020               	movlb	0	; select bank0
  7600  0660  0422               	iorwf	read_train@bufint,w
  7601  0661  00A0               	movwf	??_read_train
  7602  0662  30FF               	movlw	255
  7603  0663  0423               	iorwf	read_train@bufint+1,w
  7604  0664  00A1               	movwf	??_read_train+1
  7605  0665  0021               	movlb	1	; select bank1
  7606  0666  086E               	movf	_st_dataLength^(0+128),w
  7607  0667  0020               	movlb	0	; select bank0
  7608  0668  0520               	andwf	??_read_train,w
  7609  0669  0021               	movlb	1	; select bank1
  7610  066A  00EE               	movwf	_st_dataLength^(0+128)
  7611  066B  086F               	movf	(_st_dataLength+1)^(0+128),w
  7612  066C  0020               	movlb	0	; select bank0
  7613  066D  0521               	andwf	??_read_train+1,w
  7614  066E  0021               	movlb	1	; select bank1
  7615  066F  00EF               	movwf	(_st_dataLength+1)^(0+128)
  7616                           
  7617                           ;main.c: 206: break;
  7618  0670  0008               	return
  7619  0671                     l3469:	
  7620                           ;main.c: 207: case 3:
  7621                           
  7622                           
  7623                           ;main.c: 208: st_type = spi1_Read_data;
  7624  0671  0020               	movlb	0	; select bank0
  7625  0672  086C               	movf	_spi1_Read_data,w
  7626  0673  00A0               	movwf	??_read_train
  7627  0674  0820               	movf	??_read_train,w
  7628  0675  00EE               	movwf	_st_type
  7629                           
  7630                           ;main.c: 209: isreadTrain = 1;
  7631  0676  14F0               	bsf	_isreadTrain/(0+8),_isreadTrain& (0+7)
  7632                           
  7633                           ;main.c: 213: }
  7634                           
  7635                           ;main.c: 212: break;
  7636                           
  7637                           ;main.c: 211: default :
  7638                           
  7639                           ;main.c: 210: break;
  7640  0677  0008               	return
  7641  0678                     l3475:	
  7642                           
  7643                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7644                           ; Switch size 1, requested type "space"
  7645                           ; Number of cases is 1, Range of values is 0 to 0
  7646                           ; switch strategies available:
  7647                           ; Name         Instructions Cycles
  7648                           ; simple_byte            4     3 (average)
  7649                           ; direct_byte            8     6 (fixed)
  7650                           ; jumptable            260     6 (fixed)
  7651                           ;	Chosen strategy is simple_byte
  7652  0678  0021               	movlb	1	; select bank1
  7653  0679  0860               	movf	(_trainPos+1)^(0+128),w
  7654  067A  3A00               	xorlw	0	; case 0
  7655  067B  1903               	skipnz
  7656  067C  2E7E               	goto	l3761
  7657  067D  2E89               	goto	l447
  7658  067E                     l3761:	
  7659                           
  7660                           ; Switch size 1, requested type "space"
  7661                           ; Number of cases is 3, Range of values is 1 to 3
  7662                           ; switch strategies available:
  7663                           ; Name         Instructions Cycles
  7664                           ; simple_byte           10     6 (average)
  7665                           ; direct_byte           15     9 (fixed)
  7666                           ; jumptable            263     9 (fixed)
  7667                           ;	Chosen strategy is simple_byte
  7668  067E  085F               	movf	_trainPos^(0+128),w
  7669  067F  3A01               	xorlw	1	; case 1
  7670  0680  1903               	skipnz
  7671  0681  2E50               	goto	l3465
  7672  0682  3A03               	xorlw	3	; case 2
  7673  0683  1903               	skipnz
  7674  0684  2E5E               	goto	l3467
  7675  0685  3A01               	xorlw	1	; case 3
  7676  0686  1903               	skipnz
  7677  0687  2E71               	goto	l3469
  7678  0688  2E89               	goto	l447
  7679  0689                     l447:	
  7680  0689  0008               	return
  7681  068A                     __end_of_read_train:	
  7682                           
  7683                           	psect	text18
  7684  0F52                     __ptext18:	
  7685 ;; *************** function _isSPI1read *****************
  7686 ;; Defined at:
  7687 ;;		line 67 in file "spiControl.c"
  7688 ;; Parameters:    Size  Location     Type
  7689 ;;		None
  7690 ;; Auto vars:     Size  Location     Type
  7691 ;;		None
  7692 ;; Return value:  Size  Location     Type
  7693 ;;		None               void
  7694 ;; Registers used:
  7695 ;;		wreg, status,2, status,0
  7696 ;; Tracked objects:
  7697 ;;		On entry : 0/0
  7698 ;;		On exit  : 0/0
  7699 ;;		Unchanged: 0/0
  7700 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7701 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7702 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7703 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7704 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7705 ;;Total ram usage:        0 bytes
  7706 ;; Hardware stack levels used:    1
  7707 ;; Hardware stack levels required when called:    3
  7708 ;; This function calls:
  7709 ;;		Nothing
  7710 ;; This function is called by:
  7711 ;;		_main
  7712 ;; This function uses a non-reentrant model
  7713 ;;
  7714                           
  7715                           
  7716                           ;psect for function _isSPI1read
  7717  0F52                     _isSPI1read:	
  7718                           
  7719                           ;spiControl.c: 68: if(read_count1 == count1){
  7720                           
  7721                           ;incstack = 0
  7722                           ; Regs used in _isSPI1read: [wreg+status,2+status,0]
  7723  0F52  0020               	movlb	0	; select bank0
  7724  0F53  0865               	movf	_count1+1,w
  7725  0F54  0663               	xorwf	_read_count1+1,w
  7726  0F55  1D03               	skipz
  7727  0F56  2F59               	goto	u2255
  7728  0F57  0864               	movf	_count1,w
  7729  0F58  0662               	xorwf	_read_count1,w
  7730  0F59                     u2255:	
  7731  0F59  1D03               	skipz
  7732  0F5A  2F5D               	goto	l3459
  7733                           
  7734                           ;spiControl.c: 69: return 1;
  7735  0F5B  1403               	setc
  7736                           
  7737                           ;spiControl.c: 70: }else{
  7738  0F5C  0008               	return
  7739  0F5D                     l3459:	
  7740                           
  7741                           ;spiControl.c: 71: return 0;
  7742  0F5D  1003               	clrc
  7743  0F5E  0008               	return
  7744  0F5F                     __end_of_isSPI1read:	
  7745                           
  7746                           	psect	text19
  7747  0F05                     __ptext19:	
  7748 ;; *************** function _io_init *****************
  7749 ;; Defined at:
  7750 ;;		line 128 in file "main.c"
  7751 ;; Parameters:    Size  Location     Type
  7752 ;;		None
  7753 ;; Auto vars:     Size  Location     Type
  7754 ;;		None
  7755 ;; Return value:  Size  Location     Type
  7756 ;;                  1    wreg      void 
  7757 ;; Registers used:
  7758 ;;		None
  7759 ;; Tracked objects:
  7760 ;;		On entry : 0/0
  7761 ;;		On exit  : 0/0
  7762 ;;		Unchanged: 0/0
  7763 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7764 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7765 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7767 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7768 ;;Total ram usage:        0 bytes
  7769 ;; Hardware stack levels used:    1
  7770 ;; Hardware stack levels required when called:    3
  7771 ;; This function calls:
  7772 ;;		Nothing
  7773 ;; This function is called by:
  7774 ;;		_main
  7775 ;; This function uses a non-reentrant model
  7776 ;;
  7777                           
  7778                           
  7779                           ;psect for function _io_init
  7780  0F05                     _io_init:	
  7781                           
  7782                           ;main.c: 129: PIE0bits.IOCIE = 1;
  7783                           
  7784                           ;incstack = 0
  7785                           ; Regs used in _io_init: []
  7786  0F05  0021               	movlb	1	; select bank1
  7787  0F06  1610               	bsf	16,4	;volatile
  7788                           
  7789                           ;main.c: 130: IOCAPbits.IOCAP3 = 1;
  7790  0F07  0027               	movlb	7	; select bank7
  7791  0F08  1591               	bsf	17,3	;volatile
  7792                           
  7793                           ;main.c: 131: IOCANbits.IOCAN3 = 1;
  7794  0F09  1592               	bsf	18,3	;volatile
  7795                           
  7796                           ;main.c: 132: PIE0bits.INTE = 1;
  7797  0F0A  0021               	movlb	1	; select bank1
  7798  0F0B  1410               	bsf	16,0	;volatile
  7799                           
  7800                           ;main.c: 133: INTCONbits.INTEDG = 1;
  7801  0F0C  140B               	bsf	11,0	;volatile
  7802  0F0D  0008               	return
  7803  0F0E                     __end_of_io_init:	
  7804                           
  7805                           	psect	text20
  7806  0602                     __ptext20:	
  7807 ;; *************** function _initTrain *****************
  7808 ;; Defined at:
  7809 ;;		line 136 in file "main.c"
  7810 ;; Parameters:    Size  Location     Type
  7811 ;;		None
  7812 ;; Auto vars:     Size  Location     Type
  7813 ;;		None
  7814 ;; Return value:  Size  Location     Type
  7815 ;;                  1    wreg      void 
  7816 ;; Registers used:
  7817 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7818 ;; Tracked objects:
  7819 ;;		On entry : 0/0
  7820 ;;		On exit  : 0/0
  7821 ;;		Unchanged: 0/0
  7822 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7823 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7824 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7825 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7826 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7827 ;;Total ram usage:        3 bytes
  7828 ;; Hardware stack levels used:    1
  7829 ;; Hardware stack levels required when called:    5
  7830 ;; This function calls:
  7831 ;;		_isTrainSt
  7832 ;;		_resetTrainData
  7833 ;; This function is called by:
  7834 ;;		_main
  7835 ;; This function uses a non-reentrant model
  7836 ;;
  7837                           
  7838                           
  7839                           ;psect for function _initTrain
  7840  0602                     _initTrain:	
  7841                           
  7842                           ;main.c: 137: spi1_Read_data = spi1_buffer_data[read_count1];
  7843                           
  7844                           ;incstack = 0
  7845                           ; Regs used in _initTrain: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7846  0602  30F0               	movlw	240
  7847  0603  0020               	movlb	0	; select bank0
  7848  0604  00AB               	movwf	??_initTrain
  7849  0605  3025               	movlw	37
  7850  0606  00AC               	movwf	??_initTrain+1
  7851  0607  0862               	movf	_read_count1,w
  7852  0608  072B               	addwf	??_initTrain,w
  7853  0609  0086               	movwf	6
  7854  060A  0863               	movf	_read_count1+1,w
  7855  060B  3D2C               	addwfc	??_initTrain+1,w
  7856  060C  0087               	movwf	7
  7857  060D  0801               	movf	1,w
  7858  060E  00AD               	movwf	??_initTrain+2
  7859  060F  082D               	movf	??_initTrain+2,w
  7860  0610  00EC               	movwf	_spi1_Read_data
  7861                           
  7862                           ;main.c: 138: spi2_Send_data = spi1_Read_data;
  7863  0611  086C               	movf	_spi1_Read_data,w
  7864  0612  00AB               	movwf	??_initTrain
  7865  0613  082B               	movf	??_initTrain,w
  7866  0614  00ED               	movwf	_spi2_Send_data
  7867                           
  7868                           ;main.c: 139: read_count1++;
  7869  0615  3001               	movlw	1
  7870  0616  07E2               	addwf	_read_count1,f
  7871  0617  3000               	movlw	0
  7872  0618  3DE3               	addwfc	_read_count1+1,f
  7873                           
  7874                           ;main.c: 140: if(read_count1 == 256){
  7875  0619  0363               	decf	_read_count1+1,w
  7876  061A  0462               	iorwf	_read_count1,w
  7877  061B  1D03               	btfss	3,2
  7878  061C  2E1F               	goto	l3415
  7879                           
  7880                           ;main.c: 141: read_count1 = 0;
  7881  061D  01E2               	clrf	_read_count1
  7882  061E  01E3               	clrf	_read_count1+1
  7883  061F                     l3415:	
  7884                           
  7885                           ;main.c: 142: }
  7886                           ;main.c: 143: if(isTrainSt(spi1_Read_data)){
  7887  061F  086C               	movf	_spi1_Read_data,w
  7888  0620  3185  25B4  3186   	fcall	_isTrainSt
  7889  0623  1C03               	btfss	3,0
  7890  0624  2E30               	goto	l3425
  7891                           
  7892                           ;main.c: 144: trainPos = 0;
  7893  0625  0021               	movlb	1	; select bank1
  7894  0626  01DF               	clrf	_trainPos^(0+128)
  7895  0627  01E0               	clrf	(_trainPos+1)^(0+128)
  7896                           
  7897                           ;main.c: 145: resetTrainData();
  7898  0628  318F  270E  3186   	fcall	_resetTrainData
  7899                           
  7900                           ;main.c: 146: isreadTrain = 0;
  7901  062B  10F0               	bcf	_isreadTrain/(0+8),_isreadTrain& (0+7)
  7902                           
  7903                           ;main.c: 147: countabuf = 0;
  7904  062C  0020               	movlb	0	; select bank0
  7905  062D  01E8               	clrf	_countabuf
  7906  062E  01E9               	clrf	_countabuf+1
  7907                           
  7908                           ;main.c: 148: }else{
  7909  062F  2E35               	goto	l413
  7910  0630                     l3425:	
  7911                           
  7912                           ;main.c: 149: trainPos++;
  7913  0630  3001               	movlw	1
  7914  0631  0021               	movlb	1	; select bank1
  7915  0632  07DF               	addwf	_trainPos^(0+128),f
  7916  0633  3000               	movlw	0
  7917  0634  3DE0               	addwfc	(_trainPos+1)^(0+128),f
  7918  0635                     l413:	
  7919                           
  7920                           ;main.c: 150: }
  7921                           ;main.c: 151: if(st_dataLength < trainPos){
  7922  0635  0021               	movlb	1	; select bank1
  7923  0636  0860               	movf	(_trainPos+1)^(0+128),w
  7924  0637  026F               	subwf	(_st_dataLength+1)^(0+128),w
  7925  0638  1D03               	skipz
  7926  0639  2E3C               	goto	u2245
  7927  063A  085F               	movf	_trainPos^(0+128),w
  7928  063B  026E               	subwf	_st_dataLength^(0+128),w
  7929  063C                     u2245:	
  7930  063C  1803               	skipnc
  7931  063D  0008               	return
  7932                           
  7933                           ;main.c: 152: trainPos = 0;
  7934  063E  01DF               	clrf	_trainPos^(0+128)
  7935  063F  01E0               	clrf	(_trainPos+1)^(0+128)
  7936                           
  7937                           ;main.c: 153: resetTrainData();
  7938  0640  318F  270E         	fcall	_resetTrainData
  7939                           
  7940                           ;main.c: 154: isreadTrain = 0;
  7941  0642  10F0               	bcf	_isreadTrain/(0+8),_isreadTrain& (0+7)
  7942                           
  7943                           ;main.c: 155: countabuf = 0;
  7944  0643  0020               	movlb	0	; select bank0
  7945  0644  01E8               	clrf	_countabuf
  7946  0645  01E9               	clrf	_countabuf+1
  7947  0646  0008               	return
  7948  0647                     __end_of_initTrain:	
  7949                           
  7950                           	psect	text21
  7951  0F0E                     __ptext21:	
  7952 ;; *************** function _resetTrainData *****************
  7953 ;; Defined at:
  7954 ;;		line 180 in file "main.c"
  7955 ;; Parameters:    Size  Location     Type
  7956 ;;		None
  7957 ;; Auto vars:     Size  Location     Type
  7958 ;;		None
  7959 ;; Return value:  Size  Location     Type
  7960 ;;                  1    wreg      void 
  7961 ;; Registers used:
  7962 ;;		wreg, status,2, status,0, pclath, cstack
  7963 ;; Tracked objects:
  7964 ;;		On entry : 0/0
  7965 ;;		On exit  : 0/0
  7966 ;;		Unchanged: 0/0
  7967 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7968 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7969 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7970 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7971 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7972 ;;Total ram usage:        0 bytes
  7973 ;; Hardware stack levels used:    1
  7974 ;; Hardware stack levels required when called:    4
  7975 ;; This function calls:
  7976 ;;		_restartCargo
  7977 ;; This function is called by:
  7978 ;;		_initTrain
  7979 ;; This function uses a non-reentrant model
  7980 ;;
  7981                           
  7982                           
  7983                           ;psect for function _resetTrainData
  7984  0F0E                     _resetTrainData:	
  7985                           
  7986                           ;main.c: 181: st_dataLength = 0xFFFF;
  7987                           
  7988                           ;incstack = 0
  7989                           ; Regs used in _resetTrainData: [wreg+status,2+status,0+pclath+cstack]
  7990  0F0E  30FF               	movlw	255
  7991  0F0F  0021               	movlb	1	; select bank1
  7992  0F10  00EE               	movwf	_st_dataLength^(0+128)
  7993  0F11  30FF               	movlw	255
  7994  0F12  00EF               	movwf	(_st_dataLength^(0+128)+1)
  7995                           
  7996                           ;main.c: 182: st_type = 0;
  7997  0F13  0020               	movlb	0	; select bank0
  7998  0F14  01EE               	clrf	_st_type
  7999                           
  8000                           ;main.c: 183: restartCargo();
  8001  0F15  318E  26F4         	fcall	_restartCargo
  8002  0F17  0008               	return
  8003  0F18                     __end_of_resetTrainData:	
  8004                           
  8005                           	psect	text22
  8006  0EF4                     __ptext22:	
  8007 ;; *************** function _restartCargo *****************
  8008 ;; Defined at:
  8009 ;;		line 36 in file "struct.c"
  8010 ;; Parameters:    Size  Location     Type
  8011 ;;		None
  8012 ;; Auto vars:     Size  Location     Type
  8013 ;;		None
  8014 ;; Return value:  Size  Location     Type
  8015 ;;                  1    wreg      void 
  8016 ;; Registers used:
  8017 ;;		status,2
  8018 ;; Tracked objects:
  8019 ;;		On entry : 0/0
  8020 ;;		On exit  : 0/0
  8021 ;;		Unchanged: 0/0
  8022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8023 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8024 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8025 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8026 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8027 ;;Total ram usage:        0 bytes
  8028 ;; Hardware stack levels used:    1
  8029 ;; Hardware stack levels required when called:    3
  8030 ;; This function calls:
  8031 ;;		Nothing
  8032 ;; This function is called by:
  8033 ;;		_resetTrainData
  8034 ;;		_readCargo
  8035 ;;		_EEPROM_download
  8036 ;; This function uses a non-reentrant model
  8037 ;;
  8038                           
  8039                           
  8040                           ;psect for function _restartCargo
  8041  0EF4                     _restartCargo:	
  8042                           
  8043                           ;struct.c: 37: cargoData.address = 0;
  8044                           
  8045                           ;incstack = 0
  8046                           ; Regs used in _restartCargo: [status,2]
  8047  0EF4  0020               	movlb	0	; select bank0
  8048  0EF5  01D6               	clrf	_cargoData+4
  8049                           
  8050                           ;struct.c: 38: cargoData.command = 0;
  8051  0EF6  01D4               	clrf	_cargoData+2
  8052                           
  8053                           ;struct.c: 39: cargoData.index = 0;
  8054  0EF7  01D5               	clrf	_cargoData+3
  8055  0EF8  0008               	return
  8056  0EF9                     __end_of_restartCargo:	
  8057                           
  8058                           	psect	text23
  8059  05B4                     __ptext23:	
  8060 ;; *************** function _isTrainSt *****************
  8061 ;; Defined at:
  8062 ;;		line 186 in file "main.c"
  8063 ;; Parameters:    Size  Location     Type
  8064 ;;  buf             1    wreg     unsigned char 
  8065 ;; Auto vars:     Size  Location     Type
  8066 ;;  buf             1   10[BANK0 ] unsigned char 
  8067 ;; Return value:  Size  Location     Type
  8068 ;;		None               void
  8069 ;; Registers used:
  8070 ;;		wreg, status,2, status,0
  8071 ;; Tracked objects:
  8072 ;;		On entry : 0/0
  8073 ;;		On exit  : 0/0
  8074 ;;		Unchanged: 0/0
  8075 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8076 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8077 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8078 ;;      Temps:          0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8079 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8080 ;;Total ram usage:       11 bytes
  8081 ;; Hardware stack levels used:    1
  8082 ;; Hardware stack levels required when called:    3
  8083 ;; This function calls:
  8084 ;;		Nothing
  8085 ;; This function is called by:
  8086 ;;		_initTrain
  8087 ;; This function uses a non-reentrant model
  8088 ;;
  8089                           
  8090                           
  8091                           ;psect for function _isTrainSt
  8092  05B4                     _isTrainSt:	
  8093                           
  8094                           ;incstack = 0
  8095                           ; Regs used in _isTrainSt: [wreg+status,2+status,0]
  8096                           ;isTrainSt@buf stored from wreg
  8097  05B4  0020               	movlb	0	; select bank0
  8098  05B5  00AA               	movwf	isTrainSt@buf
  8099                           
  8100                           ;main.c: 187: startTrainBytes = startTrainBytes << 8 | (buf +SPI_OFFSET_BYTE);
  8101  05B6  082A               	movf	isTrainSt@buf,w
  8102  05B7  077A               	addwf	_SPI_OFFSET_BYTE,w
  8103  05B8  00A0               	movwf	??_isTrainSt
  8104  05B9  01A1               	clrf	??_isTrainSt+1
  8105  05BA  0DA1               	rlf	??_isTrainSt+1,f
  8106  05BB  0820               	movf	??_isTrainSt,w
  8107  05BC  00A2               	movwf	??_isTrainSt+2
  8108  05BD  0821               	movf	??_isTrainSt+1,w
  8109  05BE  00A3               	movwf	??_isTrainSt+3
  8110  05BF  3000               	movlw	0
  8111  05C0  1BA3               	btfsc	??_isTrainSt+3,7
  8112  05C1  30FF               	movlw	255
  8113  05C2  00A4               	movwf	??_isTrainSt+4
  8114  05C3  00A5               	movwf	??_isTrainSt+5
  8115  05C4  0021               	movlb	1	; select bank1
  8116  05C5  0853               	movf	_startTrainBytes^(0+128),w
  8117  05C6  0020               	movlb	0	; select bank0
  8118  05C7  00A6               	movwf	??_isTrainSt+6
  8119  05C8  0021               	movlb	1	; select bank1
  8120  05C9  0854               	movf	(_startTrainBytes+1)^(0+128),w
  8121  05CA  0020               	movlb	0	; select bank0
  8122  05CB  00A7               	movwf	??_isTrainSt+7
  8123  05CC  0021               	movlb	1	; select bank1
  8124  05CD  0855               	movf	(_startTrainBytes+2)^(0+128),w
  8125  05CE  0020               	movlb	0	; select bank0
  8126  05CF  00A8               	movwf	??_isTrainSt+8
  8127  05D0  0021               	movlb	1	; select bank1
  8128  05D1  0856               	movf	(_startTrainBytes+3)^(0+128),w
  8129  05D2  0020               	movlb	0	; select bank0
  8130  05D3  00A9               	movwf	??_isTrainSt+9
  8131  05D4  3008               	movlw	8
  8132  05D5                     u2175:	
  8133  05D5  35A6               	lslf	??_isTrainSt+6,f
  8134  05D6  0DA7               	rlf	??_isTrainSt+7,f
  8135  05D7  0DA8               	rlf	??_isTrainSt+8,f
  8136  05D8  0DA9               	rlf	??_isTrainSt+9,f
  8137  05D9  0B89               	decfsz	9,f
  8138  05DA  2DD5               	goto	u2175
  8139  05DB  0826               	movf	??_isTrainSt+6,w
  8140  05DC  04A2               	iorwf	??_isTrainSt+2,f
  8141  05DD  0827               	movf	??_isTrainSt+7,w
  8142  05DE  04A3               	iorwf	??_isTrainSt+3,f
  8143  05DF  0828               	movf	??_isTrainSt+8,w
  8144  05E0  04A4               	iorwf	??_isTrainSt+4,f
  8145  05E1  0829               	movf	??_isTrainSt+9,w
  8146  05E2  04A5               	iorwf	??_isTrainSt+5,f
  8147  05E3  0825               	movf	??_isTrainSt+5,w
  8148  05E4  0021               	movlb	1	; select bank1
  8149  05E5  00D6               	movwf	(_startTrainBytes+3)^(0+128)
  8150  05E6  0020               	movlb	0	; select bank0
  8151  05E7  0824               	movf	??_isTrainSt+4,w
  8152  05E8  0021               	movlb	1	; select bank1
  8153  05E9  00D5               	movwf	(_startTrainBytes+2)^(0+128)
  8154  05EA  0020               	movlb	0	; select bank0
  8155  05EB  0823               	movf	??_isTrainSt+3,w
  8156  05EC  0021               	movlb	1	; select bank1
  8157  05ED  00D4               	movwf	(_startTrainBytes+1)^(0+128)
  8158  05EE  0020               	movlb	0	; select bank0
  8159  05EF  0822               	movf	??_isTrainSt+2,w
  8160  05F0  0021               	movlb	1	; select bank1
  8161  05F1  00D3               	movwf	_startTrainBytes^(0+128)
  8162                           
  8163                           ;main.c: 188: if(startTrainBytes == 0xFFFFFFFF){
  8164  05F2  0A53               	incf	_startTrainBytes^(0+128),w
  8165  05F3  1D03               	skipz
  8166  05F4  2E00               	goto	l3269
  8167  05F5  0A54               	incf	(_startTrainBytes+1)^(0+128),w
  8168  05F6  1D03               	skipz
  8169  05F7  2E00               	goto	l3269
  8170  05F8  0A55               	incf	(_startTrainBytes+2)^(0+128),w
  8171  05F9  1D03               	skipz
  8172  05FA  2E00               	goto	l3269
  8173  05FB  0A56               	incf	(_startTrainBytes+3)^(0+128),w
  8174  05FC  1D03               	btfss	3,2
  8175  05FD  2E00               	goto	l3269
  8176                           
  8177                           ;main.c: 189: return 1;
  8178  05FE  1403               	setc
  8179                           
  8180                           ;main.c: 190: }else{
  8181  05FF  0008               	return
  8182  0600                     l3269:	
  8183                           
  8184                           ;main.c: 191: return 0;
  8185  0600  1003               	clrc
  8186  0601  0008               	return
  8187  0602                     __end_of_isTrainSt:	
  8188                           
  8189                           	psect	text24
  8190  04DA                     __ptext24:	
  8191 ;; *************** function _initComu_types *****************
  8192 ;; Defined at:
  8193 ;;		line 19 in file "comu_type.c"
  8194 ;; Parameters:    Size  Location     Type
  8195 ;;		None
  8196 ;; Auto vars:     Size  Location     Type
  8197 ;;		None
  8198 ;; Return value:  Size  Location     Type
  8199 ;;                  1    wreg      void 
  8200 ;; Registers used:
  8201 ;;		wreg
  8202 ;; Tracked objects:
  8203 ;;		On entry : 0/0
  8204 ;;		On exit  : 0/0
  8205 ;;		Unchanged: 0/0
  8206 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8207 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8208 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8209 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8210 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8211 ;;Total ram usage:        1 bytes
  8212 ;; Hardware stack levels used:    1
  8213 ;; Hardware stack levels required when called:    3
  8214 ;; This function calls:
  8215 ;;		Nothing
  8216 ;; This function is called by:
  8217 ;;		_main
  8218 ;; This function uses a non-reentrant model
  8219 ;;
  8220                           
  8221                           
  8222                           ;psect for function _initComu_types
  8223  04DA                     _initComu_types:	
  8224                           
  8225                           ;comu_type.c: 20: comu_types[0] = 0b00111111;
  8226                           
  8227                           ;incstack = 0
  8228                           ; Regs used in _initComu_types: [wreg]
  8229  04DA  303F               	movlw	63
  8230  04DB  0020               	movlb	0	; select bank0
  8231  04DC  00A0               	movwf	??_initComu_types
  8232  04DD  0820               	movf	??_initComu_types,w
  8233  04DE  0022               	movlb	2	; select bank2
  8234  04DF  00A0               	movwf	_comu_types^(0+256)
  8235                           
  8236                           ;comu_type.c: 21: comu_types[1] = 0b01111111;
  8237  04E0  307F               	movlw	127
  8238  04E1  0020               	movlb	0	; select bank0
  8239  04E2  00A0               	movwf	??_initComu_types
  8240  04E3  0820               	movf	??_initComu_types,w
  8241  04E4  0022               	movlb	2	; select bank2
  8242  04E5  00A1               	movwf	(_comu_types^(0+256)+1)
  8243                           
  8244                           ;comu_type.c: 22: comu_types[2] = 0b10011111;
  8245  04E6  309F               	movlw	159
  8246  04E7  0020               	movlb	0	; select bank0
  8247  04E8  00A0               	movwf	??_initComu_types
  8248  04E9  0820               	movf	??_initComu_types,w
  8249  04EA  0022               	movlb	2	; select bank2
  8250  04EB  00A2               	movwf	(_comu_types^(0+256)+2)
  8251                           
  8252                           ;comu_type.c: 23: comu_types[3] = 0b10101111;
  8253  04EC  30AF               	movlw	175
  8254  04ED  0020               	movlb	0	; select bank0
  8255  04EE  00A0               	movwf	??_initComu_types
  8256  04EF  0820               	movf	??_initComu_types,w
  8257  04F0  0022               	movlb	2	; select bank2
  8258  04F1  00A3               	movwf	(_comu_types^(0+256)+3)
  8259                           
  8260                           ;comu_type.c: 24: comu_types[4] = 0b10111111;
  8261  04F2  30BF               	movlw	191
  8262  04F3  0020               	movlb	0	; select bank0
  8263  04F4  00A0               	movwf	??_initComu_types
  8264  04F5  0820               	movf	??_initComu_types,w
  8265  04F6  0022               	movlb	2	; select bank2
  8266  04F7  00A4               	movwf	(_comu_types^(0+256)+4)
  8267                           
  8268                           ;comu_type.c: 25: comu_types[5] = 0b11001111;
  8269  04F8  30CF               	movlw	207
  8270  04F9  0020               	movlb	0	; select bank0
  8271  04FA  00A0               	movwf	??_initComu_types
  8272  04FB  0820               	movf	??_initComu_types,w
  8273  04FC  0022               	movlb	2	; select bank2
  8274  04FD  00A5               	movwf	(_comu_types^(0+256)+5)
  8275                           
  8276                           ;comu_type.c: 26: comu_types[6] = 0b11010111;
  8277  04FE  30D7               	movlw	215
  8278  04FF  0020               	movlb	0	; select bank0
  8279  0500  00A0               	movwf	??_initComu_types
  8280  0501  0820               	movf	??_initComu_types,w
  8281  0502  0022               	movlb	2	; select bank2
  8282  0503  00A6               	movwf	(_comu_types^(0+256)+6)
  8283                           
  8284                           ;comu_type.c: 27: comu_types[7] = 0b11011111;
  8285  0504  30DF               	movlw	223
  8286  0505  0020               	movlb	0	; select bank0
  8287  0506  00A0               	movwf	??_initComu_types
  8288  0507  0820               	movf	??_initComu_types,w
  8289  0508  0022               	movlb	2	; select bank2
  8290  0509  00A7               	movwf	(_comu_types^(0+256)+7)
  8291                           
  8292                           ;comu_type.c: 28: comu_types[8] = 0b11100111;
  8293  050A  30E7               	movlw	231
  8294  050B  0020               	movlb	0	; select bank0
  8295  050C  00A0               	movwf	??_initComu_types
  8296  050D  0820               	movf	??_initComu_types,w
  8297  050E  0022               	movlb	2	; select bank2
  8298  050F  00A8               	movwf	(_comu_types^(0+256)+8)
  8299                           
  8300                           ;comu_type.c: 29: comu_types[9] = 0b11101011;
  8301  0510  30EB               	movlw	235
  8302  0511  0020               	movlb	0	; select bank0
  8303  0512  00A0               	movwf	??_initComu_types
  8304  0513  0820               	movf	??_initComu_types,w
  8305  0514  0022               	movlb	2	; select bank2
  8306  0515  00A9               	movwf	(_comu_types^(0+256)+9)
  8307                           
  8308                           ;comu_type.c: 30: comu_types[10] = 0b11101111;
  8309  0516  30EF               	movlw	239
  8310  0517  0020               	movlb	0	; select bank0
  8311  0518  00A0               	movwf	??_initComu_types
  8312  0519  0820               	movf	??_initComu_types,w
  8313  051A  0022               	movlb	2	; select bank2
  8314  051B  00AA               	movwf	(_comu_types^(0+256)+10)
  8315                           
  8316                           ;comu_type.c: 31: comu_types[11] = 0b11110001;
  8317  051C  30F1               	movlw	241
  8318  051D  0020               	movlb	0	; select bank0
  8319  051E  00A0               	movwf	??_initComu_types
  8320  051F  0820               	movf	??_initComu_types,w
  8321  0520  0022               	movlb	2	; select bank2
  8322  0521  00AB               	movwf	(_comu_types^(0+256)+11)
  8323                           
  8324                           ;comu_type.c: 32: comu_types[12] = 0b11110011;
  8325  0522  30F3               	movlw	243
  8326  0523  0020               	movlb	0	; select bank0
  8327  0524  00A0               	movwf	??_initComu_types
  8328  0525  0820               	movf	??_initComu_types,w
  8329  0526  0022               	movlb	2	; select bank2
  8330  0527  00AC               	movwf	(_comu_types^(0+256)+12)
  8331                           
  8332                           ;comu_type.c: 33: comu_types[13] = 0b11110101;
  8333  0528  30F5               	movlw	245
  8334  0529  0020               	movlb	0	; select bank0
  8335  052A  00A0               	movwf	??_initComu_types
  8336  052B  0820               	movf	??_initComu_types,w
  8337  052C  0022               	movlb	2	; select bank2
  8338  052D  00AD               	movwf	(_comu_types^(0+256)+13)
  8339                           
  8340                           ;comu_type.c: 34: comu_types[14] = 0b11110111;
  8341  052E  30F7               	movlw	247
  8342  052F  0020               	movlb	0	; select bank0
  8343  0530  00A0               	movwf	??_initComu_types
  8344  0531  0820               	movf	??_initComu_types,w
  8345  0532  0022               	movlb	2	; select bank2
  8346  0533  00AE               	movwf	(_comu_types^(0+256)+14)
  8347                           
  8348                           ;comu_type.c: 35: comu_types[15] = 0b11111000;
  8349  0534  30F8               	movlw	248
  8350  0535  0020               	movlb	0	; select bank0
  8351  0536  00A0               	movwf	??_initComu_types
  8352  0537  0820               	movf	??_initComu_types,w
  8353  0538  0022               	movlb	2	; select bank2
  8354  0539  00AF               	movwf	(_comu_types^(0+256)+15)
  8355                           
  8356                           ;comu_type.c: 36: comu_types[16] = 0b11111001;
  8357  053A  30F9               	movlw	249
  8358  053B  0020               	movlb	0	; select bank0
  8359  053C  00A0               	movwf	??_initComu_types
  8360  053D  0820               	movf	??_initComu_types,w
  8361  053E  0022               	movlb	2	; select bank2
  8362  053F  00B0               	movwf	(_comu_types^(0+256)+16)
  8363                           
  8364                           ;comu_type.c: 37: comu_types[17] = 0b11111010;
  8365  0540  30FA               	movlw	250
  8366  0541  0020               	movlb	0	; select bank0
  8367  0542  00A0               	movwf	??_initComu_types
  8368  0543  0820               	movf	??_initComu_types,w
  8369  0544  0022               	movlb	2	; select bank2
  8370  0545  00B1               	movwf	(_comu_types^(0+256)+17)
  8371  0546  0008               	return
  8372  0547                     __end_of_initComu_types:	
  8373                           
  8374                           	psect	text25
  8375  0547                     __ptext25:	
  8376 ;; *************** function _initComand *****************
  8377 ;; Defined at:
  8378 ;;		line 12 in file "command.c"
  8379 ;; Parameters:    Size  Location     Type
  8380 ;;		None
  8381 ;; Auto vars:     Size  Location     Type
  8382 ;;		None
  8383 ;; Return value:  Size  Location     Type
  8384 ;;                  1    wreg      void 
  8385 ;; Registers used:
  8386 ;;		wreg
  8387 ;; Tracked objects:
  8388 ;;		On entry : 0/0
  8389 ;;		On exit  : 0/0
  8390 ;;		Unchanged: 0/0
  8391 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8392 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8393 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8394 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8395 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8396 ;;Total ram usage:        1 bytes
  8397 ;; Hardware stack levels used:    1
  8398 ;; Hardware stack levels required when called:    3
  8399 ;; This function calls:
  8400 ;;		Nothing
  8401 ;; This function is called by:
  8402 ;;		_main
  8403 ;; This function uses a non-reentrant model
  8404 ;;
  8405                           
  8406                           
  8407                           ;psect for function _initComand
  8408  0547                     _initComand:	
  8409                           
  8410                           ;command.c: 13: command[0] = 0b00111111;
  8411                           
  8412                           ;incstack = 0
  8413                           ; Regs used in _initComand: [wreg]
  8414  0547  303F               	movlw	63
  8415  0548  0020               	movlb	0	; select bank0
  8416  0549  00A0               	movwf	??_initComand
  8417  054A  0820               	movf	??_initComand,w
  8418  054B  0021               	movlb	1	; select bank1
  8419  054C  00A0               	movwf	_command^(0+128)
  8420                           
  8421                           ;command.c: 14: command[1] = 0b01111111;
  8422  054D  307F               	movlw	127
  8423  054E  0020               	movlb	0	; select bank0
  8424  054F  00A0               	movwf	??_initComand
  8425  0550  0820               	movf	??_initComand,w
  8426  0551  0021               	movlb	1	; select bank1
  8427  0552  00A1               	movwf	(_command^(0+128)+1)
  8428                           
  8429                           ;command.c: 15: command[2] = 0b10011111;
  8430  0553  309F               	movlw	159
  8431  0554  0020               	movlb	0	; select bank0
  8432  0555  00A0               	movwf	??_initComand
  8433  0556  0820               	movf	??_initComand,w
  8434  0557  0021               	movlb	1	; select bank1
  8435  0558  00A2               	movwf	(_command^(0+128)+2)
  8436                           
  8437                           ;command.c: 16: command[3] = 0b10101111;
  8438  0559  30AF               	movlw	175
  8439  055A  0020               	movlb	0	; select bank0
  8440  055B  00A0               	movwf	??_initComand
  8441  055C  0820               	movf	??_initComand,w
  8442  055D  0021               	movlb	1	; select bank1
  8443  055E  00A3               	movwf	(_command^(0+128)+3)
  8444                           
  8445                           ;command.c: 17: command[4] = 0b10111111;
  8446  055F  30BF               	movlw	191
  8447  0560  0020               	movlb	0	; select bank0
  8448  0561  00A0               	movwf	??_initComand
  8449  0562  0820               	movf	??_initComand,w
  8450  0563  0021               	movlb	1	; select bank1
  8451  0564  00A4               	movwf	(_command^(0+128)+4)
  8452                           
  8453                           ;command.c: 18: command[5] = 0b11001111;
  8454  0565  30CF               	movlw	207
  8455  0566  0020               	movlb	0	; select bank0
  8456  0567  00A0               	movwf	??_initComand
  8457  0568  0820               	movf	??_initComand,w
  8458  0569  0021               	movlb	1	; select bank1
  8459  056A  00A5               	movwf	(_command^(0+128)+5)
  8460                           
  8461                           ;command.c: 19: command[6] = 0b11010111;
  8462  056B  30D7               	movlw	215
  8463  056C  0020               	movlb	0	; select bank0
  8464  056D  00A0               	movwf	??_initComand
  8465  056E  0820               	movf	??_initComand,w
  8466  056F  0021               	movlb	1	; select bank1
  8467  0570  00A6               	movwf	(_command^(0+128)+6)
  8468                           
  8469                           ;command.c: 20: command[7] = 0b11011111;
  8470  0571  30DF               	movlw	223
  8471  0572  0020               	movlb	0	; select bank0
  8472  0573  00A0               	movwf	??_initComand
  8473  0574  0820               	movf	??_initComand,w
  8474  0575  0021               	movlb	1	; select bank1
  8475  0576  00A7               	movwf	(_command^(0+128)+7)
  8476                           
  8477                           ;command.c: 21: command[8] = 0b11100111;
  8478  0577  30E7               	movlw	231
  8479  0578  0020               	movlb	0	; select bank0
  8480  0579  00A0               	movwf	??_initComand
  8481  057A  0820               	movf	??_initComand,w
  8482  057B  0021               	movlb	1	; select bank1
  8483  057C  00A8               	movwf	(_command^(0+128)+8)
  8484                           
  8485                           ;command.c: 22: command[9] = 0b11101011;
  8486  057D  30EB               	movlw	235
  8487  057E  0020               	movlb	0	; select bank0
  8488  057F  00A0               	movwf	??_initComand
  8489  0580  0820               	movf	??_initComand,w
  8490  0581  0021               	movlb	1	; select bank1
  8491  0582  00A9               	movwf	(_command^(0+128)+9)
  8492                           
  8493                           ;command.c: 23: command[10] = 0b11101111;
  8494  0583  30EF               	movlw	239
  8495  0584  0020               	movlb	0	; select bank0
  8496  0585  00A0               	movwf	??_initComand
  8497  0586  0820               	movf	??_initComand,w
  8498  0587  0021               	movlb	1	; select bank1
  8499  0588  00AA               	movwf	(_command^(0+128)+10)
  8500                           
  8501                           ;command.c: 24: command[11] = 0b11110001;
  8502  0589  30F1               	movlw	241
  8503  058A  0020               	movlb	0	; select bank0
  8504  058B  00A0               	movwf	??_initComand
  8505  058C  0820               	movf	??_initComand,w
  8506  058D  0021               	movlb	1	; select bank1
  8507  058E  00AB               	movwf	(_command^(0+128)+11)
  8508                           
  8509                           ;command.c: 25: command[12] = 0b11110011;
  8510  058F  30F3               	movlw	243
  8511  0590  0020               	movlb	0	; select bank0
  8512  0591  00A0               	movwf	??_initComand
  8513  0592  0820               	movf	??_initComand,w
  8514  0593  0021               	movlb	1	; select bank1
  8515  0594  00AC               	movwf	(_command^(0+128)+12)
  8516                           
  8517                           ;command.c: 26: command[13] = 0b11110101;
  8518  0595  30F5               	movlw	245
  8519  0596  0020               	movlb	0	; select bank0
  8520  0597  00A0               	movwf	??_initComand
  8521  0598  0820               	movf	??_initComand,w
  8522  0599  0021               	movlb	1	; select bank1
  8523  059A  00AD               	movwf	(_command^(0+128)+13)
  8524                           
  8525                           ;command.c: 27: command[14] = 0b11110111;
  8526  059B  30F7               	movlw	247
  8527  059C  0020               	movlb	0	; select bank0
  8528  059D  00A0               	movwf	??_initComand
  8529  059E  0820               	movf	??_initComand,w
  8530  059F  0021               	movlb	1	; select bank1
  8531  05A0  00AE               	movwf	(_command^(0+128)+14)
  8532                           
  8533                           ;command.c: 28: command[15] = 0b11111000;
  8534  05A1  30F8               	movlw	248
  8535  05A2  0020               	movlb	0	; select bank0
  8536  05A3  00A0               	movwf	??_initComand
  8537  05A4  0820               	movf	??_initComand,w
  8538  05A5  0021               	movlb	1	; select bank1
  8539  05A6  00AF               	movwf	(_command^(0+128)+15)
  8540                           
  8541                           ;command.c: 29: command[16] = 0b11111001;
  8542  05A7  30F9               	movlw	249
  8543  05A8  0020               	movlb	0	; select bank0
  8544  05A9  00A0               	movwf	??_initComand
  8545  05AA  0820               	movf	??_initComand,w
  8546  05AB  0021               	movlb	1	; select bank1
  8547  05AC  00B0               	movwf	(_command^(0+128)+16)
  8548                           
  8549                           ;command.c: 30: command[17] = 0b11111010;
  8550  05AD  30FA               	movlw	250
  8551  05AE  0020               	movlb	0	; select bank0
  8552  05AF  00A0               	movwf	??_initComand
  8553  05B0  0820               	movf	??_initComand,w
  8554  05B1  0021               	movlb	1	; select bank1
  8555  05B2  00B1               	movwf	(_command^(0+128)+17)
  8556  05B3  0008               	return
  8557  05B4                     __end_of_initComand:	
  8558                           
  8559                           	psect	text26
  8560  0F7F                     __ptext26:	
  8561 ;; *************** function _initCargo *****************
  8562 ;; Defined at:
  8563 ;;		line 14 in file "struct.c"
  8564 ;; Parameters:    Size  Location     Type
  8565 ;;		None
  8566 ;; Auto vars:     Size  Location     Type
  8567 ;;		None
  8568 ;; Return value:  Size  Location     Type
  8569 ;;                  1    wreg      void 
  8570 ;; Registers used:
  8571 ;;		wreg, status,2
  8572 ;; Tracked objects:
  8573 ;;		On entry : 0/0
  8574 ;;		On exit  : 0/0
  8575 ;;		Unchanged: 0/0
  8576 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8577 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8578 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8580 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8581 ;;Total ram usage:        0 bytes
  8582 ;; Hardware stack levels used:    1
  8583 ;; Hardware stack levels required when called:    3
  8584 ;; This function calls:
  8585 ;;		Nothing
  8586 ;; This function is called by:
  8587 ;;		_main
  8588 ;; This function uses a non-reentrant model
  8589 ;;
  8590                           
  8591                           
  8592                           ;psect for function _initCargo
  8593  0F7F                     _initCargo:	
  8594                           
  8595                           ;struct.c: 15: isMycargo = 1;
  8596                           
  8597                           ;incstack = 0
  8598                           ; Regs used in _initCargo: [wreg+status,2]
  8599  0F7F  1570               	bsf	_isMycargo/(0+8),_isMycargo& (0+7)
  8600                           
  8601                           ;struct.c: 16: cargoData.WorkingCount = 0;
  8602  0F80  3000               	movlw	0
  8603  0F81  0020               	movlb	0	; select bank0
  8604  0F82  00E1               	movwf	_cargoData+15
  8605  0F83  3000               	movlw	0
  8606  0F84  00E0               	movwf	_cargoData+14
  8607  0F85  3000               	movlw	0
  8608  0F86  00DF               	movwf	_cargoData+13
  8609  0F87  3000               	movlw	0
  8610  0F88  00DE               	movwf	_cargoData+12
  8611                           
  8612                           ;struct.c: 17: cargoData.address = 0;
  8613  0F89  01D6               	clrf	_cargoData+4
  8614                           
  8615                           ;struct.c: 18: cargoData.cargoLength = 0xFFFF;
  8616  0F8A  30FF               	movlw	255
  8617  0F8B  00D2               	movwf	_cargoData
  8618  0F8C  30FF               	movlw	255
  8619  0F8D  00D3               	movwf	_cargoData+1
  8620                           
  8621                           ;struct.c: 19: cargoData.clutchMode = 0;
  8622  0F8E  01DD               	clrf	_cargoData+11
  8623                           
  8624                           ;struct.c: 20: cargoData.command = 0;
  8625  0F8F  01D4               	clrf	_cargoData+2
  8626                           
  8627                           ;struct.c: 21: cargoData.index = 0;
  8628  0F90  01D5               	clrf	_cargoData+3
  8629                           
  8630                           ;struct.c: 22: cargoData.linkAngleTo = 0;
  8631  0F91  01D7               	clrf	_cargoData+5
  8632  0F92  01D8               	clrf	_cargoData+6
  8633                           
  8634                           ;struct.c: 23: cargoData.passedTime = 0;
  8635  0F93  01DB               	clrf	_cargoData+9
  8636  0F94  01DC               	clrf	_cargoData+10
  8637  0F95  0008               	return
  8638  0F96                     __end_of_initCargo:	
  8639                           
  8640                           	psect	text27
  8641  0FD8                     __ptext27:	
  8642 ;; *************** function _init *****************
  8643 ;; Defined at:
  8644 ;;		line 101 in file "main.c"
  8645 ;; Parameters:    Size  Location     Type
  8646 ;;		None
  8647 ;; Auto vars:     Size  Location     Type
  8648 ;;		None
  8649 ;; Return value:  Size  Location     Type
  8650 ;;                  1    wreg      void 
  8651 ;; Registers used:
  8652 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8653 ;; Tracked objects:
  8654 ;;		On entry : 0/0
  8655 ;;		On exit  : 0/0
  8656 ;;		Unchanged: 0/0
  8657 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8658 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8659 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8660 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8661 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8662 ;;Total ram usage:        0 bytes
  8663 ;; Hardware stack levels used:    1
  8664 ;; Hardware stack levels required when called:    4
  8665 ;; This function calls:
  8666 ;;		_clear
  8667 ;;		_initbuffer
  8668 ;; This function is called by:
  8669 ;;		_main
  8670 ;; This function uses a non-reentrant model
  8671 ;;
  8672                           
  8673                           
  8674                           ;psect for function _init
  8675  0FD8                     _init:	
  8676                           
  8677                           ;main.c: 102: count1 = 0;
  8678                           
  8679                           ;incstack = 0
  8680                           ; Regs used in _init: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8681  0FD8  0020               	movlb	0	; select bank0
  8682  0FD9  01E4               	clrf	_count1
  8683  0FDA  01E5               	clrf	_count1+1
  8684                           
  8685                           ;main.c: 103: count2 = 0;
  8686  0FDB  01EA               	clrf	_count2
  8687  0FDC  01EB               	clrf	_count2+1
  8688                           
  8689                           ;main.c: 104: initbuffer();
  8690  0FDD  3187  27AF  318F   	fcall	_initbuffer
  8691                           
  8692                           ;main.c: 106: OSCFRQbits.HFFRQ = 0b0111;
  8693  0FE0  0032               	movlb	18	; select bank18
  8694  0FE1  081F               	movf	31,w	;volatile
  8695  0FE2  39F0               	andlw	-16
  8696  0FE3  3807               	iorlw	7
  8697  0FE4  009F               	movwf	31	;volatile
  8698                           
  8699                           ;main.c: 107: OSCTUNEbits.HFTUN = 0b000000;
  8700  0FE5  30C0               	movlw	-64
  8701  0FE6  059E               	andwf	30,f	;volatile
  8702                           
  8703                           ;main.c: 108: clear();
  8704  0FE7  318F  2745         	fcall	_clear
  8705                           
  8706                           ;main.c: 109: WPUC = 0b11111111;
  8707  0FE9  30FF               	movlw	255
  8708  0FEA  0024               	movlb	4	; select bank4
  8709  0FEB  008E               	movwf	14	;volatile
  8710                           
  8711                           ;main.c: 110: WPUB = 0b11111111;
  8712  0FEC  30FF               	movlw	255
  8713  0FED  008D               	movwf	13	;volatile
  8714                           
  8715                           ;main.c: 111: WPUA = 0b11111111;
  8716  0FEE  30FF               	movlw	255
  8717  0FEF  008C               	movwf	12	;volatile
  8718                           
  8719                           ;main.c: 112: TRISBbits.TRISB6 = 1;
  8720  0FF0  0021               	movlb	1	; select bank1
  8721  0FF1  170D               	bsf	13,6	;volatile
  8722                           
  8723                           ;main.c: 113: TRISBbits.TRISB4 = 1;
  8724  0FF2  160D               	bsf	13,4	;volatile
  8725                           
  8726                           ;main.c: 114: TRISCbits.TRISC6 = 1;
  8727  0FF3  170E               	bsf	14,6	;volatile
  8728                           
  8729                           ;main.c: 115: INLVLBbits.INLVLB4 = 0;
  8730  0FF4  0027               	movlb	7	; select bank7
  8731  0FF5  120D               	bcf	13,4	;volatile
  8732                           
  8733                           ;main.c: 116: INLVLBbits.INLVLB6 = 0;
  8734  0FF6  130D               	bcf	13,6	;volatile
  8735                           
  8736                           ;main.c: 117: INLVLCbits.INLVLC5 = 0;
  8737  0FF7  128E               	bcf	14,5	;volatile
  8738                           
  8739                           ;main.c: 119: TRISBbits.TRISB5 = 1;
  8740  0FF8  0021               	movlb	1	; select bank1
  8741  0FF9  168D               	bsf	13,5	;volatile
  8742                           
  8743                           ;main.c: 120: INLVLBbits.INLVLB5 = 0;
  8744  0FFA  0027               	movlb	7	; select bank7
  8745  0FFB  128D               	bcf	13,5	;volatile
  8746                           
  8747                           ;main.c: 121: INLVLBbits.INLVLB7 = 0;
  8748  0FFC  138D               	bcf	13,7	;volatile
  8749                           
  8750                           ;main.c: 122: INLVLAbits.INLVLA1 = 0;
  8751  0FFD  108C               	bcf	12,1	;volatile
  8752                           
  8753                           ;main.c: 123: INLVLAbits.INLVLA2 = 0;
  8754  0FFE  110C               	bcf	12,2	;volatile
  8755  0FFF  0008               	return
  8756  1000                     __end_of_init:	
  8757                           ;main.c: 125: return;
  8758                           
  8759                           
  8760                           	psect	text28
  8761  07AF                     __ptext28:	
  8762 ;; *************** function _initbuffer *****************
  8763 ;; Defined at:
  8764 ;;		line 95 in file "main.c"
  8765 ;; Parameters:    Size  Location     Type
  8766 ;;		None
  8767 ;; Auto vars:     Size  Location     Type
  8768 ;;  i               2    2[BANK0 ] int 
  8769 ;; Return value:  Size  Location     Type
  8770 ;;                  1    wreg      void 
  8771 ;; Registers used:
  8772 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8773 ;; Tracked objects:
  8774 ;;		On entry : 0/0
  8775 ;;		On exit  : 0/0
  8776 ;;		Unchanged: 0/0
  8777 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8778 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8779 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8780 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8781 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8782 ;;Total ram usage:        4 bytes
  8783 ;; Hardware stack levels used:    1
  8784 ;; Hardware stack levels required when called:    3
  8785 ;; This function calls:
  8786 ;;		Nothing
  8787 ;; This function is called by:
  8788 ;;		_init
  8789 ;; This function uses a non-reentrant model
  8790 ;;
  8791                           
  8792                           
  8793                           ;psect for function _initbuffer
  8794  07AF                     _initbuffer:	
  8795                           
  8796                           ;main.c: 96: for(int i = 0; i < 256; i++){
  8797                           
  8798                           ;incstack = 0
  8799                           ; Regs used in _initbuffer: [wreg+fsr1l+fsr1h+status,2+status,0]
  8800  07AF  0020               	movlb	0	; select bank0
  8801  07B0  01A2               	clrf	initbuffer@i
  8802  07B1  01A3               	clrf	initbuffer@i+1
  8803  07B2                     L28:	
  8804  07B2  0823               	movf	initbuffer@i+1,w
  8805  07B3  3A80               	xorlw	128
  8806  07B4  00A0               	movwf	??_initbuffer
  8807  07B5  3081               	movlw	129
  8808  07B6  0220               	subwf	??_initbuffer,w
  8809  07B7  1D03               	skipz
  8810  07B8  2FBB               	goto	u2155
  8811  07B9  3000               	movlw	0
  8812  07BA  0222               	subwf	initbuffer@i,w
  8813  07BB                     u2155:	
  8814  07BB  1803               	btfsc	3,0
  8815  07BC  0008               	return
  8816                           
  8817                           ;main.c: 97: spi1_buffer_data[i] = 0;
  8818  07BD  30F0               	movlw	240
  8819  07BE  0020               	movlb	0	; select bank0
  8820  07BF  00A0               	movwf	??_initbuffer
  8821  07C0  3025               	movlw	37
  8822  07C1  00A1               	movwf	??_initbuffer+1
  8823  07C2  0822               	movf	initbuffer@i,w
  8824  07C3  0720               	addwf	??_initbuffer,w
  8825  07C4  0086               	movwf	6
  8826  07C5  0823               	movf	initbuffer@i+1,w
  8827  07C6  3D21               	addwfc	??_initbuffer+1,w
  8828  07C7  0087               	movwf	7
  8829  07C8  0181               	clrf	1
  8830                           
  8831                           ;main.c: 98: spi2_buffer_data[i] = 0;
  8832  07C9  30F0               	movlw	240
  8833  07CA  00A0               	movwf	??_initbuffer
  8834  07CB  3026               	movlw	38
  8835  07CC  00A1               	movwf	??_initbuffer+1
  8836  07CD  0822               	movf	initbuffer@i,w
  8837  07CE  0720               	addwf	??_initbuffer,w
  8838  07CF  0086               	movwf	6
  8839  07D0  0823               	movf	initbuffer@i+1,w
  8840  07D1  3D21               	addwfc	??_initbuffer+1,w
  8841  07D2  0087               	movwf	7
  8842  07D3  0181               	clrf	1
  8843  07D4  3001               	movlw	1
  8844  07D5  07A2               	addwf	initbuffer@i,f
  8845  07D6  3000               	movlw	0
  8846  07D7  3DA3               	addwfc	initbuffer@i+1,f
  8847  07D8  2FB2               	goto	L28
  8848  07D9                     __end_of_initbuffer:	
  8849                           
  8850                           	psect	text29
  8851  0F45                     __ptext29:	
  8852 ;; *************** function _clear *****************
  8853 ;; Defined at:
  8854 ;;		line 9 in file "util.c"
  8855 ;; Parameters:    Size  Location     Type
  8856 ;;		None
  8857 ;; Auto vars:     Size  Location     Type
  8858 ;;		None
  8859 ;; Return value:  Size  Location     Type
  8860 ;;                  1    wreg      void 
  8861 ;; Registers used:
  8862 ;;		status,2
  8863 ;; Tracked objects:
  8864 ;;		On entry : 0/0
  8865 ;;		On exit  : 0/0
  8866 ;;		Unchanged: 0/0
  8867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8868 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8869 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8870 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8871 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8872 ;;Total ram usage:        0 bytes
  8873 ;; Hardware stack levels used:    1
  8874 ;; Hardware stack levels required when called:    3
  8875 ;; This function calls:
  8876 ;;		Nothing
  8877 ;; This function is called by:
  8878 ;;		_init
  8879 ;; This function uses a non-reentrant model
  8880 ;;
  8881                           
  8882                           
  8883                           ;psect for function _clear
  8884  0F45                     _clear:	
  8885                           
  8886                           ;util.c: 10: ANSELA = 0x00;
  8887                           
  8888                           ;incstack = 0
  8889                           ; Regs used in _clear: [status,2]
  8890  0F45  0023               	movlb	3	; select bank3
  8891  0F46  018C               	clrf	12	;volatile
  8892                           
  8893                           ;util.c: 11: ANSELB = 0x00;
  8894  0F47  018D               	clrf	13	;volatile
  8895                           
  8896                           ;util.c: 12: ANSELC = 0x00;
  8897  0F48  018E               	clrf	14	;volatile
  8898                           
  8899                           ;util.c: 13: PORTA = 0x00;
  8900  0F49  0020               	movlb	0	; select bank0
  8901  0F4A  018C               	clrf	12	;volatile
  8902                           
  8903                           ;util.c: 14: PORTB = 0x00;
  8904  0F4B  018D               	clrf	13	;volatile
  8905                           
  8906                           ;util.c: 15: PORTC = 0x00;
  8907  0F4C  018E               	clrf	14	;volatile
  8908                           
  8909                           ;util.c: 16: TRISA = 0x00;
  8910  0F4D  0021               	movlb	1	; select bank1
  8911  0F4E  018C               	clrf	12	;volatile
  8912                           
  8913                           ;util.c: 17: TRISB = 0x00;
  8914  0F4F  018D               	clrf	13	;volatile
  8915                           
  8916                           ;util.c: 18: TRISC = 0x00;
  8917  0F50  018E               	clrf	14	;volatile
  8918  0F51  0008               	return
  8919  0F52                     __end_of_clear:	
  8920                           
  8921                           	psect	intentry
  8922  0004                     __pintentry:	
  8923 ;; *************** function _InterMSSP *****************
  8924 ;; Defined at:
  8925 ;;		line 68 in file "main.c"
  8926 ;; Parameters:    Size  Location     Type
  8927 ;;		None
  8928 ;; Auto vars:     Size  Location     Type
  8929 ;;		None
  8930 ;; Return value:  Size  Location     Type
  8931 ;;                  1    wreg      void 
  8932 ;; Registers used:
  8933 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8934 ;; Tracked objects:
  8935 ;;		On entry : 0/0
  8936 ;;		On exit  : 0/0
  8937 ;;		Unchanged: 0/0
  8938 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8939 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8940 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8941 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8942 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8943 ;;Total ram usage:        6 bytes
  8944 ;; Hardware stack levels used:    1
  8945 ;; Hardware stack levels required when called:    2
  8946 ;; This function calls:
  8947 ;;		_addAngle
  8948 ;;		_setSPI1sendData
  8949 ;; This function is called by:
  8950 ;;		Interrupt level 1
  8951 ;; This function uses a non-reentrant model
  8952 ;;
  8953                           
  8954  0004                     _InterMSSP:	
  8955                           
  8956                           ;incstack = 0
  8957  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  8958                           
  8959                           ; Regs used in _InterMSSP: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8960  0005  3180               	pagesel	$
  8961  0006  0020               	movlb	0	; select bank0
  8962  0007  087F               	movf	127,w
  8963  0008  00F8               	movwf	??_InterMSSP+5
  8964                           
  8965                           ;main.c: 70: if (PIR1bits.SSP1IF == 1) {
  8966  0009  1D91               	btfss	17,3	;volatile
  8967  000A  2830               	goto	i1l388
  8968                           
  8969                           ;main.c: 72: spi1_buffer_data[count1] = SSP1BUF -SPI_OFFSET_BYTE;
  8970  000B  037A               	decf	_SPI_OFFSET_BYTE,w
  8971  000C  3AFF               	xorlw	255
  8972  000D  0024               	movlb	4	; select bank4
  8973  000E  0711               	addwf	17,w	;volatile
  8974  000F  00F3               	movwf	??_InterMSSP
  8975  0010  30F0               	movlw	240
  8976  0011  00F4               	movwf	??_InterMSSP+1
  8977  0012  3025               	movlw	37
  8978  0013  00F5               	movwf	??_InterMSSP+2
  8979  0014  0020               	movlb	0	; select bank0
  8980  0015  0864               	movf	_count1,w
  8981  0016  0774               	addwf	??_InterMSSP+1,w
  8982  0017  00F6               	movwf	??_InterMSSP+3
  8983  0018  0865               	movf	_count1+1,w
  8984  0019  3D75               	addwfc	??_InterMSSP+2,w
  8985  001A  00F7               	movwf	??_InterMSSP+4
  8986  001B  0876               	movf	??_InterMSSP+3,w
  8987  001C  0086               	movwf	6
  8988  001D  0877               	movf	??_InterMSSP+4,w
  8989  001E  0087               	movwf	7
  8990  001F  0873               	movf	??_InterMSSP,w
  8991  0020  0081               	movwf	1
  8992                           
  8993                           ;main.c: 73: setSPI1sendData();
  8994  0021  3187  27D9  3180   	fcall	_setSPI1sendData
  8995                           
  8996                           ;main.c: 74: count1++;
  8997  0024  3001               	movlw	1
  8998  0025  0020               	movlb	0	; select bank0
  8999  0026  07E4               	addwf	_count1,f
  9000  0027  3000               	movlw	0
  9001  0028  3DE5               	addwfc	_count1+1,f
  9002                           
  9003                           ;main.c: 75: if(count1 == 256){
  9004  0029  0365               	decf	_count1+1,w
  9005  002A  0464               	iorwf	_count1,w
  9006  002B  1D03               	btfss	3,2
  9007  002C  2854               	goto	i1l2767
  9008                           
  9009                           ;main.c: 76: count1 = 0;
  9010  002D  01E4               	clrf	_count1
  9011  002E  01E5               	clrf	_count1+1
  9012                           
  9013                           ;main.c: 77: }
  9014                           ;main.c: 78: }else if (PIR2bits.SSP2IF == 1) {
  9015  002F  2854               	goto	i1l2767
  9016  0030                     i1l388:	
  9017  0030  1D92               	btfss	18,3	;volatile
  9018  0031  284F               	goto	i1l391
  9019                           
  9020                           ;main.c: 80: spi2_buffer_data[count2] = SSP2BUF;
  9021  0032  30F0               	movlw	240
  9022  0033  00F3               	movwf	??_InterMSSP
  9023  0034  3026               	movlw	38
  9024  0035  00F4               	movwf	??_InterMSSP+1
  9025  0036  086A               	movf	_count2,w
  9026  0037  0773               	addwf	??_InterMSSP,w
  9027  0038  00F5               	movwf	??_InterMSSP+2
  9028  0039  086B               	movf	_count2+1,w
  9029  003A  3D74               	addwfc	??_InterMSSP+1,w
  9030  003B  00F6               	movwf	??_InterMSSP+3
  9031  003C  0875               	movf	??_InterMSSP+2,w
  9032  003D  0086               	movwf	6
  9033  003E  0876               	movf	??_InterMSSP+3,w
  9034  003F  0087               	movwf	7
  9035  0040  0024               	movlb	4	; select bank4
  9036  0041  0819               	movf	25,w	;volatile
  9037  0042  0081               	movwf	1
  9038                           
  9039                           ;main.c: 81: count2++;
  9040  0043  3001               	movlw	1
  9041  0044  0020               	movlb	0	; select bank0
  9042  0045  07EA               	addwf	_count2,f
  9043  0046  3000               	movlw	0
  9044  0047  3DEB               	addwfc	_count2+1,f
  9045                           
  9046                           ;main.c: 82: if(count2 == 256){
  9047  0048  036B               	decf	_count2+1,w
  9048  0049  046A               	iorwf	_count2,w
  9049  004A  1D03               	btfss	3,2
  9050  004B  2854               	goto	i1l2767
  9051                           
  9052                           ;main.c: 83: count2 = 0;
  9053  004C  01EA               	clrf	_count2
  9054  004D  01EB               	clrf	_count2+1
  9055                           
  9056                           ;main.c: 84: }
  9057                           ;main.c: 85: }else if(IOCAFbits.IOCAF3 == 1){
  9058  004E  2854               	goto	i1l2767
  9059  004F                     i1l391:	
  9060  004F  0027               	movlb	7	; select bank7
  9061  0050  1D93               	btfss	19,3	;volatile
  9062  0051  2854               	goto	i1l2767
  9063                           
  9064                           ;main.c: 87: addAngle();
  9065  0052  318F  272D         	fcall	_addAngle
  9066  0054                     i1l2767:	
  9067                           
  9068                           ;main.c: 88: }
  9069                           ;main.c: 89: PIR1bits.SSP1IF = 0 ;
  9070  0054  0020               	movlb	0	; select bank0
  9071  0055  1191               	bcf	17,3	;volatile
  9072                           
  9073                           ;main.c: 90: PIR2bits.SSP2IF = 0 ;
  9074  0056  1192               	bcf	18,3	;volatile
  9075                           
  9076                           ;main.c: 91: IOCAFbits.IOCAF3 = 0;
  9077  0057  0027               	movlb	7	; select bank7
  9078  0058  1193               	bcf	19,3	;volatile
  9079                           
  9080                           ;main.c: 92: PIR0bits.IOCIF = 0;
  9081  0059  0020               	movlb	0	; select bank0
  9082  005A  1210               	bcf	16,4	;volatile
  9083                           
  9084                           ;main.c: 93: PIR0bits.INTF = 0;
  9085  005B  1010               	bcf	16,0	;volatile
  9086  005C  0878               	movf	??_InterMSSP+5,w
  9087  005D  00FF               	movwf	127
  9088  005E  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  9089  005F  0009               	retfie
  9090  0060                     __end_of_InterMSSP:	
  9091                           
  9092                           	psect	text31
  9093  07D9                     __ptext31:	
  9094 ;; *************** function _setSPI1sendData *****************
  9095 ;; Defined at:
  9096 ;;		line 92 in file "spiControl.c"
  9097 ;; Parameters:    Size  Location     Type
  9098 ;;		None
  9099 ;; Auto vars:     Size  Location     Type
  9100 ;;		None
  9101 ;; Return value:  Size  Location     Type
  9102 ;;                  1    wreg      void 
  9103 ;; Registers used:
  9104 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9105 ;; Tracked objects:
  9106 ;;		On entry : 0/0
  9107 ;;		On exit  : 0/0
  9108 ;;		Unchanged: 0/0
  9109 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9110 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9111 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9112 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9113 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9114 ;;Total ram usage:        2 bytes
  9115 ;; Hardware stack levels used:    1
  9116 ;; Hardware stack levels required when called:    1
  9117 ;; This function calls:
  9118 ;;		_isSPI2read
  9119 ;; This function is called by:
  9120 ;;		_InterMSSP
  9121 ;; This function uses a non-reentrant model
  9122 ;;
  9123                           
  9124                           
  9125                           ;psect for function _setSPI1sendData
  9126  07D9                     _setSPI1sendData:	
  9127                           
  9128                           ;spiControl.c: 93: if(!(isSPI2read() == 1)){
  9129                           
  9130                           ;incstack = 0
  9131                           ; Regs used in _setSPI1sendData: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9132  07D9  318F  275F  3187   	fcall	_isSPI2read
  9133  07DC  1803               	btfsc	3,0
  9134  07DD  2FF8               	goto	i1l2457
  9135                           
  9136                           ;spiControl.c: 94: SSP1BUF = spi2_buffer_data[read_count2];
  9137  07DE  30F0               	movlw	240
  9138  07DF  00F1               	movwf	??_setSPI1sendData
  9139  07E0  3026               	movlw	38
  9140  07E1  00F2               	movwf	??_setSPI1sendData+1
  9141  07E2  0021               	movlb	1	; select bank1
  9142  07E3  085B               	movf	_read_count2^(0+128),w
  9143  07E4  0771               	addwf	??_setSPI1sendData,w
  9144  07E5  0086               	movwf	6
  9145  07E6  085C               	movf	(_read_count2+1)^(0+128),w
  9146  07E7  3D72               	addwfc	??_setSPI1sendData+1,w
  9147  07E8  0087               	movwf	7
  9148  07E9  0801               	movf	1,w
  9149  07EA  0024               	movlb	4	; select bank4
  9150  07EB  0091               	movwf	17	;volatile
  9151                           
  9152                           ;spiControl.c: 95: read_count2++;
  9153  07EC  3001               	movlw	1
  9154  07ED  0021               	movlb	1	; select bank1
  9155  07EE  07DB               	addwf	_read_count2^(0+128),f
  9156  07EF  3000               	movlw	0
  9157  07F0  3DDC               	addwfc	(_read_count2+1)^(0+128),f
  9158                           
  9159                           ;spiControl.c: 96: if(read_count2 == 256){
  9160  07F1  035C               	decf	(_read_count2+1)^(0+128),w
  9161  07F2  045B               	iorwf	_read_count2^(0+128),w
  9162  07F3  1D03               	btfss	3,2
  9163  07F4  0008               	return
  9164                           
  9165                           ;spiControl.c: 97: read_count2 = 0;
  9166  07F5  01DB               	clrf	_read_count2^(0+128)
  9167  07F6  01DC               	clrf	(_read_count2+1)^(0+128)
  9168                           
  9169                           ;spiControl.c: 99: }
  9170                           ;spiControl.c: 100: }else{
  9171  07F7  0008               	return
  9172  07F8                     i1l2457:	
  9173                           
  9174                           ;spiControl.c: 102: SSP1BUF = 0x01;
  9175  07F8  3001               	movlw	1
  9176  07F9  0024               	movlb	4	; select bank4
  9177  07FA  0091               	movwf	17	;volatile
  9178  07FB  0008               	return
  9179  07FC                     __end_of_setSPI1sendData:	
  9180                           
  9181                           	psect	text32
  9182  0F5F                     __ptext32:	
  9183 ;; *************** function _isSPI2read *****************
  9184 ;; Defined at:
  9185 ;;		line 76 in file "spiControl.c"
  9186 ;; Parameters:    Size  Location     Type
  9187 ;;		None
  9188 ;; Auto vars:     Size  Location     Type
  9189 ;;		None
  9190 ;; Return value:  Size  Location     Type
  9191 ;;		None               void
  9192 ;; Registers used:
  9193 ;;		wreg, status,2, status,0
  9194 ;; Tracked objects:
  9195 ;;		On entry : 0/0
  9196 ;;		On exit  : 0/0
  9197 ;;		Unchanged: 0/0
  9198 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9199 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9200 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9201 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9202 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9203 ;;Total ram usage:        0 bytes
  9204 ;; Hardware stack levels used:    1
  9205 ;; This function calls:
  9206 ;;		Nothing
  9207 ;; This function is called by:
  9208 ;;		_setSPI1sendData
  9209 ;; This function uses a non-reentrant model
  9210 ;;
  9211                           
  9212                           
  9213                           ;psect for function _isSPI2read
  9214  0F5F                     _isSPI2read:	
  9215                           
  9216                           ;spiControl.c: 77: if(read_count2 == count2){
  9217                           
  9218                           ;incstack = 0
  9219                           ; Regs used in _isSPI2read: [wreg+status,2+status,0]
  9220  0F5F  0020               	movlb	0	; select bank0
  9221  0F60  086B               	movf	_count2+1,w
  9222  0F61  0021               	movlb	1	; select bank1
  9223  0F62  065C               	xorwf	(_read_count2+1)^(0+128),w
  9224  0F63  1D03               	skipz
  9225  0F64  2F69               	goto	u133_25
  9226  0F65  0020               	movlb	0	; select bank0
  9227  0F66  086A               	movf	_count2,w
  9228  0F67  0021               	movlb	1	; select bank1
  9229  0F68  065B               	xorwf	_read_count2^(0+128),w
  9230  0F69                     u133_25:	
  9231  0F69  1D03               	skipz
  9232  0F6A  2F6D               	goto	i1l2383
  9233                           
  9234                           ;spiControl.c: 78: return 1;
  9235  0F6B  1403               	setc
  9236                           
  9237                           ;spiControl.c: 79: }else{
  9238  0F6C  0008               	return
  9239  0F6D                     i1l2383:	
  9240                           
  9241                           ;spiControl.c: 80: return 0;
  9242  0F6D  1003               	clrc
  9243  0F6E  0008               	return
  9244  0F6F                     __end_of_isSPI2read:	
  9245                           
  9246                           	psect	text33
  9247  0F2D                     __ptext33:	
  9248 ;; *************** function _addAngle *****************
  9249 ;; Defined at:
  9250 ;;		line 29 in file "IO_control.c"
  9251 ;; Parameters:    Size  Location     Type
  9252 ;;		None
  9253 ;; Auto vars:     Size  Location     Type
  9254 ;;		None
  9255 ;; Return value:  Size  Location     Type
  9256 ;;                  1    wreg      void 
  9257 ;; Registers used:
  9258 ;;		wreg, status,2, status,0, pclath, cstack
  9259 ;; Tracked objects:
  9260 ;;		On entry : 0/0
  9261 ;;		On exit  : 0/0
  9262 ;;		Unchanged: 0/0
  9263 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9264 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9265 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9266 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9267 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9268 ;;Total ram usage:        0 bytes
  9269 ;; Hardware stack levels used:    1
  9270 ;; Hardware stack levels required when called:    1
  9271 ;; This function calls:
  9272 ;;		_setCargoAngle
  9273 ;; This function is called by:
  9274 ;;		_InterMSSP
  9275 ;; This function uses a non-reentrant model
  9276 ;;
  9277                           
  9278                           
  9279                           ;psect for function _addAngle
  9280  0F2D                     _addAngle:	
  9281                           
  9282                           ;IO_control.c: 30: linkAngle += direction;
  9283                           
  9284                           ;incstack = 0
  9285                           ; Regs used in _addAngle: [wreg+status,2+status,0+pclath+cstack]
  9286  0F2D  0021               	movlb	1	; select bank1
  9287  0F2E  086C               	movf	_direction^(0+128),w
  9288  0F2F  07E5               	addwf	_linkAngle^(0+128),f
  9289  0F30  086D               	movf	(_direction+1)^(0+128),w
  9290  0F31  3DE6               	addwfc	(_linkAngle+1)^(0+128),f
  9291                           
  9292                           ;IO_control.c: 31: setCargoAngle(linkAngle);
  9293  0F32  0866               	movf	(_linkAngle+1)^(0+128),w
  9294  0F33  00F2               	movwf	setCargoAngle@m_linkAngleTo+1
  9295  0F34  0865               	movf	_linkAngle^(0+128),w
  9296  0F35  00F1               	movwf	setCargoAngle@m_linkAngleTo
  9297  0F36  318E  26F9         	fcall	_setCargoAngle
  9298  0F38  0008               	return
  9299  0F39                     __end_of_addAngle:	
  9300                           
  9301                           	psect	text34
  9302  0EF9                     __ptext34:	
  9303 ;; *************** function _setCargoAngle *****************
  9304 ;; Defined at:
  9305 ;;		line 41 in file "struct.c"
  9306 ;; Parameters:    Size  Location     Type
  9307 ;;  m_linkAngleT    2    0[COMMON] int 
  9308 ;; Auto vars:     Size  Location     Type
  9309 ;;		None
  9310 ;; Return value:  Size  Location     Type
  9311 ;;                  1    wreg      void 
  9312 ;; Registers used:
  9313 ;;		wreg
  9314 ;; Tracked objects:
  9315 ;;		On entry : 0/0
  9316 ;;		On exit  : 0/0
  9317 ;;		Unchanged: 0/0
  9318 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9319 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9320 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9322 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9323 ;;Total ram usage:        2 bytes
  9324 ;; Hardware stack levels used:    1
  9325 ;; This function calls:
  9326 ;;		Nothing
  9327 ;; This function is called by:
  9328 ;;		_addAngle
  9329 ;; This function uses a non-reentrant model
  9330 ;;
  9331                           
  9332                           
  9333                           ;psect for function _setCargoAngle
  9334  0EF9                     _setCargoAngle:	
  9335                           
  9336                           ;struct.c: 42: cargoData.linkAngleTo = m_linkAngleTo;
  9337                           
  9338                           ;incstack = 0
  9339                           ; Regs used in _setCargoAngle: [wreg]
  9340  0EF9  0872               	movf	setCargoAngle@m_linkAngleTo+1,w
  9341  0EFA  0020               	movlb	0	; select bank0
  9342  0EFB  00D8               	movwf	_cargoData+6
  9343  0EFC  0871               	movf	setCargoAngle@m_linkAngleTo,w
  9344  0EFD  00D7               	movwf	_cargoData+5
  9345  0EFE  0008               	return
  9346  0EFF                     __end_of_setCargoAngle:	
  9347  007E                     btemp	set	126	;btemp
  9348  007E                     int$flags	set	126
  9349  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    4
    Data        5
    BSS         123
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     50      79
    BANK1            80      0      80
    BANK2            80     10      28
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           64      0       0
    BANK16            0      0       0
    BANK17            0      0       0
    BANK18            0      0       0
    BANK19            0      0       0
    BANK20            0      0       0
    BANK21            0      0       0
    BANK22            0      0       0
    BANK23            0      0       0
    BANK24            0      0       0
    BANK25            0      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _InterMSSP in COMMON

    _InterMSSP->_setSPI1sendData
    _addAngle->_setCargoAngle

Critical Paths under _main in BANK0

    _main->_setComunicateMode
    _spi_init->_spi1_init
    _spi_init->_spi2_init
    _setComunicateMode->_Calibrate_download
    _setComunicateMode->_readCargo
    _readCargo->_TransLong256To255
    _Calibrate_download->_TransLong256To255
    _isEndpoint->_setSPI1sendDataManual
    _TransLong256To255->___aldiv
    _InitCalibrate->_getCargoData
    _initTrain->_isTrainSt
    _init->_initbuffer

Critical Paths under _InterMSSP in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _InterMSSP in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_setComunicateMode
    _setComunicateMode->_Calibrate_download
    _setComunicateMode->_readCargo

Critical Paths under _InterMSSP in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterMSSP in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _InterMSSP in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _InterMSSP in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _InterMSSP in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _InterMSSP in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _InterMSSP in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _InterMSSP in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _InterMSSP in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _InterMSSP in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _InterMSSP in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _InterMSSP in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _InterMSSP in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _InterMSSP in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _InterMSSP in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _InterMSSP in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _InterMSSP in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _InterMSSP in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _InterMSSP in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _InterMSSP in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _InterMSSP in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _InterMSSP in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _InterMSSP in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _InterMSSP in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    5914
                      _InitCalibrate
                               _init
                          _initCargo
                         _initComand
                     _initComu_types
                          _initTrain
                            _io_init
                         _isSPI1read
                         _read_train
                  _setComunicateMode
                    _setSPI2sendData
                           _spi_init
 ---------------------------------------------------------------------------------
 (1) _spi_init                                             0     0      0       6
                          _spi1_init
                          _spi2_init
 ---------------------------------------------------------------------------------
 (2) _spi2_init                                            2     2      0       3
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _spi1_init                                            2     2      0       3
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _setSPI2sendData                                      4     4      0       0
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _setComunicateMode                                    4     4      0    5642
                                             49 BANK0      1     1      0
                                              7 BANK2      3     3      0
                 _Calibrate_download
                          _readCargo
 ---------------------------------------------------------------------------------
 (2) _readCargo                                           13    13      0    2654
                                             43 BANK0      6     6      0
                                              0 BANK2      7     7      0
                  _TransLong256To255
                       _clutchaction
                       _getCargoData
                       _restartCargo
 ---------------------------------------------------------------------------------
 (3) _clutchaction                                         1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _Calibrate_download                                  13    13      0    2827
                                             43 BANK0      6     6      0
                                              0 BANK2      7     7      0
                      _InitCalibrate
                  _TransLong256To255
                         _isEndpoint
 ---------------------------------------------------------------------------------
 (3) _isEndpoint                                           6     6      0      71
                                              1 BANK0      6     6      0
              _setSPI1sendDataManual
 ---------------------------------------------------------------------------------
 (4) _setSPI1sendDataManual                                1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _TransLong256To255                                   28    24      4    2369
                                             15 BANK0     28    24      4
                            ___aldiv
                            ___almod
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8     266
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (4) ___almod                                             11     3      8     563
                                              0 BANK0     11     3      8
 ---------------------------------------------------------------------------------
 (4) ___aldiv                                             15     7      8     575
                                              0 BANK0     15     7      8
 ---------------------------------------------------------------------------------
 (3) _InitCalibrate                                       17    17      0      40
                                             17 BANK0     17    17      0
                       _getCargoData
 ---------------------------------------------------------------------------------
 (3) _getCargoData                                        17     1     16       0
                                              0 BANK0     17     1     16
 ---------------------------------------------------------------------------------
 (1) _read_train                                           4     4      0      65
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _isSPI1read                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _io_init                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initTrain                                            3     3      0      31
                                             11 BANK0      3     3      0
                          _isTrainSt
                     _resetTrainData
 ---------------------------------------------------------------------------------
 (2) _resetTrainData                                       0     0      0       0
                       _restartCargo
 ---------------------------------------------------------------------------------
 (3) _restartCargo                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _isTrainSt                                           11    11      0      31
                                              0 BANK0     11    11      0
 ---------------------------------------------------------------------------------
 (1) _initComu_types                                       1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _initComand                                           1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _initCargo                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0     130
                              _clear
                         _initbuffer
 ---------------------------------------------------------------------------------
 (2) _initbuffer                                           4     4      0     130
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) _clear                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _InterMSSP                                            6     6      0      75
                                              2 COMMON     6     6      0
                           _addAngle
                    _setSPI1sendData
 ---------------------------------------------------------------------------------
 (6) _setSPI1sendData                                      2     2      0       0
                                              0 COMMON     2     2      0
                         _isSPI2read
 ---------------------------------------------------------------------------------
 (7) _isSPI2read                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _addAngle                                             0     0      0      75
                      _setCargoAngle
 ---------------------------------------------------------------------------------
 (7) _setCargoAngle                                        2     0      2      75
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _InitCalibrate
     _getCargoData
   _init
     _clear
     _initbuffer
   _initCargo
   _initComand
   _initComu_types
   _initTrain
     _isTrainSt
     _resetTrainData
       _restartCargo
   _io_init
   _isSPI1read
   _read_train
   _setComunicateMode
     _Calibrate_download
       _InitCalibrate
         _getCargoData
       _TransLong256To255
         ___aldiv
         ___almod
         ___lmul
       _isEndpoint
         _setSPI1sendDataManual
     _readCargo
       _TransLong256To255
         ___aldiv
         ___almod
         ___lmul
       _clutchaction
       _getCargoData
       _restartCargo
   _setSPI2sendData
   _spi_init
     _spi1_init
     _spi2_init

 _InterMSSP (ROOT)
   _addAngle
     _setCargoAngle
   _setSPI1sendData
     _isSPI2read

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       2       1       14.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      8       B       2       78.6%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     32      4F       5       98.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      A      1C       9       35.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
ABS                  0      0      C6      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
DATA                 0      0      C6      28        0.0%
BANK11              50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITBANK12           50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12              50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITBANK13           50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13              50      0       0      33        0.0%
BITBANK14           50      0       0      34        0.0%
BANK14              50      0       0      35        0.0%
BITBANK15           50      0       0      36        0.0%
BANK15              40      0       0      37        0.0%
BITBANK16           50      0       0      38        0.0%
BANK16               0      0       0      39        0.0%
BITBANK17           50      0       0      40        0.0%
BANK17               0      0       0      41        0.0%
BITBANK18           50      0       0      42        0.0%
BANK18               0      0       0      43        0.0%
BITBANK19           50      0       0      44        0.0%
BANK19               0      0       0      45        0.0%
BITBANK20           50      0       0      46        0.0%
BANK20               0      0       0      47        0.0%
BITBANK21           50      0       0      48        0.0%
BANK21               0      0       0      49        0.0%
BITBANK22           50      0       0      50        0.0%
BANK22               0      0       0      51        0.0%
BITBANK23           50      0       0      52        0.0%
BANK23               0      0       0      53        0.0%
BITBANK24           50      0       0      54        0.0%
BANK24               0      0       0      55        0.0%
BITBANK25           20      0       0      56        0.0%
BANK25               0      0       0      57        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Mon Jun 18 14:18:43 2018

                  _InitCalibrate 0784                                pc 0002                      __CFG_CP$OFF 0000  
                             l99 02E9                               _RD 44A8                              l108 02C6  
                            l109 02CE                              l207 06C6                              l413 0635  
                            l184 0F2A                              l447 0689                              l824 03FB  
                            l837 047D                     __CFG_CPD$OFF 0000                              wreg 0009  
        setComunicateMode@m_type 0139                             S3751 0834                             S3755 0800  
                           S3759 0820         Calibrate_download@bufint 0136                     __CFG_LVP$OFF 0000  
                           l3001 0455                             l3005 0463                             l3023 0492  
                           l3103 03DC                             l3025 04A0                             l3033 04C3  
                           l3017 048A                             l3105 03E1                             l3201 0118  
                           l3131 0236                             l3211 0123                             l3203 011B  
                           l3037 04D1                             l3029 04B8                             l3053 06F7  
                           l3141 028D                             l3125 020E                             l3221 015A  
                           l3213 0125                             l3205 011D                             l3047 06E4  
                           l3143 02B1                             l3135 0241                             l3127 0224  
                           l3119 01FE                             l3223 017B                             l3207 011F  
                           l3231 01C3                             l3081 0333                             l3129 022C  
                           l3225 019F                             l3217 0130                             l3209 0121  
                           l3083 033B                             l3139 026C                             l3155 02D9  
                           l3149 02D2                             l3229 01B4                             l3341 06A6  
                           l3415 061F                             l3095 038A                             l3079 0327  
                           l3191 00FA                             l3351 06B0                             l3425 0630  
                           l3097 03B3                             l3193 0101                             l3345 06AB  
                           l3353 06C0                             l3195 0108                             l3187 00DE  
                           l3269 0600                             l3189 00E9                             l3465 0650  
                           l3459 0F5D                             l3467 065E                             l3475 0678  
                           l3469 0671                             l3485 0768                             l3761 067E  
                           l2961 070E                             l3753 01B9                             l3585 0752  
                           l3577 0742                             l3587 0755                             l2957 0704  
                           l3757 02DF                             l3749 06B6                             l2987 041C  
                           l2979 040C                             l2997 044A                             l2989 042A  
                           u2025 0265                             u2035 0286                             u2115 0153  
                           u2045 02A7                             u2125 0174                             u2135 0195  
                           u2080 00D7                             u2145 01CE                             u2155 07BB  
                           u2075 02F9                             u2245 063C                             u2175 05D5  
                           u2255 0F59                             u1715 070F                             u2195 0699  
                           u1805 043F                             u1725 0716                             u1815 044B  
                           u1905 04B9                             u1690 0F7A                             u1950 07A2  
                           u1775 041F                             u1795 042B                             u1875 0495  
                           u1895 04AE                             u1975 0385                             u1985 03A0  
                           u1995 0394                             _WPUA 020C                             _WPUB 020D  
                           _WPUC 020E                     __CFG_WRT$OFF 0000                    __CFG_FCMEN$ON 0000  
             TransLong256To255@i 0045               TransLong256To255@j 003B                    ?_clutchaction 0071  
                           _main 072B                             _init 0FD8                             fsr0h 0005  
                           fsr1h 0007                             indf0 0000                             fsr0l 0004  
                           indf1 0001                             fsr1l 0006                             btemp 007E  
                  __CFG_BOREN$ON 0000                             start 0060                    __CFG_CSWEN$ON 0000  
                 ?_InitCalibrate 0071                  __end_of___aldiv 046C                  __end_of___almod 04DA  
                          ?_main 0071                            ?_init 0071                    __CFG_WDTE$OFF 0000  
                 __CFG_DEBUG$OFF 0000                            i1l391 004F                            i1l388 0030  
           __end_of_getCargoData 0F7F                            _PORTA 000C                            _PORTB 000D  
                          _PORTC 000E                            _TRISA 008C                            _TRISB 008D  
                          _TRISC 008E               setComunicateMode@i 013A              ___lmul@multiplicand 0024  
 __size_of_setSPI1sendDataManual 0006    __end_of_setSPI1sendDataManual 0F05                            _clear 0F45  
                __end_of_io_init 0F0E                   __pbitbssCOMMON 0380                   ??_clutchaction 0020  
                 __CFG_BORV$HIGH 0000                            status 0003                            wtemp0 007E  
                 __CFG_MCLRE$OFF 0000                  __initialization 0062                     __end_of_main 0759  
                   __end_of_init 1000                           ??_main 0052                           ??_init 0024  
                         ?_clear 0071                 __end_of_addAngle 0F39                           _ANSELA 018C  
                         _ANSELB 018D                           _ANSELC 018E                           _RA2PPS 0E92  
                         _RC2PPS 0EA2                           _RB7PPS 0E9F                           i1l2383 0F6D  
                         i1l2457 07F8                           i1l2767 0054                           u133_25 0F69  
       __size_of_setSPI1sendData 0023               __size_of_InterMSSP 005C                  ??_InitCalibrate 0031  
              __end_of_VENDER_ID 1004                   __CFG_PWRTE$OFF 0000         __size_of_setSPI2sendData 002B  
           TransLong256To255@buf 0047          __size_of_resetTrainData 000A             TransLong256To255@mod 003D  
           TransLong256To255@pow 0041      __size_of_Calibrate_download 012C                           ___lmul 06FB  
                      ??___aldiv 0028                        ??___almod 0028                   __CFG_STVREN$ON 0000  
                         _count1 0064                           _count2 006A                           _readNG 00EA  
                         _readOK 00EB          __size_of_initComu_types 006D                        ??_io_init 0020  
                   __pdataCOMMON 007A                 __end_of_spi_init 0F22                      initbuffer@i 0022  
                   isTrainSt@buf 002A                     _ra3condision 0380          __end_of__initialization 00A3  
                 __pcstackCOMMON 0071                     __pidataBANK1 07FC               __end_of_MACHINE_ID 1002  
                  __end_of_clear 0F52            __size_of_getCargoData 0010             __end_of_clutchaction 0F2D  
              __end_of_InterMSSP 0060                  __CFG_LPBOREN$ON 0000                          ??_clear 0020  
                     __pbssBANK0 0052                       __pbssBANK1 00A0                       __pbssBANK2 0120  
             __size_of_isTrainSt 004E              clutchaction@comannd 0020           InitCalibrate@cargoData 0032  
             __size_of_initCargo 0017               __size_of_readCargo 0131                  _startTrainBytes 00D3  
             __size_of_initTrain 0045                       _isSPI1read 0F52                       _isSPI2read 0F5F  
                   _getCargoData 0F6F                       __pmaintext 072B               __size_of_spi1_init 0020  
             __size_of_spi2_init 0022                          ?___lmul 0020                  __CFG_PPS1WAY$ON 0000  
              ??_setSPI1sendData 0071                       __pintentry 0004  Calibrate_download@spi_Read_data 0138  
                      ?_addAngle 0071                ??_setSPI2sendData 0020                   ___lmul@product 0028  
            __CFG_RSTOSC$HFINT32 0000                       _isEndpoint 06C7                     _isCalibrated 0387  
         __size_of_setCargoAngle 0006                          _NVMADRH 0892                          _NVMADRL 0891  
                        _NVMDATH 0894                          _NVMDATL 0893                  _EEPROM_ADDR_buf 0066  
                        _SSP1BUF 0211                          _SSP2BUF 0219                       _comu_types 0120  
                 _resetTrainData 0F0E                       _initComand 0547            TransLong256To255@data 002F  
                        ___aldiv 03EA                          ___almod 046C                        ?_spi_init 0071  
                __size_of___lmul 0030                       ??_addAngle 0073                __end_of_isTrainSt 0602  
                     _initbuffer 07AF                   _initComu_types 04DA               isEndpoint@spi2data 0026  
                        __ptext1 0F18                          __ptext2 0FB6                          __ptext3 0F96  
                        __ptext4 0759                          __ptext5 068A                          __ptext6 00A7  
                        __ptext7 0F22                          __ptext8 01D8                __end_of_initCargo 0F96  
                        __ptext9 06C7                       _read_train 0647                          _command 00A0  
              __end_of_readCargo 01D8                          _counta2 00DD                          _io_init 0F05  
              __end_of_initTrain 0647                    ?_restartCargo 0071                 ___aldiv@dividend 0024  
                      _IOCAFbits 0393                        _IOCANbits 0392                        _IOCAPbits 0391  
              __end_of_spi1_init 0FB6                __end_of_spi2_init 0FD8                          _st_type 006E  
                        clrloop0 0F3A            _setSPI1sendDataManual 0EFF             end_of_initialization 00A3  
         __end_of_resetTrainData 0F18                      ?_isSPI1read 0071                      ?_isSPI2read 0071  
                  _setCargoAngle 0EF9                 ___aldiv@quotient 002B            __size_of_clutchaction 000B  
                     ??_spi_init 0022                        _VENDER_ID 1002                 readCargo@buflong 0132  
         __end_of_initComu_types 0547                   spi1_init@dummy 0021                      ?_isEndpoint 0071  
                 ??_restartCargo 0020                  _SPI_OFFSET_BYTE 007A                        _TRISBbits 008D  
                      _TRISCbits 008E                 __CFG_FEXTOSC$OFF 0000                   spi2_init@dummy 0021  
                   _clutchaction 0F22                  ?_resetTrainData 0071       __end_of_Calibrate_download 0304  
                 ?_setCargoAngle 0071                      ?_initComand 0071            __end_of_InitCalibrate 07AF  
                ?_initComu_types 0071                   __end_of___lmul 072B                    __pidataCOMMON 0003  
                    ?_initbuffer 0071                      ?_read_train 0071              __size_of_isSPI1read 000D  
            __size_of_isSPI2read 0010                    __pbitnvCOMMON 03C8              start_initialization 0062  
         ?_setSPI1sendDataManual 0071                        _InterMSSP 0004                   _isEndPointTrig 03C8  
                _setSPI1sendData 07D9                  _setSPI2sendData 0759              __size_of_isEndpoint 0034  
              _TransLong256To255 0304                         ??___lmul 0028               ?_TransLong256To255 002F  
                    __pdataBANK1 00EC                _setComunicateMode 068A                __size_of_addAngle 000C  
             ?_setComunicateMode 0071              ??_TransLong256To255 0033                      __pbssBIGRAM 24F0  
                      ___latbits 0003                    __pcstackBANK0 0020                    __pcstackBANK2 0132  
                    _cargo_index 00B2              ??_setComunicateMode 0051              __size_of_initComand 006D  
                     ?_InterMSSP 0071                        _calibdata 00C4              __size_of_initbuffer 002A  
                      _cargoData 0052                  ??_setCargoAngle 0073              __size_of_read_train 0043  
      __end_of_TransLong256To255 03EA             __end_of_restartCargo 0EF9            _spi1_send_buffer_data 24F0  
      Calibrate_download@buflong 0132        __end_of_setComunicateMode 06C7                         ?___aldiv 0020  
                       ?___almod 0020                        _direction 00EC          readCargo@spi1_Read_data 0138  
              __size_of_spi_init 000A                 ___almod@dividend 0024                        __pswtext1 0834  
                      __pswtext2 0800                        __pswtext3 0820                        _isMycargo 0382  
                       ?_io_init 0071                        _isTrainSt 05B4                        _countabuf 0068  
                      _initCargo 0F7F                        _readCargo 00A7                        _linkAngle 00E5  
        __end_of_setSPI1sendData 07FC                        _initTrain 0602                   __size_of_clear 000D  
        __end_of_setSPI2sendData 0784                  ___aldiv@divisor 0020                        _spi1_init 0F96  
                      _spi2_init 0FB6                  ___aldiv@counter 0029                         _LATAbits 010C  
                   ??_isSPI1read 0020                     ??_isSPI2read 0071                        clear_ram0 0F39  
     setCargoAngle@m_linkAngleTo 0071                         _PIE0bits 0090                         _PIE1bits 0091  
                       _PIE2bits 0092                        _send_data 00E8                         _PIR0bits 0010  
                       _PIR1bits 0011                         _PIR2bits 0012                  readCargo@bufint 0136  
                   ??_isEndpoint 0021                       ?_isTrainSt 0071               __end_of_isSPI1read 0F5F  
             __end_of_isSPI2read 0F6F                       ?_initCargo 0071                    _SSP1SSPPSbits 0E22  
                     ?_readCargo 0071                       ?_initTrain 0071                      ??_InterMSSP 0073  
              ___lmul@multiplier 0020                    _SSP2SSPPSbits 0E1F                 ??_resetTrainData 0020  
                       _RaadData 00E3                   _eeprom_address 00E9                       ?_spi1_init 0071  
                     ?_spi2_init 0071       __size_of_TransLong256To255 00E6                 ??_initComu_types 0020  
             __end_of_isEndpoint 06FB                     ??_initComand 0020       __size_of_setComunicateMode 003D  
               __size_of___aldiv 0082                 __size_of___almod 006E                         _addAngle 0F2D  
                   ??_initbuffer 0020                 _spi1_buffer_data 25F0                     ??_read_train 0020  
             _Calibrate_download 01D8          ??_setSPI1sendDataManual 0020                   _workingcounta0 0386  
                 _workingcounta1 0385                   _workingcounta2 0384                   _workingcounta3 0383  
               __size_of_io_init 0009                       _MACHINE_ID 1000                      _read_count1 0062  
                    _read_count2 00DB              ?_Calibrate_download 0071                 ?_setSPI1sendData 0071  
                       __ptext10 0EFF                         __ptext11 0304                         __ptext20 0602  
                       __ptext12 06FB                         __ptext21 0F0E                         __ptext13 046C  
                       __ptext22 0EF4                         __ptext14 03EA                         __ptext31 07D9  
                       __ptext23 05B4                         __ptext15 0784                         __ptext32 0F5F  
                       __ptext24 04DA                         __ptext16 0F6F                         __ptext33 0F2D  
                       __ptext25 0547                         __ptext17 0647                         __ptext34 0EF9  
                       __ptext26 0F7F                         __ptext18 0F52                         __ptext27 0FD8  
                       __ptext19 0F05                         __ptext28 07AF                         __ptext29 0F45  
                   _SSP1CON1bits 0215                     _SSP1CON3bits 0217               __end_of_initComand 05B4  
               ?_setSPI2sendData 0071                     _SSP2CON1bits 021D                   _spi1_Read_data 006C  
                ___almod@divisor 0020                     _SSP2CON3bits 021F                  ___almod@counter 0029  
          __size_of_restartCargo 0005                         _linkInfo 00CD                    __size_of_main 002E  
                  __size_of_init 0028               __end_of_initbuffer 07D9                    ?_getCargoData 0020  
                 _spi2_Read_data 00E7               __end_of_read_train 068A             ??_Calibrate_download 004B  
                    _isreadTrain 0381                         _spi_init 0F18                         int$flags 007E  
                       _trainPos 00DF                   _spi2_Send_data 006D                     _SSP1STATbits 0214  
               _spi2_buffer_data 26F0                     _SSP2STATbits 021C                    _st_dataLength 00EE  
                     _INLVLAbits 038C                       _INLVLBbits 038D                       _INLVLCbits 038E  
                    ??_isTrainSt 0020                      _OSCTUNEbits 091E                       _INTCONbits 000B  
                    _NVMCON1bits 0895                      ??_initCargo 0020                     _restartCargo 0EF4  
                    ??_readCargo 004B                      ??_initTrain 002B           __size_of_InitCalibrate 002B  
                    _send_count1 00D7                         intlevel1 0000                      ??_spi1_init 0020  
                    ??_spi2_init 0020                   ??_getCargoData 0030                __CFG_CLKOUTEN$OFF 0000  
                     _OSCFRQbits 091F       TransLong256To255@TransData 0037                    __pstringtext1 1000  
                  __pstringtext2 1002                     ___aldiv@sign 002A        setSPI1sendDataManual@data 0020  
                     _SIZE_COUNT 00E1                     ___almod@sign 002A                 read_train@bufint 0022  
                _spi1_send_count 00D9            __end_of_setCargoAngle 0EFF  

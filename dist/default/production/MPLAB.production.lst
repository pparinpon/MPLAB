

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sat May 12 15:00:43 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F18346
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	eeprom_data,global,class=EEDATA,space=3,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	stringtext1,global,class=STRCODE,delta=2
     7                           	psect	stringtext2,global,class=STRCODE,delta=2
     8                           	psect	bitnvCOMMON,global,bit,class=COMMON,space=1,delta=1
     9                           	psect	cinit,global,class=CODE,merge=1,delta=2
    10                           	psect	bitbssCOMMON,global,bit,class=COMMON,space=1,delta=1
    11                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	clrtext,global,class=CODE,delta=2
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    19                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    20                           	psect	text1,local,class=CODE,merge=1,delta=2
    21                           	psect	text2,local,class=CODE,merge=1,delta=2
    22                           	psect	text3,local,class=CODE,merge=1,delta=2
    23                           	psect	text4,local,class=CODE,merge=1,delta=2
    24                           	psect	text5,local,class=CODE,merge=1,delta=2
    25                           	psect	text6,local,class=CODE,merge=1,delta=2
    26                           	psect	swtext1,local,class=CONST,delta=2
    27                           	psect	text7,local,class=CODE,merge=1,delta=2
    28                           	psect	text8,local,class=CODE,merge=1,delta=2
    29                           	psect	text9,local,class=CODE,merge=1,delta=2
    30                           	psect	swtext2,local,class=CONST,delta=2
    31                           	psect	text10,local,class=CODE,merge=1,delta=2
    32                           	psect	text11,local,class=CODE,merge=1,delta=2
    33                           	psect	text12,local,class=CODE,merge=1,delta=2
    34                           	psect	text13,local,class=CODE,merge=1,delta=2
    35                           	psect	text14,local,class=CODE,merge=1,delta=2
    36                           	psect	text15,local,class=CODE,merge=1,delta=2
    37                           	psect	text16,local,class=CODE,merge=1,delta=2
    38                           	psect	text17,local,class=CODE,merge=1,delta=2
    39                           	psect	text18,local,class=CODE,merge=1,delta=2
    40                           	psect	text19,local,class=CODE,merge=1,delta=2
    41                           	psect	text20,local,class=CODE,merge=1,delta=2
    42                           	psect	text21,local,class=CODE,merge=1,delta=2
    43                           	psect	text22,local,class=CODE,merge=1,delta=2
    44                           	psect	text23,local,class=CODE,merge=1,delta=2
    45                           	psect	text24,local,class=CODE,merge=1,delta=2
    46                           	psect	text25,local,class=CODE,merge=1,delta=2
    47                           	psect	text26,local,class=CODE,merge=1,delta=2
    48                           	psect	intentry,global,class=CODE,delta=2
    49                           	psect	text28,local,class=CODE,merge=1,delta=2
    50                           	psect	text29,local,class=CODE,merge=1,delta=2
    51                           	psect	text30,local,class=CODE,merge=1,delta=2
    52                           	dabs	1,0xCA0,32
    53                           	dabs	1,0xC20,80
    54                           	dabs	1,0xBA0,80
    55                           	dabs	1,0xB30,64
    56                           	dabs	1,0xB20,16
    57                           	dabs	1,0xAA0,80
    58                           	dabs	1,0xA20,80
    59                           	dabs	1,0x9A0,80
    60                           	dabs	1,0x920,80
    61                           	dabs	1,0x8A0,80
    62                           	dabs	1,0x820,80
    63                           	dabs	1,0x7E0,16
    64                           	dabs	1,0x24F0,0,_spi1_buffer_data
    65                           	dabs	1,0x25F0,0,_spi1_send_buffer_data
    66                           	dabs	1,0x26F0,0,_spi2_buffer_data
    67                           	dabs	1,0x7E,2
    68  0000                     
    69                           ; Version 1.45
    70                           ; Generated 16/11/2017 GMT
    71                           ; 
    72                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    73                           ; All rights reserved.
    74                           ; 
    75                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    76                           ; 
    77                           ; Redistribution and use in source and binary forms, with or without modification, are
    78                           ; permitted provided that the following conditions are met:
    79                           ; 
    80                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    81                           ;        conditions and the following disclaimer.
    82                           ; 
    83                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    84                           ;        of conditions and the following disclaimer in the documentation and/or other
    85                           ;        materials provided with the distribution.
    86                           ; 
    87                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    88                           ;        software without specific prior written permission.
    89                           ; 
    90                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    91                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    92                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    93                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    94                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    95                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    96                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    97                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    98                           ; 
    99                           ; 
   100                           ; Code-generator required, PIC16F18346 Definitions
   101                           ; 
   102                           ; SFR Addresses
   103  0000                     	;# 
   104  0001                     	;# 
   105  0002                     	;# 
   106  0003                     	;# 
   107  0004                     	;# 
   108  0005                     	;# 
   109  0006                     	;# 
   110  0007                     	;# 
   111  0008                     	;# 
   112  0009                     	;# 
   113  000A                     	;# 
   114  000B                     	;# 
   115  000C                     	;# 
   116  000D                     	;# 
   117  000E                     	;# 
   118  0010                     	;# 
   119  0011                     	;# 
   120  0012                     	;# 
   121  0013                     	;# 
   122  0014                     	;# 
   123  0015                     	;# 
   124  0015                     	;# 
   125  0016                     	;# 
   126  0016                     	;# 
   127  0017                     	;# 
   128  0018                     	;# 
   129  0019                     	;# 
   130  0019                     	;# 
   131  001A                     	;# 
   132  001B                     	;# 
   133  001C                     	;# 
   134  001D                     	;# 
   135  001E                     	;# 
   136  001F                     	;# 
   137  008C                     	;# 
   138  008D                     	;# 
   139  008E                     	;# 
   140  0090                     	;# 
   141  0091                     	;# 
   142  0092                     	;# 
   143  0093                     	;# 
   144  0094                     	;# 
   145  0097                     	;# 
   146  009B                     	;# 
   147  009B                     	;# 
   148  009C                     	;# 
   149  009D                     	;# 
   150  009E                     	;# 
   151  009F                     	;# 
   152  010C                     	;# 
   153  010D                     	;# 
   154  010E                     	;# 
   155  0111                     	;# 
   156  0112                     	;# 
   157  0113                     	;# 
   158  0114                     	;# 
   159  0115                     	;# 
   160  0116                     	;# 
   161  0117                     	;# 
   162  0118                     	;# 
   163  0119                     	;# 
   164  018C                     	;# 
   165  018D                     	;# 
   166  018E                     	;# 
   167  0197                     	;# 
   168  0199                     	;# 
   169  0199                     	;# 
   170  0199                     	;# 
   171  019A                     	;# 
   172  019A                     	;# 
   173  019A                     	;# 
   174  019B                     	;# 
   175  019B                     	;# 
   176  019B                     	;# 
   177  019B                     	;# 
   178  019B                     	;# 
   179  019C                     	;# 
   180  019C                     	;# 
   181  019C                     	;# 
   182  019D                     	;# 
   183  019D                     	;# 
   184  019D                     	;# 
   185  019E                     	;# 
   186  019E                     	;# 
   187  019E                     	;# 
   188  019F                     	;# 
   189  019F                     	;# 
   190  019F                     	;# 
   191  019F                     	;# 
   192  019F                     	;# 
   193  020C                     	;# 
   194  020D                     	;# 
   195  020E                     	;# 
   196  0211                     	;# 
   197  0211                     	;# 
   198  0212                     	;# 
   199  0212                     	;# 
   200  0213                     	;# 
   201  0213                     	;# 
   202  0214                     	;# 
   203  0214                     	;# 
   204  0215                     	;# 
   205  0215                     	;# 
   206  0215                     	;# 
   207  0215                     	;# 
   208  0216                     	;# 
   209  0216                     	;# 
   210  0217                     	;# 
   211  0217                     	;# 
   212  0219                     	;# 
   213  021A                     	;# 
   214  021B                     	;# 
   215  021C                     	;# 
   216  021D                     	;# 
   217  021D                     	;# 
   218  021E                     	;# 
   219  021F                     	;# 
   220  028C                     	;# 
   221  028D                     	;# 
   222  028E                     	;# 
   223  0291                     	;# 
   224  0291                     	;# 
   225  0292                     	;# 
   226  0293                     	;# 
   227  0294                     	;# 
   228  0295                     	;# 
   229  0295                     	;# 
   230  0296                     	;# 
   231  0297                     	;# 
   232  0298                     	;# 
   233  029F                     	;# 
   234  030C                     	;# 
   235  030D                     	;# 
   236  030E                     	;# 
   237  0311                     	;# 
   238  0311                     	;# 
   239  0312                     	;# 
   240  0313                     	;# 
   241  0314                     	;# 
   242  0315                     	;# 
   243  0315                     	;# 
   244  0316                     	;# 
   245  0317                     	;# 
   246  0318                     	;# 
   247  038C                     	;# 
   248  038D                     	;# 
   249  038E                     	;# 
   250  0391                     	;# 
   251  0392                     	;# 
   252  0393                     	;# 
   253  0394                     	;# 
   254  0395                     	;# 
   255  0396                     	;# 
   256  0397                     	;# 
   257  0398                     	;# 
   258  0399                     	;# 
   259  039A                     	;# 
   260  039C                     	;# 
   261  039D                     	;# 
   262  039E                     	;# 
   263  039F                     	;# 
   264  0411                     	;# 
   265  0411                     	;# 
   266  0412                     	;# 
   267  0413                     	;# 
   268  0414                     	;# 
   269  0415                     	;# 
   270  0416                     	;# 
   271  0417                     	;# 
   272  0418                     	;# 
   273  0418                     	;# 
   274  0419                     	;# 
   275  041A                     	;# 
   276  041B                     	;# 
   277  041C                     	;# 
   278  041D                     	;# 
   279  041E                     	;# 
   280  041F                     	;# 
   281  0498                     	;# 
   282  0498                     	;# 
   283  0499                     	;# 
   284  049A                     	;# 
   285  049B                     	;# 
   286  049B                     	;# 
   287  049C                     	;# 
   288  049D                     	;# 
   289  049E                     	;# 
   290  049F                     	;# 
   291  0617                     	;# 
   292  0618                     	;# 
   293  0619                     	;# 
   294  0619                     	;# 
   295  061A                     	;# 
   296  061B                     	;# 
   297  061C                     	;# 
   298  061C                     	;# 
   299  061F                     	;# 
   300  0691                     	;# 
   301  0692                     	;# 
   302  0693                     	;# 
   303  0694                     	;# 
   304  0695                     	;# 
   305  0696                     	;# 
   306  0697                     	;# 
   307  0698                     	;# 
   308  0699                     	;# 
   309  0711                     	;# 
   310  0712                     	;# 
   311  0713                     	;# 
   312  0714                     	;# 
   313  0715                     	;# 
   314  0716                     	;# 
   315  0717                     	;# 
   316  0718                     	;# 
   317  0719                     	;# 
   318  0891                     	;# 
   319  0891                     	;# 
   320  0891                     	;# 
   321  0891                     	;# 
   322  0891                     	;# 
   323  0891                     	;# 
   324  0892                     	;# 
   325  0892                     	;# 
   326  0892                     	;# 
   327  0893                     	;# 
   328  0893                     	;# 
   329  0893                     	;# 
   330  0893                     	;# 
   331  0893                     	;# 
   332  0893                     	;# 
   333  0894                     	;# 
   334  0894                     	;# 
   335  0894                     	;# 
   336  0895                     	;# 
   337  0895                     	;# 
   338  0895                     	;# 
   339  0896                     	;# 
   340  0896                     	;# 
   341  0896                     	;# 
   342  089B                     	;# 
   343  0911                     	;# 
   344  0912                     	;# 
   345  0913                     	;# 
   346  0914                     	;# 
   347  0915                     	;# 
   348  0916                     	;# 
   349  0918                     	;# 
   350  0919                     	;# 
   351  091A                     	;# 
   352  091B                     	;# 
   353  091C                     	;# 
   354  091D                     	;# 
   355  091E                     	;# 
   356  091F                     	;# 
   357  0E0F                     	;# 
   358  0E10                     	;# 
   359  0E11                     	;# 
   360  0E12                     	;# 
   361  0E13                     	;# 
   362  0E14                     	;# 
   363  0E15                     	;# 
   364  0E16                     	;# 
   365  0E17                     	;# 
   366  0E18                     	;# 
   367  0E19                     	;# 
   368  0E1A                     	;# 
   369  0E1B                     	;# 
   370  0E1C                     	;# 
   371  0E1D                     	;# 
   372  0E1E                     	;# 
   373  0E1F                     	;# 
   374  0E20                     	;# 
   375  0E21                     	;# 
   376  0E22                     	;# 
   377  0E24                     	;# 
   378  0E25                     	;# 
   379  0E28                     	;# 
   380  0E29                     	;# 
   381  0E2A                     	;# 
   382  0E2B                     	;# 
   383  0E2C                     	;# 
   384  0E2D                     	;# 
   385  0E2E                     	;# 
   386  0E2F                     	;# 
   387  0E90                     	;# 
   388  0E91                     	;# 
   389  0E92                     	;# 
   390  0E94                     	;# 
   391  0E95                     	;# 
   392  0E9C                     	;# 
   393  0E9D                     	;# 
   394  0E9E                     	;# 
   395  0E9F                     	;# 
   396  0EA0                     	;# 
   397  0EA1                     	;# 
   398  0EA2                     	;# 
   399  0EA3                     	;# 
   400  0EA4                     	;# 
   401  0EA5                     	;# 
   402  0EA6                     	;# 
   403  0EA7                     	;# 
   404  0F0F                     	;# 
   405  0F10                     	;# 
   406  0F11                     	;# 
   407  0F12                     	;# 
   408  0F13                     	;# 
   409  0F14                     	;# 
   410  0F15                     	;# 
   411  0F16                     	;# 
   412  0F17                     	;# 
   413  0F18                     	;# 
   414  0F19                     	;# 
   415  0F1A                     	;# 
   416  0F1B                     	;# 
   417  0F1C                     	;# 
   418  0F1D                     	;# 
   419  0F1E                     	;# 
   420  0F1F                     	;# 
   421  0F20                     	;# 
   422  0F21                     	;# 
   423  0F22                     	;# 
   424  0F23                     	;# 
   425  0F24                     	;# 
   426  0F25                     	;# 
   427  0F26                     	;# 
   428  0F27                     	;# 
   429  0F28                     	;# 
   430  0F29                     	;# 
   431  0F2A                     	;# 
   432  0F2B                     	;# 
   433  0F2C                     	;# 
   434  0F2D                     	;# 
   435  0F2E                     	;# 
   436  0F2F                     	;# 
   437  0F30                     	;# 
   438  0F31                     	;# 
   439  0F32                     	;# 
   440  0F33                     	;# 
   441  0F34                     	;# 
   442  0F35                     	;# 
   443  0F36                     	;# 
   444  0F37                     	;# 
   445  0FE4                     	;# 
   446  0FE5                     	;# 
   447  0FE6                     	;# 
   448  0FE7                     	;# 
   449  0FE8                     	;# 
   450  0FE9                     	;# 
   451  0FEA                     	;# 
   452  0FEB                     	;# 
   453  0FED                     	;# 
   454  0FEE                     	;# 
   455  0FEF                     	;# 
   456  0000                     	;# 
   457  0001                     	;# 
   458  0002                     	;# 
   459  0003                     	;# 
   460  0004                     	;# 
   461  0005                     	;# 
   462  0006                     	;# 
   463  0007                     	;# 
   464  0008                     	;# 
   465  0009                     	;# 
   466  000A                     	;# 
   467  000B                     	;# 
   468  000C                     	;# 
   469  000D                     	;# 
   470  000E                     	;# 
   471  0010                     	;# 
   472  0011                     	;# 
   473  0012                     	;# 
   474  0013                     	;# 
   475  0014                     	;# 
   476  0015                     	;# 
   477  0015                     	;# 
   478  0016                     	;# 
   479  0016                     	;# 
   480  0017                     	;# 
   481  0018                     	;# 
   482  0019                     	;# 
   483  0019                     	;# 
   484  001A                     	;# 
   485  001B                     	;# 
   486  001C                     	;# 
   487  001D                     	;# 
   488  001E                     	;# 
   489  001F                     	;# 
   490  008C                     	;# 
   491  008D                     	;# 
   492  008E                     	;# 
   493  0090                     	;# 
   494  0091                     	;# 
   495  0092                     	;# 
   496  0093                     	;# 
   497  0094                     	;# 
   498  0097                     	;# 
   499  009B                     	;# 
   500  009B                     	;# 
   501  009C                     	;# 
   502  009D                     	;# 
   503  009E                     	;# 
   504  009F                     	;# 
   505  010C                     	;# 
   506  010D                     	;# 
   507  010E                     	;# 
   508  0111                     	;# 
   509  0112                     	;# 
   510  0113                     	;# 
   511  0114                     	;# 
   512  0115                     	;# 
   513  0116                     	;# 
   514  0117                     	;# 
   515  0118                     	;# 
   516  0119                     	;# 
   517  018C                     	;# 
   518  018D                     	;# 
   519  018E                     	;# 
   520  0197                     	;# 
   521  0199                     	;# 
   522  0199                     	;# 
   523  0199                     	;# 
   524  019A                     	;# 
   525  019A                     	;# 
   526  019A                     	;# 
   527  019B                     	;# 
   528  019B                     	;# 
   529  019B                     	;# 
   530  019B                     	;# 
   531  019B                     	;# 
   532  019C                     	;# 
   533  019C                     	;# 
   534  019C                     	;# 
   535  019D                     	;# 
   536  019D                     	;# 
   537  019D                     	;# 
   538  019E                     	;# 
   539  019E                     	;# 
   540  019E                     	;# 
   541  019F                     	;# 
   542  019F                     	;# 
   543  019F                     	;# 
   544  019F                     	;# 
   545  019F                     	;# 
   546  020C                     	;# 
   547  020D                     	;# 
   548  020E                     	;# 
   549  0211                     	;# 
   550  0211                     	;# 
   551  0212                     	;# 
   552  0212                     	;# 
   553  0213                     	;# 
   554  0213                     	;# 
   555  0214                     	;# 
   556  0214                     	;# 
   557  0215                     	;# 
   558  0215                     	;# 
   559  0215                     	;# 
   560  0215                     	;# 
   561  0216                     	;# 
   562  0216                     	;# 
   563  0217                     	;# 
   564  0217                     	;# 
   565  0219                     	;# 
   566  021A                     	;# 
   567  021B                     	;# 
   568  021C                     	;# 
   569  021D                     	;# 
   570  021D                     	;# 
   571  021E                     	;# 
   572  021F                     	;# 
   573  028C                     	;# 
   574  028D                     	;# 
   575  028E                     	;# 
   576  0291                     	;# 
   577  0291                     	;# 
   578  0292                     	;# 
   579  0293                     	;# 
   580  0294                     	;# 
   581  0295                     	;# 
   582  0295                     	;# 
   583  0296                     	;# 
   584  0297                     	;# 
   585  0298                     	;# 
   586  029F                     	;# 
   587  030C                     	;# 
   588  030D                     	;# 
   589  030E                     	;# 
   590  0311                     	;# 
   591  0311                     	;# 
   592  0312                     	;# 
   593  0313                     	;# 
   594  0314                     	;# 
   595  0315                     	;# 
   596  0315                     	;# 
   597  0316                     	;# 
   598  0317                     	;# 
   599  0318                     	;# 
   600  038C                     	;# 
   601  038D                     	;# 
   602  038E                     	;# 
   603  0391                     	;# 
   604  0392                     	;# 
   605  0393                     	;# 
   606  0394                     	;# 
   607  0395                     	;# 
   608  0396                     	;# 
   609  0397                     	;# 
   610  0398                     	;# 
   611  0399                     	;# 
   612  039A                     	;# 
   613  039C                     	;# 
   614  039D                     	;# 
   615  039E                     	;# 
   616  039F                     	;# 
   617  0411                     	;# 
   618  0411                     	;# 
   619  0412                     	;# 
   620  0413                     	;# 
   621  0414                     	;# 
   622  0415                     	;# 
   623  0416                     	;# 
   624  0417                     	;# 
   625  0418                     	;# 
   626  0418                     	;# 
   627  0419                     	;# 
   628  041A                     	;# 
   629  041B                     	;# 
   630  041C                     	;# 
   631  041D                     	;# 
   632  041E                     	;# 
   633  041F                     	;# 
   634  0498                     	;# 
   635  0498                     	;# 
   636  0499                     	;# 
   637  049A                     	;# 
   638  049B                     	;# 
   639  049B                     	;# 
   640  049C                     	;# 
   641  049D                     	;# 
   642  049E                     	;# 
   643  049F                     	;# 
   644  0617                     	;# 
   645  0618                     	;# 
   646  0619                     	;# 
   647  0619                     	;# 
   648  061A                     	;# 
   649  061B                     	;# 
   650  061C                     	;# 
   651  061C                     	;# 
   652  061F                     	;# 
   653  0691                     	;# 
   654  0692                     	;# 
   655  0693                     	;# 
   656  0694                     	;# 
   657  0695                     	;# 
   658  0696                     	;# 
   659  0697                     	;# 
   660  0698                     	;# 
   661  0699                     	;# 
   662  0711                     	;# 
   663  0712                     	;# 
   664  0713                     	;# 
   665  0714                     	;# 
   666  0715                     	;# 
   667  0716                     	;# 
   668  0717                     	;# 
   669  0718                     	;# 
   670  0719                     	;# 
   671  0891                     	;# 
   672  0891                     	;# 
   673  0891                     	;# 
   674  0891                     	;# 
   675  0891                     	;# 
   676  0891                     	;# 
   677  0892                     	;# 
   678  0892                     	;# 
   679  0892                     	;# 
   680  0893                     	;# 
   681  0893                     	;# 
   682  0893                     	;# 
   683  0893                     	;# 
   684  0893                     	;# 
   685  0893                     	;# 
   686  0894                     	;# 
   687  0894                     	;# 
   688  0894                     	;# 
   689  0895                     	;# 
   690  0895                     	;# 
   691  0895                     	;# 
   692  0896                     	;# 
   693  0896                     	;# 
   694  0896                     	;# 
   695  089B                     	;# 
   696  0911                     	;# 
   697  0912                     	;# 
   698  0913                     	;# 
   699  0914                     	;# 
   700  0915                     	;# 
   701  0916                     	;# 
   702  0918                     	;# 
   703  0919                     	;# 
   704  091A                     	;# 
   705  091B                     	;# 
   706  091C                     	;# 
   707  091D                     	;# 
   708  091E                     	;# 
   709  091F                     	;# 
   710  0E0F                     	;# 
   711  0E10                     	;# 
   712  0E11                     	;# 
   713  0E12                     	;# 
   714  0E13                     	;# 
   715  0E14                     	;# 
   716  0E15                     	;# 
   717  0E16                     	;# 
   718  0E17                     	;# 
   719  0E18                     	;# 
   720  0E19                     	;# 
   721  0E1A                     	;# 
   722  0E1B                     	;# 
   723  0E1C                     	;# 
   724  0E1D                     	;# 
   725  0E1E                     	;# 
   726  0E1F                     	;# 
   727  0E20                     	;# 
   728  0E21                     	;# 
   729  0E22                     	;# 
   730  0E24                     	;# 
   731  0E25                     	;# 
   732  0E28                     	;# 
   733  0E29                     	;# 
   734  0E2A                     	;# 
   735  0E2B                     	;# 
   736  0E2C                     	;# 
   737  0E2D                     	;# 
   738  0E2E                     	;# 
   739  0E2F                     	;# 
   740  0E90                     	;# 
   741  0E91                     	;# 
   742  0E92                     	;# 
   743  0E94                     	;# 
   744  0E95                     	;# 
   745  0E9C                     	;# 
   746  0E9D                     	;# 
   747  0E9E                     	;# 
   748  0E9F                     	;# 
   749  0EA0                     	;# 
   750  0EA1                     	;# 
   751  0EA2                     	;# 
   752  0EA3                     	;# 
   753  0EA4                     	;# 
   754  0EA5                     	;# 
   755  0EA6                     	;# 
   756  0EA7                     	;# 
   757  0F0F                     	;# 
   758  0F10                     	;# 
   759  0F11                     	;# 
   760  0F12                     	;# 
   761  0F13                     	;# 
   762  0F14                     	;# 
   763  0F15                     	;# 
   764  0F16                     	;# 
   765  0F17                     	;# 
   766  0F18                     	;# 
   767  0F19                     	;# 
   768  0F1A                     	;# 
   769  0F1B                     	;# 
   770  0F1C                     	;# 
   771  0F1D                     	;# 
   772  0F1E                     	;# 
   773  0F1F                     	;# 
   774  0F20                     	;# 
   775  0F21                     	;# 
   776  0F22                     	;# 
   777  0F23                     	;# 
   778  0F24                     	;# 
   779  0F25                     	;# 
   780  0F26                     	;# 
   781  0F27                     	;# 
   782  0F28                     	;# 
   783  0F29                     	;# 
   784  0F2A                     	;# 
   785  0F2B                     	;# 
   786  0F2C                     	;# 
   787  0F2D                     	;# 
   788  0F2E                     	;# 
   789  0F2F                     	;# 
   790  0F30                     	;# 
   791  0F31                     	;# 
   792  0F32                     	;# 
   793  0F33                     	;# 
   794  0F34                     	;# 
   795  0F35                     	;# 
   796  0F36                     	;# 
   797  0F37                     	;# 
   798  0FE4                     	;# 
   799  0FE5                     	;# 
   800  0FE6                     	;# 
   801  0FE7                     	;# 
   802  0FE8                     	;# 
   803  0FE9                     	;# 
   804  0FEA                     	;# 
   805  0FEB                     	;# 
   806  0FED                     	;# 
   807  0FEE                     	;# 
   808  0FEF                     	;# 
   809  0000                     	;# 
   810  0001                     	;# 
   811  0002                     	;# 
   812  0003                     	;# 
   813  0004                     	;# 
   814  0005                     	;# 
   815  0006                     	;# 
   816  0007                     	;# 
   817  0008                     	;# 
   818  0009                     	;# 
   819  000A                     	;# 
   820  000B                     	;# 
   821  000C                     	;# 
   822  000D                     	;# 
   823  000E                     	;# 
   824  0010                     	;# 
   825  0011                     	;# 
   826  0012                     	;# 
   827  0013                     	;# 
   828  0014                     	;# 
   829  0015                     	;# 
   830  0015                     	;# 
   831  0016                     	;# 
   832  0016                     	;# 
   833  0017                     	;# 
   834  0018                     	;# 
   835  0019                     	;# 
   836  0019                     	;# 
   837  001A                     	;# 
   838  001B                     	;# 
   839  001C                     	;# 
   840  001D                     	;# 
   841  001E                     	;# 
   842  001F                     	;# 
   843  008C                     	;# 
   844  008D                     	;# 
   845  008E                     	;# 
   846  0090                     	;# 
   847  0091                     	;# 
   848  0092                     	;# 
   849  0093                     	;# 
   850  0094                     	;# 
   851  0097                     	;# 
   852  009B                     	;# 
   853  009B                     	;# 
   854  009C                     	;# 
   855  009D                     	;# 
   856  009E                     	;# 
   857  009F                     	;# 
   858  010C                     	;# 
   859  010D                     	;# 
   860  010E                     	;# 
   861  0111                     	;# 
   862  0112                     	;# 
   863  0113                     	;# 
   864  0114                     	;# 
   865  0115                     	;# 
   866  0116                     	;# 
   867  0117                     	;# 
   868  0118                     	;# 
   869  0119                     	;# 
   870  018C                     	;# 
   871  018D                     	;# 
   872  018E                     	;# 
   873  0197                     	;# 
   874  0199                     	;# 
   875  0199                     	;# 
   876  0199                     	;# 
   877  019A                     	;# 
   878  019A                     	;# 
   879  019A                     	;# 
   880  019B                     	;# 
   881  019B                     	;# 
   882  019B                     	;# 
   883  019B                     	;# 
   884  019B                     	;# 
   885  019C                     	;# 
   886  019C                     	;# 
   887  019C                     	;# 
   888  019D                     	;# 
   889  019D                     	;# 
   890  019D                     	;# 
   891  019E                     	;# 
   892  019E                     	;# 
   893  019E                     	;# 
   894  019F                     	;# 
   895  019F                     	;# 
   896  019F                     	;# 
   897  019F                     	;# 
   898  019F                     	;# 
   899  020C                     	;# 
   900  020D                     	;# 
   901  020E                     	;# 
   902  0211                     	;# 
   903  0211                     	;# 
   904  0212                     	;# 
   905  0212                     	;# 
   906  0213                     	;# 
   907  0213                     	;# 
   908  0214                     	;# 
   909  0214                     	;# 
   910  0215                     	;# 
   911  0215                     	;# 
   912  0215                     	;# 
   913  0215                     	;# 
   914  0216                     	;# 
   915  0216                     	;# 
   916  0217                     	;# 
   917  0217                     	;# 
   918  0219                     	;# 
   919  021A                     	;# 
   920  021B                     	;# 
   921  021C                     	;# 
   922  021D                     	;# 
   923  021D                     	;# 
   924  021E                     	;# 
   925  021F                     	;# 
   926  028C                     	;# 
   927  028D                     	;# 
   928  028E                     	;# 
   929  0291                     	;# 
   930  0291                     	;# 
   931  0292                     	;# 
   932  0293                     	;# 
   933  0294                     	;# 
   934  0295                     	;# 
   935  0295                     	;# 
   936  0296                     	;# 
   937  0297                     	;# 
   938  0298                     	;# 
   939  029F                     	;# 
   940  030C                     	;# 
   941  030D                     	;# 
   942  030E                     	;# 
   943  0311                     	;# 
   944  0311                     	;# 
   945  0312                     	;# 
   946  0313                     	;# 
   947  0314                     	;# 
   948  0315                     	;# 
   949  0315                     	;# 
   950  0316                     	;# 
   951  0317                     	;# 
   952  0318                     	;# 
   953  038C                     	;# 
   954  038D                     	;# 
   955  038E                     	;# 
   956  0391                     	;# 
   957  0392                     	;# 
   958  0393                     	;# 
   959  0394                     	;# 
   960  0395                     	;# 
   961  0396                     	;# 
   962  0397                     	;# 
   963  0398                     	;# 
   964  0399                     	;# 
   965  039A                     	;# 
   966  039C                     	;# 
   967  039D                     	;# 
   968  039E                     	;# 
   969  039F                     	;# 
   970  0411                     	;# 
   971  0411                     	;# 
   972  0412                     	;# 
   973  0413                     	;# 
   974  0414                     	;# 
   975  0415                     	;# 
   976  0416                     	;# 
   977  0417                     	;# 
   978  0418                     	;# 
   979  0418                     	;# 
   980  0419                     	;# 
   981  041A                     	;# 
   982  041B                     	;# 
   983  041C                     	;# 
   984  041D                     	;# 
   985  041E                     	;# 
   986  041F                     	;# 
   987  0498                     	;# 
   988  0498                     	;# 
   989  0499                     	;# 
   990  049A                     	;# 
   991  049B                     	;# 
   992  049B                     	;# 
   993  049C                     	;# 
   994  049D                     	;# 
   995  049E                     	;# 
   996  049F                     	;# 
   997  0617                     	;# 
   998  0618                     	;# 
   999  0619                     	;# 
  1000  0619                     	;# 
  1001  061A                     	;# 
  1002  061B                     	;# 
  1003  061C                     	;# 
  1004  061C                     	;# 
  1005  061F                     	;# 
  1006  0691                     	;# 
  1007  0692                     	;# 
  1008  0693                     	;# 
  1009  0694                     	;# 
  1010  0695                     	;# 
  1011  0696                     	;# 
  1012  0697                     	;# 
  1013  0698                     	;# 
  1014  0699                     	;# 
  1015  0711                     	;# 
  1016  0712                     	;# 
  1017  0713                     	;# 
  1018  0714                     	;# 
  1019  0715                     	;# 
  1020  0716                     	;# 
  1021  0717                     	;# 
  1022  0718                     	;# 
  1023  0719                     	;# 
  1024  0891                     	;# 
  1025  0891                     	;# 
  1026  0891                     	;# 
  1027  0891                     	;# 
  1028  0891                     	;# 
  1029  0891                     	;# 
  1030  0892                     	;# 
  1031  0892                     	;# 
  1032  0892                     	;# 
  1033  0893                     	;# 
  1034  0893                     	;# 
  1035  0893                     	;# 
  1036  0893                     	;# 
  1037  0893                     	;# 
  1038  0893                     	;# 
  1039  0894                     	;# 
  1040  0894                     	;# 
  1041  0894                     	;# 
  1042  0895                     	;# 
  1043  0895                     	;# 
  1044  0895                     	;# 
  1045  0896                     	;# 
  1046  0896                     	;# 
  1047  0896                     	;# 
  1048  089B                     	;# 
  1049  0911                     	;# 
  1050  0912                     	;# 
  1051  0913                     	;# 
  1052  0914                     	;# 
  1053  0915                     	;# 
  1054  0916                     	;# 
  1055  0918                     	;# 
  1056  0919                     	;# 
  1057  091A                     	;# 
  1058  091B                     	;# 
  1059  091C                     	;# 
  1060  091D                     	;# 
  1061  091E                     	;# 
  1062  091F                     	;# 
  1063  0E0F                     	;# 
  1064  0E10                     	;# 
  1065  0E11                     	;# 
  1066  0E12                     	;# 
  1067  0E13                     	;# 
  1068  0E14                     	;# 
  1069  0E15                     	;# 
  1070  0E16                     	;# 
  1071  0E17                     	;# 
  1072  0E18                     	;# 
  1073  0E19                     	;# 
  1074  0E1A                     	;# 
  1075  0E1B                     	;# 
  1076  0E1C                     	;# 
  1077  0E1D                     	;# 
  1078  0E1E                     	;# 
  1079  0E1F                     	;# 
  1080  0E20                     	;# 
  1081  0E21                     	;# 
  1082  0E22                     	;# 
  1083  0E24                     	;# 
  1084  0E25                     	;# 
  1085  0E28                     	;# 
  1086  0E29                     	;# 
  1087  0E2A                     	;# 
  1088  0E2B                     	;# 
  1089  0E2C                     	;# 
  1090  0E2D                     	;# 
  1091  0E2E                     	;# 
  1092  0E2F                     	;# 
  1093  0E90                     	;# 
  1094  0E91                     	;# 
  1095  0E92                     	;# 
  1096  0E94                     	;# 
  1097  0E95                     	;# 
  1098  0E9C                     	;# 
  1099  0E9D                     	;# 
  1100  0E9E                     	;# 
  1101  0E9F                     	;# 
  1102  0EA0                     	;# 
  1103  0EA1                     	;# 
  1104  0EA2                     	;# 
  1105  0EA3                     	;# 
  1106  0EA4                     	;# 
  1107  0EA5                     	;# 
  1108  0EA6                     	;# 
  1109  0EA7                     	;# 
  1110  0F0F                     	;# 
  1111  0F10                     	;# 
  1112  0F11                     	;# 
  1113  0F12                     	;# 
  1114  0F13                     	;# 
  1115  0F14                     	;# 
  1116  0F15                     	;# 
  1117  0F16                     	;# 
  1118  0F17                     	;# 
  1119  0F18                     	;# 
  1120  0F19                     	;# 
  1121  0F1A                     	;# 
  1122  0F1B                     	;# 
  1123  0F1C                     	;# 
  1124  0F1D                     	;# 
  1125  0F1E                     	;# 
  1126  0F1F                     	;# 
  1127  0F20                     	;# 
  1128  0F21                     	;# 
  1129  0F22                     	;# 
  1130  0F23                     	;# 
  1131  0F24                     	;# 
  1132  0F25                     	;# 
  1133  0F26                     	;# 
  1134  0F27                     	;# 
  1135  0F28                     	;# 
  1136  0F29                     	;# 
  1137  0F2A                     	;# 
  1138  0F2B                     	;# 
  1139  0F2C                     	;# 
  1140  0F2D                     	;# 
  1141  0F2E                     	;# 
  1142  0F2F                     	;# 
  1143  0F30                     	;# 
  1144  0F31                     	;# 
  1145  0F32                     	;# 
  1146  0F33                     	;# 
  1147  0F34                     	;# 
  1148  0F35                     	;# 
  1149  0F36                     	;# 
  1150  0F37                     	;# 
  1151  0FE4                     	;# 
  1152  0FE5                     	;# 
  1153  0FE6                     	;# 
  1154  0FE7                     	;# 
  1155  0FE8                     	;# 
  1156  0FE9                     	;# 
  1157  0FEA                     	;# 
  1158  0FEB                     	;# 
  1159  0FED                     	;# 
  1160  0FEE                     	;# 
  1161  0FEF                     	;# 
  1162  0000                     	;# 
  1163  0001                     	;# 
  1164  0002                     	;# 
  1165  0003                     	;# 
  1166  0004                     	;# 
  1167  0005                     	;# 
  1168  0006                     	;# 
  1169  0007                     	;# 
  1170  0008                     	;# 
  1171  0009                     	;# 
  1172  000A                     	;# 
  1173  000B                     	;# 
  1174  000C                     	;# 
  1175  000D                     	;# 
  1176  000E                     	;# 
  1177  0010                     	;# 
  1178  0011                     	;# 
  1179  0012                     	;# 
  1180  0013                     	;# 
  1181  0014                     	;# 
  1182  0015                     	;# 
  1183  0015                     	;# 
  1184  0016                     	;# 
  1185  0016                     	;# 
  1186  0017                     	;# 
  1187  0018                     	;# 
  1188  0019                     	;# 
  1189  0019                     	;# 
  1190  001A                     	;# 
  1191  001B                     	;# 
  1192  001C                     	;# 
  1193  001D                     	;# 
  1194  001E                     	;# 
  1195  001F                     	;# 
  1196  008C                     	;# 
  1197  008D                     	;# 
  1198  008E                     	;# 
  1199  0090                     	;# 
  1200  0091                     	;# 
  1201  0092                     	;# 
  1202  0093                     	;# 
  1203  0094                     	;# 
  1204  0097                     	;# 
  1205  009B                     	;# 
  1206  009B                     	;# 
  1207  009C                     	;# 
  1208  009D                     	;# 
  1209  009E                     	;# 
  1210  009F                     	;# 
  1211  010C                     	;# 
  1212  010D                     	;# 
  1213  010E                     	;# 
  1214  0111                     	;# 
  1215  0112                     	;# 
  1216  0113                     	;# 
  1217  0114                     	;# 
  1218  0115                     	;# 
  1219  0116                     	;# 
  1220  0117                     	;# 
  1221  0118                     	;# 
  1222  0119                     	;# 
  1223  018C                     	;# 
  1224  018D                     	;# 
  1225  018E                     	;# 
  1226  0197                     	;# 
  1227  0199                     	;# 
  1228  0199                     	;# 
  1229  0199                     	;# 
  1230  019A                     	;# 
  1231  019A                     	;# 
  1232  019A                     	;# 
  1233  019B                     	;# 
  1234  019B                     	;# 
  1235  019B                     	;# 
  1236  019B                     	;# 
  1237  019B                     	;# 
  1238  019C                     	;# 
  1239  019C                     	;# 
  1240  019C                     	;# 
  1241  019D                     	;# 
  1242  019D                     	;# 
  1243  019D                     	;# 
  1244  019E                     	;# 
  1245  019E                     	;# 
  1246  019E                     	;# 
  1247  019F                     	;# 
  1248  019F                     	;# 
  1249  019F                     	;# 
  1250  019F                     	;# 
  1251  019F                     	;# 
  1252  020C                     	;# 
  1253  020D                     	;# 
  1254  020E                     	;# 
  1255  0211                     	;# 
  1256  0211                     	;# 
  1257  0212                     	;# 
  1258  0212                     	;# 
  1259  0213                     	;# 
  1260  0213                     	;# 
  1261  0214                     	;# 
  1262  0214                     	;# 
  1263  0215                     	;# 
  1264  0215                     	;# 
  1265  0215                     	;# 
  1266  0215                     	;# 
  1267  0216                     	;# 
  1268  0216                     	;# 
  1269  0217                     	;# 
  1270  0217                     	;# 
  1271  0219                     	;# 
  1272  021A                     	;# 
  1273  021B                     	;# 
  1274  021C                     	;# 
  1275  021D                     	;# 
  1276  021D                     	;# 
  1277  021E                     	;# 
  1278  021F                     	;# 
  1279  028C                     	;# 
  1280  028D                     	;# 
  1281  028E                     	;# 
  1282  0291                     	;# 
  1283  0291                     	;# 
  1284  0292                     	;# 
  1285  0293                     	;# 
  1286  0294                     	;# 
  1287  0295                     	;# 
  1288  0295                     	;# 
  1289  0296                     	;# 
  1290  0297                     	;# 
  1291  0298                     	;# 
  1292  029F                     	;# 
  1293  030C                     	;# 
  1294  030D                     	;# 
  1295  030E                     	;# 
  1296  0311                     	;# 
  1297  0311                     	;# 
  1298  0312                     	;# 
  1299  0313                     	;# 
  1300  0314                     	;# 
  1301  0315                     	;# 
  1302  0315                     	;# 
  1303  0316                     	;# 
  1304  0317                     	;# 
  1305  0318                     	;# 
  1306  038C                     	;# 
  1307  038D                     	;# 
  1308  038E                     	;# 
  1309  0391                     	;# 
  1310  0392                     	;# 
  1311  0393                     	;# 
  1312  0394                     	;# 
  1313  0395                     	;# 
  1314  0396                     	;# 
  1315  0397                     	;# 
  1316  0398                     	;# 
  1317  0399                     	;# 
  1318  039A                     	;# 
  1319  039C                     	;# 
  1320  039D                     	;# 
  1321  039E                     	;# 
  1322  039F                     	;# 
  1323  0411                     	;# 
  1324  0411                     	;# 
  1325  0412                     	;# 
  1326  0413                     	;# 
  1327  0414                     	;# 
  1328  0415                     	;# 
  1329  0416                     	;# 
  1330  0417                     	;# 
  1331  0418                     	;# 
  1332  0418                     	;# 
  1333  0419                     	;# 
  1334  041A                     	;# 
  1335  041B                     	;# 
  1336  041C                     	;# 
  1337  041D                     	;# 
  1338  041E                     	;# 
  1339  041F                     	;# 
  1340  0498                     	;# 
  1341  0498                     	;# 
  1342  0499                     	;# 
  1343  049A                     	;# 
  1344  049B                     	;# 
  1345  049B                     	;# 
  1346  049C                     	;# 
  1347  049D                     	;# 
  1348  049E                     	;# 
  1349  049F                     	;# 
  1350  0617                     	;# 
  1351  0618                     	;# 
  1352  0619                     	;# 
  1353  0619                     	;# 
  1354  061A                     	;# 
  1355  061B                     	;# 
  1356  061C                     	;# 
  1357  061C                     	;# 
  1358  061F                     	;# 
  1359  0691                     	;# 
  1360  0692                     	;# 
  1361  0693                     	;# 
  1362  0694                     	;# 
  1363  0695                     	;# 
  1364  0696                     	;# 
  1365  0697                     	;# 
  1366  0698                     	;# 
  1367  0699                     	;# 
  1368  0711                     	;# 
  1369  0712                     	;# 
  1370  0713                     	;# 
  1371  0714                     	;# 
  1372  0715                     	;# 
  1373  0716                     	;# 
  1374  0717                     	;# 
  1375  0718                     	;# 
  1376  0719                     	;# 
  1377  0891                     	;# 
  1378  0891                     	;# 
  1379  0891                     	;# 
  1380  0891                     	;# 
  1381  0891                     	;# 
  1382  0891                     	;# 
  1383  0892                     	;# 
  1384  0892                     	;# 
  1385  0892                     	;# 
  1386  0893                     	;# 
  1387  0893                     	;# 
  1388  0893                     	;# 
  1389  0893                     	;# 
  1390  0893                     	;# 
  1391  0893                     	;# 
  1392  0894                     	;# 
  1393  0894                     	;# 
  1394  0894                     	;# 
  1395  0895                     	;# 
  1396  0895                     	;# 
  1397  0895                     	;# 
  1398  0896                     	;# 
  1399  0896                     	;# 
  1400  0896                     	;# 
  1401  089B                     	;# 
  1402  0911                     	;# 
  1403  0912                     	;# 
  1404  0913                     	;# 
  1405  0914                     	;# 
  1406  0915                     	;# 
  1407  0916                     	;# 
  1408  0918                     	;# 
  1409  0919                     	;# 
  1410  091A                     	;# 
  1411  091B                     	;# 
  1412  091C                     	;# 
  1413  091D                     	;# 
  1414  091E                     	;# 
  1415  091F                     	;# 
  1416  0E0F                     	;# 
  1417  0E10                     	;# 
  1418  0E11                     	;# 
  1419  0E12                     	;# 
  1420  0E13                     	;# 
  1421  0E14                     	;# 
  1422  0E15                     	;# 
  1423  0E16                     	;# 
  1424  0E17                     	;# 
  1425  0E18                     	;# 
  1426  0E19                     	;# 
  1427  0E1A                     	;# 
  1428  0E1B                     	;# 
  1429  0E1C                     	;# 
  1430  0E1D                     	;# 
  1431  0E1E                     	;# 
  1432  0E1F                     	;# 
  1433  0E20                     	;# 
  1434  0E21                     	;# 
  1435  0E22                     	;# 
  1436  0E24                     	;# 
  1437  0E25                     	;# 
  1438  0E28                     	;# 
  1439  0E29                     	;# 
  1440  0E2A                     	;# 
  1441  0E2B                     	;# 
  1442  0E2C                     	;# 
  1443  0E2D                     	;# 
  1444  0E2E                     	;# 
  1445  0E2F                     	;# 
  1446  0E90                     	;# 
  1447  0E91                     	;# 
  1448  0E92                     	;# 
  1449  0E94                     	;# 
  1450  0E95                     	;# 
  1451  0E9C                     	;# 
  1452  0E9D                     	;# 
  1453  0E9E                     	;# 
  1454  0E9F                     	;# 
  1455  0EA0                     	;# 
  1456  0EA1                     	;# 
  1457  0EA2                     	;# 
  1458  0EA3                     	;# 
  1459  0EA4                     	;# 
  1460  0EA5                     	;# 
  1461  0EA6                     	;# 
  1462  0EA7                     	;# 
  1463  0F0F                     	;# 
  1464  0F10                     	;# 
  1465  0F11                     	;# 
  1466  0F12                     	;# 
  1467  0F13                     	;# 
  1468  0F14                     	;# 
  1469  0F15                     	;# 
  1470  0F16                     	;# 
  1471  0F17                     	;# 
  1472  0F18                     	;# 
  1473  0F19                     	;# 
  1474  0F1A                     	;# 
  1475  0F1B                     	;# 
  1476  0F1C                     	;# 
  1477  0F1D                     	;# 
  1478  0F1E                     	;# 
  1479  0F1F                     	;# 
  1480  0F20                     	;# 
  1481  0F21                     	;# 
  1482  0F22                     	;# 
  1483  0F23                     	;# 
  1484  0F24                     	;# 
  1485  0F25                     	;# 
  1486  0F26                     	;# 
  1487  0F27                     	;# 
  1488  0F28                     	;# 
  1489  0F29                     	;# 
  1490  0F2A                     	;# 
  1491  0F2B                     	;# 
  1492  0F2C                     	;# 
  1493  0F2D                     	;# 
  1494  0F2E                     	;# 
  1495  0F2F                     	;# 
  1496  0F30                     	;# 
  1497  0F31                     	;# 
  1498  0F32                     	;# 
  1499  0F33                     	;# 
  1500  0F34                     	;# 
  1501  0F35                     	;# 
  1502  0F36                     	;# 
  1503  0F37                     	;# 
  1504  0FE4                     	;# 
  1505  0FE5                     	;# 
  1506  0FE6                     	;# 
  1507  0FE7                     	;# 
  1508  0FE8                     	;# 
  1509  0FE9                     	;# 
  1510  0FEA                     	;# 
  1511  0FEB                     	;# 
  1512  0FED                     	;# 
  1513  0FEE                     	;# 
  1514  0FEF                     	;# 
  1515  0000                     	;# 
  1516  0001                     	;# 
  1517  0002                     	;# 
  1518  0003                     	;# 
  1519  0004                     	;# 
  1520  0005                     	;# 
  1521  0006                     	;# 
  1522  0007                     	;# 
  1523  0008                     	;# 
  1524  0009                     	;# 
  1525  000A                     	;# 
  1526  000B                     	;# 
  1527  000C                     	;# 
  1528  000D                     	;# 
  1529  000E                     	;# 
  1530  0010                     	;# 
  1531  0011                     	;# 
  1532  0012                     	;# 
  1533  0013                     	;# 
  1534  0014                     	;# 
  1535  0015                     	;# 
  1536  0015                     	;# 
  1537  0016                     	;# 
  1538  0016                     	;# 
  1539  0017                     	;# 
  1540  0018                     	;# 
  1541  0019                     	;# 
  1542  0019                     	;# 
  1543  001A                     	;# 
  1544  001B                     	;# 
  1545  001C                     	;# 
  1546  001D                     	;# 
  1547  001E                     	;# 
  1548  001F                     	;# 
  1549  008C                     	;# 
  1550  008D                     	;# 
  1551  008E                     	;# 
  1552  0090                     	;# 
  1553  0091                     	;# 
  1554  0092                     	;# 
  1555  0093                     	;# 
  1556  0094                     	;# 
  1557  0097                     	;# 
  1558  009B                     	;# 
  1559  009B                     	;# 
  1560  009C                     	;# 
  1561  009D                     	;# 
  1562  009E                     	;# 
  1563  009F                     	;# 
  1564  010C                     	;# 
  1565  010D                     	;# 
  1566  010E                     	;# 
  1567  0111                     	;# 
  1568  0112                     	;# 
  1569  0113                     	;# 
  1570  0114                     	;# 
  1571  0115                     	;# 
  1572  0116                     	;# 
  1573  0117                     	;# 
  1574  0118                     	;# 
  1575  0119                     	;# 
  1576  018C                     	;# 
  1577  018D                     	;# 
  1578  018E                     	;# 
  1579  0197                     	;# 
  1580  0199                     	;# 
  1581  0199                     	;# 
  1582  0199                     	;# 
  1583  019A                     	;# 
  1584  019A                     	;# 
  1585  019A                     	;# 
  1586  019B                     	;# 
  1587  019B                     	;# 
  1588  019B                     	;# 
  1589  019B                     	;# 
  1590  019B                     	;# 
  1591  019C                     	;# 
  1592  019C                     	;# 
  1593  019C                     	;# 
  1594  019D                     	;# 
  1595  019D                     	;# 
  1596  019D                     	;# 
  1597  019E                     	;# 
  1598  019E                     	;# 
  1599  019E                     	;# 
  1600  019F                     	;# 
  1601  019F                     	;# 
  1602  019F                     	;# 
  1603  019F                     	;# 
  1604  019F                     	;# 
  1605  020C                     	;# 
  1606  020D                     	;# 
  1607  020E                     	;# 
  1608  0211                     	;# 
  1609  0211                     	;# 
  1610  0212                     	;# 
  1611  0212                     	;# 
  1612  0213                     	;# 
  1613  0213                     	;# 
  1614  0214                     	;# 
  1615  0214                     	;# 
  1616  0215                     	;# 
  1617  0215                     	;# 
  1618  0215                     	;# 
  1619  0215                     	;# 
  1620  0216                     	;# 
  1621  0216                     	;# 
  1622  0217                     	;# 
  1623  0217                     	;# 
  1624  0219                     	;# 
  1625  021A                     	;# 
  1626  021B                     	;# 
  1627  021C                     	;# 
  1628  021D                     	;# 
  1629  021D                     	;# 
  1630  021E                     	;# 
  1631  021F                     	;# 
  1632  028C                     	;# 
  1633  028D                     	;# 
  1634  028E                     	;# 
  1635  0291                     	;# 
  1636  0291                     	;# 
  1637  0292                     	;# 
  1638  0293                     	;# 
  1639  0294                     	;# 
  1640  0295                     	;# 
  1641  0295                     	;# 
  1642  0296                     	;# 
  1643  0297                     	;# 
  1644  0298                     	;# 
  1645  029F                     	;# 
  1646  030C                     	;# 
  1647  030D                     	;# 
  1648  030E                     	;# 
  1649  0311                     	;# 
  1650  0311                     	;# 
  1651  0312                     	;# 
  1652  0313                     	;# 
  1653  0314                     	;# 
  1654  0315                     	;# 
  1655  0315                     	;# 
  1656  0316                     	;# 
  1657  0317                     	;# 
  1658  0318                     	;# 
  1659  038C                     	;# 
  1660  038D                     	;# 
  1661  038E                     	;# 
  1662  0391                     	;# 
  1663  0392                     	;# 
  1664  0393                     	;# 
  1665  0394                     	;# 
  1666  0395                     	;# 
  1667  0396                     	;# 
  1668  0397                     	;# 
  1669  0398                     	;# 
  1670  0399                     	;# 
  1671  039A                     	;# 
  1672  039C                     	;# 
  1673  039D                     	;# 
  1674  039E                     	;# 
  1675  039F                     	;# 
  1676  0411                     	;# 
  1677  0411                     	;# 
  1678  0412                     	;# 
  1679  0413                     	;# 
  1680  0414                     	;# 
  1681  0415                     	;# 
  1682  0416                     	;# 
  1683  0417                     	;# 
  1684  0418                     	;# 
  1685  0418                     	;# 
  1686  0419                     	;# 
  1687  041A                     	;# 
  1688  041B                     	;# 
  1689  041C                     	;# 
  1690  041D                     	;# 
  1691  041E                     	;# 
  1692  041F                     	;# 
  1693  0498                     	;# 
  1694  0498                     	;# 
  1695  0499                     	;# 
  1696  049A                     	;# 
  1697  049B                     	;# 
  1698  049B                     	;# 
  1699  049C                     	;# 
  1700  049D                     	;# 
  1701  049E                     	;# 
  1702  049F                     	;# 
  1703  0617                     	;# 
  1704  0618                     	;# 
  1705  0619                     	;# 
  1706  0619                     	;# 
  1707  061A                     	;# 
  1708  061B                     	;# 
  1709  061C                     	;# 
  1710  061C                     	;# 
  1711  061F                     	;# 
  1712  0691                     	;# 
  1713  0692                     	;# 
  1714  0693                     	;# 
  1715  0694                     	;# 
  1716  0695                     	;# 
  1717  0696                     	;# 
  1718  0697                     	;# 
  1719  0698                     	;# 
  1720  0699                     	;# 
  1721  0711                     	;# 
  1722  0712                     	;# 
  1723  0713                     	;# 
  1724  0714                     	;# 
  1725  0715                     	;# 
  1726  0716                     	;# 
  1727  0717                     	;# 
  1728  0718                     	;# 
  1729  0719                     	;# 
  1730  0891                     	;# 
  1731  0891                     	;# 
  1732  0891                     	;# 
  1733  0891                     	;# 
  1734  0891                     	;# 
  1735  0891                     	;# 
  1736  0892                     	;# 
  1737  0892                     	;# 
  1738  0892                     	;# 
  1739  0893                     	;# 
  1740  0893                     	;# 
  1741  0893                     	;# 
  1742  0893                     	;# 
  1743  0893                     	;# 
  1744  0893                     	;# 
  1745  0894                     	;# 
  1746  0894                     	;# 
  1747  0894                     	;# 
  1748  0895                     	;# 
  1749  0895                     	;# 
  1750  0895                     	;# 
  1751  0896                     	;# 
  1752  0896                     	;# 
  1753  0896                     	;# 
  1754  089B                     	;# 
  1755  0911                     	;# 
  1756  0912                     	;# 
  1757  0913                     	;# 
  1758  0914                     	;# 
  1759  0915                     	;# 
  1760  0916                     	;# 
  1761  0918                     	;# 
  1762  0919                     	;# 
  1763  091A                     	;# 
  1764  091B                     	;# 
  1765  091C                     	;# 
  1766  091D                     	;# 
  1767  091E                     	;# 
  1768  091F                     	;# 
  1769  0E0F                     	;# 
  1770  0E10                     	;# 
  1771  0E11                     	;# 
  1772  0E12                     	;# 
  1773  0E13                     	;# 
  1774  0E14                     	;# 
  1775  0E15                     	;# 
  1776  0E16                     	;# 
  1777  0E17                     	;# 
  1778  0E18                     	;# 
  1779  0E19                     	;# 
  1780  0E1A                     	;# 
  1781  0E1B                     	;# 
  1782  0E1C                     	;# 
  1783  0E1D                     	;# 
  1784  0E1E                     	;# 
  1785  0E1F                     	;# 
  1786  0E20                     	;# 
  1787  0E21                     	;# 
  1788  0E22                     	;# 
  1789  0E24                     	;# 
  1790  0E25                     	;# 
  1791  0E28                     	;# 
  1792  0E29                     	;# 
  1793  0E2A                     	;# 
  1794  0E2B                     	;# 
  1795  0E2C                     	;# 
  1796  0E2D                     	;# 
  1797  0E2E                     	;# 
  1798  0E2F                     	;# 
  1799  0E90                     	;# 
  1800  0E91                     	;# 
  1801  0E92                     	;# 
  1802  0E94                     	;# 
  1803  0E95                     	;# 
  1804  0E9C                     	;# 
  1805  0E9D                     	;# 
  1806  0E9E                     	;# 
  1807  0E9F                     	;# 
  1808  0EA0                     	;# 
  1809  0EA1                     	;# 
  1810  0EA2                     	;# 
  1811  0EA3                     	;# 
  1812  0EA4                     	;# 
  1813  0EA5                     	;# 
  1814  0EA6                     	;# 
  1815  0EA7                     	;# 
  1816  0F0F                     	;# 
  1817  0F10                     	;# 
  1818  0F11                     	;# 
  1819  0F12                     	;# 
  1820  0F13                     	;# 
  1821  0F14                     	;# 
  1822  0F15                     	;# 
  1823  0F16                     	;# 
  1824  0F17                     	;# 
  1825  0F18                     	;# 
  1826  0F19                     	;# 
  1827  0F1A                     	;# 
  1828  0F1B                     	;# 
  1829  0F1C                     	;# 
  1830  0F1D                     	;# 
  1831  0F1E                     	;# 
  1832  0F1F                     	;# 
  1833  0F20                     	;# 
  1834  0F21                     	;# 
  1835  0F22                     	;# 
  1836  0F23                     	;# 
  1837  0F24                     	;# 
  1838  0F25                     	;# 
  1839  0F26                     	;# 
  1840  0F27                     	;# 
  1841  0F28                     	;# 
  1842  0F29                     	;# 
  1843  0F2A                     	;# 
  1844  0F2B                     	;# 
  1845  0F2C                     	;# 
  1846  0F2D                     	;# 
  1847  0F2E                     	;# 
  1848  0F2F                     	;# 
  1849  0F30                     	;# 
  1850  0F31                     	;# 
  1851  0F32                     	;# 
  1852  0F33                     	;# 
  1853  0F34                     	;# 
  1854  0F35                     	;# 
  1855  0F36                     	;# 
  1856  0F37                     	;# 
  1857  0FE4                     	;# 
  1858  0FE5                     	;# 
  1859  0FE6                     	;# 
  1860  0FE7                     	;# 
  1861  0FE8                     	;# 
  1862  0FE9                     	;# 
  1863  0FEA                     	;# 
  1864  0FEB                     	;# 
  1865  0FED                     	;# 
  1866  0FEE                     	;# 
  1867  0FEF                     	;# 
  1868  0000                     	;# 
  1869  0001                     	;# 
  1870  0002                     	;# 
  1871  0003                     	;# 
  1872  0004                     	;# 
  1873  0005                     	;# 
  1874  0006                     	;# 
  1875  0007                     	;# 
  1876  0008                     	;# 
  1877  0009                     	;# 
  1878  000A                     	;# 
  1879  000B                     	;# 
  1880  000C                     	;# 
  1881  000D                     	;# 
  1882  000E                     	;# 
  1883  0010                     	;# 
  1884  0011                     	;# 
  1885  0012                     	;# 
  1886  0013                     	;# 
  1887  0014                     	;# 
  1888  0015                     	;# 
  1889  0015                     	;# 
  1890  0016                     	;# 
  1891  0016                     	;# 
  1892  0017                     	;# 
  1893  0018                     	;# 
  1894  0019                     	;# 
  1895  0019                     	;# 
  1896  001A                     	;# 
  1897  001B                     	;# 
  1898  001C                     	;# 
  1899  001D                     	;# 
  1900  001E                     	;# 
  1901  001F                     	;# 
  1902  008C                     	;# 
  1903  008D                     	;# 
  1904  008E                     	;# 
  1905  0090                     	;# 
  1906  0091                     	;# 
  1907  0092                     	;# 
  1908  0093                     	;# 
  1909  0094                     	;# 
  1910  0097                     	;# 
  1911  009B                     	;# 
  1912  009B                     	;# 
  1913  009C                     	;# 
  1914  009D                     	;# 
  1915  009E                     	;# 
  1916  009F                     	;# 
  1917  010C                     	;# 
  1918  010D                     	;# 
  1919  010E                     	;# 
  1920  0111                     	;# 
  1921  0112                     	;# 
  1922  0113                     	;# 
  1923  0114                     	;# 
  1924  0115                     	;# 
  1925  0116                     	;# 
  1926  0117                     	;# 
  1927  0118                     	;# 
  1928  0119                     	;# 
  1929  018C                     	;# 
  1930  018D                     	;# 
  1931  018E                     	;# 
  1932  0197                     	;# 
  1933  0199                     	;# 
  1934  0199                     	;# 
  1935  0199                     	;# 
  1936  019A                     	;# 
  1937  019A                     	;# 
  1938  019A                     	;# 
  1939  019B                     	;# 
  1940  019B                     	;# 
  1941  019B                     	;# 
  1942  019B                     	;# 
  1943  019B                     	;# 
  1944  019C                     	;# 
  1945  019C                     	;# 
  1946  019C                     	;# 
  1947  019D                     	;# 
  1948  019D                     	;# 
  1949  019D                     	;# 
  1950  019E                     	;# 
  1951  019E                     	;# 
  1952  019E                     	;# 
  1953  019F                     	;# 
  1954  019F                     	;# 
  1955  019F                     	;# 
  1956  019F                     	;# 
  1957  019F                     	;# 
  1958  020C                     	;# 
  1959  020D                     	;# 
  1960  020E                     	;# 
  1961  0211                     	;# 
  1962  0211                     	;# 
  1963  0212                     	;# 
  1964  0212                     	;# 
  1965  0213                     	;# 
  1966  0213                     	;# 
  1967  0214                     	;# 
  1968  0214                     	;# 
  1969  0215                     	;# 
  1970  0215                     	;# 
  1971  0215                     	;# 
  1972  0215                     	;# 
  1973  0216                     	;# 
  1974  0216                     	;# 
  1975  0217                     	;# 
  1976  0217                     	;# 
  1977  0219                     	;# 
  1978  021A                     	;# 
  1979  021B                     	;# 
  1980  021C                     	;# 
  1981  021D                     	;# 
  1982  021D                     	;# 
  1983  021E                     	;# 
  1984  021F                     	;# 
  1985  028C                     	;# 
  1986  028D                     	;# 
  1987  028E                     	;# 
  1988  0291                     	;# 
  1989  0291                     	;# 
  1990  0292                     	;# 
  1991  0293                     	;# 
  1992  0294                     	;# 
  1993  0295                     	;# 
  1994  0295                     	;# 
  1995  0296                     	;# 
  1996  0297                     	;# 
  1997  0298                     	;# 
  1998  029F                     	;# 
  1999  030C                     	;# 
  2000  030D                     	;# 
  2001  030E                     	;# 
  2002  0311                     	;# 
  2003  0311                     	;# 
  2004  0312                     	;# 
  2005  0313                     	;# 
  2006  0314                     	;# 
  2007  0315                     	;# 
  2008  0315                     	;# 
  2009  0316                     	;# 
  2010  0317                     	;# 
  2011  0318                     	;# 
  2012  038C                     	;# 
  2013  038D                     	;# 
  2014  038E                     	;# 
  2015  0391                     	;# 
  2016  0392                     	;# 
  2017  0393                     	;# 
  2018  0394                     	;# 
  2019  0395                     	;# 
  2020  0396                     	;# 
  2021  0397                     	;# 
  2022  0398                     	;# 
  2023  0399                     	;# 
  2024  039A                     	;# 
  2025  039C                     	;# 
  2026  039D                     	;# 
  2027  039E                     	;# 
  2028  039F                     	;# 
  2029  0411                     	;# 
  2030  0411                     	;# 
  2031  0412                     	;# 
  2032  0413                     	;# 
  2033  0414                     	;# 
  2034  0415                     	;# 
  2035  0416                     	;# 
  2036  0417                     	;# 
  2037  0418                     	;# 
  2038  0418                     	;# 
  2039  0419                     	;# 
  2040  041A                     	;# 
  2041  041B                     	;# 
  2042  041C                     	;# 
  2043  041D                     	;# 
  2044  041E                     	;# 
  2045  041F                     	;# 
  2046  0498                     	;# 
  2047  0498                     	;# 
  2048  0499                     	;# 
  2049  049A                     	;# 
  2050  049B                     	;# 
  2051  049B                     	;# 
  2052  049C                     	;# 
  2053  049D                     	;# 
  2054  049E                     	;# 
  2055  049F                     	;# 
  2056  0617                     	;# 
  2057  0618                     	;# 
  2058  0619                     	;# 
  2059  0619                     	;# 
  2060  061A                     	;# 
  2061  061B                     	;# 
  2062  061C                     	;# 
  2063  061C                     	;# 
  2064  061F                     	;# 
  2065  0691                     	;# 
  2066  0692                     	;# 
  2067  0693                     	;# 
  2068  0694                     	;# 
  2069  0695                     	;# 
  2070  0696                     	;# 
  2071  0697                     	;# 
  2072  0698                     	;# 
  2073  0699                     	;# 
  2074  0711                     	;# 
  2075  0712                     	;# 
  2076  0713                     	;# 
  2077  0714                     	;# 
  2078  0715                     	;# 
  2079  0716                     	;# 
  2080  0717                     	;# 
  2081  0718                     	;# 
  2082  0719                     	;# 
  2083  0891                     	;# 
  2084  0891                     	;# 
  2085  0891                     	;# 
  2086  0891                     	;# 
  2087  0891                     	;# 
  2088  0891                     	;# 
  2089  0892                     	;# 
  2090  0892                     	;# 
  2091  0892                     	;# 
  2092  0893                     	;# 
  2093  0893                     	;# 
  2094  0893                     	;# 
  2095  0893                     	;# 
  2096  0893                     	;# 
  2097  0893                     	;# 
  2098  0894                     	;# 
  2099  0894                     	;# 
  2100  0894                     	;# 
  2101  0895                     	;# 
  2102  0895                     	;# 
  2103  0895                     	;# 
  2104  0896                     	;# 
  2105  0896                     	;# 
  2106  0896                     	;# 
  2107  089B                     	;# 
  2108  0911                     	;# 
  2109  0912                     	;# 
  2110  0913                     	;# 
  2111  0914                     	;# 
  2112  0915                     	;# 
  2113  0916                     	;# 
  2114  0918                     	;# 
  2115  0919                     	;# 
  2116  091A                     	;# 
  2117  091B                     	;# 
  2118  091C                     	;# 
  2119  091D                     	;# 
  2120  091E                     	;# 
  2121  091F                     	;# 
  2122  0E0F                     	;# 
  2123  0E10                     	;# 
  2124  0E11                     	;# 
  2125  0E12                     	;# 
  2126  0E13                     	;# 
  2127  0E14                     	;# 
  2128  0E15                     	;# 
  2129  0E16                     	;# 
  2130  0E17                     	;# 
  2131  0E18                     	;# 
  2132  0E19                     	;# 
  2133  0E1A                     	;# 
  2134  0E1B                     	;# 
  2135  0E1C                     	;# 
  2136  0E1D                     	;# 
  2137  0E1E                     	;# 
  2138  0E1F                     	;# 
  2139  0E20                     	;# 
  2140  0E21                     	;# 
  2141  0E22                     	;# 
  2142  0E24                     	;# 
  2143  0E25                     	;# 
  2144  0E28                     	;# 
  2145  0E29                     	;# 
  2146  0E2A                     	;# 
  2147  0E2B                     	;# 
  2148  0E2C                     	;# 
  2149  0E2D                     	;# 
  2150  0E2E                     	;# 
  2151  0E2F                     	;# 
  2152  0E90                     	;# 
  2153  0E91                     	;# 
  2154  0E92                     	;# 
  2155  0E94                     	;# 
  2156  0E95                     	;# 
  2157  0E9C                     	;# 
  2158  0E9D                     	;# 
  2159  0E9E                     	;# 
  2160  0E9F                     	;# 
  2161  0EA0                     	;# 
  2162  0EA1                     	;# 
  2163  0EA2                     	;# 
  2164  0EA3                     	;# 
  2165  0EA4                     	;# 
  2166  0EA5                     	;# 
  2167  0EA6                     	;# 
  2168  0EA7                     	;# 
  2169  0F0F                     	;# 
  2170  0F10                     	;# 
  2171  0F11                     	;# 
  2172  0F12                     	;# 
  2173  0F13                     	;# 
  2174  0F14                     	;# 
  2175  0F15                     	;# 
  2176  0F16                     	;# 
  2177  0F17                     	;# 
  2178  0F18                     	;# 
  2179  0F19                     	;# 
  2180  0F1A                     	;# 
  2181  0F1B                     	;# 
  2182  0F1C                     	;# 
  2183  0F1D                     	;# 
  2184  0F1E                     	;# 
  2185  0F1F                     	;# 
  2186  0F20                     	;# 
  2187  0F21                     	;# 
  2188  0F22                     	;# 
  2189  0F23                     	;# 
  2190  0F24                     	;# 
  2191  0F25                     	;# 
  2192  0F26                     	;# 
  2193  0F27                     	;# 
  2194  0F28                     	;# 
  2195  0F29                     	;# 
  2196  0F2A                     	;# 
  2197  0F2B                     	;# 
  2198  0F2C                     	;# 
  2199  0F2D                     	;# 
  2200  0F2E                     	;# 
  2201  0F2F                     	;# 
  2202  0F30                     	;# 
  2203  0F31                     	;# 
  2204  0F32                     	;# 
  2205  0F33                     	;# 
  2206  0F34                     	;# 
  2207  0F35                     	;# 
  2208  0F36                     	;# 
  2209  0F37                     	;# 
  2210  0FE4                     	;# 
  2211  0FE5                     	;# 
  2212  0FE6                     	;# 
  2213  0FE7                     	;# 
  2214  0FE8                     	;# 
  2215  0FE9                     	;# 
  2216  0FEA                     	;# 
  2217  0FEB                     	;# 
  2218  0FED                     	;# 
  2219  0FEE                     	;# 
  2220  0FEF                     	;# 
  2221  0000                     	;# 
  2222  0001                     	;# 
  2223  0002                     	;# 
  2224  0003                     	;# 
  2225  0004                     	;# 
  2226  0005                     	;# 
  2227  0006                     	;# 
  2228  0007                     	;# 
  2229  0008                     	;# 
  2230  0009                     	;# 
  2231  000A                     	;# 
  2232  000B                     	;# 
  2233  000C                     	;# 
  2234  000D                     	;# 
  2235  000E                     	;# 
  2236  0010                     	;# 
  2237  0011                     	;# 
  2238  0012                     	;# 
  2239  0013                     	;# 
  2240  0014                     	;# 
  2241  0015                     	;# 
  2242  0015                     	;# 
  2243  0016                     	;# 
  2244  0016                     	;# 
  2245  0017                     	;# 
  2246  0018                     	;# 
  2247  0019                     	;# 
  2248  0019                     	;# 
  2249  001A                     	;# 
  2250  001B                     	;# 
  2251  001C                     	;# 
  2252  001D                     	;# 
  2253  001E                     	;# 
  2254  001F                     	;# 
  2255  008C                     	;# 
  2256  008D                     	;# 
  2257  008E                     	;# 
  2258  0090                     	;# 
  2259  0091                     	;# 
  2260  0092                     	;# 
  2261  0093                     	;# 
  2262  0094                     	;# 
  2263  0097                     	;# 
  2264  009B                     	;# 
  2265  009B                     	;# 
  2266  009C                     	;# 
  2267  009D                     	;# 
  2268  009E                     	;# 
  2269  009F                     	;# 
  2270  010C                     	;# 
  2271  010D                     	;# 
  2272  010E                     	;# 
  2273  0111                     	;# 
  2274  0112                     	;# 
  2275  0113                     	;# 
  2276  0114                     	;# 
  2277  0115                     	;# 
  2278  0116                     	;# 
  2279  0117                     	;# 
  2280  0118                     	;# 
  2281  0119                     	;# 
  2282  018C                     	;# 
  2283  018D                     	;# 
  2284  018E                     	;# 
  2285  0197                     	;# 
  2286  0199                     	;# 
  2287  0199                     	;# 
  2288  0199                     	;# 
  2289  019A                     	;# 
  2290  019A                     	;# 
  2291  019A                     	;# 
  2292  019B                     	;# 
  2293  019B                     	;# 
  2294  019B                     	;# 
  2295  019B                     	;# 
  2296  019B                     	;# 
  2297  019C                     	;# 
  2298  019C                     	;# 
  2299  019C                     	;# 
  2300  019D                     	;# 
  2301  019D                     	;# 
  2302  019D                     	;# 
  2303  019E                     	;# 
  2304  019E                     	;# 
  2305  019E                     	;# 
  2306  019F                     	;# 
  2307  019F                     	;# 
  2308  019F                     	;# 
  2309  019F                     	;# 
  2310  019F                     	;# 
  2311  020C                     	;# 
  2312  020D                     	;# 
  2313  020E                     	;# 
  2314  0211                     	;# 
  2315  0211                     	;# 
  2316  0212                     	;# 
  2317  0212                     	;# 
  2318  0213                     	;# 
  2319  0213                     	;# 
  2320  0214                     	;# 
  2321  0214                     	;# 
  2322  0215                     	;# 
  2323  0215                     	;# 
  2324  0215                     	;# 
  2325  0215                     	;# 
  2326  0216                     	;# 
  2327  0216                     	;# 
  2328  0217                     	;# 
  2329  0217                     	;# 
  2330  0219                     	;# 
  2331  021A                     	;# 
  2332  021B                     	;# 
  2333  021C                     	;# 
  2334  021D                     	;# 
  2335  021D                     	;# 
  2336  021E                     	;# 
  2337  021F                     	;# 
  2338  028C                     	;# 
  2339  028D                     	;# 
  2340  028E                     	;# 
  2341  0291                     	;# 
  2342  0291                     	;# 
  2343  0292                     	;# 
  2344  0293                     	;# 
  2345  0294                     	;# 
  2346  0295                     	;# 
  2347  0295                     	;# 
  2348  0296                     	;# 
  2349  0297                     	;# 
  2350  0298                     	;# 
  2351  029F                     	;# 
  2352  030C                     	;# 
  2353  030D                     	;# 
  2354  030E                     	;# 
  2355  0311                     	;# 
  2356  0311                     	;# 
  2357  0312                     	;# 
  2358  0313                     	;# 
  2359  0314                     	;# 
  2360  0315                     	;# 
  2361  0315                     	;# 
  2362  0316                     	;# 
  2363  0317                     	;# 
  2364  0318                     	;# 
  2365  038C                     	;# 
  2366  038D                     	;# 
  2367  038E                     	;# 
  2368  0391                     	;# 
  2369  0392                     	;# 
  2370  0393                     	;# 
  2371  0394                     	;# 
  2372  0395                     	;# 
  2373  0396                     	;# 
  2374  0397                     	;# 
  2375  0398                     	;# 
  2376  0399                     	;# 
  2377  039A                     	;# 
  2378  039C                     	;# 
  2379  039D                     	;# 
  2380  039E                     	;# 
  2381  039F                     	;# 
  2382  0411                     	;# 
  2383  0411                     	;# 
  2384  0412                     	;# 
  2385  0413                     	;# 
  2386  0414                     	;# 
  2387  0415                     	;# 
  2388  0416                     	;# 
  2389  0417                     	;# 
  2390  0418                     	;# 
  2391  0418                     	;# 
  2392  0419                     	;# 
  2393  041A                     	;# 
  2394  041B                     	;# 
  2395  041C                     	;# 
  2396  041D                     	;# 
  2397  041E                     	;# 
  2398  041F                     	;# 
  2399  0498                     	;# 
  2400  0498                     	;# 
  2401  0499                     	;# 
  2402  049A                     	;# 
  2403  049B                     	;# 
  2404  049B                     	;# 
  2405  049C                     	;# 
  2406  049D                     	;# 
  2407  049E                     	;# 
  2408  049F                     	;# 
  2409  0617                     	;# 
  2410  0618                     	;# 
  2411  0619                     	;# 
  2412  0619                     	;# 
  2413  061A                     	;# 
  2414  061B                     	;# 
  2415  061C                     	;# 
  2416  061C                     	;# 
  2417  061F                     	;# 
  2418  0691                     	;# 
  2419  0692                     	;# 
  2420  0693                     	;# 
  2421  0694                     	;# 
  2422  0695                     	;# 
  2423  0696                     	;# 
  2424  0697                     	;# 
  2425  0698                     	;# 
  2426  0699                     	;# 
  2427  0711                     	;# 
  2428  0712                     	;# 
  2429  0713                     	;# 
  2430  0714                     	;# 
  2431  0715                     	;# 
  2432  0716                     	;# 
  2433  0717                     	;# 
  2434  0718                     	;# 
  2435  0719                     	;# 
  2436  0891                     	;# 
  2437  0891                     	;# 
  2438  0891                     	;# 
  2439  0891                     	;# 
  2440  0891                     	;# 
  2441  0891                     	;# 
  2442  0892                     	;# 
  2443  0892                     	;# 
  2444  0892                     	;# 
  2445  0893                     	;# 
  2446  0893                     	;# 
  2447  0893                     	;# 
  2448  0893                     	;# 
  2449  0893                     	;# 
  2450  0893                     	;# 
  2451  0894                     	;# 
  2452  0894                     	;# 
  2453  0894                     	;# 
  2454  0895                     	;# 
  2455  0895                     	;# 
  2456  0895                     	;# 
  2457  0896                     	;# 
  2458  0896                     	;# 
  2459  0896                     	;# 
  2460  089B                     	;# 
  2461  0911                     	;# 
  2462  0912                     	;# 
  2463  0913                     	;# 
  2464  0914                     	;# 
  2465  0915                     	;# 
  2466  0916                     	;# 
  2467  0918                     	;# 
  2468  0919                     	;# 
  2469  091A                     	;# 
  2470  091B                     	;# 
  2471  091C                     	;# 
  2472  091D                     	;# 
  2473  091E                     	;# 
  2474  091F                     	;# 
  2475  0E0F                     	;# 
  2476  0E10                     	;# 
  2477  0E11                     	;# 
  2478  0E12                     	;# 
  2479  0E13                     	;# 
  2480  0E14                     	;# 
  2481  0E15                     	;# 
  2482  0E16                     	;# 
  2483  0E17                     	;# 
  2484  0E18                     	;# 
  2485  0E19                     	;# 
  2486  0E1A                     	;# 
  2487  0E1B                     	;# 
  2488  0E1C                     	;# 
  2489  0E1D                     	;# 
  2490  0E1E                     	;# 
  2491  0E1F                     	;# 
  2492  0E20                     	;# 
  2493  0E21                     	;# 
  2494  0E22                     	;# 
  2495  0E24                     	;# 
  2496  0E25                     	;# 
  2497  0E28                     	;# 
  2498  0E29                     	;# 
  2499  0E2A                     	;# 
  2500  0E2B                     	;# 
  2501  0E2C                     	;# 
  2502  0E2D                     	;# 
  2503  0E2E                     	;# 
  2504  0E2F                     	;# 
  2505  0E90                     	;# 
  2506  0E91                     	;# 
  2507  0E92                     	;# 
  2508  0E94                     	;# 
  2509  0E95                     	;# 
  2510  0E9C                     	;# 
  2511  0E9D                     	;# 
  2512  0E9E                     	;# 
  2513  0E9F                     	;# 
  2514  0EA0                     	;# 
  2515  0EA1                     	;# 
  2516  0EA2                     	;# 
  2517  0EA3                     	;# 
  2518  0EA4                     	;# 
  2519  0EA5                     	;# 
  2520  0EA6                     	;# 
  2521  0EA7                     	;# 
  2522  0F0F                     	;# 
  2523  0F10                     	;# 
  2524  0F11                     	;# 
  2525  0F12                     	;# 
  2526  0F13                     	;# 
  2527  0F14                     	;# 
  2528  0F15                     	;# 
  2529  0F16                     	;# 
  2530  0F17                     	;# 
  2531  0F18                     	;# 
  2532  0F19                     	;# 
  2533  0F1A                     	;# 
  2534  0F1B                     	;# 
  2535  0F1C                     	;# 
  2536  0F1D                     	;# 
  2537  0F1E                     	;# 
  2538  0F1F                     	;# 
  2539  0F20                     	;# 
  2540  0F21                     	;# 
  2541  0F22                     	;# 
  2542  0F23                     	;# 
  2543  0F24                     	;# 
  2544  0F25                     	;# 
  2545  0F26                     	;# 
  2546  0F27                     	;# 
  2547  0F28                     	;# 
  2548  0F29                     	;# 
  2549  0F2A                     	;# 
  2550  0F2B                     	;# 
  2551  0F2C                     	;# 
  2552  0F2D                     	;# 
  2553  0F2E                     	;# 
  2554  0F2F                     	;# 
  2555  0F30                     	;# 
  2556  0F31                     	;# 
  2557  0F32                     	;# 
  2558  0F33                     	;# 
  2559  0F34                     	;# 
  2560  0F35                     	;# 
  2561  0F36                     	;# 
  2562  0F37                     	;# 
  2563  0FE4                     	;# 
  2564  0FE5                     	;# 
  2565  0FE6                     	;# 
  2566  0FE7                     	;# 
  2567  0FE8                     	;# 
  2568  0FE9                     	;# 
  2569  0FEA                     	;# 
  2570  0FEB                     	;# 
  2571  0FED                     	;# 
  2572  0FEE                     	;# 
  2573  0FEF                     	;# 
  2574  0000                     	;# 
  2575  0001                     	;# 
  2576  0002                     	;# 
  2577  0003                     	;# 
  2578  0004                     	;# 
  2579  0005                     	;# 
  2580  0006                     	;# 
  2581  0007                     	;# 
  2582  0008                     	;# 
  2583  0009                     	;# 
  2584  000A                     	;# 
  2585  000B                     	;# 
  2586  000C                     	;# 
  2587  000D                     	;# 
  2588  000E                     	;# 
  2589  0010                     	;# 
  2590  0011                     	;# 
  2591  0012                     	;# 
  2592  0013                     	;# 
  2593  0014                     	;# 
  2594  0015                     	;# 
  2595  0015                     	;# 
  2596  0016                     	;# 
  2597  0016                     	;# 
  2598  0017                     	;# 
  2599  0018                     	;# 
  2600  0019                     	;# 
  2601  0019                     	;# 
  2602  001A                     	;# 
  2603  001B                     	;# 
  2604  001C                     	;# 
  2605  001D                     	;# 
  2606  001E                     	;# 
  2607  001F                     	;# 
  2608  008C                     	;# 
  2609  008D                     	;# 
  2610  008E                     	;# 
  2611  0090                     	;# 
  2612  0091                     	;# 
  2613  0092                     	;# 
  2614  0093                     	;# 
  2615  0094                     	;# 
  2616  0097                     	;# 
  2617  009B                     	;# 
  2618  009B                     	;# 
  2619  009C                     	;# 
  2620  009D                     	;# 
  2621  009E                     	;# 
  2622  009F                     	;# 
  2623  010C                     	;# 
  2624  010D                     	;# 
  2625  010E                     	;# 
  2626  0111                     	;# 
  2627  0112                     	;# 
  2628  0113                     	;# 
  2629  0114                     	;# 
  2630  0115                     	;# 
  2631  0116                     	;# 
  2632  0117                     	;# 
  2633  0118                     	;# 
  2634  0119                     	;# 
  2635  018C                     	;# 
  2636  018D                     	;# 
  2637  018E                     	;# 
  2638  0197                     	;# 
  2639  0199                     	;# 
  2640  0199                     	;# 
  2641  0199                     	;# 
  2642  019A                     	;# 
  2643  019A                     	;# 
  2644  019A                     	;# 
  2645  019B                     	;# 
  2646  019B                     	;# 
  2647  019B                     	;# 
  2648  019B                     	;# 
  2649  019B                     	;# 
  2650  019C                     	;# 
  2651  019C                     	;# 
  2652  019C                     	;# 
  2653  019D                     	;# 
  2654  019D                     	;# 
  2655  019D                     	;# 
  2656  019E                     	;# 
  2657  019E                     	;# 
  2658  019E                     	;# 
  2659  019F                     	;# 
  2660  019F                     	;# 
  2661  019F                     	;# 
  2662  019F                     	;# 
  2663  019F                     	;# 
  2664  020C                     	;# 
  2665  020D                     	;# 
  2666  020E                     	;# 
  2667  0211                     	;# 
  2668  0211                     	;# 
  2669  0212                     	;# 
  2670  0212                     	;# 
  2671  0213                     	;# 
  2672  0213                     	;# 
  2673  0214                     	;# 
  2674  0214                     	;# 
  2675  0215                     	;# 
  2676  0215                     	;# 
  2677  0215                     	;# 
  2678  0215                     	;# 
  2679  0216                     	;# 
  2680  0216                     	;# 
  2681  0217                     	;# 
  2682  0217                     	;# 
  2683  0219                     	;# 
  2684  021A                     	;# 
  2685  021B                     	;# 
  2686  021C                     	;# 
  2687  021D                     	;# 
  2688  021D                     	;# 
  2689  021E                     	;# 
  2690  021F                     	;# 
  2691  028C                     	;# 
  2692  028D                     	;# 
  2693  028E                     	;# 
  2694  0291                     	;# 
  2695  0291                     	;# 
  2696  0292                     	;# 
  2697  0293                     	;# 
  2698  0294                     	;# 
  2699  0295                     	;# 
  2700  0295                     	;# 
  2701  0296                     	;# 
  2702  0297                     	;# 
  2703  0298                     	;# 
  2704  029F                     	;# 
  2705  030C                     	;# 
  2706  030D                     	;# 
  2707  030E                     	;# 
  2708  0311                     	;# 
  2709  0311                     	;# 
  2710  0312                     	;# 
  2711  0313                     	;# 
  2712  0314                     	;# 
  2713  0315                     	;# 
  2714  0315                     	;# 
  2715  0316                     	;# 
  2716  0317                     	;# 
  2717  0318                     	;# 
  2718  038C                     	;# 
  2719  038D                     	;# 
  2720  038E                     	;# 
  2721  0391                     	;# 
  2722  0392                     	;# 
  2723  0393                     	;# 
  2724  0394                     	;# 
  2725  0395                     	;# 
  2726  0396                     	;# 
  2727  0397                     	;# 
  2728  0398                     	;# 
  2729  0399                     	;# 
  2730  039A                     	;# 
  2731  039C                     	;# 
  2732  039D                     	;# 
  2733  039E                     	;# 
  2734  039F                     	;# 
  2735  0411                     	;# 
  2736  0411                     	;# 
  2737  0412                     	;# 
  2738  0413                     	;# 
  2739  0414                     	;# 
  2740  0415                     	;# 
  2741  0416                     	;# 
  2742  0417                     	;# 
  2743  0418                     	;# 
  2744  0418                     	;# 
  2745  0419                     	;# 
  2746  041A                     	;# 
  2747  041B                     	;# 
  2748  041C                     	;# 
  2749  041D                     	;# 
  2750  041E                     	;# 
  2751  041F                     	;# 
  2752  0498                     	;# 
  2753  0498                     	;# 
  2754  0499                     	;# 
  2755  049A                     	;# 
  2756  049B                     	;# 
  2757  049B                     	;# 
  2758  049C                     	;# 
  2759  049D                     	;# 
  2760  049E                     	;# 
  2761  049F                     	;# 
  2762  0617                     	;# 
  2763  0618                     	;# 
  2764  0619                     	;# 
  2765  0619                     	;# 
  2766  061A                     	;# 
  2767  061B                     	;# 
  2768  061C                     	;# 
  2769  061C                     	;# 
  2770  061F                     	;# 
  2771  0691                     	;# 
  2772  0692                     	;# 
  2773  0693                     	;# 
  2774  0694                     	;# 
  2775  0695                     	;# 
  2776  0696                     	;# 
  2777  0697                     	;# 
  2778  0698                     	;# 
  2779  0699                     	;# 
  2780  0711                     	;# 
  2781  0712                     	;# 
  2782  0713                     	;# 
  2783  0714                     	;# 
  2784  0715                     	;# 
  2785  0716                     	;# 
  2786  0717                     	;# 
  2787  0718                     	;# 
  2788  0719                     	;# 
  2789  0891                     	;# 
  2790  0891                     	;# 
  2791  0891                     	;# 
  2792  0891                     	;# 
  2793  0891                     	;# 
  2794  0891                     	;# 
  2795  0892                     	;# 
  2796  0892                     	;# 
  2797  0892                     	;# 
  2798  0893                     	;# 
  2799  0893                     	;# 
  2800  0893                     	;# 
  2801  0893                     	;# 
  2802  0893                     	;# 
  2803  0893                     	;# 
  2804  0894                     	;# 
  2805  0894                     	;# 
  2806  0894                     	;# 
  2807  0895                     	;# 
  2808  0895                     	;# 
  2809  0895                     	;# 
  2810  0896                     	;# 
  2811  0896                     	;# 
  2812  0896                     	;# 
  2813  089B                     	;# 
  2814  0911                     	;# 
  2815  0912                     	;# 
  2816  0913                     	;# 
  2817  0914                     	;# 
  2818  0915                     	;# 
  2819  0916                     	;# 
  2820  0918                     	;# 
  2821  0919                     	;# 
  2822  091A                     	;# 
  2823  091B                     	;# 
  2824  091C                     	;# 
  2825  091D                     	;# 
  2826  091E                     	;# 
  2827  091F                     	;# 
  2828  0E0F                     	;# 
  2829  0E10                     	;# 
  2830  0E11                     	;# 
  2831  0E12                     	;# 
  2832  0E13                     	;# 
  2833  0E14                     	;# 
  2834  0E15                     	;# 
  2835  0E16                     	;# 
  2836  0E17                     	;# 
  2837  0E18                     	;# 
  2838  0E19                     	;# 
  2839  0E1A                     	;# 
  2840  0E1B                     	;# 
  2841  0E1C                     	;# 
  2842  0E1D                     	;# 
  2843  0E1E                     	;# 
  2844  0E1F                     	;# 
  2845  0E20                     	;# 
  2846  0E21                     	;# 
  2847  0E22                     	;# 
  2848  0E24                     	;# 
  2849  0E25                     	;# 
  2850  0E28                     	;# 
  2851  0E29                     	;# 
  2852  0E2A                     	;# 
  2853  0E2B                     	;# 
  2854  0E2C                     	;# 
  2855  0E2D                     	;# 
  2856  0E2E                     	;# 
  2857  0E2F                     	;# 
  2858  0E90                     	;# 
  2859  0E91                     	;# 
  2860  0E92                     	;# 
  2861  0E94                     	;# 
  2862  0E95                     	;# 
  2863  0E9C                     	;# 
  2864  0E9D                     	;# 
  2865  0E9E                     	;# 
  2866  0E9F                     	;# 
  2867  0EA0                     	;# 
  2868  0EA1                     	;# 
  2869  0EA2                     	;# 
  2870  0EA3                     	;# 
  2871  0EA4                     	;# 
  2872  0EA5                     	;# 
  2873  0EA6                     	;# 
  2874  0EA7                     	;# 
  2875  0F0F                     	;# 
  2876  0F10                     	;# 
  2877  0F11                     	;# 
  2878  0F12                     	;# 
  2879  0F13                     	;# 
  2880  0F14                     	;# 
  2881  0F15                     	;# 
  2882  0F16                     	;# 
  2883  0F17                     	;# 
  2884  0F18                     	;# 
  2885  0F19                     	;# 
  2886  0F1A                     	;# 
  2887  0F1B                     	;# 
  2888  0F1C                     	;# 
  2889  0F1D                     	;# 
  2890  0F1E                     	;# 
  2891  0F1F                     	;# 
  2892  0F20                     	;# 
  2893  0F21                     	;# 
  2894  0F22                     	;# 
  2895  0F23                     	;# 
  2896  0F24                     	;# 
  2897  0F25                     	;# 
  2898  0F26                     	;# 
  2899  0F27                     	;# 
  2900  0F28                     	;# 
  2901  0F29                     	;# 
  2902  0F2A                     	;# 
  2903  0F2B                     	;# 
  2904  0F2C                     	;# 
  2905  0F2D                     	;# 
  2906  0F2E                     	;# 
  2907  0F2F                     	;# 
  2908  0F30                     	;# 
  2909  0F31                     	;# 
  2910  0F32                     	;# 
  2911  0F33                     	;# 
  2912  0F34                     	;# 
  2913  0F35                     	;# 
  2914  0F36                     	;# 
  2915  0F37                     	;# 
  2916  0FE4                     	;# 
  2917  0FE5                     	;# 
  2918  0FE6                     	;# 
  2919  0FE7                     	;# 
  2920  0FE8                     	;# 
  2921  0FE9                     	;# 
  2922  0FEA                     	;# 
  2923  0FEB                     	;# 
  2924  0FED                     	;# 
  2925  0FEE                     	;# 
  2926  0FEF                     	;# 
  2927  0000                     	;# 
  2928  0001                     	;# 
  2929  0002                     	;# 
  2930  0003                     	;# 
  2931  0004                     	;# 
  2932  0005                     	;# 
  2933  0006                     	;# 
  2934  0007                     	;# 
  2935  0008                     	;# 
  2936  0009                     	;# 
  2937  000A                     	;# 
  2938  000B                     	;# 
  2939  000C                     	;# 
  2940  000D                     	;# 
  2941  000E                     	;# 
  2942  0010                     	;# 
  2943  0011                     	;# 
  2944  0012                     	;# 
  2945  0013                     	;# 
  2946  0014                     	;# 
  2947  0015                     	;# 
  2948  0015                     	;# 
  2949  0016                     	;# 
  2950  0016                     	;# 
  2951  0017                     	;# 
  2952  0018                     	;# 
  2953  0019                     	;# 
  2954  0019                     	;# 
  2955  001A                     	;# 
  2956  001B                     	;# 
  2957  001C                     	;# 
  2958  001D                     	;# 
  2959  001E                     	;# 
  2960  001F                     	;# 
  2961  008C                     	;# 
  2962  008D                     	;# 
  2963  008E                     	;# 
  2964  0090                     	;# 
  2965  0091                     	;# 
  2966  0092                     	;# 
  2967  0093                     	;# 
  2968  0094                     	;# 
  2969  0097                     	;# 
  2970  009B                     	;# 
  2971  009B                     	;# 
  2972  009C                     	;# 
  2973  009D                     	;# 
  2974  009E                     	;# 
  2975  009F                     	;# 
  2976  010C                     	;# 
  2977  010D                     	;# 
  2978  010E                     	;# 
  2979  0111                     	;# 
  2980  0112                     	;# 
  2981  0113                     	;# 
  2982  0114                     	;# 
  2983  0115                     	;# 
  2984  0116                     	;# 
  2985  0117                     	;# 
  2986  0118                     	;# 
  2987  0119                     	;# 
  2988  018C                     	;# 
  2989  018D                     	;# 
  2990  018E                     	;# 
  2991  0197                     	;# 
  2992  0199                     	;# 
  2993  0199                     	;# 
  2994  0199                     	;# 
  2995  019A                     	;# 
  2996  019A                     	;# 
  2997  019A                     	;# 
  2998  019B                     	;# 
  2999  019B                     	;# 
  3000  019B                     	;# 
  3001  019B                     	;# 
  3002  019B                     	;# 
  3003  019C                     	;# 
  3004  019C                     	;# 
  3005  019C                     	;# 
  3006  019D                     	;# 
  3007  019D                     	;# 
  3008  019D                     	;# 
  3009  019E                     	;# 
  3010  019E                     	;# 
  3011  019E                     	;# 
  3012  019F                     	;# 
  3013  019F                     	;# 
  3014  019F                     	;# 
  3015  019F                     	;# 
  3016  019F                     	;# 
  3017  020C                     	;# 
  3018  020D                     	;# 
  3019  020E                     	;# 
  3020  0211                     	;# 
  3021  0211                     	;# 
  3022  0212                     	;# 
  3023  0212                     	;# 
  3024  0213                     	;# 
  3025  0213                     	;# 
  3026  0214                     	;# 
  3027  0214                     	;# 
  3028  0215                     	;# 
  3029  0215                     	;# 
  3030  0215                     	;# 
  3031  0215                     	;# 
  3032  0216                     	;# 
  3033  0216                     	;# 
  3034  0217                     	;# 
  3035  0217                     	;# 
  3036  0219                     	;# 
  3037  021A                     	;# 
  3038  021B                     	;# 
  3039  021C                     	;# 
  3040  021D                     	;# 
  3041  021D                     	;# 
  3042  021E                     	;# 
  3043  021F                     	;# 
  3044  028C                     	;# 
  3045  028D                     	;# 
  3046  028E                     	;# 
  3047  0291                     	;# 
  3048  0291                     	;# 
  3049  0292                     	;# 
  3050  0293                     	;# 
  3051  0294                     	;# 
  3052  0295                     	;# 
  3053  0295                     	;# 
  3054  0296                     	;# 
  3055  0297                     	;# 
  3056  0298                     	;# 
  3057  029F                     	;# 
  3058  030C                     	;# 
  3059  030D                     	;# 
  3060  030E                     	;# 
  3061  0311                     	;# 
  3062  0311                     	;# 
  3063  0312                     	;# 
  3064  0313                     	;# 
  3065  0314                     	;# 
  3066  0315                     	;# 
  3067  0315                     	;# 
  3068  0316                     	;# 
  3069  0317                     	;# 
  3070  0318                     	;# 
  3071  038C                     	;# 
  3072  038D                     	;# 
  3073  038E                     	;# 
  3074  0391                     	;# 
  3075  0392                     	;# 
  3076  0393                     	;# 
  3077  0394                     	;# 
  3078  0395                     	;# 
  3079  0396                     	;# 
  3080  0397                     	;# 
  3081  0398                     	;# 
  3082  0399                     	;# 
  3083  039A                     	;# 
  3084  039C                     	;# 
  3085  039D                     	;# 
  3086  039E                     	;# 
  3087  039F                     	;# 
  3088  0411                     	;# 
  3089  0411                     	;# 
  3090  0412                     	;# 
  3091  0413                     	;# 
  3092  0414                     	;# 
  3093  0415                     	;# 
  3094  0416                     	;# 
  3095  0417                     	;# 
  3096  0418                     	;# 
  3097  0418                     	;# 
  3098  0419                     	;# 
  3099  041A                     	;# 
  3100  041B                     	;# 
  3101  041C                     	;# 
  3102  041D                     	;# 
  3103  041E                     	;# 
  3104  041F                     	;# 
  3105  0498                     	;# 
  3106  0498                     	;# 
  3107  0499                     	;# 
  3108  049A                     	;# 
  3109  049B                     	;# 
  3110  049B                     	;# 
  3111  049C                     	;# 
  3112  049D                     	;# 
  3113  049E                     	;# 
  3114  049F                     	;# 
  3115  0617                     	;# 
  3116  0618                     	;# 
  3117  0619                     	;# 
  3118  0619                     	;# 
  3119  061A                     	;# 
  3120  061B                     	;# 
  3121  061C                     	;# 
  3122  061C                     	;# 
  3123  061F                     	;# 
  3124  0691                     	;# 
  3125  0692                     	;# 
  3126  0693                     	;# 
  3127  0694                     	;# 
  3128  0695                     	;# 
  3129  0696                     	;# 
  3130  0697                     	;# 
  3131  0698                     	;# 
  3132  0699                     	;# 
  3133  0711                     	;# 
  3134  0712                     	;# 
  3135  0713                     	;# 
  3136  0714                     	;# 
  3137  0715                     	;# 
  3138  0716                     	;# 
  3139  0717                     	;# 
  3140  0718                     	;# 
  3141  0719                     	;# 
  3142  0891                     	;# 
  3143  0891                     	;# 
  3144  0891                     	;# 
  3145  0891                     	;# 
  3146  0891                     	;# 
  3147  0891                     	;# 
  3148  0892                     	;# 
  3149  0892                     	;# 
  3150  0892                     	;# 
  3151  0893                     	;# 
  3152  0893                     	;# 
  3153  0893                     	;# 
  3154  0893                     	;# 
  3155  0893                     	;# 
  3156  0893                     	;# 
  3157  0894                     	;# 
  3158  0894                     	;# 
  3159  0894                     	;# 
  3160  0895                     	;# 
  3161  0895                     	;# 
  3162  0895                     	;# 
  3163  0896                     	;# 
  3164  0896                     	;# 
  3165  0896                     	;# 
  3166  089B                     	;# 
  3167  0911                     	;# 
  3168  0912                     	;# 
  3169  0913                     	;# 
  3170  0914                     	;# 
  3171  0915                     	;# 
  3172  0916                     	;# 
  3173  0918                     	;# 
  3174  0919                     	;# 
  3175  091A                     	;# 
  3176  091B                     	;# 
  3177  091C                     	;# 
  3178  091D                     	;# 
  3179  091E                     	;# 
  3180  091F                     	;# 
  3181  0E0F                     	;# 
  3182  0E10                     	;# 
  3183  0E11                     	;# 
  3184  0E12                     	;# 
  3185  0E13                     	;# 
  3186  0E14                     	;# 
  3187  0E15                     	;# 
  3188  0E16                     	;# 
  3189  0E17                     	;# 
  3190  0E18                     	;# 
  3191  0E19                     	;# 
  3192  0E1A                     	;# 
  3193  0E1B                     	;# 
  3194  0E1C                     	;# 
  3195  0E1D                     	;# 
  3196  0E1E                     	;# 
  3197  0E1F                     	;# 
  3198  0E20                     	;# 
  3199  0E21                     	;# 
  3200  0E22                     	;# 
  3201  0E24                     	;# 
  3202  0E25                     	;# 
  3203  0E28                     	;# 
  3204  0E29                     	;# 
  3205  0E2A                     	;# 
  3206  0E2B                     	;# 
  3207  0E2C                     	;# 
  3208  0E2D                     	;# 
  3209  0E2E                     	;# 
  3210  0E2F                     	;# 
  3211  0E90                     	;# 
  3212  0E91                     	;# 
  3213  0E92                     	;# 
  3214  0E94                     	;# 
  3215  0E95                     	;# 
  3216  0E9C                     	;# 
  3217  0E9D                     	;# 
  3218  0E9E                     	;# 
  3219  0E9F                     	;# 
  3220  0EA0                     	;# 
  3221  0EA1                     	;# 
  3222  0EA2                     	;# 
  3223  0EA3                     	;# 
  3224  0EA4                     	;# 
  3225  0EA5                     	;# 
  3226  0EA6                     	;# 
  3227  0EA7                     	;# 
  3228  0F0F                     	;# 
  3229  0F10                     	;# 
  3230  0F11                     	;# 
  3231  0F12                     	;# 
  3232  0F13                     	;# 
  3233  0F14                     	;# 
  3234  0F15                     	;# 
  3235  0F16                     	;# 
  3236  0F17                     	;# 
  3237  0F18                     	;# 
  3238  0F19                     	;# 
  3239  0F1A                     	;# 
  3240  0F1B                     	;# 
  3241  0F1C                     	;# 
  3242  0F1D                     	;# 
  3243  0F1E                     	;# 
  3244  0F1F                     	;# 
  3245  0F20                     	;# 
  3246  0F21                     	;# 
  3247  0F22                     	;# 
  3248  0F23                     	;# 
  3249  0F24                     	;# 
  3250  0F25                     	;# 
  3251  0F26                     	;# 
  3252  0F27                     	;# 
  3253  0F28                     	;# 
  3254  0F29                     	;# 
  3255  0F2A                     	;# 
  3256  0F2B                     	;# 
  3257  0F2C                     	;# 
  3258  0F2D                     	;# 
  3259  0F2E                     	;# 
  3260  0F2F                     	;# 
  3261  0F30                     	;# 
  3262  0F31                     	;# 
  3263  0F32                     	;# 
  3264  0F33                     	;# 
  3265  0F34                     	;# 
  3266  0F35                     	;# 
  3267  0F36                     	;# 
  3268  0F37                     	;# 
  3269  0FE4                     	;# 
  3270  0FE5                     	;# 
  3271  0FE6                     	;# 
  3272  0FE7                     	;# 
  3273  0FE8                     	;# 
  3274  0FE9                     	;# 
  3275  0FEA                     	;# 
  3276  0FEB                     	;# 
  3277  0FED                     	;# 
  3278  0FEE                     	;# 
  3279  0FEF                     	;# 
  3280  0000                     	;# 
  3281  0001                     	;# 
  3282  0002                     	;# 
  3283  0003                     	;# 
  3284  0004                     	;# 
  3285  0005                     	;# 
  3286  0006                     	;# 
  3287  0007                     	;# 
  3288  0008                     	;# 
  3289  0009                     	;# 
  3290  000A                     	;# 
  3291  000B                     	;# 
  3292  000C                     	;# 
  3293  000D                     	;# 
  3294  000E                     	;# 
  3295  0010                     	;# 
  3296  0011                     	;# 
  3297  0012                     	;# 
  3298  0013                     	;# 
  3299  0014                     	;# 
  3300  0015                     	;# 
  3301  0015                     	;# 
  3302  0016                     	;# 
  3303  0016                     	;# 
  3304  0017                     	;# 
  3305  0018                     	;# 
  3306  0019                     	;# 
  3307  0019                     	;# 
  3308  001A                     	;# 
  3309  001B                     	;# 
  3310  001C                     	;# 
  3311  001D                     	;# 
  3312  001E                     	;# 
  3313  001F                     	;# 
  3314  008C                     	;# 
  3315  008D                     	;# 
  3316  008E                     	;# 
  3317  0090                     	;# 
  3318  0091                     	;# 
  3319  0092                     	;# 
  3320  0093                     	;# 
  3321  0094                     	;# 
  3322  0097                     	;# 
  3323  009B                     	;# 
  3324  009B                     	;# 
  3325  009C                     	;# 
  3326  009D                     	;# 
  3327  009E                     	;# 
  3328  009F                     	;# 
  3329  010C                     	;# 
  3330  010D                     	;# 
  3331  010E                     	;# 
  3332  0111                     	;# 
  3333  0112                     	;# 
  3334  0113                     	;# 
  3335  0114                     	;# 
  3336  0115                     	;# 
  3337  0116                     	;# 
  3338  0117                     	;# 
  3339  0118                     	;# 
  3340  0119                     	;# 
  3341  018C                     	;# 
  3342  018D                     	;# 
  3343  018E                     	;# 
  3344  0197                     	;# 
  3345  0199                     	;# 
  3346  0199                     	;# 
  3347  0199                     	;# 
  3348  019A                     	;# 
  3349  019A                     	;# 
  3350  019A                     	;# 
  3351  019B                     	;# 
  3352  019B                     	;# 
  3353  019B                     	;# 
  3354  019B                     	;# 
  3355  019B                     	;# 
  3356  019C                     	;# 
  3357  019C                     	;# 
  3358  019C                     	;# 
  3359  019D                     	;# 
  3360  019D                     	;# 
  3361  019D                     	;# 
  3362  019E                     	;# 
  3363  019E                     	;# 
  3364  019E                     	;# 
  3365  019F                     	;# 
  3366  019F                     	;# 
  3367  019F                     	;# 
  3368  019F                     	;# 
  3369  019F                     	;# 
  3370  020C                     	;# 
  3371  020D                     	;# 
  3372  020E                     	;# 
  3373  0211                     	;# 
  3374  0211                     	;# 
  3375  0212                     	;# 
  3376  0212                     	;# 
  3377  0213                     	;# 
  3378  0213                     	;# 
  3379  0214                     	;# 
  3380  0214                     	;# 
  3381  0215                     	;# 
  3382  0215                     	;# 
  3383  0215                     	;# 
  3384  0215                     	;# 
  3385  0216                     	;# 
  3386  0216                     	;# 
  3387  0217                     	;# 
  3388  0217                     	;# 
  3389  0219                     	;# 
  3390  021A                     	;# 
  3391  021B                     	;# 
  3392  021C                     	;# 
  3393  021D                     	;# 
  3394  021D                     	;# 
  3395  021E                     	;# 
  3396  021F                     	;# 
  3397  028C                     	;# 
  3398  028D                     	;# 
  3399  028E                     	;# 
  3400  0291                     	;# 
  3401  0291                     	;# 
  3402  0292                     	;# 
  3403  0293                     	;# 
  3404  0294                     	;# 
  3405  0295                     	;# 
  3406  0295                     	;# 
  3407  0296                     	;# 
  3408  0297                     	;# 
  3409  0298                     	;# 
  3410  029F                     	;# 
  3411  030C                     	;# 
  3412  030D                     	;# 
  3413  030E                     	;# 
  3414  0311                     	;# 
  3415  0311                     	;# 
  3416  0312                     	;# 
  3417  0313                     	;# 
  3418  0314                     	;# 
  3419  0315                     	;# 
  3420  0315                     	;# 
  3421  0316                     	;# 
  3422  0317                     	;# 
  3423  0318                     	;# 
  3424  038C                     	;# 
  3425  038D                     	;# 
  3426  038E                     	;# 
  3427  0391                     	;# 
  3428  0392                     	;# 
  3429  0393                     	;# 
  3430  0394                     	;# 
  3431  0395                     	;# 
  3432  0396                     	;# 
  3433  0397                     	;# 
  3434  0398                     	;# 
  3435  0399                     	;# 
  3436  039A                     	;# 
  3437  039C                     	;# 
  3438  039D                     	;# 
  3439  039E                     	;# 
  3440  039F                     	;# 
  3441  0411                     	;# 
  3442  0411                     	;# 
  3443  0412                     	;# 
  3444  0413                     	;# 
  3445  0414                     	;# 
  3446  0415                     	;# 
  3447  0416                     	;# 
  3448  0417                     	;# 
  3449  0418                     	;# 
  3450  0418                     	;# 
  3451  0419                     	;# 
  3452  041A                     	;# 
  3453  041B                     	;# 
  3454  041C                     	;# 
  3455  041D                     	;# 
  3456  041E                     	;# 
  3457  041F                     	;# 
  3458  0498                     	;# 
  3459  0498                     	;# 
  3460  0499                     	;# 
  3461  049A                     	;# 
  3462  049B                     	;# 
  3463  049B                     	;# 
  3464  049C                     	;# 
  3465  049D                     	;# 
  3466  049E                     	;# 
  3467  049F                     	;# 
  3468  0617                     	;# 
  3469  0618                     	;# 
  3470  0619                     	;# 
  3471  0619                     	;# 
  3472  061A                     	;# 
  3473  061B                     	;# 
  3474  061C                     	;# 
  3475  061C                     	;# 
  3476  061F                     	;# 
  3477  0691                     	;# 
  3478  0692                     	;# 
  3479  0693                     	;# 
  3480  0694                     	;# 
  3481  0695                     	;# 
  3482  0696                     	;# 
  3483  0697                     	;# 
  3484  0698                     	;# 
  3485  0699                     	;# 
  3486  0711                     	;# 
  3487  0712                     	;# 
  3488  0713                     	;# 
  3489  0714                     	;# 
  3490  0715                     	;# 
  3491  0716                     	;# 
  3492  0717                     	;# 
  3493  0718                     	;# 
  3494  0719                     	;# 
  3495  0891                     	;# 
  3496  0891                     	;# 
  3497  0891                     	;# 
  3498  0891                     	;# 
  3499  0891                     	;# 
  3500  0891                     	;# 
  3501  0892                     	;# 
  3502  0892                     	;# 
  3503  0892                     	;# 
  3504  0893                     	;# 
  3505  0893                     	;# 
  3506  0893                     	;# 
  3507  0893                     	;# 
  3508  0893                     	;# 
  3509  0893                     	;# 
  3510  0894                     	;# 
  3511  0894                     	;# 
  3512  0894                     	;# 
  3513  0895                     	;# 
  3514  0895                     	;# 
  3515  0895                     	;# 
  3516  0896                     	;# 
  3517  0896                     	;# 
  3518  0896                     	;# 
  3519  089B                     	;# 
  3520  0911                     	;# 
  3521  0912                     	;# 
  3522  0913                     	;# 
  3523  0914                     	;# 
  3524  0915                     	;# 
  3525  0916                     	;# 
  3526  0918                     	;# 
  3527  0919                     	;# 
  3528  091A                     	;# 
  3529  091B                     	;# 
  3530  091C                     	;# 
  3531  091D                     	;# 
  3532  091E                     	;# 
  3533  091F                     	;# 
  3534  0E0F                     	;# 
  3535  0E10                     	;# 
  3536  0E11                     	;# 
  3537  0E12                     	;# 
  3538  0E13                     	;# 
  3539  0E14                     	;# 
  3540  0E15                     	;# 
  3541  0E16                     	;# 
  3542  0E17                     	;# 
  3543  0E18                     	;# 
  3544  0E19                     	;# 
  3545  0E1A                     	;# 
  3546  0E1B                     	;# 
  3547  0E1C                     	;# 
  3548  0E1D                     	;# 
  3549  0E1E                     	;# 
  3550  0E1F                     	;# 
  3551  0E20                     	;# 
  3552  0E21                     	;# 
  3553  0E22                     	;# 
  3554  0E24                     	;# 
  3555  0E25                     	;# 
  3556  0E28                     	;# 
  3557  0E29                     	;# 
  3558  0E2A                     	;# 
  3559  0E2B                     	;# 
  3560  0E2C                     	;# 
  3561  0E2D                     	;# 
  3562  0E2E                     	;# 
  3563  0E2F                     	;# 
  3564  0E90                     	;# 
  3565  0E91                     	;# 
  3566  0E92                     	;# 
  3567  0E94                     	;# 
  3568  0E95                     	;# 
  3569  0E9C                     	;# 
  3570  0E9D                     	;# 
  3571  0E9E                     	;# 
  3572  0E9F                     	;# 
  3573  0EA0                     	;# 
  3574  0EA1                     	;# 
  3575  0EA2                     	;# 
  3576  0EA3                     	;# 
  3577  0EA4                     	;# 
  3578  0EA5                     	;# 
  3579  0EA6                     	;# 
  3580  0EA7                     	;# 
  3581  0F0F                     	;# 
  3582  0F10                     	;# 
  3583  0F11                     	;# 
  3584  0F12                     	;# 
  3585  0F13                     	;# 
  3586  0F14                     	;# 
  3587  0F15                     	;# 
  3588  0F16                     	;# 
  3589  0F17                     	;# 
  3590  0F18                     	;# 
  3591  0F19                     	;# 
  3592  0F1A                     	;# 
  3593  0F1B                     	;# 
  3594  0F1C                     	;# 
  3595  0F1D                     	;# 
  3596  0F1E                     	;# 
  3597  0F1F                     	;# 
  3598  0F20                     	;# 
  3599  0F21                     	;# 
  3600  0F22                     	;# 
  3601  0F23                     	;# 
  3602  0F24                     	;# 
  3603  0F25                     	;# 
  3604  0F26                     	;# 
  3605  0F27                     	;# 
  3606  0F28                     	;# 
  3607  0F29                     	;# 
  3608  0F2A                     	;# 
  3609  0F2B                     	;# 
  3610  0F2C                     	;# 
  3611  0F2D                     	;# 
  3612  0F2E                     	;# 
  3613  0F2F                     	;# 
  3614  0F30                     	;# 
  3615  0F31                     	;# 
  3616  0F32                     	;# 
  3617  0F33                     	;# 
  3618  0F34                     	;# 
  3619  0F35                     	;# 
  3620  0F36                     	;# 
  3621  0F37                     	;# 
  3622  0FE4                     	;# 
  3623  0FE5                     	;# 
  3624  0FE6                     	;# 
  3625  0FE7                     	;# 
  3626  0FE8                     	;# 
  3627  0FE9                     	;# 
  3628  0FEA                     	;# 
  3629  0FEB                     	;# 
  3630  0FED                     	;# 
  3631  0FEE                     	;# 
  3632  0FEF                     	;# 
  3633                           
  3634                           	psect	eeprom_data
  3635  0000  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3636  0008  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3637  0010  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3638  0018  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3639  0020  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3640  0028  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3641  0030  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3642  0038  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3643  0040  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3644  0048  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3645  0050  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3646  0058  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3647  0060  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3648  0068  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3649  0070  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3650  0078  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3651  0080  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3652  0088  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3653  0090  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3654  0098  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3655  00A0  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3656  00A8  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3657  00B0  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3658  00B8  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3659  00C0  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3660  00C8  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3661  00D0  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3662  00D8  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3663  00E0  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3664  00E8  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3665  00F0  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3666  00F8  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  3667  0000                     	;# 
  3668  0001                     	;# 
  3669  0002                     	;# 
  3670  0003                     	;# 
  3671  0004                     	;# 
  3672  0005                     	;# 
  3673  0006                     	;# 
  3674  0007                     	;# 
  3675  0008                     	;# 
  3676  0009                     	;# 
  3677  000A                     	;# 
  3678  000B                     	;# 
  3679  000C                     	;# 
  3680  000D                     	;# 
  3681  000E                     	;# 
  3682  0010                     	;# 
  3683  0011                     	;# 
  3684  0012                     	;# 
  3685  0013                     	;# 
  3686  0014                     	;# 
  3687  0015                     	;# 
  3688  0015                     	;# 
  3689  0016                     	;# 
  3690  0016                     	;# 
  3691  0017                     	;# 
  3692  0018                     	;# 
  3693  0019                     	;# 
  3694  0019                     	;# 
  3695  001A                     	;# 
  3696  001B                     	;# 
  3697  001C                     	;# 
  3698  001D                     	;# 
  3699  001E                     	;# 
  3700  001F                     	;# 
  3701  008C                     	;# 
  3702  008D                     	;# 
  3703  008E                     	;# 
  3704  0090                     	;# 
  3705  0091                     	;# 
  3706  0092                     	;# 
  3707  0093                     	;# 
  3708  0094                     	;# 
  3709  0097                     	;# 
  3710  009B                     	;# 
  3711  009B                     	;# 
  3712  009C                     	;# 
  3713  009D                     	;# 
  3714  009E                     	;# 
  3715  009F                     	;# 
  3716  010C                     	;# 
  3717  010D                     	;# 
  3718  010E                     	;# 
  3719  0111                     	;# 
  3720  0112                     	;# 
  3721  0113                     	;# 
  3722  0114                     	;# 
  3723  0115                     	;# 
  3724  0116                     	;# 
  3725  0117                     	;# 
  3726  0118                     	;# 
  3727  0119                     	;# 
  3728  018C                     	;# 
  3729  018D                     	;# 
  3730  018E                     	;# 
  3731  0197                     	;# 
  3732  0199                     	;# 
  3733  0199                     	;# 
  3734  0199                     	;# 
  3735  019A                     	;# 
  3736  019A                     	;# 
  3737  019A                     	;# 
  3738  019B                     	;# 
  3739  019B                     	;# 
  3740  019B                     	;# 
  3741  019B                     	;# 
  3742  019B                     	;# 
  3743  019C                     	;# 
  3744  019C                     	;# 
  3745  019C                     	;# 
  3746  019D                     	;# 
  3747  019D                     	;# 
  3748  019D                     	;# 
  3749  019E                     	;# 
  3750  019E                     	;# 
  3751  019E                     	;# 
  3752  019F                     	;# 
  3753  019F                     	;# 
  3754  019F                     	;# 
  3755  019F                     	;# 
  3756  019F                     	;# 
  3757  020C                     	;# 
  3758  020D                     	;# 
  3759  020E                     	;# 
  3760  0211                     	;# 
  3761  0211                     	;# 
  3762  0212                     	;# 
  3763  0212                     	;# 
  3764  0213                     	;# 
  3765  0213                     	;# 
  3766  0214                     	;# 
  3767  0214                     	;# 
  3768  0215                     	;# 
  3769  0215                     	;# 
  3770  0215                     	;# 
  3771  0215                     	;# 
  3772  0216                     	;# 
  3773  0216                     	;# 
  3774  0217                     	;# 
  3775  0217                     	;# 
  3776  0219                     	;# 
  3777  021A                     	;# 
  3778  021B                     	;# 
  3779  021C                     	;# 
  3780  021D                     	;# 
  3781  021D                     	;# 
  3782  021E                     	;# 
  3783  021F                     	;# 
  3784  028C                     	;# 
  3785  028D                     	;# 
  3786  028E                     	;# 
  3787  0291                     	;# 
  3788  0291                     	;# 
  3789  0292                     	;# 
  3790  0293                     	;# 
  3791  0294                     	;# 
  3792  0295                     	;# 
  3793  0295                     	;# 
  3794  0296                     	;# 
  3795  0297                     	;# 
  3796  0298                     	;# 
  3797  029F                     	;# 
  3798  030C                     	;# 
  3799  030D                     	;# 
  3800  030E                     	;# 
  3801  0311                     	;# 
  3802  0311                     	;# 
  3803  0312                     	;# 
  3804  0313                     	;# 
  3805  0314                     	;# 
  3806  0315                     	;# 
  3807  0315                     	;# 
  3808  0316                     	;# 
  3809  0317                     	;# 
  3810  0318                     	;# 
  3811  038C                     	;# 
  3812  038D                     	;# 
  3813  038E                     	;# 
  3814  0391                     	;# 
  3815  0392                     	;# 
  3816  0393                     	;# 
  3817  0394                     	;# 
  3818  0395                     	;# 
  3819  0396                     	;# 
  3820  0397                     	;# 
  3821  0398                     	;# 
  3822  0399                     	;# 
  3823  039A                     	;# 
  3824  039C                     	;# 
  3825  039D                     	;# 
  3826  039E                     	;# 
  3827  039F                     	;# 
  3828  0411                     	;# 
  3829  0411                     	;# 
  3830  0412                     	;# 
  3831  0413                     	;# 
  3832  0414                     	;# 
  3833  0415                     	;# 
  3834  0416                     	;# 
  3835  0417                     	;# 
  3836  0418                     	;# 
  3837  0418                     	;# 
  3838  0419                     	;# 
  3839  041A                     	;# 
  3840  041B                     	;# 
  3841  041C                     	;# 
  3842  041D                     	;# 
  3843  041E                     	;# 
  3844  041F                     	;# 
  3845  0498                     	;# 
  3846  0498                     	;# 
  3847  0499                     	;# 
  3848  049A                     	;# 
  3849  049B                     	;# 
  3850  049B                     	;# 
  3851  049C                     	;# 
  3852  049D                     	;# 
  3853  049E                     	;# 
  3854  049F                     	;# 
  3855  0617                     	;# 
  3856  0618                     	;# 
  3857  0619                     	;# 
  3858  0619                     	;# 
  3859  061A                     	;# 
  3860  061B                     	;# 
  3861  061C                     	;# 
  3862  061C                     	;# 
  3863  061F                     	;# 
  3864  0691                     	;# 
  3865  0692                     	;# 
  3866  0693                     	;# 
  3867  0694                     	;# 
  3868  0695                     	;# 
  3869  0696                     	;# 
  3870  0697                     	;# 
  3871  0698                     	;# 
  3872  0699                     	;# 
  3873  0711                     	;# 
  3874  0712                     	;# 
  3875  0713                     	;# 
  3876  0714                     	;# 
  3877  0715                     	;# 
  3878  0716                     	;# 
  3879  0717                     	;# 
  3880  0718                     	;# 
  3881  0719                     	;# 
  3882  0891                     	;# 
  3883  0891                     	;# 
  3884  0891                     	;# 
  3885  0891                     	;# 
  3886  0891                     	;# 
  3887  0891                     	;# 
  3888  0892                     	;# 
  3889  0892                     	;# 
  3890  0892                     	;# 
  3891  0893                     	;# 
  3892  0893                     	;# 
  3893  0893                     	;# 
  3894  0893                     	;# 
  3895  0893                     	;# 
  3896  0893                     	;# 
  3897  0894                     	;# 
  3898  0894                     	;# 
  3899  0894                     	;# 
  3900  0895                     	;# 
  3901  0895                     	;# 
  3902  0895                     	;# 
  3903  0896                     	;# 
  3904  0896                     	;# 
  3905  0896                     	;# 
  3906  089B                     	;# 
  3907  0911                     	;# 
  3908  0912                     	;# 
  3909  0913                     	;# 
  3910  0914                     	;# 
  3911  0915                     	;# 
  3912  0916                     	;# 
  3913  0918                     	;# 
  3914  0919                     	;# 
  3915  091A                     	;# 
  3916  091B                     	;# 
  3917  091C                     	;# 
  3918  091D                     	;# 
  3919  091E                     	;# 
  3920  091F                     	;# 
  3921  0E0F                     	;# 
  3922  0E10                     	;# 
  3923  0E11                     	;# 
  3924  0E12                     	;# 
  3925  0E13                     	;# 
  3926  0E14                     	;# 
  3927  0E15                     	;# 
  3928  0E16                     	;# 
  3929  0E17                     	;# 
  3930  0E18                     	;# 
  3931  0E19                     	;# 
  3932  0E1A                     	;# 
  3933  0E1B                     	;# 
  3934  0E1C                     	;# 
  3935  0E1D                     	;# 
  3936  0E1E                     	;# 
  3937  0E1F                     	;# 
  3938  0E20                     	;# 
  3939  0E21                     	;# 
  3940  0E22                     	;# 
  3941  0E24                     	;# 
  3942  0E25                     	;# 
  3943  0E28                     	;# 
  3944  0E29                     	;# 
  3945  0E2A                     	;# 
  3946  0E2B                     	;# 
  3947  0E2C                     	;# 
  3948  0E2D                     	;# 
  3949  0E2E                     	;# 
  3950  0E2F                     	;# 
  3951  0E90                     	;# 
  3952  0E91                     	;# 
  3953  0E92                     	;# 
  3954  0E94                     	;# 
  3955  0E95                     	;# 
  3956  0E9C                     	;# 
  3957  0E9D                     	;# 
  3958  0E9E                     	;# 
  3959  0E9F                     	;# 
  3960  0EA0                     	;# 
  3961  0EA1                     	;# 
  3962  0EA2                     	;# 
  3963  0EA3                     	;# 
  3964  0EA4                     	;# 
  3965  0EA5                     	;# 
  3966  0EA6                     	;# 
  3967  0EA7                     	;# 
  3968  0F0F                     	;# 
  3969  0F10                     	;# 
  3970  0F11                     	;# 
  3971  0F12                     	;# 
  3972  0F13                     	;# 
  3973  0F14                     	;# 
  3974  0F15                     	;# 
  3975  0F16                     	;# 
  3976  0F17                     	;# 
  3977  0F18                     	;# 
  3978  0F19                     	;# 
  3979  0F1A                     	;# 
  3980  0F1B                     	;# 
  3981  0F1C                     	;# 
  3982  0F1D                     	;# 
  3983  0F1E                     	;# 
  3984  0F1F                     	;# 
  3985  0F20                     	;# 
  3986  0F21                     	;# 
  3987  0F22                     	;# 
  3988  0F23                     	;# 
  3989  0F24                     	;# 
  3990  0F25                     	;# 
  3991  0F26                     	;# 
  3992  0F27                     	;# 
  3993  0F28                     	;# 
  3994  0F29                     	;# 
  3995  0F2A                     	;# 
  3996  0F2B                     	;# 
  3997  0F2C                     	;# 
  3998  0F2D                     	;# 
  3999  0F2E                     	;# 
  4000  0F2F                     	;# 
  4001  0F30                     	;# 
  4002  0F31                     	;# 
  4003  0F32                     	;# 
  4004  0F33                     	;# 
  4005  0F34                     	;# 
  4006  0F35                     	;# 
  4007  0F36                     	;# 
  4008  0F37                     	;# 
  4009  0FE4                     	;# 
  4010  0FE5                     	;# 
  4011  0FE6                     	;# 
  4012  0FE7                     	;# 
  4013  0FE8                     	;# 
  4014  0FE9                     	;# 
  4015  0FEA                     	;# 
  4016  0FEB                     	;# 
  4017  0FED                     	;# 
  4018  0FEE                     	;# 
  4019  0FEF                     	;_spi1_buffer_data
  4020                           
  4021                           	psect	idataBANK0
  4022  0684                     __pidataBANK0:	
  4023                           
  4024                           ;initializer for _st_dataLength
  4025  0684  34FF               	retlw	255
  4026  0685  34FF               	retlw	255
  4027                           
  4028                           	psect	stringtext1
  4029  0686                     __pstringtext1:	
  4030  0686                     _MACHINE_ID:	
  4031  0686  3401               	retlw	1
  4032  0687  3400               	retlw	0
  4033  0688                     __end_of_MACHINE_ID:	
  4034                           
  4035                           	psect	stringtext2
  4036  0688                     __pstringtext2:	
  4037  0688                     _VENDER_ID:	
  4038  0688  3401               	retlw	1
  4039  0689  3400               	retlw	0
  4040  068A                     __end_of_VENDER_ID:	
  4041                           
  4042                           	psect	bitnvCOMMON
  4043  03C0                     __pbitnvCOMMON:	
  4044  03C0                     _isEndPointTrig:	
  4045  03C0                     	ds	1
  4046  03C1                     _isMycargo:	
  4047  03C1                     	ds	1
  4048  000E                     _PORTC	set	14
  4049  000D                     _PORTB	set	13
  4050  000C                     _PORTA	set	12
  4051  000B                     _INTCONbits	set	11
  4052  0010                     _PIR0bits	set	16
  4053  0012                     _PIR2bits	set	18
  4054  0011                     _PIR1bits	set	17
  4055  008E                     _TRISC	set	142
  4056  008D                     _TRISB	set	141
  4057  008C                     _TRISA	set	140
  4058  0092                     _PIE2bits	set	146
  4059  0091                     _PIE1bits	set	145
  4060  008E                     _TRISCbits	set	142
  4061  008D                     _TRISBbits	set	141
  4062  0090                     _PIE0bits	set	144
  4063  010C                     _LATAbits	set	268
  4064  018E                     _ANSELC	set	398
  4065  018D                     _ANSELB	set	397
  4066  018C                     _ANSELA	set	396
  4067  021C                     _SSP2STATbits	set	540
  4068  021D                     _SSP2CON1bits	set	541
  4069  021F                     _SSP2CON3bits	set	543
  4070  0214                     _SSP1STATbits	set	532
  4071  0215                     _SSP1CON1bits	set	533
  4072  0217                     _SSP1CON3bits	set	535
  4073  020C                     _WPUA	set	524
  4074  020D                     _WPUB	set	525
  4075  020E                     _WPUC	set	526
  4076  0211                     _SSP1BUF	set	529
  4077  0219                     _SSP2BUF	set	537
  4078  0393                     _IOCAFbits	set	915
  4079  038C                     _INLVLAbits	set	908
  4080  038E                     _INLVLCbits	set	910
  4081  038D                     _INLVLBbits	set	909
  4082  091E                     _OSCTUNEbits	set	2334
  4083  091F                     _OSCFRQbits	set	2335
  4084  0E1F                     _SSP2SSPPSbits	set	3615
  4085  0E22                     _SSP1SSPPSbits	set	3618
  4086  0E9F                     _RB7PPS	set	3743
  4087  0E92                     _RA2PPS	set	3730
  4088  0EA2                     _RC2PPS	set	3746
  4089                           
  4090                           ; #config settings
  4091  0000                     
  4092                           	psect	cinit
  4093  005A                     start_initialization:	
  4094  005A                     __initialization:		;BIGRAM
  4095                           
  4096                           ; Initialize objects allocated to BANK0
  4097  005A  3186  2684  3180   	fcall	__pidataBANK0	;fetch initializer
  4098  005D  00EE               	movwf	__pdataBANK0& (0+127)
  4099  005E  3186  2685  3180   	fcall	__pidataBANK0+1	;fetch initializer
  4100  0061  00EF               	movwf	(__pdataBANK0+1)& (0+127)
  4101                           
  4102                           ; Clear objects allocated to BIGRAM
  4103  0062  30F0               	movlw	low (0+9456)
  4104  0063  0084               	movwf	4
  4105  0064  3024               	movlw	high (0+9456)
  4106  0065  0085               	movwf	5
  4107  0066  3000               	movlw	0
  4108  0067  00FE               	movwf	btemp
  4109  0068  3003               	movlw	3
  4110  0069  00FF               	movwf	btemp+1
  4111  006A  3186  2647  3180   	fcall	clear_ram0
  4112                           
  4113                           ; Clear objects allocated to BITCOMMON
  4114  006D  01F7               	clrf	(__pbitbssCOMMON/(0+8))& (0+127)
  4115                           
  4116                           ; Clear objects allocated to COMMON
  4117  006E  01F9               	clrf	__pbssCOMMON& (0+127)
  4118                           
  4119                           ; Clear objects allocated to BANK0
  4120  006F  3020               	movlw	low __pbssBANK0
  4121  0070  0084               	movwf	4
  4122  0071  3000               	movlw	high __pbssBANK0
  4123  0072  0085               	movwf	5
  4124  0073  3036               	movlw	54
  4125  0074  00FE               	movwf	btemp
  4126  0075  3000               	movlw	0
  4127  0076  00FF               	movwf	btemp+1
  4128  0077  3186  2647  3180   	fcall	clear_ram0
  4129                           
  4130                           ; Clear objects allocated to BANK1
  4131  007A  30A0               	movlw	low __pbssBANK1
  4132  007B  0084               	movwf	4
  4133  007C  3000               	movlw	high __pbssBANK1
  4134  007D  0085               	movwf	5
  4135  007E  3045               	movlw	69
  4136  007F  00FE               	movwf	btemp
  4137  0080  3000               	movlw	0
  4138  0081  00FF               	movwf	btemp+1
  4139  0082  3186  2647         	fcall	clear_ram0
  4140  0084                     end_of_initialization:	
  4141                           ;End of C runtime variable initialization code
  4142                           
  4143  0084                     __end_of__initialization:	
  4144  0084  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  4145  0085  0020               	movlb	0
  4146  0086  3184  2C6A         	ljmp	_main	;jump to C main() function
  4147                           
  4148                           	psect	bitbssCOMMON
  4149  03B8                     __pbitbssCOMMON:	
  4150  03B8                     _isreadTrain:	
  4151  03B8                     	ds	1
  4152  03B9                     _workingcounta3:	
  4153  03B9                     	ds	1
  4154  03BA                     _workingcounta2:	
  4155  03BA                     	ds	1
  4156  03BB                     _workingcounta1:	
  4157  03BB                     	ds	1
  4158  03BC                     _workingcounta0:	
  4159  03BC                     	ds	1
  4160  03BD                     _isCalibrated:	
  4161  03BD                     	ds	1
  4162                           
  4163                           	psect	bssCOMMON
  4164  0079                     __pbssCOMMON:	
  4165  0079                     _spi1_Read_data:	
  4166  0079                     	ds	1
  4167                           
  4168                           	psect	bssBANK0
  4169  0020                     __pbssBANK0:	
  4170  0020                     _cargoData:	
  4171  0020                     	ds	16
  4172  0030                     _linkInfo:	
  4173  0030                     	ds	6
  4174  0036                     _startTrainBytes:	
  4175  0036                     	ds	4
  4176  003A                     _spi1_send_count:	
  4177  003A                     	ds	2
  4178  003C                     _cargoLengthnuf:	
  4179  003C                     	ds	2
  4180  003E                     _trainPos:	
  4181  003E                     	ds	2
  4182  0040                     _read_count2:	
  4183  0040                     	ds	2
  4184  0042                     _read_count1:	
  4185  0042                     	ds	2
  4186  0044                     _count1:	
  4187  0044                     	ds	2
  4188  0046                     _countabuf:	
  4189  0046                     	ds	2
  4190  0048                     _send_count1:	
  4191  0048                     	ds	2
  4192  004A                     _count2:	
  4193  004A                     	ds	2
  4194  004C                     _direction:	
  4195  004C                     	ds	2
  4196  004E                     _linkAngle:	
  4197  004E                     	ds	2
  4198  0050                     _spi2_Read_data:	
  4199  0050                     	ds	1
  4200  0051                     _send_data:	
  4201  0051                     	ds	1
  4202  0052                     _readNG:	
  4203  0052                     	ds	1
  4204  0053                     _readOK:	
  4205  0053                     	ds	1
  4206  0054                     _spi2_Send_data:	
  4207  0054                     	ds	1
  4208  0055                     _st_type:	
  4209  0055                     	ds	1
  4210                           
  4211                           	psect	dataBANK0
  4212  006E                     __pdataBANK0:	
  4213  006E                     _st_dataLength:	
  4214  006E                     	ds	2
  4215                           
  4216                           	psect	bssBANK1
  4217  00A0                     __pbssBANK1:	
  4218  00A0                     _cargo_index:	
  4219  00A0                     	ds	18
  4220  00B2                     _comu_types:	
  4221  00B2                     	ds	18
  4222  00C4                     _command:	
  4223  00C4                     	ds	18
  4224  00D6                     _calibdata:	
  4225  00D6                     	ds	9
  4226  00DF                     _cargoWorkingCount:	
  4227  00DF                     	ds	4
  4228  00E3                     _counta2:	
  4229  00E3                     	ds	2
  4230                           
  4231                           	psect	clrtext
  4232  0647                     clear_ram0:	
  4233                           ;	Called with FSR0 containing the base address, and
  4234                           ;	btemp/btemp+1 has the size to clear
  4235                           
  4236  0647  0064               	clrwdt	;clear the watchdog before getting into this loop
  4237  0648                     clrloop0:	
  4238  0648  0180               	clrf	0	;clear RAM location pointed to by FSR
  4239  0649  3101               	addfsr 0,1
  4240  064A  3001               	movlw	1
  4241  064B  02FE               	subwf	126,f
  4242  064C  3000               	movlw	0
  4243  064D  3BFF               	subwfb	127,f
  4244  064E  087F               	movf	127,w
  4245  064F  047E               	iorwf	126,w
  4246  0650  1903               	btfsc	3,2
  4247  0651  3400               	retlw	0	;all done for this memory range, return
  4248  0652  2E48               	goto	clrloop0	;have we reached the end yet?
  4249                           
  4250                           	psect	cstackBANK1
  4251  00E5                     __pcstackBANK1:	
  4252  00E5                     readCargo@buflong:	
  4253                           
  4254                           ; 4 bytes @ 0x0
  4255  00E5                     	ds	4
  4256  00E9                     readCargo@bufint:	
  4257                           
  4258                           ; 2 bytes @ 0x4
  4259  00E9                     	ds	2
  4260  00EB                     readCargo@spi1_Read_data:	
  4261                           
  4262                           ; 1 bytes @ 0x6
  4263  00EB                     	ds	1
  4264  00EC                     setComunicateMode@m_type:	
  4265                           
  4266                           ; 1 bytes @ 0x7
  4267  00EC                     	ds	1
  4268  00ED                     setComunicateMode@i:	
  4269                           
  4270                           ; 2 bytes @ 0x8
  4271  00ED                     	ds	2
  4272                           
  4273                           	psect	cstackCOMMON
  4274  0070                     __pcstackCOMMON:	
  4275  0070                     ?_isTrainSt:	
  4276  0070                     ?_isSPI1read:	
  4277                           ; 1 bit 
  4278                           
  4279  0070                     ?_isEndpoint:	
  4280                           ; 1 bit 
  4281                           
  4282  0070                     ?_clutchaction:	
  4283                           ; 1 bit 
  4284                           
  4285  0070                     ?_setComunicateMode:	
  4286                           ; 1 bit 
  4287                           
  4288  0070                     ?_isSPI2read:	
  4289                           ; 1 bit 
  4290                           
  4291  0070                     ?_setSPI1sendDataManual:	
  4292                           ; 1 bit 
  4293                           
  4294  0070                     ?_readCargo:	
  4295                           ; 1 bytes @ 0x0
  4296                           
  4297  0070                     ?_setSPI1sendData:	
  4298                           ; 1 bytes @ 0x0
  4299                           
  4300  0070                     ??_setSPI1sendData:	
  4301                           ; 1 bytes @ 0x0
  4302                           
  4303  0070                     ?_clear:	
  4304                           ; 1 bytes @ 0x0
  4305                           
  4306  0070                     ?_resetTrainData:	
  4307                           ; 1 bytes @ 0x0
  4308                           
  4309  0070                     ?_spi_init:	
  4310                           ; 1 bytes @ 0x0
  4311                           
  4312  0070                     ?_initCargo:	
  4313                           ; 1 bytes @ 0x0
  4314                           
  4315  0070                     ?_read_train:	
  4316                           ; 1 bytes @ 0x0
  4317                           
  4318  0070                     ?_setSPI2sendData:	
  4319                           ; 1 bytes @ 0x0
  4320                           
  4321  0070                     ?_restartCargo:	
  4322                           ; 1 bytes @ 0x0
  4323                           
  4324  0070                     ?_spi1_init:	
  4325                           ; 1 bytes @ 0x0
  4326                           
  4327  0070                     ?_spi2_init:	
  4328                           ; 1 bytes @ 0x0
  4329                           
  4330  0070                     ?_setCargo_Angle:	
  4331                           ; 1 bytes @ 0x0
  4332                           
  4333  0070                     ?_addAngle:	
  4334                           ; 1 bytes @ 0x0
  4335                           
  4336  0070                     ??_addAngle:	
  4337                           ; 1 bytes @ 0x0
  4338                           
  4339  0070                     ?_InitCalibrate:	
  4340                           ; 1 bytes @ 0x0
  4341                           
  4342  0070                     ?_Calibrate_download:	
  4343                           ; 1 bytes @ 0x0
  4344                           
  4345  0070                     ?_initComand:	
  4346                           ; 1 bytes @ 0x0
  4347                           
  4348  0070                     ?_initComu_types:	
  4349                           ; 1 bytes @ 0x0
  4350                           
  4351  0070                     ?_InterMSSP:	
  4352                           ; 1 bytes @ 0x0
  4353                           
  4354  0070                     ?_initbuffer:	
  4355                           ; 1 bytes @ 0x0
  4356                           
  4357  0070                     ?_init:	
  4358                           ; 1 bytes @ 0x0
  4359                           
  4360  0070                     ?_io_init:	
  4361                           ; 1 bytes @ 0x0
  4362                           
  4363  0070                     ?_initTrain:	
  4364                           ; 1 bytes @ 0x0
  4365                           
  4366  0070                     ?_main:	
  4367                           ; 1 bytes @ 0x0
  4368                           
  4369  0070                     ??_isSPI2read:	
  4370                           ; 1 bytes @ 0x0
  4371                           
  4372                           
  4373                           ; 1 bytes @ 0x0
  4374  0070                     	ds	2
  4375  0072                     ??_InterMSSP:	
  4376                           
  4377                           ; 1 bytes @ 0x2
  4378  0072                     	ds	5
  4379                           
  4380                           	psect	cstackBANK0
  4381  0056                     __pcstackBANK0:	
  4382  0056                     ??_setSPI1sendDataManual:	
  4383  0056                     ??_clear:	
  4384                           ; 1 bytes @ 0x0
  4385                           
  4386  0056                     ??_isTrainSt:	
  4387                           ; 1 bytes @ 0x0
  4388                           
  4389  0056                     ??_resetTrainData:	
  4390                           ; 1 bytes @ 0x0
  4391                           
  4392  0056                     ??_isSPI1read:	
  4393                           ; 1 bytes @ 0x0
  4394                           
  4395  0056                     ??_read_train:	
  4396                           ; 1 bytes @ 0x0
  4397                           
  4398  0056                     ??_setSPI2sendData:	
  4399                           ; 1 bytes @ 0x0
  4400                           
  4401  0056                     ??_restartCargo:	
  4402                           ; 1 bytes @ 0x0
  4403                           
  4404  0056                     ??_spi1_init:	
  4405                           ; 1 bytes @ 0x0
  4406                           
  4407  0056                     ??_spi2_init:	
  4408                           ; 1 bytes @ 0x0
  4409                           
  4410  0056                     ??_InitCalibrate:	
  4411                           ; 1 bytes @ 0x0
  4412                           
  4413  0056                     ??_initComand:	
  4414                           ; 1 bytes @ 0x0
  4415                           
  4416  0056                     ??_clutchaction:	
  4417                           ; 1 bytes @ 0x0
  4418                           
  4419  0056                     ??_initComu_types:	
  4420                           ; 1 bytes @ 0x0
  4421                           
  4422  0056                     ??_initbuffer:	
  4423                           ; 1 bytes @ 0x0
  4424                           
  4425  0056                     ??_io_init:	
  4426                           ; 1 bytes @ 0x0
  4427                           
  4428  0056                     ?_getCargoData:	
  4429                           ; 1 bytes @ 0x0
  4430                           
  4431  0056                     clutchaction@comannd:	
  4432                           ; 16 bytes @ 0x0
  4433                           
  4434  0056                     setSPI1sendDataManual@data:	
  4435                           ; 1 bytes @ 0x0
  4436                           
  4437                           
  4438                           ; 1 bytes @ 0x0
  4439  0056                     	ds	1
  4440  0057                     ??_isEndpoint:	
  4441  0057                     spi1_init@dummy:	
  4442                           ; 1 bytes @ 0x1
  4443                           
  4444  0057                     spi2_init@dummy:	
  4445                           ; 1 bytes @ 0x1
  4446                           
  4447                           
  4448                           ; 1 bytes @ 0x1
  4449  0057                     	ds	1
  4450  0058                     ??_spi_init:	
  4451  0058                     initbuffer@i:	
  4452                           ; 1 bytes @ 0x2
  4453                           
  4454  0058                     read_train@bufint:	
  4455                           ; 2 bytes @ 0x2
  4456                           
  4457                           
  4458                           ; 2 bytes @ 0x2
  4459  0058                     	ds	2
  4460  005A                     ??_init:	
  4461                           
  4462                           ; 1 bytes @ 0x4
  4463  005A                     	ds	2
  4464  005C                     isEndpoint@spi2data:	
  4465                           
  4466                           ; 1 bytes @ 0x6
  4467  005C                     	ds	1
  4468  005D                     ??_Calibrate_download:	
  4469                           
  4470                           ; 1 bytes @ 0x7
  4471  005D                     	ds	1
  4472  005E                     isTrainSt@buf:	
  4473                           
  4474                           ; 1 bytes @ 0x8
  4475  005E                     	ds	1
  4476  005F                     ??_initTrain:	
  4477                           
  4478                           ; 1 bytes @ 0x9
  4479  005F                     	ds	3
  4480  0062                     Calibrate_download@buflong:	
  4481                           
  4482                           ; 4 bytes @ 0xC
  4483  0062                     	ds	4
  4484  0066                     ??_getCargoData:	
  4485  0066                     Calibrate_download@buf:	
  4486                           ; 1 bytes @ 0x10
  4487                           
  4488                           
  4489                           ; 1 bytes @ 0x10
  4490  0066                     	ds	1
  4491  0067                     ??_initCargo:	
  4492  0067                     ??_setCargo_Angle:	
  4493                           ; 1 bytes @ 0x11
  4494                           
  4495  0067                     Calibrate_download@bufint:	
  4496                           ; 1 bytes @ 0x11
  4497                           
  4498                           
  4499                           ; 2 bytes @ 0x11
  4500  0067                     	ds	1
  4501  0068                     ??_readCargo:	
  4502                           
  4503                           ; 1 bytes @ 0x12
  4504  0068                     	ds	1
  4505  0069                     Calibrate_download@spi_Read_data:	
  4506                           
  4507                           ; 1 bytes @ 0x13
  4508  0069                     	ds	4
  4509  006D                     ??_setComunicateMode:	
  4510                           
  4511                           ; 1 bytes @ 0x17
  4512  006D                     	ds	1
  4513  006E                     ??_main:	
  4514                           
  4515                           	psect	maintext
  4516  046A                     __pmaintext:	
  4517                           ; 1 bytes @ 0x18
  4518 ;;
  4519 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  4520 ;;
  4521 ;; *************** function _main *****************
  4522 ;; Defined at:
  4523 ;;		line 162 in file "main.c"
  4524 ;; Parameters:    Size  Location     Type
  4525 ;;		None
  4526 ;; Auto vars:     Size  Location     Type
  4527 ;;		None
  4528 ;; Return value:  Size  Location     Type
  4529 ;;                  1    wreg      void 
  4530 ;; Registers used:
  4531 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4532 ;; Tracked objects:
  4533 ;;		On entry : B1F/0
  4534 ;;		On exit  : 0/0
  4535 ;;		Unchanged: 0/0
  4536 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4537 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4538 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4540 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4541 ;;Total ram usage:        0 bytes
  4542 ;; Hardware stack levels required when called:    7
  4543 ;; This function calls:
  4544 ;;		_InitCalibrate
  4545 ;;		_init
  4546 ;;		_initCargo
  4547 ;;		_initComand
  4548 ;;		_initComu_types
  4549 ;;		_initTrain
  4550 ;;		_io_init
  4551 ;;		_isSPI1read
  4552 ;;		_read_train
  4553 ;;		_setComunicateMode
  4554 ;;		_setSPI2sendData
  4555 ;;		_spi_init
  4556 ;; This function is called by:
  4557 ;;		Startup code after reset
  4558 ;; This function uses a non-reentrant model
  4559 ;;
  4560                           
  4561                           
  4562                           ;psect for function _main
  4563  046A                     _main:	
  4564                           
  4565                           ;main.c: 163: initComand();
  4566                           
  4567                           ;incstack = 0
  4568                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4569  046A  3182  22C4  3184   	fcall	_initComand
  4570                           
  4571                           ;main.c: 164: initComu_types();
  4572  046D  3182  2257  3184   	fcall	_initComu_types
  4573                           
  4574                           ;main.c: 165: InitCalibrate();
  4575  0470  3185  25D4  3184   	fcall	_InitCalibrate
  4576                           
  4577                           ;main.c: 166: init();
  4578  0473  3184  2498  3184   	fcall	_init
  4579                           
  4580                           ;main.c: 167: io_init();
  4581  0476  3186  2671  3184   	fcall	_io_init
  4582                           
  4583                           ;main.c: 168: spi_init();
  4584  0479  3186  265E  3184   	fcall	_spi_init
  4585                           
  4586                           ;main.c: 169: initCargo();
  4587  047C  3184  24ED  3184   	fcall	_initCargo
  4588                           
  4589                           ;main.c: 170: LATAbits.LATA0 = 1;
  4590  047F  0022               	movlb	2	; select bank2
  4591  0480  140C               	bsf	12,0	;volatile
  4592  0481                     l2911:	
  4593                           ;main.c: 171: while(1){
  4594                           
  4595                           
  4596                           ;main.c: 172: if(!isSPI1read()){
  4597  0481  3186  2620  3184   	fcall	_isSPI1read
  4598  0484  1803               	btfsc	3,0
  4599  0485  2C81               	goto	l2911
  4600                           
  4601                           ;main.c: 173: initTrain();
  4602  0486  3183  2331  3184   	fcall	_initTrain
  4603                           
  4604                           ;main.c: 174: if(isreadTrain){
  4605  0489  1C77               	btfss	_isreadTrain/(0+8),_isreadTrain& (0+7)
  4606  048A  2C91               	goto	l2919
  4607                           
  4608                           ;main.c: 175: setComunicateMode(st_type);
  4609  048B  0020               	movlb	0	; select bank0
  4610  048C  0855               	movf	_st_type,w
  4611  048D  3183  23BE  3184   	fcall	_setComunicateMode
  4612                           
  4613                           ;main.c: 176: }else{
  4614  0490  2C94               	goto	l2921
  4615  0491                     l2919:	
  4616                           
  4617                           ;main.c: 177: read_train();
  4618  0491  3183  2379  3184   	fcall	_read_train
  4619  0494                     l2921:	
  4620                           
  4621                           ;main.c: 178: }
  4622                           ;main.c: 179: setSPI2sendData();
  4623  0494  3185  2515  3184   	fcall	_setSPI2sendData
  4624  0497  2C81               	goto	l2911
  4625  0498                     __end_of_main:	
  4626                           ;main.c: 180: }
  4627                           ;main.c: 181: };
  4628                           ;main.c: 182: return;
  4629                           
  4630                           
  4631                           	psect	text1
  4632  065E                     __ptext1:	
  4633 ;; *************** function _spi_init *****************
  4634 ;; Defined at:
  4635 ;;		line 22 in file "spiControl.c"
  4636 ;; Parameters:    Size  Location     Type
  4637 ;;		None
  4638 ;; Auto vars:     Size  Location     Type
  4639 ;;		None
  4640 ;; Return value:  Size  Location     Type
  4641 ;;                  1    wreg      void 
  4642 ;; Registers used:
  4643 ;;		wreg, status,2, status,0, pclath, cstack
  4644 ;; Tracked objects:
  4645 ;;		On entry : 0/0
  4646 ;;		On exit  : 0/0
  4647 ;;		Unchanged: 0/0
  4648 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4649 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4650 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4651 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4652 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4653 ;;Total ram usage:        0 bytes
  4654 ;; Hardware stack levels used:    1
  4655 ;; Hardware stack levels required when called:    4
  4656 ;; This function calls:
  4657 ;;		_spi1_init
  4658 ;;		_spi2_init
  4659 ;; This function is called by:
  4660 ;;		_main
  4661 ;; This function uses a non-reentrant model
  4662 ;;
  4663                           
  4664                           
  4665                           ;psect for function _spi_init
  4666  065E                     _spi_init:	
  4667                           
  4668                           ;spiControl.c: 23: INTCONbits.PEIE = 0;
  4669                           
  4670                           ;incstack = 0
  4671                           ; Regs used in _spi_init: [wreg+status,2+status,0+pclath+cstack]
  4672  065E  130B               	bcf	11,6	;volatile
  4673                           
  4674                           ;spiControl.c: 24: INTCONbits.GIE = 0;
  4675  065F  138B               	bcf	11,7	;volatile
  4676                           
  4677                           ;spiControl.c: 25: spi1_init();
  4678  0660  3185  257D  3186   	fcall	_spi1_init
  4679                           
  4680                           ;spiControl.c: 26: spi2_init();
  4681  0663  3185  2539         	fcall	_spi2_init
  4682                           
  4683                           ;spiControl.c: 27: INTCONbits.PEIE = 1;
  4684  0665  170B               	bsf	11,6	;volatile
  4685                           
  4686                           ;spiControl.c: 28: INTCONbits.GIE = 1;
  4687  0666  178B               	bsf	11,7	;volatile
  4688  0667  0008               	return
  4689  0668                     __end_of_spi_init:	
  4690                           
  4691                           	psect	text2
  4692  0539                     __ptext2:	
  4693 ;; *************** function _spi2_init *****************
  4694 ;; Defined at:
  4695 ;;		line 49 in file "spiControl.c"
  4696 ;; Parameters:    Size  Location     Type
  4697 ;;		None
  4698 ;; Auto vars:     Size  Location     Type
  4699 ;;  dummy           1    1[BANK0 ] unsigned char 
  4700 ;; Return value:  Size  Location     Type
  4701 ;;                  1    wreg      void 
  4702 ;; Registers used:
  4703 ;;		wreg, status,2, status,0
  4704 ;; Tracked objects:
  4705 ;;		On entry : 0/0
  4706 ;;		On exit  : 0/0
  4707 ;;		Unchanged: 0/0
  4708 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4709 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4710 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4711 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4712 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4713 ;;Total ram usage:        2 bytes
  4714 ;; Hardware stack levels used:    1
  4715 ;; Hardware stack levels required when called:    3
  4716 ;; This function calls:
  4717 ;;		Nothing
  4718 ;; This function is called by:
  4719 ;;		_spi_init
  4720 ;; This function uses a non-reentrant model
  4721 ;;
  4722                           
  4723                           
  4724                           ;psect for function _spi2_init
  4725  0539                     _spi2_init:	
  4726                           
  4727                           ;spiControl.c: 50: unsigned char dummy;
  4728                           ;spiControl.c: 51: SSP2CON3bits.PCIE = 0;
  4729                           
  4730                           ;incstack = 0
  4731                           ; Regs used in _spi2_init: [wreg+status,2+status,0]
  4732  0539  0024               	movlb	4	; select bank4
  4733  053A  131F               	bcf	31,6	;volatile
  4734                           
  4735                           ;spiControl.c: 52: RA2PPS = 0b11011;
  4736  053B  301B               	movlw	27
  4737  053C  003D               	movlb	29	; select bank29
  4738  053D  0092               	movwf	18	;volatile
  4739                           
  4740                           ;spiControl.c: 53: RB7PPS = 0b11010;
  4741  053E  301A               	movlw	26
  4742  053F  009F               	movwf	31	;volatile
  4743                           
  4744                           ;spiControl.c: 54: SSP2SSPPSbits.SSP2SSPPS = 0b01111;
  4745  0540  003C               	movlb	28	; select bank28
  4746  0541  081F               	movf	31,w	;volatile
  4747  0542  39E0               	andlw	-32
  4748  0543  380F               	iorlw	15
  4749  0544  009F               	movwf	31	;volatile
  4750                           
  4751                           ;spiControl.c: 55: SSP2CON1bits.SSPOV = 1;
  4752  0545  0024               	movlb	4	; select bank4
  4753  0546  171D               	bsf	29,6	;volatile
  4754                           
  4755                           ;spiControl.c: 56: SSP2CON1bits.SSPEN = 1;
  4756  0547  169D               	bsf	29,5	;volatile
  4757                           
  4758                           ;spiControl.c: 57: SSP2CON1bits.SSPM = 0b0001;
  4759  0548  081D               	movf	29,w	;volatile
  4760  0549  39F0               	andlw	-16
  4761  054A  3801               	iorlw	1
  4762  054B  009D               	movwf	29	;volatile
  4763                           
  4764                           ;spiControl.c: 58: SSP2CON3bits.BOEN = 1;
  4765  054C  161F               	bsf	31,4	;volatile
  4766                           
  4767                           ;spiControl.c: 59: SSP2STATbits.SMP = 0;
  4768  054D  139C               	bcf	28,7	;volatile
  4769                           
  4770                           ;spiControl.c: 60: SSP2STATbits.CKE = 0;
  4771  054E  131C               	bcf	28,6	;volatile
  4772                           
  4773                           ;spiControl.c: 61: SSP2CON1bits.CKP = 0;
  4774  054F  121D               	bcf	29,4	;volatile
  4775                           
  4776                           ;spiControl.c: 62: PIE2bits.SSP2IE = 1;
  4777  0550  0021               	movlb	1	; select bank1
  4778  0551  1592               	bsf	18,3	;volatile
  4779                           
  4780                           ;spiControl.c: 63: PIR2bits.SSP2IF = 0;
  4781  0552  0020               	movlb	0	; select bank0
  4782  0553  1192               	bcf	18,3	;volatile
  4783                           
  4784                           ;spiControl.c: 64: dummy = SSP2BUF;
  4785  0554  0024               	movlb	4	; select bank4
  4786  0555  0819               	movf	25,w	;volatile
  4787  0556  0020               	movlb	0	; select bank0
  4788  0557  00D6               	movwf	??_spi2_init
  4789  0558  0856               	movf	??_spi2_init,w
  4790  0559  00D7               	movwf	spi2_init@dummy
  4791  055A  0008               	return
  4792  055B                     __end_of_spi2_init:	
  4793                           
  4794                           	psect	text3
  4795  057D                     __ptext3:	
  4796 ;; *************** function _spi1_init *****************
  4797 ;; Defined at:
  4798 ;;		line 33 in file "spiControl.c"
  4799 ;; Parameters:    Size  Location     Type
  4800 ;;		None
  4801 ;; Auto vars:     Size  Location     Type
  4802 ;;  dummy           1    1[BANK0 ] unsigned char 
  4803 ;; Return value:  Size  Location     Type
  4804 ;;                  1    wreg      void 
  4805 ;; Registers used:
  4806 ;;		wreg, status,2, status,0
  4807 ;; Tracked objects:
  4808 ;;		On entry : 0/0
  4809 ;;		On exit  : 0/0
  4810 ;;		Unchanged: 0/0
  4811 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4812 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4813 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4814 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4815 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4816 ;;Total ram usage:        2 bytes
  4817 ;; Hardware stack levels used:    1
  4818 ;; Hardware stack levels required when called:    3
  4819 ;; This function calls:
  4820 ;;		Nothing
  4821 ;; This function is called by:
  4822 ;;		_spi_init
  4823 ;; This function uses a non-reentrant model
  4824 ;;
  4825                           
  4826                           
  4827                           ;psect for function _spi1_init
  4828  057D                     _spi1_init:	
  4829                           
  4830                           ;spiControl.c: 34: unsigned char dummy;
  4831                           ;spiControl.c: 35: SSP1CON3bits.PCIE = 0;
  4832                           
  4833                           ;incstack = 0
  4834                           ; Regs used in _spi1_init: [wreg+status,2+status,0]
  4835  057D  0024               	movlb	4	; select bank4
  4836  057E  1317               	bcf	23,6	;volatile
  4837                           
  4838                           ;spiControl.c: 36: RC2PPS = 0b11001;
  4839  057F  3019               	movlw	25
  4840  0580  003D               	movlb	29	; select bank29
  4841  0581  00A2               	movwf	34	;volatile
  4842                           
  4843                           ;spiControl.c: 37: SSP1SSPPSbits.SSP1SSPPS = 0b10110;
  4844  0582  003C               	movlb	28	; select bank28
  4845  0583  0822               	movf	34,w	;volatile
  4846  0584  39E0               	andlw	-32
  4847  0585  3816               	iorlw	22
  4848  0586  00A2               	movwf	34	;volatile
  4849                           
  4850                           ;spiControl.c: 38: SSP1CON1bits.SSPOV = 1;
  4851  0587  0024               	movlb	4	; select bank4
  4852  0588  1715               	bsf	21,6	;volatile
  4853                           
  4854                           ;spiControl.c: 39: SSP1CON1bits.SSPEN = 1;
  4855  0589  1695               	bsf	21,5	;volatile
  4856                           
  4857                           ;spiControl.c: 40: SSP1CON1bits.SSPM = 0b0100;
  4858  058A  0815               	movf	21,w	;volatile
  4859  058B  39F0               	andlw	-16
  4860  058C  3804               	iorlw	4
  4861  058D  0095               	movwf	21	;volatile
  4862                           
  4863                           ;spiControl.c: 41: SSP1CON3bits.BOEN = 1;
  4864  058E  1617               	bsf	23,4	;volatile
  4865                           
  4866                           ;spiControl.c: 42: SSP1STATbits.SMP = 0;
  4867  058F  1394               	bcf	20,7	;volatile
  4868                           
  4869                           ;spiControl.c: 43: SSP1STATbits.CKE = 0;
  4870  0590  1314               	bcf	20,6	;volatile
  4871                           
  4872                           ;spiControl.c: 44: SSP1CON1bits.CKP = 0;
  4873  0591  1215               	bcf	21,4	;volatile
  4874                           
  4875                           ;spiControl.c: 45: PIE1bits.SSP1IE = 1;
  4876  0592  0021               	movlb	1	; select bank1
  4877  0593  1591               	bsf	17,3	;volatile
  4878                           
  4879                           ;spiControl.c: 46: PIR1bits.SSP1IF = 0;
  4880  0594  0020               	movlb	0	; select bank0
  4881  0595  1191               	bcf	17,3	;volatile
  4882                           
  4883                           ;spiControl.c: 47: dummy = SSP1BUF;
  4884  0596  0024               	movlb	4	; select bank4
  4885  0597  0811               	movf	17,w	;volatile
  4886  0598  0020               	movlb	0	; select bank0
  4887  0599  00D6               	movwf	??_spi1_init
  4888  059A  0856               	movf	??_spi1_init,w
  4889  059B  00D7               	movwf	spi1_init@dummy
  4890  059C  0008               	return
  4891  059D                     __end_of_spi1_init:	
  4892                           
  4893                           	psect	text4
  4894  0515                     __ptext4:	
  4895 ;; *************** function _setSPI2sendData *****************
  4896 ;; Defined at:
  4897 ;;		line 106 in file "spiControl.c"
  4898 ;; Parameters:    Size  Location     Type
  4899 ;;		None
  4900 ;; Auto vars:     Size  Location     Type
  4901 ;;		None
  4902 ;; Return value:  Size  Location     Type
  4903 ;;                  1    wreg      void 
  4904 ;; Registers used:
  4905 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4906 ;; Tracked objects:
  4907 ;;		On entry : 0/0
  4908 ;;		On exit  : 0/0
  4909 ;;		Unchanged: 0/0
  4910 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4911 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4912 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4913 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4914 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4915 ;;Total ram usage:        4 bytes
  4916 ;; Hardware stack levels used:    1
  4917 ;; Hardware stack levels required when called:    3
  4918 ;; This function calls:
  4919 ;;		Nothing
  4920 ;; This function is called by:
  4921 ;;		_main
  4922 ;; This function uses a non-reentrant model
  4923 ;;
  4924                           
  4925                           
  4926                           ;psect for function _setSPI2sendData
  4927  0515                     _setSPI2sendData:	
  4928                           
  4929                           ;spiControl.c: 107: if(linkInfo.endpoint == 0){
  4930                           
  4931                           ;incstack = 0
  4932                           ; Regs used in _setSPI2sendData: [wreg+fsr1l+fsr1h+status,2+status,0]
  4933  0515  0020               	movlb	0	; select bank0
  4934  0516  0835               	movf	_linkInfo+5,w
  4935  0517  1D03               	btfss	3,2
  4936  0518  2D1D               	goto	l2891
  4937                           
  4938                           ;spiControl.c: 108: SSP2BUF = spi2_Send_data;
  4939  0519  0854               	movf	_spi2_Send_data,w
  4940  051A  0024               	movlb	4	; select bank4
  4941  051B  0099               	movwf	25	;volatile
  4942                           
  4943                           ;spiControl.c: 109: }else{
  4944  051C  0008               	return
  4945  051D                     l2891:	
  4946                           
  4947                           ;spiControl.c: 110: spi2_buffer_data[count2] = spi2_Send_data;
  4948  051D  30F0               	movlw	240
  4949  051E  0020               	movlb	0	; select bank0
  4950  051F  00D6               	movwf	??_setSPI2sendData
  4951  0520  3026               	movlw	38
  4952  0521  00D7               	movwf	??_setSPI2sendData+1
  4953  0522  084A               	movf	_count2,w
  4954  0523  0756               	addwf	??_setSPI2sendData,w
  4955  0524  00D8               	movwf	??_setSPI2sendData+2
  4956  0525  084B               	movf	_count2+1,w
  4957  0526  3D57               	addwfc	??_setSPI2sendData+1,w
  4958  0527  00D9               	movwf	??_setSPI2sendData+3
  4959  0528  0858               	movf	??_setSPI2sendData+2,w
  4960  0529  0086               	movwf	6
  4961  052A  0859               	movf	??_setSPI2sendData+3,w
  4962  052B  0087               	movwf	7
  4963  052C  0854               	movf	_spi2_Send_data,w
  4964  052D  0081               	movwf	1
  4965                           
  4966                           ;spiControl.c: 111: count2++;
  4967  052E  3001               	movlw	1
  4968  052F  07CA               	addwf	_count2,f
  4969  0530  3000               	movlw	0
  4970  0531  3DCB               	addwfc	_count2+1,f
  4971                           
  4972                           ;spiControl.c: 112: if(count2 == 256){
  4973  0532  034B               	decf	_count2+1,w
  4974  0533  044A               	iorwf	_count2,w
  4975  0534  1D03               	btfss	3,2
  4976  0535  0008               	return
  4977                           
  4978                           ;spiControl.c: 113: count2 = 0;
  4979  0536  01CA               	clrf	_count2
  4980  0537  01CB               	clrf	_count2+1
  4981  0538  0008               	return
  4982  0539                     __end_of_setSPI2sendData:	
  4983                           
  4984                           	psect	text5
  4985  03BE                     __ptext5:	
  4986 ;; *************** function _setComunicateMode *****************
  4987 ;; Defined at:
  4988 ;;		line 38 in file "comu_type.c"
  4989 ;; Parameters:    Size  Location     Type
  4990 ;;  m_type          1    wreg     unsigned char 
  4991 ;; Auto vars:     Size  Location     Type
  4992 ;;  m_type          1    7[BANK1 ] unsigned char 
  4993 ;;  i               2    8[BANK1 ] int 
  4994 ;; Return value:  Size  Location     Type
  4995 ;;		None               void
  4996 ;; Registers used:
  4997 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4998 ;; Tracked objects:
  4999 ;;		On entry : 0/0
  5000 ;;		On exit  : 0/0
  5001 ;;		Unchanged: 0/0
  5002 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5003 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5004 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5005 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5006 ;;      Totals:         0       1       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5007 ;;Total ram usage:        4 bytes
  5008 ;; Hardware stack levels used:    1
  5009 ;; Hardware stack levels required when called:    6
  5010 ;; This function calls:
  5011 ;;		_Calibrate_download
  5012 ;;		_readCargo
  5013 ;; This function is called by:
  5014 ;;		_main
  5015 ;; This function uses a non-reentrant model
  5016 ;;
  5017                           
  5018                           
  5019                           ;psect for function _setComunicateMode
  5020  03BE                     _setComunicateMode:	
  5021                           
  5022                           ;incstack = 0
  5023                           ; Regs used in _setComunicateMode: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5024                           ;setComunicateMode@m_type stored from wreg
  5025  03BE  0021               	movlb	1	; select bank1
  5026  03BF  00EC               	movwf	setComunicateMode@m_type^(0+128)
  5027                           
  5028                           ;comu_type.c: 39: for(int i = 0; i < 18; i++){
  5029  03C0  01ED               	clrf	setComunicateMode@i^(0+128)
  5030  03C1  01EE               	clrf	(setComunicateMode@i+1)^(0+128)
  5031  03C2                     L1:	
  5032  03C2  086E               	movf	(setComunicateMode@i+1)^(0+128),w
  5033  03C3  3A80               	xorlw	128
  5034  03C4  0020               	movlb	0	; select bank0
  5035  03C5  00ED               	movwf	??_setComunicateMode
  5036  03C6  3080               	movlw	128
  5037  03C7  026D               	subwf	??_setComunicateMode,w
  5038  03C8  1D03               	skipz
  5039  03C9  2BCD               	goto	u1195
  5040  03CA  3012               	movlw	18
  5041  03CB  0021               	movlb	1	; select bank1
  5042  03CC  026D               	subwf	setComunicateMode@i^(0+128),w
  5043  03CD                     u1195:	
  5044  03CD  1803               	btfsc	3,0
  5045  03CE  0008               	return
  5046                           
  5047                           ;comu_type.c: 40: if(comu_types[i] == m_type){
  5048  03CF  0021               	movlb	1	; select bank1
  5049  03D0  086D               	movf	setComunicateMode@i^(0+128),w
  5050  03D1  3EB2               	addlw	(low (_comu_types| 0))& (0+255)
  5051  03D2  0086               	movwf	6
  5052  03D3  0187               	clrf	7
  5053  03D4  0801               	movf	1,w
  5054  03D5  066C               	xorwf	setComunicateMode@m_type^(0+128),w
  5055  03D6  1903               	btfsc	3,2
  5056  03D7  2BE1               	goto	l2737
  5057  03D8  2BF5               	goto	l2739
  5058  03D9                     l2727:	
  5059                           ;comu_type.c: 42: case 0:
  5060                           
  5061                           ;comu_type.c: 41: switch(i){
  5062                           
  5063                           
  5064                           ;comu_type.c: 43: Calibrate_download(spi1_Read_data);
  5065  03D9  0879               	movf	_spi1_Read_data,w
  5066  03DA  3181  2170         	fcall	_Calibrate_download
  5067                           
  5068                           ;comu_type.c: 44: return 1;
  5069                           ;	Return value of _setComunicateMode is never used
  5070  03DC  0008               	return
  5071  03DD                     l2731:	
  5072                           ;comu_type.c: 45: case 1:
  5073                           
  5074                           
  5075                           ;comu_type.c: 46: readCargo(spi1_Read_data);
  5076  03DD  0879               	movf	_spi1_Read_data,w
  5077  03DE  3180  2088         	fcall	_readCargo
  5078                           
  5079                           ;comu_type.c: 51: return 1;
  5080                           ;	Return value of _setComunicateMode is never used
  5081                           
  5082                           ;comu_type.c: 50: case 3:
  5083                           
  5084                           ;comu_type.c: 49: return 1;
  5085                           ;	Return value of _setComunicateMode is never used
  5086                           
  5087                           ;comu_type.c: 48: case 2:
  5088                           
  5089                           ;comu_type.c: 47: return 1;
  5090                           ;	Return value of _setComunicateMode is never used
  5091  03E0  0008               	return
  5092  03E1                     l2737:	
  5093                           ;comu_type.c: 52: }
  5094                           
  5095                           
  5096                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5097                           ; Switch size 1, requested type "space"
  5098                           ; Number of cases is 1, Range of values is 0 to 0
  5099                           ; switch strategies available:
  5100                           ; Name         Instructions Cycles
  5101                           ; simple_byte            4     3 (average)
  5102                           ; direct_byte            8     6 (fixed)
  5103                           ; jumptable            260     6 (fixed)
  5104                           ;	Chosen strategy is simple_byte
  5105  03E1  0021               	movlb	1	; select bank1
  5106  03E2  086E               	movf	(setComunicateMode@i+1)^(0+128),w
  5107  03E3  3A00               	xorlw	0	; case 0
  5108  03E4  1903               	skipnz
  5109  03E5  2BE7               	goto	l3043
  5110  03E6  2BF5               	goto	l2739
  5111  03E7                     l3043:	
  5112                           
  5113                           ; Switch size 1, requested type "space"
  5114                           ; Number of cases is 4, Range of values is 0 to 3
  5115                           ; switch strategies available:
  5116                           ; Name         Instructions Cycles
  5117                           ; simple_byte           13     7 (average)
  5118                           ; direct_byte           14     6 (fixed)
  5119                           ; jumptable            260     6 (fixed)
  5120                           ;	Chosen strategy is simple_byte
  5121  03E7  086D               	movf	setComunicateMode@i^(0+128),w
  5122  03E8  3A00               	xorlw	0	; case 0
  5123  03E9  1903               	skipnz
  5124  03EA  2BD9               	goto	l2727
  5125  03EB  3A01               	xorlw	1	; case 1
  5126  03EC  1903               	skipnz
  5127  03ED  2BDD               	goto	l2731
  5128  03EE  3A03               	xorlw	3	; case 2
  5129  03EF  1903               	skipnz
  5130  03F0  2BFB               	goto	l183
  5131  03F1  3A01               	xorlw	1	; case 3
  5132  03F2  1903               	skipnz
  5133  03F3  2BFB               	goto	l183
  5134  03F4  2BF5               	goto	l2739
  5135  03F5                     l2739:	
  5136  03F5  3001               	movlw	1
  5137  03F6  0021               	movlb	1	; select bank1
  5138  03F7  07ED               	addwf	setComunicateMode@i^(0+128),f
  5139  03F8  3000               	movlw	0
  5140  03F9  3DEE               	addwfc	(setComunicateMode@i+1)^(0+128),f
  5141  03FA  2BC2               	goto	L1
  5142  03FB                     l183:	
  5143                           ;comu_type.c: 53: }
  5144                           ;comu_type.c: 54: }
  5145                           ;comu_type.c: 55: return 0;
  5146                           ;	Return value of _setComunicateMode is never used
  5147                           
  5148  03FB  0008               	return
  5149  03FC                     __end_of_setComunicateMode:	
  5150                           
  5151                           	psect	text6
  5152  0088                     __ptext6:	
  5153 ;; *************** function _readCargo *****************
  5154 ;; Defined at:
  5155 ;;		line 46 in file "normal_mode.c"
  5156 ;; Parameters:    Size  Location     Type
  5157 ;;  spi1_Read_da    1    wreg     unsigned char 
  5158 ;; Auto vars:     Size  Location     Type
  5159 ;;  spi1_Read_da    1    6[BANK1 ] unsigned char 
  5160 ;;  buflong         4    0[BANK1 ] unsigned long 
  5161 ;;  bufint          2    4[BANK1 ] unsigned int 
  5162 ;; Return value:  Size  Location     Type
  5163 ;;                  1    wreg      void 
  5164 ;; Registers used:
  5165 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5166 ;; Tracked objects:
  5167 ;;		On entry : 0/0
  5168 ;;		On exit  : 0/0
  5169 ;;		Unchanged: 0/0
  5170 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5171 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5172 ;;      Locals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5173 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5174 ;;      Totals:         0       5       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5175 ;;Total ram usage:       12 bytes
  5176 ;; Hardware stack levels used:    1
  5177 ;; Hardware stack levels required when called:    5
  5178 ;; This function calls:
  5179 ;;		_clutchaction
  5180 ;;		_restartCargo
  5181 ;;		_setCargo_Angle
  5182 ;; This function is called by:
  5183 ;;		_setComunicateMode
  5184 ;; This function uses a non-reentrant model
  5185 ;;
  5186                           
  5187                           
  5188                           ;psect for function _readCargo
  5189  0088                     _readCargo:	
  5190                           
  5191                           ;incstack = 0
  5192                           ; Regs used in _readCargo: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5193                           ;readCargo@spi1_Read_data stored from wreg
  5194  0088  0021               	movlb	1	; select bank1
  5195  0089  00EB               	movwf	readCargo@spi1_Read_data^(0+128)
  5196                           
  5197                           ;normal_mode.c: 47: unsigned int bufint = spi1_Read_data;
  5198  008A  086B               	movf	readCargo@spi1_Read_data^(0+128),w
  5199  008B  0020               	movlb	0	; select bank0
  5200  008C  00E8               	movwf	??_readCargo
  5201  008D  01E9               	clrf	??_readCargo+1
  5202  008E  0868               	movf	??_readCargo,w
  5203  008F  0021               	movlb	1	; select bank1
  5204  0090  00E9               	movwf	readCargo@bufint^(0+128)
  5205  0091  0020               	movlb	0	; select bank0
  5206  0092  0869               	movf	??_readCargo+1,w
  5207  0093  0021               	movlb	1	; select bank1
  5208  0094  00EA               	movwf	(readCargo@bufint+1)^(0+128)
  5209                           
  5210                           ;normal_mode.c: 48: unsigned long buflong = spi1_Read_data;
  5211  0095  086B               	movf	readCargo@spi1_Read_data^(0+128),w
  5212  0096  0020               	movlb	0	; select bank0
  5213  0097  00E8               	movwf	??_readCargo
  5214  0098  01E9               	clrf	??_readCargo+1
  5215  0099  01EA               	clrf	??_readCargo+2
  5216  009A  01EB               	clrf	??_readCargo+3
  5217  009B  086B               	movf	??_readCargo+3,w
  5218  009C  0021               	movlb	1	; select bank1
  5219  009D  00E8               	movwf	(readCargo@buflong+3)^(0+128)
  5220  009E  0020               	movlb	0	; select bank0
  5221  009F  086A               	movf	??_readCargo+2,w
  5222  00A0  0021               	movlb	1	; select bank1
  5223  00A1  00E7               	movwf	(readCargo@buflong+2)^(0+128)
  5224  00A2  0020               	movlb	0	; select bank0
  5225  00A3  0869               	movf	??_readCargo+1,w
  5226  00A4  0021               	movlb	1	; select bank1
  5227  00A5  00E6               	movwf	(readCargo@buflong+1)^(0+128)
  5228  00A6  0020               	movlb	0	; select bank0
  5229  00A7  0868               	movf	??_readCargo,w
  5230  00A8  0021               	movlb	1	; select bank1
  5231  00A9  00E5               	movwf	readCargo@buflong^(0+128)
  5232                           
  5233                           ;normal_mode.c: 50: if(isMycargo){
  5234  00AA  18F8               	btfsc	_isMycargo/(0+8),_isMycargo& (0+7)
  5235  00AB  293F               	goto	l2613
  5236  00AC  294F               	goto	l2615
  5237  00AD                     l394:	
  5238                           ;normal_mode.c: 52: case 0:
  5239                           
  5240                           ;normal_mode.c: 51: switch(countabuf){
  5241                           
  5242                           
  5243                           ;normal_mode.c: 53: LATAbits.LATA0 = 1;
  5244  00AD  0022               	movlb	2	; select bank2
  5245  00AE  140C               	bsf	12,0	;volatile
  5246                           
  5247                           ;normal_mode.c: 54: cargoLengthnuf = (bufint << 8);
  5248  00AF  0021               	movlb	1	; select bank1
  5249  00B0  0869               	movf	readCargo@bufint^(0+128),w
  5250  00B1  0020               	movlb	0	; select bank0
  5251  00B2  00E9               	movwf	??_readCargo+1
  5252  00B3  01E8               	clrf	??_readCargo
  5253  00B4  0868               	movf	??_readCargo,w
  5254  00B5  00BC               	movwf	_cargoLengthnuf
  5255  00B6  0869               	movf	??_readCargo+1,w
  5256  00B7  00BD               	movwf	_cargoLengthnuf+1
  5257                           
  5258                           ;normal_mode.c: 55: break;
  5259  00B8  294F               	goto	l2615
  5260  00B9                     l396:	
  5261                           ;normal_mode.c: 56: case 1:
  5262                           
  5263                           
  5264                           ;normal_mode.c: 57: LATAbits.LATA0 = 0;
  5265  00B9  0022               	movlb	2	; select bank2
  5266  00BA  100C               	bcf	12,0	;volatile
  5267                           
  5268                           ;normal_mode.c: 58: cargoData.cargoLength = (cargoLengthnuf | bufint);
  5269  00BB  0021               	movlb	1	; select bank1
  5270  00BC  0869               	movf	readCargo@bufint^(0+128),w
  5271  00BD  0020               	movlb	0	; select bank0
  5272  00BE  043C               	iorwf	_cargoLengthnuf,w
  5273  00BF  00A0               	movwf	_cargoData
  5274  00C0  0021               	movlb	1	; select bank1
  5275  00C1  086A               	movf	(readCargo@bufint+1)^(0+128),w
  5276  00C2  0020               	movlb	0	; select bank0
  5277  00C3  043D               	iorwf	_cargoLengthnuf+1,w
  5278  00C4  00A1               	movwf	_cargoData+1
  5279                           
  5280                           ;normal_mode.c: 59: break;
  5281  00C5  294F               	goto	l2615
  5282  00C6                     l2573:	
  5283                           ;normal_mode.c: 60: case 2:
  5284                           
  5285                           
  5286                           ;normal_mode.c: 61: cargoData.command = spi1_Read_data;
  5287  00C6  0021               	movlb	1	; select bank1
  5288  00C7  086B               	movf	readCargo@spi1_Read_data^(0+128),w
  5289  00C8  0020               	movlb	0	; select bank0
  5290  00C9  00E8               	movwf	??_readCargo
  5291  00CA  0868               	movf	??_readCargo,w
  5292  00CB  00A2               	movwf	_cargoData+2
  5293                           
  5294                           ;normal_mode.c: 62: break;
  5295  00CC  294F               	goto	l2615
  5296  00CD                     l2575:	
  5297                           ;normal_mode.c: 63: case 3:
  5298                           
  5299                           
  5300                           ;normal_mode.c: 64: cargoData.index = spi1_Read_data;
  5301  00CD  0021               	movlb	1	; select bank1
  5302  00CE  086B               	movf	readCargo@spi1_Read_data^(0+128),w
  5303  00CF  0020               	movlb	0	; select bank0
  5304  00D0  00E8               	movwf	??_readCargo
  5305  00D1  0868               	movf	??_readCargo,w
  5306  00D2  00A3               	movwf	_cargoData+3
  5307                           
  5308                           ;normal_mode.c: 65: break;
  5309  00D3  294F               	goto	l2615
  5310  00D4                     l2577:	
  5311                           ;normal_mode.c: 66: case 4:
  5312                           
  5313                           
  5314                           ;normal_mode.c: 67: cargoData.address = spi1_Read_data;
  5315  00D4  0021               	movlb	1	; select bank1
  5316  00D5  086B               	movf	readCargo@spi1_Read_data^(0+128),w
  5317  00D6  0020               	movlb	0	; select bank0
  5318  00D7  00E8               	movwf	??_readCargo
  5319  00D8  0868               	movf	??_readCargo,w
  5320  00D9  00A4               	movwf	_cargoData+4
  5321                           
  5322                           ;normal_mode.c: 68: if(cargoData.address != linkInfo.My_address){
  5323  00DA  0824               	movf	_cargoData+4,w
  5324  00DB  0630               	xorwf	_linkInfo,w
  5325  00DC  1903               	skipnz
  5326  00DD  294F               	goto	l2615
  5327                           
  5328                           ;normal_mode.c: 69: restartCargo();
  5329  00DE  3185  25FF  3180   	fcall	_restartCargo
  5330                           
  5331                           ;normal_mode.c: 70: isMycargo = 0;
  5332  00E1  10F8               	bcf	_isMycargo/(0+8),_isMycargo& (0+7)
  5333                           
  5334                           ;normal_mode.c: 72: }
  5335                           ;normal_mode.c: 73: break;
  5336                           
  5337                           ;normal_mode.c: 71: }else{
  5338  00E2  294F               	goto	l2615
  5339  00E3                     l2583:	
  5340                           ;normal_mode.c: 74: case 5:
  5341                           
  5342                           
  5343                           ;normal_mode.c: 75: setCargo_Angle();
  5344  00E3  3185  25BD  3180   	fcall	_setCargo_Angle
  5345                           
  5346                           ;normal_mode.c: 76: spi2_Send_data = (cargoData.linkAngleTo >> 8 & 0x00ff);
  5347  00E6  0020               	movlb	0	; select bank0
  5348  00E7  0826               	movf	_cargoData+6,w
  5349  00E8  293B               	goto	L11
  5350  00E9                     l2587:	
  5351                           ;normal_mode.c: 78: case 6:
  5352                           
  5353                           ;normal_mode.c: 77: break;
  5354                           
  5355                           
  5356                           ;normal_mode.c: 79: spi2_Send_data = (cargoData.linkAngleTo & 0x00ff);
  5357  00E9  0825               	movf	_cargoData+5,w
  5358  00EA  293B               	goto	L11
  5359  00EB                     l2589:	
  5360                           ;normal_mode.c: 81: case 7:
  5361                           
  5362                           ;normal_mode.c: 80: break;
  5363                           
  5364                           
  5365                           ;normal_mode.c: 82: spi2_Send_data = (cargoData.linkAngleBack >> 8 & 0x00ff);
  5366  00EB  0828               	movf	_cargoData+8,w
  5367  00EC  293B               	goto	L11
  5368  00ED                     l2591:	
  5369                           ;normal_mode.c: 84: case 8:
  5370                           
  5371                           ;normal_mode.c: 83: break;
  5372                           
  5373                           
  5374                           ;normal_mode.c: 85: spi2_Send_data = (cargoData.linkAngleBack & 0x00ff);
  5375  00ED  0827               	movf	_cargoData+7,w
  5376  00EE  293B               	goto	L11
  5377  00EF                     l2593:	
  5378                           ;normal_mode.c: 87: case 9:
  5379                           
  5380                           ;normal_mode.c: 86: break;
  5381                           
  5382                           
  5383                           ;normal_mode.c: 88: spi2_Send_data = (cargoData.passedTime >> 8 & 0x00ff);
  5384  00EF  082A               	movf	_cargoData+10,w
  5385  00F0  293B               	goto	L11
  5386  00F1                     l2595:	
  5387                           ;normal_mode.c: 90: case 10:
  5388                           
  5389                           ;normal_mode.c: 89: break;
  5390                           
  5391                           
  5392                           ;normal_mode.c: 91: spi2_Send_data = (cargoData.passedTime & 0x00ff);
  5393  00F1  0829               	movf	_cargoData+9,w
  5394  00F2  293B               	goto	L11
  5395  00F3                     l2597:	
  5396                           ;normal_mode.c: 93: case 11:
  5397                           
  5398                           ;normal_mode.c: 92: break;
  5399                           
  5400                           
  5401                           ;normal_mode.c: 94: cargoData.clutchMode = spi1_Read_data;
  5402  00F3  0021               	movlb	1	; select bank1
  5403  00F4  086B               	movf	readCargo@spi1_Read_data^(0+128),w
  5404  00F5  0020               	movlb	0	; select bank0
  5405  00F6  00E8               	movwf	??_readCargo
  5406  00F7  0868               	movf	??_readCargo,w
  5407  00F8  00AB               	movwf	_cargoData+11
  5408                           
  5409                           ;normal_mode.c: 95: clutchaction(cargoData.clutchMode);
  5410  00F9  082B               	movf	_cargoData+11,w
  5411  00FA  3186  2653  3180   	fcall	_clutchaction
  5412                           
  5413                           ;normal_mode.c: 96: break;
  5414  00FD  294F               	goto	l2615
  5415  00FE                     l2601:	
  5416                           ;normal_mode.c: 97: case 12:
  5417                           
  5418                           
  5419                           ;normal_mode.c: 98: cargoData.WorkingCount++;
  5420  00FE  3001               	movlw	1
  5421  00FF  0020               	movlb	0	; select bank0
  5422  0100  07AC               	addwf	_cargoData+12,f
  5423  0101  3000               	movlw	0
  5424  0102  3DAD               	addwfc	_cargoData+13,f
  5425  0103  3000               	movlw	0
  5426  0104  3DAE               	addwfc	_cargoData+14,f
  5427  0105  3000               	movlw	0
  5428  0106  3DAF               	addwfc	_cargoData+15,f
  5429                           
  5430                           ;normal_mode.c: 99: spi2_Send_data = (cargoData.WorkingCount >> 24 & 0x000000ff);
  5431  0107  082C               	movf	_cargoData+12,w
  5432  0108  00E8               	movwf	??_readCargo
  5433  0109  082D               	movf	_cargoData+13,w
  5434  010A  00E9               	movwf	??_readCargo+1
  5435  010B  082E               	movf	_cargoData+14,w
  5436  010C  00EA               	movwf	??_readCargo+2
  5437  010D  082F               	movf	_cargoData+15,w
  5438  010E  00EB               	movwf	??_readCargo+3
  5439  010F  3018               	movlw	24
  5440  0110                     u1115:	
  5441  0110  36EB               	lsrf	??_readCargo+3,f
  5442  0111  0CEA               	rrf	??_readCargo+2,f
  5443  0112  0CE9               	rrf	??_readCargo+1,f
  5444  0113  0CE8               	rrf	??_readCargo,f
  5445  0114  0B89               	decfsz	9,f
  5446  0115  2910               	goto	u1115
  5447  0116  2936               	goto	L13
  5448  0117                     l2605:	
  5449                           ;normal_mode.c: 101: case 13:
  5450                           
  5451                           ;normal_mode.c: 100: break;
  5452                           
  5453                           
  5454                           ;normal_mode.c: 102: spi2_Send_data = (cargoData.WorkingCount >> 16 & 0x000000ff);
  5455  0117  082C               	movf	_cargoData+12,w
  5456  0118  00E8               	movwf	??_readCargo
  5457  0119  082D               	movf	_cargoData+13,w
  5458  011A  00E9               	movwf	??_readCargo+1
  5459  011B  082E               	movf	_cargoData+14,w
  5460  011C  00EA               	movwf	??_readCargo+2
  5461  011D  082F               	movf	_cargoData+15,w
  5462  011E  00EB               	movwf	??_readCargo+3
  5463  011F  3010               	movlw	16
  5464  0120                     u1125:	
  5465  0120  36EB               	lsrf	??_readCargo+3,f
  5466  0121  0CEA               	rrf	??_readCargo+2,f
  5467  0122  0CE9               	rrf	??_readCargo+1,f
  5468  0123  0CE8               	rrf	??_readCargo,f
  5469  0124  0B89               	decfsz	9,f
  5470  0125  2920               	goto	u1125
  5471  0126  2936               	goto	L13
  5472  0127                     l2607:	
  5473                           ;normal_mode.c: 104: case 14:
  5474                           
  5475                           ;normal_mode.c: 103: break;
  5476                           
  5477                           
  5478                           ;normal_mode.c: 105: spi2_Send_data = (cargoData.WorkingCount >> 8 & 0x000000ff);
  5479  0127  082C               	movf	_cargoData+12,w
  5480  0128  00E8               	movwf	??_readCargo
  5481  0129  082D               	movf	_cargoData+13,w
  5482  012A  00E9               	movwf	??_readCargo+1
  5483  012B  082E               	movf	_cargoData+14,w
  5484  012C  00EA               	movwf	??_readCargo+2
  5485  012D  082F               	movf	_cargoData+15,w
  5486  012E  00EB               	movwf	??_readCargo+3
  5487  012F  3008               	movlw	8
  5488  0130                     u1135:	
  5489  0130  36EB               	lsrf	??_readCargo+3,f
  5490  0131  0CEA               	rrf	??_readCargo+2,f
  5491  0132  0CE9               	rrf	??_readCargo+1,f
  5492  0133  0CE8               	rrf	??_readCargo,f
  5493  0134  0B89               	decfsz	9,f
  5494  0135  2930               	goto	u1135
  5495  0136                     L13:	
  5496  0136  0868               	movf	??_readCargo,w
  5497  0137  00EC               	movwf	??_readCargo+4
  5498  0138  086C               	movf	??_readCargo+4,w
  5499  0139  293D               	goto	L10
  5500  013A                     l2609:	
  5501                           ;normal_mode.c: 107: case 15:
  5502                           
  5503                           ;normal_mode.c: 106: break;
  5504                           
  5505                           
  5506                           ;normal_mode.c: 108: spi2_Send_data = (cargoData.WorkingCount & 0x000000ff);
  5507  013A  082C               	movf	_cargoData+12,w
  5508  013B                     L11:	
  5509  013B  00E8               	movwf	??_readCargo
  5510  013C  0868               	movf	??_readCargo,w
  5511  013D                     L10:	
  5512  013D  00D4               	movwf	_spi2_Send_data
  5513                           
  5514                           ;normal_mode.c: 110: }
  5515                           
  5516                           ;normal_mode.c: 109: break;
  5517  013E  294F               	goto	l2615
  5518  013F                     l2613:	
  5519                           
  5520                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5521                           ; Switch size 1, requested type "space"
  5522                           ; Number of cases is 1, Range of values is 0 to 0
  5523                           ; switch strategies available:
  5524                           ; Name         Instructions Cycles
  5525                           ; simple_byte            4     3 (average)
  5526                           ; direct_byte            8     6 (fixed)
  5527                           ; jumptable            260     6 (fixed)
  5528                           ;	Chosen strategy is simple_byte
  5529  013F  0020               	movlb	0	; select bank0
  5530  0140  0847               	movf	_countabuf+1,w
  5531  0141  3A00               	xorlw	0	; case 0
  5532  0142  1903               	skipnz
  5533  0143  2945               	goto	l3045
  5534  0144  294F               	goto	l2615
  5535  0145                     l3045:	
  5536                           
  5537                           ; Switch size 1, requested type "space"
  5538                           ; Number of cases is 16, Range of values is 0 to 15
  5539                           ; switch strategies available:
  5540                           ; Name         Instructions Cycles
  5541                           ; direct_byte           38     6 (fixed)
  5542                           ; simple_byte           49    25 (average)
  5543                           ; jumptable            260     6 (fixed)
  5544                           ;	Chosen strategy is direct_byte
  5545  0145  0846               	movf	_countabuf,w
  5546  0146  0084               	movwf	4
  5547  0147  3010               	movlw	16
  5548  0148  0204               	subwf	4,w
  5549  0149  1803               	skipnc
  5550  014A  294F               	goto	l2615
  5551  014B  3185               	movlp	high S3047
  5552  014C  3504               	lslf	4,w
  5553  014D  3E9D               	addlw	low S3047
  5554  014E  0082               	movwf	2
  5555  014F                     l2615:	
  5556                           
  5557                           ;normal_mode.c: 111: }
  5558                           ;normal_mode.c: 113: countabuf++;
  5559  014F  3001               	movlw	1
  5560  0150  0020               	movlb	0	; select bank0
  5561  0151  07C6               	addwf	_countabuf,f
  5562  0152  3000               	movlw	0
  5563  0153  3DC7               	addwfc	_countabuf+1,f
  5564                           
  5565                           ;normal_mode.c: 114: if(cargoData.cargoLength <= countabuf){
  5566  0154  0821               	movf	_cargoData+1,w
  5567  0155  0247               	subwf	_countabuf+1,w
  5568  0156  1D03               	skipz
  5569  0157  295A               	goto	u1145
  5570  0158  0820               	movf	_cargoData,w
  5571  0159  0246               	subwf	_countabuf,w
  5572  015A                     u1145:	
  5573  015A  1C03               	skipc
  5574  015B  0008               	return
  5575                           
  5576                           ;normal_mode.c: 115: cargoLengthnuf = 0;
  5577  015C  01BC               	clrf	_cargoLengthnuf
  5578  015D  01BD               	clrf	_cargoLengthnuf+1
  5579                           
  5580                           ;normal_mode.c: 116: cargoWorkingCount = 0;
  5581  015E  3000               	movlw	0
  5582  015F  0021               	movlb	1	; select bank1
  5583  0160  00E2               	movwf	(_cargoWorkingCount+3)^(0+128)
  5584  0161  3000               	movlw	0
  5585  0162  00E1               	movwf	(_cargoWorkingCount+2)^(0+128)
  5586  0163  3000               	movlw	0
  5587  0164  00E0               	movwf	(_cargoWorkingCount+1)^(0+128)
  5588  0165  3000               	movlw	0
  5589  0166  00DF               	movwf	_cargoWorkingCount^(0+128)
  5590                           
  5591                           ;normal_mode.c: 117: cargoData.cargoLength = 0xFFFF;
  5592  0167  30FF               	movlw	255
  5593  0168  0020               	movlb	0	; select bank0
  5594  0169  00A0               	movwf	_cargoData
  5595  016A  30FF               	movlw	255
  5596  016B  00A1               	movwf	_cargoData+1
  5597                           
  5598                           ;normal_mode.c: 118: countabuf = 0;
  5599  016C  01C6               	clrf	_countabuf
  5600  016D  01C7               	clrf	_countabuf+1
  5601                           
  5602                           ;normal_mode.c: 119: isMycargo = 1;
  5603  016E  14F8               	bsf	_isMycargo/(0+8),_isMycargo& (0+7)
  5604  016F  0008               	return
  5605  0170                     __end_of_readCargo:	
  5606                           
  5607                           	psect	swtext1
  5608  059D                     __pswtext1:	
  5609  059D                     S3047:	
  5610  059D  3180  28AD         	ljmp	l394
  5611  059F  3180  28B9         	ljmp	l396
  5612  05A1  3180  28C6         	ljmp	l2573
  5613  05A3  3180  28CD         	ljmp	l2575
  5614  05A5  3180  28D4         	ljmp	l2577
  5615  05A7  3180  28E3         	ljmp	l2583
  5616  05A9  3180  28E9         	ljmp	l2587
  5617  05AB  3180  28EB         	ljmp	l2589
  5618  05AD  3180  28ED         	ljmp	l2591
  5619  05AF  3180  28EF         	ljmp	l2593
  5620  05B1  3180  28F1         	ljmp	l2595
  5621  05B3  3180  28F3         	ljmp	l2597
  5622  05B5  3180  28FE         	ljmp	l2601
  5623  05B7  3181  2917         	ljmp	l2605
  5624  05B9  3181  2927         	ljmp	l2607
  5625  05BB  3181  293A         	ljmp	l2609
  5626                           
  5627                           	psect	text7
  5628  05BD                     __ptext7:	
  5629 ;; *************** function _setCargo_Angle *****************
  5630 ;; Defined at:
  5631 ;;		line 9 in file "IO_control.c"
  5632 ;; Parameters:    Size  Location     Type
  5633 ;;		None
  5634 ;; Auto vars:     Size  Location     Type
  5635 ;;		None
  5636 ;; Return value:  Size  Location     Type
  5637 ;;                  1    wreg      void 
  5638 ;; Registers used:
  5639 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5640 ;; Tracked objects:
  5641 ;;		On entry : 0/0
  5642 ;;		On exit  : 0/0
  5643 ;;		Unchanged: 0/0
  5644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5645 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5646 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5647 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5648 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5649 ;;Total ram usage:        1 bytes
  5650 ;; Hardware stack levels used:    1
  5651 ;; Hardware stack levels required when called:    4
  5652 ;; This function calls:
  5653 ;;		_getCargoData
  5654 ;; This function is called by:
  5655 ;;		_readCargo
  5656 ;; This function uses a non-reentrant model
  5657 ;;
  5658                           
  5659                           
  5660                           ;psect for function _setCargo_Angle
  5661  05BD                     _setCargo_Angle:	
  5662                           
  5663                           ;IO_control.c: 10: cargoData = getCargoData();
  5664                           
  5665                           ;incstack = 0
  5666                           ; Regs used in _setCargo_Angle: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5667  05BD  3186  2610  3185   	fcall	_getCargoData
  5668  05C0  0020               	movlb	0	; select bank0
  5669  05C1  3056               	movlw	low ?_getCargoData
  5670  05C2  0086               	movwf	6
  5671  05C3  3000               	movlw	high ?_getCargoData
  5672  05C4  0087               	movwf	7
  5673  05C5  3020               	movlw	low _cargoData
  5674  05C6  0084               	movwf	4
  5675  05C7  3000               	movlw	high _cargoData
  5676  05C8  0085               	movwf	5
  5677  05C9  3010               	movlw	16
  5678  05CA  00E7               	movwf	??_setCargo_Angle
  5679  05CB                     u990:	
  5680  05CB  0016               	moviw fsr1++
  5681  05CC  001A               	movwi fsr0++
  5682  05CD  0BE7               	decfsz	??_setCargo_Angle,f
  5683  05CE  2DCB               	goto	u990
  5684                           
  5685                           ;IO_control.c: 11: cargoData.linkAngleTo = linkAngle;
  5686  05CF  084F               	movf	_linkAngle+1,w
  5687  05D0  00A6               	movwf	_cargoData+6
  5688  05D1  084E               	movf	_linkAngle,w
  5689  05D2  00A5               	movwf	_cargoData+5
  5690  05D3  0008               	return
  5691  05D4                     __end_of_setCargo_Angle:	
  5692                           
  5693                           	psect	text8
  5694  0653                     __ptext8:	
  5695 ;; *************** function _clutchaction *****************
  5696 ;; Defined at:
  5697 ;;		line 70 in file "command.c"
  5698 ;; Parameters:    Size  Location     Type
  5699 ;;  comannd         1    wreg     unsigned char 
  5700 ;; Auto vars:     Size  Location     Type
  5701 ;;  comannd         1    0[BANK0 ] unsigned char 
  5702 ;; Return value:  Size  Location     Type
  5703 ;;		None               void
  5704 ;; Registers used:
  5705 ;;		wreg, status,2, status,0
  5706 ;; Tracked objects:
  5707 ;;		On entry : 0/0
  5708 ;;		On exit  : 0/0
  5709 ;;		Unchanged: 0/0
  5710 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5711 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5712 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5714 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5715 ;;Total ram usage:        1 bytes
  5716 ;; Hardware stack levels used:    1
  5717 ;; Hardware stack levels required when called:    3
  5718 ;; This function calls:
  5719 ;;		Nothing
  5720 ;; This function is called by:
  5721 ;;		_readCargo
  5722 ;; This function uses a non-reentrant model
  5723 ;;
  5724                           
  5725                           
  5726                           ;psect for function _clutchaction
  5727  0653                     _clutchaction:	
  5728                           
  5729                           ;incstack = 0
  5730                           ; Regs used in _clutchaction: [wreg+status,2+status,0]
  5731                           ;clutchaction@comannd stored from wreg
  5732  0653  0020               	movlb	0	; select bank0
  5733  0654  00D6               	movwf	clutchaction@comannd
  5734                           
  5735                           ;command.c: 71: if(comannd == 1){
  5736  0655  0356               	decf	clutchaction@comannd,w
  5737  0656  1D03               	btfss	3,2
  5738  0657  2E5B               	goto	l160
  5739                           
  5740                           ;command.c: 72: LATAbits.LATA0 = 1;
  5741  0658  0022               	movlb	2	; select bank2
  5742  0659  140C               	bsf	12,0	;volatile
  5743                           
  5744                           ;command.c: 73: }else{
  5745  065A  0008               	return
  5746  065B                     l160:	
  5747                           
  5748                           ;command.c: 74: LATAbits.LATA0 = 0;
  5749  065B  0022               	movlb	2	; select bank2
  5750  065C  100C               	bcf	12,0	;volatile
  5751  065D  0008               	return
  5752  065E                     __end_of_clutchaction:	
  5753                           
  5754                           	psect	text9
  5755  0170                     __ptext9:	
  5756 ;; *************** function _Calibrate_download *****************
  5757 ;; Defined at:
  5758 ;;		line 73 in file "calibrate_mode.c"
  5759 ;; Parameters:    Size  Location     Type
  5760 ;;  spi_Read_dat    1    wreg     unsigned char 
  5761 ;; Auto vars:     Size  Location     Type
  5762 ;;  spi_Read_dat    1   19[BANK0 ] unsigned char 
  5763 ;;  buflong         4   12[BANK0 ] unsigned long 
  5764 ;;  bufint          2   17[BANK0 ] unsigned int 
  5765 ;;  buf             1   16[BANK0 ] unsigned char 
  5766 ;; Return value:  Size  Location     Type
  5767 ;;                  1    wreg      void 
  5768 ;; Registers used:
  5769 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5770 ;; Tracked objects:
  5771 ;;		On entry : 0/0
  5772 ;;		On exit  : 0/0
  5773 ;;		Unchanged: 0/0
  5774 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5775 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5776 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5777 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5778 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5779 ;;Total ram usage:       13 bytes
  5780 ;; Hardware stack levels used:    1
  5781 ;; Hardware stack levels required when called:    5
  5782 ;; This function calls:
  5783 ;;		_InitCalibrate
  5784 ;;		_isEndpoint
  5785 ;; This function is called by:
  5786 ;;		_setComunicateMode
  5787 ;; This function uses a non-reentrant model
  5788 ;;
  5789                           
  5790                           
  5791                           ;psect for function _Calibrate_download
  5792  0170                     _Calibrate_download:	
  5793                           
  5794                           ;incstack = 0
  5795                           ; Regs used in _Calibrate_download: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5796                           ;Calibrate_download@spi_Read_data stored from wreg
  5797  0170  0020               	movlb	0	; select bank0
  5798  0171  00E9               	movwf	Calibrate_download@spi_Read_data
  5799                           
  5800                           ;calibrate_mode.c: 75: unsigned int bufint = spi_Read_data;
  5801  0172  0869               	movf	Calibrate_download@spi_Read_data,w
  5802  0173  00DD               	movwf	??_Calibrate_download
  5803  0174  01DE               	clrf	??_Calibrate_download+1
  5804  0175  085D               	movf	??_Calibrate_download,w
  5805  0176  00E7               	movwf	Calibrate_download@bufint
  5806  0177  085E               	movf	??_Calibrate_download+1,w
  5807  0178  00E8               	movwf	Calibrate_download@bufint+1
  5808                           
  5809                           ;calibrate_mode.c: 76: unsigned long buflong = spi_Read_data;
  5810  0179  0869               	movf	Calibrate_download@spi_Read_data,w
  5811  017A  00DD               	movwf	??_Calibrate_download
  5812  017B  01DE               	clrf	??_Calibrate_download+1
  5813  017C  01DF               	clrf	??_Calibrate_download+2
  5814  017D  01E0               	clrf	??_Calibrate_download+3
  5815  017E  0860               	movf	??_Calibrate_download+3,w
  5816  017F  00E5               	movwf	Calibrate_download@buflong+3
  5817  0180  085F               	movf	??_Calibrate_download+2,w
  5818  0181  00E4               	movwf	Calibrate_download@buflong+2
  5819  0182  085E               	movf	??_Calibrate_download+1,w
  5820  0183  00E3               	movwf	Calibrate_download@buflong+1
  5821  0184  085D               	movf	??_Calibrate_download,w
  5822  0185  00E2               	movwf	Calibrate_download@buflong
  5823                           
  5824                           ;calibrate_mode.c: 77: isEndpoint();
  5825  0186  3183  23FC  3181   	fcall	_isEndpoint
  5826                           
  5827                           ;calibrate_mode.c: 78: if(isMycargo){
  5828  0189  18F8               	btfsc	_isMycargo/(0+8),_isMycargo& (0+7)
  5829  018A  2A26               	goto	l2545
  5830  018B  2A36               	goto	l2547
  5831  018C                     l2509:	
  5832                           ;calibrate_mode.c: 80: case 0:
  5833                           
  5834                           ;calibrate_mode.c: 79: switch(countabuf){
  5835                           
  5836                           
  5837                           ;calibrate_mode.c: 81: InitCalibrate();
  5838  018C  3185  25D4  3181   	fcall	_InitCalibrate
  5839                           
  5840                           ;calibrate_mode.c: 82: calibdata.cargoLength = (bufint << 8 | 0x00FF);
  5841  018F  0020               	movlb	0	; select bank0
  5842  0190  0867               	movf	Calibrate_download@bufint,w
  5843  0191  00DE               	movwf	??_Calibrate_download+1
  5844  0192  01DD               	clrf	??_Calibrate_download
  5845  0193  30FF               	movlw	255
  5846  0194  045D               	iorwf	??_Calibrate_download,w
  5847  0195  0021               	movlb	1	; select bank1
  5848  0196  00D6               	movwf	_calibdata^(0+128)
  5849  0197  3000               	movlw	0
  5850  0198  0020               	movlb	0	; select bank0
  5851  0199  045E               	iorwf	??_Calibrate_download+1,w
  5852  019A  29AA               	goto	L14
  5853  019B                     l2515:	
  5854                           ;calibrate_mode.c: 85: case 1:
  5855                           
  5856                           ;calibrate_mode.c: 84: break;
  5857                           
  5858                           ;calibrate_mode.c: 83: spi2_Send_data = spi_Read_data;
  5859                           
  5860                           
  5861                           ;calibrate_mode.c: 86: calibdata.cargoLength = calibdata.cargoLength & (bufint | 0xFF00)
      +                          ;
  5862  019B  3000               	movlw	0
  5863  019C  0467               	iorwf	Calibrate_download@bufint,w
  5864  019D  00DD               	movwf	??_Calibrate_download
  5865  019E  30FF               	movlw	255
  5866  019F  0468               	iorwf	Calibrate_download@bufint+1,w
  5867  01A0  00DE               	movwf	??_Calibrate_download+1
  5868  01A1  0021               	movlb	1	; select bank1
  5869  01A2  0856               	movf	_calibdata^(0+128),w
  5870  01A3  0020               	movlb	0	; select bank0
  5871  01A4  055D               	andwf	??_Calibrate_download,w
  5872  01A5  0021               	movlb	1	; select bank1
  5873  01A6  00D6               	movwf	_calibdata^(0+128)
  5874  01A7  0857               	movf	(_calibdata+1)^(0+128),w
  5875  01A8  0020               	movlb	0	; select bank0
  5876  01A9  055E               	andwf	??_Calibrate_download+1,w
  5877  01AA                     L14:	
  5878  01AA  0021               	movlb	1	; select bank1
  5879  01AB  00D7               	movwf	(_calibdata+1)^(0+128)
  5880  01AC  29B8               	goto	L16
  5881  01AD                     l2517:	
  5882                           ;calibrate_mode.c: 89: case 2:
  5883                           
  5884                           ;calibrate_mode.c: 88: break;
  5885                           
  5886                           ;calibrate_mode.c: 87: spi2_Send_data = spi_Read_data;
  5887                           
  5888                           
  5889                           ;calibrate_mode.c: 90: calibdata.command = spi_Read_data;
  5890  01AD  0869               	movf	Calibrate_download@spi_Read_data,w
  5891  01AE  00DD               	movwf	??_Calibrate_download
  5892  01AF  085D               	movf	??_Calibrate_download,w
  5893  01B0  0021               	movlb	1	; select bank1
  5894  01B1  00D8               	movwf	(_calibdata^(0+128)+2)
  5895  01B2  29B8               	goto	L16
  5896  01B3                     l2519:	
  5897                           ;calibrate_mode.c: 93: case 3:
  5898                           
  5899                           ;calibrate_mode.c: 92: break;
  5900                           
  5901                           ;calibrate_mode.c: 91: spi2_Send_data = spi_Read_data;
  5902                           
  5903                           
  5904                           ;calibrate_mode.c: 94: calibdata.index = spi_Read_data;
  5905  01B3  0869               	movf	Calibrate_download@spi_Read_data,w
  5906  01B4  00DD               	movwf	??_Calibrate_download
  5907  01B5  085D               	movf	??_Calibrate_download,w
  5908  01B6  0021               	movlb	1	; select bank1
  5909  01B7  00D9               	movwf	(_calibdata^(0+128)+3)
  5910  01B8                     L16:	
  5911                           
  5912                           ;calibrate_mode.c: 95: spi2_Send_data = spi_Read_data;
  5913  01B8  0020               	movlb	0	; select bank0
  5914  01B9  0869               	movf	Calibrate_download@spi_Read_data,w
  5915  01BA  2A22               	goto	L25
  5916  01BB                     l2521:	
  5917                           ;calibrate_mode.c: 97: case 4:
  5918                           
  5919                           ;calibrate_mode.c: 96: break;
  5920                           
  5921                           
  5922                           ;calibrate_mode.c: 98: linkInfo.My_address = spi_Read_data +1;
  5923  01BB  0869               	movf	Calibrate_download@spi_Read_data,w
  5924  01BC  3E01               	addlw	1
  5925  01BD  00DD               	movwf	??_Calibrate_download
  5926  01BE  085D               	movf	??_Calibrate_download,w
  5927  01BF  00B0               	movwf	_linkInfo
  5928  01C0  2A21               	goto	L26
  5929  01C1                     l2525:	
  5930                           ;calibrate_mode.c: 101: case 5:
  5931                           
  5932                           ;calibrate_mode.c: 100: break;
  5933                           
  5934                           ;calibrate_mode.c: 99: spi2_Send_data = linkInfo.My_address;
  5935                           
  5936                           
  5937                           ;calibrate_mode.c: 102: calibdata.WorkingCount++;
  5938  01C1  3001               	movlw	1
  5939  01C2  0021               	movlb	1	; select bank1
  5940  01C3  07DA               	addwf	(_calibdata^(0+128)+4),f
  5941  01C4  3000               	movlw	0
  5942  01C5  3DDB               	addwfc	((_calibdata+1)^(0+128)+4),f
  5943  01C6  3000               	movlw	0
  5944  01C7  3DDC               	addwfc	((_calibdata+2)^(0+128)+4),f
  5945  01C8  3000               	movlw	0
  5946  01C9  3DDD               	addwfc	((_calibdata+3)^(0+128)+4),f
  5947                           
  5948                           ;calibrate_mode.c: 103: spi2_Send_data = (calibdata.WorkingCount >> 24 & 0x000000ff);
  5949  01CA  085A               	movf	(_calibdata^(0+128)+4),w
  5950  01CB  0020               	movlb	0	; select bank0
  5951  01CC  00DD               	movwf	??_Calibrate_download
  5952  01CD  0021               	movlb	1	; select bank1
  5953  01CE  085B               	movf	((_calibdata+1)^(0+128)+4),w
  5954  01CF  0020               	movlb	0	; select bank0
  5955  01D0  00DE               	movwf	??_Calibrate_download+1
  5956  01D1  0021               	movlb	1	; select bank1
  5957  01D2  085C               	movf	((_calibdata+2)^(0+128)+4),w
  5958  01D3  0020               	movlb	0	; select bank0
  5959  01D4  00DF               	movwf	??_Calibrate_download+2
  5960  01D5  0021               	movlb	1	; select bank1
  5961  01D6  085D               	movf	((_calibdata+3)^(0+128)+4),w
  5962  01D7  0020               	movlb	0	; select bank0
  5963  01D8  00E0               	movwf	??_Calibrate_download+3
  5964  01D9  3018               	movlw	24
  5965  01DA                     u1045:	
  5966  01DA  36E0               	lsrf	??_Calibrate_download+3,f
  5967  01DB  0CDF               	rrf	??_Calibrate_download+2,f
  5968  01DC  0CDE               	rrf	??_Calibrate_download+1,f
  5969  01DD  0CDD               	rrf	??_Calibrate_download,f
  5970  01DE  0B89               	decfsz	9,f
  5971  01DF  29DA               	goto	u1045
  5972  01E0  2A10               	goto	L24
  5973  01E1                     l2529:	
  5974                           ;calibrate_mode.c: 105: case 6:
  5975                           
  5976                           ;calibrate_mode.c: 104: break;
  5977                           
  5978                           
  5979                           ;calibrate_mode.c: 106: spi2_Send_data = (calibdata.WorkingCount >> 16 & 0x000000ff);
  5980  01E1  0021               	movlb	1	; select bank1
  5981  01E2  085A               	movf	(_calibdata^(0+128)+4),w
  5982  01E3  0020               	movlb	0	; select bank0
  5983  01E4  00DD               	movwf	??_Calibrate_download
  5984  01E5  0021               	movlb	1	; select bank1
  5985  01E6  085B               	movf	((_calibdata+1)^(0+128)+4),w
  5986  01E7  0020               	movlb	0	; select bank0
  5987  01E8  00DE               	movwf	??_Calibrate_download+1
  5988  01E9  0021               	movlb	1	; select bank1
  5989  01EA  085C               	movf	((_calibdata+2)^(0+128)+4),w
  5990  01EB  0020               	movlb	0	; select bank0
  5991  01EC  00DF               	movwf	??_Calibrate_download+2
  5992  01ED  0021               	movlb	1	; select bank1
  5993  01EE  085D               	movf	((_calibdata+3)^(0+128)+4),w
  5994  01EF  0020               	movlb	0	; select bank0
  5995  01F0  00E0               	movwf	??_Calibrate_download+3
  5996  01F1  3010               	movlw	16
  5997  01F2                     u1055:	
  5998  01F2  36E0               	lsrf	??_Calibrate_download+3,f
  5999  01F3  0CDF               	rrf	??_Calibrate_download+2,f
  6000  01F4  0CDE               	rrf	??_Calibrate_download+1,f
  6001  01F5  0CDD               	rrf	??_Calibrate_download,f
  6002  01F6  0B89               	decfsz	9,f
  6003  01F7  29F2               	goto	u1055
  6004  01F8  2A10               	goto	L24
  6005  01F9                     l2531:	
  6006                           ;calibrate_mode.c: 108: case 7:
  6007                           
  6008                           ;calibrate_mode.c: 107: break;
  6009                           
  6010                           
  6011                           ;calibrate_mode.c: 109: spi2_Send_data = (calibdata.WorkingCount >> 8 & 0x000000ff);
  6012  01F9  0021               	movlb	1	; select bank1
  6013  01FA  085A               	movf	(_calibdata^(0+128)+4),w
  6014  01FB  0020               	movlb	0	; select bank0
  6015  01FC  00DD               	movwf	??_Calibrate_download
  6016  01FD  0021               	movlb	1	; select bank1
  6017  01FE  085B               	movf	((_calibdata+1)^(0+128)+4),w
  6018  01FF  0020               	movlb	0	; select bank0
  6019  0200  00DE               	movwf	??_Calibrate_download+1
  6020  0201  0021               	movlb	1	; select bank1
  6021  0202  085C               	movf	((_calibdata+2)^(0+128)+4),w
  6022  0203  0020               	movlb	0	; select bank0
  6023  0204  00DF               	movwf	??_Calibrate_download+2
  6024  0205  0021               	movlb	1	; select bank1
  6025  0206  085D               	movf	((_calibdata+3)^(0+128)+4),w
  6026  0207  0020               	movlb	0	; select bank0
  6027  0208  00E0               	movwf	??_Calibrate_download+3
  6028  0209  3008               	movlw	8
  6029  020A                     u1065:	
  6030  020A  36E0               	lsrf	??_Calibrate_download+3,f
  6031  020B  0CDF               	rrf	??_Calibrate_download+2,f
  6032  020C  0CDE               	rrf	??_Calibrate_download+1,f
  6033  020D  0CDD               	rrf	??_Calibrate_download,f
  6034  020E  0B89               	decfsz	9,f
  6035  020F  2A0A               	goto	u1065
  6036  0210                     L24:	
  6037  0210  085D               	movf	??_Calibrate_download,w
  6038  0211  00E1               	movwf	??_Calibrate_download+4
  6039  0212  0861               	movf	??_Calibrate_download+4,w
  6040  0213  2A24               	goto	L22
  6041  0214                     l2533:	
  6042                           ;calibrate_mode.c: 111: case 8:
  6043                           
  6044                           ;calibrate_mode.c: 110: break;
  6045                           
  6046                           
  6047                           ;calibrate_mode.c: 112: spi2_Send_data = (calibdata.WorkingCount & 0x000000ff);
  6048  0214  0021               	movlb	1	; select bank1
  6049  0215  085A               	movf	(_calibdata^(0+128)+4),w
  6050  0216  0020               	movlb	0	; select bank0
  6051  0217  2A22               	goto	L25
  6052  0218                     l104:	
  6053                           ;calibrate_mode.c: 114: case 9:
  6054                           
  6055                           ;calibrate_mode.c: 113: break;
  6056                           
  6057                           
  6058                           ;calibrate_mode.c: 115: if(isEndPointTrig == 1){
  6059  0218  1C78               	btfss	_isEndPointTrig/(0+8),_isEndPointTrig& (0+7)
  6060  0219  2A1D               	goto	l2537
  6061                           
  6062                           ;calibrate_mode.c: 117: linkInfo.endpoint = 1;
  6063  021A  01B5               	clrf	_linkInfo+5
  6064  021B  0AB5               	incf	_linkInfo+5,f
  6065                           
  6066                           ;calibrate_mode.c: 118: }else{
  6067  021C  2A1E               	goto	l2539
  6068  021D                     l2537:	
  6069                           
  6070                           ;calibrate_mode.c: 119: linkInfo.endpoint = 0;
  6071  021D  01B5               	clrf	_linkInfo+5
  6072  021E                     l2539:	
  6073                           
  6074                           ;calibrate_mode.c: 120: }
  6075                           ;calibrate_mode.c: 121: LATAbits.LATA0 = 0;
  6076  021E  0022               	movlb	2	; select bank2
  6077  021F  100C               	bcf	12,0	;volatile
  6078                           
  6079                           ;calibrate_mode.c: 122: spi2_Send_data = linkInfo.My_address;
  6080  0220  0020               	movlb	0	; select bank0
  6081  0221                     L26:	
  6082  0221  0830               	movf	_linkInfo,w
  6083  0222                     L25:	
  6084  0222  00DD               	movwf	??_Calibrate_download
  6085  0223  085D               	movf	??_Calibrate_download,w
  6086  0224                     L22:	
  6087  0224  00D4               	movwf	_spi2_Send_data
  6088                           
  6089                           ;calibrate_mode.c: 124: }
  6090                           
  6091                           ;calibrate_mode.c: 123: break;
  6092  0225  2A36               	goto	l2547
  6093  0226                     l2545:	
  6094                           
  6095                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6096                           ; Switch size 1, requested type "space"
  6097                           ; Number of cases is 1, Range of values is 0 to 0
  6098                           ; switch strategies available:
  6099                           ; Name         Instructions Cycles
  6100                           ; simple_byte            4     3 (average)
  6101                           ; direct_byte            8     6 (fixed)
  6102                           ; jumptable            260     6 (fixed)
  6103                           ;	Chosen strategy is simple_byte
  6104  0226  0020               	movlb	0	; select bank0
  6105  0227  0847               	movf	_countabuf+1,w
  6106  0228  3A00               	xorlw	0	; case 0
  6107  0229  1903               	skipnz
  6108  022A  2A2C               	goto	l3049
  6109  022B  2A36               	goto	l2547
  6110  022C                     l3049:	
  6111                           
  6112                           ; Switch size 1, requested type "space"
  6113                           ; Number of cases is 10, Range of values is 0 to 9
  6114                           ; switch strategies available:
  6115                           ; Name         Instructions Cycles
  6116                           ; direct_byte           26     6 (fixed)
  6117                           ; simple_byte           31    16 (average)
  6118                           ; jumptable            260     6 (fixed)
  6119                           ;	Chosen strategy is direct_byte
  6120  022C  0846               	movf	_countabuf,w
  6121  022D  0084               	movwf	4
  6122  022E  300A               	movlw	10
  6123  022F  0204               	subwf	4,w
  6124  0230  1803               	skipnc
  6125  0231  2A36               	goto	l2547
  6126  0232  3185               	movlp	high S3051
  6127  0233  3504               	lslf	4,w
  6128  0234  3EEB               	addlw	low S3051
  6129  0235  0082               	movwf	2
  6130  0236                     l2547:	
  6131                           
  6132                           ;calibrate_mode.c: 125: }
  6133                           ;calibrate_mode.c: 127: countabuf++;
  6134  0236  3001               	movlw	1
  6135  0237  0020               	movlb	0	; select bank0
  6136  0238  07C6               	addwf	_countabuf,f
  6137  0239  3000               	movlw	0
  6138  023A  3DC7               	addwfc	_countabuf+1,f
  6139                           
  6140                           ;calibrate_mode.c: 128: unsigned char buf = calibdata.cargoLength & 0x00FF;
  6141  023B  0021               	movlb	1	; select bank1
  6142  023C  0856               	movf	_calibdata^(0+128),w
  6143  023D  0020               	movlb	0	; select bank0
  6144  023E  00DD               	movwf	??_Calibrate_download
  6145  023F  085D               	movf	??_Calibrate_download,w
  6146  0240  00E6               	movwf	Calibrate_download@buf
  6147                           
  6148                           ;calibrate_mode.c: 129: if(calibdata.cargoLength <= countabuf){
  6149  0241  0021               	movlb	1	; select bank1
  6150  0242  0857               	movf	(_calibdata+1)^(0+128),w
  6151  0243  0020               	movlb	0	; select bank0
  6152  0244  0247               	subwf	_countabuf+1,w
  6153  0245  1D03               	skipz
  6154  0246  2A4B               	goto	u1085
  6155  0247  0021               	movlb	1	; select bank1
  6156  0248  0856               	movf	_calibdata^(0+128),w
  6157  0249  0020               	movlb	0	; select bank0
  6158  024A  0246               	subwf	_countabuf,w
  6159  024B                     u1085:	
  6160  024B  1C03               	skipc
  6161  024C  0008               	return
  6162                           
  6163                           ;calibrate_mode.c: 130: calibdata.cargoLength = 0xFFFF;
  6164  024D  30FF               	movlw	255
  6165  024E  0021               	movlb	1	; select bank1
  6166  024F  00D6               	movwf	_calibdata^(0+128)
  6167  0250  30FF               	movlw	255
  6168  0251  00D7               	movwf	(_calibdata^(0+128)+1)
  6169                           
  6170                           ;calibrate_mode.c: 131: countabuf = 0;
  6171  0252  0020               	movlb	0	; select bank0
  6172  0253  01C6               	clrf	_countabuf
  6173  0254  01C7               	clrf	_countabuf+1
  6174                           
  6175                           ;calibrate_mode.c: 132: isMycargo = 1;
  6176  0255  14F8               	bsf	_isMycargo/(0+8),_isMycargo& (0+7)
  6177  0256  0008               	return
  6178  0257                     __end_of_Calibrate_download:	
  6179                           
  6180                           	psect	swtext2
  6181  05EB                     __pswtext2:	
  6182  05EB                     S3051:	
  6183  05EB  3181  298C         	ljmp	l2509
  6184  05ED  3181  299B         	ljmp	l2515
  6185  05EF  3181  29AD         	ljmp	l2517
  6186  05F1  3181  29B3         	ljmp	l2519
  6187  05F3  3181  29BB         	ljmp	l2521
  6188  05F5  3181  29C1         	ljmp	l2525
  6189  05F7  3181  29E1         	ljmp	l2529
  6190  05F9  3181  29F9         	ljmp	l2531
  6191  05FB  3182  2A14         	ljmp	l2533
  6192  05FD  3182  2A18         	ljmp	l104
  6193                           
  6194                           	psect	text10
  6195  03FC                     __ptext10:	
  6196 ;; *************** function _isEndpoint *****************
  6197 ;; Defined at:
  6198 ;;		line 30 in file "calibrate_mode.c"
  6199 ;; Parameters:    Size  Location     Type
  6200 ;;		None
  6201 ;; Auto vars:     Size  Location     Type
  6202 ;;  spi2data        1    6[BANK0 ] unsigned char 
  6203 ;; Return value:  Size  Location     Type
  6204 ;;		None               void
  6205 ;; Registers used:
  6206 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6207 ;; Tracked objects:
  6208 ;;		On entry : 0/0
  6209 ;;		On exit  : 0/0
  6210 ;;		Unchanged: 0/0
  6211 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6212 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6213 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6214 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6215 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6216 ;;Total ram usage:        6 bytes
  6217 ;; Hardware stack levels used:    1
  6218 ;; Hardware stack levels required when called:    4
  6219 ;; This function calls:
  6220 ;;		_setSPI1sendDataManual
  6221 ;; This function is called by:
  6222 ;;		_Calibrate_download
  6223 ;; This function uses a non-reentrant model
  6224 ;;
  6225                           
  6226                           
  6227                           ;psect for function _isEndpoint
  6228  03FC                     _isEndpoint:	
  6229                           
  6230                           ;calibrate_mode.c: 31: unsigned char spi2data = 0;
  6231                           
  6232                           ;incstack = 0
  6233                           ; Regs used in _isEndpoint: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6234  03FC  0020               	movlb	0	; select bank0
  6235  03FD  01DC               	clrf	isEndpoint@spi2data
  6236                           
  6237                           ;calibrate_mode.c: 32: if(count2 > 1){
  6238  03FE  3000               	movlw	0
  6239  03FF  024B               	subwf	_count2+1,w
  6240  0400  3002               	movlw	2
  6241  0401  1903               	skipnz
  6242  0402  024A               	subwf	_count2,w
  6243  0403  1C03               	skipc
  6244  0404  2C19               	goto	l2465
  6245                           
  6246                           ;calibrate_mode.c: 33: spi2data = spi2_buffer_data[count2 -1];
  6247  0405  084A               	movf	_count2,w
  6248  0406  3EFF               	addlw	255
  6249  0407  00D7               	movwf	??_isEndpoint
  6250  0408  30FF               	movlw	255
  6251  0409  3D4B               	addwfc	_count2+1,w
  6252  040A  00D8               	movwf	??_isEndpoint+1
  6253  040B  30F0               	movlw	240
  6254  040C  00D9               	movwf	??_isEndpoint+2
  6255  040D  3026               	movlw	38
  6256  040E  00DA               	movwf	??_isEndpoint+3
  6257  040F  0857               	movf	??_isEndpoint,w
  6258  0410  0759               	addwf	??_isEndpoint+2,w
  6259  0411  0086               	movwf	6
  6260  0412  0858               	movf	??_isEndpoint+1,w
  6261  0413  3D5A               	addwfc	??_isEndpoint+3,w
  6262  0414  0087               	movwf	7
  6263  0415  0801               	movf	1,w
  6264  0416  00DB               	movwf	??_isEndpoint+4
  6265  0417  085B               	movf	??_isEndpoint+4,w
  6266  0418  2C26               	goto	L27
  6267  0419                     l2465:	
  6268                           ;calibrate_mode.c: 34: }else{
  6269                           
  6270                           
  6271                           ;calibrate_mode.c: 35: spi2data = spi2_buffer_data[count2];
  6272  0419  30F0               	movlw	240
  6273  041A  00D7               	movwf	??_isEndpoint
  6274  041B  3026               	movlw	38
  6275  041C  00D8               	movwf	??_isEndpoint+1
  6276  041D  084A               	movf	_count2,w
  6277  041E  0757               	addwf	??_isEndpoint,w
  6278  041F  0086               	movwf	6
  6279  0420  084B               	movf	_count2+1,w
  6280  0421  3D58               	addwfc	??_isEndpoint+1,w
  6281  0422  0087               	movwf	7
  6282  0423  0801               	movf	1,w
  6283  0424  00D9               	movwf	??_isEndpoint+2
  6284  0425  0859               	movf	??_isEndpoint+2,w
  6285  0426                     L27:	
  6286  0426  00DC               	movwf	isEndpoint@spi2data
  6287                           
  6288                           ;calibrate_mode.c: 36: }
  6289                           ;calibrate_mode.c: 37: if(spi2data < 255){
  6290  0427  0A5C               	incf	isEndpoint@spi2data,w
  6291  0428  1903               	btfsc	3,2
  6292  0429  2C2E               	goto	l72
  6293                           
  6294                           ;calibrate_mode.c: 38: LATAbits.LATA0 = 1;
  6295  042A  0022               	movlb	2	; select bank2
  6296  042B  140C               	bsf	12,0	;volatile
  6297                           
  6298                           ;calibrate_mode.c: 39: isEndPointTrig = 0;
  6299  042C  1078               	bcf	_isEndPointTrig/(0+8),_isEndPointTrig& (0+7)
  6300                           
  6301                           ;calibrate_mode.c: 40: }else{
  6302  042D  0008               	return
  6303  042E                     l72:	
  6304                           
  6305                           ;calibrate_mode.c: 41: LATAbits.LATA0 = 0;
  6306  042E  0022               	movlb	2	; select bank2
  6307  042F  100C               	bcf	12,0	;volatile
  6308                           
  6309                           ;calibrate_mode.c: 42: setSPI1sendDataManual(0x00);
  6310  0430  3000               	movlw	0
  6311  0431  3186  2678         	fcall	_setSPI1sendDataManual
  6312  0433  0008               	return
  6313  0434                     __end_of_isEndpoint:	
  6314                           ;calibrate_mode.c: 43: }
  6315                           ;calibrate_mode.c: 44: return isEndPointTrig;
  6316                           ;	Return value of _isEndpoint is never used
  6317                           
  6318                           
  6319                           	psect	text11
  6320  0678                     __ptext11:	
  6321 ;; *************** function _setSPI1sendDataManual *****************
  6322 ;; Defined at:
  6323 ;;		line 103 in file "spiControl.c"
  6324 ;; Parameters:    Size  Location     Type
  6325 ;;  data            1    wreg     unsigned char 
  6326 ;; Auto vars:     Size  Location     Type
  6327 ;;  data            1    0[BANK0 ] unsigned char 
  6328 ;; Return value:  Size  Location     Type
  6329 ;;                  1    wreg      void 
  6330 ;; Registers used:
  6331 ;;		wreg
  6332 ;; Tracked objects:
  6333 ;;		On entry : 0/0
  6334 ;;		On exit  : 0/0
  6335 ;;		Unchanged: 0/0
  6336 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6337 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6338 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6340 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6341 ;;Total ram usage:        1 bytes
  6342 ;; Hardware stack levels used:    1
  6343 ;; Hardware stack levels required when called:    3
  6344 ;; This function calls:
  6345 ;;		Nothing
  6346 ;; This function is called by:
  6347 ;;		_isEndpoint
  6348 ;; This function uses a non-reentrant model
  6349 ;;
  6350                           
  6351                           
  6352                           ;psect for function _setSPI1sendDataManual
  6353  0678                     _setSPI1sendDataManual:	
  6354                           
  6355                           ;incstack = 0
  6356                           ; Regs used in _setSPI1sendDataManual: [wreg]
  6357                           ;setSPI1sendDataManual@data stored from wreg
  6358  0678  0020               	movlb	0	; select bank0
  6359  0679  00D6               	movwf	setSPI1sendDataManual@data
  6360                           
  6361                           ;spiControl.c: 104: SSP1BUF = data;
  6362  067A  0856               	movf	setSPI1sendDataManual@data,w
  6363  067B  0024               	movlb	4	; select bank4
  6364  067C  0091               	movwf	17	;volatile
  6365  067D  0008               	return
  6366  067E                     __end_of_setSPI1sendDataManual:	
  6367                           
  6368                           	psect	text12
  6369  05D4                     __ptext12:	
  6370 ;; *************** function _InitCalibrate *****************
  6371 ;; Defined at:
  6372 ;;		line 62 in file "calibrate_mode.c"
  6373 ;; Parameters:    Size  Location     Type
  6374 ;;		None
  6375 ;; Auto vars:     Size  Location     Type
  6376 ;;		None
  6377 ;; Return value:  Size  Location     Type
  6378 ;;                  1    wreg      void 
  6379 ;; Registers used:
  6380 ;;		wreg, status,2
  6381 ;; Tracked objects:
  6382 ;;		On entry : 0/0
  6383 ;;		On exit  : 0/0
  6384 ;;		Unchanged: 0/0
  6385 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6386 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6387 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6388 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6389 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6390 ;;Total ram usage:        0 bytes
  6391 ;; Hardware stack levels used:    1
  6392 ;; Hardware stack levels required when called:    3
  6393 ;; This function calls:
  6394 ;;		Nothing
  6395 ;; This function is called by:
  6396 ;;		_Calibrate_download
  6397 ;;		_main
  6398 ;; This function uses a non-reentrant model
  6399 ;;
  6400                           
  6401                           
  6402                           ;psect for function _InitCalibrate
  6403  05D4                     _InitCalibrate:	
  6404                           
  6405                           ;calibrate_mode.c: 63: isEndPointTrig = 1;
  6406                           
  6407                           ;incstack = 0
  6408                           ; Regs used in _InitCalibrate: [wreg+status,2]
  6409  05D4  1478               	bsf	_isEndPointTrig/(0+8),_isEndPointTrig& (0+7)
  6410                           
  6411                           ;calibrate_mode.c: 64: calibdata.cargoLength = 0xFFFF;
  6412  05D5  30FF               	movlw	255
  6413  05D6  0021               	movlb	1	; select bank1
  6414  05D7  00D6               	movwf	_calibdata^(0+128)
  6415  05D8  30FF               	movlw	255
  6416  05D9  00D7               	movwf	(_calibdata^(0+128)+1)
  6417                           
  6418                           ;calibrate_mode.c: 65: calibdata.index = 0x00;
  6419  05DA  01D9               	clrf	(_calibdata^(0+128)+3)
  6420                           
  6421                           ;calibrate_mode.c: 66: calibdata.command =0x00;
  6422  05DB  01D8               	clrf	(_calibdata^(0+128)+2)
  6423                           
  6424                           ;calibrate_mode.c: 67: calibdata.WorkingCount = 0;
  6425  05DC  3000               	movlw	0
  6426  05DD  00DD               	movwf	((_calibdata+3)^(0+128)+4)
  6427  05DE  3000               	movlw	0
  6428  05DF  00DC               	movwf	((_calibdata+2)^(0+128)+4)
  6429  05E0  3000               	movlw	0
  6430  05E1  00DB               	movwf	((_calibdata+1)^(0+128)+4)
  6431  05E2  3000               	movlw	0
  6432  05E3  00DA               	movwf	(_calibdata^(0+128)+4)
  6433                           
  6434                           ;calibrate_mode.c: 68: linkInfo.endpoint = 0;
  6435  05E4  0020               	movlb	0	; select bank0
  6436  05E5  01B5               	clrf	_linkInfo+5
  6437                           
  6438                           ;calibrate_mode.c: 69: linkInfo.My_address = 0;
  6439  05E6  01B0               	clrf	_linkInfo
  6440                           
  6441                           ;calibrate_mode.c: 70: countabuf = 0;
  6442  05E7  01C6               	clrf	_countabuf
  6443  05E8  01C7               	clrf	_countabuf+1
  6444                           
  6445                           ;calibrate_mode.c: 71: isMycargo = 1;
  6446  05E9  14F8               	bsf	_isMycargo/(0+8),_isMycargo& (0+7)
  6447  05EA  0008               	return
  6448  05EB                     __end_of_InitCalibrate:	
  6449                           
  6450                           	psect	text13
  6451  0379                     __ptext13:	
  6452 ;; *************** function _read_train *****************
  6453 ;; Defined at:
  6454 ;;		line 202 in file "main.c"
  6455 ;; Parameters:    Size  Location     Type
  6456 ;;		None
  6457 ;; Auto vars:     Size  Location     Type
  6458 ;;  bufint          2    2[BANK0 ] unsigned int 
  6459 ;; Return value:  Size  Location     Type
  6460 ;;                  1    wreg      void 
  6461 ;; Registers used:
  6462 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6463 ;; Tracked objects:
  6464 ;;		On entry : 0/0
  6465 ;;		On exit  : 0/0
  6466 ;;		Unchanged: 0/0
  6467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6468 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6469 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6470 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6471 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6472 ;;Total ram usage:        4 bytes
  6473 ;; Hardware stack levels used:    1
  6474 ;; Hardware stack levels required when called:    3
  6475 ;; This function calls:
  6476 ;;		Nothing
  6477 ;; This function is called by:
  6478 ;;		_main
  6479 ;; This function uses a non-reentrant model
  6480 ;;
  6481                           
  6482                           
  6483                           ;psect for function _read_train
  6484  0379                     _read_train:	
  6485                           
  6486                           ;main.c: 203: unsigned int bufint = spi1_Read_data;
  6487                           
  6488                           ;incstack = 0
  6489                           ; Regs used in _read_train: [wreg-fsr0h+status,2+status,0]
  6490  0379  0879               	movf	_spi1_Read_data,w
  6491  037A  0020               	movlb	0	; select bank0
  6492  037B  00D6               	movwf	??_read_train
  6493  037C  01D7               	clrf	??_read_train+1
  6494  037D  0856               	movf	??_read_train,w
  6495  037E  00D8               	movwf	read_train@bufint
  6496  037F  0857               	movf	??_read_train+1,w
  6497  0380  00D9               	movwf	read_train@bufint+1
  6498                           
  6499                           ;main.c: 204: switch(trainPos){
  6500  0381  2B9E               	goto	l2873
  6501  0382                     l2863:	
  6502                           ;main.c: 207: case 1:
  6503                           
  6504                           ;main.c: 206: break;
  6505                           
  6506                           ;main.c: 205: case 0:
  6507                           
  6508                           
  6509                           ;main.c: 208: st_dataLength = (bufint << 8 | 0x00FF);
  6510  0382  0858               	movf	read_train@bufint,w
  6511  0383  00D7               	movwf	??_read_train+1
  6512  0384  01D6               	clrf	??_read_train
  6513  0385  30FF               	movlw	255
  6514  0386  0456               	iorwf	??_read_train,w
  6515  0387  00EE               	movwf	_st_dataLength
  6516  0388  3000               	movlw	0
  6517  0389  0457               	iorwf	??_read_train+1,w
  6518  038A  2B96               	goto	L28
  6519  038B                     l2865:	
  6520                           ;main.c: 210: case 2:
  6521                           
  6522                           ;main.c: 209: break;
  6523                           
  6524                           
  6525                           ;main.c: 211: st_dataLength = st_dataLength & (bufint | 0xFF00);
  6526  038B  3000               	movlw	0
  6527  038C  0458               	iorwf	read_train@bufint,w
  6528  038D  00D6               	movwf	??_read_train
  6529  038E  30FF               	movlw	255
  6530  038F  0459               	iorwf	read_train@bufint+1,w
  6531  0390  00D7               	movwf	??_read_train+1
  6532  0391  086E               	movf	_st_dataLength,w
  6533  0392  0556               	andwf	??_read_train,w
  6534  0393  00EE               	movwf	_st_dataLength
  6535  0394  086F               	movf	_st_dataLength+1,w
  6536  0395  0557               	andwf	??_read_train+1,w
  6537  0396                     L28:	
  6538  0396  00EF               	movwf	_st_dataLength+1
  6539                           
  6540                           ;main.c: 212: break;
  6541  0397  2BB1               	goto	l2875
  6542  0398                     l2867:	
  6543                           ;main.c: 213: case 3:
  6544                           
  6545                           
  6546                           ;main.c: 214: st_type = spi1_Read_data;
  6547  0398  0879               	movf	_spi1_Read_data,w
  6548  0399  00D6               	movwf	??_read_train
  6549  039A  0856               	movf	??_read_train,w
  6550  039B  00D5               	movwf	_st_type
  6551                           
  6552                           ;main.c: 215: isreadTrain = 1;
  6553  039C  1477               	bsf	_isreadTrain/(0+8),_isreadTrain& (0+7)
  6554                           
  6555                           ;main.c: 219: }
  6556                           
  6557                           ;main.c: 218: break;
  6558                           
  6559                           ;main.c: 217: default :
  6560                           
  6561                           ;main.c: 216: break;
  6562  039D  2BB1               	goto	l2875
  6563  039E                     l2873:	
  6564                           
  6565                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6566                           ; Switch size 1, requested type "space"
  6567                           ; Number of cases is 1, Range of values is 0 to 0
  6568                           ; switch strategies available:
  6569                           ; Name         Instructions Cycles
  6570                           ; simple_byte            4     3 (average)
  6571                           ; direct_byte            8     6 (fixed)
  6572                           ; jumptable            260     6 (fixed)
  6573                           ;	Chosen strategy is simple_byte
  6574  039E  083F               	movf	_trainPos+1,w
  6575  039F  3A00               	xorlw	0	; case 0
  6576  03A0  1903               	skipnz
  6577  03A1  2BA3               	goto	l3053
  6578  03A2  2BB1               	goto	l2875
  6579  03A3                     l3053:	
  6580                           
  6581                           ; Switch size 1, requested type "space"
  6582                           ; Number of cases is 4, Range of values is 0 to 3
  6583                           ; switch strategies available:
  6584                           ; Name         Instructions Cycles
  6585                           ; simple_byte           13     7 (average)
  6586                           ; direct_byte           14     6 (fixed)
  6587                           ; jumptable            260     6 (fixed)
  6588                           ;	Chosen strategy is simple_byte
  6589  03A3  083E               	movf	_trainPos,w
  6590  03A4  3A00               	xorlw	0	; case 0
  6591  03A5  1903               	skipnz
  6592  03A6  2BB1               	goto	l2875
  6593  03A7  3A01               	xorlw	1	; case 1
  6594  03A8  1903               	skipnz
  6595  03A9  2B82               	goto	l2863
  6596  03AA  3A03               	xorlw	3	; case 2
  6597  03AB  1903               	skipnz
  6598  03AC  2B8B               	goto	l2865
  6599  03AD  3A01               	xorlw	1	; case 3
  6600  03AE  1903               	skipnz
  6601  03AF  2B98               	goto	l2867
  6602  03B0  2BB1               	goto	l2875
  6603  03B1                     l2875:	
  6604                           
  6605                           ;main.c: 221: if(read_count1 == 256){
  6606  03B1  0343               	decf	_read_count1+1,w
  6607  03B2  0442               	iorwf	_read_count1,w
  6608  03B3  1D03               	btfss	3,2
  6609  03B4  2BB7               	goto	l2879
  6610                           
  6611                           ;main.c: 222: read_count1 = 0;
  6612  03B5  01C2               	clrf	_read_count1
  6613  03B6  01C3               	clrf	_read_count1+1
  6614  03B7                     l2879:	
  6615                           
  6616                           ;main.c: 223: }
  6617                           ;main.c: 224: if(read_count2 == 256){
  6618  03B7  0341               	decf	_read_count2+1,w
  6619  03B8  0440               	iorwf	_read_count2,w
  6620  03B9  1D03               	btfss	3,2
  6621  03BA  0008               	return
  6622                           
  6623                           ;main.c: 225: read_count2 = 0;
  6624  03BB  01C0               	clrf	_read_count2
  6625  03BC  01C1               	clrf	_read_count2+1
  6626  03BD  0008               	return
  6627  03BE                     __end_of_read_train:	
  6628                           
  6629                           	psect	text14
  6630  0620                     __ptext14:	
  6631 ;; *************** function _isSPI1read *****************
  6632 ;; Defined at:
  6633 ;;		line 67 in file "spiControl.c"
  6634 ;; Parameters:    Size  Location     Type
  6635 ;;		None
  6636 ;; Auto vars:     Size  Location     Type
  6637 ;;		None
  6638 ;; Return value:  Size  Location     Type
  6639 ;;		None               void
  6640 ;; Registers used:
  6641 ;;		wreg, status,2, status,0
  6642 ;; Tracked objects:
  6643 ;;		On entry : 0/0
  6644 ;;		On exit  : 0/0
  6645 ;;		Unchanged: 0/0
  6646 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6647 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6648 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6649 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6650 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6651 ;;Total ram usage:        0 bytes
  6652 ;; Hardware stack levels used:    1
  6653 ;; Hardware stack levels required when called:    3
  6654 ;; This function calls:
  6655 ;;		Nothing
  6656 ;; This function is called by:
  6657 ;;		_main
  6658 ;; This function uses a non-reentrant model
  6659 ;;
  6660                           
  6661                           
  6662                           ;psect for function _isSPI1read
  6663  0620                     _isSPI1read:	
  6664                           
  6665                           ;spiControl.c: 68: if(read_count1 == count1){
  6666                           
  6667                           ;incstack = 0
  6668                           ; Regs used in _isSPI1read: [wreg+status,2+status,0]
  6669  0620  0020               	movlb	0	; select bank0
  6670  0621  0845               	movf	_count1+1,w
  6671  0622  0643               	xorwf	_read_count1+1,w
  6672  0623  1D03               	skipz
  6673  0624  2E27               	goto	u1255
  6674  0625  0844               	movf	_count1,w
  6675  0626  0642               	xorwf	_read_count1,w
  6676  0627                     u1255:	
  6677  0627  1D03               	skipz
  6678  0628  2E2B               	goto	l2857
  6679                           
  6680                           ;spiControl.c: 69: return 1;
  6681  0629  1403               	setc
  6682                           
  6683                           ;spiControl.c: 70: }else{
  6684  062A  0008               	return
  6685  062B                     l2857:	
  6686                           
  6687                           ;spiControl.c: 71: return 0;
  6688  062B  1003               	clrc
  6689  062C  0008               	return
  6690  062D                     __end_of_isSPI1read:	
  6691                           
  6692                           	psect	text15
  6693  0671                     __ptext15:	
  6694 ;; *************** function _io_init *****************
  6695 ;; Defined at:
  6696 ;;		line 131 in file "main.c"
  6697 ;; Parameters:    Size  Location     Type
  6698 ;;		None
  6699 ;; Auto vars:     Size  Location     Type
  6700 ;;		None
  6701 ;; Return value:  Size  Location     Type
  6702 ;;                  1    wreg      void 
  6703 ;; Registers used:
  6704 ;;		None
  6705 ;; Tracked objects:
  6706 ;;		On entry : 0/0
  6707 ;;		On exit  : 0/0
  6708 ;;		Unchanged: 0/0
  6709 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6710 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6711 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6712 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6713 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6714 ;;Total ram usage:        0 bytes
  6715 ;; Hardware stack levels used:    1
  6716 ;; Hardware stack levels required when called:    3
  6717 ;; This function calls:
  6718 ;;		Nothing
  6719 ;; This function is called by:
  6720 ;;		_main
  6721 ;; This function uses a non-reentrant model
  6722 ;;
  6723                           
  6724                           
  6725                           ;psect for function _io_init
  6726  0671                     _io_init:	
  6727                           
  6728                           ;main.c: 132: PIE0bits.IOCIE = 1;
  6729                           
  6730                           ;incstack = 0
  6731                           ; Regs used in _io_init: []
  6732  0671  0021               	movlb	1	; select bank1
  6733  0672  1610               	bsf	16,4	;volatile
  6734                           
  6735                           ;main.c: 133: PIE0bits.INTE = 1;
  6736  0673  1410               	bsf	16,0	;volatile
  6737                           
  6738                           ;main.c: 134: INTCONbits.INTEDG = 1;
  6739  0674  140B               	bsf	11,0	;volatile
  6740                           
  6741                           ;main.c: 135: IOCAFbits.IOCAF3 = 1;
  6742  0675  0027               	movlb	7	; select bank7
  6743  0676  1593               	bsf	19,3	;volatile
  6744  0677  0008               	return
  6745  0678                     __end_of_io_init:	
  6746                           
  6747                           	psect	text16
  6748  0331                     __ptext16:	
  6749 ;; *************** function _initTrain *****************
  6750 ;; Defined at:
  6751 ;;		line 138 in file "main.c"
  6752 ;; Parameters:    Size  Location     Type
  6753 ;;		None
  6754 ;; Auto vars:     Size  Location     Type
  6755 ;;		None
  6756 ;; Return value:  Size  Location     Type
  6757 ;;                  1    wreg      void 
  6758 ;; Registers used:
  6759 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6760 ;; Tracked objects:
  6761 ;;		On entry : 0/0
  6762 ;;		On exit  : 0/0
  6763 ;;		Unchanged: 0/0
  6764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6765 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6766 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6767 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6768 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6769 ;;Total ram usage:        3 bytes
  6770 ;; Hardware stack levels used:    1
  6771 ;; Hardware stack levels required when called:    5
  6772 ;; This function calls:
  6773 ;;		_isTrainSt
  6774 ;;		_resetTrainData
  6775 ;; This function is called by:
  6776 ;;		_main
  6777 ;; This function uses a non-reentrant model
  6778 ;;
  6779                           
  6780                           
  6781                           ;psect for function _initTrain
  6782  0331                     _initTrain:	
  6783                           
  6784                           ;main.c: 139: spi1_Read_data = spi1_buffer_data[read_count1];
  6785                           
  6786                           ;incstack = 0
  6787                           ; Regs used in _initTrain: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6788  0331  30F0               	movlw	240
  6789  0332  0020               	movlb	0	; select bank0
  6790  0333  00DF               	movwf	??_initTrain
  6791  0334  3024               	movlw	36
  6792  0335  00E0               	movwf	??_initTrain+1
  6793  0336  0842               	movf	_read_count1,w
  6794  0337  075F               	addwf	??_initTrain,w
  6795  0338  0086               	movwf	6
  6796  0339  0843               	movf	_read_count1+1,w
  6797  033A  3D60               	addwfc	??_initTrain+1,w
  6798  033B  0087               	movwf	7
  6799  033C  0801               	movf	1,w
  6800  033D  00E1               	movwf	??_initTrain+2
  6801  033E  0861               	movf	??_initTrain+2,w
  6802  033F  00F9               	movwf	_spi1_Read_data
  6803                           
  6804                           ;main.c: 140: spi2_Send_data = spi1_Read_data;
  6805  0340  0879               	movf	_spi1_Read_data,w
  6806  0341  00DF               	movwf	??_initTrain
  6807  0342  085F               	movf	??_initTrain,w
  6808  0343  00D4               	movwf	_spi2_Send_data
  6809                           
  6810                           ;main.c: 141: read_count1++;
  6811  0344  3001               	movlw	1
  6812  0345  07C2               	addwf	_read_count1,f
  6813  0346  3000               	movlw	0
  6814  0347  3DC3               	addwfc	_read_count1+1,f
  6815                           
  6816                           ;main.c: 142: if(isTrainSt(spi1_Read_data)){
  6817  0348  0879               	movf	_spi1_Read_data,w
  6818  0349  3184  2434  3183   	fcall	_isTrainSt
  6819  034C  1C03               	btfss	3,0
  6820  034D  2B5F               	goto	l2809
  6821                           
  6822                           ;main.c: 143: LATAbits.LATA0 = 0;
  6823  034E  0022               	movlb	2	; select bank2
  6824  034F  100C               	bcf	12,0	;volatile
  6825                           
  6826                           ;main.c: 144: trainPos = 0;
  6827  0350  0020               	movlb	0	; select bank0
  6828  0351  01BE               	clrf	_trainPos
  6829  0352  01BF               	clrf	_trainPos+1
  6830                           
  6831                           ;main.c: 145: read_count1 = 0;
  6832  0353  01C2               	clrf	_read_count1
  6833  0354  01C3               	clrf	_read_count1+1
  6834                           
  6835                           ;main.c: 146: resetTrainData();
  6836  0355  3186  2668  3183   	fcall	_resetTrainData
  6837                           
  6838                           ;main.c: 147: isreadTrain = 0;
  6839  0358  1077               	bcf	_isreadTrain/(0+8),_isreadTrain& (0+7)
  6840                           
  6841                           ;main.c: 148: count1 = 0;
  6842  0359  0020               	movlb	0	; select bank0
  6843  035A  01C4               	clrf	_count1
  6844  035B  01C5               	clrf	_count1+1
  6845                           
  6846                           ;main.c: 149: countabuf = 0;
  6847  035C  01C6               	clrf	_countabuf
  6848  035D  01C7               	clrf	_countabuf+1
  6849                           
  6850                           ;main.c: 150: }else{
  6851  035E  2B64               	goto	l315
  6852  035F                     l2809:	
  6853                           
  6854                           ;main.c: 151: trainPos++;
  6855  035F  3001               	movlw	1
  6856  0360  0020               	movlb	0	; select bank0
  6857  0361  07BE               	addwf	_trainPos,f
  6858  0362  3000               	movlw	0
  6859  0363  3DBF               	addwfc	_trainPos+1,f
  6860  0364                     l315:	
  6861                           
  6862                           ;main.c: 152: }
  6863                           ;main.c: 153: if(st_dataLength < trainPos){
  6864  0364  083F               	movf	_trainPos+1,w
  6865  0365  026F               	subwf	_st_dataLength+1,w
  6866  0366  1D03               	skipz
  6867  0367  2B6A               	goto	u1235
  6868  0368  083E               	movf	_trainPos,w
  6869  0369  026E               	subwf	_st_dataLength,w
  6870  036A                     u1235:	
  6871  036A  1803               	skipnc
  6872  036B  0008               	return
  6873                           
  6874                           ;main.c: 154: trainPos = 0;
  6875  036C  01BE               	clrf	_trainPos
  6876  036D  01BF               	clrf	_trainPos+1
  6877                           
  6878                           ;main.c: 155: read_count1 = 0;
  6879  036E  01C2               	clrf	_read_count1
  6880  036F  01C3               	clrf	_read_count1+1
  6881                           
  6882                           ;main.c: 156: resetTrainData();
  6883  0370  3186  2668         	fcall	_resetTrainData
  6884                           
  6885                           ;main.c: 157: isreadTrain = 0;
  6886  0372  1077               	bcf	_isreadTrain/(0+8),_isreadTrain& (0+7)
  6887                           
  6888                           ;main.c: 158: count1 = 0;
  6889  0373  0020               	movlb	0	; select bank0
  6890  0374  01C4               	clrf	_count1
  6891  0375  01C5               	clrf	_count1+1
  6892                           
  6893                           ;main.c: 159: countabuf = 0;
  6894  0376  01C6               	clrf	_countabuf
  6895  0377  01C7               	clrf	_countabuf+1
  6896  0378  0008               	return
  6897  0379                     __end_of_initTrain:	
  6898                           
  6899                           	psect	text17
  6900  0668                     __ptext17:	
  6901 ;; *************** function _resetTrainData *****************
  6902 ;; Defined at:
  6903 ;;		line 184 in file "main.c"
  6904 ;; Parameters:    Size  Location     Type
  6905 ;;		None
  6906 ;; Auto vars:     Size  Location     Type
  6907 ;;		None
  6908 ;; Return value:  Size  Location     Type
  6909 ;;                  1    wreg      void 
  6910 ;; Registers used:
  6911 ;;		wreg, status,2, status,0, pclath, cstack
  6912 ;; Tracked objects:
  6913 ;;		On entry : 0/0
  6914 ;;		On exit  : 0/0
  6915 ;;		Unchanged: 0/0
  6916 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6917 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6918 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6920 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6921 ;;Total ram usage:        0 bytes
  6922 ;; Hardware stack levels used:    1
  6923 ;; Hardware stack levels required when called:    4
  6924 ;; This function calls:
  6925 ;;		_restartCargo
  6926 ;; This function is called by:
  6927 ;;		_initTrain
  6928 ;; This function uses a non-reentrant model
  6929 ;;
  6930                           
  6931                           
  6932                           ;psect for function _resetTrainData
  6933  0668                     _resetTrainData:	
  6934                           
  6935                           ;main.c: 185: st_dataLength = 0xFFFF;
  6936                           
  6937                           ;incstack = 0
  6938                           ; Regs used in _resetTrainData: [wreg+status,2+status,0+pclath+cstack]
  6939  0668  30FF               	movlw	255
  6940  0669  0020               	movlb	0	; select bank0
  6941  066A  00EE               	movwf	_st_dataLength
  6942  066B  30FF               	movlw	255
  6943  066C  00EF               	movwf	_st_dataLength+1
  6944                           
  6945                           ;main.c: 186: st_type = 0;
  6946  066D  01D5               	clrf	_st_type
  6947                           
  6948                           ;main.c: 187: restartCargo();
  6949  066E  3185  25FF         	fcall	_restartCargo
  6950  0670  0008               	return
  6951  0671                     __end_of_resetTrainData:	
  6952                           
  6953                           	psect	text18
  6954  05FF                     __ptext18:	
  6955 ;; *************** function _restartCargo *****************
  6956 ;; Defined at:
  6957 ;;		line 37 in file "normal_mode.c"
  6958 ;; Parameters:    Size  Location     Type
  6959 ;;		None
  6960 ;; Auto vars:     Size  Location     Type
  6961 ;;		None
  6962 ;; Return value:  Size  Location     Type
  6963 ;;                  1    wreg      void 
  6964 ;; Registers used:
  6965 ;;		wreg, status,2
  6966 ;; Tracked objects:
  6967 ;;		On entry : 0/0
  6968 ;;		On exit  : 0/0
  6969 ;;		Unchanged: 0/0
  6970 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6971 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6972 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6973 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6974 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6975 ;;Total ram usage:        0 bytes
  6976 ;; Hardware stack levels used:    1
  6977 ;; Hardware stack levels required when called:    3
  6978 ;; This function calls:
  6979 ;;		Nothing
  6980 ;; This function is called by:
  6981 ;;		_resetTrainData
  6982 ;;		_readCargo
  6983 ;; This function uses a non-reentrant model
  6984 ;;
  6985                           
  6986                           
  6987                           ;psect for function _restartCargo
  6988  05FF                     _restartCargo:	
  6989                           
  6990                           ;normal_mode.c: 38: cargoData.WorkingCount = 0;
  6991                           
  6992                           ;incstack = 0
  6993                           ; Regs used in _restartCargo: [wreg+status,2]
  6994  05FF  3000               	movlw	0
  6995  0600  0020               	movlb	0	; select bank0
  6996  0601  00AF               	movwf	_cargoData+15
  6997  0602  3000               	movlw	0
  6998  0603  00AE               	movwf	_cargoData+14
  6999  0604  3000               	movlw	0
  7000  0605  00AD               	movwf	_cargoData+13
  7001  0606  3000               	movlw	0
  7002  0607  00AC               	movwf	_cargoData+12
  7003                           
  7004                           ;normal_mode.c: 39: cargoData.address = 0;
  7005  0608  01A4               	clrf	_cargoData+4
  7006                           
  7007                           ;normal_mode.c: 40: cargoData.cargoLength = 0xFFFF;
  7008  0609  30FF               	movlw	255
  7009  060A  00A0               	movwf	_cargoData
  7010  060B  30FF               	movlw	255
  7011  060C  00A1               	movwf	_cargoData+1
  7012                           
  7013                           ;normal_mode.c: 41: cargoData.command = 0;
  7014  060D  01A2               	clrf	_cargoData+2
  7015                           
  7016                           ;normal_mode.c: 42: cargoData.index = 0;
  7017  060E  01A3               	clrf	_cargoData+3
  7018  060F  0008               	return
  7019  0610                     __end_of_restartCargo:	
  7020                           
  7021                           	psect	text19
  7022  0434                     __ptext19:	
  7023 ;; *************** function _isTrainSt *****************
  7024 ;; Defined at:
  7025 ;;		line 190 in file "main.c"
  7026 ;; Parameters:    Size  Location     Type
  7027 ;;  buf             1    wreg     unsigned char 
  7028 ;; Auto vars:     Size  Location     Type
  7029 ;;  buf             1    8[BANK0 ] unsigned char 
  7030 ;; Return value:  Size  Location     Type
  7031 ;;		None               void
  7032 ;; Registers used:
  7033 ;;		wreg, status,2, status,0
  7034 ;; Tracked objects:
  7035 ;;		On entry : 0/0
  7036 ;;		On exit  : 0/0
  7037 ;;		Unchanged: 0/0
  7038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7039 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7040 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7041 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7042 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7043 ;;Total ram usage:        9 bytes
  7044 ;; Hardware stack levels used:    1
  7045 ;; Hardware stack levels required when called:    3
  7046 ;; This function calls:
  7047 ;;		Nothing
  7048 ;; This function is called by:
  7049 ;;		_initTrain
  7050 ;; This function uses a non-reentrant model
  7051 ;;
  7052                           
  7053                           
  7054                           ;psect for function _isTrainSt
  7055  0434                     _isTrainSt:	
  7056                           
  7057                           ;incstack = 0
  7058                           ; Regs used in _isTrainSt: [wreg+status,2+status,0]
  7059                           ;isTrainSt@buf stored from wreg
  7060  0434  0020               	movlb	0	; select bank0
  7061  0435  00DE               	movwf	isTrainSt@buf
  7062                           
  7063                           ;main.c: 191: startTrainBytes = startTrainBytes << 8 | buf;
  7064  0436  085E               	movf	isTrainSt@buf,w
  7065  0437  00D6               	movwf	??_isTrainSt
  7066  0438  01D7               	clrf	??_isTrainSt+1
  7067  0439  01D8               	clrf	??_isTrainSt+2
  7068  043A  01D9               	clrf	??_isTrainSt+3
  7069  043B  0836               	movf	_startTrainBytes,w
  7070  043C  00DA               	movwf	??_isTrainSt+4
  7071  043D  0837               	movf	_startTrainBytes+1,w
  7072  043E  00DB               	movwf	??_isTrainSt+5
  7073  043F  0838               	movf	_startTrainBytes+2,w
  7074  0440  00DC               	movwf	??_isTrainSt+6
  7075  0441  0839               	movf	_startTrainBytes+3,w
  7076  0442  00DD               	movwf	??_isTrainSt+7
  7077  0443  3008               	movlw	8
  7078  0444                     u1175:	
  7079  0444  35DA               	lslf	??_isTrainSt+4,f
  7080  0445  0DDB               	rlf	??_isTrainSt+5,f
  7081  0446  0DDC               	rlf	??_isTrainSt+6,f
  7082  0447  0DDD               	rlf	??_isTrainSt+7,f
  7083  0448  0B89               	decfsz	9,f
  7084  0449  2C44               	goto	u1175
  7085  044A  085A               	movf	??_isTrainSt+4,w
  7086  044B  04D6               	iorwf	??_isTrainSt,f
  7087  044C  085B               	movf	??_isTrainSt+5,w
  7088  044D  04D7               	iorwf	??_isTrainSt+1,f
  7089  044E  085C               	movf	??_isTrainSt+6,w
  7090  044F  04D8               	iorwf	??_isTrainSt+2,f
  7091  0450  085D               	movf	??_isTrainSt+7,w
  7092  0451  04D9               	iorwf	??_isTrainSt+3,f
  7093  0452  0859               	movf	??_isTrainSt+3,w
  7094  0453  00B9               	movwf	_startTrainBytes+3
  7095  0454  0858               	movf	??_isTrainSt+2,w
  7096  0455  00B8               	movwf	_startTrainBytes+2
  7097  0456  0857               	movf	??_isTrainSt+1,w
  7098  0457  00B7               	movwf	_startTrainBytes+1
  7099  0458  0856               	movf	??_isTrainSt,w
  7100  0459  00B6               	movwf	_startTrainBytes
  7101                           
  7102                           ;main.c: 192: if(startTrainBytes == 0xFFFFFFFF){
  7103  045A  0A36               	incf	_startTrainBytes,w
  7104  045B  1D03               	skipz
  7105  045C  2C68               	goto	l2655
  7106  045D  0A37               	incf	_startTrainBytes+1,w
  7107  045E  1D03               	skipz
  7108  045F  2C68               	goto	l2655
  7109  0460  0A38               	incf	_startTrainBytes+2,w
  7110  0461  1D03               	skipz
  7111  0462  2C68               	goto	l2655
  7112  0463  0A39               	incf	_startTrainBytes+3,w
  7113  0464  1D03               	btfss	3,2
  7114  0465  2C68               	goto	l2655
  7115                           
  7116                           ;main.c: 193: return 1;
  7117  0466  1403               	setc
  7118                           
  7119                           ;main.c: 194: }else{
  7120  0467  0008               	return
  7121  0468                     l2655:	
  7122                           
  7123                           ;main.c: 195: return 0;
  7124  0468  1003               	clrc
  7125  0469  0008               	return
  7126  046A                     __end_of_isTrainSt:	
  7127                           
  7128                           	psect	text20
  7129  0257                     __ptext20:	
  7130 ;; *************** function _initComu_types *****************
  7131 ;; Defined at:
  7132 ;;		line 18 in file "comu_type.c"
  7133 ;; Parameters:    Size  Location     Type
  7134 ;;		None
  7135 ;; Auto vars:     Size  Location     Type
  7136 ;;		None
  7137 ;; Return value:  Size  Location     Type
  7138 ;;                  1    wreg      void 
  7139 ;; Registers used:
  7140 ;;		wreg
  7141 ;; Tracked objects:
  7142 ;;		On entry : 0/0
  7143 ;;		On exit  : 0/0
  7144 ;;		Unchanged: 0/0
  7145 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7146 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7147 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7148 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7149 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7150 ;;Total ram usage:        1 bytes
  7151 ;; Hardware stack levels used:    1
  7152 ;; Hardware stack levels required when called:    3
  7153 ;; This function calls:
  7154 ;;		Nothing
  7155 ;; This function is called by:
  7156 ;;		_main
  7157 ;; This function uses a non-reentrant model
  7158 ;;
  7159                           
  7160                           
  7161                           ;psect for function _initComu_types
  7162  0257                     _initComu_types:	
  7163                           
  7164                           ;comu_type.c: 19: comu_types[0] = 0b00111111;
  7165                           
  7166                           ;incstack = 0
  7167                           ; Regs used in _initComu_types: [wreg]
  7168  0257  303F               	movlw	63
  7169  0258  0020               	movlb	0	; select bank0
  7170  0259  00D6               	movwf	??_initComu_types
  7171  025A  0856               	movf	??_initComu_types,w
  7172  025B  0021               	movlb	1	; select bank1
  7173  025C  00B2               	movwf	_comu_types^(0+128)
  7174                           
  7175                           ;comu_type.c: 20: comu_types[1] = 0b01111111;
  7176  025D  307F               	movlw	127
  7177  025E  0020               	movlb	0	; select bank0
  7178  025F  00D6               	movwf	??_initComu_types
  7179  0260  0856               	movf	??_initComu_types,w
  7180  0261  0021               	movlb	1	; select bank1
  7181  0262  00B3               	movwf	(_comu_types^(0+128)+1)
  7182                           
  7183                           ;comu_type.c: 21: comu_types[2] = 0b10011111;
  7184  0263  309F               	movlw	159
  7185  0264  0020               	movlb	0	; select bank0
  7186  0265  00D6               	movwf	??_initComu_types
  7187  0266  0856               	movf	??_initComu_types,w
  7188  0267  0021               	movlb	1	; select bank1
  7189  0268  00B4               	movwf	(_comu_types^(0+128)+2)
  7190                           
  7191                           ;comu_type.c: 22: comu_types[3] = 0b10101111;
  7192  0269  30AF               	movlw	175
  7193  026A  0020               	movlb	0	; select bank0
  7194  026B  00D6               	movwf	??_initComu_types
  7195  026C  0856               	movf	??_initComu_types,w
  7196  026D  0021               	movlb	1	; select bank1
  7197  026E  00B5               	movwf	(_comu_types^(0+128)+3)
  7198                           
  7199                           ;comu_type.c: 23: comu_types[4] = 0b10111111;
  7200  026F  30BF               	movlw	191
  7201  0270  0020               	movlb	0	; select bank0
  7202  0271  00D6               	movwf	??_initComu_types
  7203  0272  0856               	movf	??_initComu_types,w
  7204  0273  0021               	movlb	1	; select bank1
  7205  0274  00B6               	movwf	(_comu_types^(0+128)+4)
  7206                           
  7207                           ;comu_type.c: 24: comu_types[5] = 0b11001111;
  7208  0275  30CF               	movlw	207
  7209  0276  0020               	movlb	0	; select bank0
  7210  0277  00D6               	movwf	??_initComu_types
  7211  0278  0856               	movf	??_initComu_types,w
  7212  0279  0021               	movlb	1	; select bank1
  7213  027A  00B7               	movwf	(_comu_types^(0+128)+5)
  7214                           
  7215                           ;comu_type.c: 25: comu_types[6] = 0b11010111;
  7216  027B  30D7               	movlw	215
  7217  027C  0020               	movlb	0	; select bank0
  7218  027D  00D6               	movwf	??_initComu_types
  7219  027E  0856               	movf	??_initComu_types,w
  7220  027F  0021               	movlb	1	; select bank1
  7221  0280  00B8               	movwf	(_comu_types^(0+128)+6)
  7222                           
  7223                           ;comu_type.c: 26: comu_types[7] = 0b11011111;
  7224  0281  30DF               	movlw	223
  7225  0282  0020               	movlb	0	; select bank0
  7226  0283  00D6               	movwf	??_initComu_types
  7227  0284  0856               	movf	??_initComu_types,w
  7228  0285  0021               	movlb	1	; select bank1
  7229  0286  00B9               	movwf	(_comu_types^(0+128)+7)
  7230                           
  7231                           ;comu_type.c: 27: comu_types[8] = 0b11100111;
  7232  0287  30E7               	movlw	231
  7233  0288  0020               	movlb	0	; select bank0
  7234  0289  00D6               	movwf	??_initComu_types
  7235  028A  0856               	movf	??_initComu_types,w
  7236  028B  0021               	movlb	1	; select bank1
  7237  028C  00BA               	movwf	(_comu_types^(0+128)+8)
  7238                           
  7239                           ;comu_type.c: 28: comu_types[9] = 0b11101011;
  7240  028D  30EB               	movlw	235
  7241  028E  0020               	movlb	0	; select bank0
  7242  028F  00D6               	movwf	??_initComu_types
  7243  0290  0856               	movf	??_initComu_types,w
  7244  0291  0021               	movlb	1	; select bank1
  7245  0292  00BB               	movwf	(_comu_types^(0+128)+9)
  7246                           
  7247                           ;comu_type.c: 29: comu_types[10] = 0b11101111;
  7248  0293  30EF               	movlw	239
  7249  0294  0020               	movlb	0	; select bank0
  7250  0295  00D6               	movwf	??_initComu_types
  7251  0296  0856               	movf	??_initComu_types,w
  7252  0297  0021               	movlb	1	; select bank1
  7253  0298  00BC               	movwf	(_comu_types^(0+128)+10)
  7254                           
  7255                           ;comu_type.c: 30: comu_types[11] = 0b11110001;
  7256  0299  30F1               	movlw	241
  7257  029A  0020               	movlb	0	; select bank0
  7258  029B  00D6               	movwf	??_initComu_types
  7259  029C  0856               	movf	??_initComu_types,w
  7260  029D  0021               	movlb	1	; select bank1
  7261  029E  00BD               	movwf	(_comu_types^(0+128)+11)
  7262                           
  7263                           ;comu_type.c: 31: comu_types[12] = 0b11110011;
  7264  029F  30F3               	movlw	243
  7265  02A0  0020               	movlb	0	; select bank0
  7266  02A1  00D6               	movwf	??_initComu_types
  7267  02A2  0856               	movf	??_initComu_types,w
  7268  02A3  0021               	movlb	1	; select bank1
  7269  02A4  00BE               	movwf	(_comu_types^(0+128)+12)
  7270                           
  7271                           ;comu_type.c: 32: comu_types[13] = 0b11110101;
  7272  02A5  30F5               	movlw	245
  7273  02A6  0020               	movlb	0	; select bank0
  7274  02A7  00D6               	movwf	??_initComu_types
  7275  02A8  0856               	movf	??_initComu_types,w
  7276  02A9  0021               	movlb	1	; select bank1
  7277  02AA  00BF               	movwf	(_comu_types^(0+128)+13)
  7278                           
  7279                           ;comu_type.c: 33: comu_types[14] = 0b11110111;
  7280  02AB  30F7               	movlw	247
  7281  02AC  0020               	movlb	0	; select bank0
  7282  02AD  00D6               	movwf	??_initComu_types
  7283  02AE  0856               	movf	??_initComu_types,w
  7284  02AF  0021               	movlb	1	; select bank1
  7285  02B0  00C0               	movwf	(_comu_types^(0+128)+14)
  7286                           
  7287                           ;comu_type.c: 34: comu_types[15] = 0b11111000;
  7288  02B1  30F8               	movlw	248
  7289  02B2  0020               	movlb	0	; select bank0
  7290  02B3  00D6               	movwf	??_initComu_types
  7291  02B4  0856               	movf	??_initComu_types,w
  7292  02B5  0021               	movlb	1	; select bank1
  7293  02B6  00C1               	movwf	(_comu_types^(0+128)+15)
  7294                           
  7295                           ;comu_type.c: 35: comu_types[16] = 0b11111001;
  7296  02B7  30F9               	movlw	249
  7297  02B8  0020               	movlb	0	; select bank0
  7298  02B9  00D6               	movwf	??_initComu_types
  7299  02BA  0856               	movf	??_initComu_types,w
  7300  02BB  0021               	movlb	1	; select bank1
  7301  02BC  00C2               	movwf	(_comu_types^(0+128)+16)
  7302                           
  7303                           ;comu_type.c: 36: comu_types[17] = 0b11111010;
  7304  02BD  30FA               	movlw	250
  7305  02BE  0020               	movlb	0	; select bank0
  7306  02BF  00D6               	movwf	??_initComu_types
  7307  02C0  0856               	movf	??_initComu_types,w
  7308  02C1  0021               	movlb	1	; select bank1
  7309  02C2  00C3               	movwf	(_comu_types^(0+128)+17)
  7310  02C3  0008               	return
  7311  02C4                     __end_of_initComu_types:	
  7312                           
  7313                           	psect	text21
  7314  02C4                     __ptext21:	
  7315 ;; *************** function _initComand *****************
  7316 ;; Defined at:
  7317 ;;		line 12 in file "command.c"
  7318 ;; Parameters:    Size  Location     Type
  7319 ;;		None
  7320 ;; Auto vars:     Size  Location     Type
  7321 ;;		None
  7322 ;; Return value:  Size  Location     Type
  7323 ;;                  1    wreg      void 
  7324 ;; Registers used:
  7325 ;;		wreg
  7326 ;; Tracked objects:
  7327 ;;		On entry : 0/0
  7328 ;;		On exit  : 0/0
  7329 ;;		Unchanged: 0/0
  7330 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7331 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7332 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7333 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7334 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7335 ;;Total ram usage:        1 bytes
  7336 ;; Hardware stack levels used:    1
  7337 ;; Hardware stack levels required when called:    3
  7338 ;; This function calls:
  7339 ;;		Nothing
  7340 ;; This function is called by:
  7341 ;;		_main
  7342 ;; This function uses a non-reentrant model
  7343 ;;
  7344                           
  7345                           
  7346                           ;psect for function _initComand
  7347  02C4                     _initComand:	
  7348                           
  7349                           ;command.c: 13: command[0] = 0b00111111;
  7350                           
  7351                           ;incstack = 0
  7352                           ; Regs used in _initComand: [wreg]
  7353  02C4  303F               	movlw	63
  7354  02C5  0020               	movlb	0	; select bank0
  7355  02C6  00D6               	movwf	??_initComand
  7356  02C7  0856               	movf	??_initComand,w
  7357  02C8  0021               	movlb	1	; select bank1
  7358  02C9  00C4               	movwf	_command^(0+128)
  7359                           
  7360                           ;command.c: 14: command[1] = 0b01111111;
  7361  02CA  307F               	movlw	127
  7362  02CB  0020               	movlb	0	; select bank0
  7363  02CC  00D6               	movwf	??_initComand
  7364  02CD  0856               	movf	??_initComand,w
  7365  02CE  0021               	movlb	1	; select bank1
  7366  02CF  00C5               	movwf	(_command^(0+128)+1)
  7367                           
  7368                           ;command.c: 15: command[2] = 0b10011111;
  7369  02D0  309F               	movlw	159
  7370  02D1  0020               	movlb	0	; select bank0
  7371  02D2  00D6               	movwf	??_initComand
  7372  02D3  0856               	movf	??_initComand,w
  7373  02D4  0021               	movlb	1	; select bank1
  7374  02D5  00C6               	movwf	(_command^(0+128)+2)
  7375                           
  7376                           ;command.c: 16: command[3] = 0b10101111;
  7377  02D6  30AF               	movlw	175
  7378  02D7  0020               	movlb	0	; select bank0
  7379  02D8  00D6               	movwf	??_initComand
  7380  02D9  0856               	movf	??_initComand,w
  7381  02DA  0021               	movlb	1	; select bank1
  7382  02DB  00C7               	movwf	(_command^(0+128)+3)
  7383                           
  7384                           ;command.c: 17: command[4] = 0b10111111;
  7385  02DC  30BF               	movlw	191
  7386  02DD  0020               	movlb	0	; select bank0
  7387  02DE  00D6               	movwf	??_initComand
  7388  02DF  0856               	movf	??_initComand,w
  7389  02E0  0021               	movlb	1	; select bank1
  7390  02E1  00C8               	movwf	(_command^(0+128)+4)
  7391                           
  7392                           ;command.c: 18: command[5] = 0b11001111;
  7393  02E2  30CF               	movlw	207
  7394  02E3  0020               	movlb	0	; select bank0
  7395  02E4  00D6               	movwf	??_initComand
  7396  02E5  0856               	movf	??_initComand,w
  7397  02E6  0021               	movlb	1	; select bank1
  7398  02E7  00C9               	movwf	(_command^(0+128)+5)
  7399                           
  7400                           ;command.c: 19: command[6] = 0b11010111;
  7401  02E8  30D7               	movlw	215
  7402  02E9  0020               	movlb	0	; select bank0
  7403  02EA  00D6               	movwf	??_initComand
  7404  02EB  0856               	movf	??_initComand,w
  7405  02EC  0021               	movlb	1	; select bank1
  7406  02ED  00CA               	movwf	(_command^(0+128)+6)
  7407                           
  7408                           ;command.c: 20: command[7] = 0b11011111;
  7409  02EE  30DF               	movlw	223
  7410  02EF  0020               	movlb	0	; select bank0
  7411  02F0  00D6               	movwf	??_initComand
  7412  02F1  0856               	movf	??_initComand,w
  7413  02F2  0021               	movlb	1	; select bank1
  7414  02F3  00CB               	movwf	(_command^(0+128)+7)
  7415                           
  7416                           ;command.c: 21: command[8] = 0b11100111;
  7417  02F4  30E7               	movlw	231
  7418  02F5  0020               	movlb	0	; select bank0
  7419  02F6  00D6               	movwf	??_initComand
  7420  02F7  0856               	movf	??_initComand,w
  7421  02F8  0021               	movlb	1	; select bank1
  7422  02F9  00CC               	movwf	(_command^(0+128)+8)
  7423                           
  7424                           ;command.c: 22: command[9] = 0b11101011;
  7425  02FA  30EB               	movlw	235
  7426  02FB  0020               	movlb	0	; select bank0
  7427  02FC  00D6               	movwf	??_initComand
  7428  02FD  0856               	movf	??_initComand,w
  7429  02FE  0021               	movlb	1	; select bank1
  7430  02FF  00CD               	movwf	(_command^(0+128)+9)
  7431                           
  7432                           ;command.c: 23: command[10] = 0b11101111;
  7433  0300  30EF               	movlw	239
  7434  0301  0020               	movlb	0	; select bank0
  7435  0302  00D6               	movwf	??_initComand
  7436  0303  0856               	movf	??_initComand,w
  7437  0304  0021               	movlb	1	; select bank1
  7438  0305  00CE               	movwf	(_command^(0+128)+10)
  7439                           
  7440                           ;command.c: 24: command[11] = 0b11110001;
  7441  0306  30F1               	movlw	241
  7442  0307  0020               	movlb	0	; select bank0
  7443  0308  00D6               	movwf	??_initComand
  7444  0309  0856               	movf	??_initComand,w
  7445  030A  0021               	movlb	1	; select bank1
  7446  030B  00CF               	movwf	(_command^(0+128)+11)
  7447                           
  7448                           ;command.c: 25: command[12] = 0b11110011;
  7449  030C  30F3               	movlw	243
  7450  030D  0020               	movlb	0	; select bank0
  7451  030E  00D6               	movwf	??_initComand
  7452  030F  0856               	movf	??_initComand,w
  7453  0310  0021               	movlb	1	; select bank1
  7454  0311  00D0               	movwf	(_command^(0+128)+12)
  7455                           
  7456                           ;command.c: 26: command[13] = 0b11110101;
  7457  0312  30F5               	movlw	245
  7458  0313  0020               	movlb	0	; select bank0
  7459  0314  00D6               	movwf	??_initComand
  7460  0315  0856               	movf	??_initComand,w
  7461  0316  0021               	movlb	1	; select bank1
  7462  0317  00D1               	movwf	(_command^(0+128)+13)
  7463                           
  7464                           ;command.c: 27: command[14] = 0b11110111;
  7465  0318  30F7               	movlw	247
  7466  0319  0020               	movlb	0	; select bank0
  7467  031A  00D6               	movwf	??_initComand
  7468  031B  0856               	movf	??_initComand,w
  7469  031C  0021               	movlb	1	; select bank1
  7470  031D  00D2               	movwf	(_command^(0+128)+14)
  7471                           
  7472                           ;command.c: 28: command[15] = 0b11111000;
  7473  031E  30F8               	movlw	248
  7474  031F  0020               	movlb	0	; select bank0
  7475  0320  00D6               	movwf	??_initComand
  7476  0321  0856               	movf	??_initComand,w
  7477  0322  0021               	movlb	1	; select bank1
  7478  0323  00D3               	movwf	(_command^(0+128)+15)
  7479                           
  7480                           ;command.c: 29: command[16] = 0b11111001;
  7481  0324  30F9               	movlw	249
  7482  0325  0020               	movlb	0	; select bank0
  7483  0326  00D6               	movwf	??_initComand
  7484  0327  0856               	movf	??_initComand,w
  7485  0328  0021               	movlb	1	; select bank1
  7486  0329  00D4               	movwf	(_command^(0+128)+16)
  7487                           
  7488                           ;command.c: 30: command[17] = 0b11111010;
  7489  032A  30FA               	movlw	250
  7490  032B  0020               	movlb	0	; select bank0
  7491  032C  00D6               	movwf	??_initComand
  7492  032D  0856               	movf	??_initComand,w
  7493  032E  0021               	movlb	1	; select bank1
  7494  032F  00D5               	movwf	(_command^(0+128)+17)
  7495  0330  0008               	return
  7496  0331                     __end_of_initComand:	
  7497                           
  7498                           	psect	text22
  7499  04ED                     __ptext22:	
  7500 ;; *************** function _initCargo *****************
  7501 ;; Defined at:
  7502 ;;		line 17 in file "normal_mode.c"
  7503 ;; Parameters:    Size  Location     Type
  7504 ;;		None
  7505 ;; Auto vars:     Size  Location     Type
  7506 ;;		None
  7507 ;; Return value:  Size  Location     Type
  7508 ;;                  1    wreg      void 
  7509 ;; Registers used:
  7510 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7511 ;; Tracked objects:
  7512 ;;		On entry : 0/0
  7513 ;;		On exit  : 0/0
  7514 ;;		Unchanged: 0/0
  7515 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7516 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7517 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7518 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7519 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7520 ;;Total ram usage:        1 bytes
  7521 ;; Hardware stack levels used:    1
  7522 ;; Hardware stack levels required when called:    4
  7523 ;; This function calls:
  7524 ;;		_getCargoData
  7525 ;; This function is called by:
  7526 ;;		_main
  7527 ;; This function uses a non-reentrant model
  7528 ;;
  7529                           
  7530                           
  7531                           ;psect for function _initCargo
  7532  04ED                     _initCargo:	
  7533                           
  7534                           ;normal_mode.c: 18: cargoData = getCargoData();
  7535                           
  7536                           ;incstack = 0
  7537                           ; Regs used in _initCargo: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7538  04ED  3186  2610  3184   	fcall	_getCargoData
  7539  04F0  0020               	movlb	0	; select bank0
  7540  04F1  3056               	movlw	low ?_getCargoData
  7541  04F2  0086               	movwf	6
  7542  04F3  3000               	movlw	high ?_getCargoData
  7543  04F4  0087               	movwf	7
  7544  04F5  3020               	movlw	low _cargoData
  7545  04F6  0084               	movwf	4
  7546  04F7  3000               	movlw	high _cargoData
  7547  04F8  0085               	movwf	5
  7548  04F9  3010               	movlw	16
  7549  04FA  00E7               	movwf	??_initCargo
  7550  04FB                     u1240:	
  7551  04FB  0016               	moviw fsr1++
  7552  04FC  001A               	movwi fsr0++
  7553  04FD  0BE7               	decfsz	??_initCargo,f
  7554  04FE  2CFB               	goto	u1240
  7555                           
  7556                           ;normal_mode.c: 19: isMycargo = 1;
  7557  04FF  14F8               	bsf	_isMycargo/(0+8),_isMycargo& (0+7)
  7558                           
  7559                           ;normal_mode.c: 20: cargoData.WorkingCount = 0;
  7560  0500  3000               	movlw	0
  7561  0501  00AF               	movwf	_cargoData+15
  7562  0502  3000               	movlw	0
  7563  0503  00AE               	movwf	_cargoData+14
  7564  0504  3000               	movlw	0
  7565  0505  00AD               	movwf	_cargoData+13
  7566  0506  3000               	movlw	0
  7567  0507  00AC               	movwf	_cargoData+12
  7568                           
  7569                           ;normal_mode.c: 21: cargoData.address = 0;
  7570  0508  01A4               	clrf	_cargoData+4
  7571                           
  7572                           ;normal_mode.c: 22: cargoData.cargoLength = 0xFFFF;
  7573  0509  30FF               	movlw	255
  7574  050A  00A0               	movwf	_cargoData
  7575  050B  30FF               	movlw	255
  7576  050C  00A1               	movwf	_cargoData+1
  7577                           
  7578                           ;normal_mode.c: 23: cargoData.clutchMode = 0;
  7579  050D  01AB               	clrf	_cargoData+11
  7580                           
  7581                           ;normal_mode.c: 24: cargoData.command = 0;
  7582  050E  01A2               	clrf	_cargoData+2
  7583                           
  7584                           ;normal_mode.c: 25: cargoData.index = 0;
  7585  050F  01A3               	clrf	_cargoData+3
  7586                           
  7587                           ;normal_mode.c: 26: cargoData.linkAngleTo = 0;
  7588  0510  01A5               	clrf	_cargoData+5
  7589  0511  01A6               	clrf	_cargoData+6
  7590                           
  7591                           ;normal_mode.c: 27: cargoData.passedTime = 0;
  7592  0512  01A9               	clrf	_cargoData+9
  7593  0513  01AA               	clrf	_cargoData+10
  7594  0514  0008               	return
  7595  0515                     __end_of_initCargo:	
  7596                           
  7597                           	psect	text23
  7598  0610                     __ptext23:	
  7599 ;; *************** function _getCargoData *****************
  7600 ;; Defined at:
  7601 ;;		line 7 in file "struct.c"
  7602 ;; Parameters:    Size  Location     Type
  7603 ;;		None
  7604 ;; Auto vars:     Size  Location     Type
  7605 ;;		None
  7606 ;; Return value:  Size  Location     Type
  7607 ;;                  16    0[BANK0 ] struct .
  7608 ;; Registers used:
  7609 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  7610 ;; Tracked objects:
  7611 ;;		On entry : 0/0
  7612 ;;		On exit  : 0/0
  7613 ;;		Unchanged: 0/0
  7614 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7615 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7616 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7617 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7618 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7619 ;;Total ram usage:       17 bytes
  7620 ;; Hardware stack levels used:    1
  7621 ;; Hardware stack levels required when called:    3
  7622 ;; This function calls:
  7623 ;;		Nothing
  7624 ;; This function is called by:
  7625 ;;		_setCargo_Angle
  7626 ;;		_initCargo
  7627 ;; This function uses a non-reentrant model
  7628 ;;
  7629                           
  7630                           
  7631                           ;psect for function _getCargoData
  7632  0610                     _getCargoData:	
  7633                           
  7634                           ;struct.c: 8: return cargoData;
  7635                           
  7636                           ;incstack = 0
  7637                           ; Regs used in _getCargoData: [wreg-fsr1h+status,2+status,0]
  7638  0610  3020               	movlw	low _cargoData
  7639  0611  0086               	movwf	6
  7640  0612  3000               	movlw	high _cargoData
  7641  0613  0087               	movwf	7
  7642  0614  3056               	movlw	low ?_getCargoData
  7643  0615  0084               	movwf	4
  7644  0616  3000               	movlw	high ?_getCargoData
  7645  0617  0085               	movwf	5
  7646  0618  3010               	movlw	16
  7647  0619  0020               	movlb	0	; select bank0
  7648  061A  00E6               	movwf	??_getCargoData
  7649  061B                     u980:	
  7650  061B  0016               	moviw fsr1++
  7651  061C  001A               	movwi fsr0++
  7652  061D  0BE6               	decfsz	??_getCargoData,f
  7653  061E  2E1B               	goto	u980
  7654  061F  0008               	return
  7655  0620                     __end_of_getCargoData:	
  7656                           
  7657                           	psect	text24
  7658  0498                     __ptext24:	
  7659 ;; *************** function _init *****************
  7660 ;; Defined at:
  7661 ;;		line 103 in file "main.c"
  7662 ;; Parameters:    Size  Location     Type
  7663 ;;		None
  7664 ;; Auto vars:     Size  Location     Type
  7665 ;;		None
  7666 ;; Return value:  Size  Location     Type
  7667 ;;                  1    wreg      void 
  7668 ;; Registers used:
  7669 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7670 ;; Tracked objects:
  7671 ;;		On entry : 0/0
  7672 ;;		On exit  : 0/0
  7673 ;;		Unchanged: 0/0
  7674 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7675 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7676 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7678 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7679 ;;Total ram usage:        0 bytes
  7680 ;; Hardware stack levels used:    1
  7681 ;; Hardware stack levels required when called:    4
  7682 ;; This function calls:
  7683 ;;		_clear
  7684 ;;		_initbuffer
  7685 ;; This function is called by:
  7686 ;;		_main
  7687 ;; This function uses a non-reentrant model
  7688 ;;
  7689                           
  7690                           
  7691                           ;psect for function _init
  7692  0498                     _init:	
  7693                           
  7694                           ;main.c: 104: count1 = 0;
  7695                           
  7696                           ;incstack = 0
  7697                           ; Regs used in _init: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7698  0498  0020               	movlb	0	; select bank0
  7699  0499  01C4               	clrf	_count1
  7700  049A  01C5               	clrf	_count1+1
  7701                           
  7702                           ;main.c: 105: count2 = 0;
  7703  049B  01CA               	clrf	_count2
  7704  049C  01CB               	clrf	_count2+1
  7705                           
  7706                           ;main.c: 106: initbuffer();
  7707  049D  3184  24C3  3184   	fcall	_initbuffer
  7708                           
  7709                           ;main.c: 108: OSCFRQbits.HFFRQ = 0b0111;
  7710  04A0  0032               	movlb	18	; select bank18
  7711  04A1  081F               	movf	31,w	;volatile
  7712  04A2  39F0               	andlw	-16
  7713  04A3  3807               	iorlw	7
  7714  04A4  009F               	movwf	31	;volatile
  7715                           
  7716                           ;main.c: 109: OSCTUNEbits.HFTUN = 0b000000;
  7717  04A5  30C0               	movlw	-64
  7718  04A6  059E               	andwf	30,f	;volatile
  7719                           
  7720                           ;main.c: 110: clear();
  7721  04A7  3186  262D         	fcall	_clear
  7722                           
  7723                           ;main.c: 111: WPUC = 0b11111111;
  7724  04A9  30FF               	movlw	255
  7725  04AA  0024               	movlb	4	; select bank4
  7726  04AB  008E               	movwf	14	;volatile
  7727                           
  7728                           ;main.c: 112: WPUB = 0b11111111;
  7729  04AC  30FF               	movlw	255
  7730  04AD  008D               	movwf	13	;volatile
  7731                           
  7732                           ;main.c: 113: WPUA = 0b11111111;
  7733  04AE  30FF               	movlw	255
  7734  04AF  008C               	movwf	12	;volatile
  7735                           
  7736                           ;main.c: 114: TRISBbits.TRISB6 = 1;
  7737  04B0  0021               	movlb	1	; select bank1
  7738  04B1  170D               	bsf	13,6	;volatile
  7739                           
  7740                           ;main.c: 115: TRISBbits.TRISB4 = 1;
  7741  04B2  160D               	bsf	13,4	;volatile
  7742                           
  7743                           ;main.c: 116: TRISCbits.TRISC6 = 1;
  7744  04B3  170E               	bsf	14,6	;volatile
  7745                           
  7746                           ;main.c: 117: INLVLBbits.INLVLB4 = 0;
  7747  04B4  0027               	movlb	7	; select bank7
  7748  04B5  120D               	bcf	13,4	;volatile
  7749                           
  7750                           ;main.c: 118: INLVLBbits.INLVLB6 = 0;
  7751  04B6  130D               	bcf	13,6	;volatile
  7752                           
  7753                           ;main.c: 119: INLVLCbits.INLVLC5 = 0;
  7754  04B7  128E               	bcf	14,5	;volatile
  7755                           
  7756                           ;main.c: 121: WPUA = 0b111111;
  7757  04B8  303F               	movlw	63
  7758  04B9  0024               	movlb	4	; select bank4
  7759  04BA  008C               	movwf	12	;volatile
  7760                           
  7761                           ;main.c: 122: TRISBbits.TRISB5 = 1;
  7762  04BB  0021               	movlb	1	; select bank1
  7763  04BC  168D               	bsf	13,5	;volatile
  7764                           
  7765                           ;main.c: 123: INLVLBbits.INLVLB5 = 0;
  7766  04BD  0027               	movlb	7	; select bank7
  7767  04BE  128D               	bcf	13,5	;volatile
  7768                           
  7769                           ;main.c: 124: INLVLBbits.INLVLB7 = 0;
  7770  04BF  138D               	bcf	13,7	;volatile
  7771                           
  7772                           ;main.c: 125: INLVLAbits.INLVLA1 = 0;
  7773  04C0  108C               	bcf	12,1	;volatile
  7774                           
  7775                           ;main.c: 126: INLVLAbits.INLVLA2 = 0;
  7776  04C1  110C               	bcf	12,2	;volatile
  7777  04C2  0008               	return
  7778  04C3                     __end_of_init:	
  7779                           ;main.c: 128: return;
  7780                           
  7781                           
  7782                           	psect	text25
  7783  04C3                     __ptext25:	
  7784 ;; *************** function _initbuffer *****************
  7785 ;; Defined at:
  7786 ;;		line 97 in file "main.c"
  7787 ;; Parameters:    Size  Location     Type
  7788 ;;		None
  7789 ;; Auto vars:     Size  Location     Type
  7790 ;;  i               2    2[BANK0 ] int 
  7791 ;; Return value:  Size  Location     Type
  7792 ;;                  1    wreg      void 
  7793 ;; Registers used:
  7794 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7795 ;; Tracked objects:
  7796 ;;		On entry : 0/0
  7797 ;;		On exit  : 0/0
  7798 ;;		Unchanged: 0/0
  7799 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7800 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7801 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7802 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7803 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7804 ;;Total ram usage:        4 bytes
  7805 ;; Hardware stack levels used:    1
  7806 ;; Hardware stack levels required when called:    3
  7807 ;; This function calls:
  7808 ;;		Nothing
  7809 ;; This function is called by:
  7810 ;;		_init
  7811 ;; This function uses a non-reentrant model
  7812 ;;
  7813                           
  7814                           
  7815                           ;psect for function _initbuffer
  7816  04C3                     _initbuffer:	
  7817                           
  7818                           ;main.c: 98: for(int i = 0; i < 256; i++){
  7819                           
  7820                           ;incstack = 0
  7821                           ; Regs used in _initbuffer: [wreg+fsr1l+fsr1h+status,2+status,0]
  7822  04C3  0020               	movlb	0	; select bank0
  7823  04C4  01D8               	clrf	initbuffer@i
  7824  04C5  01D9               	clrf	initbuffer@i+1
  7825  04C6                     L29:	
  7826  04C6  0859               	movf	initbuffer@i+1,w
  7827  04C7  3A80               	xorlw	128
  7828  04C8  00D6               	movwf	??_initbuffer
  7829  04C9  3081               	movlw	129
  7830  04CA  0256               	subwf	??_initbuffer,w
  7831  04CB  1D03               	skipz
  7832  04CC  2CCF               	goto	u1155
  7833  04CD  3000               	movlw	0
  7834  04CE  0258               	subwf	initbuffer@i,w
  7835  04CF                     u1155:	
  7836  04CF  1803               	btfsc	3,0
  7837  04D0  0008               	return
  7838                           
  7839                           ;main.c: 99: spi1_buffer_data[i] = 0;
  7840  04D1  30F0               	movlw	240
  7841  04D2  0020               	movlb	0	; select bank0
  7842  04D3  00D6               	movwf	??_initbuffer
  7843  04D4  3024               	movlw	36
  7844  04D5  00D7               	movwf	??_initbuffer+1
  7845  04D6  0858               	movf	initbuffer@i,w
  7846  04D7  0756               	addwf	??_initbuffer,w
  7847  04D8  0086               	movwf	6
  7848  04D9  0859               	movf	initbuffer@i+1,w
  7849  04DA  3D57               	addwfc	??_initbuffer+1,w
  7850  04DB  0087               	movwf	7
  7851  04DC  0181               	clrf	1
  7852                           
  7853                           ;main.c: 100: spi2_buffer_data[i] = 0;
  7854  04DD  30F0               	movlw	240
  7855  04DE  00D6               	movwf	??_initbuffer
  7856  04DF  3026               	movlw	38
  7857  04E0  00D7               	movwf	??_initbuffer+1
  7858  04E1  0858               	movf	initbuffer@i,w
  7859  04E2  0756               	addwf	??_initbuffer,w
  7860  04E3  0086               	movwf	6
  7861  04E4  0859               	movf	initbuffer@i+1,w
  7862  04E5  3D57               	addwfc	??_initbuffer+1,w
  7863  04E6  0087               	movwf	7
  7864  04E7  0181               	clrf	1
  7865  04E8  3001               	movlw	1
  7866  04E9  07D8               	addwf	initbuffer@i,f
  7867  04EA  3000               	movlw	0
  7868  04EB  3DD9               	addwfc	initbuffer@i+1,f
  7869  04EC  2CC6               	goto	L29
  7870  04ED                     __end_of_initbuffer:	
  7871                           
  7872                           	psect	text26
  7873  062D                     __ptext26:	
  7874 ;; *************** function _clear *****************
  7875 ;; Defined at:
  7876 ;;		line 9 in file "util.c"
  7877 ;; Parameters:    Size  Location     Type
  7878 ;;		None
  7879 ;; Auto vars:     Size  Location     Type
  7880 ;;		None
  7881 ;; Return value:  Size  Location     Type
  7882 ;;                  1    wreg      void 
  7883 ;; Registers used:
  7884 ;;		status,2
  7885 ;; Tracked objects:
  7886 ;;		On entry : 0/0
  7887 ;;		On exit  : 0/0
  7888 ;;		Unchanged: 0/0
  7889 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7890 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7891 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7893 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7894 ;;Total ram usage:        0 bytes
  7895 ;; Hardware stack levels used:    1
  7896 ;; Hardware stack levels required when called:    3
  7897 ;; This function calls:
  7898 ;;		Nothing
  7899 ;; This function is called by:
  7900 ;;		_init
  7901 ;; This function uses a non-reentrant model
  7902 ;;
  7903                           
  7904                           
  7905                           ;psect for function _clear
  7906  062D                     _clear:	
  7907                           
  7908                           ;util.c: 10: ANSELA = 0x00;
  7909                           
  7910                           ;incstack = 0
  7911                           ; Regs used in _clear: [status,2]
  7912  062D  0023               	movlb	3	; select bank3
  7913  062E  018C               	clrf	12	;volatile
  7914                           
  7915                           ;util.c: 11: ANSELB = 0x00;
  7916  062F  018D               	clrf	13	;volatile
  7917                           
  7918                           ;util.c: 12: ANSELC = 0x00;
  7919  0630  018E               	clrf	14	;volatile
  7920                           
  7921                           ;util.c: 13: PORTA = 0x00;
  7922  0631  0020               	movlb	0	; select bank0
  7923  0632  018C               	clrf	12	;volatile
  7924                           
  7925                           ;util.c: 14: PORTB = 0x00;
  7926  0633  018D               	clrf	13	;volatile
  7927                           
  7928                           ;util.c: 15: PORTC = 0x00;
  7929  0634  018E               	clrf	14	;volatile
  7930                           
  7931                           ;util.c: 16: TRISA = 0x00;
  7932  0635  0021               	movlb	1	; select bank1
  7933  0636  018C               	clrf	12	;volatile
  7934                           
  7935                           ;util.c: 17: TRISB = 0x00;
  7936  0637  018D               	clrf	13	;volatile
  7937                           
  7938                           ;util.c: 18: TRISC = 0x00;
  7939  0638  018E               	clrf	14	;volatile
  7940  0639  0008               	return
  7941  063A                     __end_of_clear:	
  7942                           
  7943                           	psect	intentry
  7944  0004                     __pintentry:	
  7945 ;; *************** function _InterMSSP *****************
  7946 ;; Defined at:
  7947 ;;		line 67 in file "main.c"
  7948 ;; Parameters:    Size  Location     Type
  7949 ;;		None
  7950 ;; Auto vars:     Size  Location     Type
  7951 ;;		None
  7952 ;; Return value:  Size  Location     Type
  7953 ;;                  1    wreg      void 
  7954 ;; Registers used:
  7955 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7956 ;; Tracked objects:
  7957 ;;		On entry : 0/0
  7958 ;;		On exit  : 0/0
  7959 ;;		Unchanged: 0/0
  7960 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7961 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7962 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7963 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7964 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7965 ;;Total ram usage:        5 bytes
  7966 ;; Hardware stack levels used:    1
  7967 ;; Hardware stack levels required when called:    2
  7968 ;; This function calls:
  7969 ;;		_addAngle
  7970 ;;		_setSPI1sendData
  7971 ;; This function is called by:
  7972 ;;		Interrupt level 1
  7973 ;; This function uses a non-reentrant model
  7974 ;;
  7975                           
  7976  0004                     _InterMSSP:	
  7977                           
  7978                           ;incstack = 0
  7979  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  7980                           
  7981                           ; Regs used in _InterMSSP: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7982  0005  3180               	pagesel	$
  7983  0006  0020               	movlb	0	; select bank0
  7984  0007  087F               	movf	127,w
  7985  0008  00F6               	movwf	??_InterMSSP+4
  7986                           
  7987                           ;main.c: 69: if (PIR1bits.SSP1IF == 1) {
  7988  0009  1D91               	btfss	17,3	;volatile
  7989  000A  282A               	goto	i1l2251
  7990                           
  7991                           ;main.c: 70: spi1_buffer_data[count1] = SSP1BUF;
  7992  000B  30F0               	movlw	240
  7993  000C  00F2               	movwf	??_InterMSSP
  7994  000D  3024               	movlw	36
  7995  000E  00F3               	movwf	??_InterMSSP+1
  7996  000F  0844               	movf	_count1,w
  7997  0010  0772               	addwf	??_InterMSSP,w
  7998  0011  00F4               	movwf	??_InterMSSP+2
  7999  0012  0845               	movf	_count1+1,w
  8000  0013  3D73               	addwfc	??_InterMSSP+1,w
  8001  0014  00F5               	movwf	??_InterMSSP+3
  8002  0015  0874               	movf	??_InterMSSP+2,w
  8003  0016  0086               	movwf	6
  8004  0017  0875               	movf	??_InterMSSP+3,w
  8005  0018  0087               	movwf	7
  8006  0019  0024               	movlb	4	; select bank4
  8007  001A  0811               	movf	17,w	;volatile
  8008  001B  0081               	movwf	1
  8009                           
  8010                           ;main.c: 71: setSPI1sendData();
  8011  001C  3185  255B  3180   	fcall	_setSPI1sendData
  8012                           
  8013                           ;main.c: 72: count1++;
  8014  001F  3001               	movlw	1
  8015  0020  0020               	movlb	0	; select bank0
  8016  0021  07C4               	addwf	_count1,f
  8017  0022  3000               	movlw	0
  8018  0023  3DC5               	addwfc	_count1+1,f
  8019                           
  8020                           ;main.c: 73: if(count1 == 256){
  8021  0024  0345               	decf	_count1+1,w
  8022  0025  0444               	iorwf	_count1,w
  8023  0026  1D03               	btfss	3,2
  8024  0027  282A               	goto	i1l2251
  8025                           
  8026                           ;main.c: 74: count1 = 0;
  8027  0028  01C4               	clrf	_count1
  8028  0029  01C5               	clrf	_count1+1
  8029  002A                     i1l2251:	
  8030                           
  8031                           ;main.c: 75: }
  8032                           ;main.c: 76: }
  8033                           ;main.c: 77: if(linkInfo.endpoint == 0){
  8034  002A  0835               	movf	_linkInfo+5,w
  8035  002B  1903               	btfsc	3,2
  8036                           
  8037                           ;main.c: 78: if (PIR2bits.SSP2IF == 1) {
  8038  002C  1D92               	btfss	18,3	;volatile
  8039  002D  284A               	goto	i1l2263
  8040                           
  8041                           ;main.c: 79: spi2_buffer_data[count2] = SSP2BUF;
  8042  002E  30F0               	movlw	240
  8043  002F  00F2               	movwf	??_InterMSSP
  8044  0030  3026               	movlw	38
  8045  0031  00F3               	movwf	??_InterMSSP+1
  8046  0032  084A               	movf	_count2,w
  8047  0033  0772               	addwf	??_InterMSSP,w
  8048  0034  00F4               	movwf	??_InterMSSP+2
  8049  0035  084B               	movf	_count2+1,w
  8050  0036  3D73               	addwfc	??_InterMSSP+1,w
  8051  0037  00F5               	movwf	??_InterMSSP+3
  8052  0038  0874               	movf	??_InterMSSP+2,w
  8053  0039  0086               	movwf	6
  8054  003A  0875               	movf	??_InterMSSP+3,w
  8055  003B  0087               	movwf	7
  8056  003C  0024               	movlb	4	; select bank4
  8057  003D  0819               	movf	25,w	;volatile
  8058  003E  0081               	movwf	1
  8059                           
  8060                           ;main.c: 80: count2++;
  8061  003F  3001               	movlw	1
  8062  0040  0020               	movlb	0	; select bank0
  8063  0041  07CA               	addwf	_count2,f
  8064  0042  3000               	movlw	0
  8065  0043  3DCB               	addwfc	_count2+1,f
  8066                           
  8067                           ;main.c: 81: if(count2 == 256){
  8068  0044  034B               	decf	_count2+1,w
  8069  0045  044A               	iorwf	_count2,w
  8070  0046  1D03               	btfss	3,2
  8071  0047  284A               	goto	i1l2263
  8072                           
  8073                           ;main.c: 82: count2 = 0;
  8074  0048  01CA               	clrf	_count2
  8075  0049  01CB               	clrf	_count2+1
  8076  004A                     i1l2263:	
  8077                           
  8078                           ;main.c: 83: }
  8079                           ;main.c: 84: }
  8080                           ;main.c: 85: }
  8081                           ;main.c: 87: if(PIE0bits.INTE == 1){
  8082  004A  0021               	movlb	1	; select bank1
  8083  004B  1C10               	btfss	16,0	;volatile
  8084  004C  284F               	goto	i1l2267
  8085                           
  8086                           ;main.c: 88: addAngle();
  8087  004D  3186  267E         	fcall	_addAngle
  8088  004F                     i1l2267:	
  8089                           
  8090                           ;main.c: 89: }
  8091                           ;main.c: 92: PIR1bits.SSP1IF = 0 ;
  8092  004F  0020               	movlb	0	; select bank0
  8093  0050  1191               	bcf	17,3	;volatile
  8094                           
  8095                           ;main.c: 93: PIR2bits.SSP2IF = 0 ;
  8096  0051  1192               	bcf	18,3	;volatile
  8097                           
  8098                           ;main.c: 94: PIR0bits.INTF = 0;
  8099  0052  1010               	bcf	16,0	;volatile
  8100                           
  8101                           ;main.c: 95: PIR0bits.IOCIF = 0;
  8102  0053  1210               	bcf	16,4	;volatile
  8103  0054  0876               	movf	??_InterMSSP+4,w
  8104  0055  00FF               	movwf	127
  8105  0056  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  8106  0057  0009               	retfie
  8107  0058                     __end_of_InterMSSP:	
  8108                           
  8109                           	psect	text28
  8110  055B                     __ptext28:	
  8111 ;; *************** function _setSPI1sendData *****************
  8112 ;; Defined at:
  8113 ;;		line 92 in file "spiControl.c"
  8114 ;; Parameters:    Size  Location     Type
  8115 ;;		None
  8116 ;; Auto vars:     Size  Location     Type
  8117 ;;		None
  8118 ;; Return value:  Size  Location     Type
  8119 ;;                  1    wreg      void 
  8120 ;; Registers used:
  8121 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8122 ;; Tracked objects:
  8123 ;;		On entry : 0/0
  8124 ;;		On exit  : 0/0
  8125 ;;		Unchanged: 0/0
  8126 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8127 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8128 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8129 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8130 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8131 ;;Total ram usage:        2 bytes
  8132 ;; Hardware stack levels used:    1
  8133 ;; Hardware stack levels required when called:    1
  8134 ;; This function calls:
  8135 ;;		_isSPI2read
  8136 ;; This function is called by:
  8137 ;;		_InterMSSP
  8138 ;; This function uses a non-reentrant model
  8139 ;;
  8140                           
  8141                           
  8142                           ;psect for function _setSPI1sendData
  8143  055B                     _setSPI1sendData:	
  8144                           
  8145                           ;spiControl.c: 93: if(!(isSPI2read() == 1)){
  8146                           
  8147                           ;incstack = 0
  8148                           ; Regs used in _setSPI1sendData: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8149  055B  3186  263A  3185   	fcall	_isSPI2read
  8150  055E  1803               	btfsc	3,0
  8151  055F  2D7A               	goto	i1l2003
  8152                           
  8153                           ;spiControl.c: 94: SSP1BUF = spi2_buffer_data[read_count2];
  8154  0560  30F0               	movlw	240
  8155  0561  00F0               	movwf	??_setSPI1sendData
  8156  0562  3026               	movlw	38
  8157  0563  00F1               	movwf	??_setSPI1sendData+1
  8158  0564  0020               	movlb	0	; select bank0
  8159  0565  0840               	movf	_read_count2,w
  8160  0566  0770               	addwf	??_setSPI1sendData,w
  8161  0567  0086               	movwf	6
  8162  0568  0841               	movf	_read_count2+1,w
  8163  0569  3D71               	addwfc	??_setSPI1sendData+1,w
  8164  056A  0087               	movwf	7
  8165  056B  0801               	movf	1,w
  8166  056C  0024               	movlb	4	; select bank4
  8167  056D  0091               	movwf	17	;volatile
  8168                           
  8169                           ;spiControl.c: 95: read_count2++;
  8170  056E  3001               	movlw	1
  8171  056F  0020               	movlb	0	; select bank0
  8172  0570  07C0               	addwf	_read_count2,f
  8173  0571  3000               	movlw	0
  8174  0572  3DC1               	addwfc	_read_count2+1,f
  8175                           
  8176                           ;spiControl.c: 96: if(read_count2 == 256){
  8177  0573  0341               	decf	_read_count2+1,w
  8178  0574  0440               	iorwf	_read_count2,w
  8179  0575  1D03               	btfss	3,2
  8180  0576  0008               	return
  8181                           
  8182                           ;spiControl.c: 97: read_count2 = 0;
  8183  0577  01C0               	clrf	_read_count2
  8184  0578  01C1               	clrf	_read_count2+1
  8185                           
  8186                           ;spiControl.c: 98: }
  8187                           ;spiControl.c: 99: }else{
  8188  0579  0008               	return
  8189  057A                     i1l2003:	
  8190                           
  8191                           ;spiControl.c: 100: SSP1BUF = 0x00;
  8192  057A  0024               	movlb	4	; select bank4
  8193  057B  0191               	clrf	17	;volatile
  8194  057C  0008               	return
  8195  057D                     __end_of_setSPI1sendData:	
  8196                           
  8197                           	psect	text29
  8198  063A                     __ptext29:	
  8199 ;; *************** function _isSPI2read *****************
  8200 ;; Defined at:
  8201 ;;		line 76 in file "spiControl.c"
  8202 ;; Parameters:    Size  Location     Type
  8203 ;;		None
  8204 ;; Auto vars:     Size  Location     Type
  8205 ;;		None
  8206 ;; Return value:  Size  Location     Type
  8207 ;;		None               void
  8208 ;; Registers used:
  8209 ;;		wreg, status,2, status,0
  8210 ;; Tracked objects:
  8211 ;;		On entry : 0/0
  8212 ;;		On exit  : 0/0
  8213 ;;		Unchanged: 0/0
  8214 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8215 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8216 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8218 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8219 ;;Total ram usage:        0 bytes
  8220 ;; Hardware stack levels used:    1
  8221 ;; This function calls:
  8222 ;;		Nothing
  8223 ;; This function is called by:
  8224 ;;		_setSPI1sendData
  8225 ;; This function uses a non-reentrant model
  8226 ;;
  8227                           
  8228                           
  8229                           ;psect for function _isSPI2read
  8230  063A                     _isSPI2read:	
  8231                           
  8232                           ;spiControl.c: 77: if(read_count2 == count2){
  8233                           
  8234                           ;incstack = 0
  8235                           ; Regs used in _isSPI2read: [wreg+status,2+status,0]
  8236  063A  0020               	movlb	0	; select bank0
  8237  063B  084B               	movf	_count2+1,w
  8238  063C  0641               	xorwf	_read_count2+1,w
  8239  063D  1D03               	skipz
  8240  063E  2E41               	goto	u65_25
  8241  063F  084A               	movf	_count2,w
  8242  0640  0640               	xorwf	_read_count2,w
  8243  0641                     u65_25:	
  8244  0641  1D03               	skipz
  8245  0642  2E45               	goto	i1l1953
  8246                           
  8247                           ;spiControl.c: 78: return 1;
  8248  0643  1403               	setc
  8249                           
  8250                           ;spiControl.c: 79: }else{
  8251  0644  0008               	return
  8252  0645                     i1l1953:	
  8253                           
  8254                           ;spiControl.c: 80: return 0;
  8255  0645  1003               	clrc
  8256  0646  0008               	return
  8257  0647                     __end_of_isSPI2read:	
  8258                           
  8259                           	psect	text30
  8260  067E                     __ptext30:	
  8261 ;; *************** function _addAngle *****************
  8262 ;; Defined at:
  8263 ;;		line 25 in file "IO_control.c"
  8264 ;; Parameters:    Size  Location     Type
  8265 ;;		None
  8266 ;; Auto vars:     Size  Location     Type
  8267 ;;		None
  8268 ;; Return value:  Size  Location     Type
  8269 ;;                  1    wreg      void 
  8270 ;; Registers used:
  8271 ;;		wreg
  8272 ;; Tracked objects:
  8273 ;;		On entry : 0/0
  8274 ;;		On exit  : 0/0
  8275 ;;		Unchanged: 0/0
  8276 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8277 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8278 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8279 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8280 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8281 ;;Total ram usage:        0 bytes
  8282 ;; Hardware stack levels used:    1
  8283 ;; This function calls:
  8284 ;;		Nothing
  8285 ;; This function is called by:
  8286 ;;		_InterMSSP
  8287 ;; This function uses a non-reentrant model
  8288 ;;
  8289                           
  8290                           
  8291                           ;psect for function _addAngle
  8292  067E                     _addAngle:	
  8293                           
  8294                           ;IO_control.c: 26: linkAngle += direction;
  8295                           
  8296                           ;incstack = 0
  8297                           ; Regs used in _addAngle: [wreg]
  8298  067E  0020               	movlb	0	; select bank0
  8299  067F  084C               	movf	_direction,w
  8300  0680  07CE               	addwf	_linkAngle,f
  8301  0681  084D               	movf	_direction+1,w
  8302  0682  3DCF               	addwfc	_linkAngle+1,f
  8303  0683  0008               	return
  8304  0684                     __end_of_addAngle:	
  8305  007E                     btemp	set	126	;btemp
  8306  007E                     int$flags	set	126
  8307  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    4
    Data        2
    BSS         124
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      10
    BANK0            80     24      80
    BANK1            80     10      79
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           64      0       0
    BANK16            0      0       0
    BANK17            0      0       0
    BANK18            0      0       0
    BANK19            0      0       0
    BANK20            0      0       0
    BANK21            0      0       0
    BANK22            0      0       0
    BANK23            0      0       0
    BANK24            0      0       0
    BANK25            0      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _InterMSSP in COMMON

    _InterMSSP->_setSPI1sendData

Critical Paths under _main in BANK0

    _main->_setComunicateMode
    _spi_init->_spi1_init
    _spi_init->_spi2_init
    _setComunicateMode->_readCargo
    _readCargo->_setCargo_Angle
    _setCargo_Angle->_getCargoData
    _Calibrate_download->_isEndpoint
    _isEndpoint->_setSPI1sendDataManual
    _initTrain->_isTrainSt
    _initCargo->_getCargoData
    _init->_initbuffer

Critical Paths under _InterMSSP in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_setComunicateMode
    _setComunicateMode->_readCargo

Critical Paths under _InterMSSP in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterMSSP in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterMSSP in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _InterMSSP in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _InterMSSP in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _InterMSSP in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _InterMSSP in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _InterMSSP in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _InterMSSP in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _InterMSSP in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _InterMSSP in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _InterMSSP in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _InterMSSP in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _InterMSSP in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _InterMSSP in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _InterMSSP in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _InterMSSP in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _InterMSSP in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _InterMSSP in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _InterMSSP in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _InterMSSP in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _InterMSSP in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _InterMSSP in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _InterMSSP in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _InterMSSP in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1099
                      _InitCalibrate
                               _init
                          _initCargo
                         _initComand
                     _initComu_types
                          _initTrain
                            _io_init
                         _isSPI1read
                         _read_train
                  _setComunicateMode
                    _setSPI2sendData
                           _spi_init
 ---------------------------------------------------------------------------------
 (1) _spi_init                                             0     0      0       6
                          _spi1_init
                          _spi2_init
 ---------------------------------------------------------------------------------
 (2) _spi2_init                                            2     2      0       3
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _spi1_init                                            2     2      0       3
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _setSPI2sendData                                      4     4      0       0
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _setComunicateMode                                    4     4      0     867
                                             23 BANK0      1     1      0
                                              7 BANK1      3     3      0
                 _Calibrate_download
                          _readCargo
 ---------------------------------------------------------------------------------
 (2) _readCargo                                           12    12      0     285
                                             18 BANK0      5     5      0
                                              0 BANK1      7     7      0
                       _clutchaction
                       _restartCargo
                     _setCargo_Angle
 ---------------------------------------------------------------------------------
 (3) _setCargo_Angle                                       1     1      0       0
                                             17 BANK0      1     1      0
                       _getCargoData
 ---------------------------------------------------------------------------------
 (3) _clutchaction                                         1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _Calibrate_download                                  13    13      0     421
                                              7 BANK0     13    13      0
                      _InitCalibrate
                         _isEndpoint
 ---------------------------------------------------------------------------------
 (3) _isEndpoint                                           6     6      0      71
                                              1 BANK0      6     6      0
              _setSPI1sendDataManual
 ---------------------------------------------------------------------------------
 (4) _setSPI1sendDataManual                                1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _InitCalibrate                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _read_train                                           4     4      0      65
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _isSPI1read                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _io_init                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initTrain                                            3     3      0      31
                                              9 BANK0      3     3      0
                          _isTrainSt
                     _resetTrainData
 ---------------------------------------------------------------------------------
 (2) _resetTrainData                                       0     0      0       0
                       _restartCargo
 ---------------------------------------------------------------------------------
 (3) _restartCargo                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _isTrainSt                                            9     9      0      31
                                              0 BANK0      9     9      0
 ---------------------------------------------------------------------------------
 (1) _initComu_types                                       1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _initComand                                           1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _initCargo                                            1     1      0       0
                                             17 BANK0      1     1      0
                       _getCargoData
 ---------------------------------------------------------------------------------
 (4) _getCargoData                                        17     1     16       0
                                              0 BANK0     17     1     16
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0     130
                              _clear
                         _initbuffer
 ---------------------------------------------------------------------------------
 (2) _initbuffer                                           4     4      0     130
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) _clear                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _InterMSSP                                            5     5      0       0
                                              2 COMMON     5     5      0
                           _addAngle
                    _setSPI1sendData
 ---------------------------------------------------------------------------------
 (6) _setSPI1sendData                                      2     2      0       0
                                              0 COMMON     2     2      0
                         _isSPI2read
 ---------------------------------------------------------------------------------
 (7) _isSPI2read                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _addAngle                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _InitCalibrate
   _init
     _clear
     _initbuffer
   _initCargo
     _getCargoData
   _initComand
   _initComu_types
   _initTrain
     _isTrainSt
     _resetTrainData
       _restartCargo
   _io_init
   _isSPI1read
   _read_train
   _setComunicateMode
     _Calibrate_download
       _InitCalibrate
       _isEndpoint
         _setSPI1sendDataManual
     _readCargo
       _clutchaction
       _restartCargo
       _setCargo_Angle
         _getCargoData
   _setSPI2sendData
   _spi_init
     _spi1_init
     _spi2_init

 _InterMSSP (ROOT)
   _addAngle
   _setSPI1sendData
     _isSPI2read

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       2       1       14.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      7       A       2       71.4%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     18      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      A      4F       7       98.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
ABS                  0      0      A9      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
DATA                 0      0      A9      28        0.0%
BANK11              50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITBANK12           50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12              50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITBANK13           50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13              50      0       0      33        0.0%
BITBANK14           50      0       0      34        0.0%
BANK14              50      0       0      35        0.0%
BITBANK15           50      0       0      36        0.0%
BANK15              40      0       0      37        0.0%
BITBANK16           50      0       0      38        0.0%
BANK16               0      0       0      39        0.0%
BITBANK17           50      0       0      40        0.0%
BANK17               0      0       0      41        0.0%
BITBANK18           50      0       0      42        0.0%
BANK18               0      0       0      43        0.0%
BITBANK19           50      0       0      44        0.0%
BANK19               0      0       0      45        0.0%
BITBANK20           50      0       0      46        0.0%
BANK20               0      0       0      47        0.0%
BITBANK21           50      0       0      48        0.0%
BANK21               0      0       0      49        0.0%
BITBANK22           50      0       0      50        0.0%
BANK22               0      0       0      51        0.0%
BITBANK23           50      0       0      52        0.0%
BANK23               0      0       0      53        0.0%
BITBANK24           50      0       0      54        0.0%
BANK24               0      0       0      55        0.0%
BITBANK25           20      0       0      56        0.0%
BANK25               0      0       0      57        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sat May 12 15:00:43 2018

                  _InitCalibrate 05D4                                pc 0002                      __CFG_CP$OFF 0000  
                             l72 042E                   _cargoLengthnuf 003C                      __CFG_LVP$ON 0000  
                            l104 0218                              l160 065B                              l315 0364  
                            l183 03FB                              l394 00AD                              l396 00B9  
                   __CFG_CPD$OFF 0000                              u980 061B                              u990 05CB  
                            wreg 0009          setComunicateMode@m_type 00EC                             S3051 05EB  
                           S3047 059D         Calibrate_download@bufint 0067                             l3043 03E7  
                           l3053 03A3                             l3045 0145                             l3049 022C  
                           l2521 01BB                             l2601 00FE                             l2531 01F9  
                           l2515 019B                             l2533 0214                             l2525 01C1  
                           l2517 01AD                             l2509 018C                             l2605 0117  
                           l2613 013F                             l2519 01B3                             l2607 0127  
                           l2615 014F                             l2465 0419                             l2537 021D  
                           l2529 01E1                             l2545 0226                             l2609 013A  
                           l2539 021E                             l2547 0236                             l2731 03DD  
                           l2573 00C6                             l2655 0468                             l2591 00ED  
                           l2583 00E3                             l2575 00CD                             l2727 03D9  
                           l2911 0481                             l2809 035F                             l2593 00EF  
                           l2577 00D4                             l2737 03E1                             l2921 0494  
                           l2595 00F1                             l2587 00E9                             l2739 03F5  
                           l2597 00F3                             l2589 00EB                             l2863 0382  
                           l2919 0491                             l2857 062B                             l2865 038B  
                           l2873 039E                             l2867 0398                             l2875 03B1  
                           l2891 051D                             l2879 03B7                             u1115 0110  
                           u1045 01DA                             u1125 0120                             u1055 01F2  
                           u1135 0130                             u1240 04FB                             u1065 020A  
                           u1145 015A                             u1155 04CF                             u1235 036A  
                           u1085 024B                             u1175 0444                             u1255 0627  
                           u1195 03CD                             _WPUA 020C                             _WPUB 020D  
                           _WPUC 020E                     __CFG_WRT$OFF 0000                    __CFG_FCMEN$ON 0000  
                  ?_clutchaction 0070                             _main 046A                             _init 0498  
                           fsr0h 0005                             fsr1h 0007                             indf0 0000  
                           fsr0l 0004                             indf1 0001                             fsr1l 0006  
                           btemp 007E                    __CFG_BOREN$ON 0000                             start 0058  
                ?_setCargo_Angle 0070                    __CFG_CSWEN$ON 0000                    __CFG_MCLRE$ON 0000  
                 ?_InitCalibrate 0070                            ?_main 0070                            ?_init 0070  
                  __CFG_WDTE$OFF 0000                   __CFG_DEBUG$OFF 0000             __end_of_getCargoData 0620  
                          _PORTA 000C                            _PORTB 000D                            _PORTC 000E  
                          _TRISA 008C                            _TRISB 008D                            u65_25 0641  
                          _TRISC 008E               setComunicateMode@i 00ED   __size_of_setSPI1sendDataManual 0006  
  __end_of_setSPI1sendDataManual 067E                            _clear 062D                  __end_of_io_init 0678  
                 __pbitbssCOMMON 03B8                   ??_clutchaction 0056                   __CFG_BORV$HIGH 0000  
                          status 0003                            wtemp0 007E                  __initialization 005A  
                   __end_of_main 0498                     __end_of_init 04C3                           ??_main 006E  
                         ??_init 005A                           ?_clear 0070                 __end_of_addAngle 0684  
                         _ANSELA 018C                           _ANSELB 018D                           _ANSELC 018E  
                         _RA2PPS 0E92                           _RC2PPS 0EA2                           i1l2003 057A  
                         _RB7PPS 0E9F                           i1l2251 002A                           i1l2263 004A  
                         i1l2267 004F                           i1l1953 0645         __size_of_setSPI1sendData 0022  
             __size_of_InterMSSP 0054                  ??_InitCalibrate 0056                __end_of_VENDER_ID 068A  
                 __CFG_PWRTE$OFF 0000         __size_of_setSPI2sendData 0024          __size_of_resetTrainData 0009  
    __size_of_Calibrate_download 00E7                   __CFG_STVREN$ON 0000                           _count1 0044  
                         _count2 004A                           _readNG 0052                           _readOK 0053  
        __size_of_initComu_types 006D                        ??_io_init 0056                 __end_of_spi_init 0668  
                    initbuffer@i 0058                     isTrainSt@buf 005E          __end_of__initialization 0084  
          Calibrate_download@buf 0066                   __pcstackCOMMON 0070                     __pidataBANK0 0684  
             __end_of_MACHINE_ID 0688                    __end_of_clear 063A            __size_of_getCargoData 0010  
           __end_of_clutchaction 065E                __end_of_InterMSSP 0058                  __CFG_LPBOREN$ON 0000  
                        ??_clear 0056                       __pbssBANK0 0020                       __pbssBANK1 00A0  
             __size_of_isTrainSt 0036              clutchaction@comannd 0056                 ??_setCargo_Angle 0067  
             __size_of_initCargo 0028               __size_of_readCargo 00E8                  _startTrainBytes 0036  
             __size_of_initTrain 0048                       _isSPI1read 0620                       _isSPI2read 063A  
                   _getCargoData 0610                       __pmaintext 046A               __size_of_spi1_init 0020  
             __size_of_spi2_init 0022                  __CFG_PPS1WAY$ON 0000                ??_setSPI1sendData 0070  
                     __pintentry 0004  Calibrate_download@spi_Read_data 0069                        ?_addAngle 0070  
              ??_setSPI2sendData 0056              __CFG_RSTOSC$HFINT32 0000                       _isEndpoint 03FC  
                   _isCalibrated 03BD                          _SSP1BUF 0211                          _SSP2BUF 0219  
                     _comu_types 00B2                   _resetTrainData 0668                       _initComand 02C4  
                      ?_spi_init 0070                       ??_addAngle 0070                __end_of_isTrainSt 046A  
                     _initbuffer 04C3                   _initComu_types 0257               isEndpoint@spi2data 005C  
                        __ptext1 065E                          __ptext2 0539                          __ptext3 057D  
                        __ptext4 0515                          __ptext5 03BE                          __ptext6 0088  
                        __ptext7 05BD                          __ptext8 0653                __end_of_initCargo 0515  
                        __ptext9 0170                       _read_train 0379                          _command 00C4  
              __end_of_readCargo 0170                          _counta2 00E3                          _io_init 0671  
              __end_of_initTrain 0379                    ?_restartCargo 0070                        _IOCAFbits 0393  
              __end_of_spi1_init 059D                __end_of_spi2_init 055B                          _st_type 0055  
                        clrloop0 0648            _setSPI1sendDataManual 0678             end_of_initialization 0084  
         __end_of_resetTrainData 0671                      ?_isSPI1read 0070                      ?_isSPI2read 0070  
          __size_of_clutchaction 000B                       ??_spi_init 0058                        _VENDER_ID 0688  
               readCargo@buflong 00E5           __end_of_initComu_types 02C4                   spi1_init@dummy 0057  
                    ?_isEndpoint 0070                   ??_restartCargo 0056                        _TRISBbits 008D  
                      _TRISCbits 008E                 __CFG_FEXTOSC$OFF 0000                   spi2_init@dummy 0057  
                   _clutchaction 0653                  ?_resetTrainData 0070       __end_of_Calibrate_download 0257  
                    ?_initComand 0070            __end_of_InitCalibrate 05EB                  ?_initComu_types 0070  
                    ?_initbuffer 0070                      ?_read_train 0070              __size_of_isSPI1read 000D  
            __size_of_isSPI2read 000D                    __pbitnvCOMMON 03C0              start_initialization 005A  
         ?_setSPI1sendDataManual 0070                        _InterMSSP 0004                   _isEndPointTrig 03C0  
                _setSPI1sendData 055B                  _setSPI2sendData 0515              __size_of_isEndpoint 0038  
                    __pdataBANK0 006E                _setComunicateMode 03BE                __size_of_addAngle 0006  
             ?_setComunicateMode 0070                      __pbssBIGRAM 24F0                      __pbssCOMMON 0079  
                      ___latbits 0003                    __pcstackBANK0 0056                    __pcstackBANK1 00E5  
                    _cargo_index 00A0              ??_setComunicateMode 006D              __size_of_initComand 006D  
                     ?_InterMSSP 0070                        _calibdata 00D6              __size_of_initbuffer 002A  
                      _cargoData 0020                _cargoWorkingCount 00DF              __size_of_read_train 0045  
           __end_of_restartCargo 0610            _spi1_send_buffer_data 25F0        Calibrate_download@buflong 0062  
      __end_of_setComunicateMode 03FC                        _direction 004C          readCargo@spi1_Read_data 00EB  
              __size_of_spi_init 000A                        __pswtext1 059D                        __pswtext2 05EB  
                      _isMycargo 03C1                         ?_io_init 0070                        _isTrainSt 0434  
                      _countabuf 0046                        _initCargo 04ED                        _readCargo 0088  
                      _linkAngle 004E          __end_of_setSPI1sendData 057D                        _initTrain 0331  
                 __size_of_clear 000D          __end_of_setSPI2sendData 0539                        _spi1_init 057D  
                      _spi2_init 0539                         _LATAbits 010C                     ??_isSPI1read 0056  
                   ??_isSPI2read 0070                        clear_ram0 0647                         _PIE0bits 0090  
                       _PIE1bits 0091                         _PIE2bits 0092                        _send_data 0051  
                       _PIR0bits 0010                         _PIR1bits 0011                         _PIR2bits 0012  
                readCargo@bufint 00E9          __size_of_setCargo_Angle 0017                     ??_isEndpoint 0057  
                     ?_isTrainSt 0070               __end_of_isSPI1read 062D               __end_of_isSPI2read 0647  
                     ?_initCargo 0070                    _SSP1SSPPSbits 0E22                       ?_readCargo 0070  
                     ?_initTrain 0070                      ??_InterMSSP 0072                    _SSP2SSPPSbits 0E1F  
               ??_resetTrainData 0056                       ?_spi1_init 0070                       ?_spi2_init 0070  
               ??_initComu_types 0056               __end_of_isEndpoint 0434                     ??_initComand 0056  
     __size_of_setComunicateMode 003E                         _addAngle 067E                     ??_initbuffer 0056  
               _spi1_buffer_data 24F0                     ??_read_train 0056               _Calibrate_download 0170  
        ??_setSPI1sendDataManual 0056                   _workingcounta0 03BC                   _workingcounta1 03BB  
                 _workingcounta2 03BA                   _workingcounta3 03B9                 __size_of_io_init 0007  
                     _MACHINE_ID 0686                      _read_count1 0042                      _read_count2 0040  
            ?_Calibrate_download 0070                 ?_setSPI1sendData 0070                         __ptext10 03FC  
                       __ptext11 0678                         __ptext20 0257                         __ptext12 05D4  
                       __ptext21 02C4                         __ptext13 0379                         __ptext30 067E  
                       __ptext22 04ED                         __ptext14 0620                         __ptext23 0610  
                       __ptext15 0671                         __ptext24 0498                         __ptext16 0331  
                       __ptext25 04C3                         __ptext17 0668                         __ptext26 062D  
                       __ptext18 05FF                         __ptext19 0434                         __ptext28 055B  
                       __ptext29 063A                     _SSP1CON1bits 0215                     _SSP1CON3bits 0217  
             __end_of_initComand 0331                 ?_setSPI2sendData 0070                     _SSP2CON1bits 021D  
                 _spi1_Read_data 0079                     _SSP2CON3bits 021F            __size_of_restartCargo 0011  
                       _linkInfo 0030                    __size_of_main 002E                    __size_of_init 002B  
             __end_of_initbuffer 04ED                    ?_getCargoData 0056                   _spi2_Read_data 0050  
             __end_of_read_train 03BE             ??_Calibrate_download 005D                      _isreadTrain 03B8  
                       _spi_init 065E                         int$flags 007E                         _trainPos 003E  
                 _spi2_Send_data 0054                     _SSP1STATbits 0214                 _spi2_buffer_data 26F0  
                   _SSP2STATbits 021C                    _st_dataLength 006E                       _INLVLAbits 038C  
                     _INLVLBbits 038D                       _INLVLCbits 038E                      ??_isTrainSt 0056  
                    _OSCTUNEbits 091E                       _INTCONbits 000B                      ??_initCargo 0067  
                   _restartCargo 05FF                      ??_readCargo 0068                      ??_initTrain 005F  
         __size_of_InitCalibrate 0017                      _send_count1 0048                         intlevel1 0000  
                    ??_spi1_init 0056                      ??_spi2_init 0056                   ??_getCargoData 0066  
              __CFG_CLKOUTEN$OFF 0000                       _OSCFRQbits 091F                   _setCargo_Angle 05BD  
                  __pstringtext1 0686                    __pstringtext2 0688        setSPI1sendDataManual@data 0056  
               read_train@bufint 0058                  _spi1_send_count 003A           __end_of_setCargo_Angle 05D4  
